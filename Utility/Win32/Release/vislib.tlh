// Created by Microsoft (R) C/C++ Compiler Version 14.00.24215.1 (571789a7).
//
// f:\hitetouchpro_work\test_cross_1\utility\win32\release\vislib.tlh
//
// C++ source equivalent of Win32 type library ./ImportFile/VISLIB.DLL
// compiler-generated file created 01/25/18 at 14:37:14 - DO NOT EDIT!

//
// Cross-referenced type libraries:
//
//

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace MSVISIO {

//
// Forward references and typedefs
//

struct __declspec(uuid("00021a98-0000-0000-c000-000000000046"))
/* LIBID */ __Visio;
enum VisUnitCodes;
enum VisWinTypes;
enum VisShapeTypes;
enum VisShapeIDs;
enum VisSectionIndices;
enum VisRowIndices;
enum VisRowTags;
enum VisCellIndices;
enum VisCellVals;
enum VisDefaultColors;
enum VisOpenSaveArgs;
enum VisInsertObjArgs;
enum VisGetSetArgs;
enum VisBoundingBoxArgs;
enum VisHitTestResults;
enum VisSelectArgs;
enum VisUniqueIDArgs;
enum VisExistsFlags;
enum VisCellError;
enum VisRoundFlags;
enum VisRunTypes;
enum VisCharsBias;
enum VisToolbarFlavors;
enum VisDrawSplineFlags;
enum VisGuideTypes;
enum VisFontAttributes;
enum VisStatCodes;
enum VisEventCodes;
enum VisObjectTypes;
enum VisFieldCategories;
enum VisFieldCodes;
enum VisFieldFormats;
enum VisDocVersions;
enum VisMasterProperties;
enum VisFromParts;
enum VisToParts;
enum VisUIObjSets;
enum VisUICmds;
enum VisUICtrlTypes;
enum VisUISpacingTypes;
enum VisUICtrlAtts;
enum VisUICtrlIDs;
enum VisUIIconIDs;
enum VisUIStringIDs;
enum VisScrollbarStates;
enum VisDocModeArgs;
enum VisTraceFlags;
enum VisSpatialRelationCodes;
enum VisSpatialRelationFlags;
enum VisSelectMode;
enum VisSelectItemStatus;
enum VisGeomFlags;
enum VisDrawRegionFlags;
enum VisWindowStates;
enum VisWindowFit;
enum VisWindowScrollX;
enum VisWindowScrollY;
enum VisWindowArrange;
enum VisUIMenuAnimation;
enum VisUIBarPosition;
enum VisUIBarProtection;
enum VisUIButtonState;
enum VisUIButtonStyle;
enum VisUIBarRow;
enum VisDocCleanTargets;
enum VisDocCleanActions;
enum VisZoomBehavior;
enum VisSnapSettings;
enum VisSnapExtensions;
enum VisGlueSettings;
enum VisProtection;
enum VisPaperSizes;
enum VisSavePreviewMode;
enum VisPasteSpecialCodes;
enum VisCutCopyPasteCodes;
enum VisOnComponentEnterCodes;
enum VisDocumentTypes;
enum VisSelectionTypes;
enum VisMeasurementSystem;
enum VisRotationTypes;
enum VisVerticalAlignTypes;
enum VisHorizontalAlignTypes;
enum VisDistributeTypes;
enum VisFlipDirection;
enum VisFlipTypes;
enum VisKeyButtonFlags;
enum VisDefaultSaveFormats;
enum VisTextDisplayQualityTypes;
enum VisPageTypes;
enum VisRegionalUIOptions;
enum VisPrintOutRange;
enum VisPageAndMasterIDs;
enum VisPageSizingBehaviors;
enum VisTypeSelectionTypes;
enum VisArcSweepFlags;
struct __declspec(uuid("000d0700-0000-0000-c000-000000000046"))
/* dual interface */ IVApplication;
struct __declspec(uuid("000d0705-0000-0000-c000-000000000046"))
/* dual interface */ IVDocument;
struct __declspec(uuid("000d0708-0000-0000-c000-000000000046"))
/* dual interface */ IVMasters;
struct __declspec(uuid("000d0707-0000-0000-c000-000000000046"))
/* dual interface */ IVMaster;
struct __declspec(uuid("000d070d-0000-0000-c000-000000000046"))
/* dual interface */ IVShapes;
struct __declspec(uuid("000d070c-0000-0000-c000-000000000046"))
/* dual interface */ IVShape;
struct __declspec(uuid("000d0701-0000-0000-c000-000000000046"))
/* dual interface */ IVCell;
struct __declspec(uuid("000d070e-0000-0000-c000-000000000046"))
/* dual interface */ IVStyle;
struct __declspec(uuid("000d071b-0000-0000-c000-000000000046"))
/* dual interface */ IVEventList;
struct __declspec(uuid("000d071a-0000-0000-c000-000000000046"))
/* dual interface */ IVEvent;
struct __declspec(uuid("000d0724-0000-0000-c000-000000000046"))
/* dual interface */ IVSection;
struct __declspec(uuid("000d0725-0000-0000-c000-000000000046"))
/* dual interface */ IVRow;
struct __declspec(uuid("000d0702-0000-0000-c000-000000000046"))
/* dual interface */ IVCharacters;
struct __declspec(uuid("000d0704-0000-0000-c000-000000000046"))
/* dual interface */ IVConnects;
struct __declspec(uuid("000d0703-0000-0000-c000-000000000046"))
/* dual interface */ IVConnect;
struct __declspec(uuid("000d0709-0000-0000-c000-000000000046"))
/* dual interface */ IVPage;
struct __declspec(uuid("000d0713-0000-0000-c000-000000000046"))
/* dual interface */ IVLayers;
struct __declspec(uuid("000d0712-0000-0000-c000-000000000046"))
/* dual interface */ IVLayer;
struct __declspec(uuid("000d0710-0000-0000-c000-000000000046"))
/* dual interface */ IVWindow;
struct __declspec(uuid("000d070b-0000-0000-c000-000000000046"))
/* dual interface */ IVSelection;
struct __declspec(uuid("000d0711-0000-0000-c000-000000000046"))
/* dual interface */ IVWindows;
struct __declspec(uuid("000d0727-0000-0000-c000-000000000046"))
/* dual interface */ IVMasterShortcut;
struct __declspec(uuid("000d072f-0000-0000-c000-000000000046"))
/* dual interface */ IVDataRecordset;
enum VisLinkReplaceBehavior;
struct __declspec(uuid("000d0730-0000-0000-c000-000000000046"))
/* dual interface */ IVDataConnection;
struct __declspec(uuid("000d0731-0000-0000-c000-000000000046"))
/* dual interface */ IVDataColumns;
struct __declspec(uuid("000d0732-0000-0000-c000-000000000046"))
/* dual interface */ IVDataColumn;
enum VisDataColumnProperties;
enum VisPrimaryKeySettings;
struct __declspec(uuid("000d071e-0000-0000-c000-000000000046"))
/* dual interface */ IVOLEObjects;
struct __declspec(uuid("000d071f-0000-0000-c000-000000000046"))
/* dual interface */ IVOLEObject;
struct __declspec(uuid("000d071d-0000-0000-c000-000000000046"))
/* dual interface */ IVHyperlink;
struct __declspec(uuid("000d0720-0000-0000-c000-000000000046"))
/* dual interface */ IVPaths;
struct __declspec(uuid("000d0721-0000-0000-c000-000000000046"))
/* dual interface */ IVPath;
struct __declspec(uuid("000d0722-0000-0000-c000-000000000046"))
/* dual interface */ IVCurve;
struct __declspec(uuid("000d0723-0000-0000-c000-000000000046"))
/* dual interface */ IVHyperlinks;
enum VisAutoConnectDir;
enum VisMasterTypes;
enum VisGraphicPositionHorizontal;
enum VisGraphicPositionVertical;
struct __declspec(uuid("000d0734-0000-0000-c000-000000000046"))
/* dual interface */ IVGraphicItems;
struct __declspec(uuid("000d0735-0000-0000-c000-000000000046"))
/* dual interface */ IVGraphicItem;
enum VisGraphicItemTypes;
enum VisGraphicField;
struct __declspec(uuid("000d070a-0000-0000-c000-000000000046"))
/* dual interface */ IVPages;
struct __declspec(uuid("000d070f-0000-0000-c000-000000000046"))
/* dual interface */ IVStyles;
struct __declspec(uuid("000d0202-0000-0000-c000-000000000046"))
/* dual interface */ IVUIObject;
struct __declspec(uuid("000d0236-0000-0000-c000-000000000046"))
/* dual interface */ IVMenuSets;
struct __declspec(uuid("000d0232-0000-0000-c000-000000000046"))
/* dual interface */ IVMenuSet;
struct __declspec(uuid("000d0225-0000-0000-c000-000000000046"))
/* dual interface */ IVMenus;
struct __declspec(uuid("000d0222-0000-0000-c000-000000000046"))
/* dual interface */ IVMenu;
struct __declspec(uuid("000d0216-0000-0000-c000-000000000046"))
/* dual interface */ IVMenuItems;
struct __declspec(uuid("000d0212-0000-0000-c000-000000000046"))
/* dual interface */ IVMenuItem;
struct __declspec(uuid("000d0266-0000-0000-c000-000000000046"))
/* dual interface */ IVToolbarSets;
struct __declspec(uuid("000d0262-0000-0000-c000-000000000046"))
/* dual interface */ IVToolbarSet;
struct __declspec(uuid("000d0255-0000-0000-c000-000000000046"))
/* dual interface */ IVToolbars;
struct __declspec(uuid("000d0252-0000-0000-c000-000000000046"))
/* dual interface */ IVToolbar;
struct __declspec(uuid("000d0245-0000-0000-c000-000000000046"))
/* dual interface */ IVToolbarItems;
struct __declspec(uuid("000d0242-0000-0000-c000-000000000046"))
/* dual interface */ IVToolbarItem;
struct __declspec(uuid("000d0285-0000-0000-c000-000000000046"))
/* dual interface */ IVStatusBars;
struct __declspec(uuid("000d0282-0000-0000-c000-000000000046"))
/* dual interface */ IVStatusBar;
struct __declspec(uuid("000d0275-0000-0000-c000-000000000046"))
/* dual interface */ IVStatusBarItems;
struct __declspec(uuid("000d0272-0000-0000-c000-000000000046"))
/* dual interface */ IVStatusBarItem;
struct __declspec(uuid("000d02a5-0000-0000-c000-000000000046"))
/* dual interface */ IVAccelTables;
struct __declspec(uuid("000d02a2-0000-0000-c000-000000000046"))
/* dual interface */ IVAccelTable;
struct __declspec(uuid("000d0295-0000-0000-c000-000000000046"))
/* dual interface */ IVAccelItems;
struct __declspec(uuid("000d0292-0000-0000-c000-000000000046"))
/* dual interface */ IVAccelItem;
struct __declspec(uuid("000d0715-0000-0000-c000-000000000046"))
/* dual interface */ IVFonts;
struct __declspec(uuid("000d0714-0000-0000-c000-000000000046"))
/* dual interface */ IVFont;
struct __declspec(uuid("000d0717-0000-0000-c000-000000000046"))
/* dual interface */ IVColors;
struct __declspec(uuid("000d0716-0000-0000-c000-000000000046"))
/* dual interface */ IVColor;
struct __declspec(uuid("000d0726-0000-0000-c000-000000000046"))
/* dual interface */ IVMasterShortcuts;
struct __declspec(uuid("000d072e-0000-0000-c000-000000000046"))
/* dual interface */ IVDataRecordsets;
enum VisThemeTypes;
enum VisFixedFormatTypes;
enum VisDocExIntent;
struct __declspec(uuid("000d0706-0000-0000-c000-000000000046"))
/* dual interface */ IVDocuments;
struct __declspec(uuid("000d0719-0000-0000-c000-000000000046"))
/* dual interface */ IVAddons;
struct __declspec(uuid("000d0718-0000-0000-c000-000000000046"))
/* dual interface */ IVAddon;
struct __declspec(uuid("000d072d-0000-0000-c000-000000000046"))
/* dual interface */ IVApplicationSettings;
struct __declspec(uuid("000d0213-0000-0000-c000-000000000046"))
/* interface */ IEnumVMenuItem;
struct __declspec(uuid("000d0223-0000-0000-c000-000000000046"))
/* interface */ IEnumVMenu;
struct __declspec(uuid("000d0233-0000-0000-c000-000000000046"))
/* interface */ IEnumVMenuSet;
struct __declspec(uuid("000d0243-0000-0000-c000-000000000046"))
/* interface */ IEnumVToolbarItem;
struct __declspec(uuid("000d0253-0000-0000-c000-000000000046"))
/* interface */ IEnumVToolbar;
struct __declspec(uuid("000d0263-0000-0000-c000-000000000046"))
/* interface */ IEnumVToolbarSet;
struct __declspec(uuid("000d0273-0000-0000-c000-000000000046"))
/* interface */ IEnumVStatusBarItem;
struct __declspec(uuid("000d0283-0000-0000-c000-000000000046"))
/* interface */ IEnumVStatusBar;
struct __declspec(uuid("000d0293-0000-0000-c000-000000000046"))
/* interface */ IEnumVAccelItem;
struct __declspec(uuid("000d02a3-0000-0000-c000-000000000046"))
/* interface */ IEnumVAccelTable;
struct __declspec(uuid("000d0729-0000-0000-c000-000000000046"))
/* dual interface */ IVMSGWrap;
struct __declspec(uuid("000d072a-0000-0000-c000-000000000046"))
/* interface */ IVMouseEvent;
enum VisMouseMoveDragStates;
struct __declspec(uuid("000d072b-0000-0000-c000-000000000046"))
/* interface */ IVKeyboardEvent;
struct __declspec(uuid("000d072c-0000-0000-c000-000000000046"))
/* interface */ IVInvisibleApp;
enum VisRemoveHiddenInfoItems;
enum VisAutoLinkFieldTypes;
enum VisRefreshSettings;
enum VisDataRecordsetAddOptions;
enum VisThemeColors;
enum VisThemeEffects;
enum VisAutoLinkBehaviors;
struct __declspec(uuid("000d0733-0000-0000-c000-000000000046"))
/* dual interface */ IVDataRecordsetChangedEvent;
struct __declspec(uuid("000d071c-0000-0000-c000-000000000046"))
/* dual interface */ IVGlobal;
struct __declspec(uuid("000d0750-0000-0000-c000-000000000046"))
/* dispinterface */ EDocument;
struct __declspec(uuid("000d0b00-0000-0000-c000-000000000046"))
/* dispinterface */ EApplication;
struct __declspec(uuid("000d0b01-0000-0000-c000-000000000046"))
/* dispinterface */ EWindows;
struct __declspec(uuid("000d0b02-0000-0000-c000-000000000046"))
/* dispinterface */ EWindow;
struct __declspec(uuid("000d0b03-0000-0000-c000-000000000046"))
/* dispinterface */ EDocuments;
struct __declspec(uuid("000d0b05-0000-0000-c000-000000000046"))
/* dispinterface */ EStyles;
struct __declspec(uuid("000d0b06-0000-0000-c000-000000000046"))
/* dispinterface */ EStyle;
struct __declspec(uuid("000d0b07-0000-0000-c000-000000000046"))
/* dispinterface */ EMasters;
struct __declspec(uuid("000d0b08-0000-0000-c000-000000000046"))
/* dispinterface */ EMaster;
struct __declspec(uuid("000d0b09-0000-0000-c000-000000000046"))
/* dispinterface */ EPages;
struct __declspec(uuid("000d0b0a-0000-0000-c000-000000000046"))
/* dispinterface */ EPage;
struct __declspec(uuid("000d0b0b-0000-0000-c000-000000000046"))
/* dispinterface */ EShape;
struct __declspec(uuid("000d0b0c-0000-0000-c000-000000000046"))
/* dispinterface */ ECharacters;
struct __declspec(uuid("000d0b0d-0000-0000-c000-000000000046"))
/* dispinterface */ ECell;
struct /* coclass */ Application;
struct /* coclass */ Document;
struct /* coclass */ Documents;
struct /* coclass */ Styles;
struct /* coclass */ Style;
struct /* coclass */ Masters;
struct /* coclass */ Master;
struct /* coclass */ Pages;
struct /* coclass */ Page;
struct /* coclass */ Layers;
struct /* coclass */ Layer;
struct /* coclass */ Shapes;
struct /* coclass */ Shape;
struct /* coclass */ Windows;
struct /* coclass */ Window;
struct /* coclass */ Cell;
struct /* coclass */ Selection;
struct /* coclass */ Font;
struct /* coclass */ Fonts;
struct /* coclass */ Color;
struct /* coclass */ Colors;
struct /* coclass */ Addon;
struct /* coclass */ Addons;
struct /* coclass */ Event;
struct /* coclass */ EventList;
struct /* coclass */ Characters;
struct /* coclass */ Connect;
struct /* coclass */ Connects;
struct /* coclass */ Global;
struct /* coclass */ UIObject;
struct /* coclass */ MenuItem;
struct /* coclass */ MenuItems;
struct /* coclass */ Menu;
struct /* coclass */ Menus;
struct /* coclass */ MenuSet;
struct /* coclass */ MenuSets;
struct /* coclass */ ToolbarItem;
struct /* coclass */ ToolbarItems;
struct /* coclass */ Toolbar;
struct /* coclass */ Toolbars;
struct /* coclass */ ToolbarSet;
struct /* coclass */ ToolbarSets;
struct /* coclass */ StatusBarItem;
struct /* coclass */ StatusBarItems;
struct /* coclass */ StatusBar;
struct /* coclass */ StatusBars;
struct /* coclass */ AccelItem;
struct /* coclass */ AccelItems;
struct /* coclass */ AccelTable;
struct /* coclass */ AccelTables;
struct __declspec(uuid("000d0d0e-0000-0000-c000-000000000046"))
/* dual interface */ IVExtender;
struct __declspec(uuid("000d0d0f-0000-0000-c000-000000000046"))
/* dispinterface */ IVDispExtender;
struct __declspec(uuid("000d0d10-0000-0000-c000-000000000046"))
/* dual interface */ IVAmbients;
struct /* coclass */ Extender;
struct /* coclass */ Hyperlink;
struct /* coclass */ OLEObjects;
struct /* coclass */ OLEObject;
struct /* coclass */ Paths;
struct /* coclass */ Path;
struct /* coclass */ Curve;
struct __declspec(uuid("000d0d11-0000-0000-c000-000000000046"))
/* interface */ IVClientSite;
struct __declspec(uuid("000d1306-0000-0000-c000-000000000046"))
/* dual interface */ IVBUndoManager;
struct __declspec(uuid("000d1305-0000-0000-c000-000000000046"))
/* dual interface */ IVBUndoUnit;
struct __declspec(uuid("000d0728-0000-0000-c000-000000000046"))
/* dual interface */ IVisEventProc;
struct __declspec(uuid("000d0b0e-0000-0000-c000-000000000046"))
/* dispinterface */ ESection;
struct __declspec(uuid("000d0b0f-0000-0000-c000-000000000046"))
/* dispinterface */ ERow;
struct /* coclass */ Hyperlinks;
struct /* coclass */ Section;
struct /* coclass */ Row;
struct /* coclass */ MasterShortcuts;
struct /* coclass */ MasterShortcut;
struct /* coclass */ InvisibleApp;
struct /* coclass */ MSGWrap;
struct __declspec(uuid("000d0d21-0000-0000-c000-000000000046"))
/* interface */ IVisLibOcxSupport;
struct /* coclass */ MouseEvent;
struct /* coclass */ KeyboardEvent;
struct /* coclass */ ApplicationSettings;
enum VisFilterActions;
struct __declspec(uuid("000d0b11-0000-0000-c000-000000000046"))
/* dispinterface */ EDataRecordset;
struct __declspec(uuid("000d0b10-0000-0000-c000-000000000046"))
/* dispinterface */ EDataRecordsets;
struct /* coclass */ DataRecordsets;
struct /* coclass */ DataRecordset;
struct /* coclass */ DataConnection;
struct /* coclass */ DataColumns;
struct /* coclass */ DataColumn;
struct /* coclass */ DataRecordsetChangedEvent;
struct /* coclass */ GraphicItems;
struct /* coclass */ GraphicItem;
typedef enum VisUnitCodes tagVisUnitCodes;
typedef enum VisWinTypes tagVisWinTypes;
typedef enum VisShapeTypes tagVisShapeTypes;
typedef enum VisShapeIDs tagVisShapeIDs;
typedef enum VisSectionIndices tagVisSectionIndices;
typedef enum VisRowIndices tagVisRowIndices;
typedef enum VisRowTags tagVisRowTags;
typedef enum VisCellIndices tagVisCellIndices;
typedef enum VisCellVals tagVisCellVals;
typedef enum VisDefaultColors tagVisDefaultColors;
typedef enum VisOpenSaveArgs tagVisOpenSaveArgs;
typedef enum VisInsertObjArgs tagVisInsertObjArgs;
typedef enum VisGetSetArgs tagVisGetSetArgs;
typedef enum VisBoundingBoxArgs tagVisBoundingBoxArgs;
typedef enum VisHitTestResults tagVisHitTestResults;
typedef enum VisSelectArgs tagVisSelectArgs;
typedef enum VisUniqueIDArgs tagVisUniqueIDArgs;
typedef enum VisExistsFlags tagVisExistsFlags;
typedef enum VisCellError tagVisCellError;
typedef enum VisRoundFlags tagVisRoundFlags;
typedef enum VisRunTypes tagVisRunTypes;
typedef enum VisCharsBias tagVisCharsBias;
typedef enum VisToolbarFlavors tagVisToolbarFlavors;
typedef enum VisDrawSplineFlags tagVisDrawSplineFlags;
typedef enum VisGuideTypes tagVisGuideTypes;
typedef enum VisFontAttributes tagVisFontAttributes;
typedef enum VisStatCodes tagVisStatCodes;
typedef enum VisEventCodes tagVisEventCodes;
typedef enum VisObjectTypes tagVisObjectTypes;
typedef enum VisFieldCategories tagVisFieldCategories;
typedef enum VisFieldCodes tagVisFieldCodes;
typedef enum VisFieldFormats tagVisFieldFormats;
typedef enum VisDocVersions tagVisDocVersions;
typedef enum VisMasterProperties tagVisMasterProperties;
typedef enum VisFromParts tagVisFromParts;
typedef enum VisToParts tagVisToParts;
typedef enum VisUIObjSets tagVisUIObjSets;
typedef enum VisUICmds tagVisUICmds;
typedef enum VisUICtrlTypes tagVisUICtrlTypes;
typedef enum VisUISpacingTypes tagVisUISpacingTypes;
typedef enum VisUICtrlAtts tagVisUICtrlAtts;
typedef enum VisUICtrlIDs tagVisUICtrlIDs;
typedef enum VisUIIconIDs tagVisUIIconIDs;
typedef enum VisUIStringIDs tagVisUIStringIDs;
typedef enum VisScrollbarStates tagVisScrollbarStates;
typedef enum VisDocModeArgs tagVisDocModeArgs;
typedef enum VisTraceFlags tagVisTraceFlags;
typedef enum VisSpatialRelationCodes tagVisSpatialRelationCodes;
typedef enum VisSpatialRelationFlags tagVisSpatialRelationFlags;
typedef enum VisSelectMode tagVisSelectMode;
typedef enum VisSelectItemStatus tagVisSelectItemStatus;
typedef enum VisGeomFlags tagVisGeomFlags;
typedef enum VisDrawRegionFlags tagVisDrawRegionFlags;
typedef enum VisWindowStates tagVisWindowStates;
typedef enum VisWindowFit tagVisWindowFit;
typedef enum VisWindowScrollX tagVisWindowScrollX;
typedef enum VisWindowScrollY tagVisWindowScrollY;
typedef enum VisWindowArrange tagVisWindowArrange;
typedef enum VisUIMenuAnimation tagVisUIMenuAnimation;
typedef enum VisUIBarPosition tagVisUIBarPosition;
typedef enum VisUIBarProtection tagVisUIBarProtection;
typedef enum VisUIButtonState tagVisUIButtonState;
typedef enum VisUIButtonStyle tagVisUIButtonStyle;
typedef enum VisUIBarRow tagVisUIBarRow;
typedef enum VisDocCleanTargets tagVisDocCleanTargets;
typedef enum VisDocCleanActions tagVisDocCleanActions;
typedef enum VisZoomBehavior tagVisZoomBehavior;
typedef enum VisSnapSettings tagVisSnapSettings;
typedef enum VisSnapExtensions tagVisSnapExtensions;
typedef enum VisGlueSettings tagVisGlueSettings;
typedef enum VisProtection tagVisProtection;
typedef enum VisPaperSizes tagVisPaperSizes;
typedef enum VisSavePreviewMode tagVisSavePreviewMode;
typedef enum VisPasteSpecialCodes tagVisPasteSpecialCodes;
typedef enum VisCutCopyPasteCodes tagVisCutCopyPasteCodes;
typedef enum VisOnComponentEnterCodes tagVisOnComponentEnterCodes;
typedef struct IVApplication * LPVISIOAPPLICATION;
typedef struct IVCell * LPVISIOCELL;
typedef struct IVCharacters * LPVISIOCHARS;
typedef struct IVConnect * LPVISIOCONNECT;
typedef struct IVConnects * LPVISIOCONNECTS;
typedef struct IVDocument * LPVISIODOCUMENT;
typedef struct IVDocuments * LPVISIODOCUMENTS;
typedef struct IVMaster * LPVISIOMASTER;
typedef struct IVMasters * LPVISIOMASTERS;
typedef struct IVPage * LPVISIOPAGE;
typedef struct IVPages * LPVISIOPAGES;
typedef struct IVSelection * LPVISIOSELECTION;
typedef struct IVShape * LPVISIOSHAPE;
typedef struct IVShapes * LPVISIOSHAPES;
typedef struct IVStyle * LPVISIOSTYLE;
typedef struct IVStyles * LPVISIOSTYLES;
typedef struct IVWindow * LPVISIOWINDOW;
typedef struct IVWindows * LPVISIOWINDOWS;
typedef struct IVLayer * LPVISIOLAYER;
typedef struct IVLayers * LPVISIOLAYERS;
typedef struct IVFont * LPVISIOFONT;
typedef struct IVFonts * LPVISIOFONTS;
typedef struct IVColor * LPVISIOCOLOR;
typedef struct IVColors * LPVISIOCOLORS;
typedef struct IVAddon * LPVISIOADDON;
typedef struct IVAddons * LPVISIOADDONS;
typedef struct IVEvent * LPVISIOEVENT;
typedef struct IVEventList * LPVISIOEVENTS;
typedef struct IVMenuItem * LPVISIOMENUITEM;
typedef struct IVMenuItems * LPVISIOMENUITEMS;
typedef struct IVMenu * LPVISIOMENU;
typedef struct IVMenus * LPVISIOMENUS;
typedef struct IVMenuSet * LPVISIOMENUSET;
typedef struct IVMenuSets * LPVISIOMENUSETS;
typedef struct IVToolbarItem * LPVISIOTOOLBARITEM;
typedef struct IVToolbarItems * LPVISIOTOOLBARITEMS;
typedef struct IVToolbar * LPVISIOTOOLBAR;
typedef struct IVToolbars * LPVISIOTOOLBARS;
typedef struct IVToolbarSet * LPVISIOTOOLBARSET;
typedef struct IVToolbarSets * LPVISIOTOOLBARSETS;
typedef struct IVStatusBarItem * LPVISIOSTATUSBARITEM;
typedef struct IVStatusBarItems * LPVISIOSTATUSBARITEMS;
typedef struct IVStatusBar * LPVISIOSTATUSBAR;
typedef struct IVStatusBars * LPVISIOSTATUSBARS;
typedef struct IVAccelItem * LPVISIOACCELITEM;
typedef struct IVAccelItems * LPVISIOACCELITEMS;
typedef struct IVAccelTable * LPVISIOACCELTABLE;
typedef struct IVAccelTables * LPVISIOACCELTABLES;
typedef struct IVUIObject * LPVISIOUIOBJECT;
typedef struct IEnumVMenuItem * LPVISIOENUMVMENUITEM;
typedef struct IEnumVMenu * LPVISIOENUMVMENU;
typedef struct IEnumVMenuSet * LPVISIOENUMVMENUSET;
typedef struct IEnumVToolbarItem * LPVISIOENUMVTOOLBARITEM;
typedef struct IEnumVToolbar * LPVISIOENUMVTOOLBAR;
typedef struct IEnumVToolbarSet * LPVISIOENUMVTOOLBARSET;
typedef struct IEnumVStatusBarItem * LPVISIOENUMVSTATUSBARITEM;
typedef struct IEnumVStatusBar * LPVISIOENUMVSTATUSBAR;
typedef struct IEnumVAccelItem * LPVISIOENUMVACCELITEM;
typedef struct IEnumVAccelTable * LPVISIOENUMVACCELTABLE;
typedef struct IVHyperlink * LPVISIOHYPERLINK;
typedef struct IVOLEObjects * LPVISIOOBJECTS;
typedef struct IVOLEObject * LPVISIOOBJECT;
typedef struct IVPaths * LPVISIOPATHS;
typedef struct IVPath * LPVISIOPATH;
typedef struct IVCurve * LPVISIOCURVE;
typedef struct IVHyperlinks * LPVISIOHYPERLINKS;
typedef struct IVSection * LPVISIOSECTION;
typedef struct IVRow * LPVISIOROW;
typedef struct IVMasterShortcuts * LPVISIOMASTERSHORTCUTS;
typedef struct IVMasterShortcut * LPVISIOMASTERSHORTCUT;
typedef struct IVMSGWrap * LPVISIOMSGWRAP;
typedef struct IVApplicationSettings * LPVISIOAPPSETTINGS;
typedef struct IVDataRecordsets * LPVISIODATARECORDSETS;
typedef struct IVDataRecordset * LPVISIODATARECORDSET;
typedef struct IVDataConnection * LPVISIODATACONNECTION;
typedef struct IVDataColumns * LPVISIODATACOLUMNS;
typedef struct IVDataColumn * LPVISIODATACOLUMN;
typedef struct IVDataRecordsetChangedEvent * LPVISIODATARECORDSETCHANGEDEVENT;
typedef struct IVGraphicItems * LPVISIOGRAPHICITEMS;
typedef struct IVGraphicItem * LPVISIOGRAPHICITEM;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(EDocument, __uuidof(EDocument));
_COM_SMARTPTR_TYPEDEF(EApplication, __uuidof(EApplication));
_COM_SMARTPTR_TYPEDEF(EWindows, __uuidof(EWindows));
_COM_SMARTPTR_TYPEDEF(EWindow, __uuidof(EWindow));
_COM_SMARTPTR_TYPEDEF(EDocuments, __uuidof(EDocuments));
_COM_SMARTPTR_TYPEDEF(EStyles, __uuidof(EStyles));
_COM_SMARTPTR_TYPEDEF(EStyle, __uuidof(EStyle));
_COM_SMARTPTR_TYPEDEF(EMasters, __uuidof(EMasters));
_COM_SMARTPTR_TYPEDEF(EMaster, __uuidof(EMaster));
_COM_SMARTPTR_TYPEDEF(EPages, __uuidof(EPages));
_COM_SMARTPTR_TYPEDEF(EPage, __uuidof(EPage));
_COM_SMARTPTR_TYPEDEF(EShape, __uuidof(EShape));
_COM_SMARTPTR_TYPEDEF(ECharacters, __uuidof(ECharacters));
_COM_SMARTPTR_TYPEDEF(ECell, __uuidof(ECell));
_COM_SMARTPTR_TYPEDEF(IVDispExtender, __uuidof(IVDispExtender));
_COM_SMARTPTR_TYPEDEF(IVisEventProc, __uuidof(IVisEventProc));
_COM_SMARTPTR_TYPEDEF(ESection, __uuidof(ESection));
_COM_SMARTPTR_TYPEDEF(ERow, __uuidof(ERow));
_COM_SMARTPTR_TYPEDEF(EDataRecordset, __uuidof(EDataRecordset));
_COM_SMARTPTR_TYPEDEF(EDataRecordsets, __uuidof(EDataRecordsets));
_COM_SMARTPTR_TYPEDEF(IVApplication, __uuidof(IVApplication));
_COM_SMARTPTR_TYPEDEF(IVCurve, __uuidof(IVCurve));
_COM_SMARTPTR_TYPEDEF(IVPath, __uuidof(IVPath));
_COM_SMARTPTR_TYPEDEF(IVPaths, __uuidof(IVPaths));
_COM_SMARTPTR_TYPEDEF(IVAddon, __uuidof(IVAddon));
_COM_SMARTPTR_TYPEDEF(IVAddons, __uuidof(IVAddons));
_COM_SMARTPTR_TYPEDEF(IVApplicationSettings, __uuidof(IVApplicationSettings));
_COM_SMARTPTR_TYPEDEF(IVMSGWrap, __uuidof(IVMSGWrap));
_COM_SMARTPTR_TYPEDEF(IVDocument, __uuidof(IVDocument));
_COM_SMARTPTR_TYPEDEF(IVDataConnection, __uuidof(IVDataConnection));
_COM_SMARTPTR_TYPEDEF(IVFont, __uuidof(IVFont));
_COM_SMARTPTR_TYPEDEF(IVFonts, __uuidof(IVFonts));
_COM_SMARTPTR_TYPEDEF(IVColor, __uuidof(IVColor));
_COM_SMARTPTR_TYPEDEF(IVColors, __uuidof(IVColors));
_COM_SMARTPTR_TYPEDEF(IVMasters, __uuidof(IVMasters));
_COM_SMARTPTR_TYPEDEF(IVMaster, __uuidof(IVMaster));
_COM_SMARTPTR_TYPEDEF(IVGraphicItem, __uuidof(IVGraphicItem));
_COM_SMARTPTR_TYPEDEF(IVGraphicItems, __uuidof(IVGraphicItems));
_COM_SMARTPTR_TYPEDEF(IVShapes, __uuidof(IVShapes));
_COM_SMARTPTR_TYPEDEF(IVShape, __uuidof(IVShape));
_COM_SMARTPTR_TYPEDEF(IVOLEObject, __uuidof(IVOLEObject));
_COM_SMARTPTR_TYPEDEF(IVOLEObjects, __uuidof(IVOLEObjects));
_COM_SMARTPTR_TYPEDEF(IVHyperlink, __uuidof(IVHyperlink));
_COM_SMARTPTR_TYPEDEF(IVHyperlinks, __uuidof(IVHyperlinks));
_COM_SMARTPTR_TYPEDEF(IVAmbients, __uuidof(IVAmbients));
_COM_SMARTPTR_TYPEDEF(IVClientSite, __uuidof(IVClientSite));
_COM_SMARTPTR_TYPEDEF(IVCell, __uuidof(IVCell));
_COM_SMARTPTR_TYPEDEF(IVConnect, __uuidof(IVConnect));
_COM_SMARTPTR_TYPEDEF(IVConnects, __uuidof(IVConnects));
_COM_SMARTPTR_TYPEDEF(IVStyle, __uuidof(IVStyle));
_COM_SMARTPTR_TYPEDEF(IVEventList, __uuidof(IVEventList));
_COM_SMARTPTR_TYPEDEF(IVEvent, __uuidof(IVEvent));
_COM_SMARTPTR_TYPEDEF(IVCharacters, __uuidof(IVCharacters));
_COM_SMARTPTR_TYPEDEF(IVStyles, __uuidof(IVStyles));
_COM_SMARTPTR_TYPEDEF(IVDocuments, __uuidof(IVDocuments));
_COM_SMARTPTR_TYPEDEF(IVSection, __uuidof(IVSection));
_COM_SMARTPTR_TYPEDEF(IVRow, __uuidof(IVRow));
_COM_SMARTPTR_TYPEDEF(IVPage, __uuidof(IVPage));
_COM_SMARTPTR_TYPEDEF(IVLayer, __uuidof(IVLayer));
_COM_SMARTPTR_TYPEDEF(IVLayers, __uuidof(IVLayers));
_COM_SMARTPTR_TYPEDEF(IVSelection, __uuidof(IVSelection));
_COM_SMARTPTR_TYPEDEF(IVPages, __uuidof(IVPages));
_COM_SMARTPTR_TYPEDEF(IVWindow, __uuidof(IVWindow));
_COM_SMARTPTR_TYPEDEF(IVWindows, __uuidof(IVWindows));
_COM_SMARTPTR_TYPEDEF(IVMasterShortcut, __uuidof(IVMasterShortcut));
_COM_SMARTPTR_TYPEDEF(IVMasterShortcuts, __uuidof(IVMasterShortcuts));
_COM_SMARTPTR_TYPEDEF(IVMouseEvent, __uuidof(IVMouseEvent));
_COM_SMARTPTR_TYPEDEF(IVKeyboardEvent, __uuidof(IVKeyboardEvent));
_COM_SMARTPTR_TYPEDEF(IVGlobal, __uuidof(IVGlobal));
_COM_SMARTPTR_TYPEDEF(IVExtender, __uuidof(IVExtender));
_COM_SMARTPTR_TYPEDEF(IVisLibOcxSupport, __uuidof(IVisLibOcxSupport));
_COM_SMARTPTR_TYPEDEF(IVDataRecordset, __uuidof(IVDataRecordset));
_COM_SMARTPTR_TYPEDEF(IVDataColumn, __uuidof(IVDataColumn));
_COM_SMARTPTR_TYPEDEF(IVDataColumns, __uuidof(IVDataColumns));
_COM_SMARTPTR_TYPEDEF(IVDataRecordsets, __uuidof(IVDataRecordsets));
_COM_SMARTPTR_TYPEDEF(IVDataRecordsetChangedEvent, __uuidof(IVDataRecordsetChangedEvent));
_COM_SMARTPTR_TYPEDEF(IVUIObject, __uuidof(IVUIObject));
_COM_SMARTPTR_TYPEDEF(IVInvisibleApp, __uuidof(IVInvisibleApp));
_COM_SMARTPTR_TYPEDEF(IVMenuSets, __uuidof(IVMenuSets));
_COM_SMARTPTR_TYPEDEF(IVMenuSet, __uuidof(IVMenuSet));
_COM_SMARTPTR_TYPEDEF(IEnumVMenuSet, __uuidof(IEnumVMenuSet));
_COM_SMARTPTR_TYPEDEF(IVMenus, __uuidof(IVMenus));
_COM_SMARTPTR_TYPEDEF(IVMenu, __uuidof(IVMenu));
_COM_SMARTPTR_TYPEDEF(IEnumVMenu, __uuidof(IEnumVMenu));
_COM_SMARTPTR_TYPEDEF(IVMenuItems, __uuidof(IVMenuItems));
_COM_SMARTPTR_TYPEDEF(IVMenuItem, __uuidof(IVMenuItem));
_COM_SMARTPTR_TYPEDEF(IEnumVMenuItem, __uuidof(IEnumVMenuItem));
_COM_SMARTPTR_TYPEDEF(IVToolbarSets, __uuidof(IVToolbarSets));
_COM_SMARTPTR_TYPEDEF(IVToolbarSet, __uuidof(IVToolbarSet));
_COM_SMARTPTR_TYPEDEF(IEnumVToolbarSet, __uuidof(IEnumVToolbarSet));
_COM_SMARTPTR_TYPEDEF(IVToolbars, __uuidof(IVToolbars));
_COM_SMARTPTR_TYPEDEF(IVToolbar, __uuidof(IVToolbar));
_COM_SMARTPTR_TYPEDEF(IEnumVToolbar, __uuidof(IEnumVToolbar));
_COM_SMARTPTR_TYPEDEF(IVToolbarItems, __uuidof(IVToolbarItems));
_COM_SMARTPTR_TYPEDEF(IVToolbarItem, __uuidof(IVToolbarItem));
_COM_SMARTPTR_TYPEDEF(IEnumVToolbarItem, __uuidof(IEnumVToolbarItem));
_COM_SMARTPTR_TYPEDEF(IVStatusBars, __uuidof(IVStatusBars));
_COM_SMARTPTR_TYPEDEF(IVStatusBar, __uuidof(IVStatusBar));
_COM_SMARTPTR_TYPEDEF(IEnumVStatusBar, __uuidof(IEnumVStatusBar));
_COM_SMARTPTR_TYPEDEF(IVStatusBarItems, __uuidof(IVStatusBarItems));
_COM_SMARTPTR_TYPEDEF(IVStatusBarItem, __uuidof(IVStatusBarItem));
_COM_SMARTPTR_TYPEDEF(IEnumVStatusBarItem, __uuidof(IEnumVStatusBarItem));
_COM_SMARTPTR_TYPEDEF(IVAccelTables, __uuidof(IVAccelTables));
_COM_SMARTPTR_TYPEDEF(IVAccelTable, __uuidof(IVAccelTable));
_COM_SMARTPTR_TYPEDEF(IEnumVAccelTable, __uuidof(IEnumVAccelTable));
_COM_SMARTPTR_TYPEDEF(IVAccelItems, __uuidof(IVAccelItems));
_COM_SMARTPTR_TYPEDEF(IVAccelItem, __uuidof(IVAccelItem));
_COM_SMARTPTR_TYPEDEF(IEnumVAccelItem, __uuidof(IEnumVAccelItem));
_COM_SMARTPTR_TYPEDEF(IVBUndoManager, __uuidof(IVBUndoManager));
_COM_SMARTPTR_TYPEDEF(IVBUndoUnit, __uuidof(IVBUndoUnit));

//
// Type library items
//

enum __declspec(uuid("000d0c00-0000-0000-c000-000000000046"))
VisUnitCodes
{
    visNumber = 32,
    visPercent = 33,
    visAcre = 36,
    visHectare = 37,
    visDate = 40,
    visDurationUnits = 42,
    visElapsedWeek = 43,
    visElapsedDay = 44,
    visElapsedHour = 45,
    visElapsedMin = 46,
    visElapsedSec = 47,
    visTypeUnits = 48,
    visPicasAndPoints = 49,
    visPoints = 50,
    visPicas = 51,
    visCicerosAndDidots = 52,
    visDidots = 53,
    visCiceros = 54,
    visPageUnits = 63,
    visDrawingUnits = 64,
    visInches = 65,
    visFeet = 66,
    visFeetAndInches = 67,
    visMiles = 68,
    visCentimeters = 69,
    visMillimeters = 70,
    visMeters = 71,
    visKilometers = 72,
    visInchFrac = 73,
    visMileFrac = 74,
    visYards = 75,
    visNautMiles = 76,
    visAngleUnits = 80,
    visDegrees = 81,
    visDegreeMinSec = 82,
    visRadians = 83,
    visMin = 84,
    visSec = 85,
    visUnitsGUID = 95,
    visCurrency = 111,
    visUnitsNURBS = 138,
    visUnitsPolyline = 139,
    visUnitsPoint = 225,
    visUnitsString = 231,
    visUnitsColor = 251,
    visNoCast = 252,
    visUnitsInval = 255
};

enum __declspec(uuid("000d0c01-0000-0000-c000-000000000046"))
VisWinTypes
{
    visWinOther = 0,
    visDrawing = 1,
    visStencil = 2,
    visSheet = 3,
    visIcon = 4,
    visApplication = 5,
    visAnchorBarBuiltIn = 6,
    visDockedStencilBuiltIn = 7,
    visDrawingAddon = 8,
    visStencilAddon = 9,
    visAnchorBarAddon = 10,
    visDockedStencilAddon = 11,
    visPageWin = 128,
    visPageGroupWin = 160,
    visMasterWin = 64,
    visMasterGroupWin = 96,
    visInvalWinID = -1,
    visWinIDCustProp = 1658,
    visWinIDPanZoom = 1653,
    visWinIDSizePos = 1670,
    visWinIDDrawingExplorer = 1721,
    visWinIDFormulaTracing = 1781,
    visWinIDStencilExplorer = 1796,
    visWinIDMasterExplorer = 1916,
    visWinIDShapeSearch = 1669,
    visWinIDExternalData = 2044
};

enum __declspec(uuid("000d0c02-0000-0000-c000-000000000046"))
VisShapeTypes
{
    visTypeInval = 0,
    visTypePage = 1,
    visTypeGroup = 2,
    visTypeShape = 3,
    visTypeForeignObject = 4,
    visTypeGuide = 5,
    visTypeDoc = 6,
    visTypeMetafile = 16,
    visTypeBitmap = 32,
    visTypeIsLinked = 256,
    visTypeIsEmbedded = 512,
    visTypeIsControl = 1024,
    visTypeIsOLE2 = 32768,
    visTypeInk = 64
};

enum __declspec(uuid("000d0c03-0000-0000-c000-000000000046"))
VisShapeIDs
{
    visInvalShapeID = -1,
    visPageSheetID = 0
};

enum __declspec(uuid("000d0c04-0000-0000-c000-000000000046"))
VisSectionIndices
{
    visSectionInval = 255,
    visSectionFirst = 0,
    visSectionLast = 252,
    visSectionNone = 255,
    visSectionObject = 1,
    visSectionMember = 2,
    visSectionCharacter = 3,
    visSectionParagraph = 4,
    visSectionTab = 5,
    visSectionScratch = 6,
    visSectionConnectionPts = 7,
    visSectionExport = 7,
    visSectionTextField = 8,
    visSectionControls = 9,
    visSectionFirstComponent = 10,
    visSectionLastComponent = 239,
    visSectionAction = 240,
    visSectionLayer = 241,
    visSectionUser = 242,
    visSectionProp = 243,
    visSectionHyperlink = 244,
    visSectionReviewer = 245,
    visSectionAnnotation = 246,
    visSectionSmartTag = 247,
    visSectionLastReal = 247
};

enum __declspec(uuid("000d0c05-0000-0000-c000-000000000046"))
VisRowIndices
{
    visRowInval = -1,
    visRowFirst = 0,
    visRowLast = -2,
    visRowNone = -1,
    visRowXFormOut = 1,
    visRowXFormIn = 1,
    visRowLine = 2,
    visRowFill = 3,
    visRowXForm1D = 4,
    visRowEvent = 5,
    visRowLayerMem = 6,
    visRowGuide = 7,
    visRowStyle = 8,
    visRowForeign = 9,
    visRowPage = 10,
    visRowText = 11,
    visRowTextXForm = 12,
    visRowAlign = 14,
    visRowLock = 15,
    visRowHelpCopyright = 16,
    visRowData123 = 16,
    visRowMisc = 17,
    visRowRulerGrid = 18,
    visRowHyperlink = 19,
    visRowDoc = 20,
    visRowImage = 21,
    visRowGroup = 22,
    visRowShapeLayout = 23,
    visRowPageLayout = 24,
    visRowPrintProperties = 25,
    visRowComponent = 0,
    visRowVertex = 1,
    visRowMember = 0,
    visRowCharacter = 0,
    visRowParagraph = 0,
    visRowTab = 0,
    visRowScratch = 0,
    visRowConnectionPts = 0,
    visRowExport = 0,
    visRowField = 0,
    visRowControl = 0,
    visRowAction = 0,
    visRowLayer = 0,
    visRowUser = 0,
    visRowProp = 0,
    visRow1stHyperlink = 0,
    visRowFormat = 0,
    visRowReviewer = 0,
    visRowAnnotation = 0,
    visRowSmartTag = 0
};

enum __declspec(uuid("000d0c06-0000-0000-c000-000000000046"))
VisRowTags
{
    visTagDefault = 0,
    visTagBase = 130,
    visTagRowVoid = 180,
    visTagInvalid = -1,
    visTagComponent = 137,
    visTagMoveTo = 138,
    visTagLineTo = 139,
    visTagArcTo = 140,
    visTagInfiniteLine = 141,
    visTagEllipse = 143,
    visTagEllipticalArcTo = 144,
    visTagSplineBeg = 165,
    visTagSplineSpan = 166,
    visTagPolylineTo = 193,
    visTagNURBSTo = 195,
    visTagTab0 = 136,
    visTagTab2 = 150,
    visTagTab10 = 151,
    visTagTab60 = 181,
    visTagCnnctPt = 153,
    visTagCnnctNamed = 185,
    visTagCnnctPtABCD = 186,
    visTagCnnctNamedABCD = 187,
    visTagCtlPt = 162,
    visTagCtlPtTip = 170
};

enum __declspec(uuid("000d0c07-0000-0000-c000-000000000046"))
VisCellIndices
{
    visCellInval = 255,
    visCellFirst = 0,
    visCellNone = 255,
    visXFormPinX = 0,
    visXFormPinY = 1,
    visXFormWidth = 2,
    visXFormHeight = 3,
    visXFormLocPinX = 4,
    visXFormLocPinY = 5,
    visXFormAngle = 6,
    visXFormFlipX = 7,
    visXFormFlipY = 8,
    visXFormResizeMode = 9,
    visLineWeight = 0,
    visLineColor = 1,
    visLinePattern = 2,
    visLineRounding = 3,
    visLineArrowSize = 4,
    visLineEndArrowSize = 4,
    visLineBeginArrow = 5,
    visLineEndArrow = 6,
    visLineEndCap = 7,
    visLineBeginArrowSize = 8,
    visLineColorTrans = 9,
    visFillForegnd = 0,
    visFillBkgnd = 1,
    visFillPattern = 2,
    visFillShdwForegnd = 3,
    visFillShdwBkgnd = 4,
    visFillShdwPattern = 5,
    visFillForegndTrans = 6,
    visFillBkgndTrans = 7,
    visFillShdwForegndTrans = 8,
    visFillShdwBkgndTrans = 9,
    visFillShdwType = 10,
    visFillShdwOffsetX = 11,
    visFillShdwOffsetY = 12,
    visFillShdwObliqueAngle = 13,
    visFillShdwScaleFactor = 14,
    vis1DBeginX = 0,
    vis1DBeginY = 1,
    vis1DEndX = 2,
    vis1DEndY = 3,
    visEvtCellTheData = 0,
    visEvtCellTheText = 1,
    visEvtCellDblClick = 2,
    visEvtCellXFMod = 3,
    visEvtCellDrop = 4,
    visLayerMember = 0,
    visGuideFlags = 2,
    visStyleIncludesLine = 0,
    visStyleIncludesFill = 1,
    visStyleIncludesText = 2,
    visStyleHidden = 3,
    visFrgnImgOffsetX = 0,
    visFrgnImgOffsetY = 1,
    visFrgnImgWidth = 2,
    visFrgnImgHeight = 3,
    visPageWidth = 0,
    visPageHeight = 1,
    visPageShdwOffsetX = 2,
    visPageShdwOffsetY = 3,
    visPageScale = 4,
    visPageDrawingScale = 5,
    visPageDrawSizeType = 6,
    visPageDrawScaleType = 7,
    visPageInhibitSnap = 26,
    visPageUIVisibility = 34,
    visPageShdwType = 35,
    visPageShdwObliqueAngle = 36,
    visPageShdwScaleFactor = 37,
    visTxtBlkLeftMargin = 0,
    visTxtBlkRightMargin = 1,
    visTxtBlkTopMargin = 2,
    visTxtBlkBottomMargin = 3,
    visTxtBlkVerticalAlign = 4,
    visTxtBlkBkgnd = 5,
    visTxtBlkDefaultTabStop = 6,
    visTxtBlkDirection = 10,
    visTxtBlkBkgndTrans = 11,
    visAlignLeft = 0,
    visAlignCenter = 1,
    visAlignRight = 2,
    visAlignTop = 3,
    visAlignMiddle = 4,
    visAlignBottom = 5,
    visLockWidth = 0,
    visLockHeight = 1,
    visLockMoveX = 2,
    visLockMoveY = 3,
    visLockAspect = 4,
    visLockDelete = 5,
    visLockBegin = 6,
    visLockEnd = 7,
    visLockRotate = 8,
    visLockCrop = 9,
    visLockVtxEdit = 10,
    visLockTextEdit = 11,
    visLockFormat = 12,
    visLockGroup = 13,
    visLockCalcWH = 14,
    visLockSelect = 15,
    visLockCustProp = 16,
    visObjHelp = 0,
    visCopyright = 1,
    visNoObjHandles = 0,
    visNonPrinting = 1,
    visNoCtlHandles = 2,
    visNoAlignBox = 3,
    visUpdateAlignBox = 4,
    visHideText = 5,
    visVerticalText = 6,
    visDynFeedback = 8,
    visGlueType = 9,
    visWalkPref = 10,
    visBegTrigger = 11,
    visEndTrigger = 12,
    visLOFlags = 13,
    visLOInteraction = 14,
    visLOBehavior = 15,
    visComment = 16,
    visDropSource = 17,
    visNoLiveDynamics = 18,
    visObjLocalizeMerge = 19,
    visObjCalendar = 25,
    visObjLangID = 26,
    visObjKeywords = 27,
    visObjDropOnPageScale = 28,
    visObjTheme = 29,
    visXRulerDensity = 0,
    visYRulerDensity = 1,
    visXRulerOrigin = 4,
    visYRulerOrigin = 5,
    visXGridDensity = 6,
    visYGridDensity = 7,
    visXGridSpacing = 8,
    visYGridSpacing = 9,
    visXGridOrigin = 10,
    visYGridOrigin = 11,
    visDocOutputFormat = 0,
    visDocLockPreview = 1,
    visDocMetric = 2,
    visDocAddMarkup = 3,
    visDocViewMarkup = 4,
    visDocPreviewQuality = 9,
    visDocPreviewScope = 10,
    visDocLangID = 19,
    visImageGamma = 0,
    visImageContrast = 1,
    visImageBrightness = 2,
    visImageSharpen = 3,
    visImageBlur = 4,
    visImageDenoise = 5,
    visImageTransparency = 6,
    visGroupSelectMode = 0,
    visGroupDisplayMode = 1,
    visGroupIsDropTarget = 2,
    visGroupIsSnapTarget = 3,
    visGroupIsTextEditTarget = 4,
    visGroupDontMoveChildren = 5,
    visSLOPermX = 0,
    visSLOPermY = 1,
    visSLOPermeablePlace = 2,
    visSLOFixedCode = 8,
    visSLOPlowCode = 9,
    visSLORouteStyle = 10,
    visSLOPlaceStyle = 11,
    visSLOConFixedCode = 12,
    visSLOJumpCode = 13,
    visSLOJumpStyle = 14,
    visSLOJumpDirX = 16,
    visSLOJumpDirY = 17,
    visSLOPlaceFlip = 18,
    visSLOLineRouteExt = 19,
    visSLOSplit = 20,
    visSLOSplittable = 21,
    visPLOResizePage = 0,
    visPLOEnableGrid = 1,
    visPLODynamicsOff = 2,
    visPLOCtrlAsInput = 3,
    visPLOPlaceStyle = 8,
    visPLORouteStyle = 9,
    visPLOPlaceDepth = 10,
    visPLOPlowCode = 11,
    visPLOJumpCode = 12,
    visPLOJumpStyle = 13,
    visPLOJumpDirX = 14,
    visPLOJumpDirY = 15,
    visPLOLineToNodeX = 16,
    visPLOLineToNodeY = 17,
    visPLOBlockSizeX = 18,
    visPLOBlockSizeY = 19,
    visPLOAvenueSizeX = 20,
    visPLOAvenueSizeY = 21,
    visPLOLineToLineX = 22,
    visPLOLineToLineY = 23,
    visPLOJumpFactorX = 24,
    visPLOJumpFactorY = 25,
    visPLOLineAdjustFrom = 26,
    visPLOLineAdjustTo = 27,
    visPLOPlaceFlip = 28,
    visPLOLineRouteExt = 29,
    visPLOSplit = 30,
    visCharacterFont = 0,
    visCharacterColor = 1,
    visCharacterStyle = 2,
    visCharacterCase = 3,
    visCharacterPos = 4,
    visCharacterFontScale = 5,
    visCharacterLocale = 6,
    visCharacterSize = 7,
    visCharacterDblUnderline = 8,
    visCharacterOverline = 9,
    visCharacterStrikethru = 10,
    visCharacterPerpendicular = 12,
    visCharacterDoubleStrikethrough = 13,
    visCharacterRTLText = 14,
    visCharacterUseVertical = 15,
    visCharacterLetterspace = 16,
    visCharacterColorTrans = 17,
    visCharacterAsianFont = 51,
    visCharacterComplexScriptFont = 52,
    visCharacterLocalizeFont = 53,
    visCharacterComplexScriptSize = 54,
    visCharacterLangID = 57,
    visIndentFirst = 0,
    visIndentLeft = 1,
    visIndentRight = 2,
    visSpaceLine = 3,
    visSpaceBefore = 4,
    visSpaceAfter = 5,
    visHorzAlign = 6,
    visBulletIndex = 7,
    visBulletString = 8,
    visBulletFont = 9,
    visLocalizeBulletFont = 10,
    visBulletFontSize = 11,
    visTextPosAfterBullet = 12,
    visFlags = 13,
    visTabStopCount = 0,
    visTabPos = 1,
    visTabAlign = 2,
    visScratchX = 0,
    visScratchY = 1,
    visScratchA = 2,
    visScratchB = 3,
    visScratchC = 4,
    visScratchD = 5,
    visCnnctX = 0,
    visCnnctY = 1,
    visCnnctDirX = 2,
    visCnnctDirY = 3,
    visCnnctType = 4,
    visCnnctAutoGen = 5,
    visCnnctA = 2,
    visCnnctB = 3,
    visCnnctC = 4,
    visCnnctD = 5,
    visFieldCell = 0,
    visFieldEditMode = 1,
    visFieldFormat = 2,
    visFieldType = 3,
    visFieldUICategory = 4,
    visFieldUICode = 5,
    visFieldUIFormat = 6,
    visFieldCalendar = 7,
    visFieldObjectKind = 10,
    visCtlX = 0,
    visCtlY = 1,
    visCtlXDyn = 2,
    visCtlYDyn = 3,
    visCtlXCon = 4,
    visCtlYCon = 5,
    visCtlGlue = 6,
    visCtlType = 7,
    visCtlTip = 8,
    visCompNoFill = 0,
    visCompNoLine = 1,
    visCompNoShow = 2,
    visCompNoSnap = 3,
    visCompPath = 4,
    visX = 0,
    visY = 1,
    visBow = 2,
    visInfiniteLineX1 = 0,
    visInfiniteLineY1 = 1,
    visInfiniteLineX2 = 2,
    visInfiniteLineY2 = 3,
    visEllipseCenterX = 0,
    visEllipseCenterY = 1,
    visEllipseMajorX = 2,
    visEllipseMajorY = 3,
    visEllipseMinorX = 4,
    visEllipseMinorY = 5,
    visControlX = 2,
    visControlY = 3,
    visEccentricityAngle = 4,
    visAspectRatio = 5,
    visSplineKnot = 2,
    visSplineKnot2 = 3,
    visSplineKnot3 = 4,
    visSplineDegree = 5,
    visPolylineData = 2,
    visNURBSKnot = 2,
    visNURBSWeight = 3,
    visNURBSKnotPrev = 4,
    visNURBSWeightPrev = 5,
    visNURBSData = 6,
    visActionMenu = 0,
    visActionPrompt = 1,
    visActionHelp = 2,
    visActionAction = 3,
    visActionChecked = 4,
    visActionDisabled = 5,
    visActionReadOnly = 6,
    visActionInvisible = 7,
    visActionBeginGroup = 8,
    visActionTagName = 14,
    visActionButtonFace = 15,
    visActionSortKey = 16,
    visLayerName = 0,
    visLayerColor = 2,
    visLayerStatus = 3,
    visLayerVisible = 4,
    visLayerPrint = 5,
    visLayerActive = 6,
    visLayerLock = 7,
    visLayerSnap = 8,
    visLayerGlue = 9,
    visLayerNameUniv = 10,
    visLayerColorTrans = 11,
    visUserValue = 0,
    visUserPrompt = 1,
    visCustPropsValue = 0,
    visCustPropsPrompt = 1,
    visCustPropsLabel = 2,
    visCustPropsFormat = 3,
    visCustPropsSortKey = 4,
    visCustPropsType = 5,
    visCustPropsInvis = 6,
    visCustPropsAsk = 7,
    visCustPropsLangID = 14,
    visCustPropsCalendar = 15,
    visHLinkDescription = 0,
    visHLinkAddress = 1,
    visHLinkSubAddress = 2,
    visHLinkExtraInfo = 3,
    visHLinkFrame = 4,
    visHLinkNewWin = 5,
    visHLinkDefault = 7,
    visHLinkInvisible = 8,
    visHLinkSortKey = 15,
    visReviewerName = 0,
    visReviewerInitials = 1,
    visReviewerColor = 2,
    visReviewerReviewerID = 3,
    visReviewerCurrentIndex = 4,
    visAnnotationX = 0,
    visAnnotationY = 1,
    visAnnotationReviewerID = 2,
    visAnnotationMarkerIndex = 3,
    visAnnotationDate = 4,
    visAnnotationComment = 5,
    visAnnotationLangID = 6,
    visSmartTagX = 0,
    visSmartTagY = 1,
    visSmartTagName = 2,
    visSmartTagXJustify = 3,
    visSmartTagYJustify = 4,
    visSmartTagDisplayMode = 5,
    visSmartTagButtonFace = 6,
    visSmartTagDisabled = 7,
    visSmartTagDescription = 15,
    visPrintPropertiesLeftMargin = 0,
    visPrintPropertiesRightMargin = 1,
    visPrintPropertiesTopMargin = 2,
    visPrintPropertiesBottomMargin = 3,
    visPrintPropertiesScaleX = 4,
    visPrintPropertiesScaleY = 5,
    visPrintPropertiesPagesX = 6,
    visPrintPropertiesPagesY = 7,
    visPrintPropertiesCenterX = 8,
    visPrintPropertiesCenterY = 9,
    visPrintPropertiesOnPage = 10,
    visPrintPropertiesPrintGrid = 11,
    visPrintPropertiesPageOrientation = 16,
    visPrintPropertiesPaperKind = 17,
    visPrintPropertiesPaperSource = 18,
    visLockFromGroupFormat = 17,
    visLockThemeColors = 18,
    visLockThemeEffects = 19,
    visEvtCellMultiDrop = 22
};

enum __declspec(uuid("000d0c08-0000-0000-c000-000000000046"))
VisCellVals
{
    visXFormResizeDontCare = 0,
    visXFormResizeSpread = 1,
    visXFormResizeScale = 2,
    visArrowSizeVerySmall = 0,
    visArrowSizeSmall = 1,
    visArrowSizeMedium = 2,
    visArrowSizeLarge = 3,
    visArrowSizeVeryLarge = 4,
    visArrowSizeJumbo = 5,
    visArrowSizeColossal = 6,
    visNoFill = 0,
    visSolid = 1,
    visWideUpDiagonal = 2,
    visWideCross = 3,
    visWideDiagonalCross = 4,
    visWideDownDiagonal = 5,
    visWideHorz = 6,
    visWideVert = 7,
    visBackDotsMini = 8,
    visHalfAndHalf = 9,
    visForeDotsMini = 10,
    visForeDotsNarrow = 11,
    visForeDotsWide = 12,
    visThickHorz = 13,
    visThickVertical = 14,
    visThickDownDiagonal = 15,
    visThickUpDiagonal = 16,
    visThickDiagonalCross = 17,
    visBackDotsWide = 18,
    visThinHorz = 19,
    visThinVert = 20,
    visThinDownDiagonal = 21,
    visThinUpDiagonal = 22,
    visThinCross = 23,
    visThinDiagonalCross = 24,
    visGuideXActive = 1024,
    visGuideYActive = 2048,
    visPrintSetup = 0,
    visTight = 1,
    visStandard = 2,
    visCustom = 3,
    visLogical = 4,
    visDSMetric = 5,
    visDSEngr = 6,
    visDSArch = 7,
    visNoScale = 0,
    visArchitectural = 1,
    visEngineering = 2,
    visScaleCustom = 3,
    visScaleMetric = 4,
    visScaleMechanical = 5,
    visVertTop = 0,
    visVertMiddle = 1,
    visVertBottom = 2,
    visTxtBlkOpaque = 255,
    visTxtBlkLeftToRight = 0,
    visTxtBlkTopToBottom = 1,
    visDynFBDefault = 0,
    visDynFBUCon3Leg = 1,
    visDynFBUCon5Leg = 2,
    visGlueTypeDefault = 0,
    visGlueTypeTrigger = 1,
    visGlueTypeWalking = 2,
    visGlueTypeNoWalking = 4,
    visGlueTypeNoWalkingTo = 8,
    visWalkPrefBegNS = 1,
    visWalkPrefEndNS = 2,
    visLOFlagsVisDecides = 0,
    visLOFlagsPlacable = 1,
    visLOFlagsRoutable = 2,
    visLOFlagsDont = 4,
    visLOFlagsPNRGroup = 8,
    visLOIPlaceNormal = 0,
    visLOIPlaceXPermeable = 2,
    visLOIPlaceYPermeable = 4,
    visLOIRouteNormal = 0,
    visLOBPlaceNormal = 0,
    visLOBRouteNormal = 0,
    visLOBRouteRightAng = 1,
    visLOBRouteStraight = 2,
    visLOBRouteFlowNS = 5,
    visLOBRouteFlowWE = 6,
    visLOBRouteTreeNS = 7,
    visLOBRouteTreeWE = 8,
    visLOBRouteManual = 1024,
    visRulerFine = 32,
    visRulerNormal = 16,
    visRulerCoarse = 8,
    visRulerFixed = 0,
    visGridFine = 8,
    visGridNormal = 4,
    visGridCoarse = 2,
    visGridFixed = 0,
    visDocPreviewQualityDraft = 0,
    visDocPreviewQualityDetailed = 1,
    visDocPreviewScope1stPage = 0,
    visDocPreviewScopeNone = 1,
    visDocPreviewScopeAllPages = 2,
    visPPOSameAsPrinter = 0,
    visPPOPortrait = 1,
    visPPOLandscape = 2,
    visGrpSelModeGroupOnly = 0,
    visGrpSelModeGroup1st = 1,
    visGrpSelModeMembers1st = 2,
    visGrpDispModeNone = 0,
    visGrpDispModeBack = 1,
    visGrpDispModeFront = 2,
    visLORouteDefault = 0,
    visLORouteRightAngle = 1,
    visLORouteStraight = 2,
    visLORouteOrgChartNS = 3,
    visLORouteOrgChartWE = 4,
    visLORouteFlowchartNS = 5,
    visLORouteFlowchartWE = 6,
    visLORouteTreeNS = 7,
    visLORouteTreeWE = 8,
    visLORouteNetwork = 9,
    visLORouteOrgChartSN = 10,
    visLORouteOrgChartEW = 11,
    visLORouteFlowchartSN = 12,
    visLORouteFlowchartEW = 13,
    visLORouteTreeSN = 14,
    visLORouteTreeEW = 15,
    visLORouteCenterToCenter = 16,
    visLORouteSimpleNS = 17,
    visLORouteSimpleWE = 18,
    visLORouteSimpleSN = 19,
    visLORouteSimpleEW = 20,
    visLORouteSimpleHV = 21,
    visLORouteSimpleVH = 22,
    visLOJumpStyleDefault = 0,
    visLOJumpStyleArc = 1,
    visLOJumpStyleGap = 2,
    visLOJumpStyleSquare = 3,
    visLOJumpStyleTriangle = 4,
    visLOJumpStyle2Point = 5,
    visLOJumpStyle3Point = 6,
    visLOJumpStyle4Point = 7,
    visLOJumpStyle5Point = 8,
    visLOJumpStyle6Point = 9,
    visLOJumpDirXDefault = 0,
    visLOJumpDirXUp = 1,
    visLOJumpDirXDown = 2,
    visLOJumpDirYDefault = 0,
    visLOJumpDirYLeft = 1,
    visLOJumpDirYRight = 2,
    visLOFlipDefault = 0,
    visLOFlipX = 1,
    visLOFlipY = 2,
    visLOFlipRotate = 4,
    visLOFlipNone = 8,
    visLORouteExtDefault = 0,
    visLORouteExtStraight = 1,
    visLORouteExtNURBS = 2,
    visSLOFixedPlacement = 1,
    visSLOFixedPlow = 2,
    visSLOFixedPermeablePlow = 4,
    visSLOFixedConnPtsIgnore = 32,
    visSLOFixedConnPtsOnly = 64,
    visSLOFixedNoFoldToShape = 128,
    visSLOPlowDefault = 0,
    visSLOPlowNever = 1,
    visSLOPlowAlways = 2,
    visSLOConFixedRerouteFreely = 0,
    visSLOConFixedRerouteAsNeeded = 1,
    visSLOConFixedRerouteNever = 2,
    visSLOConFixedRerouteOnCrossover = 3,
    visSLOConFixedByAlgFrom = 4,
    visSLOConFixedByAlgTo = 5,
    visSLOConFixedByAlgFromTo = 6,
    visSLOJumpDefault = 0,
    visSLOJumpNever = 1,
    visSLOJumpAlways = 2,
    visSLOJumpOther = 3,
    visSLOJumpNeither = 4,
    visPLOPlaceDefault = 0,
    visPLOPlaceTopToBottom = 1,
    visPLOPlaceLeftToRight = 2,
    visPLOPlaceRadial = 3,
    visPLOPlaceBottomToTop = 4,
    visPLOPlaceRightToLeft = 5,
    visPLOPlaceCircular = 6,
    visPLOPlaceCompactDownRight = 7,
    visPLOPlaceCompactRightDown = 8,
    visPLOPlaceCompactRightUp = 9,
    visPLOPlaceCompactUpRight = 10,
    visPLOPlaceCompactUpLeft = 11,
    visPLOPlaceCompactLeftUp = 12,
    visPLOPlaceCompactLeftDown = 13,
    visPLOPlaceCompactDownLeft = 14,
    visPLOPlaceParentDefault = 15,
    visPLOPlaceHierarchyTopToBottomLeft = 16,
    visPLOPlaceHierarchyTopToBottomCenter = 17,
    visPLOPlaceHierarchyTopToBottomRight = 18,
    visPLOPlaceHierarchyBottomToTopLeft = 19,
    visPLOPlaceHierarchyBottomToTopCenter = 20,
    visPLOPlaceHierarchyBottomToTopRight = 21,
    visPLOPlaceHierarchyLeftToRightTop = 22,
    visPLOPlaceHierarchyLeftToRightMiddle = 23,
    visPLOPlaceHierarchyLeftToRightBottom = 24,
    visPLOPlaceHierarchyRightToLeftTop = 25,
    visPLOPlaceHierarchyRightToLeftMiddle = 26,
    visPLOPlaceHierarchyRightToLeftBottom = 27,
    visLOPlaceDefault = 0,
    visLOPlaceTopToBottom = 1,
    visLOPlaceLeftToRight = 2,
    visLOPlaceRadial = 3,
    visLOPlaceBottomToTop = 4,
    visLOPlaceRightToLeft = 5,
    visLOPlaceCircular = 6,
    visLOPlaceCompactDownRight = 7,
    visLOPlaceCompactRightDown = 8,
    visLOPlaceCompactRightUp = 9,
    visLOPlaceCompactUpRight = 10,
    visLOPlaceCompactUpLeft = 11,
    visLOPlaceCompactLeftUp = 12,
    visLOPlaceCompactLeftDown = 13,
    visLOPlaceCompactDownLeft = 14,
    visLOPlaceParentDefault = 15,
    visLOPlaceHierarchyTopToBottomLeft = 16,
    visLOPlaceHierarchyTopToBottomCenter = 17,
    visLOPlaceHierarchyTopToBottomRight = 18,
    visLOPlaceHierarchyBottomToTopLeft = 19,
    visLOPlaceHierarchyBottomToTopCenter = 20,
    visLOPlaceHierarchyBottomToTopRight = 21,
    visLOPlaceHierarchyLeftToRightTop = 22,
    visLOPlaceHierarchyLeftToRightMiddle = 23,
    visLOPlaceHierarchyLeftToRightBottom = 24,
    visLOPlaceHierarchyRightToLeftTop = 25,
    visLOPlaceHierarchyRightToLeftMiddle = 26,
    visLOPlaceHierarchyRightToLeftBottom = 27,
    visPLOPlaceDepthDefault = 0,
    visPLOPlaceDepthMedium = 1,
    visPLOPlaceDepthDeep = 2,
    visPLOPlaceDepthShallow = 3,
    visPLOPlowNone = 0,
    visPLOPlowAll = 1,
    visPLOJumpNone = 0,
    visPLOJumpHorizontal = 1,
    visPLOJumpVertical = 2,
    visPLOJumpLastRouted = 3,
    visPLOJumpDisplayOrder = 4,
    visPLOJumpReverseDisplayOrder = 5,
    visPLOJumpProhibitAll = 6,
    visPLOLineAdjustFromNotRelated = 0,
    visPLOLineAdjustFromAll = 1,
    visPLOLineAdjustFromNone = 2,
    visPLOLineAdjustFromRoutingDefault = 3,
    visPLOLineAdjustToDefault = 0,
    visPLOLineAdjustToAll = 1,
    visPLOLineAdjustToNone = 2,
    visPLOLineAdjustToRelated = 3,
    visBold = 1,
    visItalic = 2,
    visUnderLine = 4,
    visSmallCaps = 8,
    visComplexBold = 16,
    visComplexItalic = 32,
    visCaseNormal = 0,
    visCaseAllCaps = 1,
    visCaseInitialCaps = 2,
    visPosNormal = 0,
    visPosSuper = 1,
    visPosSub = 2,
    visHorzLeft = 0,
    visHorzCenter = 1,
    visHorzRight = 2,
    visHorzJustify = 3,
    visHorzForce = 4,
    visHorzDistribute = 4,
    visHorzJustifyLow = 5,
    visHorzJustifyMedium = 6,
    visHorzJustifyHigh = 7,
    visTabStopLeft = 0,
    visTabStopCenter = 1,
    visTabStopRight = 2,
    visTabStopDecimal = 3,
    visTabStopComma = 4,
    visCnnctTypeInward = 0,
    visCnnctTypeOutward = 1,
    visCnnctTypeInwardOutward = 2,
    visCtlProportional = 0,
    visCtlLocked = 1,
    visCtlOffsetMin = 2,
    visCtlOffsetMid = 3,
    visCtlOffsetMax = 4,
    visCtlProportionalHidden = 5,
    visCtlLockedHidden = 6,
    visCtlOffsetMinHidden = 7,
    visCtlOffsetMidHidden = 8,
    visCtlOffsetMaxHidden = 9,
    visNoLayerColor = 255,
    visLayerValid = 0,
    visLayerDeleted = 1,
    visLayerAvailable = 2,
    visPropTypeString = 0,
    visPropTypeListFix = 1,
    visPropTypeNumber = 2,
    visPropTypeBool = 3,
    visPropTypeListVar = 4,
    visPropTypeDate = 5,
    visPropTypeDuration = 6,
    visPropTypeCurrency = 7,
    visCalWestern = 0,
    visCalArabicHijri = 1,
    visCalHebrewLunar = 2,
    visCalChineseTaiwan = 3,
    visCalJapaneseEmperor = 4,
    visCalThaiBuddhism = 5,
    visCalThaiBuddhist = 5,
    visCalKoreanDanki = 6,
    visCalSakaEra = 7,
    visCalTranslitEnglish = 8,
    visCalTranslitFrench = 9,
    visPLOSplitNone = 0,
    visPLOSplitAllow = 1,
    visSLOSplitNone = 0,
    visSLOSplitAllow = 1,
    visSLOSplittableNone = 0,
    visSLOSplittableAllow = 1,
    visFSTPageDefault = 0,
    visFSTSimple = 1,
    visFSTOblique = 2,
    visUIVNormal = 0,
    visUIVHidden = 1,
    visLocFontIfArialOrSym = 0,
    visLocFontAlways = 1,
    visLocFontNever = 2,
    visSmartTagXJustifyLeft = 0,
    visSmartTagXJustifyCenter = 1,
    visSmartTagXJustifyRight = 2,
    visSmartTagYJustifyTop = 0,
    visSmartTagYJustifyMiddle = 1,
    visSmartTagYJustifyBottom = 2,
    visSmartTagDispModeMouseOver = 0,
    visSmartTagDispModeShapeSelected = 1,
    visSmartTagDispModeAlways = 2,
    visTFOKStandard = 0,
    visTFOKHorizontalInVertical = 1,
    visPPFlagsRTLText = 1
};

enum __declspec(uuid("000d0c09-0000-0000-c000-000000000046"))
VisDefaultColors
{
    visTransparent = 0,
    visBlack = 0,
    visWhite = 1,
    visRed = 2,
    visGreen = 3,
    visBlue = 4,
    visYellow = 5,
    visMagenta = 6,
    visCyan = 7,
    visDarkRed = 8,
    visDarkGreen = 9,
    visDarkBlue = 10,
    visDarkYellow = 11,
    visPurple = 12,
    visDarkCyan = 13,
    visGray = 14,
    visGray10 = 15,
    visGray20 = 16,
    visGray30 = 17,
    visGray40 = 18,
    visDarkGray = 19,
    visGray50 = 19,
    visGray60 = 20,
    visGray70 = 21,
    visGray80 = 22,
    visGray90 = 23
};

enum __declspec(uuid("000d0c0a-0000-0000-c000-000000000046"))
VisOpenSaveArgs
{
    visOpenCopy = 1,
    visOpenRO = 2,
    visOpenDocked = 4,
    visOpenDontList = 8,
    visOpenMinimized = 16,
    visOpenRW = 32,
    visOpenHidden = 64,
    visOpenMacrosDisabled = 128,
    visOpenNoWorkspace = 256,
    visOpenDeclineAutoRefresh = 1024,
    visAddDocked = 4,
    visAddMinimized = 16,
    visAddHidden = 64,
    visAddMacrosDisabled = 128,
    visAddNoWorkspace = 256,
    visAddStencil = 512,
    visAddDeclineAutoRefresh = 1024,
    visSaveAsRO = 1,
    visSaveAsWS = 2,
    visSaveAsListInMRU = 4,
    visSavePrevNone = 0,
    visSavePrevDraft1st = 1,
    visSavePrevDetailed1st = 2,
    visSavePrevDraftAll = 4,
    visSavePrevDetailedAll = 8
};

enum __declspec(uuid("000d0c0b-0000-0000-c000-000000000046"))
VisInsertObjArgs
{
    visInsertLink = 8,
    visInsertIcon = 16,
    visInsertDontShow = 4096,
    visInsertAsControl = 8192,
    visInsertAsEmbed = 16384,
    visInsertNoDesignModeTransition = 256
};

enum __declspec(uuid("000d0c0c-0000-0000-c000-000000000046"))
VisGetSetArgs
{
    visGetFloats = 0,
    visGetTruncatedInts = 1,
    visGetRoundedInts = 2,
    visGetStrings = 3,
    visGetFormulas = 4,
    visGetFormulasU = 5,
    visSetFormulas = 1,
    visSetBlastGuards = 2,
    visSetTestCircular = 4,
    visSetUniversalSyntax = 8
};

enum __declspec(uuid("000d0c22-0000-0000-c000-000000000046"))
VisBoundingBoxArgs
{
    visBBoxUprightWH = 1,
    visBBoxUprightText = 2,
    visBBoxExtents = 4,
    visBBoxIncludeHidden = 16,
    visBBoxIgnoreVisible = 32,
    visBBoxIncludeDataGraphics = 64,
    visBBoxIncludeGuides = 4096,
    visBBoxDrawingCoords = 8192,
    visBBoxNoNonPrint = 16384
};

enum __declspec(uuid("000d0c23-0000-0000-c000-000000000046"))
VisHitTestResults
{
    visHitOutside = 0,
    visHitOnBoundary = 1,
    visHitInside = 2
};

enum __declspec(uuid("000d0c0d-0000-0000-c000-000000000046"))
VisSelectArgs
{
    visDeselect = 1,
    visSelect = 2,
    visSubSelect = 3,
    visSelectAll = 4,
    visDeselectAll = 256
};

enum __declspec(uuid("000d0c0e-0000-0000-c000-000000000046"))
VisUniqueIDArgs
{
    visGetGUID = 0,
    visGetOrMakeGUID = 1,
    visDeleteGUID = 2
};

enum __declspec(uuid("000d0c0f-0000-0000-c000-000000000046"))
VisExistsFlags
{
    visExistsLocally = 1,
    visExistsAnywhere = 0
};

enum __declspec(uuid("000d0c10-0000-0000-c000-000000000046"))
VisCellError
{
    visErrorSuccess = 0,
    visErrorDivideByZero = 39,
    visErrorValue = 47,
    visErrorReference = 55,
    visErrorName = 61,
    visErrorNumber = 68,
    visErrorNotAvailable = 74
};

enum __declspec(uuid("000d0c11-0000-0000-c000-000000000046"))
VisRoundFlags
{
    visTruncate = 0,
    visRound = 1
};

enum __declspec(uuid("000d0c12-0000-0000-c000-000000000046"))
VisRunTypes
{
    visCharPropRow = 1,
    visParaPropRow = 2,
    visTabPropRow = 3,
    visWordRun = 10,
    visParaRun = 11,
    visFieldRun = 20
};

enum __declspec(uuid("000d0c13-0000-0000-c000-000000000046"))
VisCharsBias
{
    visBiasLetVisioChoose = 0,
    visBiasLeft = 1,
    visBiasRight = 2
};

enum __declspec(uuid("000d0c14-0000-0000-c000-000000000046"))
VisToolbarFlavors
{
    visToolBarNone = -1,
    visToolBarOn = 0,
    visToolBarMSOffice = 0,
    visToolBarLotusSS = 0
};

enum __declspec(uuid("000d0c15-0000-0000-c000-000000000046"))
VisDrawSplineFlags
{
    visSplinePeriodic = 1,
    visSplineDoCircles = 2,
    visSplineAbrupt = 4,
    visSpline1D = 8,
    visPolyline1D = 8,
    visPolyarcs = 256
};

enum __declspec(uuid("000d0c16-0000-0000-c000-000000000046"))
VisGuideTypes
{
    visPoint = 1,
    visHorz = 2,
    visVert = 3
};

enum __declspec(uuid("000d0c17-0000-0000-c000-000000000046"))
VisFontAttributes
{
    visFontRaster = 16,
    visFontDevice = 32,
    visFontScalable = 64,
    visFont0Alias = 128
};

enum __declspec(uuid("000d0c18-0000-0000-c000-000000000046"))
VisStatCodes
{
    visStatNormal = 0,
    visStatAppHasShutdown = 1,
    visStatDeleted = 2,
    visStatTouched = 4,
    visStatClosed = 8,
    visStatSuspended = 16
};

enum __declspec(uuid("000d0c19-0000-0000-c000-000000000046"))
VisEventCodes
{
    visEvtIDInval = -1,
    visScopeIDInval = -1,
    visEvtCodeInval = 0,
    visEvtCodeDocCreate = 1,
    visEvtCodeDocOpen = 2,
    visEvtCodeDocSave = 3,
    visEvtCodeDocSaveAs = 4,
    visEvtCodeDocRunning = 5,
    visEvtCodeDocDesign = 6,
    visEvtCodeBefDocSave = 7,
    visEvtCodeBefDocSaveAs = 8,
    visEvtCodeQueryCancelDocClose = 9,
    visEvtCodeCancelDocClose = 10,
    visEvtCodeBefForcedFlush = 200,
    visEvtCodeAfterForcedFlush = 201,
    visEvtCodeEnterScope = 202,
    visEvtCodeExitScope = 203,
    visEvtCodeQueryCancelQuit = 204,
    visEvtCodeCancelQuit = 205,
    visEvtCodeQueryCancelSuspend = 206,
    visEvtCodeCancelSuspend = 207,
    visEvtCodeBeforeSuspend = 208,
    visEvtCodeAfterResume = 209,
    visEvtCodeQueryCancelStyleDel = 300,
    visEvtCodeCancelStyleDel = 301,
    visEvtCodeQueryCancelMasterDel = 400,
    visEvtCodeCancelMasterDel = 401,
    visEvtCodeQueryCancelPageDel = 500,
    visEvtCodeCancelPageDel = 501,
    visEvtCodeWinSelChange = 701,
    visEvtCodeBefWinSelDel = 702,
    visEvtCodeBefWinPageTurn = 703,
    visEvtCodeWinPageTurn = 704,
    visEvtCodeViewChanged = 705,
    visEvtCodeQueryCancelWinClose = 706,
    visEvtCodeCancelWinClose = 707,
    visEvtCodeWinOnAddonKeyMSG = 708,
    visEvtCodeShapeDelete = 801,
    visEvtCodeShapeParentChange = 802,
    visEvtCodeShapeBeforeTextEdit = 803,
    visEvtCodeShapeExitTextEdit = 804,
    visEvtCodeBefSelDel = 901,
    visEvtCodeSelAdded = 902,
    visEvtCodeQueryCancelSelDel = 903,
    visEvtCodeCancelSelDel = 904,
    visEvtCodeQueryCancelUngroup = 905,
    visEvtCodeCancelUngroup = 906,
    visEvtCodeQueryCancelConvertToGroup = 907,
    visEvtCodeCancelConvertToGroup = 908,
    visEvtAdd = 32768,
    visEvtDel = 16384,
    visEvtMod = 8192,
    visEvtWindow = 1,
    visEvtDoc = 2,
    visEvtStyle = 4,
    visEvtMaster = 8,
    visEvtPage = 16,
    visEvtLayer = 32,
    visEvtShape = 64,
    visEvtText = 128,
    visEvtConnect = 256,
    visEvtSection = 512,
    visEvtRow = 1024,
    visEvtCell = 2048,
    visEvtFormula = 4096,
    visEvtApp = 4096,
    visEvtAppActivate = 1,
    visEvtAppDeactivate = 2,
    visEvtObjActivate = 4,
    visEvtObjDeactivate = 8,
    visEvtBeforeQuit = 16,
    visEvtBeforeModal = 32,
    visEvtAfterModal = 64,
    visEvtWinActivate = 128,
    visEvtMarker = 256,
    visEvtNonePending = 512,
    visEvtIdle = 1024,
    visEvtCode1stUser = 28672,
    visEvtCodeLastUser = 32767,
    visEvtCodeCreate = 1,
    visEvtCodeOpen = 2,
    visActCodeRunAddon = 1,
    visActCodeAdvise = 2,
    visEvtIdMostRecent = 0,
    visEvtCodeMouseDown = 709,
    visEvtCodeMouseMove = 710,
    visEvtCodeMouseUp = 711,
    visEvtCodeKeyDown = 712,
    visEvtCodeKeyPress = 713,
    visEvtCodeKeyUp = 714,
    visEvtDataRecordset = 32,
    visEvtShapeLinkAdded = 805,
    visEvtShapeLinkDeleted = 806,
    visEvtShapeDataGraphicChanged = 807,
    visEvtCodeQueryCancelSelGroup = 909,
    visEvtCodeCancelSelGroup = 910,
    visEvtRemoveHiddenInformation = 11,
    visEvtCodeQueryCancelSuspendEvents = 210,
    visEvtCodeCancelSuspendEvents = 211,
    visEvtCodeBeforeSuspendEvents = 212,
    visEvtCodeAfterResumeEvents = 213
};

enum __declspec(uuid("000d0c1a-0000-0000-c000-000000000046"))
VisObjectTypes
{
    visObjTypeUnknown = 1,
    visObjTypeApp = 3,
    visObjTypeCell = 4,
    visObjTypeChars = 5,
    visObjTypeConnect = 8,
    visObjTypeConnects = 9,
    visObjTypeDoc = 10,
    visObjTypeDocs = 11,
    visObjTypeMaster = 12,
    visObjTypeMasters = 13,
    visObjTypePage = 14,
    visObjTypePages = 15,
    visObjTypeSelection = 16,
    visObjTypeShape = 17,
    visObjTypeShapes = 18,
    visObjTypeStyle = 19,
    visObjTypeStyles = 20,
    visObjTypeWindow = 21,
    visObjTypeWindows = 22,
    visObjTypeLayer = 25,
    visObjTypeLayers = 26,
    visObjTypeFont = 27,
    visObjTypeFonts = 28,
    visObjTypeColor = 29,
    visObjTypeColors = 30,
    visObjTypeAddon = 31,
    visObjTypeAddons = 32,
    visObjTypeEvent = 33,
    visObjTypeEventList = 34,
    visObjTypeGlobal = 36,
    visObjTypeHyperlink = 37,
    visObjTypeOLEObjects = 38,
    visObjTypeOLEObject = 39,
    visObjTypePaths = 40,
    visObjTypePath = 41,
    visObjTypeCurve = 42,
    visObjTypeHyperlinks = 43,
    visObjTypeSection = 44,
    visObjTypeRow = 45,
    visObjTypeMasterShortcuts = 46,
    visObjTypeMasterShortcut = 47,
    visObjTypeMSGWrap = 48,
    visObjTypeMouseEvent = 49,
    visObjTypeKeyboardEvent = 50,
    visObjTypeApplicationSettings = 51,
    visObjTypeDataRecordsets = 52,
    visObjTypeDataRecordset = 53,
    visObjTypeDataConnection = 54,
    visObjTypeDataColumns = 55,
    visObjTypeDataColumn = 56,
    visObjTypeDataRecordsetChangedEvent = 57,
    visObjTypeGraphicItems = 58,
    visObjTypeGraphicItem = 59
};

enum __declspec(uuid("000d0c1b-0000-0000-c000-000000000046"))
VisFieldCategories
{
    visFCatCustom = 0,
    visFCatDateTime = 1,
    visFCatDocument = 2,
    visFCatGeometry = 3,
    visFCatObject = 4,
    visFCatPage = 5,
    visFCatNotes = 6
};

enum __declspec(uuid("000d0c1c-0000-0000-c000-000000000046"))
VisFieldCodes
{
    visFCodeCreateDate = 0,
    visFCodeCreateTime = 1,
    visFCodeCurrentDate = 2,
    visFCodeCurrentTime = 3,
    visFCodeEditDate = 4,
    visFCodeEditTime = 5,
    visFCodePrintDate = 6,
    visFCodePrintTime = 7,
    visFCodeCreator = 0,
    visFCodeDescription = 1,
    visFCodeDirectory = 2,
    visFCodeFileName = 3,
    visFCodeKeyWords = 4,
    visFCodeSubject = 5,
    visFCodeTitle = 6,
    visFCodeManager = 7,
    visFCodeCompany = 8,
    visFCodeCategory = 9,
    visFCodeHyperlinkBase = 10,
    visFCodeWidth = 0,
    visFCodeHeight = 1,
    visFCodeAngle = 2,
    visFCodeData1 = 0,
    visFCodeData2 = 1,
    visFCodeData3 = 2,
    visFCodeObjectID = 3,
    visFCodeMasterName = 4,
    visFCodeObjectName = 5,
    visFCodeObjectType = 6,
    visFCodeBackgroundName = 0,
    visFCodePageName = 1,
    visFCodeNumberOfPages = 2,
    visFCodePageNumber = 3
};

enum __declspec(uuid("000d0c1d-0000-0000-c000-000000000046"))
VisFieldFormats
{
    visFmtNumGenNoUnits = 0,
    visFmtNumGenDefUnits = 1,
    visFmt0PlNoUnits = 2,
    visFmt0PlDefUnits = 3,
    visFmt1PlNoUnits = 4,
    visFmt1PlDefUnits = 5,
    visFmt2PlNoUnits = 6,
    visFmt2PlDefUnits = 7,
    visFmt3PlNoUnits = 8,
    visFmt3PlDefUnits = 9,
    visFmtFeetAndInches = 10,
    visFmtRadians = 11,
    visFmtDegrees = 12,
    visFmtFeetAndInches1Pl = 13,
    visFmtFeetAndInches2Pl = 14,
    visFmtFraction1PlNoUnits = 15,
    visFmtFraction1PlDefUnits = 16,
    visFmtFraction2PlNoUnits = 17,
    visFmtFraction2PlDefUnits = 18,
    visFmtDateShort = 20,
    visFmtDateLong = 21,
    visFmtDateMDYY = 22,
    visFmtDateMMDDYY = 23,
    visFmtDateMmmDYYYY = 24,
    visFmtDateMmmmDYYYY = 25,
    visFmtDateDMYY = 26,
    visFmtDateDDMMYY = 27,
    visFmtDateDMMMYYYY = 28,
    visFmtDateDMMMMYYYY = 29,
    visFmtTimeGen = 30,
    visFmtTimeHMM = 31,
    visFmtTimeHHMM = 32,
    visFmtTimeHMM24 = 33,
    visFmtTimeHHMM24 = 34,
    visFmtTimeHMMAMPM = 35,
    visFmtTimeHHMMAMPM = 36,
    visFmtStrNormal = 37,
    visFmtStrLower = 38,
    visFmtStrUpper = 39,
    visFmtJDategggeXmXdXww = 40,
    visFmtJDateyyyyXmXdXww = 41,
    visFmtJDategggeXmXdX = 42,
    visFmtJDateyyyyXmXdX = 43,
    visFmtJDateyyyymd = 44,
    visFmtJDateyymmdd = 45,
    visFmtJDatehmmaxpx = 46,
    visFmtJDateaxpxhmm = 47,
    visFmtJDateaxpxhXmmX = 48,
    visFmtJDatehXmmX = 49,
    visFmtCDateiiieXmmmmXdddd = 50,
    visFmtCDateiieXmmmmXdddd = 51,
    visFmtCDateieXmmmmXddddXww = 52,
    visFmtCDateieXmmmmXdddd = 53,
    visFmtDateyyyymd = 44,
    visFmtDateyymmdd = 45,
    visFmtTimeAMPMhmm_J = 46,
    visFmtDateTWNfYYYYMMDDD_C = 50,
    visFmtDateTWNsYYYYMMDDD_C = 51,
    visFmtDateTWNfyyyymmddww_C = 52,
    visFmtDateTWNfyyyymmdd_C = 53,
    visFmtDategggemdww_J = 54,
    visFmtDateyyyymdww_J = 55,
    visFmtDategggemd_J = 56,
    visFmtDateyyyymd_J = 57,
    visFmtDateYYYYMMMDDDWWW_C = 58,
    visFmtDateYYYYMMMDDD_C = 59,
    visFmtDategeMMMMddddww_K = 60,
    visFmtDateyyyymdww_K = 61,
    visFmtDategeMMMMddd_K = 62,
    visFmtDateyyyymd_K = 63,
    visFmtDateyyyy_m_d = 64,
    visFmtDateyy_mm_dd = 65,
    visFmtTimeAMPMhmm_C = 66,
    visFmtTimeAMPMhmm_K = 67,
    visFmtTimeAMPM_hmm_J = 68,
    visFmtTimehmm_J = 69,
    visFmtTimeAMPM_hmm_C = 70,
    visFmtTimehmm_C = 71,
    visFmtTimeAMPM_hmm_K = 72,
    visFmtTimehmm_K = 73,
    visFmtTimeHMMAMPM_E = 74,
    visFmtTimeHHMMAMPM_E = 75,
    visFmtDateyyyymd_S = 76,
    visFmtDateyyyymmdd_S = 77,
    visFmtDatewwyyyymmdd_S = 78,
    visFmtDatewwyyyymd_S = 79,
    visFmtTimeAMPMhmm_S = 80,
    visFmtTimeAMPMhhmm_S = 81,
    visFmtMsoDateShort = 200,
    visFmtMsoDateLongDay = 201,
    visFmtMsoDateLong = 202,
    visFmtMsoDateShortAlt = 203,
    visFmtMsoDateISO = 204,
    visFmtMsoDateShortMon = 205,
    visFmtMsoDateShortSlash = 206,
    visFmtMsoDateShortAbb = 207,
    visFmtMsoDateEnglish = 208,
    visFmtMsoDateMonthYr = 209,
    visFmtMsoDateMon_Yr = 210,
    visFmtMsoTimeDatePM = 211,
    visFmtMsoTimeDateSecPM = 212,
    visFmtMsoTimePM = 213,
    visFmtMsoTimeSecPM = 214,
    visFmtMsoTime24 = 215,
    visFmtMsoTimeSec24 = 216,
    visFmtMsoFEExtra1 = 217,
    visFmtMsoFEExtra2 = 218,
    visFmtMsoFEExtra3 = 219,
    visFmtMsoFEExtra4 = 220,
    visFmtMsoFEExtra5 = 221
};

enum __declspec(uuid("000d0c1e-0000-0000-c000-000000000046"))
VisDocVersions
{
    visVersionUnsaved = 0,
    visVersion10 = 65571,
    visVersion20 = 131072,
    visVersion30 = 196611,
    visVersion40 = 262144,
    visVersion50 = 327680,
    visVersion60 = 393216,
    visVersion100 = 393216,
    visVersion110 = 720896,
    visVersion120 = 720896
};

enum __declspec(uuid("000d0c1f-0000-0000-c000-000000000046"))
VisMasterProperties
{
    visLeft = 1,
    visCenter = 2,
    visRight = 3,
    visIconFormatVisio = 0,
    visIconFormatBMP = 2,
    visNormal = 1,
    visTall = 2,
    visWide = 3,
    visDouble = 4,
    visAutomatic = 1,
    visManual = 0,
    visMasIsLinePat = 1,
    visMasIsLineEnd = 2,
    visMasIsFillPat = 4,
    visMasLPTileDeform = 0,
    visMasLPTile = 16,
    visMasLPStretch = 32,
    visMasLPAnnotate = 48,
    visMasLPScale = 64,
    visMasLEDefault = 0,
    visMasLEUpright = 256,
    visMasLEScale = 1024,
    visMasFPTile = 0,
    visMasFPCenter = 4096,
    visMasFPStretch = 8192,
    visMasFPScale = 16384
};

enum __declspec(uuid("000d0c20-0000-0000-c000-000000000046"))
VisFromParts
{
    visConnectFromError = -1,
    visFromNone = 0,
    visLeftEdge = 1,
    visCenterEdge = 2,
    visRightEdge = 3,
    visBottomEdge = 4,
    visMiddleEdge = 5,
    visTopEdge = 6,
    visBeginX = 7,
    visBeginY = 8,
    visBegin = 9,
    visEndX = 10,
    visEndY = 11,
    visEnd = 12,
    visFromAngle = 13,
    visFromPin = 14,
    visControlPoint = 100
};

enum __declspec(uuid("000d0c21-0000-0000-c000-000000000046"))
VisToParts
{
    visConnectToError = -1,
    visToNone = 0,
    visGuideX = 1,
    visGuideY = 2,
    visWholeShape = 3,
    visGuideIntersect = 4,
    visToAngle = 7,
    visConnectionPoint = 100,
    visConnectError = -1,
    visNone = 0
};

enum __declspec(uuid("000d0c80-0000-0000-c000-000000000046"))
VisUIObjSets
{
    visUIObjSetNoDocument = 1,
    visUIObjSetDrawing = 2,
    visUIObjSetStencil = 3,
    visUIObjSetShapeSheet = 4,
    visUIObjSetIcon = 5,
    visUIObjSetInPlace = 6,
    visUIObjSetPrintPreview = 7,
    visUIObjSetText = 8,
    visUIObjSetCntx_DrawObjSel = 9,
    visUIObjSetCntx_DrawOleObjSel = 10,
    visUIObjSetCntx_DrawNoObjSel = 11,
    visUIObjSetCntx_InPlaceNoObj = 12,
    visUIObjSetCntx_TextEdit = 13,
    visUIObjSetCntx_StencilRO = 14,
    visUIObjSetCntx_ShapeSheet = 15,
    visUIObjSetCntx_Toolbar = 16,
    visUIObjSetCntx_FullScreen = 17,
    visUIObjSetBinderInPlace = 18,
    visUIObjSetActiveXDoc = 18,
    visUIObjSetCntx_Debug = 19,
    visUIObjSetCntx_StencilRW = 20,
    visUIObjSetCntx_StencilDocked = 21,
    visUIObjSetHostingInPlace = 22,
    visUIObjSetCntx_Hyperlink = 23,
    visUIObjSetPal_LineColors = 24,
    visUIObjSetPal_LineWeights = 25,
    visUIObjSetPal_LinePatterns = 26,
    visUIObjSetPal_FillColors = 27,
    visUIObjSetPal_FillPatterns = 28,
    visUIObjSetPal_TextColors = 29,
    visUIObjSetPal_AlignShapes = 30,
    visUIObjSetPal_DistributeShapes = 31,
    visUIObjSetPal_Shadow = 32,
    visUIObjSetPal_LineEnds = 33,
    visUIObjSetPal_CornerRounding = 34,
    visUIObjSetCntx_ToolbarInPlace = 35,
    visUIObjSetCntx_ToolbarHostingInPlace = 36,
    visUIObjSetPal_Rectangle_Tool = 37,
    visUIObjSetPopup_LineJumpCode = 38,
    visUIObjSetPopup_LineJumpStyle = 39,
    visUIObjSetPal_ConnectorTool = 40,
    visUIObjSetPal_TextTool = 41,
    visUIObjSetPal_LineTool = 42,
    visUIObjSetPal_RotationTool = 43,
    visUIObjSetCntx_ConnectPtType = 44,
    visUIObjSetPal_Undo = 45,
    visUIObjSetPal_Redo = 46,
    visUIObjSetCntx_PageTabs = 47,
    visUIObjSetPal_ShapeExt = 48,
    visUIObjSetCntx_DEDocument = 49,
    visUIObjSetCntx_DEPages = 50,
    visUIObjSetCntx_DEPage = 51,
    visUIObjSetCntx_DEShapes = 52,
    visUIObjSetCntx_DEShape = 53,
    visUIObjSetCntx_DELayers = 54,
    visUIObjSetCntx_DELayer = 55,
    visUIObjSetCntx_DEStyles = 56,
    visUIObjSetCntx_DEStyle = 57,
    visUIObjSetCntx_DEMasters = 58,
    visUIObjSetCntx_DEMaster = 59,
    visUIObjSetCntx_DEPatterns = 60,
    visUIObjSetCntx_AnchorBar_Base = 61,
    visUIObjSetCntx_AnchorBar_CustProp = 62,
    visUIObjSetCntx_AnchorBar_SizePos = 63,
    visUIObjSetCntx_Master = 14,
    visUIObjSetCntx_Stencil = 21,
    visUIObjSetCntx_AddCommands = 1000,
    visUIObjSetCntx_BuiltinMenus = 1010,
    visUIObjSetCntx_ShortcutMenus = 1011,
    visUIObjSetCntx_MEDocument = 66,
    visUIObjSetCntx_MEMasters = 67,
    visUIObjSetCntx_CommentMarker = 68,
    visUIObjSetCntx_AnchorBar_Shapes = 69,
    visUIObjSetCntx_DataExplorerTabs = 70,
    visUIObjSetCntx_DataExplorerList = 71
};

enum __declspec(uuid("000d0c81-0000-0000-c000-000000000046"))
VisUICmds
{
    visCmdFirst = 0,
    visCmdLast = 65535,
    visCmdHierarchical = 0,
    visCmdFileNew = 1001,
    visCmdFileOpen = 1002,
    visCmdFileClose = 1003,
    visCmdFileSave = 1004,
    visCmdFileSaveAs = 1005,
    visCmdFileSaveWorkspace = 1006,
    visCmdFileImport = 1007,
    visCmdFileSummaryInfoDlg = 1009,
    visCmdFilePrint = 1010,
    visCmdFileLastFile1 = 1012,
    visCmdFileLastFile2 = 1013,
    visCmdFileLastFile3 = 1014,
    visCmdFileLastFile4 = 1015,
    visCmdFileExit = 1016,
    visCmdEditUndo = 1017,
    visCmdEditRedo = 1018,
    visCmdEditRepeat = 1019,
    visCmdUFEditCut = 1020,
    visCmdUFEditCopy = 1021,
    visCmdUFEditPaste = 1022,
    visCmdUFEditClear = 1023,
    visCmdUFEditDuplicate = 1024,
    visCmdUFEditSelectAll = 1025,
    visCmdEditSelectSpecial = 1026,
    visCmdEditPasteSpecial = 1027,
    visCmdEditPasteLink = 1028,
    visCmdEditOpenObject = 1029,
    visCmdEditLinks = 1030,
    visCmdEditInsertObject = 1031,
    visCmdEditInsertField = 1032,
    visCmdViewFitInWindow = 1033,
    visCmdView75 = 1034,
    visCmdView100 = 1035,
    visCmdView150 = 1036,
    visCmdView200 = 1037,
    visCmdViewCustom = 1038,
    visCmdViewRulers = 1039,
    visCmdViewGrid = 1040,
    visCmdViewGuides = 1041,
    visCmdViewConnections = 1042,
    visCmdEditFind = 1043,
    visCmdViewStatusBar = 1044,
    visCmdObjectBringForward = 1045,
    visCmdObjectBringToFront = 1046,
    visCmdObjectSendBackward = 1047,
    visCmdObjectSendToBack = 1048,
    visCmdObjectAlignObjects = 1049,
    visCmdObjectConnectObjects = 1050,
    visCmdObjectGroup = 1051,
    visCmdObjectUngroup = 1052,
    visCmdObjectAddToGroup = 1053,
    visCmdObjectRemoveFromGroup = 1054,
    visCmdObjectConvertToGroup = 1055,
    visCmdObjectRotate90 = 1056,
    visCmdObjectFlipVertical = 1057,
    visCmdObjectFlipHorizontal = 1058,
    visCmdObjectReverse = 1059,
    visCmdObjectUnion = 1060,
    visCmdObjectCombine = 1061,
    visCmdObjectFragment = 1062,
    visCmdFormatStyle = 1063,
    visCmdFormatDefineStyles = 1064,
    visCmdFormatLine = 1065,
    visCmdFormatFill = 1066,
    visCmdFormatText = 1067,
    visCmdFormatParagraph = 1068,
    visCmdFormatTabs = 1069,
    visCmdFormatBlock = 1070,
    visCmdFormatBehavior = 1071,
    visCmdFormatProtection = 1072,
    visCmdFormatSpecial = 1073,
    visCmdOptionsEditDrawing = 1074,
    visCmdOptionsEditBackground = 1075,
    visCmdOptionsPageSetup = 1076,
    visCmdOptionsGoToDrawing = 1077,
    visCmdOptionsNewPage = 1078,
    visCmdOptionsDeletePages = 1079,
    visCmdOptionsReorderPages = 1080,
    visCmdOptionsPreferences = 1081,
    visCmdOptionsColorPaletteDlg = 1082,
    visCmdOptionsProtectDocument = 1083,
    visCmdOptionsSnapGlueSetup = 1084,
    visCmdWindowNewWindow = 1085,
    visCmdWindowCascadeAll = 1086,
    visCmdWindowTileAll = 1087,
    visCmdWindowShowShapeSheet = 1088,
    visCmdWindowShowMasterObjects = 1089,
    visCmdRunAddOnMenu = 1090,
    visCmdWindowShowDrawPage = 1091,
    visCmdHelpContents = 1092,
    visCmdDecreaseIndent = 1093,
    visCmdIncreaseIndent = 1094,
    visCmdDecreaseParaSpacing = 1095,
    visCmdIncreaseParaSpacing = 1096,
    visCmdHelpStencil = 1097,
    visCmdTextRotate90 = 1098,
    visCmdHelpQuickTour = 1099,
    visCmdHelpAboutVisio = 1100,
    visCmdStenEditIcon = 1101,
    visCmdStenEditDrawing = 1102,
    visCmdStenNameMaster = 1103,
    visCmdStenNewMaster = 1104,
    visCmdStenImageMaster = 1105,
    visCmdStenCleanup = 1106,
    visCmdSWShowValues = 1107,
    visCmdSWShowFormulas = 1108,
    visCmdSWShowSectionsDlg = 1109,
    visCmdSWPasteNameDlg = 1110,
    visCmdSWPasteFunctionDlg = 1111,
    visCmdSWInsertRow = 1112,
    visCmdSWInsertRowAfter = 1113,
    visCmdSWChangeRowTypeDlg = 1114,
    visCmdSWDeleteRow = 1115,
    visCmdSWAddSectionDlg = 1116,
    visCmdSWDeleteSection = 1117,
    visCmdFormatDoubleClick = 1118,
    visCmdDrawTextStyle = 1121,
    visCmdDrawLineStyle = 1122,
    visCmdDrawFillStyle = 1123,
    visCmdDrawSnap = 1124,
    visCmdDrawGlue = 1125,
    visCmdDrawZoom = 1126,
    visCmdTextStyle = 1128,
    visCmdTextFont = 1129,
    visCmdTextSize = 1130,
    visCmdTextBold = 1131,
    visCmdTextItalic = 1132,
    visCmdTextSmallCaps = 1133,
    visCmdTextSuperscript = 1134,
    visCmdTextSubscript = 1135,
    visCmdTextUline = 1136,
    visCmdSWCancel = 1139,
    visCmdSWAccept = 1140,
    visCmdSWFormula = 1141,
    visCmdSWShowToggle = 1142,
    visCmdIconLeftColor = 1143,
    visCmdIconRightColor = 1144,
    visCmdIconPencilTool = 1145,
    visCmdRecalcObjectWH = 1146,
    visCmdTurnToPrevPage = 1147,
    visCmdTurnToNextPage = 1148,
    visCmdEditReplace = 1179,
    visCmdDrawAddGuide = 1180,
    visCmdAddTextShape = 1181,
    visCmdDrawRect = 1182,
    visCmdDrawOval = 1183,
    visCmdDragDuplicate = 1184,
    visCmdMoveObject = 1185,
    visCmdMove1D = 1186,
    visCmdMove2D = 1187,
    visCmdSize1D = 1188,
    visCmdSize2D = 1189,
    visCmdRotateObject = 1190,
    visCmdCropObject = 1192,
    visCmdPanObject = 1193,
    visCmdSizeTextBlock = 1194,
    visCmdAlignObjectLeft = 1196,
    visCmdAlignObjectCenter = 1197,
    visCmdAlignObjectRight = 1198,
    visCmdAlignObjectTop = 1199,
    visCmdAlignObjectMiddle = 1200,
    visCmdAlignObjectBottom = 1201,
    visCmdCenterDrawing = 1202,
    visCmdDeselectAll = 1213,
    visCmdTextEditState = 1214,
    visCmdZoomPt = 1215,
    visCmdZoomIn = 1216,
    visCmdZoomOut = 1217,
    visCmdZoomArea = 1218,
    visCmdDRPointerTool = 1219,
    visCmdDRPencilTool = 1220,
    visCmdDRLineTool = 1221,
    visCmdDRQtrArcTool = 1222,
    visCmdDRRectTool = 1223,
    visCmdDROvalTool = 1224,
    visCmdDRConnectorTool = 1225,
    visCmdDRConnectionTool = 1226,
    visCmdDRTextTool = 1227,
    visCmdDRRotateTool = 1228,
    visCmdObjectDistributeDlg = 1230,
    visCmdDistributeHSpace = 1231,
    visCmdDistributeLeft = 1232,
    visCmdDistributeCenter = 1233,
    visCmdDistributeRight = 1234,
    visCmdDistributeVSpace = 1235,
    visCmdDistributeTop = 1236,
    visCmdDistributeMiddle = 1237,
    visCmdDistributeBottom = 1238,
    visCmdUpdateContentCache = 1241,
    visCmdDropOnText = 1243,
    visCmdDropOnStencil = 1244,
    visCmdDropOnPage = 1246,
    visCmdSSWindowCollapse = 1250,
    visCmdSSWindowExpand = 1251,
    visCmdSSWindowSelect = 1252,
    visCmdSSWindowDeselect = 1253,
    visCmdAddConnectPt = 1263,
    visCmdModConnectPt = 1264,
    visCmdDelConnectPt = 1265,
    visCmdAddControlPt = 1266,
    visCmdModControlPt = 1267,
    visCmdDelControlPt = 1268,
    visCmdMovConnectPt = 1269,
    visCmdToolsSpelling = 1270,
    visCmdFormatPainter = 1271,
    visCmdPageMeasureUnitsDlg = 1274,
    visCmdView50 = 1279,
    visCmdView400 = 1280,
    visCmdInsertDataMap = 1282,
    visCmdSendAsMail = 1292,
    visCmdShapeActions = 1309,
    visCmdDRSplineTool = 1311,
    visCmdFormatCustPropEdit = 1312,
    visCmdRulerGridDlg = 1318,
    visCmdFormatShadow = 1333,
    visCmdFormatCorners = 1334,
    visCmdToolsInventory = 1335,
    visCmdMasterSetup = 1343,
    visCmdToolsArrayShapesAddOn = 1354,
    visCmdSetLineWeight = 1355,
    visCmdSetLinePattern = 1356,
    visCmdSetLineEnds = 1357,
    visCmdSetLineCornerStyle = 1358,
    visCmdSetLineColor = 1359,
    visCmdCloseWindow = 1361,
    visCmdSetFillShadow = 1379,
    visCmdSSWindowShowSection = 1380,
    visCmdSSWindowPasteName = 1381,
    visCmdSSWindowPasteFunction = 1382,
    visCmdSSWindowChangeRowType = 1383,
    visCmdSSWindowAddSection = 1384,
    visCmdSetFillColor = 1385,
    visCmdHelpMode = 1386,
    visCmdOffsetDlg = 1387,
    visCmdDesignMode = 1388,
    visCmdShapeExplorer = 1389,
    visCmdSetFillPattern = 1399,
    visCmdSetCharColor = 1404,
    visCmdSetCharSizeUp = 1405,
    visCmdSetCharSizeDown = 1406,
    visCmdTextHAlignLeft = 1407,
    visCmdTextHAlignCenter = 1408,
    visCmdTextHAlignRight = 1409,
    visCmdTextHAlignJustify = 1412,
    visCmdTextVAlignTop = 1413,
    visCmdTextVAlignMiddle = 1414,
    visCmdTextVAlignBottom = 1422,
    visCmdStampTool = 1424,
    visCmdObjectInfoDlg = 1425,
    visCmdObjectHelp = 1428,
    visCmdEditConvertObject = 1439,
    visCmdFileOpenStencil = 1442,
    visCmdPrintPage = 1443,
    visCmdSWShapeActionDlg = 1444,
    visCmdLayerDlg = 1446,
    visCmdLayerSetupDlg = 1448,
    visCmdCropTool = 1449,
    visCmdTextBlockTool = 1451,
    visCmdStenClose = 1452,
    visCmdIntersect = 1453,
    visCmdSubtract = 1454,
    visCmdStenActivate = 1458,
    visCmdStenIconAndName = 1480,
    visCmdStenIconOnly = 1481,
    visCmdStenNameOnly = 1482,
    visCmdStenAutoArrange = 1483,
    visCmdRunAddOnDlg = 1484,
    visCmdPrintPreview = 1490,
    visCmdOpenInVisio = 1491,
    visCmdFullScreenMode = 1492,
    visCmdLayoutDynamic = 1493,
    visCmdRotate90Clockwise = 1494,
    visCmdZoomLast = 1495,
    visCmdZoomPageWidth = 1496,
    visCmdInsertClipArt = 1497,
    visCmdInsertWordArt = 1498,
    visCmdInsertMicrosoftGraph = 1499,
    visCmdToolbarsDlg = 1500,
    visCmdInsertComment = 1501,
    visCmdMoveComment = 1502,
    visCmdOpenCommentForEdit = 1503,
    visCmdMSOInsertSymbol = 1504,
    visCmdMSOInsertSymbolDlg = 1505,
    visCmdINETAddToFavorites = 1506,
    visCmdViewPageBreaks = 1509,
    visCmdZoomSingleTile = 1512,
    visCmdPreviousTile = 1513,
    visCmdNextTile = 1514,
    visCmdFirstTile = 1515,
    visCmdLastTile = 1516,
    visCmdInsertAutoCADAddOn = 1521,
    visCmdInsertControlDlg = 1522,
    visCmdJoin = 1533,
    visCmdTrim = 1534,
    visCmdDlgCustomFit = 1536,
    visCmdFitCurve = 1538,
    visCmdIconBucketTool = 1543,
    visCmdIconLassoTool = 1544,
    visCmdIconSelectNet = 1545,
    visCmdFileLastFile5 = 1561,
    visCmdFileLastFile6 = 1569,
    visCmdFileLastFile7 = 1570,
    visCmdFileLastFile8 = 1571,
    visCmdFileLastFile9 = 1572,
    visCmdToolsLayoutShapesDlg = 1574,
    visCmdToolsRunVBE = 1576,
    visCmdToolsMacroDlg = 1577,
    visCmdFileNewBlankDrawing = 1579,
    visCmdFileNewStencilDlg = 1580,
    visCmdFileNewBlankStencil = 1582,
    visCmdFileChooseTemplates = 1583,
    visCmdProgRefHelp = 1584,
    visCmdInsertHyperLink = 1585,
    visCmdHelpTemplates = 1586,
    visCmdEmailRouting = 1588,
    visCmdSendToExchange = 1589,
    visCmdRemoveVBAFromActiveDoc = 1590,
    visCmdINETUserSearchPage = 1595,
    visCmdINETVisioHomePage = 1596,
    visCmdINETGoForward = 1598,
    visCmdINETGoBack = 1599,
    visCmdOpenActiveObject = 1601,
    visCmdCancelInPlaceEditing = 1602,
    visCmdINETVisioSolutionsLibrary = 1604,
    visCmdINETKnowledgeBase = 1605,
    visCmdINETDiagrammingResources = 1606,
    visCmdINETOpenHlink = 1607,
    visCmdINETOpenHlinkNewWnd = 1608,
    visCmdINETDeleteHlink = 1609,
    visCmdINETCopyHyperlink = 1610,
    visCmdHyperlinkHier = 1611,
    visCmdINETEditHyperlink = 1619,
    visCmdINETPasteAsHyperlink = 1620,
    visCmdBullets = 1633,
    visCmdShapeLayerToolbar = 1634,
    visCmdGoToPageToolbar = 1635,
    visCmdFormatAllTextProps = 1642,
    visCmdBrowseSampleDrawings = 1645,
    visCmdMSOInsertEquation = 1646,
    visCmdABarHide = 1650,
    visCmdABarToggleFloat = 1651,
    visCmdABarAutohide = 1652,
    visCmdPanZoom = 1653,
    visCmdPagesList = 1654,
    visCmdCustProp = 1658,
    visCmdInkTool = 1661,
    visCmdInkCustomizePen = 1664,
    visCmdShapesWindow = 1669,
    visCmdSizePos = 1670,
    visCmdFileNewBlankDrawingMetric = 1671,
    visCmdFileNewBlankDrawingUS = 1672,
    visCmdFileNewBlankStencilMetric = 1673,
    visCmdFileNewBlankStencilUS = 1674,
    visCmdCustomPropertySets = 1675,
    visCmdStenSave = 1676,
    visCmdStenSaveAs = 1677,
    visCmdStenProperties = 1678,
    visCmdStenEditToggle = 1679,
    visCmdStenEditOn = 1680,
    visCmdStenEditOff = 1681,
    visCmdEditUndoMultiple = 1682,
    visCmdEditRedoMultiple = 1683,
    visCmdABarAutoHeight = 1684,
    visCmdShapeCommentDlg = 1685,
    visCmdShapeComment = 1686,
    visCmdFormatCustPropDef = 1687,
    visCmdShapeCommentDelete = 1688,
    visCmdHideDocumentStencil = 1689,
    visCmdToggleDocumentStencil = 1690,
    visCmdCustPropDefine = 1695,
    visCmdSetDynConnRerouteFreely = 1696,
    visCmdSetDynConnRerouteAsNeeded = 1697,
    visCmdSetDynConnRerouteNever = 1698,
    visCmdSetPagePlow = 1699,
    visCmdSetDynConnRoutingStyle = 1700,
    visCmdSetPlaceableShapeBehavior = 1702,
    visCmdSetPageLineJumpCode_Disp = 1703,
    visCmdSetPageLineJumpCode_None = 1704,
    visCmdSetPageLineJumpCode_Horz = 1705,
    visCmdSetPageLineJumpCode_Vert = 1706,
    visCmdSetPageLineJumpCode_Last = 1707,
    visCmdSetDynConnLineJumpStyle_Page = 1708,
    visCmdSetDynConnLineJumpStyle_Arc = 1709,
    visCmdSetDynConnLineJumpStyle_Gap = 1710,
    visCmdSetDynConnLineJumpStyle_Square = 1711,
    visCmdSetDynConnLineJumpStyle_Triangle = 1712,
    visCmdSetDynConnLineJumpStyle_2pt = 1713,
    visCmdSetDynConnLineJumpStyle_3pt = 1714,
    visCmdSetDynConnLineJumpStyle_4pt = 1715,
    visCmdSetDynConnLineJumpStyle_5pt = 1716,
    visCmdSetDynConnLineJumpStyle_6pt = 1717,
    visCmdSWExpandRow = 1718,
    visCmdHyperlinkList = 1719,
    visCmdHeaderFooter = 1720,
    visCmdDrawingExplorer = 1721,
    visCmdHideAllToolbars = 1726,
    visCmdTextStrikethrough = 1741,
    visCmdDrawRegion = 1742,
    visCmdSetAddMarkup = 1744,
    visCmdDynamicGrid = 1765,
    visCmdRulSub = 1766,
    visCmdGrid = 1767,
    visCmdAlignBox = 1768,
    visCmdShapeGeo = 1769,
    visCmdGuides = 1771,
    visCmdShapeHand = 1772,
    visCmdShapeVert = 1773,
    visCmdConnPoints = 1774,
    visCmdRecordNewMacro = 1775,
    visCmdStartRecordingMacro = 1776,
    visCmdStopRecordingMacro = 1777,
    visCmdPauseRecordingMacro = 1778,
    visCmdResumeRecordingMacro = 1779,
    visCmdSSWindowShowTraceWindow = 1781,
    visCmdFileSaveAsWebPage = 1785,
    visCmdFileCheckIn = 1787,
    visCmdFileCheckOut = 1788,
    visCmdPasteShortcut = 1790,
    visCmdCreateShortcut = 1791,
    visCmdReOrderPage = 1795,
    visCmdStenDrawingExplorer = 1796,
    visCmdINETOfficeOnTheWeb = 1802,
    visCmdToolSnapLines = 1807,
    visCmdHelpSearch = 1809,
    visCmdTextEditRuler = 1810,
    visCmdCreateNewDrawing = 1812,
    visCmdHelpShapeBasics = 1822,
    visCmdDynConnReroute = 1829,
    visCmdShapeIntersect = 1830,
    visCmdINETVisioOnTheWeb = 1831,
    visCmdReviewerVisibilityAll = 1836,
    visCmdSetDynConnRerouteOnCrossover = 1837,
    visCmdSaveForAutoRecover = 1857,
    visCmdSetHeaderFooter = 1858,
    visCmdMsoClipboard = 1859,
    visCmdMsoSearch = 1860,
    visCmdTextAllCaps = 1862,
    visCmdTextDoubleUline = 1863,
    visCmdAppMaximize = 1864,
    visCmdAppMinimize = 1865,
    visCmdMsoAutoCorrectDlg = 1866,
    visCmdShapeGalleryAddOn = 1867,
    visCmdAcquireImages = 1868,
    visCmdDropManyOnPage = 1869,
    visCmdObjectSwapEnds = 1870,
    visCmdSetIndexInStencil = 1871,
    visCmdMsoAutoCorrect = 1872,
    visCmdMsoAutoFormat = 1873,
    visCmdShapeTransparencyDlg = 1874,
    visCmdShapeTransparency = 1875,
    visCmdToolsShowAddins = 1876,
    visCmdLicenseVerification = 1877,
    visCmdRightDragMove = 1878,
    visCmdRightDragCopy = 1879,
    visCmdRightDragLink = 1880,
    visCmdRightDragCancel = 1881,
    visCmdNMMeetNow = 1882,
    visCmdImagePropertiesDlg = 1883,
    visCmdToolsSecurity = 1884,
    visCmdMsoMediaGallery = 1885,
    visCmdNextWindow = 1886,
    visCmdImageProperties = 1887,
    visCmdSetLanguageDlg = 1888,
    visCmdSpellingChange = 1889,
    visCmdDetectAndRepair = 1890,
    visCmdExportDatabaseAddOn = 1891,
    visCmdStenIconAndDetail = 1892,
    visCmdSetDynConnAppearanceDefault = 1893,
    visCmdSetDynConnAppearanceStraight = 1894,
    visCmdSetDynConnAppearanceCurved = 1895,
    visCmdTaskPaneToggle = 1896,
    visCmdNewFromExisting = 1897,
    visCmdMsoCustomItem = 1898,
    visCmdCreateEditMaster = 1899,
    visCmdBreakOLELink = 1900,
    visCmdMDIMaximize = 1901,
    visCmdMDIMinimize = 1902,
    visCmdMDIRestore = 1903,
    visCmdAppRestore = 1904,
    visCmdDeleteBackWord = 1905,
    visCmdNewDefDocBlankDrawing = 1906,
    visCmdSelectionModeRect = 1907,
    visCmdSelectionModeLasso = 1908,
    visCmdSelectionModeExtend = 1909,
    visCmdNextMarkup = 1914,
    visCmdPreviousMarkup = 1915,
    visCmdMasterExplorer = 1916,
    visCmdZoomInIgnoreSel = 1917,
    visCmdZoomOutIgnoreSel = 1918,
    visCmdReviewerVisibilityNone = 1919,
    visCmdDeleteComment = 1920,
    visCmdSizeObjects = 1925,
    visCmdReviewerPaneToggle = 1939,
    visCmdConnectorEffectRightAngle = 1943,
    visCmdConnectorEffectStraight = 1944,
    visCmdConnectorEffectCurved = 1945,
    visCmdDrawingTools = 1946,
    visCmdTextDoubleStrikethrough = 1951,
    visCmdTextHAlignDistribute = 1952,
    visCmdFormatInkDlg = 1955,
    visCmdCheckForUpdates = 1962,
    visCmdPrivacySettings = 1963,
    visCmdContactUs = 1964,
    visCmdResearchLookUp = 1967,
    visCmdResearchTranslate = 1968,
    visCmdResearchPaneToggle = 1969,
    visCmdInkEraser = 1970,
    visCmdInkReviewPen = 1971,
    visCmdSharedWorkspacePaneToggle = 1972,
    visCmdInkStockPen0 = 1973,
    visCmdInkStockPen1 = 1974,
    visCmdInkStockPen2 = 1975,
    visCmdInkStockPen3 = 1976,
    visCmdInkStockPen4 = 1977,
    visCmdDiagramGallery = 1982,
    visCmdShapeStudioAddon = 1985,
    visCmdLinkRowToShape = 1997,
    visCmdAddDataRecordset = 1998,
    visCmdDeleteDataRecordset = 1999,
    visCmdStenNamesUnderIcons = 2005,
    visCmdInsertTextBox = 2006,
    visCmdInsertVertTextBox = 2007,
    visCmdRHI = 2009,
    visCmdRHIDlg = 2010,
    visCmdDataSelectorDlg = 2011,
    visCmdViewDirectionToggle = 2012,
    visCmdViewLeftToRight = 2013,
    visCmdViewRightToLeft = 2014,
    visCmdApplyDataGraphic = 2017,
    visCmdDataRefreshDlg = 2019,
    visCmdDataRefresh = 2021,
    visCmdDataRefreshConfigDlg = 2022,
    visCmdTaskPaneDataGraphic = 2024,
    visCmdDataRecordsetSetCommand = 2037,
    visCmdDataRecordsetSetPrimaryKey = 2038,
    visCmdSpellingOptionsDlg = 2042,
    visCmdDataColumnSettingsDlg = 2043,
    visCmdDataExplorerWindow = 2044,
    visCmdDataAutoLinkWiz = 2045,
    visCmdDataAutoLink = 2046,
    visCmdApplyThemeToPage = 2047,
    visCmdApplyThemeToDoc = 2048,
    visCmdEditTheme = 2049,
    visCmdDuplicateTheme = 2050,
    visCmdDeleteTheme = 2052,
    visCmdTaskTogglePreviewSize = 2053,
    visCmdTaskPaneThemeColors = 2054,
    visCmdTaskPaneThemeEffects = 2055,
    visCmdAllowThemes = 2056,
    visCmdDataUnlinkShape = 2057,
    visCmdDataUnlinkRow = 2058,
    visCmdUpdateColumnsInLinkedShapes = 2061,
    visCmdNewThemeEffects = 2064,
    visCmdNewThemeColors = 2065,
    visCmdDeleteDataGraphic = 2067,
    visCmdRelayoutShapes = 2068,
    visCmdDataRecordsetProperties = 2072,
    visCmdAutoConnectToggle = 2091,
    visCmdApplyDataGraphicAfterLink = 2092,
    visCmdDataRefreshAddConflict = 2094,
    visCmdDataRefreshDeleteConflict = 2095,
    visCmdDataAutoConnect = 2098,
    visCmdDataRefreshResolveConflict = 2103,
    visCmdTrustCenterDlg = 2104,
    visCmdAutoGenerateDataGraphics = 2105,
    visCmdDuplicateDataGraphic = 2106,
    visCmdRemoveDataGraphicFromSel = 2107,
    visCmdDropManyLinked = 2108,
    visCmdFileUndoCheckout = 2109,
    visCmdDeleteForwardWord = 2114,
    visCmdSaveAsFixedFormatDlg = 2117,
    visCmdRemoveThemeFromSel = 2119,
    visCmdTaskPane = 1896,
    visCmdTaskPaneReviewer = 1939,
    visCmdTaskPaneResearch = 1969,
    visCmdTaskPaneDocumentManagement = 1972,
    visCmdOfficeDiagnostics = 1890
};

enum __declspec(uuid("000d0c82-0000-0000-c000-000000000046"))
VisUICtrlTypes
{
    visCtrlTypeBUTTON = 2,
    visCtrlTypeBUTTON_OWNERDRAW = 33,
    visCtrlTypeOWNERDRAW_BUTTON = 33,
    visCtrlTypeSPLITBUTTON = 17,
    visCtrlTypePALETTEBUTTONNOMRU = 17,
    visCtrlTypeSPLITBUTTON_MRU_COLOR = 16,
    visCtrlTypePALETTEBUTTON = 16,
    visCtrlTypeSPINBUTTON = 16,
    visCtrlTypeSPLITBUTTON_MRU_COMMAND = 18,
    visCtrlTypePALETTEBUTTONICON = 18,
    visCtrlTypeEDITBOX = 64,
    visCtrlTypeCOMBOBOX = 128,
    visCtrlTypeCOMBOBOX_SORTED = 129,
    visCtrlTypeDROPDOWN = 272,
    visCtrlTypeDROPDOWN_SORTED = 273,
    visCtrlTypeDROPDOWN_OWNERDRAW = 256,
    visCtrlTypeCOMBODRAW = 256,
    visCtrlTypeDROPDOWN_SORTED_OWNERDRAW = 257,
    visCtrlTypeLABEL = 2048,
    visCtrlTypeSWATCH = 32768,
    visCtrlTypeSWATCH_COLORS = 32769,
    visCtrlTypeEND = 0,
    visCtrlTypeSTATE = 1,
    visCtrlTypeSTATE_BUTTON = 3,
    visCtrlTypeHIERBUTTON = 4,
    visCtrlTypeSTATE_HIERBUTTON = 5,
    visCtrlTypeDROPBUTTON = 8,
    visCtrlTypeSTATE_DROPBUTTON = 9,
    visCtrlTypePUSHBUTTON = 32,
    visCtrlTypeLISTBOX = 512,
    visCtrlTypeLISTBOXDRAW = 513,
    visCtrlTypeCOLORBOX = 1024,
    visCtrlTypeMESSAGE = 4096,
    visCtrlTypeSPACER = 16384
};

enum __declspec(uuid("000d0c83-0000-0000-c000-000000000046"))
VisUISpacingTypes
{
    visCtrlSpacingNONE = 0,
    visCtrlSpacingVARIABLE_BEFORE = 1,
    visCtrlSpacingVARIABLE_AFTER = 2,
    visCtrlSpacingFIXED_BEFORE = 4,
    visCtrlSpacingFIXED_AFTER = 8,
    visCtrlSpacingNEW_ROW = 16,
    visCtrlSpacingTB_NOTFIXED = 32,
    visCtrlSpacingPALETTERIGHT = 64,
    visCtrlSpacingNEW_ROW_PALETTERIGHT = 80
};

enum __declspec(uuid("000d0c84-0000-0000-c000-000000000046"))
VisUICtrlAtts
{
    visCtrlAlignmentLEFT = 1,
    visCtrlAlignmentCENTER = 2,
    visCtrlAlignmentRIGHT = 4,
    visCtrlAlignmentBOX = 128,
    visCtrlAlignmentLEFTBOX = 129,
    visCtrlAlignmentCENTERBOX = 130,
    visCtrlAlignmentRIGHTBOX = 132
};

enum __declspec(uuid("000d0c85-0000-0000-c000-000000000046"))
VisUICtrlIDs
{
    visCtrlIDNEW = 8383,
    visCtrlIDOPEN = 1,
    visCtrlIDOPENSTEN = 2,
    visCtrlIDSAVE = 3,
    visCtrlIDPRINT = 4,
    visCtrlIDPREVIEW = 5,
    visCtrlIDCUT = 6,
    visCtrlIDCOPY = 7,
    visCtrlIDPASTE = 8,
    visCtrlIDCLEAR = 9,
    visCtrlIDUNDO = 10,
    visCtrlIDREDO = 11,
    visCtrlIDREPEAT = 12,
    visCtrlIDPREVIOUSPAGE = 13,
    visCtrlIDNEXTPAGE = 14,
    visCtrlIDZOOMOUT = 15,
    visCtrlIDZOOMIN = 16,
    visCtrlIDZOOM100 = 17,
    visCtrlIDFLIPHORZ = 18,
    visCtrlIDFLIPVERT = 19,
    visCtrlIDPOINTERTOOL = 20,
    visCtrlIDPENCILTOOL = 21,
    visCtrlIDLINETOOL = 22,
    visCtrlIDQTRARCTOOL = 23,
    visCtrlIDRECTTOOL = 24,
    visCtrlIDOVALTOOL = 25,
    visCtrlIDSTAMPTOOL = 26,
    visCtrlIDTEXTTOOL = 27,
    visCtrlIDROTATETOOL = 28,
    visCtrlIDCROPTOOL = 29,
    visCtrlIDCONNECTIONPTTOOL = 30,
    visCtrlIDSNAP = 31,
    visCtrlIDGLUE = 32,
    visCtrlIDRULER = 33,
    visCtrlIDGRID = 34,
    visCtrlIDGUIDE = 35,
    visCtrlIDCONNECT = 36,
    visCtrlIDROTATECLOCKWISE = 37,
    visCtrlIDROTATECOUNTER = 38,
    visCtrlIDNEWWINDOW = 39,
    visCtrlIDCORNERSTYLE = 40,
    visCtrlIDLINEEND = 41,
    visCtrlIDSHADOWSTYLE = 42,
    visCtrlIDFILLCOLOR = 43,
    visCtrlIDLINECOLOR = 44,
    visCtrlIDLINEWEIGHT = 45,
    visCtrlIDLINEPATTERN = 46,
    visCtrlIDFILLPATTERN = 47,
    visCtrlIDPOINTSIZEDOWN = 48,
    visCtrlIDPOINTSIZEUP = 49,
    visCtrlIDBOLD = 50,
    visCtrlIDITALIC = 51,
    visCtrlIDULINE = 52,
    visCtrlIDSUPERSCRIPT = 53,
    visCtrlIDSUBSCRIPT = 54,
    visCtrlIDTEXTCOLOR = 55,
    visCtrlIDTEXTLEFT = 56,
    visCtrlIDTEXTCENTER = 57,
    visCtrlIDTEXTRIGHT = 58,
    visCtrlIDTEXTJUSTIFY = 59,
    visCtrlIDTEXTTOP = 60,
    visCtrlIDTEXTMIDDLE = 61,
    visCtrlIDTEXTBOTTOM = 62,
    visCtrlIDALIGN = 63,
    visCtrlIDALIGNLEFT = 64,
    visCtrlIDALIGNCENTER = 65,
    visCtrlIDALIGNRIGHT = 66,
    visCtrlIDALIGNTOP = 67,
    visCtrlIDALIGNMIDDLE = 68,
    visCtrlIDALIGNBOTTOM = 69,
    visCtrlIDDISTRIBUTE = 70,
    visCtrlIDDHORZ_EQSPACE = 71,
    visCtrlIDDHORZ_CENTER = 72,
    visCtrlIDDVERT_EQSPACE = 73,
    visCtrlIDDVERT_MIDDLE = 74,
    visCtrlIDCONNECTSHAPES = 75,
    visCtrlIDFIRSTPAGE = 76,
    visCtrlIDLASTPAGE = 77,
    visCtrlIDPAGEBREAKS = 78,
    visCtrlIDICONNAME = 80,
    visCtrlIDICONONLY = 81,
    visCtrlIDNAMEONLY = 82,
    visCtrlIDARRANGEICONS = 83,
    visCtrlIDCANCELFORMULA = 84,
    visCtrlIDACCEPTFORMULA = 85,
    visCtrlIDICONPENCIL = 86,
    visCtrlIDICONBUCKET = 87,
    visCtrlIDICONLASSO = 88,
    visCtrlIDICONSELNET = 89,
    visCtrlIDBRINGFRONT = 90,
    visCtrlIDSENDBACK = 91,
    visCtrlIDGROUP = 92,
    visCtrlIDUNGROUP = 93,
    visCtrlIDCASCADE = 94,
    visCtrlIDTILE = 95,
    visCtrlIDCONNECTORTOOL = 96,
    visCtrlIDTEXTBLOCKTOOL = 97,
    visCtrlIDWHOLEPAGE = 98,
    visCtrlIDSINGLETILE = 99,
    visCtrlIDFORMULA = 190,
    visCtrlIDSPACER = 191,
    visCtrlIDALLSTYLESCOMBO = 200,
    visCtrlIDTEXTSTYLECOMBO = 201,
    visCtrlIDLINESTYLECOMBO = 202,
    visCtrlIDFILLSTYLECOMBO = 203,
    visCtrlIDZOOMCOMBO = 204,
    visCtrlIDFONTCOMBO = 205,
    visCtrlIDPOINTSIZECOMBO = 206,
    visCtrlIDALLSTYLESLIST = 220,
    visCtrlIDTEXTSTYLELIST = 221,
    visCtrlIDLINESTYLELIST = 222,
    visCtrlIDFILLSTYLELIST = 223,
    visCtrlIDZOOMLIST = 224,
    visCtrlIDFONTLIST = 225,
    visCtrlIDPOINTSIZELIST = 226,
    visCtrlIDGOTOPAGELIST = 227,
    visCtrlIDCLOSE = 240,
    visCtrlIDLEFTCOLORBOX = 300,
    visCtrlIDRIGHTCOLORBOX = 301,
    visCtrlIDCOLOR1 = 302,
    visCtrlIDCOLOR2 = 303,
    visCtrlIDCOLOR3 = 304,
    visCtrlIDCOLOR4 = 305,
    visCtrlIDCOLOR5 = 306,
    visCtrlIDCOLOR6 = 307,
    visCtrlIDCOLOR7 = 308,
    visCtrlIDCOLOR8 = 309,
    visCtrlIDCOLOR9 = 310,
    visCtrlIDCOLOR10 = 311,
    visCtrlIDCOLOR11 = 312,
    visCtrlIDCOLOR12 = 313,
    visCtrlIDCOLOR13 = 314,
    visCtrlIDCOLOR14 = 315,
    visCtrlIDCOLOR15 = 316,
    visCtrlIDCOLOR16 = 317,
    visCtrlIDTRANSPARENT = 318,
    visCtrlIDALLSTYLESLABEL = 400,
    visCtrlIDTEXTSTYLELABEL = 401,
    visCtrlIDLINESTYLELABEL = 402,
    visCtrlIDFILLSTYLELABEL = 403,
    visCtrlIDZOOMLABEL = 404,
    visCtrlIDFONTLABEL = 405,
    visCtrlIDPOINTSIZELABEL = 406,
    visCtrlIDLEFTCOLORLABEL = 407,
    visCtrlIDRIGHTCOLORLABEL = 408,
    visCtrlIDSTATUSLABEL = 409,
    visCtrlIDPREVIEWLABEL = 410,
    visCtrlIDSTATUSREADOUT = 500,
    visCtrlIDSTATUSMSG_1 = 501,
    visCtrlIDSTATUSMSG_2 = 502,
    visCtrlIDSTATUSMSG_3 = 503,
    visCtrlIDSTATUSMSG_4 = 504,
    visCtrlIDSTATUSMSG_5 = 505,
    visCtrlIDSTATUSMSG_6 = 506,
    visCtrlIDSTATUSMSG_7 = 507,
    visCtrlIDSTATUSMSG_8 = 508,
    visCtrlIDSTATUSMSG_9 = 509,
    visCtrlIDSPLINETOOL = 79,
    visCtrlIDSPELLING = 100,
    visCtrlIDFORMATPAINTER = 101,
    visCtrlIDHELPMODE = 102,
    visCtrlIDLAYERPROPERTIES = 103,
    visCtrlIDLAYOUTSHAPES = 104,
    visCtrlIDINSERTHYPERLINK = 105,
    visCtrlIDSEARCHTHEWEB = 106,
    visCtrlIDGOBACK = 107,
    visCtrlIDGOFORWARD = 108,
    visCtrlIDWEBTOOLBAR = 109,
    visCtrlIDSHAPEEXPL = 110,
    visCtrlIDCUSTPROP = 111,
    visCtrlIDROTATETEXT = 112,
    visCtrlIDBULLETS = 113,
    visCtrlIDDECRINDENT = 114,
    visCtrlIDINCRINDENT = 115,
    visCtrlIDDECRPARA = 116,
    visCtrlIDINCRPARA = 117,
    visCtrlIDINSERTCONTROL = 118,
    visCtrlIDDESIGNMODE = 119,
    visCtrlIDSHAPESHEET = 120,
    visCtrlIDSHAPELAYER = 247,
    visCtrlIDGOTOPAGE = 207,
    visCtrlIDLINECOLORS = 241,
    visCtrlIDLINEWEIGHTS = 242,
    visCtrlIDLINEPATTERNS = 243,
    visCtrlIDFILLCOLORS = 244,
    visCtrlIDFILLPATTERNS = 245,
    visCtrlIDTEXTCOLORS = 246,
    visCtrlIDMACROS = 121,
    visCtrlIDVBEDITOR = 122,
    visCtrlIDSHAPELAYERCOMBO = 208,
    visCtrlIDSHAPELAYERLIST = 228,
    visCtrlIDALIGNSHAPES = 260,
    visCtrlIDDISTRIBUTESHAPES = 261,
    visCtrlIDMSG_PAGES = 510
};

enum __declspec(uuid("000d0c86-0000-0000-c000-000000000046"))
VisUIIconIDs
{
    visIconIXNEW = 0,
    visIconIXOPEN = 1,
    visIconIXOPENSTENCIL = 2,
    visIconIXSAVE = 3,
    visIconIXPRINT = 4,
    visIconIXPRINTPREVIEW = 5,
    visIconIXCUT = 6,
    visIconIXCOPY = 7,
    visIconIXPASTE = 8,
    visIconIXCLEAR = 9,
    visIconIXUNDO = 10,
    visIconIXREDO = 11,
    visIconIXREPEAT = 12,
    visIconIXPREVIOUSPAGE = 13,
    visIconIXNEXTPAGE = 14,
    visIconIXZOOMOUT = 15,
    visIconIXZOOMIN = 16,
    visIconIXZOOM100 = 17,
    visIconIXFLIPHORIZONTAL = 18,
    visIconIXFLIPVERTICAL = 19,
    visIconIXPOINTERTOOL = 20,
    visIconIXPENCILTOOL = 21,
    visIconIXLINETOOL = 22,
    visIconIXQTRARCTOOL = 23,
    visIconIXRECTANGLETOOL = 24,
    visIconIXOVALTOOL = 25,
    visIconIXSTAMPTOOL = 26,
    visIconIXTEXTOOL = 27,
    visIconIXROTATETOOL = 28,
    visIconIXCROP = 29,
    visIconIXCONNECTIONPTTOOL = 30,
    visIconIXSNAP = 31,
    visIconIXGLUE = 32,
    visIconIXRULER = 33,
    visIconIXGRID = 34,
    visIconIXGUIDE = 35,
    visIconIXCONNECTIONPOINTS = 36,
    visIconIXROTATECLOCKWISE = 37,
    visIconIXROTATECOUNTERCLOCKWISE = 38,
    visIconIXNEWWINDOW = 39,
    visIconIXCORNERSTYLE = 40,
    visIconIXLINEEND = 41,
    visIconIXSHADOWSTYLE = 42,
    visIconIXFILLCOLOR = 43,
    visIconIXLINECOLOR = 44,
    visIconIXLINEWEIGHT = 45,
    visIconIXLINEPATTERN = 46,
    visIconIXFILLPATTERN = 47,
    visIconIXPOINTSIZEDOWN = 48,
    visIconIXPOINTSIZEUP = 49,
    visIconIXBOLD = 50,
    visIconIXITALIC = 51,
    visIconIXUNDERLINE = 52,
    visIconIXSUPERSCRIPT = 53,
    visIconIXSUBSCRIPT = 54,
    visIconIXTEXTCOLOR = 55,
    visIconIXTEXTALIGNLEFT = 56,
    visIconIXTEXTALIGNCENTER = 57,
    visIconIXTEXTALIGNRIGHT = 58,
    visIconIXTEXTALIGNJUSTIFY = 59,
    visIconIXTEXTALIGNTOP = 60,
    visIconIXTEXTALIGNMIDDLE = 61,
    visIconIXTEXTALIGNBOTTOM = 62,
    visIconIXALIGN = 63,
    visIconIXALIGNLEFT = 64,
    visIconIXALIGNCENTER = 65,
    visIconIXALIGNRIGHT = 66,
    visIconIXALIGNTOP = 67,
    visIconIXALIGNMIDDLE = 68,
    visIconIXALIGNBOTTOM = 69,
    visIconIXDISTRIBUTE = 70,
    visIconIXDHORZ_EQSPACE = 71,
    visIconIXDHORZ_CENTER = 72,
    visIconIXDVERT_EQSPACE = 73,
    visIconIXDVERT_MIDDLE = 74,
    visIconIXCONNECTSHAPES = 75,
    visIconIXFIRSTPAGE = 76,
    visIconIXLASTPAGE = 77,
    visIconIXPAGEBREAKS = 78,
    visIconIXSPLINETOOL = 79,
    visIconIXICONNAME = 80,
    visIconIXICONONLY = 81,
    visIconIXNAMEONLY = 82,
    visIconIXARRANGE = 83,
    visIconIXCANCEL = 84,
    visIconIXACCEPT = 85,
    visIconIXICONPENCIL = 86,
    visIconIXICONBUCKET = 87,
    visIconIXICONLASSO = 88,
    visIconIXICONSELNET = 89,
    visIconIXBRINGFRONT = 90,
    visIconIXSENDBACK = 91,
    visIconIXGROUP = 92,
    visIconIXUNGROUP = 93,
    visIconIXCASCADE = 94,
    visIconIXTILE = 95,
    visIconIXCONNECTORTOOL = 96,
    visIconIXTEXTBLOCKTOOL = 97,
    visIconIXWHOLEPAGE = 98,
    visIconIXSINGLETILE = 99,
    visIconIXSPELLING = 100,
    visIconIXFORMATPAINTER = 101,
    visIconIXHELPMODE = 102,
    visIconIXLAYERPROPERTIES = 103,
    visIconIXLAYOUTSHAPES = 104,
    visIconIXINSERTHYPERLINK = 105,
    visIconIXSEARCHTHEWEB = 106,
    visIconIXGOBACK = 107,
    visIconIXGOFORWARD = 108,
    visIconIXWEBTOOLBAR = 109,
    visIconIXSHAPEEXPL = 110,
    visIconIXCUSTPROP = 111,
    visIconIXROTATETEXT = 112,
    visIconIXBULLETS = 113,
    visIconIXDECRINDENT = 114,
    visIconIXINCRINDENT = 115,
    visIconIXDECRPARA = 116,
    visIconIXINCRPARA = 117,
    visIconIXINSERTCONTROL = 118,
    visIconIXDESIGNMODE = 119,
    visIconIXSHAPESHEET = 120,
    visIconIXMACROS = 121,
    visIconIXVBEDITOR = 122,
    visIconIXVERTICALTEXT = 123,
    visIconIXFULLSCREEN = 124,
    visIconIXHELPBOOK = 125,
    visIconIXSHAPEEXPLORER = 126,
    visIconIXWEBPAGE = 127,
    visIconIXCHECKMARK = 128,
    visIconIXCANTFIND = 129,
    visIconIXCLIPART = 130,
    visIconIXIMAGE = 131,
    visIconIXWORDART = 132,
    visIconIXHELPASSISTANT = 133,
    visIconIXCHART = 134,
    visIconIXMAILRECPT = 135,
    visIconIXROUTINGRECPT = 136,
    visIconIXEXCHANGEFOLDER = 137,
    visIconIXFIND = 138,
    visIconIXPANZOOM = 139,
    visIconIXRESTORE = 140,
    visIconIXMINIMIZE = 141,
    visIconIXMAXIMIZE = 142,
    visIconIXCLOSE = 143,
    visIconIXFOLDER = 144,
    visIconIXVSD = 145,
    visIconIXVSS = 146,
    visIconIXVST = 147,
    visIconIXVBAMACRO = 148,
    visIconIXADDIN = 149,
    visIconIXSIZEPOS = 150,
    visIconIXCUSTOM_SMILE = 151,
    visIconIXCUSTOM_FROWN = 152,
    visIconIXCUSTOM_BANK = 153,
    visIconIXCUSTOM_PASTE = 154,
    visIconIXCUSTOM_LOAD = 155,
    visIconIXCUSTOM_SAVE = 156,
    visIconIXCUSTOM_MIC = 157,
    visIconIXCUSTOM_SPEAKER = 158,
    visIconIXCUSTOM_BELL = 159,
    visIconIXCUSTOM_NOTE = 160,
    visIconIXCUSTOM_PHONE = 161,
    visIconIXCUSTOM_BALLOON = 162,
    visIconIXCUSTOM_CAMCORD = 163,
    visIconIXCUSTOM_CALC = 164,
    visIconIXCUSTOM_HEART = 165,
    visIconIXCUSTOM_DIAMOND = 166,
    visIconIXCUSTOM_SPADE = 167,
    visIconIXCUSTOM_CLUB = 168,
    visIconIXCUSTOM_CARDS = 169,
    visIconIXCUSTOM_MUG = 170,
    visIconIXCUSTOM_TRASH = 171,
    visIconIXCUSTOM_PENCIL = 172,
    visIconIXCUSTOM_BOX = 173,
    visIconIXCUSTOM_FEET = 174,
    visIconIXCUSTOM_LEFT = 175,
    visIconIXCUSTOM_RIGHT = 176,
    visIconIXCUSTOM_UP = 177,
    visIconIXCUSTOM_DOWN = 178,
    visIconIXCUSTOM_TACK = 179,
    visIconIXCUSTOM_KEYBOARD = 180,
    visIconIXCUSTOM_PAGES = 181,
    visIconIXCUSTOM_FISH = 182,
    visIconIXCUSTOM_KEY = 183,
    visIconIXCUSTOM_GEARS = 184,
    visIconIXCUSTOM_SCALES = 185,
    visIconIXCUSTOM_HOURGLASS = 186,
    visIconIXCUSTOM_MAN = 187,
    visIconIXCUSTOM_WOMAN = 188,
    visIconIXCUSTOM_RUN = 189,
    visIconIXCUSTOM_EYE = 190,
    visIconIXCUSTOM_EIGHTBALL = 191,
    visIconIXCUSTOM_QUESTION = 192,
    visIconIXINSERTCOMMENT = 193,
    visIconIXEDITCOMMENT = 194,
    visIconIXDELETECOMMENT = 195,
    visIconIXDELETE = 196,
    visIconIXEDITSTEN = 197,
    visIconIXNEWSTEN = 198,
    visIconIXSHOWDOCSTEN = 199,
    visIconIXPAGELINEJUMPCODE_NONE = 200,
    visIconIXPAGELINEJUMPCODE_HORZ = 201,
    visIconIXPAGELINEJUMPCODE_VERT = 202,
    visIconIXPAGELINEJUMPCODE_LASTROUTED = 203,
    visIconIXLINEJUMPSTYLE_ARC = 204,
    visIconIXLINEJUMPSTYLE_GAP = 205,
    visIconIXLINEJUMPSTYLE_SQUARE = 206,
    visIconIXLINEJUMPSTYLE_TRIANGLE = 207,
    visIconIXLINEJUMPSTYLE_2PT = 208,
    visIconIXLINEJUMPSTYLE_3PT = 209,
    visIconIXLINEJUMPSTYLE_4PT = 210,
    visIconIXLINEJUMPSTYLE_5PT = 211,
    visIconIXLINEJUMPSTYLE_6PT = 212,
    visIconIXDCREROUTE_FREELY = 213,
    visIconIXDCREROUTE_ASNEEDED = 214,
    visIconIXCUSTOMPROP_WINDOW = 215,
    visIconIXPAGEPLOW = 216,
    visIconIXPAGELINEJUMPCODE_DISP = 217,
    visIconIXLINEJUMPSTYLE_PAGE = 218,
    visIconIXDRAWINGEXPLORER = 219,
    visIconIXSHAPE_INTERSECT = 220,
    visIconIXDYNGRID = 221,
    visIconIXRULSUB = 222,
    visIconIXSNAPTOGRID = 223,
    visIconIXALIGNBOX = 224,
    visIconIXSHAPEGEO = 225,
    visIconIXGUIDES = 226,
    visIconIXSHAPEHAND = 227,
    visIconIXSHAPEVERT = 228,
    visIconIXCONNPOINTS = 229,
    visIconIXSHAPEEXT = 230,
    visIconIXPAGELINEJUMPCODE_RDISP = 231,
    visIconIXSNAP_LINES = 232,
    visIconIXSTRIKETHROUGH = 233,
    visIconIXSMALLCAPS = 234,
    visIconIXDCREROUTE_NEVER = 235,
    visIconIXDCREROUTE = 236,
    visIconIXBRING_FORWARD = 245,
    visIconIXSEND_BACKWARD = 246,
    visIconIXSMALL_PADLOCK = 247,
    visIconIXINSERT_OBJECT = 248,
    visIconIXLARGE_PADLOCK = 249,
    visIconIXINSERT_EQUATION = 250,
    visIconIXSTYLE = 251,
    visIconIXREPLACE = 252,
    visIconIXDOUBLE_UNDERLINE = 253
};

enum __declspec(uuid("000d0c87-0000-0000-c000-000000000046"))
VisUIStringIDs
{
    visStrIDPlaceHolder = 0
};

enum __declspec(uuid("000d0c26-0000-0000-c000-000000000046"))
VisScrollbarStates
{
    visScrollBarNeither = 0,
    visScrollBarHoriz = 1,
    visScrollBarVert = 4,
    visScrollBarBoth = 5
};

enum __declspec(uuid("000d0c24-0000-0000-c000-000000000046"))
VisDocModeArgs
{
    visInvalDocID = -1,
    visDocModeRun = 0,
    visDocModeDesign = 1
};

enum __declspec(uuid("000d0c25-0000-0000-c000-000000000046"))
VisTraceFlags
{
    visTraceEvents = 1,
    visTraceAdvises = 2,
    visTraceAddonInvokes = 4,
    visTraceCallsToVBA = 8
};

enum __declspec(uuid("000d0c27-0000-0000-c000-000000000046"))
VisSpatialRelationCodes
{
    visSpatialOverlap = 1,
    visSpatialContain = 2,
    visSpatialContainedIn = 4,
    visSpatialTouching = 8
};

enum __declspec(uuid("000d0c28-0000-0000-c000-000000000046"))
VisSpatialRelationFlags
{
    visSpatialIncludeGuides = 2,
    visSpatialFrontToBack = 4,
    visSpatialBackToFront = 8,
    visSpatialIncludeHidden = 16,
    visSpatialIgnoreVisible = 32,
    visSpatialIncludeDataGraphics = 64
};

enum __declspec(uuid("000d0c2f-0000-0000-c000-000000000046"))
VisSelectMode
{
    visSelModeSkipSuper = 256,
    visSelModeOnlySuper = 512,
    visSelModeSkipSub = 1024,
    visSelModeOnlySub = 2048
};

enum __declspec(uuid("000d0c30-0000-0000-c000-000000000046"))
VisSelectItemStatus
{
    visSelIsPrimaryItem = 1,
    visSelIsSubItem = 2,
    visSelIsSuperItem = 4
};

enum __declspec(uuid("000d0c31-0000-0000-c000-000000000046"))
VisGeomFlags
{
    visGeomExcludeLastPoint = 1,
    visGeomWHPct = 16,
    visGeomXYLocal = 32
};

enum __declspec(uuid("000d0c2e-0000-0000-c000-000000000046"))
VisDrawRegionFlags
{
    visDrawRegionDeleteInput = 4,
    visDrawRegionIncludeHidden = 16,
    visDrawRegionIgnoreVisible = 32,
    visDrawRegionIncludeDataGraphics = 64
};

enum __declspec(uuid("000d0c29-0000-0000-c000-000000000046"))
VisWindowStates
{
    visWSNone = 0,
    visWSMaximized = 1073741824,
    visWSMinimized = 536870912,
    visWSRestored = 268435456,
    visWSVisible = 134217728,
    visWSDockedLeft = 1,
    visWSDockedTop = 2,
    visWSDockedRight = 4,
    visWSDockedBottom = 8,
    visWSFloating = 16,
    visWSAnchorLeft = 32,
    visWSAnchorTop = 64,
    visWSAnchorRight = 128,
    visWSAnchorBottom = 256,
    visWSAnchorAutoHide = 512,
    visWSAnchorMerged = 1024,
    visWSActive = 67108864
};

enum __declspec(uuid("000d0c2a-0000-0000-c000-000000000046"))
VisWindowFit
{
    visFitNone = 0,
    visFitPage = 1,
    visFitWidth = 2
};

enum __declspec(uuid("000d0c2b-0000-0000-c000-000000000046"))
VisWindowScrollX
{
    visScrollNoneX = 9,
    visScrollLeft = 0,
    visScrollLeftPage = 2,
    visScrollRight = 1,
    visScrollRightPage = 3,
    visScrollToLeft = 6,
    visScrollToRight = 7
};

enum __declspec(uuid("000d0c2c-0000-0000-c000-000000000046"))
VisWindowScrollY
{
    visScrollNoneY = 9,
    visScrollUp = 0,
    visScrollUpPage = 2,
    visScrollDown = 1,
    visScrollDownPage = 3,
    visScrollToTop = 6,
    visScrollToBottom = 7
};

enum __declspec(uuid("000d0c2d-0000-0000-c000-000000000046"))
VisWindowArrange
{
    visArrangeTileVertical = 1,
    visArrangeTileHorizontal = 2,
    visArrangeCascade = 3
};

enum __declspec(uuid("000d0c88-0000-0000-c000-000000000046"))
VisUIMenuAnimation
{
    visMenuAnimationNone = 0,
    visMenuAnimationRandom = 1,
    visMenuAnimationUnfold = 2,
    visMenuAnimationSlide = 3
};

enum __declspec(uuid("000d0c89-0000-0000-c000-000000000046"))
VisUIBarPosition
{
    visBarLeft = 0,
    visBarTop = 1,
    visBarRight = 2,
    visBarBottom = 3,
    visBarFloating = 4,
    visBarPopup = 5,
    visBarMenu = 6
};

enum __declspec(uuid("000d0c8a-0000-0000-c000-000000000046"))
VisUIBarProtection
{
    visBarNoProtection = 0,
    visBarNoCustomize = 1,
    visBarNoResize = 2,
    visBarNoMove = 4,
    visBarNoChangeDock = 16,
    visBarNoVerticalDock = 32,
    visBarNoHorizontalDock = 64
};

enum __declspec(uuid("000d0c8b-0000-0000-c000-000000000046"))
VisUIButtonState
{
    visButtonUp = 0,
    visButtonDown = -1,
    visButtonMixed = 2
};

enum __declspec(uuid("000d0c8c-0000-0000-c000-000000000046"))
VisUIButtonStyle
{
    visButtonAutomatic = 0,
    visButtonIcon = 1,
    visButtonCaption = 2,
    visButtonIconandCaption = 3
};

enum __declspec(uuid("000d0c8d-0000-0000-c000-000000000046"))
VisUIBarRow
{
    visBarRowFirst = 0,
    visBarRowLast = -1
};

enum __declspec(uuid("000d0c3c-0000-0000-c000-000000000046"))
VisDocCleanTargets
{
    visDocCleanTargFPages = 1,
    visDocCleanTargBPages = 2,
    visDocCleanTargMasters = 4,
    visDocCleanTargStyles = 8,
    visDocCleanTargDoc = 16,
    visDocCleanTargRPages = 32,
    visDocCleanPageSheet = 256,
    visDocCleanTargAll = 255
};

enum __declspec(uuid("000d0c3d-0000-0000-c000-000000000046"))
VisDocCleanActions
{
    visDocCleanActLocalFormulas = 1,
    visDocCleanActEmptyRowsAndSects = 2,
    visDocCleanActNonDefaultFonts = 4,
    visDocCleanActStaleResults = 8,
    visDocCleanActMissingSubs = 16,
    visDocCleanActConstantFormulas = 32,
    visDocCleanActNearZero = 64,
    visDocCleanActDuplicateSubs = 128,
    visDocCleanActBadDisplayLists = 256,
    visDocCleanActBadFieldCounts = 512,
    visDocCleanActDeletedFields = 1024,
    visDocCleanActBadFieldFormulas = 2048,
    visDocCleanActBadFieldMarks = 4096,
    visDocCleanActBadReferences = 8192,
    visDocCleanActAll = 16383,
    visDocCleanActDefault = 8152,
    visDocCleanAlertDefault = 0,
    visDocCleanFixDefault = 984
};

enum __declspec(uuid("000d0c3b-0000-0000-c000-000000000046"))
VisZoomBehavior
{
    visZoomNone = 0,
    visZoomInPlaceContainer = 1,
    visZoomVisio = 2,
    visZoomVisioExact = 4
};

enum __declspec(uuid("000d0c32-0000-0000-c000-000000000046"))
VisSnapSettings
{
    visSnapToNone = 0,
    visSnapToRulerSubdivisions = 1,
    visSnapToGrid = 2,
    visSnapToGuides = 4,
    visSnapToHandles = 8,
    visSnapToVertices = 16,
    visSnapToConnectionPoints = 32,
    visSnapToGeometry = 256,
    visSnapToAlignmentBox = 512,
    visSnapToExtensions = 1024,
    visSnapToDisabled = 32768,
    visSnapToIntersections = 65536
};

enum __declspec(uuid("000d0c33-0000-0000-c000-000000000046"))
VisSnapExtensions
{
    visSnapExtNone = 0,
    visSnapExtAlignmentBoxExtension = 1,
    visSnapExtCenterAxes = 2,
    visSnapExtCurveTangent = 4,
    visSnapExtEndpoint = 8,
    visSnapExtMidpoint = 16,
    visSnapExtLinearExtension = 32,
    visSnapExtCurveExtension = 64,
    visSnapExtEndpointPerpendicular = 128,
    visSnapExtMidpointPerpendicular = 256,
    visSnapExtEndpointHorizontal = 512,
    visSnapExtEndpointVertical = 1024,
    visSnapExtEllipseCenter = 2048,
    visSnapExtIsometricAngles = 4096
};

enum __declspec(uuid("000d0c34-0000-0000-c000-000000000046"))
VisGlueSettings
{
    visGlueToNone = 0,
    visGlueToGuides = 1,
    visGlueToHandles = 2,
    visGlueToVertices = 4,
    visGlueToConnectionPoints = 8,
    visGlueToGeometry = 32,
    visGlueToDisabled = 32768
};

enum __declspec(uuid("000d0c35-0000-0000-c000-000000000046"))
VisProtection
{
    visProtectNone = 0,
    visProtectStyles = 1,
    visProtectShapes = 2,
    visProtectMasters = 4,
    visProtectBackgrounds = 8,
    visProtectPreviews = 16
};

enum __declspec(uuid("000d0c36-0000-0000-c000-000000000046"))
VisPaperSizes
{
    visPaperSizeUnknown = 0,
    visPaperSizeLetter = 1,
    visPaperSizeLegal = 5,
    visPaperSizeA3 = 8,
    visPaperSizeA4 = 9,
    visPaperSizeA5 = 11,
    visPaperSizeB4 = 12,
    visPaperSizeB5 = 13,
    visPaperSizeFolio = 14,
    visPaperSizeNote = 18,
    visPaperSizeC = 24,
    visPaperSizeD = 25,
    visPaperSizeE = 26
};

enum __declspec(uuid("000d0c37-0000-0000-c000-000000000046"))
VisSavePreviewMode
{
    visSavePreviewNone = 0,
    visSavePreviewDraft1st = 1,
    visSavePreviewDetailed1st = 2,
    visSavePreviewDraftAll = 4,
    visSavePreviewDetailedAll = 8
};

enum __declspec(uuid("000d0c38-0000-0000-c000-000000000046"))
VisPasteSpecialCodes
{
    visPasteText = 1,
    visPasteBitmap = 2,
    visPasteMetafile = 3,
    visPasteOEMText = 7,
    visPasteDIB = 8,
    visPasteEMF = 14,
    visPasteOLEObject = 65536,
    visPasteRichText = 65537,
    visPasteHyperlink = 65538,
    visPasteURL = 65539,
    visPasteVisioShapes = 65540,
    visPasteVisioMasters = 65541,
    visPasteVisioText = 65542,
    visPasteVisioIcon = 65543,
    visPasteInk = 65544,
    visPasteVisioShapesXML = 65545,
    visPasteVisioMastersXML = 65546,
    visPasteVisioShapesWithoutDataLinks = 65548
};

enum __declspec(uuid("000d0c39-0000-0000-c000-000000000046"))
VisCutCopyPasteCodes
{
    visCopyPasteNormal = 0,
    visCopyPasteNoTranslate = 1
};

enum __declspec(uuid("000d0c3a-0000-0000-c000-000000000046"))
VisOnComponentEnterCodes
{
    visComponentStateModal = 1,
    visModalDeferEvents = 65536,
    visModalNoBeforeAfter = 131072,
    visModalDontBlockMessages = 262144,
    visModalDisableVisiosFrame = 524288
};

enum __declspec(uuid("000d0c40-0000-0000-c000-000000000046"))
VisDocumentTypes
{
    visDocTypeInval = 0,
    visTypeDrawing = 1,
    visTypeStencil = 2,
    visTypeTemplate = 3
};

enum __declspec(uuid("000d0c41-0000-0000-c000-000000000046"))
VisSelectionTypes
{
    visSelTypeEmpty = 0,
    visSelTypeAll = 1,
    visSelTypeSingle = 2,
    visSelTypeByLayer = 3,
    visSelTypeByType = 4,
    visSelTypeByMaster = 5,
    visSelTypeByDataGraphic = 6
};

enum __declspec(uuid("000d0c3e-0000-0000-c000-000000000046"))
VisMeasurementSystem
{
    visMSDefault = 0,
    visMSMetric = 1,
    visMSUS = 2
};

enum __declspec(uuid("000d0c42-0000-0000-c000-000000000046"))
VisRotationTypes
{
    visRotateSelection = 0,
    visRotateSelectionWithPin = 1,
    visRotateShapes = 2
};

enum __declspec(uuid("000d0c43-0000-0000-c000-000000000046"))
VisVerticalAlignTypes
{
    visVertAlignNone = 0,
    visVertAlignTop = 1,
    visVertAlignMiddle = 2,
    visVertAlignBottom = 3
};

enum __declspec(uuid("000d0c44-0000-0000-c000-000000000046"))
VisHorizontalAlignTypes
{
    visHorzAlignNone = 0,
    visHorzAlignLeft = 1,
    visHorzAlignCenter = 2,
    visHorzAlignRight = 3
};

enum __declspec(uuid("000d0c45-0000-0000-c000-000000000046"))
VisDistributeTypes
{
    visDistHorzSpace = 0,
    visDistHorzLeft = 1,
    visDistHorzCenter = 2,
    visDistHorzRight = 3,
    visDistVertSpace = 4,
    visDistVertTop = 5,
    visDistVertMiddle = 6,
    visDistVertBottom = 7
};

enum __declspec(uuid("000d0c46-0000-0000-c000-000000000046"))
VisFlipDirection
{
    visFlipHorizontal = 1,
    visFlipVertical = 2
};

enum __declspec(uuid("000d0c47-0000-0000-c000-000000000046"))
VisFlipTypes
{
    visFlipSelection = 0,
    visFlipSelectionWithPin = 1,
    visFlipShapes = 2
};

enum __declspec(uuid("000d0c48-0000-0000-c000-000000000046"))
VisKeyButtonFlags
{
    visMouseLeft = 1,
    visMouseMiddle = 16,
    visMouseRight = 2,
    visKeyShift = 4,
    visKeyControl = 8
};

enum __declspec(uuid("000d0c49-0000-0000-c000-000000000046"))
VisDefaultSaveFormats
{
    visDefaultSaveCurrentBinary = 0,
    visDefaultSavePreviousBinary = 1,
    visDefaultSaveCurrentXML = 2
};

enum __declspec(uuid("000d0c50-0000-0000-c000-000000000046"))
VisTextDisplayQualityTypes
{
    visTextDisplayFaster = 0,
    visTextDisplayHigherQuality = 1,
    visTextDisplayClear = 2
};

enum __declspec(uuid("000d0c51-0000-0000-c000-000000000046"))
VisPageTypes
{
    visPageTypeInval = 0,
    visTypeForeground = 1,
    visTypeBackground = 2,
    visTypeMarkup = 3
};

enum __declspec(uuid("000d0c52-0000-0000-c000-000000000046"))
VisRegionalUIOptions
{
    VisRegionalUIOptionsUseSystemSettings = 65535,
    VisRegionalUIOptionsHide = 0,
    VisRegionalUIOptionsShow = 1
};

enum __declspec(uuid("000d0c53-0000-0000-c000-000000000046"))
VisPrintOutRange
{
    visPrintAll = 0,
    visPrintFromTo = 1,
    visPrintCurrentPage = 2,
    visPrintSelection = 3,
    visPrintCurrentView = 4
};

enum __declspec(uuid("000d0c54-0000-0000-c000-000000000046"))
VisPageAndMasterIDs
{
    visInvalPageID = -1,
    visInvalMasterID = -1
};

enum __declspec(uuid("000d0c55-0000-0000-c000-000000000046"))
VisPageSizingBehaviors
{
    visNeverResizePages = 0,
    visResizePages = 1
};

enum __declspec(uuid("000d0c56-0000-0000-c000-000000000046"))
VisTypeSelectionTypes
{
    visTypeSelGroup = 1,
    visTypeSelShape = 2,
    visTypeSelGuide = 4,
    visTypeSelMetafile = 8,
    visTypeSelBitmap = 16,
    visTypeSelInk = 32,
    visTypeSelOLE = 64
};

enum __declspec(uuid("000d0c57-0000-0000-c000-000000000046"))
VisArcSweepFlags
{
    visArcSweepFlagConcave = 0,
    visArcSweepFlagConvex = 1
};

enum VisLinkReplaceBehavior
{
    visLinkReplaceNever = 0,
    visLinkReplaceAlways = 1,
    visLinkReplacePrompt = 2
};

enum VisDataColumnProperties
{
    visDataColumnPropertyType = 1,
    visDataColumnPropertyLangID = 2,
    visDataColumnPropertyCalendar = 3,
    visDataColumnPropertyUnits = 4,
    visDataColumnPropertyCurrency = 5,
    visDataColumnPropertyDisplayName = 6,
    visDataColumnPropertyVisible = 7,
    visDataColumnPropertyHyperlink = 8
};

enum VisPrimaryKeySettings
{
    visKeyRowOrder = 1,
    visKeySingle = 2,
    visKeyComposite = 3
};

enum VisAutoConnectDir
{
    visAutoConnectDirNone = 0,
    visAutoConnectDirUp = 1,
    visAutoConnectDirDown = 2,
    visAutoConnectDirLeft = 3,
    visAutoConnectDirRight = 4
};

enum VisMasterTypes
{
    visTypeMaster = 1,
    visTypeFillPattern = 2,
    visTypeLinePattern = 3,
    visTypeLineEnd = 4,
    visTypeDataGraphic = 5,
    visTypeThemeColors = 6,
    visTypeThemeEffects = 7
};

enum VisGraphicPositionHorizontal
{
    visGraphicFarLeft = 0,
    visGraphicLeftEdge = 1,
    visGraphicLeft = 2,
    visGraphicCenter = 3,
    visGraphicRight = 4,
    visGraphicRightEdge = 5,
    visGraphicFarRight = 6
};

enum VisGraphicPositionVertical
{
    visGraphicBelow = 0,
    visGraphicBottomEdge = 1,
    visGraphicBottom = 2,
    visGraphicMiddle = 3,
    visGraphicTop = 4,
    visGraphicTopEdge = 5,
    visGraphicAbove = 6
};

enum VisGraphicItemTypes
{
    visTypeIconSet = 2,
    visTypeTextCallout = 3,
    visTypeDataBar = 4,
    visTypeColorByValue = 5,
    visTypeHeading = 6
};

enum VisGraphicField
{
    visGraphicPropertyLabel = 1,
    visGraphicExpression = 2
};

enum VisThemeTypes
{
    visThemeTypeColor = 1,
    visThemeTypeEffect = 2
};

enum VisFixedFormatTypes
{
    visFixedFormatPDF = 1,
    visFixedFormatXPS = 2
};

enum VisDocExIntent
{
    visDocExIntentScreen = 0,
    visDocExIntentPrint = 1
};

enum VisMouseMoveDragStates
{
    visMouseMoveDragStatesNone = 0,
    visMouseMoveDragStatesBegin = 1,
    visMouseMoveDragStatesEnter = 2,
    visMouseMoveDragStatesOver = 3,
    visMouseMoveDragStatesLeave = 4,
    visMouseMoveDragStatesDrop = 5
};

enum VisRemoveHiddenInfoItems
{
    visRHINone = 0,
    visRHIPersonalInfo = 1,
    visRHIPreview = 2,
    visRHIMasters = 4,
    visRHIStyles = 8,
    visRHIDataRecordsets = 16
};

enum VisAutoLinkFieldTypes
{
    visAutoLinkShapeText = 1,
    visAutoLinkCustPropsLabel = 2,
    visAutoLinkUserRowName = 3,
    visAutoLinkGeometryAngle = 4,
    visAutoLinkGeometryWidth = 5,
    visAutoLinkGeometryHeight = 6,
    visAutoLinkObjectID = 7,
    visAutoLinkMasterName = 8,
    visAutoLinkObjectName = 9,
    visAutoLinkObjectType = 10,
    visAutoLinkObjectData1 = 11,
    visAutoLinkObjectData2 = 12,
    visAutoLinkObjectData3 = 13,
    visAutoLinkPropRowNameU = 14,
    visAutoLinkUserRowNameU = 15,
    visAutoLinkMasterNameU = 16,
    visAutoLinkObjectNameU = 17
};

enum VisRefreshSettings
{
    visRefreshOverwriteAll = 1,
    visRefreshNoReconcilationUI = 2
};

enum VisDataRecordsetAddOptions
{
    visDataRecordsetNoExternalDataUI = 1,
    visDataRecordsetNoRefreshUI = 2,
    visDataRecordsetNoAdvConfig = 4,
    visDataRecordsetDelayQuery = 8,
    visDataRecordsetDontCopyLinks = 16
};

enum VisThemeColors
{
    visThemeColorsNone = 0,
    visThemeColorsMonochrome = 1,
    visThemeColorsOffice = 2,
    visThemeColorsMedian = 3,
    visThemeColorsConcourse = 4,
    visThemeColorsSolstice = 5,
    visThemeColorsTechnic = 6,
    visThemeColorsPaper = 7,
    visThemeColorsFoundry = 8,
    visThemeColorsApex = 9,
    visThemeColorsTrek = 10,
    visThemeColorsModule = 11,
    visThemeColorsOriel = 12,
    visThemeColorsAspect = 13,
    visThemeColorsEquity = 14,
    visThemeColorsCivic = 15,
    visThemeColorsOpulent = 16,
    visThemeColorsVerve = 17,
    visThemeColorsOrigin = 18,
    visThemeColorsUrban = 19,
    visThemeColorsFlow = 20,
    visThemeColorsMetro = 21,
    visThemeColorsOfficeLight = 22,
    visThemeColorsOfficeDark = 23,
    visThemeColorsMedianLight = 24,
    visThemeColorsMedianDark = 25,
    visThemeColorsConcourseLight = 26,
    visThemeColorsConcourseDark = 27,
    visThemeColorsPaperLight = 28,
    visThemeColorsPaperDark = 29,
    visThemeColorsFoundryLight = 30,
    visThemeColorsFoundryDark = 31,
    visThemeColorsEquityLight = 32,
    visThemeColorsEquityDark = 33,
    visThemeColorsVerveLight = 34,
    visThemeColorsVerveDark = 35
};

enum VisThemeEffects
{
    visThemeEffectsNone = 0,
    visThemeEffectsSubdued = 1,
    visThemeEffectsSimpleShadow = 2,
    visThemeEffectsButton = 3,
    visThemeEffectsSquare = 4,
    visThemeEffectsPillow = 5,
    visThemeEffectsBevelIllusion = 6,
    visThemeEffectsBevelHighlight = 7,
    visThemeEffectsOutline = 8,
    visThemeEffectsDecal = 9,
    visThemeEffectsRaisedSurface = 10,
    visThemeEffectsMesh = 11,
    visThemeEffectsPinstripe = 12,
    visThemeEffectsStripes = 13,
    visThemeEffectsOblique = 14,
    visThemeEffectsToy = 15
};

enum VisAutoLinkBehaviors
{
    visAutoLinkSelectedShapesOnly = 1,
    visAutoLinkGenericProgressBar = 2,
    visAutoLinkNoApplyDataGraphic = 4,
    visAutoLinkReplaceExistingLinks = 8,
    visAutoLinkDontReplaceExistingLinks = 16,
    visAutoLinkNullMatchesNoFormula = 32,
    visAutoLinkIncludeHiddenProps = 64
};

struct __declspec(uuid("000d0750-0000-0000-c000-000000000046"))
EDocument : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT DocumentOpened (
        struct IVDocument * doc );
    HRESULT DocumentCreated (
        struct IVDocument * doc );
    HRESULT DocumentSaved (
        struct IVDocument * doc );
    HRESULT DocumentSavedAs (
        struct IVDocument * doc );
    HRESULT DocumentChanged (
        struct IVDocument * doc );
    HRESULT BeforeDocumentClose (
        struct IVDocument * doc );
    HRESULT StyleAdded (
        struct IVStyle * Style );
    HRESULT StyleChanged (
        struct IVStyle * Style );
    HRESULT BeforeStyleDelete (
        struct IVStyle * Style );
    HRESULT MasterAdded (
        struct IVMaster * Master );
    HRESULT MasterChanged (
        struct IVMaster * Master );
    HRESULT BeforeMasterDelete (
        struct IVMaster * Master );
    HRESULT PageAdded (
        struct IVPage * Page );
    HRESULT PageChanged (
        struct IVPage * Page );
    HRESULT BeforePageDelete (
        struct IVPage * Page );
    HRESULT ShapeAdded (
        struct IVShape * Shape );
    HRESULT BeforeSelectionDelete (
        struct IVSelection * Selection );
    HRESULT RunModeEntered (
        struct IVDocument * doc );
    HRESULT DesignModeEntered (
        struct IVDocument * doc );
    HRESULT BeforeDocumentSave (
        struct IVDocument * doc );
    HRESULT BeforeDocumentSaveAs (
        struct IVDocument * doc );
    HRESULT QueryCancelDocumentClose (
        struct IVDocument * doc,
        VARIANT_BOOL * lpboolRet );
    HRESULT DocumentCloseCanceled (
        struct IVDocument * doc );
    HRESULT QueryCancelStyleDelete (
        struct IVStyle * Style,
        VARIANT_BOOL * lpboolRet );
    HRESULT StyleDeleteCanceled (
        struct IVStyle * Style );
    HRESULT QueryCancelMasterDelete (
        struct IVMaster * Master,
        VARIANT_BOOL * lpboolRet );
    HRESULT MasterDeleteCanceled (
        struct IVMaster * Master );
    HRESULT QueryCancelPageDelete (
        struct IVPage * Page,
        VARIANT_BOOL * lpboolRet );
    HRESULT PageDeleteCanceled (
        struct IVPage * Page );
    HRESULT ShapeParentChanged (
        struct IVShape * Shape );
    HRESULT BeforeShapeTextEdit (
        struct IVShape * Shape );
    HRESULT ShapeExitedTextEdit (
        struct IVShape * Shape );
    HRESULT QueryCancelSelectionDelete (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT SelectionDeleteCanceled (
        struct IVSelection * Selection );
    HRESULT QueryCancelUngroup (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT UngroupCanceled (
        struct IVSelection * Selection );
    HRESULT QueryCancelConvertToGroup (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT ConvertToGroupCanceled (
        struct IVSelection * Selection );
    HRESULT QueryCancelGroup (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT GroupCanceled (
        struct IVSelection * Selection );
    HRESULT ShapeDataGraphicChanged (
        struct IVShape * Shape );
    HRESULT BeforeDataRecordsetDelete (
        struct IVDataRecordset * DataRecordset );
    HRESULT DataRecordsetAdded (
        struct IVDataRecordset * DataRecordset );
    HRESULT AfterRemoveHiddenInformation (
        struct IVDocument * doc );
};

struct __declspec(uuid("000d0b00-0000-0000-c000-000000000046"))
EApplication : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT AppActivated (
        struct IVApplication * app );
    HRESULT AppDeactivated (
        struct IVApplication * app );
    HRESULT AppObjActivated (
        struct IVApplication * app );
    HRESULT AppObjDeactivated (
        struct IVApplication * app );
    HRESULT BeforeQuit (
        struct IVApplication * app );
    HRESULT BeforeModal (
        struct IVApplication * app );
    HRESULT AfterModal (
        struct IVApplication * app );
    HRESULT WindowOpened (
        struct IVWindow * Window );
    HRESULT SelectionChanged (
        struct IVWindow * Window );
    HRESULT BeforeWindowClosed (
        struct IVWindow * Window );
    HRESULT WindowActivated (
        struct IVWindow * Window );
    HRESULT BeforeWindowSelDelete (
        struct IVWindow * Window );
    HRESULT BeforeWindowPageTurn (
        struct IVWindow * Window );
    HRESULT WindowTurnedToPage (
        struct IVWindow * Window );
    HRESULT DocumentOpened (
        struct IVDocument * doc );
    HRESULT DocumentCreated (
        struct IVDocument * doc );
    HRESULT DocumentSaved (
        struct IVDocument * doc );
    HRESULT DocumentSavedAs (
        struct IVDocument * doc );
    HRESULT DocumentChanged (
        struct IVDocument * doc );
    HRESULT BeforeDocumentClose (
        struct IVDocument * doc );
    HRESULT StyleAdded (
        struct IVStyle * Style );
    HRESULT StyleChanged (
        struct IVStyle * Style );
    HRESULT BeforeStyleDelete (
        struct IVStyle * Style );
    HRESULT MasterAdded (
        struct IVMaster * Master );
    HRESULT MasterChanged (
        struct IVMaster * Master );
    HRESULT BeforeMasterDelete (
        struct IVMaster * Master );
    HRESULT PageAdded (
        struct IVPage * Page );
    HRESULT PageChanged (
        struct IVPage * Page );
    HRESULT BeforePageDelete (
        struct IVPage * Page );
    HRESULT ShapeAdded (
        struct IVShape * Shape );
    HRESULT BeforeSelectionDelete (
        struct IVSelection * Selection );
    HRESULT ShapeChanged (
        struct IVShape * Shape );
    HRESULT SelectionAdded (
        struct IVSelection * Selection );
    HRESULT BeforeShapeDelete (
        struct IVShape * Shape );
    HRESULT TextChanged (
        struct IVShape * Shape );
    HRESULT CellChanged (
        struct IVCell * Cell );
    HRESULT MarkerEvent (
        struct IVApplication * app,
        long SequenceNum,
        _bstr_t ContextString );
    HRESULT NoEventsPending (
        struct IVApplication * app );
    HRESULT VisioIsIdle (
        struct IVApplication * app );
    HRESULT MustFlushScopeBeginning (
        struct IVApplication * app );
    HRESULT MustFlushScopeEnded (
        struct IVApplication * app );
    HRESULT RunModeEntered (
        struct IVDocument * doc );
    HRESULT DesignModeEntered (
        struct IVDocument * doc );
    HRESULT BeforeDocumentSave (
        struct IVDocument * doc );
    HRESULT BeforeDocumentSaveAs (
        struct IVDocument * doc );
    HRESULT FormulaChanged (
        struct IVCell * Cell );
    HRESULT ConnectionsAdded (
        struct IVConnects * Connects );
    HRESULT ConnectionsDeleted (
        struct IVConnects * Connects );
    HRESULT EnterScope (
        struct IVApplication * app,
        long nScopeID,
        _bstr_t bstrDescription );
    HRESULT ExitScope (
        struct IVApplication * app,
        long nScopeID,
        _bstr_t bstrDescription,
        VARIANT_BOOL bErrOrCancelled );
    HRESULT QueryCancelQuit (
        struct IVApplication * app,
        VARIANT_BOOL * lpboolRet );
    HRESULT QuitCanceled (
        struct IVApplication * app );
    HRESULT WindowChanged (
        struct IVWindow * Window );
    HRESULT ViewChanged (
        struct IVWindow * Window );
    HRESULT QueryCancelWindowClose (
        struct IVWindow * Window,
        VARIANT_BOOL * lpboolRet );
    HRESULT WindowCloseCanceled (
        struct IVWindow * Window );
    HRESULT QueryCancelDocumentClose (
        struct IVDocument * doc,
        VARIANT_BOOL * lpboolRet );
    HRESULT DocumentCloseCanceled (
        struct IVDocument * doc );
    HRESULT QueryCancelStyleDelete (
        struct IVStyle * Style,
        VARIANT_BOOL * lpboolRet );
    HRESULT StyleDeleteCanceled (
        struct IVStyle * Style );
    HRESULT QueryCancelMasterDelete (
        struct IVMaster * Master,
        VARIANT_BOOL * lpboolRet );
    HRESULT MasterDeleteCanceled (
        struct IVMaster * Master );
    HRESULT QueryCancelPageDelete (
        struct IVPage * Page,
        VARIANT_BOOL * lpboolRet );
    HRESULT PageDeleteCanceled (
        struct IVPage * Page );
    HRESULT ShapeParentChanged (
        struct IVShape * Shape );
    HRESULT BeforeShapeTextEdit (
        struct IVShape * Shape );
    HRESULT ShapeExitedTextEdit (
        struct IVShape * Shape );
    HRESULT QueryCancelSelectionDelete (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT SelectionDeleteCanceled (
        struct IVSelection * Selection );
    HRESULT QueryCancelUngroup (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT UngroupCanceled (
        struct IVSelection * Selection );
    HRESULT QueryCancelConvertToGroup (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT ConvertToGroupCanceled (
        struct IVSelection * Selection );
    HRESULT QueryCancelSuspend (
        struct IVApplication * app,
        VARIANT_BOOL * lpboolRet );
    HRESULT SuspendCanceled (
        struct IVApplication * app );
    HRESULT BeforeSuspend (
        struct IVApplication * app );
    HRESULT AfterResume (
        struct IVApplication * app );
    HRESULT OnKeystrokeMessageForAddon (
        struct IVMSGWrap * MSG,
        VARIANT_BOOL * lpboolRet );
    HRESULT MouseDown (
        long Button,
        long KeyButtonState,
        double x,
        double y,
        VARIANT_BOOL * CancelDefault );
    HRESULT MouseMove (
        long Button,
        long KeyButtonState,
        double x,
        double y,
        VARIANT_BOOL * CancelDefault );
    HRESULT MouseUp (
        long Button,
        long KeyButtonState,
        double x,
        double y,
        VARIANT_BOOL * CancelDefault );
    HRESULT KeyDown (
        long KeyCode,
        long KeyButtonState,
        VARIANT_BOOL * CancelDefault );
    HRESULT KeyPress (
        long KeyAscii,
        VARIANT_BOOL * CancelDefault );
    HRESULT KeyUp (
        long KeyCode,
        long KeyButtonState,
        VARIANT_BOOL * CancelDefault );
    HRESULT QueryCancelSuspendEvents (
        struct IVApplication * app,
        VARIANT_BOOL * lpboolRet );
    HRESULT SuspendEventsCanceled (
        struct IVApplication * app );
    HRESULT BeforeSuspendEvents (
        struct IVApplication * app );
    HRESULT AfterResumeEvents (
        struct IVApplication * app );
    HRESULT QueryCancelGroup (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT GroupCanceled (
        struct IVSelection * Selection );
    HRESULT ShapeDataGraphicChanged (
        struct IVShape * Shape );
    HRESULT BeforeDataRecordsetDelete (
        struct IVDataRecordset * DataRecordset );
    HRESULT DataRecordsetChanged (
        struct IVDataRecordsetChangedEvent * DataRecordsetChanged );
    HRESULT DataRecordsetAdded (
        struct IVDataRecordset * DataRecordset );
    HRESULT ShapeLinkAdded (
        struct IVShape * Shape,
        long DataRecordsetID,
        long DataRowID );
    HRESULT ShapeLinkDeleted (
        struct IVShape * Shape,
        long DataRecordsetID,
        long DataRowID );
    HRESULT AfterRemoveHiddenInformation (
        struct IVDocument * doc );
};

struct __declspec(uuid("000d0b01-0000-0000-c000-000000000046"))
EWindows : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT WindowOpened (
        struct IVWindow * Window );
    HRESULT SelectionChanged (
        struct IVWindow * Window );
    HRESULT BeforeWindowClosed (
        struct IVWindow * Window );
    HRESULT WindowActivated (
        struct IVWindow * Window );
    HRESULT BeforeWindowSelDelete (
        struct IVWindow * Window );
    HRESULT BeforeWindowPageTurn (
        struct IVWindow * Window );
    HRESULT WindowTurnedToPage (
        struct IVWindow * Window );
    HRESULT WindowChanged (
        struct IVWindow * Window );
    HRESULT ViewChanged (
        struct IVWindow * Window );
    HRESULT QueryCancelWindowClose (
        struct IVWindow * Window,
        VARIANT_BOOL * lpboolRet );
    HRESULT WindowCloseCanceled (
        struct IVWindow * Window );
    HRESULT OnKeystrokeMessageForAddon (
        struct IVMSGWrap * MSG,
        VARIANT_BOOL * lpboolRet );
    HRESULT MouseDown (
        long Button,
        long KeyButtonState,
        double x,
        double y,
        VARIANT_BOOL * CancelDefault );
    HRESULT MouseMove (
        long Button,
        long KeyButtonState,
        double x,
        double y,
        VARIANT_BOOL * CancelDefault );
    HRESULT MouseUp (
        long Button,
        long KeyButtonState,
        double x,
        double y,
        VARIANT_BOOL * CancelDefault );
    HRESULT KeyDown (
        long KeyCode,
        long KeyButtonState,
        VARIANT_BOOL * CancelDefault );
    HRESULT KeyPress (
        long KeyAscii,
        VARIANT_BOOL * CancelDefault );
    HRESULT KeyUp (
        long KeyCode,
        long KeyButtonState,
        VARIANT_BOOL * CancelDefault );
};

struct __declspec(uuid("000d0b02-0000-0000-c000-000000000046"))
EWindow : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT SelectionChanged (
        struct IVWindow * Window );
    HRESULT BeforeWindowClosed (
        struct IVWindow * Window );
    HRESULT WindowActivated (
        struct IVWindow * Window );
    HRESULT BeforeWindowSelDelete (
        struct IVWindow * Window );
    HRESULT BeforeWindowPageTurn (
        struct IVWindow * Window );
    HRESULT WindowTurnedToPage (
        struct IVWindow * Window );
    HRESULT WindowChanged (
        struct IVWindow * Window );
    HRESULT ViewChanged (
        struct IVWindow * Window );
    HRESULT QueryCancelWindowClose (
        struct IVWindow * Window,
        VARIANT_BOOL * lpboolRet );
    HRESULT WindowCloseCanceled (
        struct IVWindow * Window );
    HRESULT OnKeystrokeMessageForAddon (
        struct IVMSGWrap * MSG,
        VARIANT_BOOL * lpboolRet );
    HRESULT MouseDown (
        long Button,
        long KeyButtonState,
        double x,
        double y,
        VARIANT_BOOL * CancelDefault );
    HRESULT MouseMove (
        long Button,
        long KeyButtonState,
        double x,
        double y,
        VARIANT_BOOL * CancelDefault );
    HRESULT MouseUp (
        long Button,
        long KeyButtonState,
        double x,
        double y,
        VARIANT_BOOL * CancelDefault );
    HRESULT KeyDown (
        long KeyCode,
        long KeyButtonState,
        VARIANT_BOOL * CancelDefault );
    HRESULT KeyPress (
        long KeyAscii,
        VARIANT_BOOL * CancelDefault );
    HRESULT KeyUp (
        long KeyCode,
        long KeyButtonState,
        VARIANT_BOOL * CancelDefault );
};

struct __declspec(uuid("000d0b03-0000-0000-c000-000000000046"))
EDocuments : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT DocumentOpened (
        struct IVDocument * doc );
    HRESULT DocumentCreated (
        struct IVDocument * doc );
    HRESULT DocumentSaved (
        struct IVDocument * doc );
    HRESULT DocumentSavedAs (
        struct IVDocument * doc );
    HRESULT DocumentChanged (
        struct IVDocument * doc );
    HRESULT BeforeDocumentClose (
        struct IVDocument * doc );
    HRESULT StyleAdded (
        struct IVStyle * Style );
    HRESULT StyleChanged (
        struct IVStyle * Style );
    HRESULT BeforeStyleDelete (
        struct IVStyle * Style );
    HRESULT MasterAdded (
        struct IVMaster * Master );
    HRESULT MasterChanged (
        struct IVMaster * Master );
    HRESULT BeforeMasterDelete (
        struct IVMaster * Master );
    HRESULT PageAdded (
        struct IVPage * Page );
    HRESULT PageChanged (
        struct IVPage * Page );
    HRESULT BeforePageDelete (
        struct IVPage * Page );
    HRESULT ShapeAdded (
        struct IVShape * Shape );
    HRESULT BeforeSelectionDelete (
        struct IVSelection * Selection );
    HRESULT ShapeChanged (
        struct IVShape * Shape );
    HRESULT SelectionAdded (
        struct IVSelection * Selection );
    HRESULT BeforeShapeDelete (
        struct IVShape * Shape );
    HRESULT TextChanged (
        struct IVShape * Shape );
    HRESULT CellChanged (
        struct IVCell * Cell );
    HRESULT RunModeEntered (
        struct IVDocument * doc );
    HRESULT DesignModeEntered (
        struct IVDocument * doc );
    HRESULT BeforeDocumentSave (
        struct IVDocument * doc );
    HRESULT BeforeDocumentSaveAs (
        struct IVDocument * doc );
    HRESULT FormulaChanged (
        struct IVCell * Cell );
    HRESULT ConnectionsAdded (
        struct IVConnects * Connects );
    HRESULT ConnectionsDeleted (
        struct IVConnects * Connects );
    HRESULT QueryCancelDocumentClose (
        struct IVDocument * doc,
        VARIANT_BOOL * lpboolRet );
    HRESULT DocumentCloseCanceled (
        struct IVDocument * doc );
    HRESULT QueryCancelStyleDelete (
        struct IVStyle * Style,
        VARIANT_BOOL * lpboolRet );
    HRESULT StyleDeleteCanceled (
        struct IVStyle * Style );
    HRESULT QueryCancelMasterDelete (
        struct IVMaster * Master,
        VARIANT_BOOL * lpboolRet );
    HRESULT MasterDeleteCanceled (
        struct IVMaster * Master );
    HRESULT QueryCancelPageDelete (
        struct IVPage * Page,
        VARIANT_BOOL * lpboolRet );
    HRESULT PageDeleteCanceled (
        struct IVPage * Page );
    HRESULT ShapeParentChanged (
        struct IVShape * Shape );
    HRESULT BeforeShapeTextEdit (
        struct IVShape * Shape );
    HRESULT ShapeExitedTextEdit (
        struct IVShape * Shape );
    HRESULT QueryCancelSelectionDelete (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT SelectionDeleteCanceled (
        struct IVSelection * Selection );
    HRESULT QueryCancelUngroup (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT UngroupCanceled (
        struct IVSelection * Selection );
    HRESULT QueryCancelConvertToGroup (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT ConvertToGroupCanceled (
        struct IVSelection * Selection );
    HRESULT QueryCancelGroup (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT GroupCanceled (
        struct IVSelection * Selection );
    HRESULT ShapeDataGraphicChanged (
        struct IVShape * Shape );
    HRESULT BeforeDataRecordsetDelete (
        struct IVDataRecordset * DataRecordset );
    HRESULT DataRecordsetChanged (
        struct IVDataRecordsetChangedEvent * DataRecordsetChanged );
    HRESULT DataRecordsetAdded (
        struct IVDataRecordset * DataRecordset );
    HRESULT ShapeLinkAdded (
        struct IVShape * Shape,
        long DataRecordsetID,
        long DataRowID );
    HRESULT ShapeLinkDeleted (
        struct IVShape * Shape,
        long DataRecordsetID,
        long DataRowID );
    HRESULT AfterRemoveHiddenInformation (
        struct IVDocument * doc );
};

struct __declspec(uuid("000d0b05-0000-0000-c000-000000000046"))
EStyles : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT StyleAdded (
        struct IVStyle * Style );
    HRESULT StyleChanged (
        struct IVStyle * Style );
    HRESULT BeforeStyleDelete (
        struct IVStyle * Style );
    HRESULT QueryCancelStyleDelete (
        struct IVStyle * Style,
        VARIANT_BOOL * lpboolRet );
    HRESULT StyleDeleteCanceled (
        struct IVStyle * Style );
};

struct __declspec(uuid("000d0b06-0000-0000-c000-000000000046"))
EStyle : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT StyleChanged (
        struct IVStyle * Style );
    HRESULT BeforeStyleDelete (
        struct IVStyle * Style );
    HRESULT QueryCancelStyleDelete (
        struct IVStyle * Style,
        VARIANT_BOOL * lpboolRet );
    HRESULT StyleDeleteCanceled (
        struct IVStyle * Style );
};

struct __declspec(uuid("000d0b07-0000-0000-c000-000000000046"))
EMasters : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT MasterAdded (
        struct IVMaster * Master );
    HRESULT MasterChanged (
        struct IVMaster * Master );
    HRESULT BeforeMasterDelete (
        struct IVMaster * Master );
    HRESULT ShapeAdded (
        struct IVShape * Shape );
    HRESULT BeforeSelectionDelete (
        struct IVSelection * Selection );
    HRESULT ShapeChanged (
        struct IVShape * Shape );
    HRESULT SelectionAdded (
        struct IVSelection * Selection );
    HRESULT BeforeShapeDelete (
        struct IVShape * Shape );
    HRESULT TextChanged (
        struct IVShape * Shape );
    HRESULT CellChanged (
        struct IVCell * Cell );
    HRESULT FormulaChanged (
        struct IVCell * Cell );
    HRESULT ConnectionsAdded (
        struct IVConnects * Connects );
    HRESULT ConnectionsDeleted (
        struct IVConnects * Connects );
    HRESULT QueryCancelMasterDelete (
        struct IVMaster * Master,
        VARIANT_BOOL * lpboolRet );
    HRESULT MasterDeleteCanceled (
        struct IVMaster * Master );
    HRESULT ShapeParentChanged (
        struct IVShape * Shape );
    HRESULT BeforeShapeTextEdit (
        struct IVShape * Shape );
    HRESULT ShapeExitedTextEdit (
        struct IVShape * Shape );
    HRESULT QueryCancelSelectionDelete (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT SelectionDeleteCanceled (
        struct IVSelection * Selection );
    HRESULT QueryCancelUngroup (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT UngroupCanceled (
        struct IVSelection * Selection );
    HRESULT QueryCancelConvertToGroup (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT ConvertToGroupCanceled (
        struct IVSelection * Selection );
    HRESULT QueryCancelGroup (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT GroupCanceled (
        struct IVSelection * Selection );
    HRESULT ShapeDataGraphicChanged (
        struct IVShape * Shape );
};

struct __declspec(uuid("000d0b08-0000-0000-c000-000000000046"))
EMaster : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT MasterChanged (
        struct IVMaster * Master );
    HRESULT BeforeMasterDelete (
        struct IVMaster * Master );
    HRESULT ShapeAdded (
        struct IVShape * Shape );
    HRESULT BeforeSelectionDelete (
        struct IVSelection * Selection );
    HRESULT ShapeChanged (
        struct IVShape * Shape );
    HRESULT SelectionAdded (
        struct IVSelection * Selection );
    HRESULT BeforeShapeDelete (
        struct IVShape * Shape );
    HRESULT TextChanged (
        struct IVShape * Shape );
    HRESULT CellChanged (
        struct IVCell * Cell );
    HRESULT FormulaChanged (
        struct IVCell * Cell );
    HRESULT ConnectionsAdded (
        struct IVConnects * Connects );
    HRESULT ConnectionsDeleted (
        struct IVConnects * Connects );
    HRESULT QueryCancelMasterDelete (
        struct IVMaster * Master,
        VARIANT_BOOL * lpboolRet );
    HRESULT MasterDeleteCanceled (
        struct IVMaster * Master );
    HRESULT ShapeParentChanged (
        struct IVShape * Shape );
    HRESULT BeforeShapeTextEdit (
        struct IVShape * Shape );
    HRESULT ShapeExitedTextEdit (
        struct IVShape * Shape );
    HRESULT QueryCancelSelectionDelete (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT SelectionDeleteCanceled (
        struct IVSelection * Selection );
    HRESULT QueryCancelUngroup (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT UngroupCanceled (
        struct IVSelection * Selection );
    HRESULT QueryCancelConvertToGroup (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT ConvertToGroupCanceled (
        struct IVSelection * Selection );
    HRESULT QueryCancelGroup (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT GroupCanceled (
        struct IVSelection * Selection );
    HRESULT ShapeDataGraphicChanged (
        struct IVShape * Shape );
};

struct __declspec(uuid("000d0b09-0000-0000-c000-000000000046"))
EPages : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT PageAdded (
        struct IVPage * Page );
    HRESULT PageChanged (
        struct IVPage * Page );
    HRESULT BeforePageDelete (
        struct IVPage * Page );
    HRESULT ShapeAdded (
        struct IVShape * Shape );
    HRESULT BeforeSelectionDelete (
        struct IVSelection * Selection );
    HRESULT ShapeChanged (
        struct IVShape * Shape );
    HRESULT SelectionAdded (
        struct IVSelection * Selection );
    HRESULT BeforeShapeDelete (
        struct IVShape * Shape );
    HRESULT TextChanged (
        struct IVShape * Shape );
    HRESULT CellChanged (
        struct IVCell * Cell );
    HRESULT FormulaChanged (
        struct IVCell * Cell );
    HRESULT ConnectionsAdded (
        struct IVConnects * Connects );
    HRESULT ConnectionsDeleted (
        struct IVConnects * Connects );
    HRESULT QueryCancelPageDelete (
        struct IVPage * Page,
        VARIANT_BOOL * lpboolRet );
    HRESULT PageDeleteCanceled (
        struct IVPage * Page );
    HRESULT ShapeParentChanged (
        struct IVShape * Shape );
    HRESULT BeforeShapeTextEdit (
        struct IVShape * Shape );
    HRESULT ShapeExitedTextEdit (
        struct IVShape * Shape );
    HRESULT QueryCancelSelectionDelete (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT SelectionDeleteCanceled (
        struct IVSelection * Selection );
    HRESULT QueryCancelUngroup (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT UngroupCanceled (
        struct IVSelection * Selection );
    HRESULT QueryCancelConvertToGroup (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT ConvertToGroupCanceled (
        struct IVSelection * Selection );
    HRESULT QueryCancelGroup (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT GroupCanceled (
        struct IVSelection * Selection );
    HRESULT ShapeDataGraphicChanged (
        struct IVShape * Shape );
    HRESULT ShapeLinkAdded (
        struct IVShape * Shape,
        long DataRecordsetID,
        long DataRowID );
    HRESULT ShapeLinkDeleted (
        struct IVShape * Shape,
        long DataRecordsetID,
        long DataRowID );
};

struct __declspec(uuid("000d0b0a-0000-0000-c000-000000000046"))
EPage : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT PageChanged (
        struct IVPage * Page );
    HRESULT BeforePageDelete (
        struct IVPage * Page );
    HRESULT ShapeAdded (
        struct IVShape * Shape );
    HRESULT BeforeSelectionDelete (
        struct IVSelection * Selection );
    HRESULT ShapeChanged (
        struct IVShape * Shape );
    HRESULT SelectionAdded (
        struct IVSelection * Selection );
    HRESULT BeforeShapeDelete (
        struct IVShape * Shape );
    HRESULT TextChanged (
        struct IVShape * Shape );
    HRESULT CellChanged (
        struct IVCell * Cell );
    HRESULT FormulaChanged (
        struct IVCell * Cell );
    HRESULT ConnectionsAdded (
        struct IVConnects * Connects );
    HRESULT ConnectionsDeleted (
        struct IVConnects * Connects );
    HRESULT QueryCancelPageDelete (
        struct IVPage * Page,
        VARIANT_BOOL * lpboolRet );
    HRESULT PageDeleteCanceled (
        struct IVPage * Page );
    HRESULT ShapeParentChanged (
        struct IVShape * Shape );
    HRESULT BeforeShapeTextEdit (
        struct IVShape * Shape );
    HRESULT ShapeExitedTextEdit (
        struct IVShape * Shape );
    HRESULT QueryCancelSelectionDelete (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT SelectionDeleteCanceled (
        struct IVSelection * Selection );
    HRESULT QueryCancelUngroup (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT UngroupCanceled (
        struct IVSelection * Selection );
    HRESULT QueryCancelConvertToGroup (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT ConvertToGroupCanceled (
        struct IVSelection * Selection );
    HRESULT QueryCancelGroup (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT GroupCanceled (
        struct IVSelection * Selection );
    HRESULT ShapeDataGraphicChanged (
        struct IVShape * Shape );
    HRESULT ShapeLinkAdded (
        struct IVShape * Shape,
        long DataRecordsetID,
        long DataRowID );
    HRESULT ShapeLinkDeleted (
        struct IVShape * Shape,
        long DataRecordsetID,
        long DataRowID );
};

struct __declspec(uuid("000d0b0b-0000-0000-c000-000000000046"))
EShape : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT CellChanged (
        struct IVCell * Cell );
    HRESULT ShapeAdded (
        struct IVShape * Shape );
    HRESULT BeforeSelectionDelete (
        struct IVSelection * Selection );
    HRESULT ShapeChanged (
        struct IVShape * Shape );
    HRESULT SelectionAdded (
        struct IVSelection * Selection );
    HRESULT BeforeShapeDelete (
        struct IVShape * Shape );
    HRESULT TextChanged (
        struct IVShape * Shape );
    HRESULT FormulaChanged (
        struct IVCell * Cell );
    HRESULT ShapeParentChanged (
        struct IVShape * Shape );
    HRESULT BeforeShapeTextEdit (
        struct IVShape * Shape );
    HRESULT ShapeExitedTextEdit (
        struct IVShape * Shape );
    HRESULT QueryCancelSelectionDelete (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT SelectionDeleteCanceled (
        struct IVSelection * Selection );
    HRESULT QueryCancelUngroup (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT UngroupCanceled (
        struct IVSelection * Selection );
    HRESULT QueryCancelConvertToGroup (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT ConvertToGroupCanceled (
        struct IVSelection * Selection );
    HRESULT QueryCancelGroup (
        struct IVSelection * Selection,
        VARIANT_BOOL * lpboolRet );
    HRESULT GroupCanceled (
        struct IVSelection * Selection );
    HRESULT ShapeDataGraphicChanged (
        struct IVShape * Shape );
    HRESULT ShapeLinkAdded (
        struct IVShape * Shape,
        long DataRecordsetID,
        long DataRowID );
    HRESULT ShapeLinkDeleted (
        struct IVShape * Shape,
        long DataRecordsetID,
        long DataRowID );
};

struct __declspec(uuid("000d0b0c-0000-0000-c000-000000000046"))
ECharacters : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT TextChanged (
        struct IVShape * Shape );
};

struct __declspec(uuid("000d0b0d-0000-0000-c000-000000000046"))
ECell : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT CellChanged (
        struct IVCell * Cell );
    HRESULT FormulaChanged (
        struct IVCell * Cell );
};

struct __declspec(uuid("00021a20-0000-0000-c000-000000000046"))
Application;
    // [ default ] interface IVApplication
    // [ default, source ] dispinterface EApplication

struct __declspec(uuid("00021a21-0000-0000-c000-000000000046"))
Document;
    // [ default ] interface IVDocument
    // [ default, source ] dispinterface EDocument

struct __declspec(uuid("000d0a00-0000-0000-c000-000000000046"))
Documents;
    // [ default ] interface IVDocuments
    // [ default, source ] dispinterface EDocuments

struct __declspec(uuid("000d0a01-0000-0000-c000-000000000046"))
Styles;
    // [ default ] interface IVStyles
    // [ default, source ] dispinterface EStyles

struct __declspec(uuid("000d0a02-0000-0000-c000-000000000046"))
Style;
    // [ default ] interface IVStyle
    // [ default, source ] dispinterface EStyle

struct __declspec(uuid("000d0a03-0000-0000-c000-000000000046"))
Masters;
    // [ default ] interface IVMasters
    // [ default, source ] dispinterface EMasters

struct __declspec(uuid("000d0a04-0000-0000-c000-000000000046"))
Master;
    // [ default ] interface IVMaster
    // [ default, source ] dispinterface EMaster

struct __declspec(uuid("000d0a05-0000-0000-c000-000000000046"))
Pages;
    // [ default ] interface IVPages
    // [ default, source ] dispinterface EPages

struct __declspec(uuid("000d0a06-0000-0000-c000-000000000046"))
Page;
    // [ default ] interface IVPage
    // [ default, source ] dispinterface EPage

struct __declspec(uuid("000d0a07-0000-0000-c000-000000000046"))
Layers;
    // [ default ] interface IVLayers

struct __declspec(uuid("000d0a08-0000-0000-c000-000000000046"))
Layer;
    // [ default ] interface IVLayer

struct __declspec(uuid("000d0a09-0000-0000-c000-000000000046"))
Shapes;
    // [ default ] interface IVShapes

struct __declspec(uuid("000d0a0a-0000-0000-c000-000000000046"))
Shape;
    // [ default ] interface IVShape
    // [ default, source ] dispinterface EShape

struct __declspec(uuid("000d0a0b-0000-0000-c000-000000000046"))
Windows;
    // [ default ] interface IVWindows
    // [ default, source ] dispinterface EWindows

struct __declspec(uuid("000d0a0c-0000-0000-c000-000000000046"))
Window;
    // [ default ] interface IVWindow
    // [ default, source ] dispinterface EWindow

struct __declspec(uuid("000d0a0d-0000-0000-c000-000000000046"))
Cell;
    // [ default ] interface IVCell
    // [ default, source ] dispinterface ECell

struct __declspec(uuid("000d0a0e-0000-0000-c000-000000000046"))
Selection;
    // [ default ] interface IVSelection

struct __declspec(uuid("000d0a0f-0000-0000-c000-000000000046"))
Font;
    // [ default ] interface IVFont

struct __declspec(uuid("000d0a10-0000-0000-c000-000000000046"))
Fonts;
    // [ default ] interface IVFonts

struct __declspec(uuid("000d0a11-0000-0000-c000-000000000046"))
Color;
    // [ default ] interface IVColor

struct __declspec(uuid("000d0a12-0000-0000-c000-000000000046"))
Colors;
    // [ default ] interface IVColors

struct __declspec(uuid("000d0a13-0000-0000-c000-000000000046"))
Addon;
    // [ default ] interface IVAddon

struct __declspec(uuid("000d0a14-0000-0000-c000-000000000046"))
Addons;
    // [ default ] interface IVAddons

struct __declspec(uuid("000d0a15-0000-0000-c000-000000000046"))
Event;
    // [ default ] interface IVEvent

struct __declspec(uuid("000d0a16-0000-0000-c000-000000000046"))
EventList;
    // [ default ] interface IVEventList

struct __declspec(uuid("000d0a17-0000-0000-c000-000000000046"))
Characters;
    // [ default ] interface IVCharacters
    // [ default, source ] dispinterface ECharacters

struct __declspec(uuid("000d0a18-0000-0000-c000-000000000046"))
Connect;
    // [ default ] interface IVConnect

struct __declspec(uuid("000d0a19-0000-0000-c000-000000000046"))
Connects;
    // [ default ] interface IVConnects

struct __declspec(uuid("000d0a1a-0000-0000-c000-000000000046"))
Global;
    // [ default ] interface IVGlobal

struct __declspec(uuid("000d0201-0000-0000-c000-000000000046"))
UIObject;
    // [ default ] interface IVUIObject

struct __declspec(uuid("000d0210-0000-0000-c000-000000000046"))
MenuItem;
    // [ default ] interface IVMenuItem

struct __declspec(uuid("000d0215-0000-0000-c000-000000000046"))
MenuItems;
    // [ default ] interface IVMenuItems

struct __declspec(uuid("000d0220-0000-0000-c000-000000000046"))
Menu;
    // [ default ] interface IVMenu

struct __declspec(uuid("000d0224-0000-0000-c000-000000000046"))
Menus;
    // [ default ] interface IVMenus

struct __declspec(uuid("000d0230-0000-0000-c000-000000000046"))
MenuSet;
    // [ default ] interface IVMenuSet

struct __declspec(uuid("000d0235-0000-0000-c000-000000000046"))
MenuSets;
    // [ default ] interface IVMenuSets

struct __declspec(uuid("000d0240-0000-0000-c000-000000000046"))
ToolbarItem;
    // [ default ] interface IVToolbarItem

struct __declspec(uuid("000d0244-0000-0000-c000-000000000046"))
ToolbarItems;
    // [ default ] interface IVToolbarItems

struct __declspec(uuid("000d0250-0000-0000-c000-000000000046"))
Toolbar;
    // [ default ] interface IVToolbar

struct __declspec(uuid("000d0254-0000-0000-c000-000000000046"))
Toolbars;
    // [ default ] interface IVToolbars

struct __declspec(uuid("000d0260-0000-0000-c000-000000000046"))
ToolbarSet;
    // [ default ] interface IVToolbarSet

struct __declspec(uuid("000d0265-0000-0000-c000-000000000046"))
ToolbarSets;
    // [ default ] interface IVToolbarSets

struct __declspec(uuid("000d0270-0000-0000-c000-000000000046"))
StatusBarItem;
    // [ default ] interface IVStatusBarItem

struct __declspec(uuid("000d0274-0000-0000-c000-000000000046"))
StatusBarItems;
    // [ default ] interface IVStatusBarItems

struct __declspec(uuid("000d0280-0000-0000-c000-000000000046"))
StatusBar;
    // [ default ] interface IVStatusBar

struct __declspec(uuid("000d0284-0000-0000-c000-000000000046"))
StatusBars;
    // [ default ] interface IVStatusBars

struct __declspec(uuid("000d0290-0000-0000-c000-000000000046"))
AccelItem;
    // [ default ] interface IVAccelItem

struct __declspec(uuid("000d0294-0000-0000-c000-000000000046"))
AccelItems;
    // [ default ] interface IVAccelItems

struct __declspec(uuid("000d02a0-0000-0000-c000-000000000046"))
AccelTable;
    // [ default ] interface IVAccelTable

struct __declspec(uuid("000d02a4-0000-0000-c000-000000000046"))
AccelTables;
    // [ default ] interface IVAccelTables

struct __declspec(uuid("000d0d0f-0000-0000-c000-000000000046"))
IVDispExtender : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;
    __declspec(property(get=GetPersistsEvents))
    short PersistsEvents;
    __declspec(property(get=GetParent))
    IUnknownPtr Parent;
    __declspec(property(get=GetShape))
    IVShapePtr Shape;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetNameID))
    _bstr_t NameID;
    __declspec(property(get=GetClassID))
    _bstr_t ClassID;
    __declspec(property(get=GetShapeObject))
    IDispatchPtr ShapeObject;
    __declspec(property(get=GetShapeID16))
    short ShapeID16;
    __declspec(property(get=GetCells))
    IVCellPtr Cells[];
    __declspec(property(get=GetCellsSRC))
    IVCellPtr CellsSRC[][][];
    __declspec(property(get=GetData1,put=PutData1))
    _bstr_t Data1;
    __declspec(property(get=GetData2,put=PutData2))
    _bstr_t Data2;
    __declspec(property(get=GetData3,put=PutData3))
    _bstr_t Data3;
    __declspec(property(get=GetHelp,put=PutHelp))
    _bstr_t Help;
    __declspec(property(get=GetFromConnects))
    IVConnectsPtr FromConnects;
    __declspec(property(get=GetHyperlink))
    IVHyperlinkPtr Hyperlink;
    __declspec(property(get=GetMaster))
    IVMasterPtr Master;
    __declspec(property(get=GetProgID))
    _bstr_t ProgID;
    __declspec(property(get=GetObjectIsInherited))
    short ObjectIsInherited;
    __declspec(property(get=GetRowCount))
    short RowCount[];
    __declspec(property(get=GetShapeID))
    long ShapeID;
    __declspec(property(get=GetObject))
    IUnknownPtr Object;
    __declspec(property(get=GetShapeIndex))
    long ShapeIndex;
    __declspec(property(get=GetRowsCellCount))
    short RowsCellCount[][];
    __declspec(property(get=GetRowType,put=PutRowType))
    short RowType[][];
    __declspec(property(get=GetConnects))
    IVConnectsPtr Connects;
    __declspec(property(get=GetShapeIndex16))
    short ShapeIndex16;
    __declspec(property(get=GetStyle,put=PutStyle))
    _bstr_t Style;
    __declspec(property(get=GetLineStyle,put=PutLineStyle))
    _bstr_t LineStyle;
    __declspec(property(get=GetFillStyle,put=PutFillStyle))
    _bstr_t FillStyle;
    __declspec(property(put=PutStyleKeepFmt))
    _bstr_t StyleKeepFmt;
    __declspec(property(put=PutLineStyleKeepFmt))
    _bstr_t LineStyleKeepFmt;
    __declspec(property(put=PutFillStyleKeepFmt))
    _bstr_t FillStyleKeepFmt;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetShapeParent))
    IDispatchPtr ShapeParent;
    __declspec(property(get=GetUniqueID))
    _bstr_t UniqueID[];
    __declspec(property(get=GetContainingPage))
    IVPagePtr ContainingPage;
    __declspec(property(get=GetContainingMaster))
    IVMasterPtr ContainingMaster;
    __declspec(property(get=GetContainingShape))
    IVShapePtr ContainingShape;
    __declspec(property(get=GetSectionExists))
    short SectionExists[][];
    __declspec(property(get=GetRowExists))
    short RowExists[][][];
    __declspec(property(get=GetCellExists))
    short CellExists[][];
    __declspec(property(get=GetCellsSRCExists))
    short CellsSRCExists[][][][];
    __declspec(property(get=GetLayerCount))
    short LayerCount;
    __declspec(property(get=GetLayer))
    IVLayerPtr Layer[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    IUnknownPtr GetObject ( );
    IUnknownPtr GetParent ( );
    HRESULT Delete ( );
    HRESULT Index ( );
    IVShapePtr GetShape ( );
    HRESULT VoidGroup ( );
    HRESULT BringForward ( );
    HRESULT BringToFront ( );
    HRESULT ConvertToGroup ( );
    HRESULT SendBackward ( );
    HRESULT SendToBack ( );
    IVDocumentPtr GetDocument ( );
    IDispatchPtr GetShapeParent ( );
    IVApplicationPtr GetApplication ( );
    IVMasterPtr GetMaster ( );
    IVCellPtr GetCells (
        _bstr_t localeSpecificCellName );
    IVCellPtr GetCellsSRC (
        short Section,
        short Row,
        short Column );
    _bstr_t GetData1 ( );
    void PutData1 (
        _bstr_t _arg1 );
    _bstr_t GetData2 ( );
    void PutData2 (
        _bstr_t _arg1 );
    _bstr_t GetData3 ( );
    void PutData3 (
        _bstr_t _arg1 );
    _bstr_t GetHelp ( );
    void PutHelp (
        _bstr_t _arg1 );
    _bstr_t GetNameID ( );
    HRESULT ShapeCopy ( );
    HRESULT ShapeCut ( );
    HRESULT ShapeDelete ( );
    HRESULT VoidShapeDuplicate ( );
    short GetRowCount (
        short Section );
    short AddSection (
        short Section );
    HRESULT DeleteSection (
        short Section );
    short AddRow (
        short Section,
        short Row,
        short RowTag );
    HRESULT DeleteRow (
        short Section,
        short Row );
    short GetRowsCellCount (
        short Section,
        short Row );
    short GetRowType (
        short Section,
        short Row );
    void PutRowType (
        short Section,
        short Row,
        short _arg3 );
    HRESULT SetCenter (
        double xPos,
        double yPos );
    IVConnectsPtr GetConnects ( );
    short GetShapeIndex16 ( );
    _bstr_t GetStyle ( );
    void PutStyle (
        _bstr_t _arg1 );
    void PutStyleKeepFmt (
        _bstr_t _arg1 );
    _bstr_t GetLineStyle ( );
    void PutLineStyle (
        _bstr_t _arg1 );
    void PutLineStyleKeepFmt (
        _bstr_t _arg1 );
    _bstr_t GetFillStyle ( );
    void PutFillStyle (
        _bstr_t _arg1 );
    void PutFillStyleKeepFmt (
        _bstr_t _arg1 );
    HRESULT Export (
        _bstr_t FileName );
    _bstr_t GetUniqueID (
        short fUniqueID );
    IVPagePtr GetContainingPage ( );
    IVMasterPtr GetContainingMaster ( );
    IVShapePtr GetContainingShape ( );
    short GetSectionExists (
        short Section,
        short fExistsLocally );
    short GetRowExists (
        short Section,
        short Row,
        short fExistsLocally );
    short GetCellExists (
        _bstr_t localeSpecificCellName,
        short fExistsLocally );
    short GetCellsSRCExists (
        short Section,
        short Row,
        short Column,
        short fExistsLocally );
    short GetLayerCount ( );
    IVLayerPtr GetLayer (
        short Index );
    short AddNamedRow (
        short Section,
        _bstr_t RowName,
        short RowTag );
    short AddRows (
        short Section,
        short Row,
        short RowTag,
        short RowCount );
    IVEventListPtr GetEventList ( );
    short GetPersistsEvents ( );
    _bstr_t GetClassID ( );
    IDispatchPtr GetShapeObject ( );
    IVWindowPtr OpenSheetWindow ( );
    short GetShapeID16 ( );
    HRESULT GetFormulas (
        SAFEARRAY * * SRCStream,
        SAFEARRAY * * formulaArray );
    HRESULT GetResults (
        SAFEARRAY * * SRCStream,
        short Flags,
        SAFEARRAY * * UnitsNamesOrCodes,
        SAFEARRAY * * resultArray );
    short SetFormulas (
        SAFEARRAY * * SRCStream,
        SAFEARRAY * * formulaArray,
        short Flags );
    short SetResults (
        SAFEARRAY * * SRCStream,
        SAFEARRAY * * UnitsNamesOrCodes,
        SAFEARRAY * * resultArray,
        short Flags );
    IVConnectsPtr GetFromConnects ( );
    HRESULT BoundingBox (
        short Flags,
        double * lpr8Left,
        double * lpr8Bottom,
        double * lpr8Right,
        double * lpr8Top );
    short HitTest (
        double xPos,
        double yPos,
        double Tolerance );
    IVHyperlinkPtr GetHyperlink ( );
    _bstr_t GetProgID ( );
    short GetObjectIsInherited ( );
    long GetShapeID ( );
    long GetShapeIndex ( );
    IVShapePtr Group ( );
    IVShapePtr ShapeDuplicate ( );
};

struct __declspec(uuid("000d0d06-0000-0000-c000-000000000046"))
Extender;
    // [ default ] dispinterface IVDispExtender
    // [ default, source ] dispinterface EShape

struct __declspec(uuid("000d0a1b-0000-0000-c000-000000000046"))
Hyperlink;
    // [ default ] interface IVHyperlink

struct __declspec(uuid("000d0a1c-0000-0000-c000-000000000046"))
OLEObjects;
    // [ default ] interface IVOLEObjects

struct __declspec(uuid("000d0a1d-0000-0000-c000-000000000046"))
OLEObject;
    // [ default ] interface IVOLEObject

struct __declspec(uuid("000d0a1e-0000-0000-c000-000000000046"))
Paths;
    // [ default ] interface IVPaths

struct __declspec(uuid("000d0a1f-0000-0000-c000-000000000046"))
Path;
    // [ default ] interface IVPath

struct __declspec(uuid("000d0a20-0000-0000-c000-000000000046"))
Curve;
    // [ default ] interface IVCurve

struct __declspec(uuid("000d0728-0000-0000-c000-000000000046"))
IVisEventProc : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    _variant_t VisEventProc (
        short nEventCode,
        IDispatch * pSourceObj,
        long nEventID,
        long nEventSeqNum,
        IDispatch * pSubjectObj,
        const _variant_t & vMoreInfo );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_VisEventProc (
        /*[in]*/ short nEventCode,
        /*[in]*/ IDispatch * pSourceObj,
        /*[in]*/ long nEventID,
        /*[in]*/ long nEventSeqNum,
        /*[in]*/ IDispatch * pSubjectObj,
        /*[in]*/ VARIANT vMoreInfo,
        /*[out,retval]*/ VARIANT * pvResult ) = 0;
};

struct __declspec(uuid("000d0b0e-0000-0000-c000-000000000046"))
ESection : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT CellChanged (
        struct IVCell * Cell );
    HRESULT FormulaChanged (
        struct IVCell * Cell );
};

struct __declspec(uuid("000d0b0f-0000-0000-c000-000000000046"))
ERow : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT CellChanged (
        struct IVCell * Cell );
    HRESULT FormulaChanged (
        struct IVCell * Cell );
};

struct __declspec(uuid("000d0a21-0000-0000-c000-000000000046"))
Hyperlinks;
    // [ default ] interface IVHyperlinks

struct __declspec(uuid("000d0a22-0000-0000-c000-000000000046"))
Section;
    // [ default ] interface IVSection
    // [ default, source ] dispinterface ESection

struct __declspec(uuid("000d0a23-0000-0000-c000-000000000046"))
Row;
    // [ default ] interface IVRow
    // [ default, source ] dispinterface ERow

struct __declspec(uuid("000d0a24-0000-0000-c000-000000000046"))
MasterShortcuts;
    // [ default ] interface IVMasterShortcuts

struct __declspec(uuid("000d0a25-0000-0000-c000-000000000046"))
MasterShortcut;
    // [ default ] interface IVMasterShortcut

struct __declspec(uuid("000d0a26-0000-0000-c000-000000000046"))
InvisibleApp;
    // [ default ] interface IVInvisibleApp
    // [ default, source ] dispinterface EApplication

struct __declspec(uuid("000d0a27-0000-0000-c000-000000000046"))
MSGWrap;
    // [ default ] interface IVMSGWrap

struct __declspec(uuid("000d0a28-0000-0000-c000-000000000046"))
MouseEvent;
    // [ default ] interface IVMouseEvent

struct __declspec(uuid("000d0a29-0000-0000-c000-000000000046"))
KeyboardEvent;
    // [ default ] interface IVKeyboardEvent

struct __declspec(uuid("000d0a2a-0000-0000-c000-000000000046"))
ApplicationSettings;
    // [ default ] interface IVApplicationSettings

enum __declspec(uuid("000d0c4d-0000-0000-c000-000000000046"))
VisFilterActions
{
    visFilterMouseMoveNoDrag = 0,
    visFilterMouseMoveDragBegin = 1,
    visFilterMouseMoveDragEnter = 2,
    visFilterMouseMoveDragOver = 3,
    visFilterMouseMoveDragLeave = 4,
    visFilterMouseMoveDragDrop = 5
};

struct __declspec(uuid("000d0b11-0000-0000-c000-000000000046"))
EDataRecordset : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT DataRecordsetChanged (
        struct IVDataRecordsetChangedEvent * DataRecordsetChanged );
    HRESULT BeforeDataRecordsetDelete (
        struct IVDataRecordset * DataRecordset );
};

struct __declspec(uuid("000d0b10-0000-0000-c000-000000000046"))
EDataRecordsets : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT DataRecordsetAdded (
        struct IVDataRecordset * DataRecordset );
    HRESULT BeforeDataRecordsetDelete (
        struct IVDataRecordset * DataRecordset );
    HRESULT DataRecordsetChanged (
        struct IVDataRecordsetChangedEvent * DataRecordsetChanged );
};

struct __declspec(uuid("000d0a2b-0000-0000-c000-000000000046"))
DataRecordsets;
    // [ default ] interface IVDataRecordsets
    // [ default, source ] dispinterface EDataRecordsets

struct __declspec(uuid("000d0a2c-0000-0000-c000-000000000046"))
DataRecordset;
    // [ default ] interface IVDataRecordset
    // [ default, source ] dispinterface EDataRecordset

struct __declspec(uuid("000d0a2d-0000-0000-c000-000000000046"))
DataConnection;
    // [ default ] interface IVDataConnection

struct __declspec(uuid("000d0a2e-0000-0000-c000-000000000046"))
DataColumns;
    // [ default ] interface IVDataColumns

struct __declspec(uuid("000d0a2f-0000-0000-c000-000000000046"))
DataColumn;
    // [ default ] interface IVDataColumn

struct __declspec(uuid("000d0a30-0000-0000-c000-000000000046"))
DataRecordsetChangedEvent;
    // [ default ] interface IVDataRecordsetChangedEvent

struct __declspec(uuid("000d0a31-0000-0000-c000-000000000046"))
GraphicItems;
    // [ default ] interface IVGraphicItems

struct __declspec(uuid("000d0a32-0000-0000-c000-000000000046"))
GraphicItem;
    // [ default ] interface IVGraphicItem

struct __declspec(uuid("000d0700-0000-0000-c000-000000000046"))
IVApplication : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetActiveDocument))
    IVDocumentPtr ActiveDocument;
    __declspec(property(get=GetActivePage))
    IVPagePtr ActivePage;
    __declspec(property(get=GetActiveWindow))
    IVWindowPtr ActiveWindow;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetDocuments))
    IVDocumentsPtr Documents;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetOnDataChangeDelay,put=PutOnDataChangeDelay))
    long OnDataChangeDelay;
    __declspec(property(get=GetProcessID))
    long ProcessID;
    __declspec(property(get=GetLanguage))
    long Language;
    __declspec(property(get=GetAssistance))
    IDispatchPtr Assistance;
    __declspec(property(get=GetScreenUpdating,put=PutScreenUpdating))
    short ScreenUpdating;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetVersion))
    _bstr_t Version;
    __declspec(property(get=GetWindowHandle))
    short WindowHandle;
    __declspec(property(get=GetWindows))
    IVWindowsPtr Windows;
    __declspec(property(get=GetIsVisio16))
    short IsVisio16;
    __declspec(property(get=GetIsVisio32))
    short IsVisio32;
    __declspec(property(get=GetWindowHandle32))
    long WindowHandle32;
    __declspec(property(get=GetInstanceHandle))
    short InstanceHandle;
    __declspec(property(get=GetInstanceHandle32))
    long InstanceHandle32;
    __declspec(property(get=GetBuiltInMenus))
    IVUIObjectPtr BuiltInMenus;
    __declspec(property(get=GetBuiltInToolbars))
    IVUIObjectPtr BuiltInToolbars[];
    __declspec(property(get=GetCustomMenus))
    IVUIObjectPtr CustomMenus;
    __declspec(property(get=GetCustomMenusFile,put=PutCustomMenusFile))
    _bstr_t CustomMenusFile;
    __declspec(property(get=GetCustomToolbars))
    IVUIObjectPtr CustomToolbars;
    __declspec(property(get=GetCustomToolbarsFile,put=PutCustomToolbarsFile))
    _bstr_t CustomToolbarsFile;
    __declspec(property(get=GetAddonPaths,put=PutAddonPaths))
    _bstr_t AddonPaths;
    __declspec(property(get=GetDrawingPaths,put=PutDrawingPaths))
    _bstr_t DrawingPaths;
    __declspec(property(get=GetFilterPaths,put=PutFilterPaths))
    _bstr_t FilterPaths;
    __declspec(property(get=GetHelpPaths,put=PutHelpPaths))
    _bstr_t HelpPaths;
    __declspec(property(get=GetStartupPaths,put=PutStartupPaths))
    _bstr_t StartupPaths;
    __declspec(property(get=GetStencilPaths,put=PutStencilPaths))
    _bstr_t StencilPaths;
    __declspec(property(get=GetTemplatePaths,put=PutTemplatePaths))
    _bstr_t TemplatePaths;
    __declspec(property(get=GetUserName,put=PutUserName))
    _bstr_t UserName;
    __declspec(property(get=GetPromptForSummary,put=PutPromptForSummary))
    short PromptForSummary;
    __declspec(property(get=GetAddons))
    IVAddonsPtr Addons;
    __declspec(property(get=GetProfileName))
    _bstr_t ProfileName;
    __declspec(property(get=GetEventInfo))
    _bstr_t EventInfo[];
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;
    __declspec(property(get=GetPersistsEvents))
    short PersistsEvents;
    __declspec(property(get=GetActive))
    short Active;
    __declspec(property(get=GetDeferRecalc,put=PutDeferRecalc))
    short DeferRecalc;
    __declspec(property(get=GetAlertResponse,put=PutAlertResponse))
    short AlertResponse;
    __declspec(property(get=GetShowProgress,put=PutShowProgress))
    short ShowProgress;
    __declspec(property(get=GetVbe))
    IDispatchPtr Vbe;
    __declspec(property(get=GetShowMenus,put=PutShowMenus))
    short ShowMenus;
    __declspec(property(get=GetToolbarStyle,put=PutToolbarStyle))
    short ToolbarStyle;
    __declspec(property(get=GetShowStatusBar,put=PutShowStatusBar))
    short ShowStatusBar;
    __declspec(property(get=GetEventsEnabled,put=PutEventsEnabled))
    short EventsEnabled;
    __declspec(property(get=GetPath))
    _bstr_t Path;
    __declspec(property(get=GetTraceFlags,put=PutTraceFlags))
    long TraceFlags;
    __declspec(property(get=GetShowToolbar,put=PutShowToolbar))
    short ShowToolbar;
    __declspec(property(get=GetLiveDynamics,put=PutLiveDynamics))
    VARIANT_BOOL LiveDynamics;
    __declspec(property(get=GetAutoLayout,put=PutAutoLayout))
    VARIANT_BOOL AutoLayout;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetCommandLine))
    _bstr_t CommandLine;
    __declspec(property(get=GetIsUndoingOrRedoing))
    VARIANT_BOOL IsUndoingOrRedoing;
    __declspec(property(get=GetCurrentScope))
    long CurrentScope;
    __declspec(property(get=GetIsInScope))
    VARIANT_BOOL IsInScope[];
    __declspec(property(get=Getold_Addins))
    IDispatchPtr old_Addins;
    __declspec(property(get=GetProductName))
    _bstr_t ProductName;
    __declspec(property(get=GetUndoEnabled,put=PutUndoEnabled))
    VARIANT_BOOL UndoEnabled;
    __declspec(property(get=GetShowChanges,put=PutShowChanges))
    VARIANT_BOOL ShowChanges;
    __declspec(property(get=GetTypelibMajorVersion))
    short TypelibMajorVersion;
    __declspec(property(get=GetTypelibMinorVersion))
    short TypelibMinorVersion;
    __declspec(property(get=GetAutoRecoverInterval,put=PutAutoRecoverInterval))
    short AutoRecoverInterval;
    __declspec(property(get=GetInhibitSelectChange,put=PutInhibitSelectChange))
    VARIANT_BOOL InhibitSelectChange;
    __declspec(property(get=GetActivePrinter,put=PutActivePrinter))
    _bstr_t ActivePrinter;
    __declspec(property(get=GetAvailablePrinters))
    SAFEARRAY * AvailablePrinters;
    __declspec(property(get=GetCommandBars))
    IDispatchPtr CommandBars;
    __declspec(property(get=GetBuild))
    long Build;
    __declspec(property(get=GetCOMAddIns))
    IDispatchPtr COMAddIns;
    __declspec(property(get=GetDefaultPageUnits,put=PutDefaultPageUnits))
    _variant_t DefaultPageUnits;
    __declspec(property(get=GetDefaultTextUnits,put=PutDefaultTextUnits))
    _variant_t DefaultTextUnits;
    __declspec(property(get=GetDefaultAngleUnits,put=PutDefaultAngleUnits))
    _variant_t DefaultAngleUnits;
    __declspec(property(get=GetDefaultDurationUnits,put=PutDefaultDurationUnits))
    _variant_t DefaultDurationUnits;
    __declspec(property(get=GetFullBuild))
    long FullBuild;
    __declspec(property(get=GetVBAEnabled))
    VARIANT_BOOL VBAEnabled;
    __declspec(property(get=GetDefaultZoomBehavior,put=PutDefaultZoomBehavior))
    enum VisZoomBehavior DefaultZoomBehavior;
    __declspec(property(get=GetDialogFont))
    IFontDisp * DialogFont;
    __declspec(property(get=GetLanguageHelp))
    long LanguageHelp;
    __declspec(property(get=GetWindow))
    IVWindowPtr Window;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetConnectorToolDataObject))
    IUnknownPtr ConnectorToolDataObject;
    __declspec(property(get=GetSettings))
    IVApplicationSettingsPtr Settings;
    __declspec(property(get=GetSaveAsWebObject))
    IDispatchPtr SaveAsWebObject;
    __declspec(property(get=GetMsoDebugOptions))
    IDispatchPtr MsoDebugOptions;
    __declspec(property(get=GetMyShapesPath,put=PutMyShapesPath))
    _bstr_t MyShapesPath;
    __declspec(property(get=GetDefaultRectangleDataObject))
    IUnknownPtr DefaultRectangleDataObject;
    __declspec(property(get=GetDataFeaturesEnabled))
    VARIANT_BOOL DataFeaturesEnabled;
    __declspec(property(get=GetLanguageSettings))
    IDispatchPtr LanguageSettings;

    //
    // Wrapper methods for error-handling
    //

    IVDocumentPtr GetActiveDocument ( );
    IVPagePtr GetActivePage ( );
    IVWindowPtr GetActiveWindow ( );
    IVApplicationPtr GetApplication ( );
    IVDocumentsPtr GetDocuments ( );
    short GetObjectType ( );
    long GetOnDataChangeDelay ( );
    void PutOnDataChangeDelay (
        long lpi4Ret );
    long GetProcessID ( );
    HRESULT Quit ( );
    HRESULT Redo ( );
    short GetScreenUpdating ( );
    void PutScreenUpdating (
        short lpi2Ret );
    short GetStat ( );
    HRESULT Undo ( );
    _bstr_t GetVersion ( );
    short GetWindowHandle ( );
    IVWindowsPtr GetWindows ( );
    long GetLanguage ( );
    short GetIsVisio16 ( );
    short GetIsVisio32 ( );
    long GetWindowHandle32 ( );
    short GetInstanceHandle ( );
    long GetInstanceHandle32 ( );
    IVUIObjectPtr GetBuiltInMenus ( );
    IVUIObjectPtr GetBuiltInToolbars (
        short fIgnored );
    IVUIObjectPtr GetCustomMenus ( );
    HRESULT SetCustomMenus (
        struct IVUIObject * MenusObject );
    _bstr_t GetCustomMenusFile ( );
    void PutCustomMenusFile (
        _bstr_t lpbstrRet );
    HRESULT ClearCustomMenus ( );
    IVUIObjectPtr GetCustomToolbars ( );
    HRESULT SetCustomToolbars (
        struct IVUIObject * ToolbarsObject );
    _bstr_t GetCustomToolbarsFile ( );
    void PutCustomToolbarsFile (
        _bstr_t lpbstrRet );
    HRESULT ClearCustomToolbars ( );
    _bstr_t GetAddonPaths ( );
    void PutAddonPaths (
        _bstr_t lpbstrRet );
    _bstr_t GetDrawingPaths ( );
    void PutDrawingPaths (
        _bstr_t lpbstrRet );
    _bstr_t GetFilterPaths ( );
    void PutFilterPaths (
        _bstr_t lpbstrRet );
    _bstr_t GetHelpPaths ( );
    void PutHelpPaths (
        _bstr_t lpbstrRet );
    _bstr_t GetStartupPaths ( );
    void PutStartupPaths (
        _bstr_t lpbstrRet );
    _bstr_t GetStencilPaths ( );
    void PutStencilPaths (
        _bstr_t lpbstrRet );
    _bstr_t GetTemplatePaths ( );
    void PutTemplatePaths (
        _bstr_t lpbstrRet );
    _bstr_t GetUserName ( );
    void PutUserName (
        _bstr_t lpbstrRet );
    short GetPromptForSummary ( );
    void PutPromptForSummary (
        short lpi2Ret );
    IVAddonsPtr GetAddons ( );
    HRESULT SaveWorkspaceAs (
        _bstr_t FileName );
    HRESULT DoCmd (
        short CommandID );
    _bstr_t GetProfileName ( );
    _bstr_t GetEventInfo (
        long eventSeqNum );
    IVEventListPtr GetEventList ( );
    short GetPersistsEvents ( );
    short GetActive ( );
    short GetDeferRecalc ( );
    void PutDeferRecalc (
        short lpi2Ret );
    short GetAlertResponse ( );
    void PutAlertResponse (
        short lpi2Ret );
    short GetShowProgress ( );
    void PutShowProgress (
        short lpi2Ret );
    IDispatchPtr GetVbe ( );
    short GetShowMenus ( );
    void PutShowMenus (
        short lpi2Ret );
    short GetToolbarStyle ( );
    void PutToolbarStyle (
        short lpi2Ret );
    short GetShowStatusBar ( );
    void PutShowStatusBar (
        short lpi2Ret );
    short GetEventsEnabled ( );
    void PutEventsEnabled (
        short lpi2Ret );
    _bstr_t FormatResult (
        const _variant_t & StringOrNumber,
        const _variant_t & UnitsIn,
        const _variant_t & UnitsOut,
        _bstr_t Format );
    double ConvertResult (
        const _variant_t & StringOrNumber,
        const _variant_t & UnitsIn,
        const _variant_t & UnitsOut );
    _bstr_t GetPath ( );
    HRESULT EnumDirectories (
        _bstr_t PathsString,
        SAFEARRAY * * NameArray );
    long GetTraceFlags ( );
    void PutTraceFlags (
        long lpi4Ret );
    HRESULT PurgeUndo ( );
    long QueueMarkerEvent (
        _bstr_t ContextString );
    short GetShowToolbar ( );
    void PutShowToolbar (
        short lpi2Ret );
    VARIANT_BOOL GetLiveDynamics ( );
    void PutLiveDynamics (
        VARIANT_BOOL pbRet );
    VARIANT_BOOL GetAutoLayout ( );
    void PutAutoLayout (
        VARIANT_BOOL pbRet );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL pbVisible );
    long BeginUndoScope (
        _bstr_t bstrUndoScopeName );
    HRESULT EndUndoScope (
        long nScopeID,
        VARIANT_BOOL bCommit );
    HRESULT AddUndoUnit (
        IUnknown * pUndoUnit );
    _bstr_t GetCommandLine ( );
    VARIANT_BOOL GetIsUndoingOrRedoing ( );
    long GetCurrentScope ( );
    VARIANT_BOOL GetIsInScope (
        long nCmdID );
    IDispatchPtr Getold_Addins ( );
    _bstr_t GetProductName ( );
    VARIANT_BOOL GetUndoEnabled ( );
    void PutUndoEnabled (
        VARIANT_BOOL pbRet );
    VARIANT_BOOL GetShowChanges ( );
    void PutShowChanges (
        VARIANT_BOOL pbRet );
    short GetTypelibMajorVersion ( );
    short GetTypelibMinorVersion ( );
    short GetAutoRecoverInterval ( );
    void PutAutoRecoverInterval (
        short lpi2Ret );
    VARIANT_BOOL GetInhibitSelectChange ( );
    void PutInhibitSelectChange (
        VARIANT_BOOL pbRet );
    _bstr_t GetActivePrinter ( );
    void PutActivePrinter (
        _bstr_t pbstrPrinterName );
    SAFEARRAY * GetAvailablePrinters ( );
    HRESULT RenameCurrentScope (
        _bstr_t bstrScopeName );
    HRESULT InvokeHelp (
        _bstr_t bstrHelpFileName,
        long Command,
        long Data );
    IDispatchPtr GetCommandBars ( );
    long GetBuild ( );
    IDispatchPtr GetCOMAddIns ( );
    _variant_t GetDefaultPageUnits ( );
    void PutDefaultPageUnits (
        const _variant_t & pUnitsNameOrCode );
    _variant_t GetDefaultTextUnits ( );
    void PutDefaultTextUnits (
        const _variant_t & pUnitsNameOrCode );
    _variant_t GetDefaultAngleUnits ( );
    void PutDefaultAngleUnits (
        const _variant_t & pUnitsNameOrCode );
    _variant_t GetDefaultDurationUnits ( );
    void PutDefaultDurationUnits (
        const _variant_t & pUnitsNameOrCode );
    long GetFullBuild ( );
    HRESULT OnComponentEnterState (
        enum VisOnComponentEnterCodes uStateID,
        VARIANT_BOOL bEnter );
    VARIANT_BOOL GetVBAEnabled ( );
    enum VisZoomBehavior GetDefaultZoomBehavior ( );
    void PutDefaultZoomBehavior (
        enum VisZoomBehavior pnZoomBehavior );
    _variant_t GetUsageStatistic (
        long nWhichStatistic );
    IFontDisp * GetDialogFont ( );
    long GetLanguageHelp ( );
    IVWindowPtr GetWindow ( );
    _bstr_t GetName ( );
    IUnknownPtr GetConnectorToolDataObject ( );
    IVApplicationSettingsPtr GetSettings ( );
    _bstr_t FormatResultEx (
        const _variant_t & StringOrNumber,
        const _variant_t & UnitsIn,
        const _variant_t & UnitsOut,
        _bstr_t Format,
        long LangID,
        long CalendarID );
    IDispatchPtr GetSaveAsWebObject ( );
    IDispatchPtr GetMsoDebugOptions ( );
    _bstr_t GetMyShapesPath ( );
    void PutMyShapesPath (
        _bstr_t lpbstrRet );
    IUnknownPtr GetDefaultRectangleDataObject ( );
    VARIANT_BOOL GetDataFeaturesEnabled ( );
    IDispatchPtr GetLanguageSettings ( );
    IDispatchPtr GetAssistance ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ActiveDocument (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ActivePage (
        /*[out,retval]*/ struct IVPage * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ActiveWindow (
        /*[out,retval]*/ struct IVWindow * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Documents (
        /*[out,retval]*/ struct IVDocuments * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_OnDataChangeDelay (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall put_OnDataChangeDelay (
        /*[in]*/ long lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_ProcessID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall raw_Quit ( ) = 0;
      virtual HRESULT __stdcall raw_Redo ( ) = 0;
      virtual HRESULT __stdcall get_ScreenUpdating (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_ScreenUpdating (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_Undo ( ) = 0;
      virtual HRESULT __stdcall get_Version (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_WindowHandle (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Windows (
        /*[out,retval]*/ struct IVWindows * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Language (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_IsVisio16 (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_IsVisio32 (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_WindowHandle32 (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_InstanceHandle (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_InstanceHandle32 (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_BuiltInMenus (
        /*[out,retval]*/ struct IVUIObject * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_BuiltInToolbars (
        /*[in]*/ short fIgnored,
        /*[out,retval]*/ struct IVUIObject * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_CustomMenus (
        /*[out,retval]*/ struct IVUIObject * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_SetCustomMenus (
        /*[in]*/ struct IVUIObject * MenusObject ) = 0;
      virtual HRESULT __stdcall get_CustomMenusFile (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_CustomMenusFile (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall raw_ClearCustomMenus ( ) = 0;
      virtual HRESULT __stdcall get_CustomToolbars (
        /*[out,retval]*/ struct IVUIObject * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_SetCustomToolbars (
        /*[in]*/ struct IVUIObject * ToolbarsObject ) = 0;
      virtual HRESULT __stdcall get_CustomToolbarsFile (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_CustomToolbarsFile (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall raw_ClearCustomToolbars ( ) = 0;
      virtual HRESULT __stdcall get_AddonPaths (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_AddonPaths (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_DrawingPaths (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_DrawingPaths (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_FilterPaths (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_FilterPaths (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_HelpPaths (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_HelpPaths (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_StartupPaths (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_StartupPaths (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_StencilPaths (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_StencilPaths (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_TemplatePaths (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_TemplatePaths (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_UserName (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_UserName (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_PromptForSummary (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_PromptForSummary (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Addons (
        /*[out,retval]*/ struct IVAddons * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_SaveWorkspaceAs (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_DoCmd (
        /*[in]*/ short CommandID ) = 0;
      virtual HRESULT __stdcall get_ProfileName (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_EventInfo (
        /*[in]*/ long eventSeqNum,
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_EventList (
        /*[out,retval]*/ struct IVEventList * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PersistsEvents (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Active (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_DeferRecalc (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_DeferRecalc (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_AlertResponse (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_AlertResponse (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ShowProgress (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_ShowProgress (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Vbe (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ShowMenus (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_ShowMenus (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ToolbarStyle (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_ToolbarStyle (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ShowStatusBar (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_ShowStatusBar (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_EventsEnabled (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_EventsEnabled (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_FormatResult (
        /*[in]*/ VARIANT StringOrNumber,
        /*[in]*/ VARIANT UnitsIn,
        /*[in]*/ VARIANT UnitsOut,
        /*[in]*/ BSTR Format,
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall raw_ConvertResult (
        /*[in]*/ VARIANT StringOrNumber,
        /*[in]*/ VARIANT UnitsIn,
        /*[in]*/ VARIANT UnitsOut,
        /*[out,retval]*/ double * lpr8Ret ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall raw_EnumDirectories (
        /*[in]*/ BSTR PathsString,
        /*[out]*/ SAFEARRAY * * NameArray ) = 0;
      virtual HRESULT __stdcall get_TraceFlags (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall put_TraceFlags (
        /*[in]*/ long lpi4Ret ) = 0;
      virtual HRESULT __stdcall raw_PurgeUndo ( ) = 0;
      virtual HRESULT __stdcall raw_QueueMarkerEvent (
        /*[in]*/ BSTR ContextString,
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_ShowToolbar (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_ShowToolbar (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_LiveDynamics (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall put_LiveDynamics (
        /*[in]*/ VARIANT_BOOL pbRet ) = 0;
      virtual HRESULT __stdcall get_AutoLayout (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall put_AutoLayout (
        /*[in]*/ VARIANT_BOOL pbRet ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * pbVisible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL pbVisible ) = 0;
      virtual HRESULT __stdcall raw_BeginUndoScope (
        /*[in]*/ BSTR bstrUndoScopeName,
        /*[out,retval]*/ long * pnScopeID ) = 0;
      virtual HRESULT __stdcall raw_EndUndoScope (
        /*[in]*/ long nScopeID,
        /*[in]*/ VARIANT_BOOL bCommit ) = 0;
      virtual HRESULT __stdcall raw_AddUndoUnit (
        /*[in]*/ IUnknown * pUndoUnit ) = 0;
      virtual HRESULT __stdcall get_CommandLine (
        /*[out,retval]*/ BSTR * pbstrCmdLine ) = 0;
      virtual HRESULT __stdcall get_IsUndoingOrRedoing (
        /*[out,retval]*/ VARIANT_BOOL * pbInUndoOrRedo ) = 0;
      virtual HRESULT __stdcall get_CurrentScope (
        /*[out,retval]*/ long * pnCmdID ) = 0;
      virtual HRESULT __stdcall get_IsInScope (
        /*[in]*/ long nCmdID,
        /*[out,retval]*/ VARIANT_BOOL * pbInScope ) = 0;
      virtual HRESULT __stdcall get_old_Addins (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ProductName (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_UndoEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall put_UndoEnabled (
        /*[in]*/ VARIANT_BOOL pbRet ) = 0;
      virtual HRESULT __stdcall get_ShowChanges (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall put_ShowChanges (
        /*[in]*/ VARIANT_BOOL pbRet ) = 0;
      virtual HRESULT __stdcall get_TypelibMajorVersion (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_TypelibMinorVersion (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_AutoRecoverInterval (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_AutoRecoverInterval (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_InhibitSelectChange (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall put_InhibitSelectChange (
        /*[in]*/ VARIANT_BOOL pbRet ) = 0;
      virtual HRESULT __stdcall get_ActivePrinter (
        /*[out,retval]*/ BSTR * pbstrPrinterName ) = 0;
      virtual HRESULT __stdcall put_ActivePrinter (
        /*[in]*/ BSTR pbstrPrinterName ) = 0;
      virtual HRESULT __stdcall get_AvailablePrinters (
        /*[out,retval]*/ SAFEARRAY * * NamesArray ) = 0;
      virtual HRESULT __stdcall raw_RenameCurrentScope (
        /*[in]*/ BSTR bstrScopeName ) = 0;
      virtual HRESULT __stdcall raw_InvokeHelp (
        /*[in]*/ BSTR bstrHelpFileName,
        /*[in]*/ long Command,
        /*[in]*/ long Data ) = 0;
      virtual HRESULT __stdcall get_CommandBars (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Build (
        /*[out,retval]*/ long * pnBuild ) = 0;
      virtual HRESULT __stdcall get_COMAddIns (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_DefaultPageUnits (
        /*[out,retval]*/ VARIANT * pUnitsNameOrCode ) = 0;
      virtual HRESULT __stdcall put_DefaultPageUnits (
        /*[in]*/ VARIANT pUnitsNameOrCode ) = 0;
      virtual HRESULT __stdcall get_DefaultTextUnits (
        /*[out,retval]*/ VARIANT * pUnitsNameOrCode ) = 0;
      virtual HRESULT __stdcall put_DefaultTextUnits (
        /*[in]*/ VARIANT pUnitsNameOrCode ) = 0;
      virtual HRESULT __stdcall get_DefaultAngleUnits (
        /*[out,retval]*/ VARIANT * pUnitsNameOrCode ) = 0;
      virtual HRESULT __stdcall put_DefaultAngleUnits (
        /*[in]*/ VARIANT pUnitsNameOrCode ) = 0;
      virtual HRESULT __stdcall get_DefaultDurationUnits (
        /*[out,retval]*/ VARIANT * pUnitsNameOrCode ) = 0;
      virtual HRESULT __stdcall put_DefaultDurationUnits (
        /*[in]*/ VARIANT pUnitsNameOrCode ) = 0;
      virtual HRESULT __stdcall get_FullBuild (
        /*[out,retval]*/ long * pnFullBuild ) = 0;
      virtual HRESULT __stdcall raw_OnComponentEnterState (
        /*[in]*/ enum VisOnComponentEnterCodes uStateID,
        /*[in]*/ VARIANT_BOOL bEnter ) = 0;
      virtual HRESULT __stdcall get_VBAEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall get_DefaultZoomBehavior (
        /*[out,retval]*/ enum VisZoomBehavior * pnZoomBehavior ) = 0;
      virtual HRESULT __stdcall put_DefaultZoomBehavior (
        /*[in]*/ enum VisZoomBehavior pnZoomBehavior ) = 0;
      virtual HRESULT __stdcall raw_GetUsageStatistic (
        /*[in]*/ long nWhichStatistic,
        /*[out,retval]*/ VARIANT * pvStatistic ) = 0;
      virtual HRESULT __stdcall get_DialogFont (
        /*[out,retval]*/ IFontDisp * * ppFontDisp ) = 0;
      virtual HRESULT __stdcall get_LanguageHelp (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_Window (
        /*[out,retval]*/ struct IVWindow * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pbstrName ) = 0;
      virtual HRESULT __stdcall get_ConnectorToolDataObject (
        /*[out,retval]*/ IUnknown * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Settings (
        /*[out,retval]*/ struct IVApplicationSettings * * lpSettingRet ) = 0;
      virtual HRESULT __stdcall raw_FormatResultEx (
        /*[in]*/ VARIANT StringOrNumber,
        /*[in]*/ VARIANT UnitsIn,
        /*[in]*/ VARIANT UnitsOut,
        /*[in]*/ BSTR Format,
        /*[in]*/ long LangID,
        /*[in]*/ long CalendarID,
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_SaveAsWebObject (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_MsoDebugOptions (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_MyShapesPath (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_MyShapesPath (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_DefaultRectangleDataObject (
        /*[out,retval]*/ IUnknown * * lpunkRet ) = 0;
      virtual HRESULT __stdcall get_DataFeaturesEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall get_LanguageSettings (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Assistance (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
};

struct __declspec(uuid("000d0722-0000-0000-c000-000000000046"))
IVCurve : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetClosed))
    short Closed;
    __declspec(property(get=GetStart))
    double Start;
    __declspec(property(get=GetEnd))
    double End;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    short GetObjectType ( );
    short GetClosed ( );
    HRESULT Points (
        double Tolerance,
        SAFEARRAY * * xyArray );
    double GetStart ( );
    double GetEnd ( );
    HRESULT Point (
        double t,
        double * x,
        double * y );
    HRESULT PointAndDerivatives (
        double t,
        short n,
        double * x,
        double * y,
        double * dxdt,
        double * dydt,
        double * ddxdt,
        double * ddydt );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Closed (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_Points (
        /*[in]*/ double Tolerance,
        /*[out]*/ SAFEARRAY * * xyArray ) = 0;
      virtual HRESULT __stdcall get_Start (
        /*[out,retval]*/ double * lpr8Ret ) = 0;
      virtual HRESULT __stdcall get_End (
        /*[out,retval]*/ double * lpr8Ret ) = 0;
      virtual HRESULT __stdcall raw_Point (
        /*[in]*/ double t,
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_PointAndDerivatives (
        /*[in]*/ double t,
        /*[in]*/ short n,
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * dxdt,
        /*[out]*/ double * dydt,
        /*[out]*/ double * ddxdt,
        /*[out]*/ double * ddydt ) = 0;
};

struct __declspec(uuid("000d0721-0000-0000-c000-000000000046"))
IVPath : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVCurvePtr Item[];
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetCount16))
    short Count16;
    __declspec(property(get=GetClosed))
    short Closed;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetItem16))
    IVCurvePtr Item16[];
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    short GetObjectType ( );
    IVCurvePtr GetItem16 (
        short Index );
    short GetCount16 ( );
    short GetClosed ( );
    HRESULT Points (
        double Tolerance,
        SAFEARRAY * * xyArray );
    IVCurvePtr GetItem (
        long Index );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Item16 (
        /*[in]*/ short Index,
        /*[out,retval]*/ struct IVCurve * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Count16 (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Closed (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_Points (
        /*[in]*/ double Tolerance,
        /*[out]*/ SAFEARRAY * * xyArray ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IVCurve * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppEnum ) = 0;
};

struct __declspec(uuid("000d0720-0000-0000-c000-000000000046"))
IVPaths : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVPathPtr Item[];
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetCount16))
    short Count16;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetItem16))
    IVPathPtr Item16[];
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    short GetObjectType ( );
    IVPathPtr GetItem16 (
        short Index );
    short GetCount16 ( );
    IVPathPtr GetItem (
        long Index );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Item16 (
        /*[in]*/ short Index,
        /*[out,retval]*/ struct IVPath * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Count16 (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IVPath * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppEnum ) = 0;
};

struct __declspec(uuid("000d0718-0000-0000-c000-000000000046"))
IVAddon : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetIndex))
    short Index;
    __declspec(property(get=GetEnabled))
    short Enabled;
    __declspec(property(get=GetNameU))
    _bstr_t NameU;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    short GetObjectType ( );
    _bstr_t GetName ( );
    short GetIndex ( );
    short GetEnabled ( );
    HRESULT Run (
        _bstr_t ArgString );
    _bstr_t GetNameU ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_Run (
        /*[in]*/ BSTR ArgString ) = 0;
      virtual HRESULT __stdcall get_NameU (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
};

struct __declspec(uuid("000d0719-0000-0000-c000-000000000046"))
IVAddons : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVAddonPtr Item[];
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetCount))
    short Count;
    __declspec(property(get=GetItemU))
    IVAddonPtr ItemU[];
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    short GetObjectType ( );
    IVAddonPtr GetItem (
        const _variant_t & NameOrIndex );
    short GetCount ( );
    IVAddonPtr Add (
        _bstr_t FileName );
    HRESULT GetNames (
        SAFEARRAY * * NameArray );
    IUnknownPtr Get_NewEnum ( );
    IVAddonPtr GetItemU (
        const _variant_t & NameOrIndex );
    HRESULT GetNamesU (
        SAFEARRAY * * NameArray );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT NameOrIndex,
        /*[out,retval]*/ struct IVAddon * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ struct IVAddon * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_GetNames (
        /*[out]*/ SAFEARRAY * * NameArray ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppEnum ) = 0;
      virtual HRESULT __stdcall get_ItemU (
        /*[in]*/ VARIANT NameOrIndex,
        /*[out,retval]*/ struct IVAddon * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_GetNamesU (
        /*[out]*/ SAFEARRAY * * NameArray ) = 0;
};

struct __declspec(uuid("000d072d-0000-0000-c000-000000000046"))
IVApplicationSettings : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetObjectType))
    enum VisObjectTypes ObjectType;
    __declspec(property(get=GetDrawingAids,put=PutDrawingAids))
    VARIANT_BOOL DrawingAids;
    __declspec(property(get=GetSnapStrengthRulerX,put=PutSnapStrengthRulerX))
    long SnapStrengthRulerX;
    __declspec(property(get=GetSnapStrengthRulerY,put=PutSnapStrengthRulerY))
    long SnapStrengthRulerY;
    __declspec(property(get=GetSnapStrengthGridX,put=PutSnapStrengthGridX))
    long SnapStrengthGridX;
    __declspec(property(get=GetSnapStrengthGridY,put=PutSnapStrengthGridY))
    long SnapStrengthGridY;
    __declspec(property(get=GetSnapStrengthGuidesX,put=PutSnapStrengthGuidesX))
    long SnapStrengthGuidesX;
    __declspec(property(get=GetSnapStrengthGuidesY,put=PutSnapStrengthGuidesY))
    long SnapStrengthGuidesY;
    __declspec(property(get=GetSnapStrengthPointsX,put=PutSnapStrengthPointsX))
    long SnapStrengthPointsX;
    __declspec(property(get=GetSnapStrengthPointsY,put=PutSnapStrengthPointsY))
    long SnapStrengthPointsY;
    __declspec(property(get=GetSnapStrengthGeometryX,put=PutSnapStrengthGeometryX))
    long SnapStrengthGeometryX;
    __declspec(property(get=GetSnapStrengthGeometryY,put=PutSnapStrengthGeometryY))
    long SnapStrengthGeometryY;
    __declspec(property(get=GetSnapStrengthExtensionsX,put=PutSnapStrengthExtensionsX))
    long SnapStrengthExtensionsX;
    __declspec(property(get=GetSnapStrengthExtensionsY,put=PutSnapStrengthExtensionsY))
    long SnapStrengthExtensionsY;
    __declspec(property(get=GetShowFileSaveWarnings,put=PutShowFileSaveWarnings))
    VARIANT_BOOL ShowFileSaveWarnings;
    __declspec(property(get=GetShowFileOpenWarnings,put=PutShowFileOpenWarnings))
    VARIANT_BOOL ShowFileOpenWarnings;
    __declspec(property(get=GetDefaultSaveFormat,put=PutDefaultSaveFormat))
    enum VisDefaultSaveFormats DefaultSaveFormat;
    __declspec(property(get=GetDrawingPageColor,put=PutDrawingPageColor))
    OLE_COLOR DrawingPageColor;
    __declspec(property(get=GetDrawingBackgroundColor,put=PutDrawingBackgroundColor))
    OLE_COLOR DrawingBackgroundColor;
    __declspec(property(get=GetDrawingBackgroundColorGradient,put=PutDrawingBackgroundColorGradient))
    OLE_COLOR DrawingBackgroundColorGradient;
    __declspec(property(get=GetStencilBackgroundColor,put=PutStencilBackgroundColor))
    OLE_COLOR StencilBackgroundColor;
    __declspec(property(get=GetStencilBackgroundColorGradient,put=PutStencilBackgroundColorGradient))
    OLE_COLOR StencilBackgroundColorGradient;
    __declspec(property(get=GetStencilTextColor,put=PutStencilTextColor))
    OLE_COLOR StencilTextColor;
    __declspec(property(get=GetPrintPreviewBackgroundColor,put=PutPrintPreviewBackgroundColor))
    OLE_COLOR PrintPreviewBackgroundColor;
    __declspec(property(get=GetFullScreenBackgroundColor,put=PutFullScreenBackgroundColor))
    OLE_COLOR FullScreenBackgroundColor;
    __declspec(property(get=GetShowStartupDialog,put=PutShowStartupDialog))
    VARIANT_BOOL ShowStartupDialog;
    __declspec(property(get=GetShowSmartTags,put=PutShowSmartTags))
    VARIANT_BOOL ShowSmartTags;
    __declspec(property(get=GetTextDisplayQuality,put=PutTextDisplayQuality))
    enum VisTextDisplayQualityTypes TextDisplayQuality;
    __declspec(property(get=GetHigherQualityShapeDisplay,put=PutHigherQualityShapeDisplay))
    VARIANT_BOOL HigherQualityShapeDisplay;
    __declspec(property(get=GetSmoothDrawing,put=PutSmoothDrawing))
    VARIANT_BOOL SmoothDrawing;
    __declspec(property(get=GetStencilCharactersPerLine,put=PutStencilCharactersPerLine))
    long StencilCharactersPerLine;
    __declspec(property(get=GetStencilLinesPerMaster,put=PutStencilLinesPerMaster))
    long StencilLinesPerMaster;
    __declspec(property(get=GetUserName,put=PutUserName))
    _bstr_t UserName;
    __declspec(property(get=GetUserInitials,put=PutUserInitials))
    _bstr_t UserInitials;
    __declspec(property(get=GetZoomOnRoll,put=PutZoomOnRoll))
    VARIANT_BOOL ZoomOnRoll;
    __declspec(property(get=GetUndoLevels,put=PutUndoLevels))
    long UndoLevels;
    __declspec(property(get=GetRecentFilesListSize,put=PutRecentFilesListSize))
    long RecentFilesListSize;
    __declspec(property(get=GetCenterSelectionOnZoom,put=PutCenterSelectionOnZoom))
    VARIANT_BOOL CenterSelectionOnZoom;
    __declspec(property(get=GetConnectorSplittingEnabled,put=PutConnectorSplittingEnabled))
    VARIANT_BOOL ConnectorSplittingEnabled;
    __declspec(property(get=GetAsianTextUI,put=PutAsianTextUI))
    enum VisRegionalUIOptions AsianTextUI;
    __declspec(property(get=GetComplexTextUI,put=PutComplexTextUI))
    enum VisRegionalUIOptions ComplexTextUI;
    __declspec(property(get=GetKanaFindAndReplace,put=PutKanaFindAndReplace))
    enum VisRegionalUIOptions KanaFindAndReplace;
    __declspec(property(get=GetFreeformDrawingPrecision,put=PutFreeformDrawingPrecision))
    long FreeformDrawingPrecision;
    __declspec(property(get=GetFreeformDrawingSmoothing,put=PutFreeformDrawingSmoothing))
    long FreeformDrawingSmoothing;
    __declspec(property(get=GetDeveloperMode,put=PutDeveloperMode))
    VARIANT_BOOL DeveloperMode;
    __declspec(property(get=GetShowChooseDrawingTypePane,put=PutShowChooseDrawingTypePane))
    VARIANT_BOOL ShowChooseDrawingTypePane;
    __declspec(property(get=GetShowShapeSearchPane,put=PutShowShapeSearchPane))
    VARIANT_BOOL ShowShapeSearchPane;
    __declspec(property(get=GetApplyThemesOnShapeAdd,put=PutApplyThemesOnShapeAdd))
    VARIANT_BOOL ApplyThemesOnShapeAdd;
    __declspec(property(get=GetSATextUI))
    enum VisRegionalUIOptions SATextUI;
    __declspec(property(get=GetBIDITextUI))
    enum VisRegionalUIOptions BIDITextUI;
    __declspec(property(get=GetKashidaTextUI))
    enum VisRegionalUIOptions KashidaTextUI;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetShowMoreShapeHandlesOnHover,put=PutShowMoreShapeHandlesOnHover))
    VARIANT_BOOL ShowMoreShapeHandlesOnHover;
    __declspec(property(get=GetEnableAutoConnect,put=PutEnableAutoConnect))
    VARIANT_BOOL EnableAutoConnect;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    enum VisObjectTypes GetObjectType ( );
    VARIANT_BOOL GetDrawingAids ( );
    void PutDrawingAids (
        VARIANT_BOOL RetVal );
    long GetSnapStrengthRulerX ( );
    void PutSnapStrengthRulerX (
        long strength );
    long GetSnapStrengthRulerY ( );
    void PutSnapStrengthRulerY (
        long strength );
    long GetSnapStrengthGridX ( );
    void PutSnapStrengthGridX (
        long strength );
    long GetSnapStrengthGridY ( );
    void PutSnapStrengthGridY (
        long strength );
    long GetSnapStrengthGuidesX ( );
    void PutSnapStrengthGuidesX (
        long strength );
    long GetSnapStrengthGuidesY ( );
    void PutSnapStrengthGuidesY (
        long strength );
    long GetSnapStrengthPointsX ( );
    void PutSnapStrengthPointsX (
        long strength );
    long GetSnapStrengthPointsY ( );
    void PutSnapStrengthPointsY (
        long strength );
    long GetSnapStrengthGeometryX ( );
    void PutSnapStrengthGeometryX (
        long strength );
    long GetSnapStrengthGeometryY ( );
    void PutSnapStrengthGeometryY (
        long strength );
    long GetSnapStrengthExtensionsX ( );
    void PutSnapStrengthExtensionsX (
        long strength );
    long GetSnapStrengthExtensionsY ( );
    void PutSnapStrengthExtensionsY (
        long strength );
    VARIANT_BOOL GetShowFileSaveWarnings ( );
    void PutShowFileSaveWarnings (
        VARIANT_BOOL Show );
    VARIANT_BOOL GetShowFileOpenWarnings ( );
    void PutShowFileOpenWarnings (
        VARIANT_BOOL Show );
    enum VisDefaultSaveFormats GetDefaultSaveFormat ( );
    void PutDefaultSaveFormat (
        enum VisDefaultSaveFormats pFormatType );
    OLE_COLOR GetDrawingPageColor ( );
    void PutDrawingPageColor (
        OLE_COLOR pColor );
    OLE_COLOR GetDrawingBackgroundColor ( );
    void PutDrawingBackgroundColor (
        OLE_COLOR pColor );
    OLE_COLOR GetDrawingBackgroundColorGradient ( );
    void PutDrawingBackgroundColorGradient (
        OLE_COLOR pColor );
    OLE_COLOR GetStencilBackgroundColor ( );
    void PutStencilBackgroundColor (
        OLE_COLOR pColor );
    OLE_COLOR GetStencilBackgroundColorGradient ( );
    void PutStencilBackgroundColorGradient (
        OLE_COLOR pColor );
    OLE_COLOR GetStencilTextColor ( );
    void PutStencilTextColor (
        OLE_COLOR pColor );
    OLE_COLOR GetPrintPreviewBackgroundColor ( );
    void PutPrintPreviewBackgroundColor (
        OLE_COLOR pColor );
    OLE_COLOR GetFullScreenBackgroundColor ( );
    void PutFullScreenBackgroundColor (
        OLE_COLOR pColor );
    VARIANT_BOOL GetShowStartupDialog ( );
    void PutShowStartupDialog (
        VARIANT_BOOL pShow );
    VARIANT_BOOL GetShowSmartTags ( );
    void PutShowSmartTags (
        VARIANT_BOOL pShow );
    enum VisTextDisplayQualityTypes GetTextDisplayQuality ( );
    void PutTextDisplayQuality (
        enum VisTextDisplayQualityTypes pTextQuality );
    VARIANT_BOOL GetHigherQualityShapeDisplay ( );
    void PutHigherQualityShapeDisplay (
        VARIANT_BOOL pbRet );
    VARIANT_BOOL GetSmoothDrawing ( );
    void PutSmoothDrawing (
        VARIANT_BOOL pbRet );
    long GetStencilCharactersPerLine ( );
    void PutStencilCharactersPerLine (
        long pCharCount );
    long GetStencilLinesPerMaster ( );
    void PutStencilLinesPerMaster (
        long pLineCount );
    _bstr_t GetUserName ( );
    void PutUserName (
        _bstr_t lpbstrRet );
    _bstr_t GetUserInitials ( );
    void PutUserInitials (
        _bstr_t lpbstrRet );
    VARIANT_BOOL GetZoomOnRoll ( );
    void PutZoomOnRoll (
        VARIANT_BOOL pVal );
    long GetUndoLevels ( );
    void PutUndoLevels (
        long pNumLevels );
    long GetRecentFilesListSize ( );
    void PutRecentFilesListSize (
        long pNumFiles );
    VARIANT_BOOL GetCenterSelectionOnZoom ( );
    void PutCenterSelectionOnZoom (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetConnectorSplittingEnabled ( );
    void PutConnectorSplittingEnabled (
        VARIANT_BOOL pVal );
    enum VisRegionalUIOptions GetAsianTextUI ( );
    void PutAsianTextUI (
        enum VisRegionalUIOptions pAsianTextUIOption );
    enum VisRegionalUIOptions GetComplexTextUI ( );
    void PutComplexTextUI (
        enum VisRegionalUIOptions pComplexTextUIOption );
    enum VisRegionalUIOptions GetKanaFindAndReplace ( );
    void PutKanaFindAndReplace (
        enum VisRegionalUIOptions pKanaOption );
    long GetFreeformDrawingPrecision ( );
    void PutFreeformDrawingPrecision (
        long plVal );
    long GetFreeformDrawingSmoothing ( );
    void PutFreeformDrawingSmoothing (
        long plVal );
    VARIANT_BOOL GetDeveloperMode ( );
    void PutDeveloperMode (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetShowChooseDrawingTypePane ( );
    void PutShowChooseDrawingTypePane (
        VARIANT_BOOL pShow );
    VARIANT_BOOL GetShowShapeSearchPane ( );
    void PutShowShapeSearchPane (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetApplyThemesOnShapeAdd ( );
    void PutApplyThemesOnShapeAdd (
        VARIANT_BOOL pVal );
    enum VisRegionalUIOptions GetSATextUI ( );
    enum VisRegionalUIOptions GetBIDITextUI ( );
    enum VisRegionalUIOptions GetKashidaTextUI ( );
    short GetStat ( );
    VARIANT_BOOL GetShowMoreShapeHandlesOnHover ( );
    void PutShowMoreShapeHandlesOnHover (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetEnableAutoConnect ( );
    void PutEnableAutoConnect (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ enum VisObjectTypes * peType ) = 0;
      virtual HRESULT __stdcall get_DrawingAids (
        /*[out,retval]*/ VARIANT_BOOL * RetVal ) = 0;
      virtual HRESULT __stdcall put_DrawingAids (
        /*[in]*/ VARIANT_BOOL RetVal ) = 0;
      virtual HRESULT __stdcall get_SnapStrengthRulerX (
        /*[out,retval]*/ long * strength ) = 0;
      virtual HRESULT __stdcall put_SnapStrengthRulerX (
        /*[in]*/ long strength ) = 0;
      virtual HRESULT __stdcall get_SnapStrengthRulerY (
        /*[out,retval]*/ long * strength ) = 0;
      virtual HRESULT __stdcall put_SnapStrengthRulerY (
        /*[in]*/ long strength ) = 0;
      virtual HRESULT __stdcall get_SnapStrengthGridX (
        /*[out,retval]*/ long * strength ) = 0;
      virtual HRESULT __stdcall put_SnapStrengthGridX (
        /*[in]*/ long strength ) = 0;
      virtual HRESULT __stdcall get_SnapStrengthGridY (
        /*[out,retval]*/ long * strength ) = 0;
      virtual HRESULT __stdcall put_SnapStrengthGridY (
        /*[in]*/ long strength ) = 0;
      virtual HRESULT __stdcall get_SnapStrengthGuidesX (
        /*[out,retval]*/ long * strength ) = 0;
      virtual HRESULT __stdcall put_SnapStrengthGuidesX (
        /*[in]*/ long strength ) = 0;
      virtual HRESULT __stdcall get_SnapStrengthGuidesY (
        /*[out,retval]*/ long * strength ) = 0;
      virtual HRESULT __stdcall put_SnapStrengthGuidesY (
        /*[in]*/ long strength ) = 0;
      virtual HRESULT __stdcall get_SnapStrengthPointsX (
        /*[out,retval]*/ long * strength ) = 0;
      virtual HRESULT __stdcall put_SnapStrengthPointsX (
        /*[in]*/ long strength ) = 0;
      virtual HRESULT __stdcall get_SnapStrengthPointsY (
        /*[out,retval]*/ long * strength ) = 0;
      virtual HRESULT __stdcall put_SnapStrengthPointsY (
        /*[in]*/ long strength ) = 0;
      virtual HRESULT __stdcall get_SnapStrengthGeometryX (
        /*[out,retval]*/ long * strength ) = 0;
      virtual HRESULT __stdcall put_SnapStrengthGeometryX (
        /*[in]*/ long strength ) = 0;
      virtual HRESULT __stdcall get_SnapStrengthGeometryY (
        /*[out,retval]*/ long * strength ) = 0;
      virtual HRESULT __stdcall put_SnapStrengthGeometryY (
        /*[in]*/ long strength ) = 0;
      virtual HRESULT __stdcall get_SnapStrengthExtensionsX (
        /*[out,retval]*/ long * strength ) = 0;
      virtual HRESULT __stdcall put_SnapStrengthExtensionsX (
        /*[in]*/ long strength ) = 0;
      virtual HRESULT __stdcall get_SnapStrengthExtensionsY (
        /*[out,retval]*/ long * strength ) = 0;
      virtual HRESULT __stdcall put_SnapStrengthExtensionsY (
        /*[in]*/ long strength ) = 0;
      virtual HRESULT __stdcall get_ShowFileSaveWarnings (
        /*[out,retval]*/ VARIANT_BOOL * Show ) = 0;
      virtual HRESULT __stdcall put_ShowFileSaveWarnings (
        /*[in]*/ VARIANT_BOOL Show ) = 0;
      virtual HRESULT __stdcall get_ShowFileOpenWarnings (
        /*[out,retval]*/ VARIANT_BOOL * Show ) = 0;
      virtual HRESULT __stdcall put_ShowFileOpenWarnings (
        /*[in]*/ VARIANT_BOOL Show ) = 0;
      virtual HRESULT __stdcall get_DefaultSaveFormat (
        /*[out,retval]*/ enum VisDefaultSaveFormats * pFormatType ) = 0;
      virtual HRESULT __stdcall put_DefaultSaveFormat (
        /*[in]*/ enum VisDefaultSaveFormats pFormatType ) = 0;
      virtual HRESULT __stdcall get_DrawingPageColor (
        /*[out,retval]*/ OLE_COLOR * pColor ) = 0;
      virtual HRESULT __stdcall put_DrawingPageColor (
        /*[in]*/ OLE_COLOR pColor ) = 0;
      virtual HRESULT __stdcall get_DrawingBackgroundColor (
        /*[out,retval]*/ OLE_COLOR * pColor ) = 0;
      virtual HRESULT __stdcall put_DrawingBackgroundColor (
        /*[in]*/ OLE_COLOR pColor ) = 0;
      virtual HRESULT __stdcall get_DrawingBackgroundColorGradient (
        /*[out,retval]*/ OLE_COLOR * pColor ) = 0;
      virtual HRESULT __stdcall put_DrawingBackgroundColorGradient (
        /*[in]*/ OLE_COLOR pColor ) = 0;
      virtual HRESULT __stdcall get_StencilBackgroundColor (
        /*[out,retval]*/ OLE_COLOR * pColor ) = 0;
      virtual HRESULT __stdcall put_StencilBackgroundColor (
        /*[in]*/ OLE_COLOR pColor ) = 0;
      virtual HRESULT __stdcall get_StencilBackgroundColorGradient (
        /*[out,retval]*/ OLE_COLOR * pColor ) = 0;
      virtual HRESULT __stdcall put_StencilBackgroundColorGradient (
        /*[in]*/ OLE_COLOR pColor ) = 0;
      virtual HRESULT __stdcall get_StencilTextColor (
        /*[out,retval]*/ OLE_COLOR * pColor ) = 0;
      virtual HRESULT __stdcall put_StencilTextColor (
        /*[in]*/ OLE_COLOR pColor ) = 0;
      virtual HRESULT __stdcall get_PrintPreviewBackgroundColor (
        /*[out,retval]*/ OLE_COLOR * pColor ) = 0;
      virtual HRESULT __stdcall put_PrintPreviewBackgroundColor (
        /*[in]*/ OLE_COLOR pColor ) = 0;
      virtual HRESULT __stdcall get_FullScreenBackgroundColor (
        /*[out,retval]*/ OLE_COLOR * pColor ) = 0;
      virtual HRESULT __stdcall put_FullScreenBackgroundColor (
        /*[in]*/ OLE_COLOR pColor ) = 0;
      virtual HRESULT __stdcall get_ShowStartupDialog (
        /*[out,retval]*/ VARIANT_BOOL * pShow ) = 0;
      virtual HRESULT __stdcall put_ShowStartupDialog (
        /*[in]*/ VARIANT_BOOL pShow ) = 0;
      virtual HRESULT __stdcall get_ShowSmartTags (
        /*[out,retval]*/ VARIANT_BOOL * pShow ) = 0;
      virtual HRESULT __stdcall put_ShowSmartTags (
        /*[in]*/ VARIANT_BOOL pShow ) = 0;
      virtual HRESULT __stdcall get_TextDisplayQuality (
        /*[out,retval]*/ enum VisTextDisplayQualityTypes * pTextQuality ) = 0;
      virtual HRESULT __stdcall put_TextDisplayQuality (
        /*[in]*/ enum VisTextDisplayQualityTypes pTextQuality ) = 0;
      virtual HRESULT __stdcall get_HigherQualityShapeDisplay (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall put_HigherQualityShapeDisplay (
        /*[in]*/ VARIANT_BOOL pbRet ) = 0;
      virtual HRESULT __stdcall get_SmoothDrawing (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall put_SmoothDrawing (
        /*[in]*/ VARIANT_BOOL pbRet ) = 0;
      virtual HRESULT __stdcall get_StencilCharactersPerLine (
        /*[out,retval]*/ long * pCharCount ) = 0;
      virtual HRESULT __stdcall put_StencilCharactersPerLine (
        /*[in]*/ long pCharCount ) = 0;
      virtual HRESULT __stdcall get_StencilLinesPerMaster (
        /*[out,retval]*/ long * pLineCount ) = 0;
      virtual HRESULT __stdcall put_StencilLinesPerMaster (
        /*[in]*/ long pLineCount ) = 0;
      virtual HRESULT __stdcall get_UserName (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_UserName (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_UserInitials (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_UserInitials (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_ZoomOnRoll (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ZoomOnRoll (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UndoLevels (
        /*[out,retval]*/ long * pNumLevels ) = 0;
      virtual HRESULT __stdcall put_UndoLevels (
        /*[in]*/ long pNumLevels ) = 0;
      virtual HRESULT __stdcall get_RecentFilesListSize (
        /*[out,retval]*/ long * pNumFiles ) = 0;
      virtual HRESULT __stdcall put_RecentFilesListSize (
        /*[in]*/ long pNumFiles ) = 0;
      virtual HRESULT __stdcall get_CenterSelectionOnZoom (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_CenterSelectionOnZoom (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ConnectorSplittingEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ConnectorSplittingEnabled (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_AsianTextUI (
        /*[out,retval]*/ enum VisRegionalUIOptions * pAsianTextUIOption ) = 0;
      virtual HRESULT __stdcall put_AsianTextUI (
        /*[in]*/ enum VisRegionalUIOptions pAsianTextUIOption ) = 0;
      virtual HRESULT __stdcall get_ComplexTextUI (
        /*[out,retval]*/ enum VisRegionalUIOptions * pComplexTextUIOption ) = 0;
      virtual HRESULT __stdcall put_ComplexTextUI (
        /*[in]*/ enum VisRegionalUIOptions pComplexTextUIOption ) = 0;
      virtual HRESULT __stdcall get_KanaFindAndReplace (
        /*[out,retval]*/ enum VisRegionalUIOptions * pKanaOption ) = 0;
      virtual HRESULT __stdcall put_KanaFindAndReplace (
        /*[in]*/ enum VisRegionalUIOptions pKanaOption ) = 0;
      virtual HRESULT __stdcall get_FreeformDrawingPrecision (
        /*[out,retval]*/ long * plVal ) = 0;
      virtual HRESULT __stdcall put_FreeformDrawingPrecision (
        /*[in]*/ long plVal ) = 0;
      virtual HRESULT __stdcall get_FreeformDrawingSmoothing (
        /*[out,retval]*/ long * plVal ) = 0;
      virtual HRESULT __stdcall put_FreeformDrawingSmoothing (
        /*[in]*/ long plVal ) = 0;
      virtual HRESULT __stdcall get_DeveloperMode (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_DeveloperMode (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ShowChooseDrawingTypePane (
        /*[out,retval]*/ VARIANT_BOOL * pShow ) = 0;
      virtual HRESULT __stdcall put_ShowChooseDrawingTypePane (
        /*[in]*/ VARIANT_BOOL pShow ) = 0;
      virtual HRESULT __stdcall get_ShowShapeSearchPane (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ShowShapeSearchPane (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ApplyThemesOnShapeAdd (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ApplyThemesOnShapeAdd (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SATextUI (
        /*[out,retval]*/ enum VisRegionalUIOptions * pSATextUIOption ) = 0;
      virtual HRESULT __stdcall get_BIDITextUI (
        /*[out,retval]*/ enum VisRegionalUIOptions * pBIDITextUIOption ) = 0;
      virtual HRESULT __stdcall get_KashidaTextUI (
        /*[out,retval]*/ enum VisRegionalUIOptions * pKashidaTextUIOption ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ShowMoreShapeHandlesOnHover (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ShowMoreShapeHandlesOnHover (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_EnableAutoConnect (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableAutoConnect (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("000d0729-0000-0000-c000-000000000046"))
IVMSGWrap : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=Gethwnd,put=Puthwnd))
    long hwnd;
    __declspec(property(get=Getmessage,put=Putmessage))
    long message;
    __declspec(property(get=GetwParam,put=PutwParam))
    long wParam;
    __declspec(property(get=GetlParam,put=PutlParam))
    long lParam;
    __declspec(property(get=Getposttime,put=Putposttime))
    long posttime;
    __declspec(property(get=Getptx,put=Putptx))
    long ptx;
    __declspec(property(get=Getpty,put=Putpty))
    long pty;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    short GetObjectType ( );
    long Gethwnd ( );
    void Puthwnd (
        long lpi4Ret );
    long Getmessage ( );
    void Putmessage (
        long lpi4Ret );
    long GetwParam ( );
    void PutwParam (
        long lpi4Ret );
    long GetlParam ( );
    void PutlParam (
        long lpi4Ret );
    long Getposttime ( );
    void Putposttime (
        long lpi4Ret );
    long Getptx ( );
    void Putptx (
        long lpi4Ret );
    long Getpty ( );
    void Putpty (
        long lpi4Ret );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_hwnd (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall put_hwnd (
        /*[in]*/ long lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_message (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall put_message (
        /*[in]*/ long lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_wParam (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall put_wParam (
        /*[in]*/ long lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_lParam (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall put_lParam (
        /*[in]*/ long lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_posttime (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall put_posttime (
        /*[in]*/ long lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_ptx (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall put_ptx (
        /*[in]*/ long lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_pty (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall put_pty (
        /*[in]*/ long lpi4Ret ) = 0;
};

struct __declspec(uuid("000d0705-0000-0000-c000-000000000046"))
IVDocument : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetIndex))
    short Index;
    __declspec(property(get=GetInPlace))
    short InPlace;
    __declspec(property(get=GetMasters))
    IVMastersPtr Masters;
    __declspec(property(get=GetPages))
    IVPagesPtr Pages;
    __declspec(property(get=GetStyles))
    IVStylesPtr Styles;
    __declspec(property(get=GetCodeName))
    _bstr_t CodeName;
    __declspec(property(get=Getold_Saved,put=Putold_Saved))
    short old_Saved;
    __declspec(property(get=GetReadOnly))
    short ReadOnly;
    __declspec(property(get=GetMacrosEnabled))
    VARIANT_BOOL MacrosEnabled;
    __declspec(property(get=GetZoomBehavior,put=PutZoomBehavior))
    enum VisZoomBehavior ZoomBehavior;
    __declspec(property(get=Getold_Version,put=Putold_Version))
    long old_Version;
    __declspec(property(get=GetTitle,put=PutTitle))
    _bstr_t Title;
    __declspec(property(get=GetSubject,put=PutSubject))
    _bstr_t Subject;
    __declspec(property(get=GetCreator,put=PutCreator))
    _bstr_t Creator;
    __declspec(property(get=GetKeywords,put=PutKeywords))
    _bstr_t Keywords;
    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetPath))
    _bstr_t Path;
    __declspec(property(get=GetFullName))
    _bstr_t FullName;
    __declspec(property(get=GetType))
    enum VisDocumentTypes Type;
    __declspec(property(get=GetLanguage,put=PutLanguage))
    long Language;
    __declspec(property(get=GetCustomMenus))
    IVUIObjectPtr CustomMenus;
    __declspec(property(get=GetRemovePersonalInformation,put=PutRemovePersonalInformation))
    VARIANT_BOOL RemovePersonalInformation;
    __declspec(property(get=GetCustomMenusFile,put=PutCustomMenusFile))
    _bstr_t CustomMenusFile;
    __declspec(property(get=GetUndoEnabled,put=PutUndoEnabled))
    VARIANT_BOOL UndoEnabled;
    __declspec(property(get=GetCustomToolbars))
    IVUIObjectPtr CustomToolbars;
    __declspec(property(get=GetSharedWorkspace))
    IDispatchPtr SharedWorkspace;
    __declspec(property(get=GetCustomToolbarsFile,put=PutCustomToolbarsFile))
    _bstr_t CustomToolbarsFile;
    __declspec(property(get=GetSync))
    IDispatchPtr Sync;
    __declspec(property(get=GetFonts))
    IVFontsPtr Fonts;
    __declspec(property(get=GetColors))
    IVColorsPtr Colors;
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;
    __declspec(property(get=GetTemplate))
    _bstr_t Template;
    __declspec(property(get=GetDataRecordsets))
    IVDataRecordsetsPtr DataRecordsets;
    __declspec(property(get=Getold_SavePreviewMode,put=Putold_SavePreviewMode))
    short old_SavePreviewMode;
    __declspec(property(get=GetContainsWorkspaceEx,put=PutContainsWorkspaceEx))
    VARIANT_BOOL ContainsWorkspaceEx;
    __declspec(property(get=GetDefaultSavePath,put=PutDefaultSavePath))
    _bstr_t DefaultSavePath;
    __declspec(property(get=GetLeftMargin,put=PutLeftMargin))
    double LeftMargin[];
    __declspec(property(get=GetRightMargin,put=PutRightMargin))
    double RightMargin[];
    __declspec(property(get=GetTopMargin,put=PutTopMargin))
    double TopMargin[];
    __declspec(property(get=GetBottomMargin,put=PutBottomMargin))
    double BottomMargin[];
    __declspec(property(get=Getold_PrintLandscape,put=Putold_PrintLandscape))
    short old_PrintLandscape;
    __declspec(property(get=Getold_PrintCenteredH,put=Putold_PrintCenteredH))
    short old_PrintCenteredH;
    __declspec(property(get=Getold_PrintCenteredV,put=Putold_PrintCenteredV))
    short old_PrintCenteredV;
    __declspec(property(get=GetPrintScale,put=PutPrintScale))
    double PrintScale;
    __declspec(property(get=Getold_PrintFitOnPages,put=Putold_PrintFitOnPages))
    short old_PrintFitOnPages;
    __declspec(property(get=GetPrintPagesAcross,put=PutPrintPagesAcross))
    short PrintPagesAcross;
    __declspec(property(get=GetPrintPagesDown,put=PutPrintPagesDown))
    short PrintPagesDown;
    __declspec(property(get=GetDefaultStyle,put=PutDefaultStyle))
    _bstr_t DefaultStyle;
    __declspec(property(get=GetDefaultLineStyle,put=PutDefaultLineStyle))
    _bstr_t DefaultLineStyle;
    __declspec(property(get=GetDefaultFillStyle,put=PutDefaultFillStyle))
    _bstr_t DefaultFillStyle;
    __declspec(property(get=GetDefaultTextStyle,put=PutDefaultTextStyle))
    _bstr_t DefaultTextStyle;
    __declspec(property(get=GetPersistsEvents))
    short PersistsEvents;
    __declspec(property(get=GetVBProject))
    IDispatchPtr VBProject;
    __declspec(property(get=GetPaperWidth))
    double PaperWidth[];
    __declspec(property(get=GetPaperHeight))
    double PaperHeight[];
    __declspec(property(get=Getold_PaperSize,put=Putold_PaperSize))
    short old_PaperSize;
    __declspec(property(get=Getold_Mode,put=Putold_Mode))
    short old_Mode;
    __declspec(property(get=GetOLEObjects))
    IVOLEObjectsPtr OLEObjects;
    __declspec(property(get=GetManager,put=PutManager))
    _bstr_t Manager;
    __declspec(property(get=GetCompany,put=PutCompany))
    _bstr_t Company;
    __declspec(property(get=GetCategory,put=PutCategory))
    _bstr_t Category;
    __declspec(property(get=GetHyperlinkBase,put=PutHyperlinkBase))
    _bstr_t HyperlinkBase;
    __declspec(property(get=GetDocumentSheet))
    IVShapePtr DocumentSheet;
    __declspec(property(get=GetContainer))
    IDispatchPtr Container;
    __declspec(property(get=GetClassID))
    _bstr_t ClassID;
    __declspec(property(get=GetProgID))
    _bstr_t ProgID;
    __declspec(property(get=GetMasterShortcuts))
    IVMasterShortcutsPtr MasterShortcuts;
    __declspec(property(get=GetAlternateNames,put=PutAlternateNames))
    _bstr_t AlternateNames;
    __declspec(property(get=GetGestureFormatSheet))
    IVShapePtr GestureFormatSheet;
    __declspec(property(get=GetAutoRecover,put=PutAutoRecover))
    VARIANT_BOOL AutoRecover;
    __declspec(property(get=GetSaved,put=PutSaved))
    VARIANT_BOOL Saved;
    __declspec(property(get=GetVersion,put=PutVersion))
    enum VisDocVersions Version;
    __declspec(property(get=GetSavePreviewMode,put=PutSavePreviewMode))
    enum VisSavePreviewMode SavePreviewMode;
    __declspec(property(get=GetPrintLandscape,put=PutPrintLandscape))
    VARIANT_BOOL PrintLandscape;
    __declspec(property(get=GetPrintCenteredH,put=PutPrintCenteredH))
    VARIANT_BOOL PrintCenteredH;
    __declspec(property(get=GetPrintCenteredV,put=PutPrintCenteredV))
    VARIANT_BOOL PrintCenteredV;
    __declspec(property(get=GetPrintFitOnPages,put=PutPrintFitOnPages))
    VARIANT_BOOL PrintFitOnPages;
    __declspec(property(get=GetPaperSize,put=PutPaperSize))
    enum VisPaperSizes PaperSize;
    __declspec(property(get=GetMode,put=PutMode))
    enum VisDocModeArgs Mode;
    __declspec(property(get=GetSnapEnabled,put=PutSnapEnabled))
    VARIANT_BOOL SnapEnabled;
    __declspec(property(get=GetSnapSettings,put=PutSnapSettings))
    enum VisSnapSettings SnapSettings;
    __declspec(property(get=GetSnapExtensions,put=PutSnapExtensions))
    enum VisSnapExtensions SnapExtensions;
    __declspec(property(get=GetGlueEnabled,put=PutGlueEnabled))
    VARIANT_BOOL GlueEnabled;
    __declspec(property(get=GetGlueSettings,put=PutGlueSettings))
    enum VisGlueSettings GlueSettings;
    __declspec(property(get=GetDynamicGridEnabled,put=PutDynamicGridEnabled))
    VARIANT_BOOL DynamicGridEnabled;
    __declspec(property(get=GetDefaultGuideStyle,put=PutDefaultGuideStyle))
    _bstr_t DefaultGuideStyle;
    __declspec(property(get=GetProtection,put=PutProtection))
    enum VisProtection Protection[];
    __declspec(property(get=GetPrinter,put=PutPrinter))
    _bstr_t Printer;
    __declspec(property(get=GetPrintCopies,put=PutPrintCopies))
    long PrintCopies;
    __declspec(property(get=GetHeaderLeft,put=PutHeaderLeft))
    _bstr_t HeaderLeft;
    __declspec(property(get=GetHeaderCenter,put=PutHeaderCenter))
    _bstr_t HeaderCenter;
    __declspec(property(get=GetHeaderRight,put=PutHeaderRight))
    _bstr_t HeaderRight;
    __declspec(property(get=GetHeaderMargin,put=PutHeaderMargin))
    double HeaderMargin[];
    __declspec(property(get=GetFooterLeft,put=PutFooterLeft))
    _bstr_t FooterLeft;
    __declspec(property(get=GetFooterCenter,put=PutFooterCenter))
    _bstr_t FooterCenter;
    __declspec(property(get=GetFooterRight,put=PutFooterRight))
    _bstr_t FooterRight;
    __declspec(property(get=GetFooterMargin,put=PutFooterMargin))
    double FooterMargin[];
    __declspec(property(get=GetHeaderFooterFont,put=PutRefHeaderFooterFont))
    IFontDisp * HeaderFooterFont;
    __declspec(property(get=GetHeaderFooterColor,put=PutHeaderFooterColor))
    OLE_COLOR HeaderFooterColor;
    __declspec(property(put=PutPassword))
    _bstr_t Password[];
    __declspec(property(get=GetPreviewPicture,put=PutRefPreviewPicture))
    IPictureDisp * PreviewPicture;
    __declspec(property(get=GetBuildNumberCreated))
    long BuildNumberCreated;
    __declspec(property(get=GetBuildNumberEdited))
    long BuildNumberEdited;
    __declspec(property(get=GetTimeCreated))
    DATE TimeCreated;
    __declspec(property(get=GetTime))
    DATE Time;
    __declspec(property(get=GetTimeEdited))
    DATE TimeEdited;
    __declspec(property(get=GetTimePrinted))
    DATE TimePrinted;
    __declspec(property(get=GetTimeSaved))
    DATE TimeSaved;
    __declspec(property(get=GetContainsWorkspace))
    VARIANT_BOOL ContainsWorkspace;
    __declspec(property(get=GetEmailRoutingData))
    SAFEARRAY * EmailRoutingData;
    __declspec(property(get=GetVBProjectData))
    SAFEARRAY * VBProjectData;
    __declspec(property(get=GetSolutionXMLElementCount))
    long SolutionXMLElementCount;
    __declspec(property(get=GetSolutionXMLElementName))
    _bstr_t SolutionXMLElementName[];
    __declspec(property(get=GetSolutionXMLElementExists))
    VARIANT_BOOL SolutionXMLElementExists[];
    __declspec(property(get=GetSolutionXMLElement,put=PutSolutionXMLElement))
    _bstr_t SolutionXMLElement[];
    __declspec(property(get=GetFullBuildNumberCreated))
    long FullBuildNumberCreated;
    __declspec(property(get=GetFullBuildNumberEdited))
    long FullBuildNumberEdited;
    __declspec(property(get=GetID))
    long ID;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    short GetStat ( );
    short GetObjectType ( );
    short GetInPlace ( );
    IVMastersPtr GetMasters ( );
    IVPagesPtr GetPages ( );
    IVStylesPtr GetStyles ( );
    _bstr_t GetName ( );
    _bstr_t GetPath ( );
    _bstr_t GetFullName ( );
    IVMasterPtr Drop (
        IUnknown * ObjectToDrop,
        short xPos,
        short yPos );
    short GetIndex ( );
    short Getold_Saved ( );
    void Putold_Saved (
        short lpi2Ret );
    short GetReadOnly ( );
    short Save ( );
    short SaveAs (
        _bstr_t FileName );
    long Getold_Version ( );
    void Putold_Version (
        long lpi4Ret );
    _bstr_t GetTitle ( );
    void PutTitle (
        _bstr_t lpbstrRet );
    _bstr_t GetSubject ( );
    void PutSubject (
        _bstr_t lpbstrRet );
    _bstr_t GetCreator ( );
    void PutCreator (
        _bstr_t lpbstrRet );
    _bstr_t GetKeywords ( );
    void PutKeywords (
        _bstr_t lpbstrRet );
    _bstr_t GetDescription ( );
    void PutDescription (
        _bstr_t lpbstrRet );
    HRESULT Print ( );
    HRESULT Close ( );
    IVUIObjectPtr GetCustomMenus ( );
    HRESULT SetCustomMenus (
        struct IVUIObject * MenusObject );
    _bstr_t GetCustomMenusFile ( );
    void PutCustomMenusFile (
        _bstr_t lpbstrRet );
    HRESULT ClearCustomMenus ( );
    IVUIObjectPtr GetCustomToolbars ( );
    HRESULT SetCustomToolbars (
        struct IVUIObject * ToolbarsObject );
    _bstr_t GetCustomToolbarsFile ( );
    void PutCustomToolbarsFile (
        _bstr_t lpbstrRet );
    HRESULT ClearCustomToolbars ( );
    IVFontsPtr GetFonts ( );
    IVColorsPtr GetColors ( );
    IVEventListPtr GetEventList ( );
    _bstr_t GetTemplate ( );
    HRESULT SaveAsEx (
        _bstr_t FileName,
        short SaveFlags );
    short Getold_SavePreviewMode ( );
    void Putold_SavePreviewMode (
        short lpi2Ret );
    HRESULT GetIcon (
        short ID,
        _bstr_t FileName );
    HRESULT SetIcon (
        short ID,
        short Index,
        _bstr_t FileName );
    double GetLeftMargin (
        const _variant_t & UnitsNameOrCode = vtMissing );
    void PutLeftMargin (
        const _variant_t & UnitsNameOrCode,
        double lpr8Ret );
    double GetRightMargin (
        const _variant_t & UnitsNameOrCode = vtMissing );
    void PutRightMargin (
        const _variant_t & UnitsNameOrCode,
        double lpr8Ret );
    double GetTopMargin (
        const _variant_t & UnitsNameOrCode = vtMissing );
    void PutTopMargin (
        const _variant_t & UnitsNameOrCode,
        double lpr8Ret );
    double GetBottomMargin (
        const _variant_t & UnitsNameOrCode = vtMissing );
    void PutBottomMargin (
        const _variant_t & UnitsNameOrCode,
        double lpr8Ret );
    short Getold_PrintLandscape ( );
    void Putold_PrintLandscape (
        short lpi2Ret );
    short Getold_PrintCenteredH ( );
    void Putold_PrintCenteredH (
        short lpi2Ret );
    short Getold_PrintCenteredV ( );
    void Putold_PrintCenteredV (
        short lpi2Ret );
    double GetPrintScale ( );
    void PutPrintScale (
        double lpr8Ret );
    short Getold_PrintFitOnPages ( );
    void Putold_PrintFitOnPages (
        short lpi2Ret );
    short GetPrintPagesAcross ( );
    void PutPrintPagesAcross (
        short lpi2Ret );
    short GetPrintPagesDown ( );
    void PutPrintPagesDown (
        short lpi2Ret );
    _bstr_t GetDefaultStyle ( );
    void PutDefaultStyle (
        _bstr_t lpLocaleSpecificName );
    _bstr_t GetDefaultLineStyle ( );
    void PutDefaultLineStyle (
        _bstr_t lpLocaleSpecificName );
    _bstr_t GetDefaultFillStyle ( );
    void PutDefaultFillStyle (
        _bstr_t lpLocaleSpecificName );
    _bstr_t GetDefaultTextStyle ( );
    void PutDefaultTextStyle (
        _bstr_t lpLocaleSpecificName );
    short GetPersistsEvents ( );
    IVWindowPtr OpenStencilWindow ( );
    HRESULT ParseLine (
        _bstr_t Line );
    HRESULT ExecuteLine (
        _bstr_t Line );
    IDispatchPtr GetVBProject ( );
    double GetPaperWidth (
        const _variant_t & UnitsNameOrCode );
    double GetPaperHeight (
        const _variant_t & UnitsNameOrCode );
    short Getold_PaperSize ( );
    void Putold_PaperSize (
        short lpi2Ret );
    HRESULT FollowHyperlink45 (
        _bstr_t Target,
        _bstr_t Location );
    _bstr_t GetCodeName ( );
    short Getold_Mode ( );
    void Putold_Mode (
        short lpi2Ret );
    IVOLEObjectsPtr GetOLEObjects ( );
    HRESULT FollowHyperlink (
        _bstr_t Address,
        _bstr_t SubAddress,
        const _variant_t & ExtraInfo = vtMissing,
        const _variant_t & Frame = vtMissing,
        const _variant_t & NewWindow = vtMissing,
        const _variant_t & res1 = vtMissing,
        const _variant_t & res2 = vtMissing,
        const _variant_t & res3 = vtMissing );
    _bstr_t GetManager ( );
    void PutManager (
        _bstr_t lpbstrRet );
    _bstr_t GetCompany ( );
    void PutCompany (
        _bstr_t lpbstrRet );
    _bstr_t GetCategory ( );
    void PutCategory (
        _bstr_t lpbstrRet );
    _bstr_t GetHyperlinkBase ( );
    void PutHyperlinkBase (
        _bstr_t lpbstrRet );
    IVShapePtr GetDocumentSheet ( );
    IDispatchPtr GetContainer ( );
    _bstr_t GetClassID ( );
    _bstr_t GetProgID ( );
    IVMasterShortcutsPtr GetMasterShortcuts ( );
    _bstr_t GetAlternateNames ( );
    void PutAlternateNames (
        _bstr_t lpbstrRet );
    IVShapePtr GetGestureFormatSheet ( );
    HRESULT ClearGestureFormatSheet ( );
    VARIANT_BOOL GetAutoRecover ( );
    void PutAutoRecover (
        VARIANT_BOOL pbRet );
    VARIANT_BOOL GetSaved ( );
    void PutSaved (
        VARIANT_BOOL pbRet );
    enum VisDocVersions GetVersion ( );
    void PutVersion (
        enum VisDocVersions lpi4Ret );
    enum VisSavePreviewMode GetSavePreviewMode ( );
    void PutSavePreviewMode (
        enum VisSavePreviewMode lpi4Ret );
    VARIANT_BOOL GetPrintLandscape ( );
    void PutPrintLandscape (
        VARIANT_BOOL pbRet );
    VARIANT_BOOL GetPrintCenteredH ( );
    void PutPrintCenteredH (
        VARIANT_BOOL pbRet );
    VARIANT_BOOL GetPrintCenteredV ( );
    void PutPrintCenteredV (
        VARIANT_BOOL pbRet );
    VARIANT_BOOL GetPrintFitOnPages ( );
    void PutPrintFitOnPages (
        VARIANT_BOOL pbRet );
    enum VisPaperSizes GetPaperSize ( );
    void PutPaperSize (
        enum VisPaperSizes lpi4Ret );
    enum VisDocModeArgs GetMode ( );
    void PutMode (
        enum VisDocModeArgs lpi4Ret );
    VARIANT_BOOL GetSnapEnabled ( );
    void PutSnapEnabled (
        VARIANT_BOOL pbRet );
    enum VisSnapSettings GetSnapSettings ( );
    void PutSnapSettings (
        enum VisSnapSettings pnRet );
    enum VisSnapExtensions GetSnapExtensions ( );
    void PutSnapExtensions (
        enum VisSnapExtensions pnRet );
    SAFEARRAY * GetSnapAngles ( );
    void PutSnapAngles (
        SAFEARRAY * * dAngles );
    VARIANT_BOOL GetGlueEnabled ( );
    void PutGlueEnabled (
        VARIANT_BOOL pbRet );
    enum VisGlueSettings GetGlueSettings ( );
    void PutGlueSettings (
        enum VisGlueSettings pnRet );
    VARIANT_BOOL GetDynamicGridEnabled ( );
    void PutDynamicGridEnabled (
        VARIANT_BOOL pbRet );
    _bstr_t GetDefaultGuideStyle ( );
    void PutDefaultGuideStyle (
        _bstr_t lpLocaleSpecificName );
    enum VisProtection GetProtection (
        const _variant_t & bstrPassword = vtMissing );
    void PutProtection (
        const _variant_t & bstrPassword,
        enum VisProtection pnRet );
    _bstr_t GetPrinter ( );
    void PutPrinter (
        _bstr_t pbstrRet );
    long GetPrintCopies ( );
    void PutPrintCopies (
        long pnRet );
    _bstr_t GetHeaderLeft ( );
    void PutHeaderLeft (
        _bstr_t pbstrRet );
    _bstr_t GetHeaderCenter ( );
    void PutHeaderCenter (
        _bstr_t pbstrRet );
    _bstr_t GetHeaderRight ( );
    void PutHeaderRight (
        _bstr_t pbstrRet );
    double GetHeaderMargin (
        const _variant_t & UnitsNameOrCode = vtMissing );
    void PutHeaderMargin (
        const _variant_t & UnitsNameOrCode,
        double pdRet );
    _bstr_t GetFooterLeft ( );
    void PutFooterLeft (
        _bstr_t pbstrRet );
    _bstr_t GetFooterCenter ( );
    void PutFooterCenter (
        _bstr_t pbstrRet );
    _bstr_t GetFooterRight ( );
    void PutFooterRight (
        _bstr_t pbstrRet );
    double GetFooterMargin (
        const _variant_t & UnitsNameOrCode = vtMissing );
    void PutFooterMargin (
        const _variant_t & UnitsNameOrCode,
        double pdRet );
    IFontDisp * GetHeaderFooterFont ( );
    void PutRefHeaderFooterFont (
        IFontDisp * ppFontDisp );
    OLE_COLOR GetHeaderFooterColor ( );
    void PutHeaderFooterColor (
        OLE_COLOR pColor );
    void PutPassword (
        const _variant_t & bstrExistingPassword,
        _bstr_t _arg2 );
    IPictureDisp * GetPreviewPicture ( );
    void PutRefPreviewPicture (
        IPictureDisp * ppPictureDisp );
    HRESULT Clean (
        const _variant_t & nTargets = vtMissing,
        const _variant_t & nActions = vtMissing,
        const _variant_t & nAlerts = vtMissing,
        const _variant_t & nFixes = vtMissing,
        const _variant_t & bStopOnError = vtMissing,
        const _variant_t & bLogFileName = vtMissing,
        const _variant_t & nReserved = vtMissing );
    long GetBuildNumberCreated ( );
    long GetBuildNumberEdited ( );
    DATE GetTimeCreated ( );
    DATE GetTime ( );
    DATE GetTimeEdited ( );
    DATE GetTimePrinted ( );
    DATE GetTimeSaved ( );
    HRESULT CopyPreviewPicture (
        struct IVDocument * pSourceDoc );
    VARIANT_BOOL GetContainsWorkspace ( );
    SAFEARRAY * GetEmailRoutingData ( );
    SAFEARRAY * GetVBProjectData ( );
    long GetSolutionXMLElementCount ( );
    _bstr_t GetSolutionXMLElementName (
        long Index );
    VARIANT_BOOL GetSolutionXMLElementExists (
        _bstr_t ElementName );
    _bstr_t GetSolutionXMLElement (
        _bstr_t ElementName );
    void PutSolutionXMLElement (
        _bstr_t ElementName,
        _bstr_t pWellFormedXML );
    HRESULT DeleteSolutionXMLElement (
        _bstr_t ElementName );
    long GetFullBuildNumberCreated ( );
    long GetFullBuildNumberEdited ( );
    long GetID ( );
    VARIANT_BOOL GetMacrosEnabled ( );
    enum VisZoomBehavior GetZoomBehavior ( );
    void PutZoomBehavior (
        enum VisZoomBehavior pnZoomBehavior );
    VARIANT_BOOL CanCheckIn ( );
    HRESULT CheckIn (
        VARIANT_BOOL SaveChanges,
        VARIANT * Comments,
        VARIANT_BOOL MakePublic );
    enum VisDocumentTypes GetType ( );
    long GetLanguage ( );
    void PutLanguage (
        long lpLangID );
    VARIANT_BOOL GetRemovePersonalInformation ( );
    void PutRemovePersonalInformation (
        VARIANT_BOOL pbRet );
    HRESULT PrintOut (
        enum VisPrintOutRange PrintRange,
        long FromPage,
        long ToPage,
        VARIANT_BOOL ScaleCurrentViewToPaper,
        _bstr_t PrinterName,
        VARIANT_BOOL PrintToFile,
        _bstr_t OutputFileName,
        long Copies,
        VARIANT_BOOL Collate,
        VARIANT_BOOL ColorAsBlack );
    long BeginUndoScope (
        _bstr_t bstrUndoScopeName );
    HRESULT EndUndoScope (
        long nScopeID,
        VARIANT_BOOL bCommit );
    HRESULT AddUndoUnit (
        IUnknown * pUndoUnit );
    HRESULT PurgeUndo ( );
    VARIANT_BOOL GetUndoEnabled ( );
    void PutUndoEnabled (
        VARIANT_BOOL pbRet );
    HRESULT RenameCurrentScope (
        _bstr_t bstrScopeName );
    IDispatchPtr GetSharedWorkspace ( );
    IDispatchPtr GetSync ( );
    HRESULT RemoveHiddenInformation (
        long RemoveHiddenInfoItems );
    IVDataRecordsetsPtr GetDataRecordsets ( );
    HRESULT GetThemeNames (
        enum VisThemeTypes eType,
        SAFEARRAY * * NameArray );
    HRESULT GetThemeNamesU (
        enum VisThemeTypes eType,
        SAFEARRAY * * NameArray );
    VARIANT_BOOL CanUndoCheckOut ( );
    HRESULT UndoCheckOut ( );
    VARIANT_BOOL GetContainsWorkspaceEx ( );
    void PutContainsWorkspaceEx (
        VARIANT_BOOL TrueOrFalse );
    HRESULT ExportAsFixedFormat (
        enum VisFixedFormatTypes FixedFormat,
        _bstr_t OutputFileName,
        enum VisDocExIntent Intent,
        enum VisPrintOutRange PrintRange,
        long FromPage,
        long ToPage,
        VARIANT_BOOL ColorAsBlack,
        VARIANT_BOOL IncludeBackground,
        VARIANT_BOOL IncludeDocumentProperties,
        VARIANT_BOOL IncludeStructureTags,
        VARIANT_BOOL UseISO19005_1,
        const _variant_t & FixedFormatExtClass = vtMissing );
    _bstr_t GetDefaultSavePath ( );
    void PutDefaultSavePath (
        _bstr_t SaveLocation );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_InPlace (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Masters (
        /*[out,retval]*/ struct IVMasters * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Pages (
        /*[out,retval]*/ struct IVPages * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Styles (
        /*[out,retval]*/ struct IVStyles * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_FullName (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall raw_Drop (
        /*[in]*/ IUnknown * ObjectToDrop,
        /*[in]*/ short xPos,
        /*[in]*/ short yPos,
        /*[out,retval]*/ struct IVMaster * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_old_Saved (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_old_Saved (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ReadOnly (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_Save (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_SaveAs (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_old_Version (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall put_old_Version (
        /*[in]*/ long lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_Title (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Title (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Creator (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_Keywords (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Keywords (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall raw_Print ( ) = 0;
      virtual HRESULT __stdcall raw_Close ( ) = 0;
      virtual HRESULT __stdcall get_CustomMenus (
        /*[out,retval]*/ struct IVUIObject * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_SetCustomMenus (
        /*[in]*/ struct IVUIObject * MenusObject ) = 0;
      virtual HRESULT __stdcall get_CustomMenusFile (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_CustomMenusFile (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall raw_ClearCustomMenus ( ) = 0;
      virtual HRESULT __stdcall get_CustomToolbars (
        /*[out,retval]*/ struct IVUIObject * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_SetCustomToolbars (
        /*[in]*/ struct IVUIObject * ToolbarsObject ) = 0;
      virtual HRESULT __stdcall get_CustomToolbarsFile (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_CustomToolbarsFile (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall raw_ClearCustomToolbars ( ) = 0;
      virtual HRESULT __stdcall get_Fonts (
        /*[out,retval]*/ struct IVFonts * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Colors (
        /*[out,retval]*/ struct IVColors * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_EventList (
        /*[out,retval]*/ struct IVEventList * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Template (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall raw_SaveAsEx (
        /*[in]*/ BSTR FileName,
        /*[in]*/ short SaveFlags ) = 0;
      virtual HRESULT __stdcall get_old_SavePreviewMode (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_old_SavePreviewMode (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_GetIcon (
        /*[in]*/ short ID,
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_SetIcon (
        /*[in]*/ short ID,
        /*[in]*/ short Index,
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall get_LeftMargin (
        /*[in]*/ VARIANT UnitsNameOrCode,
        /*[out,retval]*/ double * lpr8Ret ) = 0;
      virtual HRESULT __stdcall put_LeftMargin (
        /*[in]*/ VARIANT UnitsNameOrCode,
        /*[in]*/ double lpr8Ret ) = 0;
      virtual HRESULT __stdcall get_RightMargin (
        /*[in]*/ VARIANT UnitsNameOrCode,
        /*[out,retval]*/ double * lpr8Ret ) = 0;
      virtual HRESULT __stdcall put_RightMargin (
        /*[in]*/ VARIANT UnitsNameOrCode,
        /*[in]*/ double lpr8Ret ) = 0;
      virtual HRESULT __stdcall get_TopMargin (
        /*[in]*/ VARIANT UnitsNameOrCode,
        /*[out,retval]*/ double * lpr8Ret ) = 0;
      virtual HRESULT __stdcall put_TopMargin (
        /*[in]*/ VARIANT UnitsNameOrCode,
        /*[in]*/ double lpr8Ret ) = 0;
      virtual HRESULT __stdcall get_BottomMargin (
        /*[in]*/ VARIANT UnitsNameOrCode,
        /*[out,retval]*/ double * lpr8Ret ) = 0;
      virtual HRESULT __stdcall put_BottomMargin (
        /*[in]*/ VARIANT UnitsNameOrCode,
        /*[in]*/ double lpr8Ret ) = 0;
      virtual HRESULT __stdcall get_old_PrintLandscape (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_old_PrintLandscape (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_old_PrintCenteredH (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_old_PrintCenteredH (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_old_PrintCenteredV (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_old_PrintCenteredV (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_PrintScale (
        /*[out,retval]*/ double * lpr8Ret ) = 0;
      virtual HRESULT __stdcall put_PrintScale (
        /*[in]*/ double lpr8Ret ) = 0;
      virtual HRESULT __stdcall get_old_PrintFitOnPages (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_old_PrintFitOnPages (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_PrintPagesAcross (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_PrintPagesAcross (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_PrintPagesDown (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_PrintPagesDown (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_DefaultStyle (
        /*[out,retval]*/ BSTR * lpLocaleSpecificName ) = 0;
      virtual HRESULT __stdcall put_DefaultStyle (
        /*[in]*/ BSTR lpLocaleSpecificName ) = 0;
      virtual HRESULT __stdcall get_DefaultLineStyle (
        /*[out,retval]*/ BSTR * lpLocaleSpecificName ) = 0;
      virtual HRESULT __stdcall put_DefaultLineStyle (
        /*[in]*/ BSTR lpLocaleSpecificName ) = 0;
      virtual HRESULT __stdcall get_DefaultFillStyle (
        /*[out,retval]*/ BSTR * lpLocaleSpecificName ) = 0;
      virtual HRESULT __stdcall put_DefaultFillStyle (
        /*[in]*/ BSTR lpLocaleSpecificName ) = 0;
      virtual HRESULT __stdcall get_DefaultTextStyle (
        /*[out,retval]*/ BSTR * lpLocaleSpecificName ) = 0;
      virtual HRESULT __stdcall put_DefaultTextStyle (
        /*[in]*/ BSTR lpLocaleSpecificName ) = 0;
      virtual HRESULT __stdcall get_PersistsEvents (
        /*[out,retval]*/ short * lpboolRet ) = 0;
      virtual HRESULT __stdcall raw_OpenStencilWindow (
        /*[out,retval]*/ struct IVWindow * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_ParseLine (
        /*[in]*/ BSTR Line ) = 0;
      virtual HRESULT __stdcall raw_ExecuteLine (
        /*[in]*/ BSTR Line ) = 0;
      virtual HRESULT __stdcall get_VBProject (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PaperWidth (
        /*[in]*/ VARIANT UnitsNameOrCode,
        /*[out,retval]*/ double * lpr8Ret ) = 0;
      virtual HRESULT __stdcall get_PaperHeight (
        /*[in]*/ VARIANT UnitsNameOrCode,
        /*[out,retval]*/ double * lpr8Ret ) = 0;
      virtual HRESULT __stdcall get_old_PaperSize (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_old_PaperSize (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_FollowHyperlink45 (
        /*[in]*/ BSTR Target,
        /*[in]*/ BSTR Location ) = 0;
      virtual HRESULT __stdcall get_CodeName (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_old_Mode (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_old_Mode (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_OLEObjects (
        /*[out,retval]*/ struct IVOLEObjects * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_FollowHyperlink (
        /*[in]*/ BSTR Address,
        /*[in]*/ BSTR SubAddress,
        /*[in]*/ VARIANT ExtraInfo = vtMissing,
        /*[in]*/ VARIANT Frame = vtMissing,
        /*[in]*/ VARIANT NewWindow = vtMissing,
        /*[in]*/ VARIANT res1 = vtMissing,
        /*[in]*/ VARIANT res2 = vtMissing,
        /*[in]*/ VARIANT res3 = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Manager (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Manager (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_Company (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Company (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_Category (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Category (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_HyperlinkBase (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_HyperlinkBase (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_DocumentSheet (
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Container (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ClassID (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_ProgID (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_MasterShortcuts (
        /*[out,retval]*/ struct IVMasterShortcuts * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_AlternateNames (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_AlternateNames (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_GestureFormatSheet (
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_ClearGestureFormatSheet ( ) = 0;
      virtual HRESULT __stdcall get_AutoRecover (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall put_AutoRecover (
        /*[in]*/ VARIANT_BOOL pbRet ) = 0;
      virtual HRESULT __stdcall get_Saved (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall put_Saved (
        /*[in]*/ VARIANT_BOOL pbRet ) = 0;
      virtual HRESULT __stdcall get_Version (
        /*[out,retval]*/ enum VisDocVersions * lpi4Ret ) = 0;
      virtual HRESULT __stdcall put_Version (
        /*[in]*/ enum VisDocVersions lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_SavePreviewMode (
        /*[out,retval]*/ enum VisSavePreviewMode * lpi4Ret ) = 0;
      virtual HRESULT __stdcall put_SavePreviewMode (
        /*[in]*/ enum VisSavePreviewMode lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_PrintLandscape (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall put_PrintLandscape (
        /*[in]*/ VARIANT_BOOL pbRet ) = 0;
      virtual HRESULT __stdcall get_PrintCenteredH (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall put_PrintCenteredH (
        /*[in]*/ VARIANT_BOOL pbRet ) = 0;
      virtual HRESULT __stdcall get_PrintCenteredV (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall put_PrintCenteredV (
        /*[in]*/ VARIANT_BOOL pbRet ) = 0;
      virtual HRESULT __stdcall get_PrintFitOnPages (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall put_PrintFitOnPages (
        /*[in]*/ VARIANT_BOOL pbRet ) = 0;
      virtual HRESULT __stdcall get_PaperSize (
        /*[out,retval]*/ enum VisPaperSizes * lpi4Ret ) = 0;
      virtual HRESULT __stdcall put_PaperSize (
        /*[in]*/ enum VisPaperSizes lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_Mode (
        /*[out,retval]*/ enum VisDocModeArgs * lpi4Ret ) = 0;
      virtual HRESULT __stdcall put_Mode (
        /*[in]*/ enum VisDocModeArgs lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_SnapEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall put_SnapEnabled (
        /*[in]*/ VARIANT_BOOL pbRet ) = 0;
      virtual HRESULT __stdcall get_SnapSettings (
        /*[out,retval]*/ enum VisSnapSettings * pnRet ) = 0;
      virtual HRESULT __stdcall put_SnapSettings (
        /*[in]*/ enum VisSnapSettings pnRet ) = 0;
      virtual HRESULT __stdcall get_SnapExtensions (
        /*[out,retval]*/ enum VisSnapExtensions * pnRet ) = 0;
      virtual HRESULT __stdcall put_SnapExtensions (
        /*[in]*/ enum VisSnapExtensions pnRet ) = 0;
      virtual HRESULT __stdcall get_SnapAngles (
        /*[out,retval]*/ SAFEARRAY * * dAngles ) = 0;
      virtual HRESULT __stdcall put_SnapAngles (
        /*[in]*/ SAFEARRAY * * dAngles ) = 0;
      virtual HRESULT __stdcall get_GlueEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall put_GlueEnabled (
        /*[in]*/ VARIANT_BOOL pbRet ) = 0;
      virtual HRESULT __stdcall get_GlueSettings (
        /*[out,retval]*/ enum VisGlueSettings * pnRet ) = 0;
      virtual HRESULT __stdcall put_GlueSettings (
        /*[in]*/ enum VisGlueSettings pnRet ) = 0;
      virtual HRESULT __stdcall get_DynamicGridEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall put_DynamicGridEnabled (
        /*[in]*/ VARIANT_BOOL pbRet ) = 0;
      virtual HRESULT __stdcall get_DefaultGuideStyle (
        /*[out,retval]*/ BSTR * lpLocaleSpecificName ) = 0;
      virtual HRESULT __stdcall put_DefaultGuideStyle (
        /*[in]*/ BSTR lpLocaleSpecificName ) = 0;
      virtual HRESULT __stdcall get_Protection (
        /*[in]*/ VARIANT bstrPassword,
        /*[out,retval]*/ enum VisProtection * pnRet ) = 0;
      virtual HRESULT __stdcall put_Protection (
        /*[in]*/ VARIANT bstrPassword,
        /*[in]*/ enum VisProtection pnRet ) = 0;
      virtual HRESULT __stdcall get_Printer (
        /*[out,retval]*/ BSTR * pbstrRet ) = 0;
      virtual HRESULT __stdcall put_Printer (
        /*[in]*/ BSTR pbstrRet ) = 0;
      virtual HRESULT __stdcall get_PrintCopies (
        /*[out,retval]*/ long * pnRet ) = 0;
      virtual HRESULT __stdcall put_PrintCopies (
        /*[in]*/ long pnRet ) = 0;
      virtual HRESULT __stdcall get_HeaderLeft (
        /*[out,retval]*/ BSTR * pbstrRet ) = 0;
      virtual HRESULT __stdcall put_HeaderLeft (
        /*[in]*/ BSTR pbstrRet ) = 0;
      virtual HRESULT __stdcall get_HeaderCenter (
        /*[out,retval]*/ BSTR * pbstrRet ) = 0;
      virtual HRESULT __stdcall put_HeaderCenter (
        /*[in]*/ BSTR pbstrRet ) = 0;
      virtual HRESULT __stdcall get_HeaderRight (
        /*[out,retval]*/ BSTR * pbstrRet ) = 0;
      virtual HRESULT __stdcall put_HeaderRight (
        /*[in]*/ BSTR pbstrRet ) = 0;
      virtual HRESULT __stdcall get_HeaderMargin (
        /*[in]*/ VARIANT UnitsNameOrCode,
        /*[out,retval]*/ double * pdRet ) = 0;
      virtual HRESULT __stdcall put_HeaderMargin (
        /*[in]*/ VARIANT UnitsNameOrCode,
        /*[in]*/ double pdRet ) = 0;
      virtual HRESULT __stdcall get_FooterLeft (
        /*[out,retval]*/ BSTR * pbstrRet ) = 0;
      virtual HRESULT __stdcall put_FooterLeft (
        /*[in]*/ BSTR pbstrRet ) = 0;
      virtual HRESULT __stdcall get_FooterCenter (
        /*[out,retval]*/ BSTR * pbstrRet ) = 0;
      virtual HRESULT __stdcall put_FooterCenter (
        /*[in]*/ BSTR pbstrRet ) = 0;
      virtual HRESULT __stdcall get_FooterRight (
        /*[out,retval]*/ BSTR * pbstrRet ) = 0;
      virtual HRESULT __stdcall put_FooterRight (
        /*[in]*/ BSTR pbstrRet ) = 0;
      virtual HRESULT __stdcall get_FooterMargin (
        /*[in]*/ VARIANT UnitsNameOrCode,
        /*[out,retval]*/ double * pdRet ) = 0;
      virtual HRESULT __stdcall put_FooterMargin (
        /*[in]*/ VARIANT UnitsNameOrCode,
        /*[in]*/ double pdRet ) = 0;
      virtual HRESULT __stdcall get_HeaderFooterFont (
        /*[out,retval]*/ IFontDisp * * ppFontDisp ) = 0;
      virtual HRESULT __stdcall putref_HeaderFooterFont (
        /*[in]*/ IFontDisp * ppFontDisp ) = 0;
      virtual HRESULT __stdcall get_HeaderFooterColor (
        /*[out,retval]*/ OLE_COLOR * pColor ) = 0;
      virtual HRESULT __stdcall put_HeaderFooterColor (
        /*[in]*/ OLE_COLOR pColor ) = 0;
      virtual HRESULT __stdcall put_Password (
        /*[in]*/ VARIANT bstrExistingPassword,
        /*[in]*/ BSTR _arg2 ) = 0;
      virtual HRESULT __stdcall get_PreviewPicture (
        /*[out,retval]*/ IPictureDisp * * ppPictureDisp ) = 0;
      virtual HRESULT __stdcall putref_PreviewPicture (
        /*[in]*/ IPictureDisp * ppPictureDisp ) = 0;
      virtual HRESULT __stdcall raw_Clean (
        /*[in]*/ VARIANT nTargets = vtMissing,
        /*[in]*/ VARIANT nActions = vtMissing,
        /*[in]*/ VARIANT nAlerts = vtMissing,
        /*[in]*/ VARIANT nFixes = vtMissing,
        /*[in]*/ VARIANT bStopOnError = vtMissing,
        /*[in]*/ VARIANT bLogFileName = vtMissing,
        /*[in]*/ VARIANT nReserved = vtMissing ) = 0;
      virtual HRESULT __stdcall get_BuildNumberCreated (
        /*[out,retval]*/ long * pnBuildNumCreated ) = 0;
      virtual HRESULT __stdcall get_BuildNumberEdited (
        /*[out,retval]*/ long * pnBuildNumEdited ) = 0;
      virtual HRESULT __stdcall get_TimeCreated (
        /*[out,retval]*/ DATE * pdTimeCreated ) = 0;
      virtual HRESULT __stdcall get_Time (
        /*[out,retval]*/ DATE * pdTimeCurrent ) = 0;
      virtual HRESULT __stdcall get_TimeEdited (
        /*[out,retval]*/ DATE * pdTimeEdited ) = 0;
      virtual HRESULT __stdcall get_TimePrinted (
        /*[out,retval]*/ DATE * pdTimePrinted ) = 0;
      virtual HRESULT __stdcall get_TimeSaved (
        /*[out,retval]*/ DATE * pdTimeSaved ) = 0;
      virtual HRESULT __stdcall raw_CopyPreviewPicture (
        /*[in]*/ struct IVDocument * pSourceDoc ) = 0;
      virtual HRESULT __stdcall get_ContainsWorkspace (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall get_EmailRoutingData (
        /*[out,retval]*/ SAFEARRAY * * pData ) = 0;
      virtual HRESULT __stdcall get_VBProjectData (
        /*[out,retval]*/ SAFEARRAY * * pData ) = 0;
      virtual HRESULT __stdcall get_SolutionXMLElementCount (
        /*[out,retval]*/ long * pElementCount ) = 0;
      virtual HRESULT __stdcall get_SolutionXMLElementName (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * pElementName ) = 0;
      virtual HRESULT __stdcall get_SolutionXMLElementExists (
        /*[in]*/ BSTR ElementName,
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall get_SolutionXMLElement (
        /*[in]*/ BSTR ElementName,
        /*[out,retval]*/ BSTR * pWellFormedXML ) = 0;
      virtual HRESULT __stdcall put_SolutionXMLElement (
        /*[in]*/ BSTR ElementName,
        /*[in]*/ BSTR pWellFormedXML ) = 0;
      virtual HRESULT __stdcall raw_DeleteSolutionXMLElement (
        /*[in]*/ BSTR ElementName ) = 0;
      virtual HRESULT __stdcall get_FullBuildNumberCreated (
        /*[out,retval]*/ long * pnFullBuildNumCreated ) = 0;
      virtual HRESULT __stdcall get_FullBuildNumberEdited (
        /*[out,retval]*/ long * pnFullBuildNumEdited ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_MacrosEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall get_ZoomBehavior (
        /*[out,retval]*/ enum VisZoomBehavior * pnZoomBehavior ) = 0;
      virtual HRESULT __stdcall put_ZoomBehavior (
        /*[in]*/ enum VisZoomBehavior pnZoomBehavior ) = 0;
      virtual HRESULT __stdcall raw_CanCheckIn (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall raw_CheckIn (
        /*[in]*/ VARIANT_BOOL SaveChanges,
        /*[in]*/ VARIANT * Comments,
        /*[in]*/ VARIANT_BOOL MakePublic ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum VisDocumentTypes * pnDocType ) = 0;
      virtual HRESULT __stdcall get_Language (
        /*[out,retval]*/ long * lpLangID ) = 0;
      virtual HRESULT __stdcall put_Language (
        /*[in]*/ long lpLangID ) = 0;
      virtual HRESULT __stdcall get_RemovePersonalInformation (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall put_RemovePersonalInformation (
        /*[in]*/ VARIANT_BOOL pbRet ) = 0;
      virtual HRESULT __stdcall raw_PrintOut (
        /*[in]*/ enum VisPrintOutRange PrintRange,
        /*[in]*/ long FromPage,
        /*[in]*/ long ToPage,
        /*[in]*/ VARIANT_BOOL ScaleCurrentViewToPaper,
        /*[in]*/ BSTR PrinterName,
        /*[in]*/ VARIANT_BOOL PrintToFile,
        /*[in]*/ BSTR OutputFileName,
        /*[in]*/ long Copies,
        /*[in]*/ VARIANT_BOOL Collate,
        /*[in]*/ VARIANT_BOOL ColorAsBlack ) = 0;
      virtual HRESULT __stdcall raw_BeginUndoScope (
        /*[in]*/ BSTR bstrUndoScopeName,
        /*[out,retval]*/ long * pnScopeID ) = 0;
      virtual HRESULT __stdcall raw_EndUndoScope (
        /*[in]*/ long nScopeID,
        /*[in]*/ VARIANT_BOOL bCommit ) = 0;
      virtual HRESULT __stdcall raw_AddUndoUnit (
        /*[in]*/ IUnknown * pUndoUnit ) = 0;
      virtual HRESULT __stdcall raw_PurgeUndo ( ) = 0;
      virtual HRESULT __stdcall get_UndoEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall put_UndoEnabled (
        /*[in]*/ VARIANT_BOOL pbRet ) = 0;
      virtual HRESULT __stdcall raw_RenameCurrentScope (
        /*[in]*/ BSTR bstrScopeName ) = 0;
      virtual HRESULT __stdcall get_SharedWorkspace (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Sync (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_RemoveHiddenInformation (
        /*[in]*/ long RemoveHiddenInfoItems ) = 0;
      virtual HRESULT __stdcall get_DataRecordsets (
        /*[out,retval]*/ struct IVDataRecordsets * * DataRecordsets ) = 0;
      virtual HRESULT __stdcall raw_GetThemeNames (
        /*[in]*/ enum VisThemeTypes eType,
        /*[out]*/ SAFEARRAY * * NameArray ) = 0;
      virtual HRESULT __stdcall raw_GetThemeNamesU (
        /*[in]*/ enum VisThemeTypes eType,
        /*[out]*/ SAFEARRAY * * NameArray ) = 0;
      virtual HRESULT __stdcall raw_CanUndoCheckOut (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall raw_UndoCheckOut ( ) = 0;
      virtual HRESULT __stdcall get_ContainsWorkspaceEx (
        /*[out,retval]*/ VARIANT_BOOL * TrueOrFalse ) = 0;
      virtual HRESULT __stdcall put_ContainsWorkspaceEx (
        /*[in]*/ VARIANT_BOOL TrueOrFalse ) = 0;
      virtual HRESULT __stdcall raw_ExportAsFixedFormat (
        /*[in]*/ enum VisFixedFormatTypes FixedFormat,
        /*[in]*/ BSTR OutputFileName,
        /*[in]*/ enum VisDocExIntent Intent,
        /*[in]*/ enum VisPrintOutRange PrintRange,
        /*[in]*/ long FromPage,
        /*[in]*/ long ToPage,
        /*[in]*/ VARIANT_BOOL ColorAsBlack,
        /*[in]*/ VARIANT_BOOL IncludeBackground,
        /*[in]*/ VARIANT_BOOL IncludeDocumentProperties,
        /*[in]*/ VARIANT_BOOL IncludeStructureTags,
        /*[in]*/ VARIANT_BOOL UseISO19005_1,
        /*[in]*/ VARIANT FixedFormatExtClass = vtMissing ) = 0;
      virtual HRESULT __stdcall get_DefaultSavePath (
        /*[out,retval]*/ BSTR * SaveLocation ) = 0;
      virtual HRESULT __stdcall put_DefaultSavePath (
        /*[in]*/ BSTR SaveLocation ) = 0;
};

struct __declspec(uuid("000d0730-0000-0000-c000-000000000046"))
IVDataConnection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetID))
    long ID;
    __declspec(property(get=GetConnectionString,put=PutConnectionString))
    _bstr_t ConnectionString;
    __declspec(property(get=GetFileName))
    _bstr_t FileName;
    __declspec(property(get=GetTimeout,put=PutTimeout))
    long Timeout;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    short GetStat ( );
    IVDocumentPtr GetDocument ( );
    short GetObjectType ( );
    long GetID ( );
    _bstr_t GetConnectionString ( );
    void PutConnectionString (
        _bstr_t ConnectionString );
    _bstr_t GetFileName ( );
    long GetTimeout ( );
    void PutTimeout (
        long Timeout );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * Application ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * Document ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * ObjectType ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ long * DataConnectionID ) = 0;
      virtual HRESULT __stdcall get_ConnectionString (
        /*[out,retval]*/ BSTR * ConnectionString ) = 0;
      virtual HRESULT __stdcall put_ConnectionString (
        /*[in]*/ BSTR ConnectionString ) = 0;
      virtual HRESULT __stdcall get_FileName (
        /*[out,retval]*/ BSTR * FileName ) = 0;
      virtual HRESULT __stdcall get_Timeout (
        /*[out,retval]*/ long * Timeout ) = 0;
      virtual HRESULT __stdcall put_Timeout (
        /*[in]*/ long Timeout ) = 0;
};

struct __declspec(uuid("000d0714-0000-0000-c000-000000000046"))
IVFont : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetIndex))
    short Index;
    __declspec(property(get=GetID16))
    short ID16;
    __declspec(property(get=GetAttributes))
    short Attributes;
    __declspec(property(get=GetCharSet))
    short CharSet;
    __declspec(property(get=GetPitchAndFamily))
    short PitchAndFamily;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetID))
    long ID;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    IVDocumentPtr GetDocument ( );
    short GetIndex ( );
    _bstr_t GetName ( );
    short GetID16 ( );
    short GetAttributes ( );
    short GetCharSet ( );
    short GetPitchAndFamily ( );
    short GetObjectType ( );
    short GetStat ( );
    long GetID ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_ID16 (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Attributes (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_CharSet (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_PitchAndFamily (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
};

struct __declspec(uuid("000d0715-0000-0000-c000-000000000046"))
IVFonts : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVFontPtr Item[];
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetCount))
    short Count;
    __declspec(property(get=GetItemFromID))
    IVFontPtr ItemFromID[];
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    IVDocumentPtr GetDocument ( );
    short GetCount ( );
    IVFontPtr GetItem (
        const _variant_t & NameOrIndex );
    IVFontPtr GetItemFromID (
        long ObjectID );
    short GetObjectType ( );
    short GetStat ( );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT NameOrIndex,
        /*[out,retval]*/ struct IVFont * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ItemFromID (
        /*[in]*/ long ObjectID,
        /*[out,retval]*/ struct IVFont * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppEnum ) = 0;
};

struct __declspec(uuid("000d0716-0000-0000-c000-000000000046"))
IVColor : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetPaletteEntry,put=PutPaletteEntry))
    long PaletteEntry;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetIndex16))
    short Index16;
    __declspec(property(get=GetRed,put=PutRed))
    short Red;
    __declspec(property(get=GetGreen,put=PutGreen))
    short Green;
    __declspec(property(get=GetBlue,put=PutBlue))
    short Blue;
    __declspec(property(get=GetFlags,put=PutFlags))
    short Flags;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetIndex))
    long Index;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    IVDocumentPtr GetDocument ( );
    short GetIndex16 ( );
    short GetRed ( );
    void PutRed (
        short lpi2Ret );
    short GetGreen ( );
    void PutGreen (
        short lpi2Ret );
    short GetBlue ( );
    void PutBlue (
        short lpi2Ret );
    short GetFlags ( );
    void PutFlags (
        short lpi2Ret );
    long GetPaletteEntry ( );
    void PutPaletteEntry (
        long lpi4Ret );
    short GetObjectType ( );
    short GetStat ( );
    long GetIndex ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Index16 (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Red (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_Red (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Green (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_Green (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Blue (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_Blue (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Flags (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_Flags (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_PaletteEntry (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall put_PaletteEntry (
        /*[in]*/ long lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
};

struct __declspec(uuid("000d0717-0000-0000-c000-000000000046"))
IVColors : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVColorPtr Item[];
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetCount16))
    short Count16;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetItem16))
    IVColorPtr Item16[];
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    IVDocumentPtr GetDocument ( );
    short GetCount16 ( );
    IVColorPtr GetItem16 (
        short Index );
    short GetObjectType ( );
    short GetStat ( );
    IVColorPtr GetItem (
        long Index );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Count16 (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Item16 (
        /*[in]*/ short Index,
        /*[out,retval]*/ struct IVColor * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IVColor * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppEnum ) = 0;
};

struct __declspec(uuid("000d0708-0000-0000-c000-000000000046"))
IVMasters : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVMasterPtr Item[];
    __declspec(property(get=GetCount))
    short Count;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;
    __declspec(property(get=GetPersistsEvents))
    short PersistsEvents;
    __declspec(property(get=GetItemU))
    IVMasterPtr ItemU[];
    __declspec(property(get=GetItemFromID))
    IVMasterPtr ItemFromID[];
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    short GetObjectType ( );
    IVMasterPtr GetItem (
        const _variant_t & NameUIDOrIndex );
    short GetCount ( );
    IVDocumentPtr GetDocument ( );
    short GetStat ( );
    IVEventListPtr GetEventList ( );
    short GetPersistsEvents ( );
    IVMasterPtr Add ( );
    HRESULT GetNames (
        SAFEARRAY * * localeSpecificNameArray );
    IVMasterPtr Drop (
        IUnknown * ObjectToDrop,
        short xPos,
        short yPos );
    IVMasterPtr GetItemU (
        const _variant_t & NameUIDOrIndex );
    HRESULT GetNamesU (
        SAFEARRAY * * localeIndependentNameArray );
    IUnknownPtr Get_NewEnum ( );
    IVMasterPtr GetItemFromID (
        long nID );
    HRESULT Paste (
        const _variant_t & Flags = vtMissing );
    IVMasterPtr AddEx (
        enum VisMasterTypes Type );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT NameUIDOrIndex,
        /*[out,retval]*/ struct IVMaster * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_EventList (
        /*[out,retval]*/ struct IVEventList * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PersistsEvents (
        /*[out,retval]*/ short * lpboolRet ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[out,retval]*/ struct IVMaster * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_GetNames (
        /*[out]*/ SAFEARRAY * * localeSpecificNameArray ) = 0;
      virtual HRESULT __stdcall raw_Drop (
        /*[in]*/ IUnknown * ObjectToDrop,
        /*[in]*/ short xPos,
        /*[in]*/ short yPos,
        /*[out,retval]*/ struct IVMaster * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ItemU (
        /*[in]*/ VARIANT NameUIDOrIndex,
        /*[out,retval]*/ struct IVMaster * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_GetNamesU (
        /*[out]*/ SAFEARRAY * * localeIndependentNameArray ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppEnum ) = 0;
      virtual HRESULT __stdcall get_ItemFromID (
        /*[in]*/ long nID,
        /*[out,retval]*/ struct IVMaster * * ppMaster ) = 0;
      virtual HRESULT __stdcall raw_Paste (
        /*[in]*/ VARIANT Flags = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_AddEx (
        /*[in]*/ enum VisMasterTypes Type,
        /*[out,retval]*/ struct IVMaster * * Master ) = 0;
};

struct __declspec(uuid("000d0707-0000-0000-c000-000000000046"))
IVMaster : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetShapes))
    IVShapesPtr Shapes;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetPrompt,put=PutPrompt))
    _bstr_t Prompt;
    __declspec(property(get=GetAlignName,put=PutAlignName))
    short AlignName;
    __declspec(property(get=GetIconSize,put=PutIconSize))
    short IconSize;
    __declspec(property(get=GetIconUpdate,put=PutIconUpdate))
    short IconUpdate;
    __declspec(property(get=GetIndex))
    short Index;
    __declspec(property(get=GetOneD))
    short OneD;
    __declspec(property(get=GetType))
    enum VisMasterTypes Type;
    __declspec(property(get=GetUniqueID))
    _bstr_t UniqueID;
    __declspec(property(get=GetLayers))
    IVLayersPtr Layers;
    __declspec(property(get=GetPageSheet))
    IVShapePtr PageSheet;
    __declspec(property(get=GetDataGraphicHidden,put=PutDataGraphicHidden))
    VARIANT_BOOL DataGraphicHidden;
    __declspec(property(get=GetDataGraphicHidesText,put=PutDataGraphicHidesText))
    VARIANT_BOOL DataGraphicHidesText;
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;
    __declspec(property(get=GetPersistsEvents))
    short PersistsEvents;
    __declspec(property(get=GetDataGraphicShowBorder,put=PutDataGraphicShowBorder))
    VARIANT_BOOL DataGraphicShowBorder;
    __declspec(property(get=GetDataGraphicHorizontalPosition,put=PutDataGraphicHorizontalPosition))
    enum VisGraphicPositionHorizontal DataGraphicHorizontalPosition;
    __declspec(property(get=GetDataGraphicVerticalPosition,put=PutDataGraphicVerticalPosition))
    enum VisGraphicPositionVertical DataGraphicVerticalPosition;
    __declspec(property(get=GetGraphicItems))
    IVGraphicItemsPtr GraphicItems;
    __declspec(property(get=GetConnects))
    IVConnectsPtr Connects;
    __declspec(property(get=GetID16))
    short ID16;
    __declspec(property(get=GetOLEObjects))
    IVOLEObjectsPtr OLEObjects;
    __declspec(property(get=GetPatternFlags,put=PutPatternFlags))
    short PatternFlags;
    __declspec(property(get=GetMatchByName,put=PutMatchByName))
    short MatchByName;
    __declspec(property(get=GetID))
    long ID;
    __declspec(property(get=GetHidden,put=PutHidden))
    short Hidden;
    __declspec(property(get=GetBaseID))
    _bstr_t BaseID;
    __declspec(property(get=GetNewBaseID))
    _bstr_t NewBaseID;
    __declspec(property(get=GetSpatialSearch))
    IVSelectionPtr SpatialSearch[][][][][];
    __declspec(property(get=GetNameU,put=PutNameU))
    _bstr_t NameU;
    __declspec(property(get=GetIndexInStencil,put=PutIndexInStencil))
    short IndexInStencil;
    __declspec(property(get=GetPicture))
    IPictureDisp * Picture;
    __declspec(property(get=GetIcon,put=PutRefIcon))
    IPictureDisp * Icon;
    __declspec(property(get=GetEditCopy))
    IVMasterPtr EditCopy;
    __declspec(property(get=GetOriginal))
    IVMasterPtr Original;
    __declspec(property(get=GetIsChanged))
    VARIANT_BOOL IsChanged;

    //
    // Wrapper methods for error-handling
    //

    IVDocumentPtr GetDocument ( );
    _bstr_t GetPrompt ( );
    void PutPrompt (
        _bstr_t lpbstrRet );
    short GetAlignName ( );
    void PutAlignName (
        short lpi2Ret );
    short GetIconSize ( );
    void PutIconSize (
        short lpi2Ret );
    short GetIconUpdate ( );
    void PutIconUpdate (
        short lpi2Ret );
    IVApplicationPtr GetApplication ( );
    short GetStat ( );
    short GetObjectType ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t lpLocaleSpecificName );
    IVShapesPtr GetShapes ( );
    short GetIndex ( );
    short GetOneD ( );
    HRESULT Delete ( );
    _bstr_t GetUniqueID ( );
    IVLayersPtr GetLayers ( );
    IVShapePtr GetPageSheet ( );
    IVShapePtr Drop (
        IUnknown * ObjectToDrop,
        double xPos,
        double yPos );
    HRESULT CenterDrawing ( );
    IVEventListPtr GetEventList ( );
    short GetPersistsEvents ( );
    IVShapePtr DrawLine (
        double xBegin,
        double yBegin,
        double xEnd,
        double yEnd );
    IVShapePtr DrawRectangle (
        double x1,
        double y1,
        double x2,
        double y2 );
    IVShapePtr DrawOval (
        double x1,
        double y1,
        double x2,
        double y2 );
    IVShapePtr DrawSpline (
        SAFEARRAY * * xyArray,
        double Tolerance,
        short Flags );
    IVShapePtr DrawBezier (
        SAFEARRAY * * xyArray,
        short degree,
        short Flags );
    IVShapePtr DrawPolyline (
        SAFEARRAY * * xyArray,
        short Flags );
    IVShapePtr Import (
        _bstr_t FileName );
    HRESULT Export (
        _bstr_t FileName );
    IVShapePtr InsertFromFile (
        _bstr_t FileName,
        short Flags );
    IVShapePtr InsertObject (
        _bstr_t ClassOrProgID,
        short Flags );
    IVWindowPtr OpenDrawWindow ( );
    IVWindowPtr OpenIconWindow ( );
    IVMasterPtr Open ( );
    HRESULT Close ( );
    short DropMany (
        SAFEARRAY * * ObjectsToInstance,
        SAFEARRAY * * xyArray,
        SAFEARRAY * * IDArray );
    HRESULT GetFormulas (
        SAFEARRAY * * SID_SRCStream,
        SAFEARRAY * * formulaArray );
    HRESULT GetResults (
        SAFEARRAY * * SID_SRCStream,
        short Flags,
        SAFEARRAY * * UnitsNamesOrCodes,
        SAFEARRAY * * resultArray );
    short SetFormulas (
        SAFEARRAY * * SID_SRCStream,
        SAFEARRAY * * formulaArray,
        short Flags );
    short SetResults (
        SAFEARRAY * * SID_SRCStream,
        SAFEARRAY * * UnitsNamesOrCodes,
        SAFEARRAY * * resultArray,
        short Flags );
    IVConnectsPtr GetConnects ( );
    HRESULT ImportIcon (
        _bstr_t FileName );
    HRESULT ExportIconTransparentAsBlack (
        _bstr_t FileName,
        short Flags );
    HRESULT Layout ( );
    HRESULT BoundingBox (
        short Flags,
        double * lpr8Left,
        double * lpr8Bottom,
        double * lpr8Right,
        double * lpr8Top );
    short GetID16 ( );
    IVOLEObjectsPtr GetOLEObjects ( );
    short GetPatternFlags ( );
    void PutPatternFlags (
        short lpi2Ret );
    short GetMatchByName ( );
    void PutMatchByName (
        short lpi2Ret );
    long GetID ( );
    short GetHidden ( );
    void PutHidden (
        short lpi2Ret );
    _bstr_t GetBaseID ( );
    _bstr_t GetNewBaseID ( );
    IVSelectionPtr GetSpatialSearch (
        double x,
        double y,
        short Relation,
        double Tolerance,
        short Flags );
    IVMasterShortcutPtr CreateShortcut ( );
    _bstr_t GetNameU ( );
    void PutNameU (
        _bstr_t lpLocaleIndependentName );
    short DropManyU (
        SAFEARRAY * * ObjectsToInstance,
        SAFEARRAY * * xyArray,
        SAFEARRAY * * IDArray );
    HRESULT GetFormulasU (
        SAFEARRAY * * SID_SRCStream,
        SAFEARRAY * * formulaArray );
    IVShapePtr DrawNURBS (
        short degree,
        short Flags,
        SAFEARRAY * * xyArray,
        SAFEARRAY * * knots,
        const _variant_t & weights = vtMissing );
    HRESULT ExportIcon (
        _bstr_t FileName,
        short Flags,
        const _variant_t & TransparentRGB = vtMissing );
    short GetIndexInStencil ( );
    IPictureDisp * GetPicture ( );
    IPictureDisp * GetIcon ( );
    void PutRefIcon (
        IPictureDisp * ppPictureDisp );
    IVMasterPtr GetEditCopy ( );
    IVMasterPtr GetOriginal ( );
    VARIANT_BOOL GetIsChanged ( );
    void PutIndexInStencil (
        short lpi2Ret );
    HRESULT ResizeToFitContents ( );
    HRESULT Paste (
        const _variant_t & Flags = vtMissing );
    HRESULT PasteSpecial (
        long Format,
        const _variant_t & Link = vtMissing,
        const _variant_t & DisplayAsIcon = vtMissing );
    IVSelectionPtr CreateSelection (
        enum VisSelectionTypes SelType,
        enum VisSelectMode IterationMode,
        const _variant_t & Data = vtMissing );
    IVShapePtr AddGuide (
        short Type,
        double xPos,
        double yPos );
    IVShapePtr DrawArcByThreePoints (
        double xBegin,
        double yBegin,
        double xEnd,
        double yEnd,
        double xControl,
        double yControl );
    IVShapePtr DrawQuarterArc (
        double xBegin,
        double yBegin,
        double xEnd,
        double yEnd,
        enum VisArcSweepFlags SweepFlag );
    IVShapePtr DrawCircularArc (
        double xCenter,
        double yCenter,
        double Radius,
        double StartAngle,
        double EndAngle );
    enum VisMasterTypes GetType ( );
    VARIANT_BOOL GetDataGraphicHidden ( );
    void PutDataGraphicHidden (
        VARIANT_BOOL Hidden );
    VARIANT_BOOL GetDataGraphicHidesText ( );
    void PutDataGraphicHidesText (
        VARIANT_BOOL HideText );
    VARIANT_BOOL GetDataGraphicShowBorder ( );
    void PutDataGraphicShowBorder (
        VARIANT_BOOL ShowBorder );
    enum VisGraphicPositionHorizontal GetDataGraphicHorizontalPosition ( );
    void PutDataGraphicHorizontalPosition (
        enum VisGraphicPositionHorizontal Position );
    enum VisGraphicPositionVertical GetDataGraphicVerticalPosition ( );
    void PutDataGraphicVerticalPosition (
        enum VisGraphicPositionVertical Position );
    IVGraphicItemsPtr GetGraphicItems ( );
    HRESULT DataGraphicDelete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Prompt (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Prompt (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_AlignName (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_AlignName (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_IconSize (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_IconSize (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_IconUpdate (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_IconUpdate (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * lpLocaleSpecificName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR lpLocaleSpecificName ) = 0;
      virtual HRESULT __stdcall get_Shapes (
        /*[out,retval]*/ struct IVShapes * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_OneD (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_UniqueID (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_Layers (
        /*[out,retval]*/ struct IVLayers * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PageSheet (
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_Drop (
        /*[in]*/ IUnknown * ObjectToDrop,
        /*[in]*/ double xPos,
        /*[in]*/ double yPos,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_CenterDrawing ( ) = 0;
      virtual HRESULT __stdcall get_EventList (
        /*[out,retval]*/ struct IVEventList * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PersistsEvents (
        /*[out,retval]*/ short * lpboolRet ) = 0;
      virtual HRESULT __stdcall raw_DrawLine (
        /*[in]*/ double xBegin,
        /*[in]*/ double yBegin,
        /*[in]*/ double xEnd,
        /*[in]*/ double yEnd,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_DrawRectangle (
        /*[in]*/ double x1,
        /*[in]*/ double y1,
        /*[in]*/ double x2,
        /*[in]*/ double y2,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_DrawOval (
        /*[in]*/ double x1,
        /*[in]*/ double y1,
        /*[in]*/ double x2,
        /*[in]*/ double y2,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_DrawSpline (
        /*[in]*/ SAFEARRAY * * xyArray,
        /*[in]*/ double Tolerance,
        /*[in]*/ short Flags,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_DrawBezier (
        /*[in]*/ SAFEARRAY * * xyArray,
        /*[in]*/ short degree,
        /*[in]*/ short Flags,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_DrawPolyline (
        /*[in]*/ SAFEARRAY * * xyArray,
        /*[in]*/ short Flags,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_Import (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_Export (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_InsertFromFile (
        /*[in]*/ BSTR FileName,
        /*[in]*/ short Flags,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_InsertObject (
        /*[in]*/ BSTR ClassOrProgID,
        /*[in]*/ short Flags,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_OpenDrawWindow (
        /*[out,retval]*/ struct IVWindow * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_OpenIconWindow (
        /*[out,retval]*/ struct IVWindow * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_Open (
        /*[out,retval]*/ struct IVMaster * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_Close ( ) = 0;
      virtual HRESULT __stdcall raw_DropMany (
        /*[in]*/ SAFEARRAY * * ObjectsToInstance,
        /*[in]*/ SAFEARRAY * * xyArray,
        /*[out]*/ SAFEARRAY * * IDArray,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_GetFormulas (
        /*[in]*/ SAFEARRAY * * SID_SRCStream,
        /*[out]*/ SAFEARRAY * * formulaArray ) = 0;
      virtual HRESULT __stdcall raw_GetResults (
        /*[in]*/ SAFEARRAY * * SID_SRCStream,
        /*[in]*/ short Flags,
        /*[in]*/ SAFEARRAY * * UnitsNamesOrCodes,
        /*[out]*/ SAFEARRAY * * resultArray ) = 0;
      virtual HRESULT __stdcall raw_SetFormulas (
        /*[in]*/ SAFEARRAY * * SID_SRCStream,
        /*[in]*/ SAFEARRAY * * formulaArray,
        /*[in]*/ short Flags,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_SetResults (
        /*[in]*/ SAFEARRAY * * SID_SRCStream,
        /*[in]*/ SAFEARRAY * * UnitsNamesOrCodes,
        /*[in]*/ SAFEARRAY * * resultArray,
        /*[in]*/ short Flags,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Connects (
        /*[out,retval]*/ struct IVConnects * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_ImportIcon (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_ExportIconTransparentAsBlack (
        /*[in]*/ BSTR FileName,
        /*[in]*/ short Flags ) = 0;
      virtual HRESULT __stdcall raw_Layout ( ) = 0;
      virtual HRESULT __stdcall raw_BoundingBox (
        /*[in]*/ short Flags,
        /*[out]*/ double * lpr8Left,
        /*[out]*/ double * lpr8Bottom,
        /*[out]*/ double * lpr8Right,
        /*[out]*/ double * lpr8Top ) = 0;
      virtual HRESULT __stdcall get_ID16 (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_OLEObjects (
        /*[out,retval]*/ struct IVOLEObjects * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PatternFlags (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_PatternFlags (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_MatchByName (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_MatchByName (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_Hidden (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_Hidden (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_BaseID (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_NewBaseID (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_SpatialSearch (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ short Relation,
        /*[in]*/ double Tolerance,
        /*[in]*/ short Flags,
        /*[out,retval]*/ struct IVSelection * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_CreateShortcut (
        /*[out,retval]*/ struct IVMasterShortcut * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_NameU (
        /*[out,retval]*/ BSTR * lpLocaleIndependentName ) = 0;
      virtual HRESULT __stdcall put_NameU (
        /*[in]*/ BSTR lpLocaleIndependentName ) = 0;
      virtual HRESULT __stdcall raw_DropManyU (
        /*[in]*/ SAFEARRAY * * ObjectsToInstance,
        /*[in]*/ SAFEARRAY * * xyArray,
        /*[out]*/ SAFEARRAY * * IDArray,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_GetFormulasU (
        /*[in]*/ SAFEARRAY * * SID_SRCStream,
        /*[out]*/ SAFEARRAY * * formulaArray ) = 0;
      virtual HRESULT __stdcall raw_DrawNURBS (
        /*[in]*/ short degree,
        /*[in]*/ short Flags,
        /*[in]*/ SAFEARRAY * * xyArray,
        /*[in]*/ SAFEARRAY * * knots,
        /*[in]*/ VARIANT weights,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_ExportIcon (
        /*[in]*/ BSTR FileName,
        /*[in]*/ short Flags,
        /*[in]*/ VARIANT TransparentRGB = vtMissing ) = 0;
      virtual HRESULT __stdcall get_IndexInStencil (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Picture (
        /*[out,retval]*/ IPictureDisp * * ppPictureDisp ) = 0;
      virtual HRESULT __stdcall get_Icon (
        /*[out,retval]*/ IPictureDisp * * ppPictureDisp ) = 0;
      virtual HRESULT __stdcall putref_Icon (
        /*[in]*/ IPictureDisp * ppPictureDisp ) = 0;
      virtual HRESULT __stdcall get_EditCopy (
        /*[out,retval]*/ struct IVMaster * * ppOpenMaster ) = 0;
      virtual HRESULT __stdcall get_Original (
        /*[out,retval]*/ struct IVMaster * * ppOriginalMaster ) = 0;
      virtual HRESULT __stdcall get_IsChanged (
        /*[out,retval]*/ VARIANT_BOOL * pbChanged ) = 0;
      virtual HRESULT __stdcall put_IndexInStencil (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_ResizeToFitContents ( ) = 0;
      virtual HRESULT __stdcall raw_Paste (
        /*[in]*/ VARIANT Flags = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_PasteSpecial (
        /*[in]*/ long Format,
        /*[in]*/ VARIANT Link = vtMissing,
        /*[in]*/ VARIANT DisplayAsIcon = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_CreateSelection (
        /*[in]*/ enum VisSelectionTypes SelType,
        /*[in]*/ enum VisSelectMode IterationMode,
        /*[in]*/ VARIANT Data,
        /*[out,retval]*/ struct IVSelection * * ppSelection ) = 0;
      virtual HRESULT __stdcall raw_AddGuide (
        /*[in]*/ short Type,
        /*[in]*/ double xPos,
        /*[in]*/ double yPos,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_DrawArcByThreePoints (
        /*[in]*/ double xBegin,
        /*[in]*/ double yBegin,
        /*[in]*/ double xEnd,
        /*[in]*/ double yEnd,
        /*[in]*/ double xControl,
        /*[in]*/ double yControl,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_DrawQuarterArc (
        /*[in]*/ double xBegin,
        /*[in]*/ double yBegin,
        /*[in]*/ double xEnd,
        /*[in]*/ double yEnd,
        /*[in]*/ enum VisArcSweepFlags SweepFlag,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_DrawCircularArc (
        /*[in]*/ double xCenter,
        /*[in]*/ double yCenter,
        /*[in]*/ double Radius,
        /*[in]*/ double StartAngle,
        /*[in]*/ double EndAngle,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum VisMasterTypes * Type ) = 0;
      virtual HRESULT __stdcall get_DataGraphicHidden (
        /*[out,retval]*/ VARIANT_BOOL * Hidden ) = 0;
      virtual HRESULT __stdcall put_DataGraphicHidden (
        /*[in]*/ VARIANT_BOOL Hidden ) = 0;
      virtual HRESULT __stdcall get_DataGraphicHidesText (
        /*[out,retval]*/ VARIANT_BOOL * HideText ) = 0;
      virtual HRESULT __stdcall put_DataGraphicHidesText (
        /*[in]*/ VARIANT_BOOL HideText ) = 0;
      virtual HRESULT __stdcall get_DataGraphicShowBorder (
        /*[out,retval]*/ VARIANT_BOOL * ShowBorder ) = 0;
      virtual HRESULT __stdcall put_DataGraphicShowBorder (
        /*[in]*/ VARIANT_BOOL ShowBorder ) = 0;
      virtual HRESULT __stdcall get_DataGraphicHorizontalPosition (
        /*[out,retval]*/ enum VisGraphicPositionHorizontal * Position ) = 0;
      virtual HRESULT __stdcall put_DataGraphicHorizontalPosition (
        /*[in]*/ enum VisGraphicPositionHorizontal Position ) = 0;
      virtual HRESULT __stdcall get_DataGraphicVerticalPosition (
        /*[out,retval]*/ enum VisGraphicPositionVertical * Position ) = 0;
      virtual HRESULT __stdcall put_DataGraphicVerticalPosition (
        /*[in]*/ enum VisGraphicPositionVertical Position ) = 0;
      virtual HRESULT __stdcall get_GraphicItems (
        /*[out,retval]*/ struct IVGraphicItems * * GraphicItems ) = 0;
      virtual HRESULT __stdcall raw_DataGraphicDelete ( ) = 0;
};

struct __declspec(uuid("000d0735-0000-0000-c000-000000000046"))
IVGraphicItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetObjectType))
    enum VisObjectTypes ObjectType;
    __declspec(property(get=GetID))
    long ID;
    __declspec(property(get=GetIndex,put=PutIndex))
    long Index;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetType))
    enum VisGraphicItemTypes Type;
    __declspec(property(get=GetDataGraphic))
    IVMasterPtr DataGraphic;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetTag,put=PutTag))
    _bstr_t Tag;
    __declspec(property(get=GetHorizontalPosition,put=PutHorizontalPosition))
    enum VisGraphicPositionHorizontal HorizontalPosition;
    __declspec(property(get=GetVerticalPosition,put=PutVerticalPosition))
    enum VisGraphicPositionVertical VerticalPosition;
    __declspec(property(get=GetUseDataGraphicPosition,put=PutUseDataGraphicPosition))
    VARIANT_BOOL UseDataGraphicPosition;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    IVDocumentPtr GetDocument ( );
    enum VisObjectTypes GetObjectType ( );
    HRESULT Delete ( );
    long GetIndex ( );
    void PutIndex (
        long Index );
    long GetID ( );
    _bstr_t GetDescription ( );
    enum VisGraphicItemTypes GetType ( );
    HRESULT GetExpression (
        enum VisGraphicField * Field,
        BSTR * Expression );
    HRESULT SetExpression (
        enum VisGraphicField Field,
        _bstr_t Expression );
    IVMasterPtr GetDataGraphic ( );
    short GetStat ( );
    _bstr_t GetTag ( );
    void PutTag (
        _bstr_t Tag );
    enum VisGraphicPositionHorizontal GetHorizontalPosition ( );
    void PutHorizontalPosition (
        enum VisGraphicPositionHorizontal Position );
    enum VisGraphicPositionVertical GetVerticalPosition ( );
    void PutVerticalPosition (
        enum VisGraphicPositionVertical Position );
    VARIANT_BOOL GetUseDataGraphicPosition ( );
    void PutUseDataGraphicPosition (
        VARIANT_BOOL UseDataGraphicPosition );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * Application ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * Document ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ enum VisObjectTypes * ObjectType ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall put_Index (
        /*[in]*/ long Index ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ long * ID ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * Description ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum VisGraphicItemTypes * Type ) = 0;
      virtual HRESULT __stdcall raw_GetExpression (
        /*[out]*/ enum VisGraphicField * Field,
        /*[out]*/ BSTR * Expression ) = 0;
      virtual HRESULT __stdcall raw_SetExpression (
        /*[in]*/ enum VisGraphicField Field,
        /*[in]*/ BSTR Expression ) = 0;
      virtual HRESULT __stdcall get_DataGraphic (
        /*[out,retval]*/ struct IVMaster * * DataGraphic ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Tag (
        /*[out,retval]*/ BSTR * Tag ) = 0;
      virtual HRESULT __stdcall put_Tag (
        /*[in]*/ BSTR Tag ) = 0;
      virtual HRESULT __stdcall get_HorizontalPosition (
        /*[out,retval]*/ enum VisGraphicPositionHorizontal * Position ) = 0;
      virtual HRESULT __stdcall put_HorizontalPosition (
        /*[in]*/ enum VisGraphicPositionHorizontal Position ) = 0;
      virtual HRESULT __stdcall get_VerticalPosition (
        /*[out,retval]*/ enum VisGraphicPositionVertical * Position ) = 0;
      virtual HRESULT __stdcall put_VerticalPosition (
        /*[in]*/ enum VisGraphicPositionVertical Position ) = 0;
      virtual HRESULT __stdcall get_UseDataGraphicPosition (
        /*[out,retval]*/ VARIANT_BOOL * UseDataGraphicPosition ) = 0;
      virtual HRESULT __stdcall put_UseDataGraphicPosition (
        /*[in]*/ VARIANT_BOOL UseDataGraphicPosition ) = 0;
};

struct __declspec(uuid("000d0734-0000-0000-c000-000000000046"))
IVGraphicItems : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetObjectType))
    enum VisObjectTypes ObjectType;
    __declspec(property(get=GetDataGraphic))
    IVMasterPtr DataGraphic;
    __declspec(property(get=GetItem))
    IVGraphicItemPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetItemFromID))
    IVGraphicItemPtr ItemFromID[];
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    IVDocumentPtr GetDocument ( );
    enum VisObjectTypes GetObjectType ( );
    IVMasterPtr GetDataGraphic ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    IVGraphicItemPtr AddCopy (
        struct IVGraphicItem * GraphicItem );
    IVGraphicItemPtr GetItem (
        long Index );
    IVGraphicItemPtr GetItemFromID (
        long ObjectID );
    short GetStat ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * Application ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * Document ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ enum VisObjectTypes * ObjectType ) = 0;
      virtual HRESULT __stdcall get_DataGraphic (
        /*[out,retval]*/ struct IVMaster * * DataGraphic ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Enum ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_AddCopy (
        /*[in]*/ struct IVGraphicItem * GraphicItem,
        /*[out,retval]*/ struct IVGraphicItem * * GraphicItemCopy ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IVGraphicItem * * GraphicItem ) = 0;
      virtual HRESULT __stdcall get_ItemFromID (
        /*[in]*/ long ObjectID,
        /*[out,retval]*/ struct IVGraphicItem * * GraphicItem ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
};

struct __declspec(uuid("000d070d-0000-0000-c000-000000000046"))
IVShapes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVShapePtr Item[];
    __declspec(property(get=GetCount16))
    short Count16;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetContainingPage))
    IVPagePtr ContainingPage;
    __declspec(property(get=GetContainingMaster))
    IVMasterPtr ContainingMaster;
    __declspec(property(get=GetContainingShape))
    IVShapePtr ContainingShape;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;
    __declspec(property(get=GetPersistsEvents))
    short PersistsEvents;
    __declspec(property(get=GetItemFromID16))
    IVShapePtr ItemFromID16[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetItemFromID))
    IVShapePtr ItemFromID[];
    __declspec(property(get=GetItemU))
    IVShapePtr ItemU[];
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    short GetObjectType ( );
    IVShapePtr GetItem (
        const _variant_t & NameUIDOrIndex );
    short GetCount16 ( );
    IVDocumentPtr GetDocument ( );
    IVPagePtr GetContainingPage ( );
    IVMasterPtr GetContainingMaster ( );
    IVShapePtr GetContainingShape ( );
    HRESULT CenterDrawing ( );
    short GetStat ( );
    IVEventListPtr GetEventList ( );
    short GetPersistsEvents ( );
    IVShapePtr GetItemFromID16 (
        short ObjectID );
    long GetCount ( );
    IVShapePtr GetItemFromID (
        long ObjectID );
    IVShapePtr GetItemU (
        const _variant_t & NameUIDOrIndex );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT NameUIDOrIndex,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Count16 (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ContainingPage (
        /*[out,retval]*/ struct IVPage * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ContainingMaster (
        /*[out,retval]*/ struct IVMaster * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ContainingShape (
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_CenterDrawing ( ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_EventList (
        /*[out,retval]*/ struct IVEventList * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PersistsEvents (
        /*[out,retval]*/ short * lpboolRet ) = 0;
      virtual HRESULT __stdcall get_ItemFromID16 (
        /*[in]*/ short ObjectID,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_ItemFromID (
        /*[in]*/ long ObjectID,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ItemU (
        /*[in]*/ VARIANT NameUIDOrIndex,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppEnum ) = 0;
};

struct __declspec(uuid("000d070c-0000-0000-c000-000000000046"))
IVShape : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetNameID))
    _bstr_t NameID;
    __declspec(property(get=GetShapes))
    IVShapesPtr Shapes;
    __declspec(property(get=GetText,put=PutText))
    _bstr_t Text;
    __declspec(property(get=GetCharCount))
    long CharCount;
    __declspec(property(get=GetCharacters))
    IVCharactersPtr Characters;
    __declspec(property(get=GetForeignData))
    SAFEARRAY * ForeignData;
    __declspec(property(get=GetLanguage,put=PutLanguage))
    long Language;
    __declspec(property(get=GetAreaIU))
    double AreaIU[];
    __declspec(property(get=GetCells))
    IVCellPtr Cells[];
    __declspec(property(get=GetCellsSRC))
    IVCellPtr CellsSRC[][][];
    __declspec(property(get=GetData1,put=PutData1))
    _bstr_t Data1;
    __declspec(property(get=GetData2,put=PutData2))
    _bstr_t Data2;
    __declspec(property(get=GetData3,put=PutData3))
    _bstr_t Data3;
    __declspec(property(get=GetHelp,put=PutHelp))
    _bstr_t Help;
    __declspec(property(get=GetLengthIU))
    double LengthIU[];
    __declspec(property(get=GetType))
    short Type;
    __declspec(property(get=GetMaster))
    IVMasterPtr Master;
    __declspec(property(get=GetOneD,put=PutOneD))
    short OneD;
    __declspec(property(get=GetGeometryCount))
    short GeometryCount;
    __declspec(property(get=GetRowCount))
    short RowCount[];
    __declspec(property(get=GetContainingPageID))
    long ContainingPageID;
    __declspec(property(get=GetContainingMasterID))
    long ContainingMasterID;
    __declspec(property(get=GetDataGraphic,put=PutDataGraphic))
    IVMasterPtr DataGraphic;
    __declspec(property(get=GetRowsCellCount))
    short RowsCellCount[][];
    __declspec(property(get=GetRowType,put=PutRowType))
    short RowType[][];
    __declspec(property(get=GetIsDataGraphicCallout))
    VARIANT_BOOL IsDataGraphicCallout;
    __declspec(property(get=GetConnects))
    IVConnectsPtr Connects;
    __declspec(property(get=GetIndex16))
    short Index16;
    __declspec(property(get=GetStyle,put=PutStyle))
    _bstr_t Style;
    __declspec(property(get=GetLineStyle,put=PutLineStyle))
    _bstr_t LineStyle;
    __declspec(property(get=GetFillStyle,put=PutFillStyle))
    _bstr_t FillStyle;
    __declspec(property(get=GetTextStyle,put=PutTextStyle))
    _bstr_t TextStyle;
    __declspec(property(put=PutStyleKeepFmt))
    _bstr_t StyleKeepFmt;
    __declspec(property(put=PutLineStyleKeepFmt))
    _bstr_t LineStyleKeepFmt;
    __declspec(property(put=PutFillStyleKeepFmt))
    _bstr_t FillStyleKeepFmt;
    __declspec(property(put=PutTextStyleKeepFmt))
    _bstr_t TextStyleKeepFmt;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetParent,put=PutParent))
    IDispatchPtr Parent;
    __declspec(property(get=Getold_AreaIU))
    double old_AreaIU;
    __declspec(property(get=Getold_LengthIU))
    double old_LengthIU;
    __declspec(property(get=GetGeomExIf))
    IUnknownPtr GeomExIf[][];
    __declspec(property(get=GetUniqueID))
    _bstr_t UniqueID[];
    __declspec(property(get=GetContainingPage))
    IVPagePtr ContainingPage;
    __declspec(property(get=GetContainingMaster))
    IVMasterPtr ContainingMaster;
    __declspec(property(get=GetContainingShape))
    IVShapePtr ContainingShape;
    __declspec(property(get=GetSectionExists))
    short SectionExists[][];
    __declspec(property(get=GetRowExists))
    short RowExists[][][];
    __declspec(property(get=GetCellExists))
    short CellExists[][];
    __declspec(property(get=GetCellsSRCExists))
    short CellsSRCExists[][][][];
    __declspec(property(get=GetLayerCount))
    short LayerCount;
    __declspec(property(get=GetLayer))
    IVLayerPtr Layer[];
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;
    __declspec(property(get=GetPersistsEvents))
    short PersistsEvents;
    __declspec(property(get=GetClassID))
    _bstr_t ClassID;
    __declspec(property(get=GetForeignType))
    short ForeignType;
    __declspec(property(get=GetObject))
    IDispatchPtr Object;
    __declspec(property(get=GetID16))
    short ID16;
    __declspec(property(get=GetFromConnects))
    IVConnectsPtr FromConnects;
    __declspec(property(get=GetHyperlink))
    IVHyperlinkPtr Hyperlink;
    __declspec(property(get=GetProgID))
    _bstr_t ProgID;
    __declspec(property(get=GetObjectIsInherited))
    short ObjectIsInherited;
    __declspec(property(get=GetPaths))
    IVPathsPtr Paths;
    __declspec(property(get=GetPathsLocal))
    IVPathsPtr PathsLocal;
    __declspec(property(get=GetID))
    long ID;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetSection))
    IVSectionPtr Section[];
    __declspec(property(get=GetHyperlinks))
    IVHyperlinksPtr Hyperlinks;
    __declspec(property(get=GetSpatialRelation))
    short SpatialRelation[][][];
    __declspec(property(get=GetDistanceFrom))
    double DistanceFrom[][];
    __declspec(property(get=GetSpatialNeighbors))
    IVSelectionPtr SpatialNeighbors[][][][];
    __declspec(property(get=GetSpatialSearch))
    IVSelectionPtr SpatialSearch[][][][][];
    __declspec(property(get=GetCellsU))
    IVCellPtr CellsU[];
    __declspec(property(get=GetNameU,put=PutNameU))
    _bstr_t NameU;
    __declspec(property(get=GetCellExistsU))
    short CellExistsU[][];
    __declspec(property(get=GetCellsRowIndex))
    short CellsRowIndex[];
    __declspec(property(get=GetCellsRowIndexU))
    short CellsRowIndexU[];
    __declspec(property(get=GetIsOpenForTextEdit))
    VARIANT_BOOL IsOpenForTextEdit;
    __declspec(property(get=GetRootShape))
    IVShapePtr RootShape;
    __declspec(property(get=GetMasterShape))
    IVShapePtr MasterShape;
    __declspec(property(get=GetPicture))
    IPictureDisp * Picture;

    //
    // Wrapper methods for error-handling
    //

    HRESULT VoidGroup ( );
    HRESULT BringForward ( );
    HRESULT BringToFront ( );
    HRESULT ConvertToGroup ( );
    HRESULT FlipHorizontal ( );
    HRESULT FlipVertical ( );
    HRESULT ReverseEnds ( );
    HRESULT SendBackward ( );
    HRESULT SendToBack ( );
    HRESULT Rotate90 ( );
    HRESULT Ungroup ( );
    IVDocumentPtr GetDocument ( );
    IDispatchPtr GetParent ( );
    IVApplicationPtr GetApplication ( );
    short GetStat ( );
    IVMasterPtr GetMaster ( );
    short GetType ( );
    short GetObjectType ( );
    IVCellPtr GetCells (
        _bstr_t localeSpecificCellName );
    IVCellPtr GetCellsSRC (
        short Section,
        short Row,
        short Column );
    IVShapesPtr GetShapes ( );
    _bstr_t GetData1 ( );
    void PutData1 (
        _bstr_t lpbstrRet );
    _bstr_t GetData2 ( );
    void PutData2 (
        _bstr_t lpbstrRet );
    _bstr_t GetData3 ( );
    void PutData3 (
        _bstr_t lpbstrRet );
    _bstr_t GetHelp ( );
    void PutHelp (
        _bstr_t lpbstrRet );
    _bstr_t GetNameID ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t lpLocaleSpecificName );
    _bstr_t GetText ( );
    void PutText (
        _bstr_t lpbstrRet );
    long GetCharCount ( );
    IVCharactersPtr GetCharacters ( );
    HRESULT old_Copy ( );
    HRESULT old_Cut ( );
    HRESULT Delete ( );
    HRESULT VoidDuplicate ( );
    IVShapePtr Drop (
        IUnknown * ObjectToDrop,
        double xPos,
        double yPos );
    short GetOneD ( );
    void PutOneD (
        short lpi2Ret );
    short GetGeometryCount ( );
    short GetRowCount (
        short Section );
    short AddSection (
        short Section );
    HRESULT DeleteSection (
        short Section );
    short AddRow (
        short Section,
        short Row,
        short RowTag );
    HRESULT DeleteRow (
        short Section,
        short Row );
    short GetRowsCellCount (
        short Section,
        short Row );
    short GetRowType (
        short Section,
        short Row );
    void PutRowType (
        short Section,
        short Row,
        short lpi2Ret );
    HRESULT SetCenter (
        double xPos,
        double yPos );
    HRESULT SetBegin (
        double xPos,
        double yPos );
    HRESULT SetEnd (
        double xPos,
        double yPos );
    IVConnectsPtr GetConnects ( );
    short GetIndex16 ( );
    _bstr_t GetStyle ( );
    void PutStyle (
        _bstr_t lpLocaleSpecificStyleName );
    void PutStyleKeepFmt (
        _bstr_t _arg1 );
    _bstr_t GetLineStyle ( );
    void PutLineStyle (
        _bstr_t lpLocaleSpecificStyleName );
    void PutLineStyleKeepFmt (
        _bstr_t _arg1 );
    _bstr_t GetFillStyle ( );
    void PutFillStyle (
        _bstr_t lpLocaleSpecificStyleName );
    void PutFillStyleKeepFmt (
        _bstr_t _arg1 );
    _bstr_t GetTextStyle ( );
    void PutTextStyle (
        _bstr_t lpLocaleSpecificStyleName );
    void PutTextStyleKeepFmt (
        _bstr_t _arg1 );
    HRESULT Export (
        _bstr_t FileName );
    double Getold_AreaIU ( );
    double Getold_LengthIU ( );
    IUnknownPtr GetGeomExIf (
        short fFill,
        double LineRes );
    _bstr_t GetUniqueID (
        short fUniqueID );
    IVPagePtr GetContainingPage ( );
    IVMasterPtr GetContainingMaster ( );
    IVShapePtr GetContainingShape ( );
    short GetSectionExists (
        short Section,
        short fExistsLocally );
    short GetRowExists (
        short Section,
        short Row,
        short fExistsLocally );
    short GetCellExists (
        _bstr_t localeSpecificCellName,
        short fExistsLocally );
    short GetCellsSRCExists (
        short Section,
        short Row,
        short Column,
        short fExistsLocally );
    short GetLayerCount ( );
    IVLayerPtr GetLayer (
        short Index );
    short AddNamedRow (
        short Section,
        _bstr_t RowName,
        short RowTag );
    short AddRows (
        short Section,
        short Row,
        short RowTag,
        short RowCount );
    IVEventListPtr GetEventList ( );
    short GetPersistsEvents ( );
    IVShapePtr DrawLine (
        double xBegin,
        double yBegin,
        double xEnd,
        double yEnd );
    IVShapePtr DrawRectangle (
        double x1,
        double y1,
        double x2,
        double y2 );
    IVShapePtr DrawOval (
        double x1,
        double y1,
        double x2,
        double y2 );
    IVShapePtr DrawSpline (
        SAFEARRAY * * xyArray,
        double Tolerance,
        short Flags );
    IVShapePtr DrawBezier (
        SAFEARRAY * * xyArray,
        short degree,
        short Flags );
    IVShapePtr DrawPolyline (
        SAFEARRAY * * xyArray,
        short Flags );
    HRESULT FitCurve (
        double Tolerance,
        short Flags );
    IVShapePtr Import (
        _bstr_t FileName );
    HRESULT CenterDrawing ( );
    IVShapePtr InsertFromFile (
        _bstr_t FileName,
        short Flags );
    IVShapePtr InsertObject (
        _bstr_t ClassOrProgID,
        short Flags );
    _bstr_t GetClassID ( );
    short GetForeignType ( );
    IDispatchPtr GetObject ( );
    IVWindowPtr OpenDrawWindow ( );
    IVWindowPtr OpenSheetWindow ( );
    short GetID16 ( );
    short DropMany (
        SAFEARRAY * * ObjectsToInstance,
        SAFEARRAY * * xyArray,
        SAFEARRAY * * IDArray );
    HRESULT GetFormulas (
        SAFEARRAY * * SRCStream,
        SAFEARRAY * * formulaArray );
    HRESULT GetResults (
        SAFEARRAY * * SRCStream,
        short Flags,
        SAFEARRAY * * UnitsNamesOrCodes,
        SAFEARRAY * * resultArray );
    short SetFormulas (
        SAFEARRAY * * SRCStream,
        SAFEARRAY * * formulaArray,
        short Flags );
    short SetResults (
        SAFEARRAY * * SRCStream,
        SAFEARRAY * * UnitsNamesOrCodes,
        SAFEARRAY * * resultArray,
        short Flags );
    IVConnectsPtr GetFromConnects ( );
    HRESULT Layout ( );
    HRESULT BoundingBox (
        short Flags,
        double * lpr8Left,
        double * lpr8Bottom,
        double * lpr8Right,
        double * lpr8Top );
    short HitTest (
        double xPos,
        double yPos,
        double Tolerance );
    IVHyperlinkPtr GetHyperlink ( );
    _bstr_t GetProgID ( );
    short GetObjectIsInherited ( );
    IVPathsPtr GetPaths ( );
    IVPathsPtr GetPathsLocal ( );
    IVHyperlinkPtr AddHyperlink ( );
    long GetID ( );
    long GetIndex ( );
    IVSectionPtr GetSection (
        short Index );
    IVHyperlinksPtr GetHyperlinks ( );
    short GetSpatialRelation (
        struct IVShape * OtherShape,
        double Tolerance,
        short Flags );
    double GetDistanceFrom (
        struct IVShape * OtherShape,
        short Flags );
    double GetDistanceFromPoint (
        double x,
        double y,
        short Flags,
        VARIANT * pvPathIndex,
        VARIANT * pvCurveIndex,
        VARIANT * pvt );
    IVSelectionPtr GetSpatialNeighbors (
        short Relation,
        double Tolerance,
        short Flags,
        const _variant_t & ResultRoot = vtMissing );
    IVSelectionPtr GetSpatialSearch (
        double x,
        double y,
        short Relation,
        double Tolerance,
        short Flags );
    HRESULT TransformXYTo (
        struct IVShape * OtherShape,
        double x,
        double y,
        double * xprime,
        double * yprime );
    HRESULT TransformXYFrom (
        struct IVShape * OtherShape,
        double x,
        double y,
        double * xprime,
        double * yprime );
    HRESULT XYToPage (
        double x,
        double y,
        double * xprime,
        double * yprime );
    HRESULT XYFromPage (
        double x,
        double y,
        double * xprime,
        double * yprime );
    HRESULT UpdateAlignmentBox ( );
    IVCellPtr GetCellsU (
        _bstr_t localeIndependentCellName );
    _bstr_t GetNameU ( );
    void PutNameU (
        _bstr_t lpLocaleIndependentName );
    short GetCellExistsU (
        _bstr_t localeIndependentCellName,
        short fExistsLocally );
    short DropManyU (
        SAFEARRAY * * ObjectsToInstance,
        SAFEARRAY * * xyArray,
        SAFEARRAY * * IDArray );
    HRESULT GetFormulasU (
        SAFEARRAY * * SRCStream,
        SAFEARRAY * * formulaArray );
    IVShapePtr DrawNURBS (
        short degree,
        short Flags,
        SAFEARRAY * * xyArray,
        SAFEARRAY * * knots,
        const _variant_t & weights = vtMissing );
    short GetCellsRowIndex (
        _bstr_t localeSpecificCellName );
    short GetCellsRowIndexU (
        _bstr_t localeIndependentCellName );
    VARIANT_BOOL GetIsOpenForTextEdit ( );
    IVShapePtr GetRootShape ( );
    IVShapePtr GetMasterShape ( );
    IPictureDisp * GetPicture ( );
    IVShapePtr Group ( );
    IVShapePtr Duplicate ( );
    HRESULT SwapEnds ( );
    void PutParent (
        IDispatch * lpdispRet );
    SAFEARRAY * GetForeignData ( );
    HRESULT Copy (
        const _variant_t & Flags = vtMissing );
    HRESULT Cut (
        const _variant_t & Flags = vtMissing );
    HRESULT Paste (
        const _variant_t & Flags = vtMissing );
    HRESULT PasteSpecial (
        long Format,
        const _variant_t & Link = vtMissing,
        const _variant_t & DisplayAsIcon = vtMissing );
    IVSelectionPtr CreateSelection (
        enum VisSelectionTypes SelType,
        enum VisSelectMode IterationMode,
        const _variant_t & Data = vtMissing );
    long GetLanguage ( );
    void PutLanguage (
        long lpLangID );
    HRESULT Offset (
        double Distance );
    IVShapePtr AddGuide (
        short Type,
        double xPos,
        double yPos );
    double GetAreaIU (
        VARIANT_BOOL fIncludeSubShapes );
    double GetLengthIU (
        VARIANT_BOOL fIncludeSubShapes );
    IVShapePtr DrawArcByThreePoints (
        double xBegin,
        double yBegin,
        double xEnd,
        double yEnd,
        double xControl,
        double yControl );
    IVShapePtr DrawQuarterArc (
        double xBegin,
        double yBegin,
        double xEnd,
        double yEnd,
        enum VisArcSweepFlags SweepFlag );
    IVShapePtr DrawCircularArc (
        double xCenter,
        double yCenter,
        double Radius,
        double StartAngle,
        double EndAngle );
    long GetContainingPageID ( );
    long GetContainingMasterID ( );
    HRESULT LinkToData (
        long DataRecordsetID,
        long RowID,
        VARIANT_BOOL ApplyDataGraphicAfterLink );
    HRESULT BreakLinkToData (
        long DataRecordsetID );
    long GetLinkedDataRow (
        long DataRecordsetID );
    HRESULT GetLinkedDataRecordsetIDs (
        SAFEARRAY * * DataRecordsetIDs );
    HRESULT GetCustomPropertiesLinkedToData (
        long DataRecordsetID,
        SAFEARRAY * * CustomPropertyIndices );
    VARIANT_BOOL IsCustomPropertyLinked (
        long DataRecordsetID,
        long CustomPropertyIndex );
    _bstr_t GetCustomPropertyLinkedColumn (
        long DataRecordsetID,
        long CustomPropertyIndex );
    HRESULT AutoConnect (
        struct IVShape * ToShape,
        enum VisAutoConnectDir PlacementDir,
        IUnknown * Connector );
    IVMasterPtr GetDataGraphic ( );
    void PutDataGraphic (
        struct IVMaster * DataGraphic );
    VARIANT_BOOL GetIsDataGraphicCallout ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_VoidGroup ( ) = 0;
      virtual HRESULT __stdcall raw_BringForward ( ) = 0;
      virtual HRESULT __stdcall raw_BringToFront ( ) = 0;
      virtual HRESULT __stdcall raw_ConvertToGroup ( ) = 0;
      virtual HRESULT __stdcall raw_FlipHorizontal ( ) = 0;
      virtual HRESULT __stdcall raw_FlipVertical ( ) = 0;
      virtual HRESULT __stdcall raw_ReverseEnds ( ) = 0;
      virtual HRESULT __stdcall raw_SendBackward ( ) = 0;
      virtual HRESULT __stdcall raw_SendToBack ( ) = 0;
      virtual HRESULT __stdcall raw_Rotate90 ( ) = 0;
      virtual HRESULT __stdcall raw_Ungroup ( ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Master (
        /*[out,retval]*/ struct IVMaster * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Cells (
        /*[in]*/ BSTR localeSpecificCellName,
        /*[out,retval]*/ struct IVCell * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_CellsSRC (
        /*[in]*/ short Section,
        /*[in]*/ short Row,
        /*[in]*/ short Column,
        /*[out,retval]*/ struct IVCell * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Shapes (
        /*[out,retval]*/ struct IVShapes * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Data1 (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Data1 (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_Data2 (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Data2 (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_Data3 (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Data3 (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_Help (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Help (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_NameID (
        /*[out,retval]*/ BSTR * lpLocaleIndependentName ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * lpLocaleSpecificName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR lpLocaleSpecificName ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_CharCount (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[out,retval]*/ struct IVCharacters * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_old_Copy ( ) = 0;
      virtual HRESULT __stdcall raw_old_Cut ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_VoidDuplicate ( ) = 0;
      virtual HRESULT __stdcall raw_Drop (
        /*[in]*/ IUnknown * ObjectToDrop,
        /*[in]*/ double xPos,
        /*[in]*/ double yPos,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_OneD (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_OneD (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_GeometryCount (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_RowCount (
        /*[in]*/ short Section,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_AddSection (
        /*[in]*/ short Section,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_DeleteSection (
        /*[in]*/ short Section ) = 0;
      virtual HRESULT __stdcall raw_AddRow (
        /*[in]*/ short Section,
        /*[in]*/ short Row,
        /*[in]*/ short RowTag,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_DeleteRow (
        /*[in]*/ short Section,
        /*[in]*/ short Row ) = 0;
      virtual HRESULT __stdcall get_RowsCellCount (
        /*[in]*/ short Section,
        /*[in]*/ short Row,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_RowType (
        /*[in]*/ short Section,
        /*[in]*/ short Row,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_RowType (
        /*[in]*/ short Section,
        /*[in]*/ short Row,
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_SetCenter (
        /*[in]*/ double xPos,
        /*[in]*/ double yPos ) = 0;
      virtual HRESULT __stdcall raw_SetBegin (
        /*[in]*/ double xPos,
        /*[in]*/ double yPos ) = 0;
      virtual HRESULT __stdcall raw_SetEnd (
        /*[in]*/ double xPos,
        /*[in]*/ double yPos ) = 0;
      virtual HRESULT __stdcall get_Connects (
        /*[out,retval]*/ struct IVConnects * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Index16 (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ BSTR * lpLocaleSpecificStyleName ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ BSTR lpLocaleSpecificStyleName ) = 0;
      virtual HRESULT __stdcall put_StyleKeepFmt (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_LineStyle (
        /*[out,retval]*/ BSTR * lpLocaleSpecificStyleName ) = 0;
      virtual HRESULT __stdcall put_LineStyle (
        /*[in]*/ BSTR lpLocaleSpecificStyleName ) = 0;
      virtual HRESULT __stdcall put_LineStyleKeepFmt (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_FillStyle (
        /*[out,retval]*/ BSTR * lpLocaleSpecificStyleName ) = 0;
      virtual HRESULT __stdcall put_FillStyle (
        /*[in]*/ BSTR lpLocaleSpecificStyleName ) = 0;
      virtual HRESULT __stdcall put_FillStyleKeepFmt (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_TextStyle (
        /*[out,retval]*/ BSTR * lpLocaleSpecificStyleName ) = 0;
      virtual HRESULT __stdcall put_TextStyle (
        /*[in]*/ BSTR lpLocaleSpecificStyleName ) = 0;
      virtual HRESULT __stdcall put_TextStyleKeepFmt (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall raw_Export (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall get_old_AreaIU (
        /*[out,retval]*/ double * lpr8Ret ) = 0;
      virtual HRESULT __stdcall get_old_LengthIU (
        /*[out,retval]*/ double * lpr8Ret ) = 0;
      virtual HRESULT __stdcall get_GeomExIf (
        /*[in]*/ short fFill,
        /*[in]*/ double LineRes,
        /*[out,retval]*/ IUnknown * * lpunkRet ) = 0;
      virtual HRESULT __stdcall get_UniqueID (
        /*[in]*/ short fUniqueID,
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_ContainingPage (
        /*[out,retval]*/ struct IVPage * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ContainingMaster (
        /*[out,retval]*/ struct IVMaster * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ContainingShape (
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_SectionExists (
        /*[in]*/ short Section,
        /*[in]*/ short fExistsLocally,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_RowExists (
        /*[in]*/ short Section,
        /*[in]*/ short Row,
        /*[in]*/ short fExistsLocally,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_CellExists (
        /*[in]*/ BSTR localeSpecificCellName,
        /*[in]*/ short fExistsLocally,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_CellsSRCExists (
        /*[in]*/ short Section,
        /*[in]*/ short Row,
        /*[in]*/ short Column,
        /*[in]*/ short fExistsLocally,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_LayerCount (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Layer (
        /*[in]*/ short Index,
        /*[out,retval]*/ struct IVLayer * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_AddNamedRow (
        /*[in]*/ short Section,
        /*[in]*/ BSTR RowName,
        /*[in]*/ short RowTag,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_AddRows (
        /*[in]*/ short Section,
        /*[in]*/ short Row,
        /*[in]*/ short RowTag,
        /*[in]*/ short RowCount,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_EventList (
        /*[out,retval]*/ struct IVEventList * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PersistsEvents (
        /*[out,retval]*/ short * lpboolRet ) = 0;
      virtual HRESULT __stdcall raw_DrawLine (
        /*[in]*/ double xBegin,
        /*[in]*/ double yBegin,
        /*[in]*/ double xEnd,
        /*[in]*/ double yEnd,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_DrawRectangle (
        /*[in]*/ double x1,
        /*[in]*/ double y1,
        /*[in]*/ double x2,
        /*[in]*/ double y2,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_DrawOval (
        /*[in]*/ double x1,
        /*[in]*/ double y1,
        /*[in]*/ double x2,
        /*[in]*/ double y2,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_DrawSpline (
        /*[in]*/ SAFEARRAY * * xyArray,
        /*[in]*/ double Tolerance,
        /*[in]*/ short Flags,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_DrawBezier (
        /*[in]*/ SAFEARRAY * * xyArray,
        /*[in]*/ short degree,
        /*[in]*/ short Flags,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_DrawPolyline (
        /*[in]*/ SAFEARRAY * * xyArray,
        /*[in]*/ short Flags,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_FitCurve (
        /*[in]*/ double Tolerance,
        /*[in]*/ short Flags ) = 0;
      virtual HRESULT __stdcall raw_Import (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_CenterDrawing ( ) = 0;
      virtual HRESULT __stdcall raw_InsertFromFile (
        /*[in]*/ BSTR FileName,
        /*[in]*/ short Flags,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_InsertObject (
        /*[in]*/ BSTR ClassOrProgID,
        /*[in]*/ short Flags,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ClassID (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_ForeignType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Object (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_OpenDrawWindow (
        /*[out,retval]*/ struct IVWindow * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_OpenSheetWindow (
        /*[out,retval]*/ struct IVWindow * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ID16 (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_DropMany (
        /*[in]*/ SAFEARRAY * * ObjectsToInstance,
        /*[in]*/ SAFEARRAY * * xyArray,
        /*[out]*/ SAFEARRAY * * IDArray,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_GetFormulas (
        /*[in]*/ SAFEARRAY * * SRCStream,
        /*[out]*/ SAFEARRAY * * formulaArray ) = 0;
      virtual HRESULT __stdcall raw_GetResults (
        /*[in]*/ SAFEARRAY * * SRCStream,
        /*[in]*/ short Flags,
        /*[in]*/ SAFEARRAY * * UnitsNamesOrCodes,
        /*[out]*/ SAFEARRAY * * resultArray ) = 0;
      virtual HRESULT __stdcall raw_SetFormulas (
        /*[in]*/ SAFEARRAY * * SRCStream,
        /*[in]*/ SAFEARRAY * * formulaArray,
        /*[in]*/ short Flags,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_SetResults (
        /*[in]*/ SAFEARRAY * * SRCStream,
        /*[in]*/ SAFEARRAY * * UnitsNamesOrCodes,
        /*[in]*/ SAFEARRAY * * resultArray,
        /*[in]*/ short Flags,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_FromConnects (
        /*[out,retval]*/ struct IVConnects * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_Layout ( ) = 0;
      virtual HRESULT __stdcall raw_BoundingBox (
        /*[in]*/ short Flags,
        /*[out]*/ double * lpr8Left,
        /*[out]*/ double * lpr8Bottom,
        /*[out]*/ double * lpr8Right,
        /*[out]*/ double * lpr8Top ) = 0;
      virtual HRESULT __stdcall raw_HitTest (
        /*[in]*/ double xPos,
        /*[in]*/ double yPos,
        /*[in]*/ double Tolerance,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Hyperlink (
        /*[out,retval]*/ struct IVHyperlink * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ProgID (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_ObjectIsInherited (
        /*[out,retval]*/ short * lpboolRet ) = 0;
      virtual HRESULT __stdcall get_Paths (
        /*[out,retval]*/ struct IVPaths * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PathsLocal (
        /*[out,retval]*/ struct IVPaths * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_AddHyperlink (
        /*[out,retval]*/ struct IVHyperlink * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_Section (
        /*[in]*/ short Index,
        /*[out,retval]*/ struct IVSection * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Hyperlinks (
        /*[out,retval]*/ struct IVHyperlinks * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_SpatialRelation (
        /*[in]*/ struct IVShape * OtherShape,
        /*[in]*/ double Tolerance,
        /*[in]*/ short Flags,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_DistanceFrom (
        /*[in]*/ struct IVShape * OtherShape,
        /*[in]*/ short Flags,
        /*[out,retval]*/ double * lpr8Ret ) = 0;
      virtual HRESULT __stdcall get_DistanceFromPoint (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ short Flags,
        /*[out]*/ VARIANT * pvPathIndex,
        /*[out]*/ VARIANT * pvCurveIndex,
        /*[out]*/ VARIANT * pvt,
        /*[out,retval]*/ double * lpr8Ret ) = 0;
      virtual HRESULT __stdcall get_SpatialNeighbors (
        /*[in]*/ short Relation,
        /*[in]*/ double Tolerance,
        /*[in]*/ short Flags,
        /*[in]*/ VARIANT ResultRoot,
        /*[out,retval]*/ struct IVSelection * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_SpatialSearch (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ short Relation,
        /*[in]*/ double Tolerance,
        /*[in]*/ short Flags,
        /*[out,retval]*/ struct IVSelection * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_TransformXYTo (
        /*[in]*/ struct IVShape * OtherShape,
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[out]*/ double * xprime,
        /*[out]*/ double * yprime ) = 0;
      virtual HRESULT __stdcall raw_TransformXYFrom (
        /*[in]*/ struct IVShape * OtherShape,
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[out]*/ double * xprime,
        /*[out]*/ double * yprime ) = 0;
      virtual HRESULT __stdcall raw_XYToPage (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[out]*/ double * xprime,
        /*[out]*/ double * yprime ) = 0;
      virtual HRESULT __stdcall raw_XYFromPage (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[out]*/ double * xprime,
        /*[out]*/ double * yprime ) = 0;
      virtual HRESULT __stdcall raw_UpdateAlignmentBox ( ) = 0;
      virtual HRESULT __stdcall get_CellsU (
        /*[in]*/ BSTR localeIndependentCellName,
        /*[out,retval]*/ struct IVCell * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_NameU (
        /*[out,retval]*/ BSTR * lpLocaleIndependentName ) = 0;
      virtual HRESULT __stdcall put_NameU (
        /*[in]*/ BSTR lpLocaleIndependentName ) = 0;
      virtual HRESULT __stdcall get_CellExistsU (
        /*[in]*/ BSTR localeIndependentCellName,
        /*[in]*/ short fExistsLocally,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_DropManyU (
        /*[in]*/ SAFEARRAY * * ObjectsToInstance,
        /*[in]*/ SAFEARRAY * * xyArray,
        /*[out]*/ SAFEARRAY * * IDArray,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_GetFormulasU (
        /*[in]*/ SAFEARRAY * * SRCStream,
        /*[out]*/ SAFEARRAY * * formulaArray ) = 0;
      virtual HRESULT __stdcall raw_DrawNURBS (
        /*[in]*/ short degree,
        /*[in]*/ short Flags,
        /*[in]*/ SAFEARRAY * * xyArray,
        /*[in]*/ SAFEARRAY * * knots,
        /*[in]*/ VARIANT weights,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_CellsRowIndex (
        /*[in]*/ BSTR localeSpecificCellName,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_CellsRowIndexU (
        /*[in]*/ BSTR localeIndependentCellName,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_IsOpenForTextEdit (
        /*[out,retval]*/ VARIANT_BOOL * pbOpenForTextEdit ) = 0;
      virtual HRESULT __stdcall get_RootShape (
        /*[out,retval]*/ struct IVShape * * ppRootShape ) = 0;
      virtual HRESULT __stdcall get_MasterShape (
        /*[out,retval]*/ struct IVShape * * ppMasterShape ) = 0;
      virtual HRESULT __stdcall get_Picture (
        /*[out,retval]*/ IPictureDisp * * ppPictureDisp ) = 0;
      virtual HRESULT __stdcall raw_Group (
        /*[out,retval]*/ struct IVShape * * ppShape ) = 0;
      virtual HRESULT __stdcall raw_Duplicate (
        /*[out,retval]*/ struct IVShape * * ppShape ) = 0;
      virtual HRESULT __stdcall raw_SwapEnds ( ) = 0;
      virtual HRESULT __stdcall put_Parent (
        /*[in]*/ IDispatch * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ForeignData (
        /*[out,retval]*/ SAFEARRAY * * pData ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[in]*/ VARIANT Flags = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Cut (
        /*[in]*/ VARIANT Flags = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Paste (
        /*[in]*/ VARIANT Flags = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_PasteSpecial (
        /*[in]*/ long Format,
        /*[in]*/ VARIANT Link = vtMissing,
        /*[in]*/ VARIANT DisplayAsIcon = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_CreateSelection (
        /*[in]*/ enum VisSelectionTypes SelType,
        /*[in]*/ enum VisSelectMode IterationMode,
        /*[in]*/ VARIANT Data,
        /*[out,retval]*/ struct IVSelection * * ppSelection ) = 0;
      virtual HRESULT __stdcall get_Language (
        /*[out,retval]*/ long * lpLangID ) = 0;
      virtual HRESULT __stdcall put_Language (
        /*[in]*/ long lpLangID ) = 0;
      virtual HRESULT __stdcall raw_Offset (
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall raw_AddGuide (
        /*[in]*/ short Type,
        /*[in]*/ double xPos,
        /*[in]*/ double yPos,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_AreaIU (
        /*[in]*/ VARIANT_BOOL fIncludeSubShapes,
        /*[out,retval]*/ double * lpr8Ret ) = 0;
      virtual HRESULT __stdcall get_LengthIU (
        /*[in]*/ VARIANT_BOOL fIncludeSubShapes,
        /*[out,retval]*/ double * lpr8Ret ) = 0;
      virtual HRESULT __stdcall raw_DrawArcByThreePoints (
        /*[in]*/ double xBegin,
        /*[in]*/ double yBegin,
        /*[in]*/ double xEnd,
        /*[in]*/ double yEnd,
        /*[in]*/ double xControl,
        /*[in]*/ double yControl,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_DrawQuarterArc (
        /*[in]*/ double xBegin,
        /*[in]*/ double yBegin,
        /*[in]*/ double xEnd,
        /*[in]*/ double yEnd,
        /*[in]*/ enum VisArcSweepFlags SweepFlag,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_DrawCircularArc (
        /*[in]*/ double xCenter,
        /*[in]*/ double yCenter,
        /*[in]*/ double Radius,
        /*[in]*/ double StartAngle,
        /*[in]*/ double EndAngle,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ContainingPageID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_ContainingMasterID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall raw_LinkToData (
        /*[in]*/ long DataRecordsetID,
        /*[in]*/ long RowID,
        /*[in]*/ VARIANT_BOOL ApplyDataGraphicAfterLink ) = 0;
      virtual HRESULT __stdcall raw_BreakLinkToData (
        /*[in]*/ long DataRecordsetID ) = 0;
      virtual HRESULT __stdcall raw_GetLinkedDataRow (
        /*[in]*/ long DataRecordsetID,
        /*[out,retval]*/ long * DataRowID ) = 0;
      virtual HRESULT __stdcall raw_GetLinkedDataRecordsetIDs (
        /*[out]*/ SAFEARRAY * * DataRecordsetIDs ) = 0;
      virtual HRESULT __stdcall raw_GetCustomPropertiesLinkedToData (
        /*[in]*/ long DataRecordsetID,
        /*[out]*/ SAFEARRAY * * CustomPropertyIndices ) = 0;
      virtual HRESULT __stdcall raw_IsCustomPropertyLinked (
        /*[in]*/ long DataRecordsetID,
        /*[in]*/ long CustomPropertyIndex,
        /*[out,retval]*/ VARIANT_BOOL * Status ) = 0;
      virtual HRESULT __stdcall raw_GetCustomPropertyLinkedColumn (
        /*[in]*/ long DataRecordsetID,
        /*[in]*/ long CustomPropertyIndex,
        /*[out,retval]*/ BSTR * ColumnName ) = 0;
      virtual HRESULT __stdcall raw_AutoConnect (
        /*[in]*/ struct IVShape * ToShape,
        /*[in]*/ enum VisAutoConnectDir PlacementDir,
        /*[in]*/ IUnknown * Connector ) = 0;
      virtual HRESULT __stdcall get_DataGraphic (
        /*[out,retval]*/ struct IVMaster * * DataGraphic ) = 0;
      virtual HRESULT __stdcall put_DataGraphic (
        /*[in]*/ struct IVMaster * DataGraphic ) = 0;
      virtual HRESULT __stdcall get_IsDataGraphicCallout (
        /*[out,retval]*/ VARIANT_BOOL * pbDataGraphicCallout ) = 0;
};

struct __declspec(uuid("000d071f-0000-0000-c000-000000000046"))
IVOLEObject : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetObject))
    IDispatchPtr Object;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetShape))
    IVShapePtr Shape;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetClassID))
    _bstr_t ClassID;
    __declspec(property(get=GetProgID))
    _bstr_t ProgID;
    __declspec(property(get=GetForeignType))
    short ForeignType;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    IVShapePtr GetShape ( );
    short GetObjectType ( );
    short GetStat ( );
    _bstr_t GetClassID ( );
    _bstr_t GetProgID ( );
    short GetForeignType ( );
    IDispatchPtr GetObject ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Shape (
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ClassID (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_ProgID (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_ForeignType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Object (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
};

struct __declspec(uuid("000d071e-0000-0000-c000-000000000046"))
IVOLEObjects : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVOLEObjectPtr Item[];
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetCount16))
    short Count16;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    short GetObjectType ( );
    short GetStat ( );
    IVOLEObjectPtr GetItem (
        const _variant_t & NameOrIndex );
    short GetCount16 ( );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT NameOrIndex,
        /*[out,retval]*/ struct IVOLEObject * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Count16 (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppEnum ) = 0;
};

struct __declspec(uuid("000d071d-0000-0000-c000-000000000046"))
IVHyperlink : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetShape))
    IVShapePtr Shape;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetAddress,put=PutAddress))
    _bstr_t Address;
    __declspec(property(get=GetSubAddress,put=PutSubAddress))
    _bstr_t SubAddress;
    __declspec(property(get=GetNewWindow,put=PutNewWindow))
    short NewWindow;
    __declspec(property(get=GetExtraInfo,put=PutExtraInfo))
    _bstr_t ExtraInfo;
    __declspec(property(get=GetFrame,put=PutFrame))
    _bstr_t Frame;
    __declspec(property(get=GetRow))
    short Row;
    __declspec(property(get=GetIsDefaultLink,put=PutIsDefaultLink))
    short IsDefaultLink;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetNameU,put=PutNameU))
    _bstr_t NameU;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetDescription ( );
    void PutDescription (
        _bstr_t lpbstrRet );
    IVApplicationPtr GetApplication ( );
    IVShapePtr GetShape ( );
    short GetObjectType ( );
    short GetStat ( );
    _bstr_t GetAddress ( );
    void PutAddress (
        _bstr_t lpbstrRet );
    _bstr_t GetSubAddress ( );
    void PutSubAddress (
        _bstr_t lpbstrRet );
    short GetNewWindow ( );
    void PutNewWindow (
        short lpi2Ret );
    _bstr_t GetExtraInfo ( );
    void PutExtraInfo (
        _bstr_t lpbstrRet );
    _bstr_t GetFrame ( );
    void PutFrame (
        _bstr_t lpbstrRet );
    HRESULT AddToFavorites (
        const _variant_t & FavoritesTitle = vtMissing );
    HRESULT Follow ( );
    HRESULT Delete ( );
    HRESULT Copy ( );
    _bstr_t CreateURL (
        short CanonicalForm );
    short GetRow ( );
    short GetIsDefaultLink ( );
    void PutIsDefaultLink (
        short lpi2Ret );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t lpLocaleSpecificName );
    _bstr_t GetNameU ( );
    void PutNameU (
        _bstr_t lpLocaleIndepenentName );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Shape (
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Address (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Address (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_SubAddress (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_SubAddress (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_NewWindow (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_NewWindow (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ExtraInfo (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_ExtraInfo (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_Frame (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Frame (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall raw_AddToFavorites (
        /*[in]*/ VARIANT FavoritesTitle = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Follow ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Copy ( ) = 0;
      virtual HRESULT __stdcall raw_CreateURL (
        /*[in]*/ short CanonicalForm,
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_Row (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_IsDefaultLink (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_IsDefaultLink (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * lpLocaleSpecificName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR lpLocaleSpecificName ) = 0;
      virtual HRESULT __stdcall get_NameU (
        /*[out,retval]*/ BSTR * lpLocaleIndepenentName ) = 0;
      virtual HRESULT __stdcall put_NameU (
        /*[in]*/ BSTR lpLocaleIndepenentName ) = 0;
};

struct __declspec(uuid("000d0723-0000-0000-c000-000000000046"))
IVHyperlinks : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVHyperlinkPtr Item[];
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetShape))
    IVShapePtr Shape;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetCount))
    short Count;
    __declspec(property(get=GetItemU))
    IVHyperlinkPtr ItemU[];
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    IVShapePtr GetShape ( );
    short GetObjectType ( );
    short GetStat ( );
    IVHyperlinkPtr GetItem (
        const _variant_t & NameOrIndex );
    short GetCount ( );
    IVHyperlinkPtr Add ( );
    IUnknownPtr Get_NewEnum ( );
    IVHyperlinkPtr GetItemU (
        const _variant_t & NameOrIndex );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Shape (
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT NameOrIndex,
        /*[out,retval]*/ struct IVHyperlink * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[out,retval]*/ struct IVHyperlink * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppEnum ) = 0;
      virtual HRESULT __stdcall get_ItemU (
        /*[in]*/ VARIANT NameOrIndex,
        /*[out,retval]*/ struct IVHyperlink * * lpdispRet ) = 0;
};

struct __declspec(uuid("000d0d10-0000-0000-c000-000000000046"))
IVAmbients : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetForeColor))
    long ForeColor;
    __declspec(property(get=GetFont))
    IDispatchPtr Font;
    __declspec(property(get=GetDisplayName))
    _bstr_t DisplayName;
    __declspec(property(get=GetBackColor))
    long BackColor;
    __declspec(property(get=GetShape))
    IVShapePtr Shape;
    __declspec(property(get=GetAppearance))
    long Appearance;
    __declspec(property(get=GetAutoClip))
    VARIANT_BOOL AutoClip;
    __declspec(property(get=GetSupportsMnemonics))
    VARIANT_BOOL SupportsMnemonics;
    __declspec(property(get=GetDisplayAsDefault))
    VARIANT_BOOL DisplayAsDefault;
    __declspec(property(get=GetShowHatching))
    VARIANT_BOOL ShowHatching;
    __declspec(property(get=GetShowGrabHandles))
    VARIANT_BOOL ShowGrabHandles;
    __declspec(property(get=GetUIDead))
    VARIANT_BOOL UIDead;
    __declspec(property(get=GetUserMode))
    VARIANT_BOOL UserMode;
    __declspec(property(get=GetTextAlign))
    short TextAlign;
    __declspec(property(get=GetScaleUnits))
    _bstr_t ScaleUnits;
    __declspec(property(get=GetMessageReflect))
    VARIANT_BOOL MessageReflect;
    __declspec(property(get=GetLocaleID))
    long LocaleID;

    //
    // Wrapper methods for error-handling
    //

    long GetBackColor ( );
    _bstr_t GetDisplayName ( );
    IDispatchPtr GetFont ( );
    long GetForeColor ( );
    long GetLocaleID ( );
    VARIANT_BOOL GetMessageReflect ( );
    _bstr_t GetScaleUnits ( );
    short GetTextAlign ( );
    VARIANT_BOOL GetUserMode ( );
    VARIANT_BOOL GetUIDead ( );
    VARIANT_BOOL GetShowGrabHandles ( );
    VARIANT_BOOL GetShowHatching ( );
    VARIANT_BOOL GetDisplayAsDefault ( );
    VARIANT_BOOL GetSupportsMnemonics ( );
    VARIANT_BOOL GetAutoClip ( );
    long GetAppearance ( );
    IVShapePtr GetShape ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_BackColor (
        /*[out,retval]*/ long * lpColorRet ) = 0;
      virtual HRESULT __stdcall get_DisplayName (
        /*[out,retval]*/ BSTR * bstr ) = 0;
      virtual HRESULT __stdcall get_Font (
        /*[out,retval]*/ IDispatch * * ppDisp ) = 0;
      virtual HRESULT __stdcall get_ForeColor (
        /*[out,retval]*/ long * lpColorRet ) = 0;
      virtual HRESULT __stdcall get_LocaleID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_MessageReflect (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall get_ScaleUnits (
        /*[out,retval]*/ BSTR * bstr ) = 0;
      virtual HRESULT __stdcall get_TextAlign (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_UserMode (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall get_UIDead (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall get_ShowGrabHandles (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall get_ShowHatching (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall get_DisplayAsDefault (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall get_SupportsMnemonics (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall get_AutoClip (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall get_Appearance (
        /*[out,retval]*/ long * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Shape (
        /*[out,retval]*/ struct IVShape * * ppShape ) = 0;
};

struct __declspec(uuid("000d0d11-0000-0000-c000-000000000046"))
IVClientSite : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetShape))
    IVShapePtr Shape;

    //
    // Wrapper methods for error-handling
    //

    IVShapePtr GetShape ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Shape (
        /*[out,retval]*/ struct IVShape * * ppShape ) = 0;
};

struct __declspec(uuid("000d0701-0000-0000-c000-000000000046"))
IVCell : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetResultIU,put=PutResultIU))
    double ResultIU;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetError))
    short Error;
    __declspec(property(get=GetFormula,put=PutFormula))
    _bstr_t Formula;
    __declspec(property(put=PutFormulaForce))
    _bstr_t FormulaForce;
    __declspec(property(get=GetResult,put=PutResult))
    double Result[];
    __declspec(property(put=PutResultForce))
    double ResultForce[];
    __declspec(property(put=PutResultIUForce))
    double ResultIUForce;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetUnits))
    short Units;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetLocalName))
    _bstr_t LocalName;
    __declspec(property(get=GetRowName,put=PutRowName))
    _bstr_t RowName;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetShape))
    IVShapePtr Shape;
    __declspec(property(get=GetStyle))
    IVStylePtr Style;
    __declspec(property(get=GetSection))
    short Section;
    __declspec(property(get=GetRow))
    short Row;
    __declspec(property(get=GetColumn))
    short Column;
    __declspec(property(get=GetIsConstant))
    short IsConstant;
    __declspec(property(get=GetIsInherited))
    short IsInherited;
    __declspec(property(get=GetResultInt))
    long ResultInt[][];
    __declspec(property(put=PutResultFromIntForce))
    long ResultFromIntForce[];
    __declspec(property(get=GetResultStr))
    _bstr_t ResultStr[];
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;
    __declspec(property(get=GetPersistsEvents))
    short PersistsEvents;
    __declspec(property(get=GetContainingRow))
    IVRowPtr ContainingRow;
    __declspec(property(get=GetFormulaU,put=PutFormulaU))
    _bstr_t FormulaU;
    __declspec(property(put=PutFormulaForceU))
    _bstr_t FormulaForceU;
    __declspec(property(get=GetRowNameU,put=PutRowNameU))
    _bstr_t RowNameU;
    __declspec(property(put=PutResultFromInt))
    long ResultFromInt[];
    __declspec(property(get=GetInheritedValueSource))
    IVCellPtr InheritedValueSource;
    __declspec(property(get=GetInheritedFormulaSource))
    IVCellPtr InheritedFormulaSource;
    __declspec(property(get=GetDependents))
    SAFEARRAY * Dependents;
    __declspec(property(get=GetPrecedents))
    SAFEARRAY * Precedents;
    __declspec(property(get=GetContainingPageID))
    long ContainingPageID;
    __declspec(property(get=GetContainingMasterID))
    long ContainingMasterID;
    __declspec(property(get=GetResultStrU))
    _bstr_t ResultStrU[];

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    short GetObjectType ( );
    short GetError ( );
    _bstr_t GetFormula ( );
    void PutFormula (
        _bstr_t lpbstrRet );
    void PutFormulaForce (
        _bstr_t _arg1 );
    HRESULT GlueTo (
        struct IVCell * CellObject );
    HRESULT GlueToPos (
        struct IVShape * SheetObject,
        double xPercent,
        double yPercent );
    double GetResult (
        const _variant_t & UnitsNameOrCode );
    void PutResult (
        const _variant_t & UnitsNameOrCode,
        double lpr8Ret );
    void PutResultForce (
        const _variant_t & UnitsNameOrCode,
        double _arg2 );
    double GetResultIU ( );
    void PutResultIU (
        double lpr8Ret );
    void PutResultIUForce (
        double _arg1 );
    short GetStat ( );
    short GetUnits ( );
    _bstr_t GetName ( );
    _bstr_t GetLocalName ( );
    void PutRowName (
        _bstr_t lpbstrRet );
    IVDocumentPtr GetDocument ( );
    IVShapePtr GetShape ( );
    IVStylePtr GetStyle ( );
    short GetSection ( );
    short GetRow ( );
    short GetColumn ( );
    short GetIsConstant ( );
    short GetIsInherited ( );
    long GetResultInt (
        const _variant_t & UnitsNameOrCode,
        short fRound );
    void PutResultFromInt (
        const _variant_t & UnitsNameOrCode,
        long _arg2 );
    void PutResultFromIntForce (
        const _variant_t & UnitsNameOrCode,
        long _arg2 );
    _bstr_t GetResultStr (
        const _variant_t & UnitsNameOrCode );
    HRESULT Trigger ( );
    _bstr_t GetRowName ( );
    IVEventListPtr GetEventList ( );
    short GetPersistsEvents ( );
    IVRowPtr GetContainingRow ( );
    _bstr_t GetFormulaU ( );
    void PutFormulaU (
        _bstr_t lpbstrRet );
    void PutFormulaForceU (
        _bstr_t _arg1 );
    _bstr_t GetRowNameU ( );
    void PutRowNameU (
        _bstr_t lpLocaleIndependentName );
    IVCellPtr GetInheritedValueSource ( );
    IVCellPtr GetInheritedFormulaSource ( );
    SAFEARRAY * GetDependents ( );
    SAFEARRAY * GetPrecedents ( );
    long GetContainingPageID ( );
    long GetContainingMasterID ( );
    _bstr_t GetResultStrU (
        const _variant_t & UnitsNameOrCode );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Error (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_FormulaForce (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall raw_GlueTo (
        /*[in]*/ struct IVCell * CellObject ) = 0;
      virtual HRESULT __stdcall raw_GlueToPos (
        /*[in]*/ struct IVShape * SheetObject,
        /*[in]*/ double xPercent,
        /*[in]*/ double yPercent ) = 0;
      virtual HRESULT __stdcall get_Result (
        /*[in]*/ VARIANT UnitsNameOrCode,
        /*[out,retval]*/ double * lpr8Ret ) = 0;
      virtual HRESULT __stdcall put_Result (
        /*[in]*/ VARIANT UnitsNameOrCode,
        /*[in]*/ double lpr8Ret ) = 0;
      virtual HRESULT __stdcall put_ResultForce (
        /*[in]*/ VARIANT UnitsNameOrCode,
        /*[in]*/ double _arg2 ) = 0;
      virtual HRESULT __stdcall get_ResultIU (
        /*[out,retval]*/ double * lpr8Ret ) = 0;
      virtual HRESULT __stdcall put_ResultIU (
        /*[in]*/ double lpr8Ret ) = 0;
      virtual HRESULT __stdcall put_ResultIUForce (
        /*[in]*/ double _arg1 ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Units (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * lpLocaleIndependentName ) = 0;
      virtual HRESULT __stdcall get_LocalName (
        /*[out,retval]*/ BSTR * lpLocaleSpecificName ) = 0;
      virtual HRESULT __stdcall put_RowName (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Shape (
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ struct IVStyle * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Section (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Row (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Column (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_IsConstant (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_IsInherited (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ResultInt (
        /*[in]*/ VARIANT UnitsNameOrCode,
        /*[in]*/ short fRound,
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall put_ResultFromInt (
        /*[in]*/ VARIANT UnitsNameOrCode,
        /*[in]*/ long _arg2 ) = 0;
      virtual HRESULT __stdcall put_ResultFromIntForce (
        /*[in]*/ VARIANT UnitsNameOrCode,
        /*[in]*/ long _arg2 ) = 0;
      virtual HRESULT __stdcall get_ResultStr (
        /*[in]*/ VARIANT UnitsNameOrCode,
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall raw_Trigger ( ) = 0;
      virtual HRESULT __stdcall get_RowName (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_EventList (
        /*[out,retval]*/ struct IVEventList * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PersistsEvents (
        /*[out,retval]*/ short * lpboolRet ) = 0;
      virtual HRESULT __stdcall get_ContainingRow (
        /*[out,retval]*/ struct IVRow * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_FormulaU (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_FormulaU (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_FormulaForceU (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_RowNameU (
        /*[out,retval]*/ BSTR * lpLocaleIndependentName ) = 0;
      virtual HRESULT __stdcall put_RowNameU (
        /*[in]*/ BSTR lpLocaleIndependentName ) = 0;
      virtual HRESULT __stdcall get_InheritedValueSource (
        /*[out,retval]*/ struct IVCell * * ppCell ) = 0;
      virtual HRESULT __stdcall get_InheritedFormulaSource (
        /*[out,retval]*/ struct IVCell * * ppCell ) = 0;
      virtual HRESULT __stdcall get_Dependents (
        /*[out,retval]*/ SAFEARRAY * * dependentCellsArray ) = 0;
      virtual HRESULT __stdcall get_Precedents (
        /*[out,retval]*/ SAFEARRAY * * precedentCellsArray ) = 0;
      virtual HRESULT __stdcall get_ContainingPageID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_ContainingMasterID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_ResultStrU (
        /*[in]*/ VARIANT UnitsNameOrCode,
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
};

struct __declspec(uuid("000d0703-0000-0000-c000-000000000046"))
IVConnect : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFromSheet))
    IVShapePtr FromSheet;
    __declspec(property(get=GetToSheet))
    IVShapePtr ToSheet;
    __declspec(property(get=GetFromCell))
    IVCellPtr FromCell;
    __declspec(property(get=GetToCell))
    IVCellPtr ToCell;
    __declspec(property(get=GetFromPart))
    short FromPart;
    __declspec(property(get=GetToPart))
    short ToPart;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetIndex16))
    short Index16;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetContainingPageID))
    long ContainingPageID;
    __declspec(property(get=GetContainingMasterID))
    long ContainingMasterID;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    short GetStat ( );
    IVShapePtr GetFromSheet ( );
    IVShapePtr GetToSheet ( );
    IVCellPtr GetFromCell ( );
    IVCellPtr GetToCell ( );
    short GetFromPart ( );
    short GetToPart ( );
    short GetObjectType ( );
    short GetIndex16 ( );
    IVDocumentPtr GetDocument ( );
    long GetIndex ( );
    long GetContainingPageID ( );
    long GetContainingMasterID ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_FromSheet (
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ToSheet (
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_FromCell (
        /*[out,retval]*/ struct IVCell * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ToCell (
        /*[out,retval]*/ struct IVCell * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_FromPart (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ToPart (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Index16 (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_ContainingPageID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_ContainingMasterID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
};

struct __declspec(uuid("000d0704-0000-0000-c000-000000000046"))
IVConnects : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVConnectPtr Item[];
    __declspec(property(get=GetCount16))
    short Count16;
    __declspec(property(get=GetFromSheet))
    IVShapePtr FromSheet;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetItem16))
    IVConnectPtr Item16[];
    __declspec(property(get=GetToSheet))
    IVShapePtr ToSheet;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    IVConnectPtr GetItem16 (
        short Index );
    short GetCount16 ( );
    IVShapePtr GetFromSheet ( );
    short GetObjectType ( );
    IVDocumentPtr GetDocument ( );
    short GetStat ( );
    IVShapePtr GetToSheet ( );
    IVConnectPtr GetItem (
        long Index );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Item16 (
        /*[in]*/ short Index,
        /*[out,retval]*/ struct IVConnect * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Count16 (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_FromSheet (
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ToSheet (
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IVConnect * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppEnum ) = 0;
};

struct __declspec(uuid("000d070e-0000-0000-c000-000000000046"))
IVStyle : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetIndex16))
    short Index16;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetBasedOn,put=PutBasedOn))
    _bstr_t BasedOn;
    __declspec(property(get=GetTextBasedOn,put=PutTextBasedOn))
    _bstr_t TextBasedOn;
    __declspec(property(get=GetLineBasedOn,put=PutLineBasedOn))
    _bstr_t LineBasedOn;
    __declspec(property(get=GetFillBasedOn,put=PutFillBasedOn))
    _bstr_t FillBasedOn;
    __declspec(property(get=GetIncludesText,put=PutIncludesText))
    short IncludesText;
    __declspec(property(get=GetIncludesLine,put=PutIncludesLine))
    short IncludesLine;
    __declspec(property(get=GetIncludesFill,put=PutIncludesFill))
    short IncludesFill;
    __declspec(property(get=GetCells))
    IVCellPtr Cells[];
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;
    __declspec(property(get=GetPersistsEvents))
    short PersistsEvents;
    __declspec(property(get=GetID16))
    short ID16;
    __declspec(property(get=GetID))
    long ID;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetSection))
    IVSectionPtr Section[];
    __declspec(property(get=GetHidden,put=PutHidden))
    short Hidden;
    __declspec(property(get=GetNameU,put=PutNameU))
    _bstr_t NameU;
    __declspec(property(get=GetCellsU))
    IVCellPtr CellsU[];
    __declspec(property(get=GetCellExists))
    short CellExists[][];
    __declspec(property(get=GetCellExistsU))
    short CellExistsU[][];
    __declspec(property(get=GetCellsSRC))
    IVCellPtr CellsSRC[][][];
    __declspec(property(get=GetCellsSRCExists))
    short CellsSRCExists[][][][];

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    short GetStat ( );
    short GetObjectType ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t localeSpecificCellName );
    short GetIndex16 ( );
    IVDocumentPtr GetDocument ( );
    _bstr_t GetBasedOn ( );
    void PutBasedOn (
        _bstr_t lpLocaleSpecificStyleName );
    _bstr_t GetTextBasedOn ( );
    void PutTextBasedOn (
        _bstr_t lpLocaleSpecificStyleName );
    _bstr_t GetLineBasedOn ( );
    void PutLineBasedOn (
        _bstr_t lpLocaleSpecificStyleName );
    _bstr_t GetFillBasedOn ( );
    void PutFillBasedOn (
        _bstr_t lpLocaleSpecificStyleName );
    short GetIncludesText ( );
    void PutIncludesText (
        short lpi2Ret );
    short GetIncludesLine ( );
    void PutIncludesLine (
        short lpi2Ret );
    short GetIncludesFill ( );
    void PutIncludesFill (
        short lpi2Ret );
    IVCellPtr GetCells (
        _bstr_t localeSpecificCellName );
    HRESULT Delete ( );
    IVEventListPtr GetEventList ( );
    short GetPersistsEvents ( );
    short GetID16 ( );
    HRESULT GetFormulas (
        SAFEARRAY * * SRCStream,
        SAFEARRAY * * formulaArray );
    HRESULT GetResults (
        SAFEARRAY * * SRCStream,
        short Flags,
        SAFEARRAY * * UnitsNamesOrCodes,
        SAFEARRAY * * resultArray );
    short SetFormulas (
        SAFEARRAY * * SRCStream,
        SAFEARRAY * * formulaArray,
        short Flags );
    short SetResults (
        SAFEARRAY * * SRCStream,
        SAFEARRAY * * UnitsNamesOrCodes,
        SAFEARRAY * * resultArray,
        short Flags );
    long GetID ( );
    long GetIndex ( );
    IVSectionPtr GetSection (
        short Index );
    short GetHidden ( );
    void PutHidden (
        short lpi2Ret );
    _bstr_t GetNameU ( );
    void PutNameU (
        _bstr_t lpLocaleIndependentName );
    IVCellPtr GetCellsU (
        _bstr_t localeIndependentCellName );
    short GetCellExists (
        _bstr_t localeSpecificCellName,
        short fExistsLocally );
    short GetCellExistsU (
        _bstr_t localeIndependentCellName,
        short fExistsLocally );
    HRESULT GetFormulasU (
        SAFEARRAY * * SRCStream,
        SAFEARRAY * * formulaArray );
    IVCellPtr GetCellsSRC (
        short Section,
        short Row,
        short Column );
    short GetCellsSRCExists (
        short Section,
        short Row,
        short Column,
        short fExistsLocally );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * localeSpecificCellName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR localeSpecificCellName ) = 0;
      virtual HRESULT __stdcall get_Index16 (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_BasedOn (
        /*[out,retval]*/ BSTR * lpLocaleSpecificStyleName ) = 0;
      virtual HRESULT __stdcall put_BasedOn (
        /*[in]*/ BSTR lpLocaleSpecificStyleName ) = 0;
      virtual HRESULT __stdcall get_TextBasedOn (
        /*[out,retval]*/ BSTR * lpLocaleSpecificStyleName ) = 0;
      virtual HRESULT __stdcall put_TextBasedOn (
        /*[in]*/ BSTR lpLocaleSpecificStyleName ) = 0;
      virtual HRESULT __stdcall get_LineBasedOn (
        /*[out,retval]*/ BSTR * lpLocaleSpecificStyleName ) = 0;
      virtual HRESULT __stdcall put_LineBasedOn (
        /*[in]*/ BSTR lpLocaleSpecificStyleName ) = 0;
      virtual HRESULT __stdcall get_FillBasedOn (
        /*[out,retval]*/ BSTR * lpLocaleSpecificStyleName ) = 0;
      virtual HRESULT __stdcall put_FillBasedOn (
        /*[in]*/ BSTR lpLocaleSpecificStyleName ) = 0;
      virtual HRESULT __stdcall get_IncludesText (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_IncludesText (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_IncludesLine (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_IncludesLine (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_IncludesFill (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_IncludesFill (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Cells (
        /*[in]*/ BSTR localeSpecificCellName,
        /*[out,retval]*/ struct IVCell * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_EventList (
        /*[out,retval]*/ struct IVEventList * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PersistsEvents (
        /*[out,retval]*/ short * lpboolRet ) = 0;
      virtual HRESULT __stdcall get_ID16 (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_GetFormulas (
        /*[in]*/ SAFEARRAY * * SRCStream,
        /*[out]*/ SAFEARRAY * * formulaArray ) = 0;
      virtual HRESULT __stdcall raw_GetResults (
        /*[in]*/ SAFEARRAY * * SRCStream,
        /*[in]*/ short Flags,
        /*[in]*/ SAFEARRAY * * UnitsNamesOrCodes,
        /*[out]*/ SAFEARRAY * * resultArray ) = 0;
      virtual HRESULT __stdcall raw_SetFormulas (
        /*[in]*/ SAFEARRAY * * SRCStream,
        /*[in]*/ SAFEARRAY * * formulaArray,
        /*[in]*/ short Flags,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_SetResults (
        /*[in]*/ SAFEARRAY * * SRCStream,
        /*[in]*/ SAFEARRAY * * UnitsNamesOrCodes,
        /*[in]*/ SAFEARRAY * * resultArray,
        /*[in]*/ short Flags,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_Section (
        /*[in]*/ short Index,
        /*[out,retval]*/ struct IVSection * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Hidden (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_Hidden (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_NameU (
        /*[out,retval]*/ BSTR * lpLocaleIndependentName ) = 0;
      virtual HRESULT __stdcall put_NameU (
        /*[in]*/ BSTR lpLocaleIndependentName ) = 0;
      virtual HRESULT __stdcall get_CellsU (
        /*[in]*/ BSTR localeIndependentCellName,
        /*[out,retval]*/ struct IVCell * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_CellExists (
        /*[in]*/ BSTR localeSpecificCellName,
        /*[in]*/ short fExistsLocally,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_CellExistsU (
        /*[in]*/ BSTR localeIndependentCellName,
        /*[in]*/ short fExistsLocally,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_GetFormulasU (
        /*[in]*/ SAFEARRAY * * SRCStream,
        /*[out]*/ SAFEARRAY * * formulaArray ) = 0;
      virtual HRESULT __stdcall get_CellsSRC (
        /*[in]*/ short Section,
        /*[in]*/ short Row,
        /*[in]*/ short Column,
        /*[out,retval]*/ struct IVCell * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_CellsSRCExists (
        /*[in]*/ short Section,
        /*[in]*/ short Row,
        /*[in]*/ short Column,
        /*[in]*/ short fExistsLocally,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
};

struct __declspec(uuid("000d071b-0000-0000-c000-000000000046"))
IVEventList : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVEventPtr Item[];
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetCount))
    short Count;
    __declspec(property(get=GetItemFromID))
    IVEventPtr ItemFromID[];
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    short GetObjectType ( );
    IVEventPtr GetItem (
        short Index );
    short GetCount ( );
    IVEventPtr Add (
        short EventCode,
        short Action,
        _bstr_t Target,
        _bstr_t TargetArgs );
    IVEventPtr AddAdvise (
        short EventCode,
        const _variant_t & SinkIUnkOrIDisp,
        _bstr_t IIDSink,
        _bstr_t TargetArgs );
    IVEventPtr GetItemFromID (
        long ObjectID );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ short Index,
        /*[out,retval]*/ struct IVEvent * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ short EventCode,
        /*[in]*/ short Action,
        /*[in]*/ BSTR Target,
        /*[in]*/ BSTR TargetArgs,
        /*[out,retval]*/ struct IVEvent * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_AddAdvise (
        /*[in]*/ short EventCode,
        /*[in]*/ VARIANT SinkIUnkOrIDisp,
        /*[in]*/ BSTR IIDSink,
        /*[in]*/ BSTR TargetArgs,
        /*[out,retval]*/ struct IVEvent * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ItemFromID (
        /*[in]*/ long ObjectID,
        /*[out,retval]*/ struct IVEvent * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppEnum ) = 0;
};

struct __declspec(uuid("000d071a-0000-0000-c000-000000000046"))
IVEvent : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetEvent,put=PutEvent))
    short Event;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;
    __declspec(property(get=GetIndex))
    short Index;
    __declspec(property(get=GetAction,put=PutAction))
    short Action;
    __declspec(property(get=GetTarget,put=PutTarget))
    _bstr_t Target;
    __declspec(property(get=GetTargetArgs,put=PutTargetArgs))
    _bstr_t TargetArgs;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetID))
    long ID;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    short Enabled;
    __declspec(property(get=GetPersistable))
    short Persistable;
    __declspec(property(get=GetPersistent,put=PutPersistent))
    short Persistent;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    IVEventListPtr GetEventList ( );
    short GetIndex ( );
    short GetEvent ( );
    void PutEvent (
        short lpi2Ret );
    short GetAction ( );
    void PutAction (
        short lpi2Ret );
    _bstr_t GetTarget ( );
    void PutTarget (
        _bstr_t lpbstrRet );
    _bstr_t GetTargetArgs ( );
    void PutTargetArgs (
        _bstr_t lpbstrRet );
    HRESULT Trigger (
        _bstr_t ContextString );
    HRESULT Delete ( );
    short GetObjectType ( );
    long GetID ( );
    short GetEnabled ( );
    void PutEnabled (
        short lpi2Ret );
    short GetPersistable ( );
    short GetPersistent ( );
    void PutPersistent (
        short lpi2Ret );
    SAFEARRAY * GetFilterObjects ( );
    HRESULT SetFilterObjects (
        SAFEARRAY * * Objects );
    SAFEARRAY * GetFilterCommands ( );
    HRESULT SetFilterCommands (
        SAFEARRAY * * Commands );
    SAFEARRAY * GetFilterSRC ( );
    HRESULT SetFilterSRC (
        SAFEARRAY * * SRCStream );
    SAFEARRAY * GetFilterActions ( );
    HRESULT SetFilterActions (
        SAFEARRAY * * filterActionStream );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_EventList (
        /*[out,retval]*/ struct IVEventList * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Event (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_Event (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Action (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_Action (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Target (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Target (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_TargetArgs (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_TargetArgs (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall raw_Trigger (
        /*[in]*/ BSTR ContextString ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Persistable (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Persistent (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_Persistent (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_GetFilterObjects (
        /*[out,retval]*/ SAFEARRAY * * Objects ) = 0;
      virtual HRESULT __stdcall raw_SetFilterObjects (
        /*[in]*/ SAFEARRAY * * Objects ) = 0;
      virtual HRESULT __stdcall raw_GetFilterCommands (
        /*[out,retval]*/ SAFEARRAY * * Commands ) = 0;
      virtual HRESULT __stdcall raw_SetFilterCommands (
        /*[in]*/ SAFEARRAY * * Commands ) = 0;
      virtual HRESULT __stdcall raw_GetFilterSRC (
        /*[out,retval]*/ SAFEARRAY * * SRCStream ) = 0;
      virtual HRESULT __stdcall raw_SetFilterSRC (
        /*[in]*/ SAFEARRAY * * SRCStream ) = 0;
      virtual HRESULT __stdcall raw_GetFilterActions (
        /*[out,retval]*/ SAFEARRAY * * filterActionStream ) = 0;
      virtual HRESULT __stdcall raw_SetFilterActions (
        /*[in]*/ SAFEARRAY * * filterActionStream ) = 0;
};

struct __declspec(uuid("000d0702-0000-0000-c000-000000000046"))
IVCharacters : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetText,put=PutText))
    _variant_t Text;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetBegin,put=PutBegin))
    long Begin;
    __declspec(property(get=GetCharCount))
    long CharCount;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetEnd,put=PutEnd))
    long End;
    __declspec(property(get=GetFieldCategory))
    short FieldCategory;
    __declspec(property(get=GetFieldCode))
    short FieldCode;
    __declspec(property(get=GetFieldFormat))
    short FieldFormat;
    __declspec(property(get=GetFieldFormula))
    _bstr_t FieldFormula;
    __declspec(property(get=GetIsField))
    short IsField;
    __declspec(property(get=GetCharPropsRow))
    short CharPropsRow[];
    __declspec(property(get=GetParaPropsRow))
    short ParaPropsRow[];
    __declspec(property(get=GetTabPropsRow))
    short TabPropsRow[];
    __declspec(property(get=GetRunBegin))
    long RunBegin[];
    __declspec(property(get=GetRunEnd))
    long RunEnd[];
    __declspec(property(put=PutCharProps))
    short CharProps[];
    __declspec(property(put=PutParaProps))
    short ParaProps[];
    __declspec(property(get=GetShape))
    IVShapePtr Shape;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;
    __declspec(property(get=GetPersistsEvents))
    short PersistsEvents;
    __declspec(property(get=GetFieldFormulaU))
    _bstr_t FieldFormulaU;
    __declspec(property(get=GetTextAsString))
    _bstr_t TextAsString;
    __declspec(property(get=GetContainingPageID))
    long ContainingPageID;
    __declspec(property(get=GetContainingMasterID))
    long ContainingMasterID;

    //
    // Wrapper methods for error-handling
    //

    HRESULT AddCustomField (
        _bstr_t Formula,
        short Format );
    HRESULT AddField (
        short Category,
        short Code,
        short Format );
    IVApplicationPtr GetApplication ( );
    long GetBegin ( );
    void PutBegin (
        long lpi4Ret );
    long GetCharCount ( );
    void PutCharProps (
        short CellIndex,
        short _arg2 );
    short GetCharPropsRow (
        short BiasLorR );
    HRESULT Copy ( );
    HRESULT Cut ( );
    short GetObjectType ( );
    long GetEnd ( );
    void PutEnd (
        long lpi4Ret );
    short GetFieldCategory ( );
    short GetFieldCode ( );
    short GetFieldFormat ( );
    _bstr_t GetFieldFormula ( );
    short GetIsField ( );
    void PutParaProps (
        short CellIndex,
        short _arg2 );
    short GetParaPropsRow (
        short BiasLorR );
    HRESULT Paste ( );
    short GetTabPropsRow (
        short BiasLorR );
    long GetRunBegin (
        short RunType );
    long GetRunEnd (
        short RunType );
    IVShapePtr GetShape ( );
    short GetStat ( );
    _bstr_t GetTextAsString ( );
    void PutText (
        const _variant_t & lpvarRet );
    IVDocumentPtr GetDocument ( );
    IVEventListPtr GetEventList ( );
    short GetPersistsEvents ( );
    _variant_t GetText ( );
    HRESULT AddCustomFieldU (
        _bstr_t Formula,
        short Format );
    _bstr_t GetFieldFormulaU ( );
    HRESULT Delete ( );
    HRESULT AddFieldEx (
        enum VisFieldCategories Category,
        enum VisFieldCodes Code,
        enum VisFieldFormats Format,
        long LangID,
        long CalendarID );
    long GetContainingPageID ( );
    long GetContainingMasterID ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_AddCustomField (
        /*[in]*/ BSTR Formula,
        /*[in]*/ short Format ) = 0;
      virtual HRESULT __stdcall raw_AddField (
        /*[in]*/ short Category,
        /*[in]*/ short Code,
        /*[in]*/ short Format ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Begin (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall put_Begin (
        /*[in]*/ long lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_CharCount (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall put_CharProps (
        /*[in]*/ short CellIndex,
        /*[in]*/ short _arg2 ) = 0;
      virtual HRESULT __stdcall get_CharPropsRow (
        /*[in]*/ short BiasLorR,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_Copy ( ) = 0;
      virtual HRESULT __stdcall raw_Cut ( ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_End (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall put_End (
        /*[in]*/ long lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_FieldCategory (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_FieldCode (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_FieldFormat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_FieldFormula (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_IsField (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_ParaProps (
        /*[in]*/ short CellIndex,
        /*[in]*/ short _arg2 ) = 0;
      virtual HRESULT __stdcall get_ParaPropsRow (
        /*[in]*/ short BiasLorR,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_Paste ( ) = 0;
      virtual HRESULT __stdcall get_TabPropsRow (
        /*[in]*/ short BiasLorR,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_RunBegin (
        /*[in]*/ short RunType,
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_RunEnd (
        /*[in]*/ short RunType,
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_Shape (
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_TextAsString (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ VARIANT lpvarRet ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_EventList (
        /*[out,retval]*/ struct IVEventList * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PersistsEvents (
        /*[out,retval]*/ short * lpboolRet ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ VARIANT * lpvarRet ) = 0;
      virtual HRESULT __stdcall raw_AddCustomFieldU (
        /*[in]*/ BSTR Formula,
        /*[in]*/ short Format ) = 0;
      virtual HRESULT __stdcall get_FieldFormulaU (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_AddFieldEx (
        /*[in]*/ enum VisFieldCategories Category,
        /*[in]*/ enum VisFieldCodes Code,
        /*[in]*/ enum VisFieldFormats Format,
        /*[in]*/ long LangID,
        /*[in]*/ long CalendarID ) = 0;
      virtual HRESULT __stdcall get_ContainingPageID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_ContainingMasterID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
};

struct __declspec(uuid("000d070f-0000-0000-c000-000000000046"))
IVStyles : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVStylePtr Item[];
    __declspec(property(get=GetCount16))
    short Count16;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;
    __declspec(property(get=GetPersistsEvents))
    short PersistsEvents;
    __declspec(property(get=GetItemFromID16))
    IVStylePtr ItemFromID16[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetItemFromID))
    IVStylePtr ItemFromID[];
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    short GetObjectType ( );
    IVStylePtr GetItem (
        const _variant_t & NameOrIndex );
    short GetCount16 ( );
    IVDocumentPtr GetDocument ( );
    IVStylePtr Add (
        _bstr_t StyleName,
        _bstr_t BasedOn,
        short fIncludesText,
        short fIncludesLine,
        short fIncludesFill );
    short GetStat ( );
    IVEventListPtr GetEventList ( );
    short GetPersistsEvents ( );
    IVStylePtr GetItemFromID16 (
        short ObjectID );
    HRESULT GetNames (
        SAFEARRAY * * localeSpecificNameArray );
    long GetCount ( );
    IVStylePtr GetItemFromID (
        long ObjectID );
    IVStylePtr GetItemU (
        const _variant_t & NameOrIndex );
    HRESULT GetNamesU (
        SAFEARRAY * * localeIndependentNameArray );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT NameOrIndex,
        /*[out,retval]*/ struct IVStyle * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Count16 (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR StyleName,
        /*[in]*/ BSTR BasedOn,
        /*[in]*/ short fIncludesText,
        /*[in]*/ short fIncludesLine,
        /*[in]*/ short fIncludesFill,
        /*[out,retval]*/ struct IVStyle * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_EventList (
        /*[out,retval]*/ struct IVEventList * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PersistsEvents (
        /*[out,retval]*/ short * lpboolRet ) = 0;
      virtual HRESULT __stdcall get_ItemFromID16 (
        /*[in]*/ short ObjectID,
        /*[out,retval]*/ struct IVStyle * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_GetNames (
        /*[out]*/ SAFEARRAY * * localeSpecificNameArray ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_ItemFromID (
        /*[in]*/ long ObjectID,
        /*[out,retval]*/ struct IVStyle * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ItemU (
        VARIANT NameOrIndex,
        /*[out,retval]*/ struct IVStyle * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_GetNamesU (
        /*[out]*/ SAFEARRAY * * localeIndependentNameArray ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppEnum ) = 0;
};

struct __declspec(uuid("000d0706-0000-0000-c000-000000000046"))
IVDocuments : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVDocumentPtr Item[];
    __declspec(property(get=GetCount))
    short Count;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;
    __declspec(property(get=GetPersistsEvents))
    short PersistsEvents;
    __declspec(property(get=GetItemFromID))
    IVDocumentPtr ItemFromID[];
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IVDocumentPtr Add (
        _bstr_t FileName );
    IVDocumentPtr Open (
        _bstr_t FileName );
    IVApplicationPtr GetApplication ( );
    short GetObjectType ( );
    IVDocumentPtr GetItem (
        const _variant_t & NameOrIndex );
    short GetCount ( );
    IVDocumentPtr OpenEx (
        _bstr_t FileName,
        short Flags );
    IVEventListPtr GetEventList ( );
    short GetPersistsEvents ( );
    HRESULT GetNames (
        SAFEARRAY * * NameArray );
    IUnknownPtr Get_NewEnum ( );
    IVDocumentPtr GetItemFromID (
        long ObjectID );
    VARIANT_BOOL CanCheckOut (
        _bstr_t FileName );
    HRESULT CheckOut (
        _bstr_t FileName );
    IVDocumentPtr AddEx (
        _bstr_t FileName,
        enum VisMeasurementSystem MeasurementSystem,
        long Flags,
        long LangID );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_Open (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT NameOrIndex,
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_OpenEx (
        /*[in]*/ BSTR FileName,
        /*[in]*/ short Flags,
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_EventList (
        /*[out,retval]*/ struct IVEventList * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PersistsEvents (
        /*[out,retval]*/ short * lpboolRet ) = 0;
      virtual HRESULT __stdcall raw_GetNames (
        /*[out]*/ SAFEARRAY * * NameArray ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppEnum ) = 0;
      virtual HRESULT __stdcall get_ItemFromID (
        /*[in]*/ long ObjectID,
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_CanCheckOut (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall raw_CheckOut (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_AddEx (
        /*[in]*/ BSTR FileName,
        /*[in]*/ enum VisMeasurementSystem MeasurementSystem,
        /*[in]*/ long Flags,
        /*[in]*/ long LangID,
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
};

struct __declspec(uuid("000d0724-0000-0000-c000-000000000046"))
IVSection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRow))
    IVRowPtr Row[];
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetShape))
    IVShapePtr Shape;
    __declspec(property(get=GetStyle))
    IVStylePtr Style;
    __declspec(property(get=GetIndex))
    short Index;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;
    __declspec(property(get=GetPersistsEvents))
    short PersistsEvents;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetCount))
    short Count;
    __declspec(property(get=GetContainingPageID))
    long ContainingPageID;
    __declspec(property(get=GetContainingMasterID))
    long ContainingMasterID;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    IVShapePtr GetShape ( );
    IVStylePtr GetStyle ( );
    short GetIndex ( );
    short GetObjectType ( );
    IVEventListPtr GetEventList ( );
    short GetPersistsEvents ( );
    short GetStat ( );
    short GetCount ( );
    IVRowPtr GetRow (
        short Index );
    long GetContainingPageID ( );
    long GetContainingMasterID ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Shape (
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ struct IVStyle * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_EventList (
        /*[out,retval]*/ struct IVEventList * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PersistsEvents (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Row (
        /*[in]*/ short Index,
        /*[out,retval]*/ struct IVRow * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ContainingPageID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_ContainingMasterID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
};

struct __declspec(uuid("000d0725-0000-0000-c000-000000000046"))
IVRow : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCell))
    IVCellPtr Cell[];
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetShape))
    IVShapePtr Shape;
    __declspec(property(get=GetStyle))
    IVStylePtr Style;
    __declspec(property(get=GetContainingSection))
    IVSectionPtr ContainingSection;
    __declspec(property(get=GetIndex))
    short Index;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;
    __declspec(property(get=GetPersistsEvents))
    short PersistsEvents;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetCount))
    short Count;
    __declspec(property(get=GetNameU,put=PutNameU))
    _bstr_t NameU;
    __declspec(property(get=GetCellU))
    IVCellPtr CellU[];
    __declspec(property(get=GetContainingPageID))
    long ContainingPageID;
    __declspec(property(get=GetContainingMasterID))
    long ContainingMasterID;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    IVShapePtr GetShape ( );
    IVStylePtr GetStyle ( );
    IVSectionPtr GetContainingSection ( );
    short GetIndex ( );
    short GetObjectType ( );
    IVEventListPtr GetEventList ( );
    short GetPersistsEvents ( );
    short GetStat ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t lpLocaleSpecificName );
    short GetCount ( );
    IVCellPtr GetCell (
        const _variant_t & NameOrIndex );
    _bstr_t GetNameU ( );
    void PutNameU (
        _bstr_t lpLocaleIndependentName );
    IVCellPtr GetCellU (
        const _variant_t & NameOrIndex );
    HRESULT GetPolylineData (
        short Flags,
        SAFEARRAY * * xyArray );
    long GetContainingPageID ( );
    long GetContainingMasterID ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Shape (
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ struct IVStyle * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ContainingSection (
        /*[out,retval]*/ struct IVSection * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_EventList (
        /*[out,retval]*/ struct IVEventList * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PersistsEvents (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * lpLocaleSpecificName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR lpLocaleSpecificName ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Cell (
        /*[in]*/ VARIANT NameOrIndex,
        /*[out,retval]*/ struct IVCell * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_NameU (
        /*[out,retval]*/ BSTR * lpLocaleIndependentName ) = 0;
      virtual HRESULT __stdcall put_NameU (
        /*[in]*/ BSTR lpLocaleIndependentName ) = 0;
      virtual HRESULT __stdcall get_CellU (
        /*[in]*/ VARIANT NameOrIndex,
        /*[out,retval]*/ struct IVCell * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_GetPolylineData (
        /*[in]*/ short Flags,
        /*[out]*/ SAFEARRAY * * xyArray ) = 0;
      virtual HRESULT __stdcall get_ContainingPageID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_ContainingMasterID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
};

struct __declspec(uuid("000d0709-0000-0000-c000-000000000046"))
IVPage : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetIndex,put=PutIndex))
    short Index;
    __declspec(property(get=GetShapes))
    IVShapesPtr Shapes;
    __declspec(property(get=GetNameU,put=PutNameU))
    _bstr_t NameU;
    __declspec(property(put=PutBackPageFromName))
    _bstr_t BackPageFromName;
    __declspec(property(get=GetPicture))
    IPictureDisp * Picture;
    __declspec(property(get=GetBackground,put=PutBackground))
    short Background;
    __declspec(property(get=GetPrintTileCount))
    long PrintTileCount;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetBackPageAsObj))
    IVPagePtr BackPageAsObj;
    __declspec(property(get=GetType))
    enum VisPageTypes Type;
    __declspec(property(get=GetLayers))
    IVLayersPtr Layers;
    __declspec(property(get=GetPageSheet))
    IVShapePtr PageSheet;
    __declspec(property(get=GetReviewerID))
    long ReviewerID;
    __declspec(property(get=GetOriginalPage))
    IVPagePtr OriginalPage;
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;
    __declspec(property(get=GetPersistsEvents))
    short PersistsEvents;
    __declspec(property(get=GetThemeColors,put=PutThemeColors))
    _variant_t ThemeColors;
    __declspec(property(get=GetThemeEffects,put=PutThemeEffects))
    _variant_t ThemeEffects;
    __declspec(property(get=GetConnects))
    IVConnectsPtr Connects;
    __declspec(property(get=GetBackPage,put=PutBackPage))
    _variant_t BackPage;
    __declspec(property(get=GetID16))
    short ID16;
    __declspec(property(get=GetOLEObjects))
    IVOLEObjectsPtr OLEObjects;
    __declspec(property(get=GetID))
    long ID;
    __declspec(property(get=GetSpatialSearch))
    IVSelectionPtr SpatialSearch[][][][][];

    //
    // Wrapper methods for error-handling
    //

    IVDocumentPtr GetDocument ( );
    IVApplicationPtr GetApplication ( );
    short GetStat ( );
    short GetBackground ( );
    void PutBackground (
        short lpi2Ret );
    HRESULT old_Paste ( );
    HRESULT old_PasteSpecial (
        short Format );
    short GetObjectType ( );
    IVShapePtr DrawLine (
        double xBegin,
        double yBegin,
        double xEnd,
        double yEnd );
    IVShapePtr DrawRectangle (
        double x1,
        double y1,
        double x2,
        double y2 );
    IVShapePtr DrawOval (
        double x1,
        double y1,
        double x2,
        double y2 );
    short GetIndex ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t lpLocaleSpecificName );
    IVShapesPtr GetShapes ( );
    IVShapePtr Drop (
        IUnknown * ObjectToDrop,
        double xPos,
        double yPos );
    IVShapePtr AddGuide (
        short Type,
        double xPos,
        double yPos );
    IVPagePtr GetBackPageAsObj ( );
    void PutBackPageFromName (
        _bstr_t _arg1 );
    HRESULT Print ( );
    IVShapePtr Import (
        _bstr_t FileName );
    HRESULT Export (
        _bstr_t FileName );
    IVLayersPtr GetLayers ( );
    IVShapePtr GetPageSheet ( );
    HRESULT Delete (
        short fRenumberPages );
    HRESULT CenterDrawing ( );
    IVEventListPtr GetEventList ( );
    short GetPersistsEvents ( );
    IVShapePtr DrawSpline (
        SAFEARRAY * * xyArray,
        double Tolerance,
        short Flags );
    IVShapePtr DrawBezier (
        SAFEARRAY * * xyArray,
        short degree,
        short Flags );
    IVShapePtr DrawPolyline (
        SAFEARRAY * * xyArray,
        short Flags );
    IVShapePtr InsertFromFile (
        _bstr_t FileName,
        short Flags );
    IVShapePtr InsertObject (
        _bstr_t ClassOrProgID,
        short Flags );
    IVWindowPtr OpenDrawWindow ( );
    short DropMany (
        SAFEARRAY * * ObjectsToInstance,
        SAFEARRAY * * xyArray,
        SAFEARRAY * * IDArray );
    HRESULT GetFormulas (
        SAFEARRAY * * SID_SRCStream,
        SAFEARRAY * * formulaArray );
    HRESULT GetResults (
        SAFEARRAY * * SID_SRCStream,
        short Flags,
        SAFEARRAY * * UnitsNamesOrCodes,
        SAFEARRAY * * resultArray );
    short SetFormulas (
        SAFEARRAY * * SID_SRCStream,
        SAFEARRAY * * formulaArray,
        short Flags );
    short SetResults (
        SAFEARRAY * * SID_SRCStream,
        SAFEARRAY * * UnitsNamesOrCodes,
        SAFEARRAY * * resultArray,
        short Flags );
    IVConnectsPtr GetConnects ( );
    _variant_t GetBackPage ( );
    void PutBackPage (
        const _variant_t & lpobjRet );
    HRESULT Layout ( );
    HRESULT BoundingBox (
        short Flags,
        double * lpr8Left,
        double * lpr8Bottom,
        double * lpr8Right,
        double * lpr8Top );
    short GetID16 ( );
    IVOLEObjectsPtr GetOLEObjects ( );
    long GetID ( );
    IVSelectionPtr GetSpatialSearch (
        double x,
        double y,
        short Relation,
        double Tolerance,
        short Flags );
    _bstr_t GetNameU ( );
    void PutNameU (
        _bstr_t lpLocaleIndependentName );
    short DropManyU (
        SAFEARRAY * * ObjectsToInstance,
        SAFEARRAY * * xyArray,
        SAFEARRAY * * IDArray );
    HRESULT GetFormulasU (
        SAFEARRAY * * SID_SRCStream,
        SAFEARRAY * * formulaArray );
    IVShapePtr DrawNURBS (
        short degree,
        short Flags,
        SAFEARRAY * * xyArray,
        SAFEARRAY * * knots,
        const _variant_t & weights = vtMissing );
    IPictureDisp * GetPicture ( );
    void PutIndex (
        short lpi2Ret );
    long GetPrintTileCount ( );
    HRESULT PrintTile (
        long nTile );
    HRESULT ResizeToFitContents ( );
    HRESULT Paste (
        const _variant_t & Flags = vtMissing );
    HRESULT PasteSpecial (
        long Format,
        const _variant_t & Link = vtMissing,
        const _variant_t & DisplayAsIcon = vtMissing );
    IVSelectionPtr CreateSelection (
        enum VisSelectionTypes SelType,
        enum VisSelectMode IterationMode,
        const _variant_t & Data = vtMissing );
    enum VisPageTypes GetType ( );
    IVShapePtr DrawArcByThreePoints (
        double xBegin,
        double yBegin,
        double xEnd,
        double yEnd,
        double xControl,
        double yControl );
    IVShapePtr DrawQuarterArc (
        double xBegin,
        double yBegin,
        double xEnd,
        double yEnd,
        enum VisArcSweepFlags SweepFlag );
    IVShapePtr DrawCircularArc (
        double xCenter,
        double yCenter,
        double Radius,
        double StartAngle,
        double EndAngle );
    long GetReviewerID ( );
    IVPagePtr GetOriginalPage ( );
    HRESULT GetShapesLinkedToData (
        long DataRecordsetID,
        SAFEARRAY * * ShapeIDs );
    HRESULT GetShapesLinkedToDataRow (
        long DataRecordsetID,
        long DataRowID,
        SAFEARRAY * * ShapeIDs );
    HRESULT LinkShapesToDataRows (
        long DataRecordsetID,
        SAFEARRAY * * DataRowIDs,
        SAFEARRAY * * ShapeIDs,
        VARIANT_BOOL ApplyDataGraphicAfterLink );
    HRESULT ShapeIDsToUniqueIDs (
        SAFEARRAY * * ShapeIDs,
        enum VisUniqueIDArgs UniqueIDArgs,
        SAFEARRAY * * GUIDs );
    HRESULT UniqueIDsToShapeIDs (
        SAFEARRAY * * GUIDs,
        SAFEARRAY * * ShapeIDs );
    IVShapePtr DropLinked (
        IUnknown * ObjectToDrop,
        double x,
        double y,
        long DataRecordsetID,
        long DataRowID,
        VARIANT_BOOL ApplyDataGraphicAfterLink );
    long DropManyLinkedU (
        SAFEARRAY * * ObjectsToInstance,
        SAFEARRAY * * XYs,
        long DataRecordsetID,
        SAFEARRAY * * DataRowIDs,
        VARIANT_BOOL ApplyDataGraphicAfterLink,
        SAFEARRAY * * ShapeIDs );
    _variant_t GetThemeColors ( );
    void PutThemeColors (
        const _variant_t & pVar );
    _variant_t GetThemeEffects ( );
    void PutThemeEffects (
        const _variant_t & pVar );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Background (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_Background (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_old_Paste ( ) = 0;
      virtual HRESULT __stdcall raw_old_PasteSpecial (
        /*[in]*/ short Format ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_DrawLine (
        /*[in]*/ double xBegin,
        /*[in]*/ double yBegin,
        /*[in]*/ double xEnd,
        /*[in]*/ double yEnd,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_DrawRectangle (
        /*[in]*/ double x1,
        /*[in]*/ double y1,
        /*[in]*/ double x2,
        /*[in]*/ double y2,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_DrawOval (
        /*[in]*/ double x1,
        /*[in]*/ double y1,
        /*[in]*/ double x2,
        /*[in]*/ double y2,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * lpLocaleSpecificName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR lpLocaleSpecificName ) = 0;
      virtual HRESULT __stdcall get_Shapes (
        /*[out,retval]*/ struct IVShapes * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_Drop (
        /*[in]*/ IUnknown * ObjectToDrop,
        /*[in]*/ double xPos,
        /*[in]*/ double yPos,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_AddGuide (
        /*[in]*/ short Type,
        /*[in]*/ double xPos,
        /*[in]*/ double yPos,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_BackPageAsObj (
        /*[out,retval]*/ struct IVPage * * lpdispRet ) = 0;
      virtual HRESULT __stdcall put_BackPageFromName (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall raw_Print ( ) = 0;
      virtual HRESULT __stdcall raw_Import (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_Export (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall get_Layers (
        /*[out,retval]*/ struct IVLayers * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PageSheet (
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_Delete (
        /*[in]*/ short fRenumberPages ) = 0;
      virtual HRESULT __stdcall raw_CenterDrawing ( ) = 0;
      virtual HRESULT __stdcall get_EventList (
        /*[out,retval]*/ struct IVEventList * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PersistsEvents (
        /*[out,retval]*/ short * lpboolRet ) = 0;
      virtual HRESULT __stdcall raw_DrawSpline (
        /*[in]*/ SAFEARRAY * * xyArray,
        /*[in]*/ double Tolerance,
        /*[in]*/ short Flags,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_DrawBezier (
        /*[in]*/ SAFEARRAY * * xyArray,
        /*[in]*/ short degree,
        /*[in]*/ short Flags,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_DrawPolyline (
        /*[in]*/ SAFEARRAY * * xyArray,
        /*[in]*/ short Flags,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_InsertFromFile (
        /*[in]*/ BSTR FileName,
        /*[in]*/ short Flags,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_InsertObject (
        /*[in]*/ BSTR ClassOrProgID,
        /*[in]*/ short Flags,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_OpenDrawWindow (
        /*[out,retval]*/ struct IVWindow * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_DropMany (
        /*[in]*/ SAFEARRAY * * ObjectsToInstance,
        /*[in]*/ SAFEARRAY * * xyArray,
        /*[out]*/ SAFEARRAY * * IDArray,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_GetFormulas (
        /*[in]*/ SAFEARRAY * * SID_SRCStream,
        /*[out]*/ SAFEARRAY * * formulaArray ) = 0;
      virtual HRESULT __stdcall raw_GetResults (
        /*[in]*/ SAFEARRAY * * SID_SRCStream,
        /*[in]*/ short Flags,
        /*[in]*/ SAFEARRAY * * UnitsNamesOrCodes,
        /*[out]*/ SAFEARRAY * * resultArray ) = 0;
      virtual HRESULT __stdcall raw_SetFormulas (
        /*[in]*/ SAFEARRAY * * SID_SRCStream,
        /*[in]*/ SAFEARRAY * * formulaArray,
        /*[in]*/ short Flags,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_SetResults (
        /*[in]*/ SAFEARRAY * * SID_SRCStream,
        /*[in]*/ SAFEARRAY * * UnitsNamesOrCodes,
        /*[in]*/ SAFEARRAY * * resultArray,
        /*[in]*/ short Flags,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Connects (
        /*[out,retval]*/ struct IVConnects * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_BackPage (
        /*[out,retval]*/ VARIANT * lpobjRet ) = 0;
      virtual HRESULT __stdcall put_BackPage (
        /*[in]*/ VARIANT lpobjRet ) = 0;
      virtual HRESULT __stdcall raw_Layout ( ) = 0;
      virtual HRESULT __stdcall raw_BoundingBox (
        /*[in]*/ short Flags,
        /*[out]*/ double * lpr8Left,
        /*[out]*/ double * lpr8Bottom,
        /*[out]*/ double * lpr8Right,
        /*[out]*/ double * lpr8Top ) = 0;
      virtual HRESULT __stdcall get_ID16 (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_OLEObjects (
        /*[out,retval]*/ struct IVOLEObjects * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_SpatialSearch (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ short Relation,
        /*[in]*/ double Tolerance,
        /*[in]*/ short Flags,
        /*[out,retval]*/ struct IVSelection * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_NameU (
        /*[out,retval]*/ BSTR * lpLocaleIndependentName ) = 0;
      virtual HRESULT __stdcall put_NameU (
        /*[in]*/ BSTR lpLocaleIndependentName ) = 0;
      virtual HRESULT __stdcall raw_DropManyU (
        /*[in]*/ SAFEARRAY * * ObjectsToInstance,
        /*[in]*/ SAFEARRAY * * xyArray,
        /*[out]*/ SAFEARRAY * * IDArray,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_GetFormulasU (
        /*[in]*/ SAFEARRAY * * SID_SRCStream,
        /*[out]*/ SAFEARRAY * * formulaArray ) = 0;
      virtual HRESULT __stdcall raw_DrawNURBS (
        /*[in]*/ short degree,
        /*[in]*/ short Flags,
        /*[in]*/ SAFEARRAY * * xyArray,
        /*[in]*/ SAFEARRAY * * knots,
        /*[in]*/ VARIANT weights,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Picture (
        /*[out,retval]*/ IPictureDisp * * ppPictureDisp ) = 0;
      virtual HRESULT __stdcall put_Index (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_PrintTileCount (
        /*[out,retval]*/ long * pnCount ) = 0;
      virtual HRESULT __stdcall raw_PrintTile (
        /*[in]*/ long nTile ) = 0;
      virtual HRESULT __stdcall raw_ResizeToFitContents ( ) = 0;
      virtual HRESULT __stdcall raw_Paste (
        /*[in]*/ VARIANT Flags = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_PasteSpecial (
        /*[in]*/ long Format,
        /*[in]*/ VARIANT Link = vtMissing,
        /*[in]*/ VARIANT DisplayAsIcon = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_CreateSelection (
        /*[in]*/ enum VisSelectionTypes SelType,
        /*[in]*/ enum VisSelectMode IterationMode,
        /*[in]*/ VARIANT Data,
        /*[out,retval]*/ struct IVSelection * * ppSelection ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum VisPageTypes * pnPageType ) = 0;
      virtual HRESULT __stdcall raw_DrawArcByThreePoints (
        /*[in]*/ double xBegin,
        /*[in]*/ double yBegin,
        /*[in]*/ double xEnd,
        /*[in]*/ double yEnd,
        /*[in]*/ double xControl,
        /*[in]*/ double yControl,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_DrawQuarterArc (
        /*[in]*/ double xBegin,
        /*[in]*/ double yBegin,
        /*[in]*/ double xEnd,
        /*[in]*/ double yEnd,
        /*[in]*/ enum VisArcSweepFlags SweepFlag,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_DrawCircularArc (
        /*[in]*/ double xCenter,
        /*[in]*/ double yCenter,
        /*[in]*/ double Radius,
        /*[in]*/ double StartAngle,
        /*[in]*/ double EndAngle,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ReviewerID (
        /*[out,retval]*/ long * ReviewerID ) = 0;
      virtual HRESULT __stdcall get_OriginalPage (
        /*[out,retval]*/ struct IVPage * * ppPage ) = 0;
      virtual HRESULT __stdcall raw_GetShapesLinkedToData (
        /*[in]*/ long DataRecordsetID,
        /*[out]*/ SAFEARRAY * * ShapeIDs ) = 0;
      virtual HRESULT __stdcall raw_GetShapesLinkedToDataRow (
        /*[in]*/ long DataRecordsetID,
        /*[in]*/ long DataRowID,
        /*[out]*/ SAFEARRAY * * ShapeIDs ) = 0;
      virtual HRESULT __stdcall raw_LinkShapesToDataRows (
        /*[in]*/ long DataRecordsetID,
        /*[in]*/ SAFEARRAY * * DataRowIDs,
        /*[in]*/ SAFEARRAY * * ShapeIDs,
        /*[in]*/ VARIANT_BOOL ApplyDataGraphicAfterLink ) = 0;
      virtual HRESULT __stdcall raw_ShapeIDsToUniqueIDs (
        /*[in]*/ SAFEARRAY * * ShapeIDs,
        /*[in]*/ enum VisUniqueIDArgs UniqueIDArgs,
        /*[out]*/ SAFEARRAY * * GUIDs ) = 0;
      virtual HRESULT __stdcall raw_UniqueIDsToShapeIDs (
        /*[in]*/ SAFEARRAY * * GUIDs,
        /*[out]*/ SAFEARRAY * * ShapeIDs ) = 0;
      virtual HRESULT __stdcall raw_DropLinked (
        /*[in]*/ IUnknown * ObjectToDrop,
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ long DataRecordsetID,
        /*[in]*/ long DataRowID,
        /*[in]*/ VARIANT_BOOL ApplyDataGraphicAfterLink,
        /*[out,retval]*/ struct IVShape * * Shape ) = 0;
      virtual HRESULT __stdcall raw_DropManyLinkedU (
        /*[in]*/ SAFEARRAY * * ObjectsToInstance,
        /*[in]*/ SAFEARRAY * * XYs,
        /*[in]*/ long DataRecordsetID,
        /*[in]*/ SAFEARRAY * * DataRowIDs,
        /*[in]*/ VARIANT_BOOL ApplyDataGraphicAfterLink,
        /*[out]*/ SAFEARRAY * * ShapeIDs,
        /*[out,retval]*/ long * Ret ) = 0;
      virtual HRESULT __stdcall get_ThemeColors (
        /*[out,retval]*/ VARIANT * pVar ) = 0;
      virtual HRESULT __stdcall put_ThemeColors (
        /*[in]*/ VARIANT pVar ) = 0;
      virtual HRESULT __stdcall get_ThemeEffects (
        /*[out,retval]*/ VARIANT * pVar ) = 0;
      virtual HRESULT __stdcall put_ThemeEffects (
        /*[in]*/ VARIANT pVar ) = 0;
};

struct __declspec(uuid("000d0712-0000-0000-c000-000000000046"))
IVLayer : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetPage))
    IVPagePtr Page;
    __declspec(property(get=GetMaster))
    IVMasterPtr Master;
    __declspec(property(get=GetIndex))
    short Index;
    __declspec(property(get=GetRow))
    short Row;
    __declspec(property(get=GetCellsC))
    IVCellPtr CellsC[];
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;
    __declspec(property(get=GetPersistsEvents))
    short PersistsEvents;
    __declspec(property(get=GetNameU,put=PutNameU))
    _bstr_t NameU;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    IVDocumentPtr GetDocument ( );
    IVPagePtr GetPage ( );
    IVMasterPtr GetMaster ( );
    short GetIndex ( );
    short GetRow ( );
    HRESULT Add (
        struct IVShape * SheetObject,
        short fPresMems );
    HRESULT Remove (
        struct IVShape * SheetObject,
        short fPresMems );
    HRESULT Delete (
        short fDeleteShapes );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t lpLocaleSpecificName );
    IVCellPtr GetCellsC (
        short Column );
    short GetObjectType ( );
    short GetStat ( );
    IVEventListPtr GetEventList ( );
    short GetPersistsEvents ( );
    _bstr_t GetNameU ( );
    void PutNameU (
        _bstr_t lpLocaleIndependentName );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Page (
        /*[out,retval]*/ struct IVPage * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Master (
        /*[out,retval]*/ struct IVMaster * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Row (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct IVShape * SheetObject,
        /*[in]*/ short fPresMems ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ struct IVShape * SheetObject,
        /*[in]*/ short fPresMems ) = 0;
      virtual HRESULT __stdcall raw_Delete (
        /*[in]*/ short fDeleteShapes ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * lpLocaleSpecificName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR lpLocaleSpecificName ) = 0;
      virtual HRESULT __stdcall get_CellsC (
        /*[in]*/ short Column,
        /*[out,retval]*/ struct IVCell * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_EventList (
        /*[out,retval]*/ struct IVEventList * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PersistsEvents (
        /*[out,retval]*/ short * lpboolRet ) = 0;
      virtual HRESULT __stdcall get_NameU (
        /*[out,retval]*/ BSTR * lpLocaleIndependentName ) = 0;
      virtual HRESULT __stdcall put_NameU (
        /*[in]*/ BSTR lpLocaleIndependentName ) = 0;
};

struct __declspec(uuid("000d0713-0000-0000-c000-000000000046"))
IVLayers : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVLayerPtr Item[];
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetPage))
    IVPagePtr Page;
    __declspec(property(get=GetMaster))
    IVMasterPtr Master;
    __declspec(property(get=GetCount))
    short Count;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;
    __declspec(property(get=GetPersistsEvents))
    short PersistsEvents;
    __declspec(property(get=GetItemU))
    IVLayerPtr ItemU[];
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    IVDocumentPtr GetDocument ( );
    IVPagePtr GetPage ( );
    IVMasterPtr GetMaster ( );
    short GetCount ( );
    IVLayerPtr GetItem (
        const _variant_t & NameOrIndex );
    IVLayerPtr Add (
        _bstr_t LayerName );
    short GetObjectType ( );
    short GetStat ( );
    IVEventListPtr GetEventList ( );
    short GetPersistsEvents ( );
    IVLayerPtr GetItemU (
        const _variant_t & NameOrIndex );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Page (
        /*[out,retval]*/ struct IVPage * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Master (
        /*[out,retval]*/ struct IVMaster * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT NameOrIndex,
        /*[out,retval]*/ struct IVLayer * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR LayerName,
        /*[out,retval]*/ struct IVLayer * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_EventList (
        /*[out,retval]*/ struct IVEventList * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PersistsEvents (
        /*[out,retval]*/ short * lpboolRet ) = 0;
      virtual HRESULT __stdcall get_ItemU (
        /*[in]*/ VARIANT NameOrIndex,
        /*[out,retval]*/ struct IVLayer * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppEnum ) = 0;
};

struct __declspec(uuid("000d070b-0000-0000-c000-000000000046"))
IVSelection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVShapePtr Item[];
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetCount16))
    short Count16;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetContainingPage))
    IVPagePtr ContainingPage;
    __declspec(property(get=GetContainingMaster))
    IVMasterPtr ContainingMaster;
    __declspec(property(get=GetContainingShape))
    IVShapePtr ContainingShape;
    __declspec(property(get=GetIterationMode,put=PutIterationMode))
    long IterationMode;
    __declspec(property(get=GetItemStatus))
    short ItemStatus[];
    __declspec(property(get=GetPrimaryItem))
    IVShapePtr PrimaryItem;
    __declspec(property(get=GetStyle,put=PutStyle))
    _bstr_t Style;
    __declspec(property(put=PutStyleKeepFmt))
    _bstr_t StyleKeepFmt;
    __declspec(property(get=GetLineStyle,put=PutLineStyle))
    _bstr_t LineStyle;
    __declspec(property(put=PutLineStyleKeepFmt))
    _bstr_t LineStyleKeepFmt;
    __declspec(property(get=GetFillStyle,put=PutFillStyle))
    _bstr_t FillStyle;
    __declspec(property(put=PutFillStyleKeepFmt))
    _bstr_t FillStyleKeepFmt;
    __declspec(property(get=GetTextStyle,put=PutTextStyle))
    _bstr_t TextStyle;
    __declspec(property(put=PutTextStyleKeepFmt))
    _bstr_t TextStyleKeepFmt;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;
    __declspec(property(get=GetPicture))
    IPictureDisp * Picture;
    __declspec(property(get=GetItem16))
    IVShapePtr Item16[];
    __declspec(property(get=GetContainingPageID))
    long ContainingPageID;
    __declspec(property(get=GetContainingMasterID))
    long ContainingMasterID;
    __declspec(property(get=GetDataGraphic,put=PutDataGraphic))
    IVMasterPtr DataGraphic;
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;
    __declspec(property(get=GetPersistsEvents))
    short PersistsEvents;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    short GetStat ( );
    short GetObjectType ( );
    IVShapePtr GetItem16 (
        short Index );
    short GetCount16 ( );
    HRESULT Export (
        _bstr_t FileName );
    IVDocumentPtr GetDocument ( );
    IVPagePtr GetContainingPage ( );
    IVMasterPtr GetContainingMaster ( );
    IVShapePtr GetContainingShape ( );
    HRESULT BringForward ( );
    HRESULT BringToFront ( );
    HRESULT SendBackward ( );
    HRESULT SendToBack ( );
    _bstr_t GetStyle ( );
    void PutStyle (
        _bstr_t lpLocaleSpecificStyleName );
    void PutStyleKeepFmt (
        _bstr_t _arg1 );
    _bstr_t GetLineStyle ( );
    void PutLineStyle (
        _bstr_t lpLocaleSpecificStyleName );
    void PutLineStyleKeepFmt (
        _bstr_t _arg1 );
    _bstr_t GetFillStyle ( );
    void PutFillStyle (
        _bstr_t lpLocaleSpecificStyleName );
    void PutFillStyleKeepFmt (
        _bstr_t _arg1 );
    _bstr_t GetTextStyle ( );
    void PutTextStyle (
        _bstr_t lpLocaleSpecificStyleName );
    void PutTextStyleKeepFmt (
        _bstr_t _arg1 );
    HRESULT Combine ( );
    HRESULT Fragment ( );
    HRESULT Intersect ( );
    HRESULT Subtract ( );
    HRESULT Union ( );
    HRESULT FlipHorizontal ( );
    HRESULT FlipVertical ( );
    HRESULT ReverseEnds ( );
    HRESULT Rotate90 ( );
    HRESULT old_Copy ( );
    HRESULT old_Cut ( );
    HRESULT Delete ( );
    HRESULT VoidDuplicate ( );
    HRESULT VoidGroup ( );
    HRESULT ConvertToGroup ( );
    HRESULT Ungroup ( );
    HRESULT SelectAll ( );
    HRESULT DeselectAll ( );
    HRESULT Select (
        struct IVShape * SheetObject,
        short SelectAction );
    IVEventListPtr GetEventList ( );
    short GetPersistsEvents ( );
    HRESULT Trim ( );
    HRESULT Join ( );
    HRESULT FitCurve (
        double Tolerance,
        short Flags );
    HRESULT Layout ( );
    HRESULT BoundingBox (
        short Flags,
        double * lpr8Left,
        double * lpr8Bottom,
        double * lpr8Right,
        double * lpr8Top );
    IVShapePtr GetItem (
        long Index );
    long GetCount ( );
    IVShapePtr DrawRegion (
        double Tolerance,
        short Flags,
        const _variant_t & x = vtMissing,
        const _variant_t & y = vtMissing,
        const _variant_t & ResultsMaster = vtMissing );
    IUnknownPtr Get_NewEnum ( );
    long GetIterationMode ( );
    void PutIterationMode (
        long lpi4Ret );
    short GetItemStatus (
        long Index );
    IVShapePtr GetPrimaryItem ( );
    IPictureDisp * GetPicture ( );
    IVShapePtr Group ( );
    HRESULT SwapEnds ( );
    HRESULT AddToGroup ( );
    HRESULT RemoveFromGroup ( );
    IVSelectionPtr Duplicate ( );
    HRESULT Copy (
        const _variant_t & Flags = vtMissing );
    HRESULT Cut (
        const _variant_t & Flags = vtMissing );
    HRESULT Move (
        double dx,
        double dy,
        const _variant_t & UnitsNameOrCode = vtMissing );
    HRESULT Rotate (
        double Angle,
        const _variant_t & AngleUnitsNameOrCode,
        VARIANT_BOOL BlastGuards,
        enum VisRotationTypes RotationType,
        double PinX,
        double PinY,
        const _variant_t & PinUnitsNameOrCode = vtMissing );
    HRESULT Align (
        enum VisHorizontalAlignTypes AlignHorizontal,
        enum VisVerticalAlignTypes AlignVertical,
        VARIANT_BOOL GlueToGuide );
    HRESULT Distribute (
        enum VisDistributeTypes Distribute,
        VARIANT_BOOL GlueToGuide );
    HRESULT UpdateAlignmentBox ( );
    HRESULT Offset (
        double Distance );
    HRESULT ConnectShapes ( );
    HRESULT Flip (
        enum VisFlipDirection FlipDirection,
        enum VisFlipTypes FlipType,
        VARIANT_BOOL BlastGuards,
        double PinX,
        double PinY,
        const _variant_t & PinUnitsNameOrCode = vtMissing );
    long GetContainingPageID ( );
    long GetContainingMasterID ( );
    HRESULT LinkToData (
        long DataRecordsetID,
        long DataRowID,
        VARIANT_BOOL ApplyDataGraphicAfterLink );
    HRESULT BreakLinkToData (
        long DataRecordsetID );
    HRESULT GetIDs (
        SAFEARRAY * * ShapeIDs );
    long AutomaticLink (
        long DataRecordsetID,
        SAFEARRAY * * ColumnNames,
        SAFEARRAY * * AutoLinkFieldTypes,
        SAFEARRAY * * FieldNames,
        long AutoLinkBehavior,
        SAFEARRAY * * ShapeIDs );
    IVMasterPtr GetDataGraphic ( );
    void PutDataGraphic (
        struct IVMaster * DataGraphic );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Item16 (
        /*[in]*/ short Index,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Count16 (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_Export (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ContainingPage (
        /*[out,retval]*/ struct IVPage * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ContainingMaster (
        /*[out,retval]*/ struct IVMaster * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ContainingShape (
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_BringForward ( ) = 0;
      virtual HRESULT __stdcall raw_BringToFront ( ) = 0;
      virtual HRESULT __stdcall raw_SendBackward ( ) = 0;
      virtual HRESULT __stdcall raw_SendToBack ( ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ BSTR * lpLocaleSpecificStyleName ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ BSTR lpLocaleSpecificStyleName ) = 0;
      virtual HRESULT __stdcall put_StyleKeepFmt (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_LineStyle (
        /*[out,retval]*/ BSTR * lpLocaleSpecificStyleName ) = 0;
      virtual HRESULT __stdcall put_LineStyle (
        /*[in]*/ BSTR lpLocaleSpecificStyleName ) = 0;
      virtual HRESULT __stdcall put_LineStyleKeepFmt (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_FillStyle (
        /*[out,retval]*/ BSTR * lpLocaleSpecificStyleName ) = 0;
      virtual HRESULT __stdcall put_FillStyle (
        /*[in]*/ BSTR lpLocaleSpecificStyleName ) = 0;
      virtual HRESULT __stdcall put_FillStyleKeepFmt (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_TextStyle (
        /*[out,retval]*/ BSTR * lpLocaleSpecificStyleName ) = 0;
      virtual HRESULT __stdcall put_TextStyle (
        /*[in]*/ BSTR lpLocaleSpecificStyleName ) = 0;
      virtual HRESULT __stdcall put_TextStyleKeepFmt (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall raw_Combine ( ) = 0;
      virtual HRESULT __stdcall raw_Fragment ( ) = 0;
      virtual HRESULT __stdcall raw_Intersect ( ) = 0;
      virtual HRESULT __stdcall raw_Subtract ( ) = 0;
      virtual HRESULT __stdcall raw_Union ( ) = 0;
      virtual HRESULT __stdcall raw_FlipHorizontal ( ) = 0;
      virtual HRESULT __stdcall raw_FlipVertical ( ) = 0;
      virtual HRESULT __stdcall raw_ReverseEnds ( ) = 0;
      virtual HRESULT __stdcall raw_Rotate90 ( ) = 0;
      virtual HRESULT __stdcall raw_old_Copy ( ) = 0;
      virtual HRESULT __stdcall raw_old_Cut ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_VoidDuplicate ( ) = 0;
      virtual HRESULT __stdcall raw_VoidGroup ( ) = 0;
      virtual HRESULT __stdcall raw_ConvertToGroup ( ) = 0;
      virtual HRESULT __stdcall raw_Ungroup ( ) = 0;
      virtual HRESULT __stdcall raw_SelectAll ( ) = 0;
      virtual HRESULT __stdcall raw_DeselectAll ( ) = 0;
      virtual HRESULT __stdcall raw_Select (
        /*[in]*/ struct IVShape * SheetObject,
        /*[in]*/ short SelectAction ) = 0;
      virtual HRESULT __stdcall get_EventList (
        /*[out,retval]*/ struct IVEventList * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PersistsEvents (
        /*[out,retval]*/ short * lpboolRet ) = 0;
      virtual HRESULT __stdcall raw_Trim ( ) = 0;
      virtual HRESULT __stdcall raw_Join ( ) = 0;
      virtual HRESULT __stdcall raw_FitCurve (
        /*[in]*/ double Tolerance,
        /*[in]*/ short Flags ) = 0;
      virtual HRESULT __stdcall raw_Layout ( ) = 0;
      virtual HRESULT __stdcall raw_BoundingBox (
        /*[in]*/ short Flags,
        /*[out]*/ double * lpr8Left,
        /*[out]*/ double * lpr8Bottom,
        /*[out]*/ double * lpr8Right,
        /*[out]*/ double * lpr8Top ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall raw_DrawRegion (
        /*[in]*/ double Tolerance,
        /*[in]*/ short Flags,
        /*[in]*/ VARIANT x,
        /*[in]*/ VARIANT y,
        /*[in]*/ VARIANT ResultsMaster,
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppEnum ) = 0;
      virtual HRESULT __stdcall get_IterationMode (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall put_IterationMode (
        /*[in]*/ long lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_ItemStatus (
        /*[in]*/ long Index,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_PrimaryItem (
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Picture (
        /*[out,retval]*/ IPictureDisp * * ppPictureDisp ) = 0;
      virtual HRESULT __stdcall raw_Group (
        /*[out,retval]*/ struct IVShape * * ppShape ) = 0;
      virtual HRESULT __stdcall raw_SwapEnds ( ) = 0;
      virtual HRESULT __stdcall raw_AddToGroup ( ) = 0;
      virtual HRESULT __stdcall raw_RemoveFromGroup ( ) = 0;
      virtual HRESULT __stdcall raw_Duplicate (
        /*[out,retval]*/ struct IVSelection * * ppSelection ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[in]*/ VARIANT Flags = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Cut (
        /*[in]*/ VARIANT Flags = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ double dx,
        /*[in]*/ double dy,
        /*[in]*/ VARIANT UnitsNameOrCode = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Rotate (
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT AngleUnitsNameOrCode,
        /*[in]*/ VARIANT_BOOL BlastGuards,
        /*[in]*/ enum VisRotationTypes RotationType,
        /*[in]*/ double PinX,
        /*[in]*/ double PinY,
        /*[in]*/ VARIANT PinUnitsNameOrCode = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Align (
        /*[in]*/ enum VisHorizontalAlignTypes AlignHorizontal,
        /*[in]*/ enum VisVerticalAlignTypes AlignVertical,
        /*[in]*/ VARIANT_BOOL GlueToGuide ) = 0;
      virtual HRESULT __stdcall raw_Distribute (
        /*[in]*/ enum VisDistributeTypes Distribute,
        /*[in]*/ VARIANT_BOOL GlueToGuide ) = 0;
      virtual HRESULT __stdcall raw_UpdateAlignmentBox ( ) = 0;
      virtual HRESULT __stdcall raw_Offset (
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall raw_ConnectShapes ( ) = 0;
      virtual HRESULT __stdcall raw_Flip (
        /*[in]*/ enum VisFlipDirection FlipDirection,
        /*[in]*/ enum VisFlipTypes FlipType,
        /*[in]*/ VARIANT_BOOL BlastGuards,
        /*[in]*/ double PinX,
        /*[in]*/ double PinY,
        /*[in]*/ VARIANT PinUnitsNameOrCode = vtMissing ) = 0;
      virtual HRESULT __stdcall get_ContainingPageID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_ContainingMasterID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall raw_LinkToData (
        /*[in]*/ long DataRecordsetID,
        /*[in]*/ long DataRowID,
        /*[in]*/ VARIANT_BOOL ApplyDataGraphicAfterLink ) = 0;
      virtual HRESULT __stdcall raw_BreakLinkToData (
        /*[in]*/ long DataRecordsetID ) = 0;
      virtual HRESULT __stdcall raw_GetIDs (
        /*[out]*/ SAFEARRAY * * ShapeIDs ) = 0;
      virtual HRESULT __stdcall raw_AutomaticLink (
        /*[in]*/ long DataRecordsetID,
        /*[in]*/ SAFEARRAY * * ColumnNames,
        /*[in]*/ SAFEARRAY * * AutoLinkFieldTypes,
        /*[in]*/ SAFEARRAY * * FieldNames,
        /*[in]*/ long AutoLinkBehavior,
        /*[out]*/ SAFEARRAY * * ShapeIDs,
        /*[out,retval]*/ long * pSheetCount ) = 0;
      virtual HRESULT __stdcall get_DataGraphic (
        /*[out,retval]*/ struct IVMaster * * DataGraphic ) = 0;
      virtual HRESULT __stdcall put_DataGraphic (
        /*[in]*/ struct IVMaster * DataGraphic ) = 0;
};

struct __declspec(uuid("000d070a-0000-0000-c000-000000000046"))
IVPages : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVPagePtr Item[];
    __declspec(property(get=GetCount))
    short Count;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;
    __declspec(property(get=GetPersistsEvents))
    short PersistsEvents;
    __declspec(property(get=GetItemU))
    IVPagePtr ItemU[];
    __declspec(property(get=GetItemFromID))
    IVPagePtr ItemFromID[];
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    short GetObjectType ( );
    IVPagePtr GetItem (
        const _variant_t & NameOrIndex );
    short GetCount ( );
    IVPagePtr Add ( );
    IVDocumentPtr GetDocument ( );
    short GetStat ( );
    IVEventListPtr GetEventList ( );
    short GetPersistsEvents ( );
    HRESULT GetNames (
        SAFEARRAY * * localeSpecificNameArray );
    IVPagePtr GetItemU (
        const _variant_t & NameOrIndex );
    HRESULT GetNamesU (
        SAFEARRAY * * localeIndependentNameArray );
    IUnknownPtr Get_NewEnum ( );
    IVPagePtr GetItemFromID (
        long nID );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT NameOrIndex,
        /*[out,retval]*/ struct IVPage * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[out,retval]*/ struct IVPage * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_EventList (
        /*[out,retval]*/ struct IVEventList * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PersistsEvents (
        /*[out,retval]*/ short * lpboolRet ) = 0;
      virtual HRESULT __stdcall raw_GetNames (
        /*[out]*/ SAFEARRAY * * localeSpecificNameArray ) = 0;
      virtual HRESULT __stdcall get_ItemU (
        /*[in]*/ VARIANT NameOrIndex,
        /*[out,retval]*/ struct IVPage * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_GetNamesU (
        /*[out]*/ SAFEARRAY * * localeIndependentNameArray ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppEnum ) = 0;
      virtual HRESULT __stdcall get_ItemFromID (
        /*[in]*/ long nID,
        /*[out,retval]*/ struct IVPage * * ppPage ) = 0;
};

struct __declspec(uuid("000d0710-0000-0000-c000-000000000046"))
IVWindow : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetSelectedDataRecordset,put=PutSelectedDataRecordset))
    IVDataRecordsetPtr SelectedDataRecordset;
    __declspec(property(get=GetType))
    short Type;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetPageAsObj))
    IVPagePtr PageAsObj;
    __declspec(property(get=GetZoom,put=PutZoom))
    double Zoom;
    __declspec(property(get=GetSelectedDataRowID,put=PutSelectedDataRowID))
    long SelectedDataRowID;
    __declspec(property(get=GetSelection,put=PutSelection))
    IVSelectionPtr Selection;
    __declspec(property(get=GetIndex))
    short Index;
    __declspec(property(get=GetSubType))
    short SubType;
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;
    __declspec(property(get=GetPersistsEvents))
    short PersistsEvents;
    __declspec(property(get=GetWindowHandle))
    short WindowHandle;
    __declspec(property(get=GetWindowHandle32))
    long WindowHandle32;
    __declspec(property(get=GetShowRulers,put=PutShowRulers))
    short ShowRulers;
    __declspec(property(get=GetShowGrid,put=PutShowGrid))
    short ShowGrid;
    __declspec(property(get=GetShowGuides,put=PutShowGuides))
    short ShowGuides;
    __declspec(property(get=GetShowConnectPoints,put=PutShowConnectPoints))
    short ShowConnectPoints;
    __declspec(property(get=GetShowPageBreaks,put=PutShowPageBreaks))
    short ShowPageBreaks;
    __declspec(property(get=GetPage,put=PutPage))
    _variant_t Page;
    __declspec(property(put=PutPageFromName))
    _bstr_t PageFromName;
    __declspec(property(get=GetMaster))
    _variant_t Master;
    __declspec(property(get=GetShowScrollBars,put=PutShowScrollBars))
    short ShowScrollBars;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetWindows))
    IVWindowsPtr Windows;
    __declspec(property(get=GetWindowState,put=PutWindowState))
    long WindowState;
    __declspec(property(get=GetViewFit,put=PutViewFit))
    long ViewFit;
    __declspec(property(get=GetIsEditingText))
    VARIANT_BOOL IsEditingText;
    __declspec(property(get=GetIsEditingOLE))
    VARIANT_BOOL IsEditingOLE;
    __declspec(property(get=GetParent))
    IVWindowsPtr Parent;
    __declspec(property(get=GetMasterShortcut))
    IVMasterShortcutPtr MasterShortcut;
    __declspec(property(get=GetID))
    long ID;
    __declspec(property(get=GetParentWindow))
    IVWindowPtr ParentWindow;
    __declspec(property(get=GetMergeID,put=PutMergeID))
    _bstr_t MergeID;
    __declspec(property(get=GetMergeClass,put=PutMergeClass))
    _bstr_t MergeClass;
    __declspec(property(get=GetMergePosition,put=PutMergePosition))
    long MergePosition;
    __declspec(property(get=GetAllowEditing,put=PutAllowEditing))
    VARIANT_BOOL AllowEditing;
    __declspec(property(get=GetPageTabWidth,put=PutPageTabWidth))
    double PageTabWidth;
    __declspec(property(get=GetShowPageTabs,put=PutShowPageTabs))
    VARIANT_BOOL ShowPageTabs;
    __declspec(property(get=GetInPlace))
    VARIANT_BOOL InPlace;
    __declspec(property(get=GetMergeCaption,put=PutMergeCaption))
    _bstr_t MergeCaption;
    __declspec(property(get=GetIcon,put=PutRefIcon))
    IPictureDisp * Icon;
    __declspec(property(get=GetShape))
    IVShapePtr Shape;
    __declspec(property(get=GetSelectedCell))
    IVCellPtr SelectedCell;
    __declspec(property(get=GetBackgroundColor,put=PutBackgroundColor))
    OLE_COLOR BackgroundColor;
    __declspec(property(get=GetBackgroundColorGradient,put=PutBackgroundColorGradient))
    OLE_COLOR BackgroundColorGradient;
    __declspec(property(get=GetShowPageOutline,put=PutShowPageOutline))
    VARIANT_BOOL ShowPageOutline;
    __declspec(property(get=GetScrollLock,put=PutScrollLock))
    VARIANT_BOOL ScrollLock;
    __declspec(property(get=GetZoomLock,put=PutZoomLock))
    VARIANT_BOOL ZoomLock;
    __declspec(property(get=GetZoomBehavior,put=PutZoomBehavior))
    enum VisZoomBehavior ZoomBehavior;
    __declspec(property(get=GetSelectedMasters))
    SAFEARRAY * SelectedMasters;
    __declspec(property(get=GetSelectedText,put=PutSelectedText))
    IVCharactersPtr SelectedText;
    __declspec(property(get=GetReviewerMarkupVisible,put=PutReviewerMarkupVisible))
    VARIANT_BOOL ReviewerMarkupVisible[];

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    short GetStat ( );
    short GetObjectType ( );
    HRESULT Activate ( );
    short GetType ( );
    IVDocumentPtr GetDocument ( );
    IVPagePtr GetPageAsObj ( );
    void PutPageFromName (
        _bstr_t _arg1 );
    double GetZoom ( );
    void PutZoom (
        double lpr8Ret );
    HRESULT Close ( );
    HRESULT SelectAll ( );
    HRESULT DeselectAll ( );
    IVSelectionPtr GetSelection ( );
    HRESULT Select (
        struct IVShape * SheetObject,
        short SelectAction );
    short GetIndex ( );
    HRESULT Cut ( );
    HRESULT Copy ( );
    HRESULT Paste ( );
    HRESULT Delete ( );
    HRESULT Duplicate ( );
    HRESULT Group ( );
    HRESULT Union ( );
    HRESULT Combine ( );
    HRESULT Fragment ( );
    HRESULT AddToGroup ( );
    HRESULT RemoveFromGroup ( );
    short GetSubType ( );
    HRESULT Intersect ( );
    HRESULT Subtract ( );
    IVEventListPtr GetEventList ( );
    short GetPersistsEvents ( );
    short GetWindowHandle ( );
    long GetWindowHandle32 ( );
    HRESULT Trim ( );
    HRESULT Join ( );
    short GetShowRulers ( );
    void PutShowRulers (
        short lpi2Ret );
    short GetShowGrid ( );
    void PutShowGrid (
        short lpi2Ret );
    short GetShowGuides ( );
    void PutShowGuides (
        short lpi2Ret );
    short GetShowConnectPoints ( );
    void PutShowConnectPoints (
        short lpi2Ret );
    short GetShowPageBreaks ( );
    void PutShowPageBreaks (
        short lpi2Ret );
    _variant_t GetPage ( );
    void PutPage (
        const _variant_t & lpobjRet );
    HRESULT DockedStencils (
        SAFEARRAY * * NameArray );
    _variant_t GetMaster ( );
    short GetShowScrollBars ( );
    void PutShowScrollBars (
        short lpi2Ret );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL pbVisible );
    _bstr_t GetCaption ( );
    void PutCaption (
        _bstr_t pbstrCaption );
    IVWindowsPtr GetWindows ( );
    HRESULT Scroll (
        long nxFlags,
        long nyFlags );
    HRESULT ScrollViewTo (
        double x,
        double y );
    HRESULT GetViewRect (
        double * pdLeft,
        double * pdTop,
        double * pdWidth,
        double * pdHeight );
    HRESULT SetViewRect (
        double dLeft,
        double dTop,
        double dWidth,
        double dHeight );
    HRESULT GetWindowRect (
        long * pnLeft,
        long * pnTop,
        long * pnWidth,
        long * pnHeight );
    HRESULT SetWindowRect (
        long nLeft,
        long nTop,
        long nWidth,
        long nHeight );
    long GetWindowState ( );
    void PutWindowState (
        long pnState );
    long GetViewFit ( );
    void PutViewFit (
        long pnFit );
    VARIANT_BOOL GetIsEditingText ( );
    VARIANT_BOOL GetIsEditingOLE ( );
    IVWindowsPtr GetParent ( );
    IVMasterShortcutPtr GetMasterShortcut ( );
    long GetID ( );
    IVWindowPtr GetParentWindow ( );
    _bstr_t GetMergeID ( );
    _bstr_t GetMergeClass ( );
    long GetMergePosition ( );
    VARIANT_BOOL GetAllowEditing ( );
    void PutAllowEditing (
        VARIANT_BOOL pbAllowEditing );
    double GetPageTabWidth ( );
    void PutPageTabWidth (
        double pdWidth );
    VARIANT_BOOL GetShowPageTabs ( );
    void PutShowPageTabs (
        VARIANT_BOOL pbShow );
    void PutMergeID (
        _bstr_t pbstrRet );
    void PutMergeClass (
        _bstr_t pbstrRet );
    void PutMergePosition (
        long pnRet );
    VARIANT_BOOL GetInPlace ( );
    _bstr_t GetMergeCaption ( );
    void PutMergeCaption (
        _bstr_t pbstrRet );
    IPictureDisp * GetIcon ( );
    void PutRefIcon (
        IPictureDisp * ppPictureDisp );
    IVShapePtr GetShape ( );
    IVCellPtr GetSelectedCell ( );
    IVWindowPtr NewWindow ( );
    OLE_COLOR GetBackgroundColor ( );
    void PutBackgroundColor (
        OLE_COLOR pColor );
    OLE_COLOR GetBackgroundColorGradient ( );
    void PutBackgroundColorGradient (
        OLE_COLOR pColor );
    VARIANT_BOOL GetShowPageOutline ( );
    void PutShowPageOutline (
        VARIANT_BOOL Show );
    VARIANT_BOOL GetScrollLock ( );
    void PutScrollLock (
        VARIANT_BOOL Lock );
    VARIANT_BOOL GetZoomLock ( );
    void PutZoomLock (
        VARIANT_BOOL Lock );
    enum VisZoomBehavior GetZoomBehavior ( );
    void PutZoomBehavior (
        enum VisZoomBehavior pnZoomBehavior );
    SAFEARRAY * GetSelectedMasters ( );
    IVCharactersPtr GetSelectedText ( );
    void PutSelectedText (
        struct IVCharacters * ppObjReturn );
    VARIANT_BOOL GetReviewerMarkupVisible (
        long ReviewerID );
    void PutReviewerMarkupVisible (
        long ReviewerID,
        VARIANT_BOOL viewStatus );
    void PutSelection (
        struct IVSelection * lpdispRet );
    IVDataRecordsetPtr GetSelectedDataRecordset ( );
    void PutSelectedDataRecordset (
        struct IVDataRecordset * DataRecordset );
    long GetSelectedDataRowID ( );
    void PutSelectedDataRowID (
        long DataRowID );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_Activate ( ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PageAsObj (
        /*[out,retval]*/ struct IVPage * * lpdispRet ) = 0;
      virtual HRESULT __stdcall put_PageFromName (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_Zoom (
        /*[out,retval]*/ double * lpr8Ret ) = 0;
      virtual HRESULT __stdcall put_Zoom (
        /*[in]*/ double lpr8Ret ) = 0;
      virtual HRESULT __stdcall raw_Close ( ) = 0;
      virtual HRESULT __stdcall raw_SelectAll ( ) = 0;
      virtual HRESULT __stdcall raw_DeselectAll ( ) = 0;
      virtual HRESULT __stdcall get_Selection (
        /*[out,retval]*/ struct IVSelection * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_Select (
        /*[in]*/ struct IVShape * SheetObject,
        /*[in]*/ short SelectAction ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_Cut ( ) = 0;
      virtual HRESULT __stdcall raw_Copy ( ) = 0;
      virtual HRESULT __stdcall raw_Paste ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Duplicate ( ) = 0;
      virtual HRESULT __stdcall raw_Group ( ) = 0;
      virtual HRESULT __stdcall raw_Union ( ) = 0;
      virtual HRESULT __stdcall raw_Combine ( ) = 0;
      virtual HRESULT __stdcall raw_Fragment ( ) = 0;
      virtual HRESULT __stdcall raw_AddToGroup ( ) = 0;
      virtual HRESULT __stdcall raw_RemoveFromGroup ( ) = 0;
      virtual HRESULT __stdcall get_SubType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_Intersect ( ) = 0;
      virtual HRESULT __stdcall raw_Subtract ( ) = 0;
      virtual HRESULT __stdcall get_EventList (
        /*[out,retval]*/ struct IVEventList * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PersistsEvents (
        /*[out,retval]*/ short * lpboolRet ) = 0;
      virtual HRESULT __stdcall get_WindowHandle (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_WindowHandle32 (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall raw_Trim ( ) = 0;
      virtual HRESULT __stdcall raw_Join ( ) = 0;
      virtual HRESULT __stdcall get_ShowRulers (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_ShowRulers (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ShowGrid (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_ShowGrid (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ShowGuides (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_ShowGuides (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ShowConnectPoints (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_ShowConnectPoints (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ShowPageBreaks (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_ShowPageBreaks (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Page (
        /*[out,retval]*/ VARIANT * lpobjRet ) = 0;
      virtual HRESULT __stdcall put_Page (
        /*[in]*/ VARIANT lpobjRet ) = 0;
      virtual HRESULT __stdcall raw_DockedStencils (
        /*[out]*/ SAFEARRAY * * NameArray ) = 0;
      virtual HRESULT __stdcall get_Master (
        /*[out,retval]*/ VARIANT * lpobjRet ) = 0;
      virtual HRESULT __stdcall get_ShowScrollBars (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_ShowScrollBars (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * pbVisible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL pbVisible ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * pbstrCaption ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR pbstrCaption ) = 0;
      virtual HRESULT __stdcall get_Windows (
        /*[out,retval]*/ struct IVWindows * * ppWins ) = 0;
      virtual HRESULT __stdcall raw_Scroll (
        /*[in]*/ long nxFlags,
        /*[in]*/ long nyFlags ) = 0;
      virtual HRESULT __stdcall raw_ScrollViewTo (
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall raw_GetViewRect (
        /*[out]*/ double * pdLeft,
        /*[out]*/ double * pdTop,
        /*[out]*/ double * pdWidth,
        /*[out]*/ double * pdHeight ) = 0;
      virtual HRESULT __stdcall raw_SetViewRect (
        /*[in]*/ double dLeft,
        /*[in]*/ double dTop,
        /*[in]*/ double dWidth,
        /*[in]*/ double dHeight ) = 0;
      virtual HRESULT __stdcall raw_GetWindowRect (
        /*[out]*/ long * pnLeft,
        /*[out]*/ long * pnTop,
        /*[out]*/ long * pnWidth,
        /*[out]*/ long * pnHeight ) = 0;
      virtual HRESULT __stdcall raw_SetWindowRect (
        /*[in]*/ long nLeft,
        /*[in]*/ long nTop,
        /*[in]*/ long nWidth,
        /*[in]*/ long nHeight ) = 0;
      virtual HRESULT __stdcall get_WindowState (
        /*[out,retval]*/ long * pnState ) = 0;
      virtual HRESULT __stdcall put_WindowState (
        /*[in]*/ long pnState ) = 0;
      virtual HRESULT __stdcall get_ViewFit (
        /*[out,retval]*/ long * pnFit ) = 0;
      virtual HRESULT __stdcall put_ViewFit (
        /*[in]*/ long pnFit ) = 0;
      virtual HRESULT __stdcall get_IsEditingText (
        /*[out,retval]*/ VARIANT_BOOL * pbEditingText ) = 0;
      virtual HRESULT __stdcall get_IsEditingOLE (
        /*[out,retval]*/ VARIANT_BOOL * pbEditingOLE ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IVWindows * * ppParent ) = 0;
      virtual HRESULT __stdcall get_MasterShortcut (
        /*[out,retval]*/ struct IVMasterShortcut * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ long * pnID ) = 0;
      virtual HRESULT __stdcall get_ParentWindow (
        /*[out,retval]*/ struct IVWindow * * ppParentWindow ) = 0;
      virtual HRESULT __stdcall get_MergeID (
        /*[out,retval]*/ BSTR * pbstrRet ) = 0;
      virtual HRESULT __stdcall get_MergeClass (
        /*[out,retval]*/ BSTR * pbstrRet ) = 0;
      virtual HRESULT __stdcall get_MergePosition (
        /*[out,retval]*/ long * pnRet ) = 0;
      virtual HRESULT __stdcall get_AllowEditing (
        /*[out,retval]*/ VARIANT_BOOL * pbAllowEditing ) = 0;
      virtual HRESULT __stdcall put_AllowEditing (
        /*[in]*/ VARIANT_BOOL pbAllowEditing ) = 0;
      virtual HRESULT __stdcall get_PageTabWidth (
        /*[out,retval]*/ double * pdWidth ) = 0;
      virtual HRESULT __stdcall put_PageTabWidth (
        /*[in]*/ double pdWidth ) = 0;
      virtual HRESULT __stdcall get_ShowPageTabs (
        /*[out,retval]*/ VARIANT_BOOL * pbShow ) = 0;
      virtual HRESULT __stdcall put_ShowPageTabs (
        /*[in]*/ VARIANT_BOOL pbShow ) = 0;
      virtual HRESULT __stdcall put_MergeID (
        /*[in]*/ BSTR pbstrRet ) = 0;
      virtual HRESULT __stdcall put_MergeClass (
        /*[in]*/ BSTR pbstrRet ) = 0;
      virtual HRESULT __stdcall put_MergePosition (
        /*[in]*/ long pnRet ) = 0;
      virtual HRESULT __stdcall get_InPlace (
        /*[out,retval]*/ VARIANT_BOOL * pbInPlace ) = 0;
      virtual HRESULT __stdcall get_MergeCaption (
        /*[out,retval]*/ BSTR * pbstrRet ) = 0;
      virtual HRESULT __stdcall put_MergeCaption (
        /*[in]*/ BSTR pbstrRet ) = 0;
      virtual HRESULT __stdcall get_Icon (
        /*[out,retval]*/ IPictureDisp * * ppPictureDisp ) = 0;
      virtual HRESULT __stdcall putref_Icon (
        /*[in]*/ IPictureDisp * ppPictureDisp ) = 0;
      virtual HRESULT __stdcall get_Shape (
        /*[out,retval]*/ struct IVShape * * lpobjRet ) = 0;
      virtual HRESULT __stdcall get_SelectedCell (
        /*[out,retval]*/ struct IVCell * * lpobjRet ) = 0;
      virtual HRESULT __stdcall raw_NewWindow (
        /*[out,retval]*/ struct IVWindow * * lpobjRet ) = 0;
      virtual HRESULT __stdcall get_BackgroundColor (
        /*[out,retval]*/ OLE_COLOR * pColor ) = 0;
      virtual HRESULT __stdcall put_BackgroundColor (
        /*[in]*/ OLE_COLOR pColor ) = 0;
      virtual HRESULT __stdcall get_BackgroundColorGradient (
        /*[out,retval]*/ OLE_COLOR * pColor ) = 0;
      virtual HRESULT __stdcall put_BackgroundColorGradient (
        /*[in]*/ OLE_COLOR pColor ) = 0;
      virtual HRESULT __stdcall get_ShowPageOutline (
        /*[out,retval]*/ VARIANT_BOOL * Show ) = 0;
      virtual HRESULT __stdcall put_ShowPageOutline (
        /*[in]*/ VARIANT_BOOL Show ) = 0;
      virtual HRESULT __stdcall get_ScrollLock (
        /*[out,retval]*/ VARIANT_BOOL * Lock ) = 0;
      virtual HRESULT __stdcall put_ScrollLock (
        /*[in]*/ VARIANT_BOOL Lock ) = 0;
      virtual HRESULT __stdcall get_ZoomLock (
        /*[out,retval]*/ VARIANT_BOOL * Lock ) = 0;
      virtual HRESULT __stdcall put_ZoomLock (
        /*[in]*/ VARIANT_BOOL Lock ) = 0;
      virtual HRESULT __stdcall get_ZoomBehavior (
        /*[out,retval]*/ enum VisZoomBehavior * pnZoomBehavior ) = 0;
      virtual HRESULT __stdcall put_ZoomBehavior (
        /*[in]*/ enum VisZoomBehavior pnZoomBehavior ) = 0;
      virtual HRESULT __stdcall get_SelectedMasters (
        /*[out,retval]*/ SAFEARRAY * * SelectedArray ) = 0;
      virtual HRESULT __stdcall get_SelectedText (
        /*[out,retval]*/ struct IVCharacters * * ppObjReturn ) = 0;
      virtual HRESULT __stdcall put_SelectedText (
        /*[in]*/ struct IVCharacters * ppObjReturn ) = 0;
      virtual HRESULT __stdcall get_ReviewerMarkupVisible (
        /*[in]*/ long ReviewerID,
        /*[out,retval]*/ VARIANT_BOOL * viewStatus ) = 0;
      virtual HRESULT __stdcall put_ReviewerMarkupVisible (
        /*[in]*/ long ReviewerID,
        /*[in]*/ VARIANT_BOOL viewStatus ) = 0;
      virtual HRESULT __stdcall put_Selection (
        /*[in]*/ struct IVSelection * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_SelectedDataRecordset (
        /*[out,retval]*/ struct IVDataRecordset * * DataRecordset ) = 0;
      virtual HRESULT __stdcall put_SelectedDataRecordset (
        /*[in]*/ struct IVDataRecordset * DataRecordset ) = 0;
      virtual HRESULT __stdcall get_SelectedDataRowID (
        /*[out,retval]*/ long * DataRowID ) = 0;
      virtual HRESULT __stdcall put_SelectedDataRowID (
        /*[in]*/ long DataRowID ) = 0;
};

struct __declspec(uuid("000d0711-0000-0000-c000-000000000046"))
IVWindows : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVWindowPtr Item[];
    __declspec(property(get=GetCount))
    short Count;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;
    __declspec(property(get=GetPersistsEvents))
    short PersistsEvents;
    __declspec(property(get=GetItemFromID))
    IVWindowPtr ItemFromID[];
    __declspec(property(get=GetItemEx))
    IVWindowPtr ItemEx[];
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    short GetObjectType ( );
    IVWindowPtr GetItem (
        short Index );
    short GetCount ( );
    HRESULT VoidArrange ( );
    IVEventListPtr GetEventList ( );
    short GetPersistsEvents ( );
    IVWindowPtr Add_WithoutMergeArgs (
        const _variant_t & bstrCaption = vtMissing,
        const _variant_t & nFlags = vtMissing,
        const _variant_t & nType = vtMissing,
        const _variant_t & nLeft = vtMissing,
        const _variant_t & nTop = vtMissing,
        const _variant_t & nWidth = vtMissing,
        const _variant_t & nHeight = vtMissing );
    HRESULT Arrange (
        const _variant_t & nArrangeFlags = vtMissing );
    IUnknownPtr Get_NewEnum ( );
    IVWindowPtr GetItemFromID (
        long nID );
    IVWindowPtr Add (
        const _variant_t & bstrCaption = vtMissing,
        const _variant_t & nFlags = vtMissing,
        const _variant_t & nType = vtMissing,
        const _variant_t & nLeft = vtMissing,
        const _variant_t & nTop = vtMissing,
        const _variant_t & nWidth = vtMissing,
        const _variant_t & nHeight = vtMissing,
        const _variant_t & bstrMergeID = vtMissing,
        const _variant_t & bstrMergeClass = vtMissing,
        const _variant_t & nMergePosition = vtMissing );
    IVWindowPtr GetItemEx (
        const _variant_t & CaptionOrIndex );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ short Index,
        /*[out,retval]*/ struct IVWindow * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_VoidArrange ( ) = 0;
      virtual HRESULT __stdcall get_EventList (
        /*[out,retval]*/ struct IVEventList * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PersistsEvents (
        /*[out,retval]*/ short * lpboolRet ) = 0;
      virtual HRESULT __stdcall raw_Add_WithoutMergeArgs (
        /*[in]*/ VARIANT bstrCaption,
        /*[in]*/ VARIANT nFlags,
        /*[in]*/ VARIANT nType,
        /*[in]*/ VARIANT nLeft,
        /*[in]*/ VARIANT nTop,
        /*[in]*/ VARIANT nWidth,
        /*[in]*/ VARIANT nHeight,
        /*[out,retval]*/ struct IVWindow * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_Arrange (
        /*[in]*/ VARIANT nArrangeFlags = vtMissing ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppEnum ) = 0;
      virtual HRESULT __stdcall get_ItemFromID (
        /*[in]*/ long nID,
        /*[out,retval]*/ struct IVWindow * * ppWin ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT bstrCaption,
        /*[in]*/ VARIANT nFlags,
        /*[in]*/ VARIANT nType,
        /*[in]*/ VARIANT nLeft,
        /*[in]*/ VARIANT nTop,
        /*[in]*/ VARIANT nWidth,
        /*[in]*/ VARIANT nHeight,
        /*[in]*/ VARIANT bstrMergeID,
        /*[in]*/ VARIANT bstrMergeClass,
        /*[in]*/ VARIANT nMergePosition,
        /*[out,retval]*/ struct IVWindow * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ItemEx (
        /*[in]*/ VARIANT CaptionOrIndex,
        /*[out,retval]*/ struct IVWindow * * ppWin ) = 0;
};

struct __declspec(uuid("000d0727-0000-0000-c000-000000000046"))
IVMasterShortcut : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetIndex))
    short Index;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetPrompt,put=PutPrompt))
    _bstr_t Prompt;
    __declspec(property(get=GetAlignName,put=PutAlignName))
    short AlignName;
    __declspec(property(get=GetIconSize,put=PutIconSize))
    short IconSize;
    __declspec(property(get=GetID))
    long ID;
    __declspec(property(get=GetTargetDocumentName,put=PutTargetDocumentName))
    _bstr_t TargetDocumentName;
    __declspec(property(get=GetTargetMasterName,put=PutTargetMasterName))
    _bstr_t TargetMasterName;
    __declspec(property(get=GetTargetBaseID,put=PutTargetBaseID))
    _bstr_t TargetBaseID;
    __declspec(property(get=GetDropActions,put=PutDropActions))
    _bstr_t DropActions;
    __declspec(property(get=GetShapeHelp,put=PutShapeHelp))
    _bstr_t ShapeHelp;
    __declspec(property(get=GetNameU,put=PutNameU))
    _bstr_t NameU;
    __declspec(property(get=GetIndexInStencil,put=PutIndexInStencil))
    short IndexInStencil;
    __declspec(property(get=GetIcon,put=PutRefIcon))
    IPictureDisp * Icon;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    IVDocumentPtr GetDocument ( );
    short GetIndex ( );
    short GetObjectType ( );
    short GetStat ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t lpLocaleSpecificName );
    _bstr_t GetPrompt ( );
    void PutPrompt (
        _bstr_t lpbstrRet );
    short GetAlignName ( );
    void PutAlignName (
        short lpi2Ret );
    short GetIconSize ( );
    void PutIconSize (
        short lpi2Ret );
    HRESULT Delete ( );
    HRESULT ImportIcon (
        _bstr_t FileName );
    HRESULT ExportIcon (
        _bstr_t FileName,
        short Flags,
        const _variant_t & TransparentRGB = vtMissing );
    long GetID ( );
    IVWindowPtr OpenIconWindow ( );
    _bstr_t GetTargetDocumentName ( );
    void PutTargetDocumentName (
        _bstr_t lpbstrRet );
    _bstr_t GetTargetMasterName ( );
    void PutTargetMasterName (
        _bstr_t lpLocaleIndependentName );
    _bstr_t GetTargetBaseID ( );
    void PutTargetBaseID (
        _bstr_t lpbstrRet );
    _bstr_t GetDropActions ( );
    void PutDropActions (
        _bstr_t lpbstrRet );
    _bstr_t GetShapeHelp ( );
    void PutShapeHelp (
        _bstr_t lpbstrRet );
    _bstr_t GetNameU ( );
    void PutNameU (
        _bstr_t lpLocaleIndependentName );
    short GetIndexInStencil ( );
    IPictureDisp * GetIcon ( );
    void PutRefIcon (
        IPictureDisp * ppPictureDisp );
    void PutIndexInStencil (
        short lpi2Ret );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * lpLocaleSpecificName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR lpLocaleSpecificName ) = 0;
      virtual HRESULT __stdcall get_Prompt (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Prompt (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_AlignName (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_AlignName (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_IconSize (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_IconSize (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_ImportIcon (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_ExportIcon (
        /*[in]*/ BSTR FileName,
        /*[in]*/ short Flags,
        /*[in]*/ VARIANT TransparentRGB = vtMissing ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall raw_OpenIconWindow (
        /*[out,retval]*/ struct IVWindow * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_TargetDocumentName (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_TargetDocumentName (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_TargetMasterName (
        /*[out,retval]*/ BSTR * lpLocaleIndependentName ) = 0;
      virtual HRESULT __stdcall put_TargetMasterName (
        /*[in]*/ BSTR lpLocaleIndependentName ) = 0;
      virtual HRESULT __stdcall get_TargetBaseID (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_TargetBaseID (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_DropActions (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_DropActions (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_ShapeHelp (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_ShapeHelp (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_NameU (
        /*[out,retval]*/ BSTR * lpLocaleIndependentName ) = 0;
      virtual HRESULT __stdcall put_NameU (
        /*[in]*/ BSTR lpLocaleIndependentName ) = 0;
      virtual HRESULT __stdcall get_IndexInStencil (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Icon (
        /*[out,retval]*/ IPictureDisp * * ppPictureDisp ) = 0;
      virtual HRESULT __stdcall putref_Icon (
        /*[in]*/ IPictureDisp * ppPictureDisp ) = 0;
      virtual HRESULT __stdcall put_IndexInStencil (
        /*[in]*/ short lpi2Ret ) = 0;
};

struct __declspec(uuid("000d0726-0000-0000-c000-000000000046"))
IVMasterShortcuts : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVMasterShortcutPtr Item[];
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetCount))
    short Count;
    __declspec(property(get=GetItemU))
    IVMasterShortcutPtr ItemU[];
    __declspec(property(get=GetItemFromID))
    IVMasterShortcutPtr ItemFromID[];
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    IVDocumentPtr GetDocument ( );
    short GetObjectType ( );
    short GetStat ( );
    IVMasterShortcutPtr GetItem (
        const _variant_t & NameOrIndex );
    short GetCount ( );
    HRESULT GetNames (
        SAFEARRAY * * localeSpecificNameArray );
    IVMasterShortcutPtr Drop (
        IUnknown * ObjectToDrop,
        short xPos,
        short yPos );
    IVMasterShortcutPtr GetItemU (
        const _variant_t & NameOrIndex );
    HRESULT GetNamesU (
        SAFEARRAY * * localeIndependentNameArray );
    IUnknownPtr Get_NewEnum ( );
    IVMasterShortcutPtr GetItemFromID (
        long nID );
    HRESULT Paste (
        const _variant_t & Flags = vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT NameOrIndex,
        /*[out,retval]*/ struct IVMasterShortcut * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_GetNames (
        /*[out]*/ SAFEARRAY * * localeSpecificNameArray ) = 0;
      virtual HRESULT __stdcall raw_Drop (
        /*[in]*/ IUnknown * ObjectToDrop,
        /*[in]*/ short xPos,
        /*[in]*/ short yPos,
        /*[out,retval]*/ struct IVMasterShortcut * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ItemU (
        /*[in]*/ VARIANT NameOrIndex,
        /*[out,retval]*/ struct IVMasterShortcut * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_GetNamesU (
        /*[out]*/ SAFEARRAY * * localeIndependentNameArray ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppEnum ) = 0;
      virtual HRESULT __stdcall get_ItemFromID (
        /*[in]*/ long nID,
        /*[out,retval]*/ struct IVMasterShortcut * * ppMasterShortcut ) = 0;
      virtual HRESULT __stdcall raw_Paste (
        /*[in]*/ VARIANT Flags = vtMissing ) = 0;
};

struct __declspec(uuid("000d072a-0000-0000-c000-000000000046"))
IVMouseEvent : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetToString))
    _bstr_t ToString;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetObjectType))
    enum VisObjectTypes ObjectType;
    __declspec(property(get=GetWindow))
    IVWindowPtr Window;
    __declspec(property(get=GetButton))
    long Button;
    __declspec(property(get=GetKeyButtonState))
    long KeyButtonState;
    __declspec(property(get=Getx))
    double x;
    __declspec(property(get=Gety))
    double y;
    __declspec(property(get=GetDragState))
    enum VisMouseMoveDragStates DragState;
    __declspec(property(get=GetStat))
    short Stat;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetToString ( );
    IVApplicationPtr GetApplication ( );
    enum VisObjectTypes GetObjectType ( );
    IVWindowPtr GetWindow ( );
    long GetButton ( );
    long GetKeyButtonState ( );
    double Getx ( );
    double Gety ( );
    enum VisMouseMoveDragStates GetDragState ( );
    short GetStat ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ToString (
        /*[out,retval]*/ BSTR * pbstrString ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ enum VisObjectTypes * peType ) = 0;
      virtual HRESULT __stdcall get_Window (
        /*[out,retval]*/ struct IVWindow * * ppWindow ) = 0;
      virtual HRESULT __stdcall get_Button (
        /*[out,retval]*/ long * pnButton ) = 0;
      virtual HRESULT __stdcall get_KeyButtonState (
        /*[out,retval]*/ long * pnKeyButtonState ) = 0;
      virtual HRESULT __stdcall get_x (
        /*[out,retval]*/ double * pdX ) = 0;
      virtual HRESULT __stdcall get_y (
        /*[out,retval]*/ double * pdY ) = 0;
      virtual HRESULT __stdcall get_DragState (
        /*[out,retval]*/ enum VisMouseMoveDragStates * peDragState ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
};

struct __declspec(uuid("000d072b-0000-0000-c000-000000000046"))
IVKeyboardEvent : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetToString))
    _bstr_t ToString;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetObjectType))
    enum VisObjectTypes ObjectType;
    __declspec(property(get=GetWindow))
    IVWindowPtr Window;
    __declspec(property(get=GetKeyCode))
    long KeyCode;
    __declspec(property(get=GetKeyButtonState))
    long KeyButtonState;
    __declspec(property(get=GetKeyAscii))
    long KeyAscii;
    __declspec(property(get=GetStat))
    short Stat;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetToString ( );
    IVApplicationPtr GetApplication ( );
    enum VisObjectTypes GetObjectType ( );
    IVWindowPtr GetWindow ( );
    long GetKeyCode ( );
    long GetKeyButtonState ( );
    long GetKeyAscii ( );
    short GetStat ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ToString (
        /*[out,retval]*/ BSTR * pbstrString ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ enum VisObjectTypes * peType ) = 0;
      virtual HRESULT __stdcall get_Window (
        /*[out,retval]*/ struct IVWindow * * ppWindow ) = 0;
      virtual HRESULT __stdcall get_KeyCode (
        /*[out,retval]*/ long * pnKeyCode ) = 0;
      virtual HRESULT __stdcall get_KeyButtonState (
        /*[out,retval]*/ long * pnKeyButtonState ) = 0;
      virtual HRESULT __stdcall get_KeyAscii (
        /*[out,retval]*/ long * pnKeyAscii ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
};

struct __declspec(uuid("000d071c-0000-0000-c000-000000000046"))
IVGlobal : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetActiveDocument))
    IVDocumentPtr ActiveDocument;
    __declspec(property(get=GetActivePage))
    IVPagePtr ActivePage;
    __declspec(property(get=GetActiveWindow))
    IVWindowPtr ActiveWindow;
    __declspec(property(get=GetDocuments))
    IVDocumentsPtr Documents;
    __declspec(property(get=GetWindows))
    IVWindowsPtr Windows;
    __declspec(property(get=GetAddons))
    IVAddonsPtr Addons;
    __declspec(property(get=GetVbe))
    IDispatchPtr Vbe;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    IVDocumentPtr GetActiveDocument ( );
    IVPagePtr GetActivePage ( );
    IVWindowPtr GetActiveWindow ( );
    IVDocumentsPtr GetDocuments ( );
    IVWindowsPtr GetWindows ( );
    IVAddonsPtr GetAddons ( );
    IDispatchPtr GetVbe ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ActiveDocument (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ActivePage (
        /*[out,retval]*/ struct IVPage * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ActiveWindow (
        /*[out,retval]*/ struct IVWindow * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Documents (
        /*[out,retval]*/ struct IVDocuments * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Windows (
        /*[out,retval]*/ struct IVWindows * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Addons (
        /*[out,retval]*/ struct IVAddons * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Vbe (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
};

struct __declspec(uuid("000d0d0e-0000-0000-c000-000000000046"))
IVExtender : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;
    __declspec(property(get=GetPersistsEvents))
    short PersistsEvents;
    __declspec(property(get=GetParent))
    IUnknownPtr Parent;
    __declspec(property(get=GetShape))
    IVShapePtr Shape;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetNameID))
    _bstr_t NameID;
    __declspec(property(get=GetClassID))
    _bstr_t ClassID;
    __declspec(property(get=GetShapeObject))
    IDispatchPtr ShapeObject;
    __declspec(property(get=GetShapeID16))
    short ShapeID16;
    __declspec(property(get=GetCells))
    IVCellPtr Cells[];
    __declspec(property(get=GetCellsSRC))
    IVCellPtr CellsSRC[][][];
    __declspec(property(get=GetData1,put=PutData1))
    _bstr_t Data1;
    __declspec(property(get=GetData2,put=PutData2))
    _bstr_t Data2;
    __declspec(property(get=GetData3,put=PutData3))
    _bstr_t Data3;
    __declspec(property(get=GetHelp,put=PutHelp))
    _bstr_t Help;
    __declspec(property(get=GetFromConnects))
    IVConnectsPtr FromConnects;
    __declspec(property(get=GetHyperlink))
    IVHyperlinkPtr Hyperlink;
    __declspec(property(get=GetMaster))
    IVMasterPtr Master;
    __declspec(property(get=GetProgID))
    _bstr_t ProgID;
    __declspec(property(get=GetObjectIsInherited))
    short ObjectIsInherited;
    __declspec(property(get=GetRowCount))
    short RowCount[];
    __declspec(property(get=GetShapeID))
    long ShapeID;
    __declspec(property(get=GetObject))
    IUnknownPtr Object;
    __declspec(property(get=GetShapeIndex))
    long ShapeIndex;
    __declspec(property(get=GetRowsCellCount))
    short RowsCellCount[][];
    __declspec(property(get=GetRowType,put=PutRowType))
    short RowType[][];
    __declspec(property(get=GetConnects))
    IVConnectsPtr Connects;
    __declspec(property(get=GetShapeIndex16))
    short ShapeIndex16;
    __declspec(property(get=GetStyle,put=PutStyle))
    _bstr_t Style;
    __declspec(property(get=GetLineStyle,put=PutLineStyle))
    _bstr_t LineStyle;
    __declspec(property(get=GetFillStyle,put=PutFillStyle))
    _bstr_t FillStyle;
    __declspec(property(put=PutStyleKeepFmt))
    _bstr_t StyleKeepFmt;
    __declspec(property(put=PutLineStyleKeepFmt))
    _bstr_t LineStyleKeepFmt;
    __declspec(property(put=PutFillStyleKeepFmt))
    _bstr_t FillStyleKeepFmt;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetShapeParent))
    IDispatchPtr ShapeParent;
    __declspec(property(get=GetUniqueID))
    _bstr_t UniqueID[];
    __declspec(property(get=GetContainingPage))
    IVPagePtr ContainingPage;
    __declspec(property(get=GetContainingMaster))
    IVMasterPtr ContainingMaster;
    __declspec(property(get=GetContainingShape))
    IVShapePtr ContainingShape;
    __declspec(property(get=GetSectionExists))
    short SectionExists[][];
    __declspec(property(get=GetRowExists))
    short RowExists[][][];
    __declspec(property(get=GetCellExists))
    short CellExists[][];
    __declspec(property(get=GetCellsSRCExists))
    short CellsSRCExists[][][][];
    __declspec(property(get=GetLayerCount))
    short LayerCount;
    __declspec(property(get=GetLayer))
    IVLayerPtr Layer[];

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pbstr );
    IUnknownPtr GetObject ( );
    IUnknownPtr GetParent ( );
    HRESULT Delete ( );
    HRESULT Index ( );
    IVShapePtr GetShape ( );
    HRESULT VoidGroup ( );
    HRESULT BringForward ( );
    HRESULT BringToFront ( );
    HRESULT ConvertToGroup ( );
    HRESULT SendBackward ( );
    HRESULT SendToBack ( );
    IVDocumentPtr GetDocument ( );
    IDispatchPtr GetShapeParent ( );
    IVApplicationPtr GetApplication ( );
    IVMasterPtr GetMaster ( );
    IVCellPtr GetCells (
        _bstr_t localeSpecificCellName );
    IVCellPtr GetCellsSRC (
        short Section,
        short Row,
        short Column );
    _bstr_t GetData1 ( );
    void PutData1 (
        _bstr_t lpbstrRet );
    _bstr_t GetData2 ( );
    void PutData2 (
        _bstr_t lpbstrRet );
    _bstr_t GetData3 ( );
    void PutData3 (
        _bstr_t lpbstrRet );
    _bstr_t GetHelp ( );
    void PutHelp (
        _bstr_t lpbstrRet );
    _bstr_t GetNameID ( );
    HRESULT ShapeCopy ( );
    HRESULT ShapeCut ( );
    HRESULT ShapeDelete ( );
    HRESULT VoidShapeDuplicate ( );
    short GetRowCount (
        short Section );
    short AddSection (
        short Section );
    HRESULT DeleteSection (
        short Section );
    short AddRow (
        short Section,
        short Row,
        short RowTag );
    HRESULT DeleteRow (
        short Section,
        short Row );
    short GetRowsCellCount (
        short Section,
        short Row );
    short GetRowType (
        short Section,
        short Row );
    void PutRowType (
        short Section,
        short Row,
        short lpi2Ret );
    HRESULT SetCenter (
        double xPos,
        double yPos );
    IVConnectsPtr GetConnects ( );
    short GetShapeIndex16 ( );
    _bstr_t GetStyle ( );
    void PutStyle (
        _bstr_t lpbstrRet );
    void PutStyleKeepFmt (
        _bstr_t _arg1 );
    _bstr_t GetLineStyle ( );
    void PutLineStyle (
        _bstr_t lpbstrRet );
    void PutLineStyleKeepFmt (
        _bstr_t _arg1 );
    _bstr_t GetFillStyle ( );
    void PutFillStyle (
        _bstr_t lpbstrRet );
    void PutFillStyleKeepFmt (
        _bstr_t _arg1 );
    HRESULT Export (
        _bstr_t FileName );
    _bstr_t GetUniqueID (
        short fUniqueID );
    IVPagePtr GetContainingPage ( );
    IVMasterPtr GetContainingMaster ( );
    IVShapePtr GetContainingShape ( );
    short GetSectionExists (
        short Section,
        short fExistsLocally );
    short GetRowExists (
        short Section,
        short Row,
        short fExistsLocally );
    short GetCellExists (
        _bstr_t localeSpecificCellName,
        short fExistsLocally );
    short GetCellsSRCExists (
        short Section,
        short Row,
        short Column,
        short fExistsLocally );
    short GetLayerCount ( );
    IVLayerPtr GetLayer (
        short Index );
    short AddNamedRow (
        short Section,
        _bstr_t RowName,
        short RowTag );
    short AddRows (
        short Section,
        short Row,
        short RowTag,
        short RowCount );
    IVEventListPtr GetEventList ( );
    short GetPersistsEvents ( );
    _bstr_t GetClassID ( );
    IDispatchPtr GetShapeObject ( );
    IVWindowPtr OpenSheetWindow ( );
    short GetShapeID16 ( );
    HRESULT GetFormulas (
        SAFEARRAY * * SRCStream,
        SAFEARRAY * * formulaArray );
    HRESULT GetResults (
        SAFEARRAY * * SRCStream,
        short Flags,
        SAFEARRAY * * UnitsNamesOrCodes,
        SAFEARRAY * * resultArray );
    short SetFormulas (
        SAFEARRAY * * SRCStream,
        SAFEARRAY * * formulaArray,
        short Flags );
    short SetResults (
        SAFEARRAY * * SRCStream,
        SAFEARRAY * * UnitsNamesOrCodes,
        SAFEARRAY * * resultArray,
        short Flags );
    IVConnectsPtr GetFromConnects ( );
    HRESULT BoundingBox (
        short Flags,
        double * lpr8Left,
        double * lpr8Bottom,
        double * lpr8Right,
        double * lpr8Top );
    short HitTest (
        double xPos,
        double yPos,
        double Tolerance );
    IVHyperlinkPtr GetHyperlink ( );
    _bstr_t GetProgID ( );
    short GetObjectIsInherited ( );
    long GetShapeID ( );
    long GetShapeIndex ( );
    IVShapePtr Group ( );
    IVShapePtr ShapeDuplicate ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pbstr ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pbstr ) = 0;
      virtual HRESULT __stdcall get_Object (
        /*[out,retval]*/ IUnknown * * ppunk ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IUnknown * * ppunk ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Index ( ) = 0;
      virtual HRESULT __stdcall get_Shape (
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_VoidGroup ( ) = 0;
      virtual HRESULT __stdcall raw_BringForward ( ) = 0;
      virtual HRESULT __stdcall raw_BringToFront ( ) = 0;
      virtual HRESULT __stdcall raw_ConvertToGroup ( ) = 0;
      virtual HRESULT __stdcall raw_SendBackward ( ) = 0;
      virtual HRESULT __stdcall raw_SendToBack ( ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ShapeParent (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Master (
        /*[out,retval]*/ struct IVMaster * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Cells (
        /*[in]*/ BSTR localeSpecificCellName,
        /*[out,retval]*/ struct IVCell * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_CellsSRC (
        /*[in]*/ short Section,
        /*[in]*/ short Row,
        /*[in]*/ short Column,
        /*[out,retval]*/ struct IVCell * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Data1 (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Data1 (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_Data2 (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Data2 (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_Data3 (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Data3 (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_Help (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Help (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_NameID (
        /*[out,retval]*/ BSTR * lpLocaleIndependentName ) = 0;
      virtual HRESULT __stdcall raw_ShapeCopy ( ) = 0;
      virtual HRESULT __stdcall raw_ShapeCut ( ) = 0;
      virtual HRESULT __stdcall raw_ShapeDelete ( ) = 0;
      virtual HRESULT __stdcall raw_VoidShapeDuplicate ( ) = 0;
      virtual HRESULT __stdcall get_RowCount (
        /*[in]*/ short Section,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_AddSection (
        /*[in]*/ short Section,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_DeleteSection (
        /*[in]*/ short Section ) = 0;
      virtual HRESULT __stdcall raw_AddRow (
        /*[in]*/ short Section,
        /*[in]*/ short Row,
        /*[in]*/ short RowTag,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_DeleteRow (
        /*[in]*/ short Section,
        /*[in]*/ short Row ) = 0;
      virtual HRESULT __stdcall get_RowsCellCount (
        /*[in]*/ short Section,
        /*[in]*/ short Row,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_RowType (
        /*[in]*/ short Section,
        /*[in]*/ short Row,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_RowType (
        /*[in]*/ short Section,
        /*[in]*/ short Row,
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_SetCenter (
        /*[in]*/ double xPos,
        /*[in]*/ double yPos ) = 0;
      virtual HRESULT __stdcall get_Connects (
        /*[out,retval]*/ struct IVConnects * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ShapeIndex16 (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_StyleKeepFmt (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_LineStyle (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_LineStyle (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_LineStyleKeepFmt (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_FillStyle (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_FillStyle (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_FillStyleKeepFmt (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall raw_Export (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall get_UniqueID (
        /*[in]*/ short fUniqueID,
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_ContainingPage (
        /*[out,retval]*/ struct IVPage * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ContainingMaster (
        /*[out,retval]*/ struct IVMaster * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ContainingShape (
        /*[out,retval]*/ struct IVShape * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_SectionExists (
        /*[in]*/ short Section,
        /*[in]*/ short fExistsLocally,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_RowExists (
        /*[in]*/ short Section,
        /*[in]*/ short Row,
        /*[in]*/ short fExistsLocally,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_CellExists (
        /*[in]*/ BSTR localeSpecificCellName,
        /*[in]*/ short fExistsLocally,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_CellsSRCExists (
        /*[in]*/ short Section,
        /*[in]*/ short Row,
        /*[in]*/ short Column,
        /*[in]*/ short fExistsLocally,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_LayerCount (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Layer (
        /*[in]*/ short Index,
        /*[out,retval]*/ struct IVLayer * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_AddNamedRow (
        /*[in]*/ short Section,
        /*[in]*/ BSTR RowName,
        /*[in]*/ short RowTag,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_AddRows (
        /*[in]*/ short Section,
        /*[in]*/ short Row,
        /*[in]*/ short RowTag,
        /*[in]*/ short RowCount,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_EventList (
        /*[out,retval]*/ struct IVEventList * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PersistsEvents (
        /*[out,retval]*/ short * lpboolRet ) = 0;
      virtual HRESULT __stdcall get_ClassID (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_ShapeObject (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_OpenSheetWindow (
        /*[out,retval]*/ struct IVWindow * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ShapeID16 (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_GetFormulas (
        /*[in]*/ SAFEARRAY * * SRCStream,
        /*[out]*/ SAFEARRAY * * formulaArray ) = 0;
      virtual HRESULT __stdcall raw_GetResults (
        /*[in]*/ SAFEARRAY * * SRCStream,
        /*[in]*/ short Flags,
        /*[in]*/ SAFEARRAY * * UnitsNamesOrCodes,
        /*[out]*/ SAFEARRAY * * resultArray ) = 0;
      virtual HRESULT __stdcall raw_SetFormulas (
        /*[in]*/ SAFEARRAY * * SRCStream,
        /*[in]*/ SAFEARRAY * * formulaArray,
        /*[in]*/ short Flags,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_SetResults (
        /*[in]*/ SAFEARRAY * * SRCStream,
        /*[in]*/ SAFEARRAY * * UnitsNamesOrCodes,
        /*[in]*/ SAFEARRAY * * resultArray,
        /*[in]*/ short Flags,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_FromConnects (
        /*[out,retval]*/ struct IVConnects * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_BoundingBox (
        /*[in]*/ short Flags,
        /*[out]*/ double * lpr8Left,
        /*[out]*/ double * lpr8Bottom,
        /*[out]*/ double * lpr8Right,
        /*[out]*/ double * lpr8Top ) = 0;
      virtual HRESULT __stdcall raw_HitTest (
        /*[in]*/ double xPos,
        /*[in]*/ double yPos,
        /*[in]*/ double Tolerance,
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Hyperlink (
        /*[out,retval]*/ struct IVHyperlink * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ProgID (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_ObjectIsInherited (
        /*[out,retval]*/ short * lpboolRet ) = 0;
      virtual HRESULT __stdcall get_ShapeID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_ShapeIndex (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall raw_Group (
        /*[out,retval]*/ struct IVShape * * ppShape ) = 0;
      virtual HRESULT __stdcall raw_ShapeDuplicate (
        /*[out,retval]*/ struct IVShape * * ppShape ) = 0;
};

struct __declspec(uuid("000d0d21-0000-0000-c000-000000000046"))
IVisLibOcxSupport : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetHostID,put=PutHostID))
    _bstr_t HostID;
    __declspec(property(get=GetWindow))
    IVWindowPtr Window;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetSrc,put=PutSrc))
    _bstr_t Src;
    __declspec(property(get=GetNegotiateMenus,put=PutNegotiateMenus))
    VARIANT_BOOL NegotiateMenus;
    __declspec(property(get=GetNegotiateToolbars,put=PutNegotiateToolbars))
    VARIANT_BOOL NegotiateToolbars;
    __declspec(property(get=GetPageSizingBehavior,put=PutPageSizingBehavior))
    enum VisPageSizingBehaviors PageSizingBehavior;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetHostID ( );
    void PutHostID (
        _bstr_t pbstr );
    IVWindowPtr GetWindow ( );
    IVDocumentPtr GetDocument ( );
    _bstr_t GetSrc ( );
    void PutSrc (
        _bstr_t pbstr );
    VARIANT_BOOL GetNegotiateMenus ( );
    void PutNegotiateMenus (
        VARIANT_BOOL pbVal );
    VARIANT_BOOL GetNegotiateToolbars ( );
    void PutNegotiateToolbars (
        VARIANT_BOOL pbVal );
    HRESULT About ( );
    enum VisPageSizingBehaviors GetPageSizingBehavior ( );
    void PutPageSizingBehavior (
        enum VisPageSizingBehaviors peVal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_HostID (
        /*[out,retval]*/ BSTR * pbstr ) = 0;
      virtual HRESULT __stdcall put_HostID (
        /*[in]*/ BSTR pbstr ) = 0;
      virtual HRESULT __stdcall get_Window (
        /*[out,retval]*/ struct IVWindow * * ppWin ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * ppDoc ) = 0;
      virtual HRESULT __stdcall get_Src (
        /*[out,retval]*/ BSTR * pbstr ) = 0;
      virtual HRESULT __stdcall put_Src (
        /*[in]*/ BSTR pbstr ) = 0;
      virtual HRESULT __stdcall get_NegotiateMenus (
        /*[out,retval]*/ VARIANT_BOOL * pbVal ) = 0;
      virtual HRESULT __stdcall put_NegotiateMenus (
        /*[in]*/ VARIANT_BOOL pbVal ) = 0;
      virtual HRESULT __stdcall get_NegotiateToolbars (
        /*[out,retval]*/ VARIANT_BOOL * pbVal ) = 0;
      virtual HRESULT __stdcall put_NegotiateToolbars (
        /*[in]*/ VARIANT_BOOL pbVal ) = 0;
      virtual HRESULT __stdcall raw_About ( ) = 0;
      virtual HRESULT __stdcall get_PageSizingBehavior (
        /*[out,retval]*/ enum VisPageSizingBehaviors * peVal ) = 0;
      virtual HRESULT __stdcall put_PageSizingBehavior (
        /*[in]*/ enum VisPageSizingBehaviors peVal ) = 0;
};

struct __declspec(uuid("000d072f-0000-0000-c000-000000000046"))
IVDataRecordset : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetID))
    long ID;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetLinkReplaceBehavior,put=PutLinkReplaceBehavior))
    enum VisLinkReplaceBehavior LinkReplaceBehavior;
    __declspec(property(get=GetDataConnection))
    IVDataConnectionPtr DataConnection;
    __declspec(property(get=GetDataColumns))
    IVDataColumnsPtr DataColumns;
    __declspec(property(get=GetCommandString,put=PutCommandString))
    _bstr_t CommandString;
    __declspec(property(get=GetDataAsXML))
    _bstr_t DataAsXML;
    __declspec(property(get=GetTimeRefreshed))
    DATE TimeRefreshed;
    __declspec(property(get=GetRefreshInterval,put=PutRefreshInterval))
    long RefreshInterval;
    __declspec(property(get=GetRefreshSettings,put=PutRefreshSettings))
    long RefreshSettings;
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    short GetStat ( );
    IVDocumentPtr GetDocument ( );
    short GetObjectType ( );
    long GetID ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    enum VisLinkReplaceBehavior GetLinkReplaceBehavior ( );
    void PutLinkReplaceBehavior (
        enum VisLinkReplaceBehavior Property );
    IVDataConnectionPtr GetDataConnection ( );
    IVDataColumnsPtr GetDataColumns ( );
    HRESULT GetPrimaryKey (
        enum VisPrimaryKeySettings * PrimaryKeySettings,
        SAFEARRAY * * PrimaryKey );
    HRESULT SetPrimaryKey (
        enum VisPrimaryKeySettings PrimaryKeySettings,
        SAFEARRAY * * PrimaryKey );
    _bstr_t GetCommandString ( );
    void PutCommandString (
        _bstr_t CommandString );
    _bstr_t GetDataAsXML ( );
    SAFEARRAY * GetDataRowIDs (
        _bstr_t CriteriaString );
    SAFEARRAY * GetRowData (
        long DataRowID );
    HRESULT Delete ( );
    HRESULT Refresh ( );
    HRESULT RefreshUsingXML (
        _bstr_t NewDataAsXML );
    DATE GetTimeRefreshed ( );
    long GetRefreshInterval ( );
    void PutRefreshInterval (
        long RefreshInterval );
    long GetRefreshSettings ( );
    void PutRefreshSettings (
        long Settings );
    IVEventListPtr GetEventList ( );
    SAFEARRAY * GetAllRefreshConflicts ( );
    HRESULT RemoveRefreshConflict (
        struct IVShape * ShapeInConflict );
    SAFEARRAY * GetMatchingRowsForRefreshConflict (
        struct IVShape * ShapeInConflict );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * Application ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * Document ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * ObjectType ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ long * DataRecordsetID ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_LinkReplaceBehavior (
        /*[out,retval]*/ enum VisLinkReplaceBehavior * Property ) = 0;
      virtual HRESULT __stdcall put_LinkReplaceBehavior (
        /*[in]*/ enum VisLinkReplaceBehavior Property ) = 0;
      virtual HRESULT __stdcall get_DataConnection (
        /*[out,retval]*/ struct IVDataConnection * * DataConnection ) = 0;
      virtual HRESULT __stdcall get_DataColumns (
        /*[out,retval]*/ struct IVDataColumns * * DataColumns ) = 0;
      virtual HRESULT __stdcall raw_GetPrimaryKey (
        /*[out]*/ enum VisPrimaryKeySettings * PrimaryKeySettings,
        /*[out]*/ SAFEARRAY * * PrimaryKey ) = 0;
      virtual HRESULT __stdcall raw_SetPrimaryKey (
        /*[in]*/ enum VisPrimaryKeySettings PrimaryKeySettings,
        /*[in]*/ SAFEARRAY * * PrimaryKey ) = 0;
      virtual HRESULT __stdcall get_CommandString (
        /*[out,retval]*/ BSTR * CommandString ) = 0;
      virtual HRESULT __stdcall put_CommandString (
        /*[in]*/ BSTR CommandString ) = 0;
      virtual HRESULT __stdcall get_DataAsXML (
        /*[out,retval]*/ BSTR * Data ) = 0;
      virtual HRESULT __stdcall raw_GetDataRowIDs (
        /*[in]*/ BSTR CriteriaString,
        /*[out,retval]*/ SAFEARRAY * * DataRowIDs ) = 0;
      virtual HRESULT __stdcall raw_GetRowData (
        /*[in]*/ long DataRowID,
        /*[out,retval]*/ SAFEARRAY * * DataRowValues ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Refresh ( ) = 0;
      virtual HRESULT __stdcall raw_RefreshUsingXML (
        /*[in]*/ BSTR NewDataAsXML ) = 0;
      virtual HRESULT __stdcall get_TimeRefreshed (
        /*[out,retval]*/ DATE * TimeRefreshed ) = 0;
      virtual HRESULT __stdcall get_RefreshInterval (
        /*[out,retval]*/ long * RefreshInterval ) = 0;
      virtual HRESULT __stdcall put_RefreshInterval (
        /*[in]*/ long RefreshInterval ) = 0;
      virtual HRESULT __stdcall get_RefreshSettings (
        /*[out,retval]*/ long * Settings ) = 0;
      virtual HRESULT __stdcall put_RefreshSettings (
        /*[in]*/ long Settings ) = 0;
      virtual HRESULT __stdcall get_EventList (
        /*[out,retval]*/ struct IVEventList * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_GetAllRefreshConflicts (
        /*[out,retval]*/ SAFEARRAY * * ShapesInConflict ) = 0;
      virtual HRESULT __stdcall raw_RemoveRefreshConflict (
        /*[in]*/ struct IVShape * ShapeInConflict ) = 0;
      virtual HRESULT __stdcall raw_GetMatchingRowsForRefreshConflict (
        /*[in]*/ struct IVShape * ShapeInConflict,
        /*[out,retval]*/ SAFEARRAY * * DataRowIDs ) = 0;
};

struct __declspec(uuid("000d0732-0000-0000-c000-000000000046"))
IVDataColumn : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetDataRecordset))
    IVDataRecordsetPtr DataRecordset;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetDisplayName,put=PutDisplayName))
    _bstr_t DisplayName;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetHyperlink,put=PutHyperlink))
    VARIANT_BOOL Hyperlink;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    short GetStat ( );
    IVDocumentPtr GetDocument ( );
    short GetObjectType ( );
    IVDataRecordsetPtr GetDataRecordset ( );
    _bstr_t GetName ( );
    _bstr_t GetDisplayName ( );
    void PutDisplayName (
        _bstr_t DisplayName );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL Visible );
    _variant_t GetProperty (
        enum VisDataColumnProperties Property );
    HRESULT SetProperty (
        enum VisDataColumnProperties Property,
        const _variant_t & Value );
    VARIANT_BOOL GetHyperlink ( );
    void PutHyperlink (
        VARIANT_BOOL Hyperlink );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * Application ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * Document ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * ObjectType ) = 0;
      virtual HRESULT __stdcall get_DataRecordset (
        /*[out,retval]*/ struct IVDataRecordset * * DataRecordset ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_DisplayName (
        /*[out,retval]*/ BSTR * DisplayName ) = 0;
      virtual HRESULT __stdcall put_DisplayName (
        /*[in]*/ BSTR DisplayName ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall raw_GetProperty (
        /*[in]*/ enum VisDataColumnProperties Property,
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall raw_SetProperty (
        /*[in]*/ enum VisDataColumnProperties Property,
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_Hyperlink (
        /*[out,retval]*/ VARIANT_BOOL * Hyperlink ) = 0;
      virtual HRESULT __stdcall put_Hyperlink (
        /*[in]*/ VARIANT_BOOL Hyperlink ) = 0;
};

struct __declspec(uuid("000d0731-0000-0000-c000-000000000046"))
IVDataColumns : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetDataRecordset))
    IVDataRecordsetPtr DataRecordset;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetItem))
    IVDataColumnPtr Item[];
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    short GetStat ( );
    IVDocumentPtr GetDocument ( );
    short GetObjectType ( );
    IVDataRecordsetPtr GetDataRecordset ( );
    long GetCount ( );
    IVDataColumnPtr GetItem (
        const _variant_t & IndexOrName );
    IUnknownPtr Get_NewEnum ( );
    HRESULT SetColumnProperties (
        SAFEARRAY * * ColumnNames,
        SAFEARRAY * * Properties,
        SAFEARRAY * * Values );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * Application ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * Document ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * ObjectType ) = 0;
      virtual HRESULT __stdcall get_DataRecordset (
        /*[out,retval]*/ struct IVDataRecordset * * DataRecordset ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT IndexOrName,
        /*[out,retval]*/ struct IVDataColumn * * DataColumn ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Enum ) = 0;
      virtual HRESULT __stdcall raw_SetColumnProperties (
        /*[in]*/ SAFEARRAY * * ColumnNames,
        /*[in]*/ SAFEARRAY * * Properties,
        /*[in]*/ SAFEARRAY * * Values ) = 0;
};

struct __declspec(uuid("000d072e-0000-0000-c000-000000000046"))
IVDataRecordsets : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetDocument))
    IVDocumentPtr Document;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetItem))
    IVDataRecordsetPtr Item[];
    __declspec(property(get=GetItemFromID))
    IVDataRecordsetPtr ItemFromID[];
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    short GetStat ( );
    IVDocumentPtr GetDocument ( );
    short GetObjectType ( );
    long GetCount ( );
    IVDataRecordsetPtr GetItem (
        long Index );
    IVDataRecordsetPtr GetItemFromID (
        long ID );
    IUnknownPtr Get_NewEnum ( );
    IVEventListPtr GetEventList ( );
    IVDataRecordsetPtr Add (
        const _variant_t & ConnectionIDOrString,
        _bstr_t CommandString,
        long AddOptions,
        _bstr_t Name );
    IVDataRecordsetPtr AddFromXML (
        _bstr_t XMLString,
        long AddOptions,
        _bstr_t Name );
    IVDataRecordsetPtr AddFromConnectionFile (
        _bstr_t FileName,
        long AddOptions,
        _bstr_t Name );
    HRESULT GetLastDataError (
        long * DataErrorCode,
        BSTR * DataErrorDescription,
        long * RecordsetID );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * Application ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct IVDocument * * Document ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * ObjectType ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct IVDataRecordset * * DataRecordset ) = 0;
      virtual HRESULT __stdcall get_ItemFromID (
        /*[in]*/ long ID,
        /*[out,retval]*/ struct IVDataRecordset * * DataRecordset ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Enum ) = 0;
      virtual HRESULT __stdcall get_EventList (
        /*[out,retval]*/ struct IVEventList * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT ConnectionIDOrString,
        /*[in]*/ BSTR CommandString,
        /*[in]*/ long AddOptions,
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IVDataRecordset * * DataRecordset ) = 0;
      virtual HRESULT __stdcall raw_AddFromXML (
        /*[in]*/ BSTR XMLString,
        /*[in]*/ long AddOptions,
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IVDataRecordset * * DataRecordset ) = 0;
      virtual HRESULT __stdcall raw_AddFromConnectionFile (
        /*[in]*/ BSTR FileName,
        /*[in]*/ long AddOptions,
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct IVDataRecordset * * DataRecordset ) = 0;
      virtual HRESULT __stdcall raw_GetLastDataError (
        /*[out]*/ long * DataErrorCode,
        /*[out]*/ BSTR * DataErrorDescription,
        /*[out]*/ long * RecordsetID ) = 0;
};

struct __declspec(uuid("000d0733-0000-0000-c000-000000000046"))
IVDataRecordsetChangedEvent : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetDataRecordset))
    IVDataRecordsetPtr DataRecordset;
    __declspec(property(get=GetDataRowsAdded))
    SAFEARRAY * DataRowsAdded;
    __declspec(property(get=GetDataRowsDeleted))
    SAFEARRAY * DataRowsDeleted;
    __declspec(property(get=GetDataColumnsAdded))
    SAFEARRAY * DataColumnsAdded;
    __declspec(property(get=GetDataColumnsDeleted))
    SAFEARRAY * DataColumnsDeleted;
    __declspec(property(get=GetDataColumnsChanged))
    SAFEARRAY * DataColumnsChanged;

    //
    // Wrapper methods for error-handling
    //

    IVApplicationPtr GetApplication ( );
    short GetStat ( );
    short GetObjectType ( );
    IVDataRecordsetPtr GetDataRecordset ( );
    SAFEARRAY * GetDataRowsAdded ( );
    SAFEARRAY * GetDataRowsDeleted ( );
    SAFEARRAY * GetDataColumnsAdded ( );
    SAFEARRAY * GetDataColumnsDeleted ( );
    SAFEARRAY * GetDataColumnsChanged ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * Application ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * ObjectType ) = 0;
      virtual HRESULT __stdcall get_DataRecordset (
        /*[out,retval]*/ struct IVDataRecordset * * DataRecordset ) = 0;
      virtual HRESULT __stdcall get_DataRowsAdded (
        /*[out,retval]*/ SAFEARRAY * * IDsForNewRows ) = 0;
      virtual HRESULT __stdcall get_DataRowsDeleted (
        /*[out,retval]*/ SAFEARRAY * * IDsForDeletedRows ) = 0;
      virtual HRESULT __stdcall get_DataColumnsAdded (
        /*[out,retval]*/ SAFEARRAY * * NamesForNewColumns ) = 0;
      virtual HRESULT __stdcall get_DataColumnsDeleted (
        /*[out,retval]*/ SAFEARRAY * * NamesForDeletedColumns ) = 0;
      virtual HRESULT __stdcall get_DataColumnsChanged (
        /*[out,retval]*/ SAFEARRAY * * NamesForChangedColumns ) = 0;
};

struct __declspec(uuid("000d0202-0000-0000-c000-000000000046"))
IVUIObject : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetDefault))
    _bstr_t Default;
    __declspec(property(get=GetFlavor,put=PutFlavor))
    short Flavor;
    __declspec(property(get=GetMenuSets))
    IVMenuSetsPtr MenuSets;
    __declspec(property(get=GetToolbarSets))
    IVToolbarSetsPtr ToolbarSets;
    __declspec(property(get=GetStatusBars))
    IVStatusBarsPtr StatusBars;
    __declspec(property(get=GetAccelTables))
    IVAccelTablesPtr AccelTables;
    __declspec(property(get=GetDisplayKeysInTooltips,put=PutDisplayKeysInTooltips))
    VARIANT_BOOL DisplayKeysInTooltips;
    __declspec(property(get=GetDisplayTooltips,put=PutDisplayTooltips))
    VARIANT_BOOL DisplayTooltips;
    __declspec(property(get=GetLargeButtons,put=PutLargeButtons))
    VARIANT_BOOL LargeButtons;
    __declspec(property(get=GetMenuAnimationStyle,put=PutMenuAnimationStyle))
    short MenuAnimationStyle;
    __declspec(property(get=GetClone))
    IVUIObjectPtr Clone;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Delete ( );
    _bstr_t GetDefault ( );
    void PutName (
        _bstr_t pName );
    _bstr_t GetName ( );
    void PutFlavor (
        short pFlavor );
    short GetFlavor ( );
    IVMenuSetsPtr GetMenuSets ( );
    IVToolbarSetsPtr GetToolbarSets ( );
    IVStatusBarsPtr GetStatusBars ( );
    IVAccelTablesPtr GetAccelTables ( );
    HRESULT SaveToFile (
        _bstr_t FileName );
    HRESULT LoadFromFile (
        _bstr_t FileName );
    HRESULT UpdateUI ( );
    VARIANT_BOOL GetDisplayKeysInTooltips ( );
    void PutDisplayKeysInTooltips (
        VARIANT_BOOL pbShow );
    VARIANT_BOOL GetDisplayTooltips ( );
    void PutDisplayTooltips (
        VARIANT_BOOL pbShow );
    VARIANT_BOOL GetLargeButtons ( );
    void PutLargeButtons (
        VARIANT_BOOL pbLarge );
    short GetMenuAnimationStyle ( );
    void PutMenuAnimationStyle (
        short pAnim );
    IVUIObjectPtr GetClone ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Default (
        /*[out,retval]*/ BSTR * pName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pName ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pName ) = 0;
      virtual HRESULT __stdcall put_Flavor (
        /*[in]*/ short pFlavor ) = 0;
      virtual HRESULT __stdcall get_Flavor (
        /*[out,retval]*/ short * pFlavor ) = 0;
      virtual HRESULT __stdcall get_MenuSets (
        /*[out,retval]*/ struct IVMenuSets * * lplpVMenuSets ) = 0;
      virtual HRESULT __stdcall get_ToolbarSets (
        /*[out,retval]*/ struct IVToolbarSets * * lplpVToolbarSets ) = 0;
      virtual HRESULT __stdcall get_StatusBars (
        /*[out,retval]*/ struct IVStatusBars * * lplpVStatusBars ) = 0;
      virtual HRESULT __stdcall get_AccelTables (
        /*[out,retval]*/ struct IVAccelTables * * lplpVAccelTables ) = 0;
      virtual HRESULT __stdcall raw_SaveToFile (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_LoadFromFile (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_UpdateUI ( ) = 0;
      virtual HRESULT __stdcall get_DisplayKeysInTooltips (
        /*[out,retval]*/ VARIANT_BOOL * pbShow ) = 0;
      virtual HRESULT __stdcall put_DisplayKeysInTooltips (
        /*[in]*/ VARIANT_BOOL pbShow ) = 0;
      virtual HRESULT __stdcall get_DisplayTooltips (
        /*[out,retval]*/ VARIANT_BOOL * pbShow ) = 0;
      virtual HRESULT __stdcall put_DisplayTooltips (
        /*[in]*/ VARIANT_BOOL pbShow ) = 0;
      virtual HRESULT __stdcall get_LargeButtons (
        /*[out,retval]*/ VARIANT_BOOL * pbLarge ) = 0;
      virtual HRESULT __stdcall put_LargeButtons (
        /*[in]*/ VARIANT_BOOL pbLarge ) = 0;
      virtual HRESULT __stdcall get_MenuAnimationStyle (
        /*[out,retval]*/ short * pAnim ) = 0;
      virtual HRESULT __stdcall put_MenuAnimationStyle (
        /*[in]*/ short pAnim ) = 0;
      virtual HRESULT __stdcall get_Clone (
        /*[out,retval]*/ struct IVUIObject * * ppUIObject ) = 0;
};

struct __declspec(uuid("000d072c-0000-0000-c000-000000000046"))
IVInvisibleApp : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetActiveDocument))
    IVDocumentPtr ActiveDocument;
    __declspec(property(get=GetActivePage))
    IVPagePtr ActivePage;
    __declspec(property(get=GetActiveWindow))
    IVWindowPtr ActiveWindow;
    __declspec(property(get=GetApplication))
    IVApplicationPtr Application;
    __declspec(property(get=GetDocuments))
    IVDocumentsPtr Documents;
    __declspec(property(get=GetObjectType))
    short ObjectType;
    __declspec(property(get=GetOnDataChangeDelay,put=PutOnDataChangeDelay))
    long OnDataChangeDelay;
    __declspec(property(get=GetProcessID))
    long ProcessID;
    __declspec(property(get=GetLanguage))
    long Language;
    __declspec(property(get=GetAssistance))
    IDispatchPtr Assistance;
    __declspec(property(get=GetScreenUpdating,put=PutScreenUpdating))
    short ScreenUpdating;
    __declspec(property(get=GetStat))
    short Stat;
    __declspec(property(get=GetVersion))
    _bstr_t Version;
    __declspec(property(get=GetWindowHandle))
    short WindowHandle;
    __declspec(property(get=GetWindows))
    IVWindowsPtr Windows;
    __declspec(property(get=GetIsVisio16))
    short IsVisio16;
    __declspec(property(get=GetIsVisio32))
    short IsVisio32;
    __declspec(property(get=GetWindowHandle32))
    long WindowHandle32;
    __declspec(property(get=GetInstanceHandle))
    short InstanceHandle;
    __declspec(property(get=GetInstanceHandle32))
    long InstanceHandle32;
    __declspec(property(get=GetBuiltInMenus))
    IVUIObjectPtr BuiltInMenus;
    __declspec(property(get=GetBuiltInToolbars))
    IVUIObjectPtr BuiltInToolbars[];
    __declspec(property(get=GetCustomMenus))
    IVUIObjectPtr CustomMenus;
    __declspec(property(get=GetCustomMenusFile,put=PutCustomMenusFile))
    _bstr_t CustomMenusFile;
    __declspec(property(get=GetCustomToolbars))
    IVUIObjectPtr CustomToolbars;
    __declspec(property(get=GetCustomToolbarsFile,put=PutCustomToolbarsFile))
    _bstr_t CustomToolbarsFile;
    __declspec(property(get=GetAddonPaths,put=PutAddonPaths))
    _bstr_t AddonPaths;
    __declspec(property(get=GetDrawingPaths,put=PutDrawingPaths))
    _bstr_t DrawingPaths;
    __declspec(property(get=GetFilterPaths,put=PutFilterPaths))
    _bstr_t FilterPaths;
    __declspec(property(get=GetHelpPaths,put=PutHelpPaths))
    _bstr_t HelpPaths;
    __declspec(property(get=GetStartupPaths,put=PutStartupPaths))
    _bstr_t StartupPaths;
    __declspec(property(get=GetStencilPaths,put=PutStencilPaths))
    _bstr_t StencilPaths;
    __declspec(property(get=GetTemplatePaths,put=PutTemplatePaths))
    _bstr_t TemplatePaths;
    __declspec(property(get=GetUserName,put=PutUserName))
    _bstr_t UserName;
    __declspec(property(get=GetPromptForSummary,put=PutPromptForSummary))
    short PromptForSummary;
    __declspec(property(get=GetAddons))
    IVAddonsPtr Addons;
    __declspec(property(get=GetProfileName))
    _bstr_t ProfileName;
    __declspec(property(get=GetEventInfo))
    _bstr_t EventInfo[];
    __declspec(property(get=GetEventList))
    IVEventListPtr EventList;
    __declspec(property(get=GetPersistsEvents))
    short PersistsEvents;
    __declspec(property(get=GetActive))
    short Active;
    __declspec(property(get=GetDeferRecalc,put=PutDeferRecalc))
    short DeferRecalc;
    __declspec(property(get=GetAlertResponse,put=PutAlertResponse))
    short AlertResponse;
    __declspec(property(get=GetShowProgress,put=PutShowProgress))
    short ShowProgress;
    __declspec(property(get=GetVbe))
    IDispatchPtr Vbe;
    __declspec(property(get=GetShowMenus,put=PutShowMenus))
    short ShowMenus;
    __declspec(property(get=GetToolbarStyle,put=PutToolbarStyle))
    short ToolbarStyle;
    __declspec(property(get=GetShowStatusBar,put=PutShowStatusBar))
    short ShowStatusBar;
    __declspec(property(get=GetEventsEnabled,put=PutEventsEnabled))
    short EventsEnabled;
    __declspec(property(get=GetPath))
    _bstr_t Path;
    __declspec(property(get=GetTraceFlags,put=PutTraceFlags))
    long TraceFlags;
    __declspec(property(get=GetShowToolbar,put=PutShowToolbar))
    short ShowToolbar;
    __declspec(property(get=GetLiveDynamics,put=PutLiveDynamics))
    VARIANT_BOOL LiveDynamics;
    __declspec(property(get=GetAutoLayout,put=PutAutoLayout))
    VARIANT_BOOL AutoLayout;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetCommandLine))
    _bstr_t CommandLine;
    __declspec(property(get=GetIsUndoingOrRedoing))
    VARIANT_BOOL IsUndoingOrRedoing;
    __declspec(property(get=GetCurrentScope))
    long CurrentScope;
    __declspec(property(get=GetIsInScope))
    VARIANT_BOOL IsInScope[];
    __declspec(property(get=Getold_Addins))
    IDispatchPtr old_Addins;
    __declspec(property(get=GetProductName))
    _bstr_t ProductName;
    __declspec(property(get=GetUndoEnabled,put=PutUndoEnabled))
    VARIANT_BOOL UndoEnabled;
    __declspec(property(get=GetShowChanges,put=PutShowChanges))
    VARIANT_BOOL ShowChanges;
    __declspec(property(get=GetTypelibMajorVersion))
    short TypelibMajorVersion;
    __declspec(property(get=GetTypelibMinorVersion))
    short TypelibMinorVersion;
    __declspec(property(get=GetAutoRecoverInterval,put=PutAutoRecoverInterval))
    short AutoRecoverInterval;
    __declspec(property(get=GetInhibitSelectChange,put=PutInhibitSelectChange))
    VARIANT_BOOL InhibitSelectChange;
    __declspec(property(get=GetActivePrinter,put=PutActivePrinter))
    _bstr_t ActivePrinter;
    __declspec(property(get=GetAvailablePrinters))
    SAFEARRAY * AvailablePrinters;
    __declspec(property(get=GetCommandBars))
    IDispatchPtr CommandBars;
    __declspec(property(get=GetBuild))
    long Build;
    __declspec(property(get=GetCOMAddIns))
    IDispatchPtr COMAddIns;
    __declspec(property(get=GetDefaultPageUnits,put=PutDefaultPageUnits))
    _variant_t DefaultPageUnits;
    __declspec(property(get=GetDefaultTextUnits,put=PutDefaultTextUnits))
    _variant_t DefaultTextUnits;
    __declspec(property(get=GetDefaultAngleUnits,put=PutDefaultAngleUnits))
    _variant_t DefaultAngleUnits;
    __declspec(property(get=GetDefaultDurationUnits,put=PutDefaultDurationUnits))
    _variant_t DefaultDurationUnits;
    __declspec(property(get=GetFullBuild))
    long FullBuild;
    __declspec(property(get=GetVBAEnabled))
    VARIANT_BOOL VBAEnabled;
    __declspec(property(get=GetDefaultZoomBehavior,put=PutDefaultZoomBehavior))
    enum VisZoomBehavior DefaultZoomBehavior;
    __declspec(property(get=GetDialogFont))
    IFontDisp * DialogFont;
    __declspec(property(get=GetLanguageHelp))
    long LanguageHelp;
    __declspec(property(get=GetWindow))
    IVWindowPtr Window;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetConnectorToolDataObject))
    IUnknownPtr ConnectorToolDataObject;
    __declspec(property(get=GetSettings))
    IVApplicationSettingsPtr Settings;
    __declspec(property(get=GetSaveAsWebObject))
    IDispatchPtr SaveAsWebObject;
    __declspec(property(get=GetMsoDebugOptions))
    IDispatchPtr MsoDebugOptions;
    __declspec(property(get=GetMyShapesPath,put=PutMyShapesPath))
    _bstr_t MyShapesPath;
    __declspec(property(get=GetDefaultRectangleDataObject))
    IUnknownPtr DefaultRectangleDataObject;
    __declspec(property(get=GetDataFeaturesEnabled))
    VARIANT_BOOL DataFeaturesEnabled;
    __declspec(property(get=GetLanguageSettings))
    IDispatchPtr LanguageSettings;

    //
    // Wrapper methods for error-handling
    //

    IVDocumentPtr GetActiveDocument ( );
    IVPagePtr GetActivePage ( );
    IVWindowPtr GetActiveWindow ( );
    IVApplicationPtr GetApplication ( );
    IVDocumentsPtr GetDocuments ( );
    short GetObjectType ( );
    long GetOnDataChangeDelay ( );
    void PutOnDataChangeDelay (
        long lpi4Ret );
    long GetProcessID ( );
    HRESULT Quit ( );
    HRESULT Redo ( );
    short GetScreenUpdating ( );
    void PutScreenUpdating (
        short lpi2Ret );
    short GetStat ( );
    HRESULT Undo ( );
    _bstr_t GetVersion ( );
    short GetWindowHandle ( );
    IVWindowsPtr GetWindows ( );
    long GetLanguage ( );
    short GetIsVisio16 ( );
    short GetIsVisio32 ( );
    long GetWindowHandle32 ( );
    short GetInstanceHandle ( );
    long GetInstanceHandle32 ( );
    IVUIObjectPtr GetBuiltInMenus ( );
    IVUIObjectPtr GetBuiltInToolbars (
        short fIgnored );
    IVUIObjectPtr GetCustomMenus ( );
    HRESULT SetCustomMenus (
        struct IVUIObject * MenusObject );
    _bstr_t GetCustomMenusFile ( );
    void PutCustomMenusFile (
        _bstr_t lpbstrRet );
    HRESULT ClearCustomMenus ( );
    IVUIObjectPtr GetCustomToolbars ( );
    HRESULT SetCustomToolbars (
        struct IVUIObject * ToolbarsObject );
    _bstr_t GetCustomToolbarsFile ( );
    void PutCustomToolbarsFile (
        _bstr_t lpbstrRet );
    HRESULT ClearCustomToolbars ( );
    _bstr_t GetAddonPaths ( );
    void PutAddonPaths (
        _bstr_t lpbstrRet );
    _bstr_t GetDrawingPaths ( );
    void PutDrawingPaths (
        _bstr_t lpbstrRet );
    _bstr_t GetFilterPaths ( );
    void PutFilterPaths (
        _bstr_t lpbstrRet );
    _bstr_t GetHelpPaths ( );
    void PutHelpPaths (
        _bstr_t lpbstrRet );
    _bstr_t GetStartupPaths ( );
    void PutStartupPaths (
        _bstr_t lpbstrRet );
    _bstr_t GetStencilPaths ( );
    void PutStencilPaths (
        _bstr_t lpbstrRet );
    _bstr_t GetTemplatePaths ( );
    void PutTemplatePaths (
        _bstr_t lpbstrRet );
    _bstr_t GetUserName ( );
    void PutUserName (
        _bstr_t lpbstrRet );
    short GetPromptForSummary ( );
    void PutPromptForSummary (
        short lpi2Ret );
    IVAddonsPtr GetAddons ( );
    HRESULT SaveWorkspaceAs (
        _bstr_t FileName );
    HRESULT DoCmd (
        short CommandID );
    _bstr_t GetProfileName ( );
    _bstr_t GetEventInfo (
        long eventSeqNum );
    IVEventListPtr GetEventList ( );
    short GetPersistsEvents ( );
    short GetActive ( );
    short GetDeferRecalc ( );
    void PutDeferRecalc (
        short lpi2Ret );
    short GetAlertResponse ( );
    void PutAlertResponse (
        short lpi2Ret );
    short GetShowProgress ( );
    void PutShowProgress (
        short lpi2Ret );
    IDispatchPtr GetVbe ( );
    short GetShowMenus ( );
    void PutShowMenus (
        short lpi2Ret );
    short GetToolbarStyle ( );
    void PutToolbarStyle (
        short lpi2Ret );
    short GetShowStatusBar ( );
    void PutShowStatusBar (
        short lpi2Ret );
    short GetEventsEnabled ( );
    void PutEventsEnabled (
        short lpi2Ret );
    _bstr_t FormatResult (
        const _variant_t & StringOrNumber,
        const _variant_t & UnitsIn,
        const _variant_t & UnitsOut,
        _bstr_t Format );
    double ConvertResult (
        const _variant_t & StringOrNumber,
        const _variant_t & UnitsIn,
        const _variant_t & UnitsOut );
    _bstr_t GetPath ( );
    HRESULT EnumDirectories (
        _bstr_t PathsString,
        SAFEARRAY * * NameArray );
    long GetTraceFlags ( );
    void PutTraceFlags (
        long lpi4Ret );
    HRESULT PurgeUndo ( );
    long QueueMarkerEvent (
        _bstr_t ContextString );
    short GetShowToolbar ( );
    void PutShowToolbar (
        short lpi2Ret );
    VARIANT_BOOL GetLiveDynamics ( );
    void PutLiveDynamics (
        VARIANT_BOOL pbRet );
    VARIANT_BOOL GetAutoLayout ( );
    void PutAutoLayout (
        VARIANT_BOOL pbRet );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL pbVisible );
    long BeginUndoScope (
        _bstr_t bstrUndoScopeName );
    HRESULT EndUndoScope (
        long nScopeID,
        VARIANT_BOOL bCommit );
    HRESULT AddUndoUnit (
        IUnknown * pUndoUnit );
    _bstr_t GetCommandLine ( );
    VARIANT_BOOL GetIsUndoingOrRedoing ( );
    long GetCurrentScope ( );
    VARIANT_BOOL GetIsInScope (
        long nCmdID );
    IDispatchPtr Getold_Addins ( );
    _bstr_t GetProductName ( );
    VARIANT_BOOL GetUndoEnabled ( );
    void PutUndoEnabled (
        VARIANT_BOOL pbRet );
    VARIANT_BOOL GetShowChanges ( );
    void PutShowChanges (
        VARIANT_BOOL pbRet );
    short GetTypelibMajorVersion ( );
    short GetTypelibMinorVersion ( );
    short GetAutoRecoverInterval ( );
    void PutAutoRecoverInterval (
        short lpi2Ret );
    VARIANT_BOOL GetInhibitSelectChange ( );
    void PutInhibitSelectChange (
        VARIANT_BOOL pbRet );
    _bstr_t GetActivePrinter ( );
    void PutActivePrinter (
        _bstr_t pbstrPrinterName );
    SAFEARRAY * GetAvailablePrinters ( );
    HRESULT RenameCurrentScope (
        _bstr_t bstrScopeName );
    HRESULT InvokeHelp (
        _bstr_t bstrHelpFileName,
        long Command,
        long Data );
    IDispatchPtr GetCommandBars ( );
    long GetBuild ( );
    IDispatchPtr GetCOMAddIns ( );
    _variant_t GetDefaultPageUnits ( );
    void PutDefaultPageUnits (
        const _variant_t & pUnitsNameOrCode );
    _variant_t GetDefaultTextUnits ( );
    void PutDefaultTextUnits (
        const _variant_t & pUnitsNameOrCode );
    _variant_t GetDefaultAngleUnits ( );
    void PutDefaultAngleUnits (
        const _variant_t & pUnitsNameOrCode );
    _variant_t GetDefaultDurationUnits ( );
    void PutDefaultDurationUnits (
        const _variant_t & pUnitsNameOrCode );
    long GetFullBuild ( );
    HRESULT OnComponentEnterState (
        enum VisOnComponentEnterCodes uStateID,
        VARIANT_BOOL bEnter );
    VARIANT_BOOL GetVBAEnabled ( );
    enum VisZoomBehavior GetDefaultZoomBehavior ( );
    void PutDefaultZoomBehavior (
        enum VisZoomBehavior pnZoomBehavior );
    _variant_t GetUsageStatistic (
        long nWhichStatistic );
    IFontDisp * GetDialogFont ( );
    long GetLanguageHelp ( );
    IVWindowPtr GetWindow ( );
    _bstr_t GetName ( );
    IUnknownPtr GetConnectorToolDataObject ( );
    IVApplicationSettingsPtr GetSettings ( );
    _bstr_t FormatResultEx (
        const _variant_t & StringOrNumber,
        const _variant_t & UnitsIn,
        const _variant_t & UnitsOut,
        _bstr_t Format,
        long LangID,
        long CalendarID );
    IDispatchPtr GetSaveAsWebObject ( );
    IDispatchPtr GetMsoDebugOptions ( );
    _bstr_t GetMyShapesPath ( );
    void PutMyShapesPath (
        _bstr_t lpbstrRet );
    IUnknownPtr GetDefaultRectangleDataObject ( );
    VARIANT_BOOL GetDataFeaturesEnabled ( );
    IDispatchPtr GetLanguageSettings ( );
    IDispatchPtr GetAssistance ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ActiveDocument (
        /*[out,retval]*/ struct IVDocument * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ActivePage (
        /*[out,retval]*/ struct IVPage * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ActiveWindow (
        /*[out,retval]*/ struct IVWindow * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct IVApplication * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Documents (
        /*[out,retval]*/ struct IVDocuments * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ObjectType (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_OnDataChangeDelay (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall put_OnDataChangeDelay (
        /*[in]*/ long lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_ProcessID (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall raw_Quit ( ) = 0;
      virtual HRESULT __stdcall raw_Redo ( ) = 0;
      virtual HRESULT __stdcall get_ScreenUpdating (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_ScreenUpdating (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Stat (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_Undo ( ) = 0;
      virtual HRESULT __stdcall get_Version (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_WindowHandle (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Windows (
        /*[out,retval]*/ struct IVWindows * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Language (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_IsVisio16 (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_IsVisio32 (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_WindowHandle32 (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_InstanceHandle (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_InstanceHandle32 (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_BuiltInMenus (
        /*[out,retval]*/ struct IVUIObject * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_BuiltInToolbars (
        /*[in]*/ short fIgnored,
        /*[out,retval]*/ struct IVUIObject * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_CustomMenus (
        /*[out,retval]*/ struct IVUIObject * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_SetCustomMenus (
        /*[in]*/ struct IVUIObject * MenusObject ) = 0;
      virtual HRESULT __stdcall get_CustomMenusFile (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_CustomMenusFile (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall raw_ClearCustomMenus ( ) = 0;
      virtual HRESULT __stdcall get_CustomToolbars (
        /*[out,retval]*/ struct IVUIObject * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_SetCustomToolbars (
        /*[in]*/ struct IVUIObject * ToolbarsObject ) = 0;
      virtual HRESULT __stdcall get_CustomToolbarsFile (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_CustomToolbarsFile (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall raw_ClearCustomToolbars ( ) = 0;
      virtual HRESULT __stdcall get_AddonPaths (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_AddonPaths (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_DrawingPaths (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_DrawingPaths (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_FilterPaths (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_FilterPaths (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_HelpPaths (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_HelpPaths (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_StartupPaths (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_StartupPaths (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_StencilPaths (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_StencilPaths (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_TemplatePaths (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_TemplatePaths (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_UserName (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_UserName (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_PromptForSummary (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_PromptForSummary (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Addons (
        /*[out,retval]*/ struct IVAddons * * lpdispRet ) = 0;
      virtual HRESULT __stdcall raw_SaveWorkspaceAs (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_DoCmd (
        /*[in]*/ short CommandID ) = 0;
      virtual HRESULT __stdcall get_ProfileName (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_EventInfo (
        /*[in]*/ long eventSeqNum,
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_EventList (
        /*[out,retval]*/ struct IVEventList * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_PersistsEvents (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Active (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_DeferRecalc (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_DeferRecalc (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_AlertResponse (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_AlertResponse (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ShowProgress (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_ShowProgress (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_Vbe (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ShowMenus (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_ShowMenus (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ToolbarStyle (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_ToolbarStyle (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_ShowStatusBar (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_ShowStatusBar (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_EventsEnabled (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_EventsEnabled (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall raw_FormatResult (
        /*[in]*/ VARIANT StringOrNumber,
        /*[in]*/ VARIANT UnitsIn,
        /*[in]*/ VARIANT UnitsOut,
        /*[in]*/ BSTR Format,
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall raw_ConvertResult (
        /*[in]*/ VARIANT StringOrNumber,
        /*[in]*/ VARIANT UnitsIn,
        /*[in]*/ VARIANT UnitsOut,
        /*[out,retval]*/ double * lpr8Ret ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall raw_EnumDirectories (
        /*[in]*/ BSTR PathsString,
        /*[out]*/ SAFEARRAY * * NameArray ) = 0;
      virtual HRESULT __stdcall get_TraceFlags (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall put_TraceFlags (
        /*[in]*/ long lpi4Ret ) = 0;
      virtual HRESULT __stdcall raw_PurgeUndo ( ) = 0;
      virtual HRESULT __stdcall raw_QueueMarkerEvent (
        /*[in]*/ BSTR ContextString,
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_ShowToolbar (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_ShowToolbar (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_LiveDynamics (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall put_LiveDynamics (
        /*[in]*/ VARIANT_BOOL pbRet ) = 0;
      virtual HRESULT __stdcall get_AutoLayout (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall put_AutoLayout (
        /*[in]*/ VARIANT_BOOL pbRet ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * pbVisible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL pbVisible ) = 0;
      virtual HRESULT __stdcall raw_BeginUndoScope (
        /*[in]*/ BSTR bstrUndoScopeName,
        /*[out,retval]*/ long * pnScopeID ) = 0;
      virtual HRESULT __stdcall raw_EndUndoScope (
        /*[in]*/ long nScopeID,
        /*[in]*/ VARIANT_BOOL bCommit ) = 0;
      virtual HRESULT __stdcall raw_AddUndoUnit (
        /*[in]*/ IUnknown * pUndoUnit ) = 0;
      virtual HRESULT __stdcall get_CommandLine (
        /*[out,retval]*/ BSTR * pbstrCmdLine ) = 0;
      virtual HRESULT __stdcall get_IsUndoingOrRedoing (
        /*[out,retval]*/ VARIANT_BOOL * pbInUndoOrRedo ) = 0;
      virtual HRESULT __stdcall get_CurrentScope (
        /*[out,retval]*/ long * pnCmdID ) = 0;
      virtual HRESULT __stdcall get_IsInScope (
        /*[in]*/ long nCmdID,
        /*[out,retval]*/ VARIANT_BOOL * pbInScope ) = 0;
      virtual HRESULT __stdcall get_old_Addins (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_ProductName (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_UndoEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall put_UndoEnabled (
        /*[in]*/ VARIANT_BOOL pbRet ) = 0;
      virtual HRESULT __stdcall get_ShowChanges (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall put_ShowChanges (
        /*[in]*/ VARIANT_BOOL pbRet ) = 0;
      virtual HRESULT __stdcall get_TypelibMajorVersion (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_TypelibMinorVersion (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_AutoRecoverInterval (
        /*[out,retval]*/ short * lpi2Ret ) = 0;
      virtual HRESULT __stdcall put_AutoRecoverInterval (
        /*[in]*/ short lpi2Ret ) = 0;
      virtual HRESULT __stdcall get_InhibitSelectChange (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall put_InhibitSelectChange (
        /*[in]*/ VARIANT_BOOL pbRet ) = 0;
      virtual HRESULT __stdcall get_ActivePrinter (
        /*[out,retval]*/ BSTR * pbstrPrinterName ) = 0;
      virtual HRESULT __stdcall put_ActivePrinter (
        /*[in]*/ BSTR pbstrPrinterName ) = 0;
      virtual HRESULT __stdcall get_AvailablePrinters (
        /*[out,retval]*/ SAFEARRAY * * NamesArray ) = 0;
      virtual HRESULT __stdcall raw_RenameCurrentScope (
        /*[in]*/ BSTR bstrScopeName ) = 0;
      virtual HRESULT __stdcall raw_InvokeHelp (
        /*[in]*/ BSTR bstrHelpFileName,
        /*[in]*/ long Command,
        /*[in]*/ long Data ) = 0;
      virtual HRESULT __stdcall get_CommandBars (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Build (
        /*[out,retval]*/ long * pnBuild ) = 0;
      virtual HRESULT __stdcall get_COMAddIns (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_DefaultPageUnits (
        /*[out,retval]*/ VARIANT * pUnitsNameOrCode ) = 0;
      virtual HRESULT __stdcall put_DefaultPageUnits (
        /*[in]*/ VARIANT pUnitsNameOrCode ) = 0;
      virtual HRESULT __stdcall get_DefaultTextUnits (
        /*[out,retval]*/ VARIANT * pUnitsNameOrCode ) = 0;
      virtual HRESULT __stdcall put_DefaultTextUnits (
        /*[in]*/ VARIANT pUnitsNameOrCode ) = 0;
      virtual HRESULT __stdcall get_DefaultAngleUnits (
        /*[out,retval]*/ VARIANT * pUnitsNameOrCode ) = 0;
      virtual HRESULT __stdcall put_DefaultAngleUnits (
        /*[in]*/ VARIANT pUnitsNameOrCode ) = 0;
      virtual HRESULT __stdcall get_DefaultDurationUnits (
        /*[out,retval]*/ VARIANT * pUnitsNameOrCode ) = 0;
      virtual HRESULT __stdcall put_DefaultDurationUnits (
        /*[in]*/ VARIANT pUnitsNameOrCode ) = 0;
      virtual HRESULT __stdcall get_FullBuild (
        /*[out,retval]*/ long * pnFullBuild ) = 0;
      virtual HRESULT __stdcall raw_OnComponentEnterState (
        /*[in]*/ enum VisOnComponentEnterCodes uStateID,
        /*[in]*/ VARIANT_BOOL bEnter ) = 0;
      virtual HRESULT __stdcall get_VBAEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall get_DefaultZoomBehavior (
        /*[out,retval]*/ enum VisZoomBehavior * pnZoomBehavior ) = 0;
      virtual HRESULT __stdcall put_DefaultZoomBehavior (
        /*[in]*/ enum VisZoomBehavior pnZoomBehavior ) = 0;
      virtual HRESULT __stdcall raw_GetUsageStatistic (
        /*[in]*/ long nWhichStatistic,
        /*[out,retval]*/ VARIANT * pvStatistic ) = 0;
      virtual HRESULT __stdcall get_DialogFont (
        /*[out,retval]*/ IFontDisp * * ppFontDisp ) = 0;
      virtual HRESULT __stdcall get_LanguageHelp (
        /*[out,retval]*/ long * lpi4Ret ) = 0;
      virtual HRESULT __stdcall get_Window (
        /*[out,retval]*/ struct IVWindow * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pbstrName ) = 0;
      virtual HRESULT __stdcall get_ConnectorToolDataObject (
        /*[out,retval]*/ IUnknown * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Settings (
        /*[out,retval]*/ struct IVApplicationSettings * * lpSettingRet ) = 0;
      virtual HRESULT __stdcall raw_FormatResultEx (
        /*[in]*/ VARIANT StringOrNumber,
        /*[in]*/ VARIANT UnitsIn,
        /*[in]*/ VARIANT UnitsOut,
        /*[in]*/ BSTR Format,
        /*[in]*/ long LangID,
        /*[in]*/ long CalendarID,
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_SaveAsWebObject (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_MsoDebugOptions (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_MyShapesPath (
        /*[out,retval]*/ BSTR * lpbstrRet ) = 0;
      virtual HRESULT __stdcall put_MyShapesPath (
        /*[in]*/ BSTR lpbstrRet ) = 0;
      virtual HRESULT __stdcall get_DefaultRectangleDataObject (
        /*[out,retval]*/ IUnknown * * lpunkRet ) = 0;
      virtual HRESULT __stdcall get_DataFeaturesEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
      virtual HRESULT __stdcall get_LanguageSettings (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
      virtual HRESULT __stdcall get_Assistance (
        /*[out,retval]*/ IDispatch * * lpdispRet ) = 0;
};

struct __declspec(uuid("000d0236-0000-0000-c000-000000000046"))
IVMenuSets : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVMenuSetPtr Item[];
    __declspec(property(get=GetItemAtID))
    IVMenuSetPtr ItemAtID[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IVUIObjectPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    IVMenuSetPtr GetItem (
        long lIndex );
    IVMenuSetPtr GetItemAtID (
        long lID );
    IVMenuSetPtr Add ( );
    IVMenuSetPtr AddAtID (
        long lID );
    long GetCount ( );
    IVUIObjectPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * lplpIEnumVMenuSet ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ struct IVMenuSet * * lplpMenuSet ) = 0;
      virtual HRESULT __stdcall get_ItemAtID (
        /*[in]*/ long lID,
        /*[out,retval]*/ struct IVMenuSet * * lplpMenuSet ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[out,retval]*/ struct IVMenuSet * * lplpMenuSet ) = 0;
      virtual HRESULT __stdcall raw_AddAtID (
        /*[in]*/ long lID,
        /*[out,retval]*/ struct IVMenuSet * * lplpMenuSet ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * lplCount ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IVUIObject * * lplpVUIObject ) = 0;
};

struct __declspec(uuid("000d0232-0000-0000-c000-000000000046"))
IVMenuSet : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetDefault))
    _bstr_t Default;
    __declspec(property(get=GetSetID))
    long SetID;
    __declspec(property(get=GetMenus))
    IVMenusPtr Menus;
    __declspec(property(get=GetParent))
    IVMenuSetsPtr Parent;
    __declspec(property(get=GetBuiltIn))
    VARIANT_BOOL BuiltIn;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    short Height;
    __declspec(property(get=GetLeft,put=PutLeft))
    short Left;
    __declspec(property(get=GetPosition,put=PutPosition))
    short Position;
    __declspec(property(get=GetProtection,put=PutProtection))
    short Protection;
    __declspec(property(get=GetRowIndex,put=PutRowIndex))
    short RowIndex;
    __declspec(property(get=GetTop,put=PutTop))
    short Top;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    short Width;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Delete ( );
    _bstr_t GetDefault ( );
    void PutCaption (
        _bstr_t pCaption );
    _bstr_t GetCaption ( );
    long GetSetID ( );
    IVMenusPtr GetMenus ( );
    IVMenuSetsPtr GetParent ( );
    VARIANT_BOOL GetBuiltIn ( );
    void PutEnabled (
        VARIANT_BOOL pbEnabled );
    VARIANT_BOOL GetEnabled ( );
    void PutHeight (
        short pHeight );
    short GetHeight ( );
    void PutLeft (
        short pLeft );
    short GetLeft ( );
    void PutPosition (
        short pPos );
    short GetPosition ( );
    void PutProtection (
        short pProt );
    short GetProtection ( );
    void PutRowIndex (
        short pwRow );
    short GetRowIndex ( );
    void PutTop (
        short pTop );
    short GetTop ( );
    void PutVisible (
        VARIANT_BOOL pbVisible );
    VARIANT_BOOL GetVisible ( );
    void PutWidth (
        short pwWidth );
    short GetWidth ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Default (
        /*[out,retval]*/ BSTR * pCaption ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR pCaption ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * pCaption ) = 0;
      virtual HRESULT __stdcall get_SetID (
        /*[out,retval]*/ long * plSetID ) = 0;
      virtual HRESULT __stdcall get_Menus (
        /*[out,retval]*/ struct IVMenus * * lplpVMenus ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IVMenuSets * * lplpVMenuSets ) = 0;
      virtual HRESULT __stdcall get_BuiltIn (
        /*[out,retval]*/ VARIANT_BOOL * pbBuiltIn ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL pbEnabled ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * pbEnabled ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ short pHeight ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ short * pHeight ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ short pLeft ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ short * pLeft ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ short pPos ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ short * pPos ) = 0;
      virtual HRESULT __stdcall put_Protection (
        /*[in]*/ short pProt ) = 0;
      virtual HRESULT __stdcall get_Protection (
        /*[out,retval]*/ short * pProt ) = 0;
      virtual HRESULT __stdcall put_RowIndex (
        /*[in]*/ short pwRow ) = 0;
      virtual HRESULT __stdcall get_RowIndex (
        /*[out,retval]*/ short * pwRow ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ short pTop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ short * pTop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL pbVisible ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * pbVisible ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ short pwWidth ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ short * pwWidth ) = 0;
};

struct __declspec(uuid("000d0233-0000-0000-c000-000000000046"))
IEnumVMenuSet : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Next (
        long celt,
        struct IVMenuSet * * rgelt,
        long * pceltFetched );
    HRESULT Skip (
        long celt );
    HRESULT Reset ( );
    HRESULT Clone (
        struct IEnumVMenuSet * * ppenm );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Next (
        /*[in]*/ long celt,
        /*[out]*/ struct IVMenuSet * * rgelt,
        /*[out]*/ long * pceltFetched ) = 0;
      virtual HRESULT __stdcall raw_Skip (
        /*[in]*/ long celt ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_Clone (
        /*[out]*/ struct IEnumVMenuSet * * ppenm ) = 0;
};

struct __declspec(uuid("000d0225-0000-0000-c000-000000000046"))
IVMenus : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVMenuPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IVMenuSetPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    IVMenuPtr GetItem (
        long lIndex );
    IVMenuPtr Add ( );
    IVMenuPtr AddAt (
        long lIndex );
    long GetCount ( );
    IVMenuSetPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * lplpIEnumVMenu ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ struct IVMenu * * lplpMenu ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[out,retval]*/ struct IVMenu * * lplpMenu ) = 0;
      virtual HRESULT __stdcall raw_AddAt (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ struct IVMenu * * lplpMenu ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * lplCount ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IVMenuSet * * lplpVMenuSet ) = 0;
};

struct __declspec(uuid("000d0222-0000-0000-c000-000000000046"))
IVMenu : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetDefault))
    _bstr_t Default;
    __declspec(property(get=GetStyle,put=PutStyle))
    short Style;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetMDIWindowMenu,put=PutMDIWindowMenu))
    short MDIWindowMenu;
    __declspec(property(get=GetWidth,put=PutWidth))
    short Width;
    __declspec(property(get=GetMenuItems))
    IVMenuItemsPtr MenuItems;
    __declspec(property(get=GetParent))
    IVMenusPtr Parent;
    __declspec(property(get=GetCmdNum,put=PutCmdNum))
    short CmdNum;
    __declspec(property(get=GetPaletteWidth,put=PutPaletteWidth))
    short PaletteWidth;
    __declspec(property(get=GetHelpContextID,put=PutHelpContextID))
    short HelpContextID;
    __declspec(property(get=GetIsSeparator))
    short IsSeparator;
    __declspec(property(get=GetIsHierarchical))
    short IsHierarchical;
    __declspec(property(get=GetCntrlType,put=PutCntrlType))
    short CntrlType;
    __declspec(property(get=GetCntrlID,put=PutCntrlID))
    short CntrlID;
    __declspec(property(get=GetTypeSpecific1,put=PutTypeSpecific1))
    short TypeSpecific1;
    __declspec(property(get=GetPriority,put=PutPriority))
    short Priority;
    __declspec(property(get=GetSpacing,put=PutSpacing))
    short Spacing;
    __declspec(property(get=GetTypeSpecific2,put=PutTypeSpecific2))
    short TypeSpecific2;
    __declspec(property(get=GetActionText,put=PutActionText))
    _bstr_t ActionText;
    __declspec(property(get=GetMiniHelp,put=PutMiniHelp))
    _bstr_t MiniHelp;
    __declspec(property(get=GetAddOnName,put=PutAddOnName))
    _bstr_t AddOnName;
    __declspec(property(get=GetAddOnArgs,put=PutAddOnArgs))
    _bstr_t AddOnArgs;
    __declspec(property(get=GetHelpFile,put=PutHelpFile))
    _bstr_t HelpFile;
    __declspec(property(get=GetBuiltIn))
    VARIANT_BOOL BuiltIn;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetFaceID,put=PutFaceID))
    short FaceID;
    __declspec(property(get=GetState,put=PutState))
    short State;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Delete ( );
    _bstr_t GetDefault ( );
    void PutCaption (
        _bstr_t pCaption );
    _bstr_t GetCaption ( );
    long GetIndex ( );
    void PutMDIWindowMenu (
        short pMDIWindowMenu );
    short GetMDIWindowMenu ( );
    IVMenuItemsPtr GetMenuItems ( );
    IVMenusPtr GetParent ( );
    void PutCmdNum (
        short pwCmd );
    short GetCmdNum ( );
    void PutHelpContextID (
        short pHelpContextID );
    short GetHelpContextID ( );
    short GetIsSeparator ( );
    short GetIsHierarchical ( );
    void PutCntrlType (
        short pwCntrlType );
    short GetCntrlType ( );
    void PutCntrlID (
        short pwCntrlID );
    short GetCntrlID ( );
    void PutTypeSpecific1 (
        short pwTypeSpecific );
    short GetTypeSpecific1 ( );
    void PutPriority (
        short pwPriority );
    short GetPriority ( );
    void PutSpacing (
        short pwSpacing );
    short GetSpacing ( );
    void PutTypeSpecific2 (
        short pwTypeSpecific );
    short GetTypeSpecific2 ( );
    void PutActionText (
        _bstr_t pActionText );
    _bstr_t GetActionText ( );
    void PutMiniHelp (
        _bstr_t pMiniHelp );
    _bstr_t GetMiniHelp ( );
    void PutAddOnName (
        _bstr_t pAddOnName );
    _bstr_t GetAddOnName ( );
    void PutAddOnArgs (
        _bstr_t pAddOnArgs );
    _bstr_t GetAddOnArgs ( );
    void PutHelpFile (
        _bstr_t pHelpFile );
    _bstr_t GetHelpFile ( );
    HRESULT IconFileName (
        _bstr_t IconFileName );
    VARIANT_BOOL GetBuiltIn ( );
    void PutEnabled (
        VARIANT_BOOL pbEnabled );
    VARIANT_BOOL GetEnabled ( );
    void PutFaceID (
        short pwFaceID );
    short GetFaceID ( );
    void PutState (
        short pwState );
    short GetState ( );
    void PutStyle (
        short pwStyle );
    short GetStyle ( );
    void PutVisible (
        VARIANT_BOOL pbVisible );
    VARIANT_BOOL GetVisible ( );
    void PutWidth (
        short pwWidth );
    short GetWidth ( );
    void PutPaletteWidth (
        short pwWidth );
    short GetPaletteWidth ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Default (
        /*[out,retval]*/ BSTR * pCaption ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR pCaption ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * pCaption ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * plIndex ) = 0;
      virtual HRESULT __stdcall put_MDIWindowMenu (
        /*[in]*/ short pMDIWindowMenu ) = 0;
      virtual HRESULT __stdcall get_MDIWindowMenu (
        /*[out,retval]*/ short * pMDIWindowMenu ) = 0;
      virtual HRESULT __stdcall get_MenuItems (
        /*[out,retval]*/ struct IVMenuItems * * lplpVMenuItems ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IVMenus * * lplpVMenus ) = 0;
      virtual HRESULT __stdcall put_CmdNum (
        /*[in]*/ short pwCmd ) = 0;
      virtual HRESULT __stdcall get_CmdNum (
        /*[out,retval]*/ short * pwCmd ) = 0;
      virtual HRESULT __stdcall put_HelpContextID (
        /*[in]*/ short pHelpContextID ) = 0;
      virtual HRESULT __stdcall get_HelpContextID (
        /*[out,retval]*/ short * pHelpContextID ) = 0;
      virtual HRESULT __stdcall get_IsSeparator (
        /*[out,retval]*/ short * pIsSeparator ) = 0;
      virtual HRESULT __stdcall get_IsHierarchical (
        /*[out,retval]*/ short * pIsHierarchical ) = 0;
      virtual HRESULT __stdcall put_CntrlType (
        /*[in]*/ short pwCntrlType ) = 0;
      virtual HRESULT __stdcall get_CntrlType (
        /*[out,retval]*/ short * pwCntrlType ) = 0;
      virtual HRESULT __stdcall put_CntrlID (
        /*[in]*/ short pwCntrlID ) = 0;
      virtual HRESULT __stdcall get_CntrlID (
        /*[out,retval]*/ short * pwCntrlID ) = 0;
      virtual HRESULT __stdcall put_TypeSpecific1 (
        /*[in]*/ short pwTypeSpecific ) = 0;
      virtual HRESULT __stdcall get_TypeSpecific1 (
        /*[out,retval]*/ short * pwTypeSpecific ) = 0;
      virtual HRESULT __stdcall put_Priority (
        /*[in]*/ short pwPriority ) = 0;
      virtual HRESULT __stdcall get_Priority (
        /*[out,retval]*/ short * pwPriority ) = 0;
      virtual HRESULT __stdcall put_Spacing (
        /*[in]*/ short pwSpacing ) = 0;
      virtual HRESULT __stdcall get_Spacing (
        /*[out,retval]*/ short * pwSpacing ) = 0;
      virtual HRESULT __stdcall put_TypeSpecific2 (
        /*[in]*/ short pwTypeSpecific ) = 0;
      virtual HRESULT __stdcall get_TypeSpecific2 (
        /*[out,retval]*/ short * pwTypeSpecific ) = 0;
      virtual HRESULT __stdcall put_ActionText (
        /*[in]*/ BSTR pActionText ) = 0;
      virtual HRESULT __stdcall get_ActionText (
        /*[out,retval]*/ BSTR * pActionText ) = 0;
      virtual HRESULT __stdcall put_MiniHelp (
        /*[in]*/ BSTR pMiniHelp ) = 0;
      virtual HRESULT __stdcall get_MiniHelp (
        /*[out,retval]*/ BSTR * pMiniHelp ) = 0;
      virtual HRESULT __stdcall put_AddOnName (
        /*[in]*/ BSTR pAddOnName ) = 0;
      virtual HRESULT __stdcall get_AddOnName (
        /*[out,retval]*/ BSTR * pAddOnName ) = 0;
      virtual HRESULT __stdcall put_AddOnArgs (
        /*[in]*/ BSTR pAddOnArgs ) = 0;
      virtual HRESULT __stdcall get_AddOnArgs (
        /*[out,retval]*/ BSTR * pAddOnArgs ) = 0;
      virtual HRESULT __stdcall put_HelpFile (
        /*[in]*/ BSTR pHelpFile ) = 0;
      virtual HRESULT __stdcall get_HelpFile (
        /*[out,retval]*/ BSTR * pHelpFile ) = 0;
      virtual HRESULT __stdcall raw_IconFileName (
        /*[in]*/ BSTR IconFileName ) = 0;
      virtual HRESULT __stdcall get_BuiltIn (
        /*[out,retval]*/ VARIANT_BOOL * pbBuiltIn ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL pbEnabled ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * pbEnabled ) = 0;
      virtual HRESULT __stdcall put_FaceID (
        /*[in]*/ short pwFaceID ) = 0;
      virtual HRESULT __stdcall get_FaceID (
        /*[out,retval]*/ short * pwFaceID ) = 0;
      virtual HRESULT __stdcall put_State (
        /*[in]*/ short pwState ) = 0;
      virtual HRESULT __stdcall get_State (
        /*[out,retval]*/ short * pwState ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ short pwStyle ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ short * pwStyle ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL pbVisible ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * pbVisible ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ short pwWidth ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ short * pwWidth ) = 0;
      virtual HRESULT __stdcall put_PaletteWidth (
        /*[in]*/ short pwWidth ) = 0;
      virtual HRESULT __stdcall get_PaletteWidth (
        /*[out,retval]*/ short * pwWidth ) = 0;
};

struct __declspec(uuid("000d0223-0000-0000-c000-000000000046"))
IEnumVMenu : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Next (
        long celt,
        struct IVMenu * * rgelt,
        long * pceltFetched );
    HRESULT Skip (
        long celt );
    HRESULT Reset ( );
    HRESULT Clone (
        struct IEnumVMenu * * ppenm );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Next (
        /*[in]*/ long celt,
        /*[out]*/ struct IVMenu * * rgelt,
        /*[out]*/ long * pceltFetched ) = 0;
      virtual HRESULT __stdcall raw_Skip (
        /*[in]*/ long celt ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_Clone (
        /*[out]*/ struct IEnumVMenu * * ppenm ) = 0;
};

struct __declspec(uuid("000d0216-0000-0000-c000-000000000046"))
IVMenuItems : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVMenuItemPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IVMenuPtr Parent;
    __declspec(property(get=GetParentItem))
    IVMenuItemPtr ParentItem;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    IVMenuItemPtr GetItem (
        long lIndex );
    IVMenuItemPtr Add ( );
    IVMenuItemPtr AddAt (
        long lIndex );
    long GetCount ( );
    IVMenuPtr GetParent ( );
    IVMenuItemPtr GetParentItem ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * lplpIEnumVMenuItem ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ struct IVMenuItem * * lplpMenuItem ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[out,retval]*/ struct IVMenuItem * * lplpMenuItem ) = 0;
      virtual HRESULT __stdcall raw_AddAt (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ struct IVMenuItem * * lplpMenuItem ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * lplCount ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IVMenu * * lplpVMenu ) = 0;
      virtual HRESULT __stdcall get_ParentItem (
        /*[out,retval]*/ struct IVMenuItem * * lplpVMenuItem ) = 0;
};

struct __declspec(uuid("000d0212-0000-0000-c000-000000000046"))
IVMenuItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetDefault))
    _bstr_t Default;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetMenuItems))
    IVMenuItemsPtr MenuItems;
    __declspec(property(get=GetParent))
    IVMenuItemsPtr Parent;
    __declspec(property(get=GetCmdNum,put=PutCmdNum))
    short CmdNum;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetHelpContextID,put=PutHelpContextID))
    short HelpContextID;
    __declspec(property(get=GetWidth,put=PutWidth))
    short Width;
    __declspec(property(get=GetIsSeparator))
    short IsSeparator;
    __declspec(property(get=GetIsHierarchical))
    short IsHierarchical;
    __declspec(property(get=GetPaletteWidth,put=PutPaletteWidth))
    short PaletteWidth;
    __declspec(property(get=GetBeginGroup,put=PutBeginGroup))
    VARIANT_BOOL BeginGroup;
    __declspec(property(get=GetActionText,put=PutActionText))
    _bstr_t ActionText;
    __declspec(property(get=GetMiniHelp,put=PutMiniHelp))
    _bstr_t MiniHelp;
    __declspec(property(get=GetAddOnName,put=PutAddOnName))
    _bstr_t AddOnName;
    __declspec(property(get=GetAddOnArgs,put=PutAddOnArgs))
    _bstr_t AddOnArgs;
    __declspec(property(get=GetHelpFile,put=PutHelpFile))
    _bstr_t HelpFile;
    __declspec(property(get=GetCntrlType,put=PutCntrlType))
    short CntrlType;
    __declspec(property(get=GetCntrlID,put=PutCntrlID))
    short CntrlID;
    __declspec(property(get=GetTypeSpecific1,put=PutTypeSpecific1))
    short TypeSpecific1;
    __declspec(property(get=GetPriority,put=PutPriority))
    short Priority;
    __declspec(property(get=GetSpacing,put=PutSpacing))
    short Spacing;
    __declspec(property(get=GetTypeSpecific2,put=PutTypeSpecific2))
    short TypeSpecific2;
    __declspec(property(get=GetBuiltIn))
    VARIANT_BOOL BuiltIn;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetFaceID,put=PutFaceID))
    short FaceID;
    __declspec(property(get=GetState,put=PutState))
    short State;
    __declspec(property(get=GetStyle,put=PutStyle))
    short Style;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Delete ( );
    _bstr_t GetDefault ( );
    long GetIndex ( );
    IVMenuItemsPtr GetMenuItems ( );
    IVMenuItemsPtr GetParent ( );
    void PutCmdNum (
        short pwCmd );
    short GetCmdNum ( );
    void PutHelpContextID (
        short pHelpContextID );
    short GetHelpContextID ( );
    short GetIsSeparator ( );
    short GetIsHierarchical ( );
    void PutCaption (
        _bstr_t pCaption );
    _bstr_t GetCaption ( );
    void PutActionText (
        _bstr_t pActionText );
    _bstr_t GetActionText ( );
    void PutMiniHelp (
        _bstr_t pMiniHelp );
    _bstr_t GetMiniHelp ( );
    void PutAddOnName (
        _bstr_t pAddOnName );
    _bstr_t GetAddOnName ( );
    void PutAddOnArgs (
        _bstr_t pAddOnArgs );
    _bstr_t GetAddOnArgs ( );
    void PutHelpFile (
        _bstr_t pHelpFile );
    _bstr_t GetHelpFile ( );
    void PutCntrlType (
        short pwCntrlType );
    short GetCntrlType ( );
    void PutCntrlID (
        short pwCntrlID );
    short GetCntrlID ( );
    void PutTypeSpecific1 (
        short pwTypeSpecific );
    short GetTypeSpecific1 ( );
    void PutPriority (
        short pwPriority );
    short GetPriority ( );
    void PutSpacing (
        short pwSpacing );
    short GetSpacing ( );
    void PutTypeSpecific2 (
        short pwTypeSpecific );
    short GetTypeSpecific2 ( );
    HRESULT IconFileName (
        _bstr_t IconFileName );
    VARIANT_BOOL GetBuiltIn ( );
    void PutEnabled (
        VARIANT_BOOL pbEnabled );
    VARIANT_BOOL GetEnabled ( );
    void PutFaceID (
        short pwFaceID );
    short GetFaceID ( );
    void PutState (
        short pwState );
    short GetState ( );
    void PutStyle (
        short pwStyle );
    short GetStyle ( );
    void PutVisible (
        VARIANT_BOOL pbVisible );
    VARIANT_BOOL GetVisible ( );
    void PutWidth (
        short pwWidth );
    short GetWidth ( );
    void PutPaletteWidth (
        short pwWidth );
    short GetPaletteWidth ( );
    void PutBeginGroup (
        VARIANT_BOOL pbRet );
    VARIANT_BOOL GetBeginGroup ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Default (
        /*[out,retval]*/ BSTR * pCaption ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * plIndex ) = 0;
      virtual HRESULT __stdcall get_MenuItems (
        /*[out,retval]*/ struct IVMenuItems * * lplpVMenuItems ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IVMenuItems * * lplpVMenuItems ) = 0;
      virtual HRESULT __stdcall put_CmdNum (
        /*[in]*/ short pwCmd ) = 0;
      virtual HRESULT __stdcall get_CmdNum (
        /*[out,retval]*/ short * pwCmd ) = 0;
      virtual HRESULT __stdcall put_HelpContextID (
        /*[in]*/ short pHelpContextID ) = 0;
      virtual HRESULT __stdcall get_HelpContextID (
        /*[out,retval]*/ short * pHelpContextID ) = 0;
      virtual HRESULT __stdcall get_IsSeparator (
        /*[out,retval]*/ short * pIsSeparator ) = 0;
      virtual HRESULT __stdcall get_IsHierarchical (
        /*[out,retval]*/ short * pIsHierarchical ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR pCaption ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * pCaption ) = 0;
      virtual HRESULT __stdcall put_ActionText (
        /*[in]*/ BSTR pActionText ) = 0;
      virtual HRESULT __stdcall get_ActionText (
        /*[out,retval]*/ BSTR * pActionText ) = 0;
      virtual HRESULT __stdcall put_MiniHelp (
        /*[in]*/ BSTR pMiniHelp ) = 0;
      virtual HRESULT __stdcall get_MiniHelp (
        /*[out,retval]*/ BSTR * pMiniHelp ) = 0;
      virtual HRESULT __stdcall put_AddOnName (
        /*[in]*/ BSTR pAddOnName ) = 0;
      virtual HRESULT __stdcall get_AddOnName (
        /*[out,retval]*/ BSTR * pAddOnName ) = 0;
      virtual HRESULT __stdcall put_AddOnArgs (
        /*[in]*/ BSTR pAddOnArgs ) = 0;
      virtual HRESULT __stdcall get_AddOnArgs (
        /*[out,retval]*/ BSTR * pAddOnArgs ) = 0;
      virtual HRESULT __stdcall put_HelpFile (
        /*[in]*/ BSTR pHelpFile ) = 0;
      virtual HRESULT __stdcall get_HelpFile (
        /*[out,retval]*/ BSTR * pHelpFile ) = 0;
      virtual HRESULT __stdcall put_CntrlType (
        /*[in]*/ short pwCntrlType ) = 0;
      virtual HRESULT __stdcall get_CntrlType (
        /*[out,retval]*/ short * pwCntrlType ) = 0;
      virtual HRESULT __stdcall put_CntrlID (
        /*[in]*/ short pwCntrlID ) = 0;
      virtual HRESULT __stdcall get_CntrlID (
        /*[out,retval]*/ short * pwCntrlID ) = 0;
      virtual HRESULT __stdcall put_TypeSpecific1 (
        /*[in]*/ short pwTypeSpecific ) = 0;
      virtual HRESULT __stdcall get_TypeSpecific1 (
        /*[out,retval]*/ short * pwTypeSpecific ) = 0;
      virtual HRESULT __stdcall put_Priority (
        /*[in]*/ short pwPriority ) = 0;
      virtual HRESULT __stdcall get_Priority (
        /*[out,retval]*/ short * pwPriority ) = 0;
      virtual HRESULT __stdcall put_Spacing (
        /*[in]*/ short pwSpacing ) = 0;
      virtual HRESULT __stdcall get_Spacing (
        /*[out,retval]*/ short * pwSpacing ) = 0;
      virtual HRESULT __stdcall put_TypeSpecific2 (
        /*[in]*/ short pwTypeSpecific ) = 0;
      virtual HRESULT __stdcall get_TypeSpecific2 (
        /*[out,retval]*/ short * pwTypeSpecific ) = 0;
      virtual HRESULT __stdcall raw_IconFileName (
        /*[in]*/ BSTR IconFileName ) = 0;
      virtual HRESULT __stdcall get_BuiltIn (
        /*[out,retval]*/ VARIANT_BOOL * pbBuiltIn ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL pbEnabled ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * pbEnabled ) = 0;
      virtual HRESULT __stdcall put_FaceID (
        /*[in]*/ short pwFaceID ) = 0;
      virtual HRESULT __stdcall get_FaceID (
        /*[out,retval]*/ short * pwFaceID ) = 0;
      virtual HRESULT __stdcall put_State (
        /*[in]*/ short pwState ) = 0;
      virtual HRESULT __stdcall get_State (
        /*[out,retval]*/ short * pwState ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ short pwStyle ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ short * pwStyle ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL pbVisible ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * pbVisible ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ short pwWidth ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ short * pwWidth ) = 0;
      virtual HRESULT __stdcall put_PaletteWidth (
        /*[in]*/ short pwWidth ) = 0;
      virtual HRESULT __stdcall get_PaletteWidth (
        /*[out,retval]*/ short * pwWidth ) = 0;
      virtual HRESULT __stdcall put_BeginGroup (
        /*[in]*/ VARIANT_BOOL pbRet ) = 0;
      virtual HRESULT __stdcall get_BeginGroup (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
};

struct __declspec(uuid("000d0213-0000-0000-c000-000000000046"))
IEnumVMenuItem : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Next (
        long celt,
        struct IVMenuItem * * rgelt,
        long * pceltFetched );
    HRESULT Skip (
        long celt );
    HRESULT Reset ( );
    HRESULT Clone (
        struct IEnumVMenuItem * * ppenm );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Next (
        /*[in]*/ long celt,
        /*[out]*/ struct IVMenuItem * * rgelt,
        /*[out]*/ long * pceltFetched ) = 0;
      virtual HRESULT __stdcall raw_Skip (
        /*[in]*/ long celt ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_Clone (
        /*[out]*/ struct IEnumVMenuItem * * ppenm ) = 0;
};

struct __declspec(uuid("000d0266-0000-0000-c000-000000000046"))
IVToolbarSets : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVToolbarSetPtr Item[];
    __declspec(property(get=GetItemAtID))
    IVToolbarSetPtr ItemAtID[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IVUIObjectPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    IVToolbarSetPtr GetItem (
        long lIndex );
    IVToolbarSetPtr GetItemAtID (
        long lID );
    IVToolbarSetPtr Add ( );
    IVToolbarSetPtr AddAtID (
        long lID );
    long GetCount ( );
    IVUIObjectPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * lplpIEnumVToolbarSet ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ struct IVToolbarSet * * lplpToolbarSet ) = 0;
      virtual HRESULT __stdcall get_ItemAtID (
        /*[in]*/ long lID,
        /*[out,retval]*/ struct IVToolbarSet * * lplpToolbarSet ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[out,retval]*/ struct IVToolbarSet * * lplpToolbarSet ) = 0;
      virtual HRESULT __stdcall raw_AddAtID (
        /*[in]*/ long lID,
        /*[out,retval]*/ struct IVToolbarSet * * lplpToolbarSet ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * lplCount ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IVUIObject * * lplpVUIObject ) = 0;
};

struct __declspec(uuid("000d0262-0000-0000-c000-000000000046"))
IVToolbarSet : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetDefault))
    _bstr_t Default;
    __declspec(property(get=GetSetID))
    long SetID;
    __declspec(property(get=GetToolbars))
    IVToolbarsPtr Toolbars;
    __declspec(property(get=GetParent))
    IVToolbarSetsPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Delete ( );
    _bstr_t GetDefault ( );
    void PutCaption (
        _bstr_t pCaption );
    _bstr_t GetCaption ( );
    long GetSetID ( );
    IVToolbarsPtr GetToolbars ( );
    IVToolbarSetsPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Default (
        /*[out,retval]*/ BSTR * pCaption ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR pCaption ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * pCaption ) = 0;
      virtual HRESULT __stdcall get_SetID (
        /*[out,retval]*/ long * plSetID ) = 0;
      virtual HRESULT __stdcall get_Toolbars (
        /*[out,retval]*/ struct IVToolbars * * lplpVToolbars ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IVToolbarSets * * lplpVToolbarSets ) = 0;
};

struct __declspec(uuid("000d0263-0000-0000-c000-000000000046"))
IEnumVToolbarSet : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Next (
        long celt,
        struct IVToolbarSet * * rgelt,
        long * pceltFetched );
    HRESULT Skip (
        long celt );
    HRESULT Reset ( );
    HRESULT Clone (
        struct IEnumVToolbarSet * * ppenm );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Next (
        /*[in]*/ long celt,
        /*[out]*/ struct IVToolbarSet * * rgelt,
        /*[out]*/ long * pceltFetched ) = 0;
      virtual HRESULT __stdcall raw_Skip (
        /*[in]*/ long celt ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_Clone (
        /*[out]*/ struct IEnumVToolbarSet * * ppenm ) = 0;
};

struct __declspec(uuid("000d0255-0000-0000-c000-000000000046"))
IVToolbars : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVToolbarPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IVToolbarSetPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    IVToolbarPtr GetItem (
        long lIndex );
    IVToolbarPtr Add ( );
    IVToolbarPtr AddAt (
        long lIndex );
    long GetCount ( );
    IVToolbarSetPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * lplpIEnumVToolbar ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ struct IVToolbar * * lplpToolbar ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[out,retval]*/ struct IVToolbar * * lplpToolbar ) = 0;
      virtual HRESULT __stdcall raw_AddAt (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ struct IVToolbar * * lplpToolbar ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * lplCount ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IVToolbarSet * * lplpVToolbarSet ) = 0;
};

struct __declspec(uuid("000d0252-0000-0000-c000-000000000046"))
IVToolbar : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetDefault))
    _bstr_t Default;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetToolbarItems))
    IVToolbarItemsPtr ToolbarItems;
    __declspec(property(get=GetParent))
    IVToolbarsPtr Parent;
    __declspec(property(get=GetBuiltIn))
    VARIANT_BOOL BuiltIn;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    short Height;
    __declspec(property(get=GetLeft,put=PutLeft))
    short Left;
    __declspec(property(get=GetPosition,put=PutPosition))
    short Position;
    __declspec(property(get=GetProtection,put=PutProtection))
    short Protection;
    __declspec(property(get=GetRowIndex,put=PutRowIndex))
    short RowIndex;
    __declspec(property(get=GetTop,put=PutTop))
    short Top;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    short Width;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Delete ( );
    _bstr_t GetDefault ( );
    void PutCaption (
        _bstr_t pCaption );
    _bstr_t GetCaption ( );
    long GetIndex ( );
    IVToolbarItemsPtr GetToolbarItems ( );
    IVToolbarsPtr GetParent ( );
    VARIANT_BOOL GetBuiltIn ( );
    void PutEnabled (
        VARIANT_BOOL pbEnabled );
    VARIANT_BOOL GetEnabled ( );
    void PutHeight (
        short pHeight );
    short GetHeight ( );
    void PutLeft (
        short pLeft );
    short GetLeft ( );
    void PutPosition (
        short pPos );
    short GetPosition ( );
    void PutProtection (
        short pProt );
    short GetProtection ( );
    void PutRowIndex (
        short pwRow );
    short GetRowIndex ( );
    void PutTop (
        short pTop );
    short GetTop ( );
    void PutVisible (
        VARIANT_BOOL pbVisible );
    VARIANT_BOOL GetVisible ( );
    void PutWidth (
        short pwWidth );
    short GetWidth ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Default (
        /*[out,retval]*/ BSTR * pCaption ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR pCaption ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * pCaption ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * plIndex ) = 0;
      virtual HRESULT __stdcall get_ToolbarItems (
        /*[out,retval]*/ struct IVToolbarItems * * lplpVToolbarItems ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IVToolbars * * lplpVToolbars ) = 0;
      virtual HRESULT __stdcall get_BuiltIn (
        /*[out,retval]*/ VARIANT_BOOL * pbBuiltIn ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL pbEnabled ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * pbEnabled ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ short pHeight ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ short * pHeight ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ short pLeft ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ short * pLeft ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ short pPos ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ short * pPos ) = 0;
      virtual HRESULT __stdcall put_Protection (
        /*[in]*/ short pProt ) = 0;
      virtual HRESULT __stdcall get_Protection (
        /*[out,retval]*/ short * pProt ) = 0;
      virtual HRESULT __stdcall put_RowIndex (
        /*[in]*/ short pwRow ) = 0;
      virtual HRESULT __stdcall get_RowIndex (
        /*[out,retval]*/ short * pwRow ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ short pTop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ short * pTop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL pbVisible ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * pbVisible ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ short pwWidth ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ short * pwWidth ) = 0;
};

struct __declspec(uuid("000d0253-0000-0000-c000-000000000046"))
IEnumVToolbar : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Next (
        long celt,
        struct IVToolbar * * rgelt,
        long * pceltFetched );
    HRESULT Skip (
        long celt );
    HRESULT Reset ( );
    HRESULT Clone (
        struct IEnumVToolbar * * ppenm );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Next (
        /*[in]*/ long celt,
        /*[out]*/ struct IVToolbar * * rgelt,
        /*[out]*/ long * pceltFetched ) = 0;
      virtual HRESULT __stdcall raw_Skip (
        /*[in]*/ long celt ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_Clone (
        /*[out]*/ struct IEnumVToolbar * * ppenm ) = 0;
};

struct __declspec(uuid("000d0245-0000-0000-c000-000000000046"))
IVToolbarItems : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVToolbarItemPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IVToolbarPtr Parent;
    __declspec(property(get=GetParentItem))
    IVToolbarItemPtr ParentItem;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    IVToolbarItemPtr GetItem (
        long lIndex );
    IVToolbarItemPtr Add ( );
    IVToolbarItemPtr AddAt (
        long lIndex );
    long GetCount ( );
    IVToolbarPtr GetParent ( );
    IVToolbarItemPtr GetParentItem ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * lplpIEnumVToolbarItem ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ struct IVToolbarItem * * lplpToolbarItem ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[out,retval]*/ struct IVToolbarItem * * lplpToolbarItem ) = 0;
      virtual HRESULT __stdcall raw_AddAt (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ struct IVToolbarItem * * lplpToolbarItem ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * lplCount ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IVToolbar * * lplpVToolbar ) = 0;
      virtual HRESULT __stdcall get_ParentItem (
        /*[out,retval]*/ struct IVToolbarItem * * lplpVToolbarItem ) = 0;
};

struct __declspec(uuid("000d0242-0000-0000-c000-000000000046"))
IVToolbarItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetActionText,put=PutActionText))
    _bstr_t ActionText;
    __declspec(property(get=GetWidth,put=PutWidth))
    short Width;
    __declspec(property(get=GetDefault))
    _bstr_t Default;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetParent))
    IVToolbarItemsPtr Parent;
    __declspec(property(get=GetCmdNum,put=PutCmdNum))
    short CmdNum;
    __declspec(property(get=GetPaletteWidth,put=PutPaletteWidth))
    short PaletteWidth;
    __declspec(property(get=GetHelpContextID,put=PutHelpContextID))
    short HelpContextID;
    __declspec(property(get=GetToolbarItems))
    IVToolbarItemsPtr ToolbarItems;
    __declspec(property(get=GetIsSeparator))
    short IsSeparator;
    __declspec(property(get=GetIsHierarchical))
    short IsHierarchical;
    __declspec(property(get=GetAddOnName,put=PutAddOnName))
    _bstr_t AddOnName;
    __declspec(property(get=GetBeginGroup,put=PutBeginGroup))
    VARIANT_BOOL BeginGroup;
    __declspec(property(get=GetAddOnArgs,put=PutAddOnArgs))
    _bstr_t AddOnArgs;
    __declspec(property(get=GetHelpFile,put=PutHelpFile))
    _bstr_t HelpFile;
    __declspec(property(get=GetCntrlType,put=PutCntrlType))
    short CntrlType;
    __declspec(property(get=GetCntrlID,put=PutCntrlID))
    short CntrlID;
    __declspec(property(get=GetTypeSpecific1,put=PutTypeSpecific1))
    short TypeSpecific1;
    __declspec(property(get=GetPriority,put=PutPriority))
    short Priority;
    __declspec(property(get=GetSpacing,put=PutSpacing))
    short Spacing;
    __declspec(property(get=GetTypeSpecific2,put=PutTypeSpecific2))
    short TypeSpecific2;
    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetMiniHelp,put=PutMiniHelp))
    _bstr_t MiniHelp;
    __declspec(property(get=GetBuiltIn))
    VARIANT_BOOL BuiltIn;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetFaceID,put=PutFaceID))
    short FaceID;
    __declspec(property(get=GetState,put=PutState))
    short State;
    __declspec(property(get=GetStyle,put=PutStyle))
    short Style;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Delete ( );
    HRESULT IconFileName (
        _bstr_t IconFileName );
    _bstr_t GetDefault ( );
    long GetIndex ( );
    IVToolbarItemsPtr GetParent ( );
    void PutCmdNum (
        short pwCmd );
    short GetCmdNum ( );
    void PutHelpContextID (
        short pHelpContextID );
    short GetHelpContextID ( );
    void PutActionText (
        _bstr_t pActionText );
    _bstr_t GetActionText ( );
    void PutAddOnName (
        _bstr_t pAddOnName );
    _bstr_t GetAddOnName ( );
    void PutAddOnArgs (
        _bstr_t pAddOnArgs );
    _bstr_t GetAddOnArgs ( );
    void PutHelpFile (
        _bstr_t pHelpFile );
    _bstr_t GetHelpFile ( );
    void PutCntrlType (
        short pwCntrlType );
    short GetCntrlType ( );
    void PutCntrlID (
        short pwCntrlID );
    short GetCntrlID ( );
    void PutTypeSpecific1 (
        short pwTypeSpecific );
    short GetTypeSpecific1 ( );
    void PutPriority (
        short pwPriority );
    short GetPriority ( );
    void PutSpacing (
        short pwSpacing );
    short GetSpacing ( );
    void PutTypeSpecific2 (
        short pwTypeSpecific );
    short GetTypeSpecific2 ( );
    void PutCaption (
        _bstr_t pCaption );
    _bstr_t GetCaption ( );
    void PutMiniHelp (
        _bstr_t pMiniHelp );
    _bstr_t GetMiniHelp ( );
    VARIANT_BOOL GetBuiltIn ( );
    void PutEnabled (
        VARIANT_BOOL pbEnabled );
    VARIANT_BOOL GetEnabled ( );
    void PutFaceID (
        short pwFaceID );
    short GetFaceID ( );
    void PutState (
        short pwState );
    short GetState ( );
    void PutStyle (
        short pwStyle );
    short GetStyle ( );
    void PutVisible (
        VARIANT_BOOL pbVisible );
    VARIANT_BOOL GetVisible ( );
    void PutWidth (
        short pwWidth );
    short GetWidth ( );
    void PutPaletteWidth (
        short pwWidth );
    short GetPaletteWidth ( );
    IVToolbarItemsPtr GetToolbarItems ( );
    short GetIsSeparator ( );
    short GetIsHierarchical ( );
    void PutBeginGroup (
        VARIANT_BOOL pbRet );
    VARIANT_BOOL GetBeginGroup ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_IconFileName (
        /*[in]*/ BSTR IconFileName ) = 0;
      virtual HRESULT __stdcall get_Default (
        /*[out,retval]*/ BSTR * pActionText ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * plIndex ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IVToolbarItems * * lplpVToolbarItems ) = 0;
      virtual HRESULT __stdcall put_CmdNum (
        /*[in]*/ short pwCmd ) = 0;
      virtual HRESULT __stdcall get_CmdNum (
        /*[out,retval]*/ short * pwCmd ) = 0;
      virtual HRESULT __stdcall put_HelpContextID (
        /*[in]*/ short pHelpContextID ) = 0;
      virtual HRESULT __stdcall get_HelpContextID (
        /*[out,retval]*/ short * pHelpContextID ) = 0;
      virtual HRESULT __stdcall put_ActionText (
        /*[in]*/ BSTR pActionText ) = 0;
      virtual HRESULT __stdcall get_ActionText (
        /*[out,retval]*/ BSTR * pActionText ) = 0;
      virtual HRESULT __stdcall put_AddOnName (
        /*[in]*/ BSTR pAddOnName ) = 0;
      virtual HRESULT __stdcall get_AddOnName (
        /*[out,retval]*/ BSTR * pAddOnName ) = 0;
      virtual HRESULT __stdcall put_AddOnArgs (
        /*[in]*/ BSTR pAddOnArgs ) = 0;
      virtual HRESULT __stdcall get_AddOnArgs (
        /*[out,retval]*/ BSTR * pAddOnArgs ) = 0;
      virtual HRESULT __stdcall put_HelpFile (
        /*[in]*/ BSTR pHelpFile ) = 0;
      virtual HRESULT __stdcall get_HelpFile (
        /*[out,retval]*/ BSTR * pHelpFile ) = 0;
      virtual HRESULT __stdcall put_CntrlType (
        /*[in]*/ short pwCntrlType ) = 0;
      virtual HRESULT __stdcall get_CntrlType (
        /*[out,retval]*/ short * pwCntrlType ) = 0;
      virtual HRESULT __stdcall put_CntrlID (
        /*[in]*/ short pwCntrlID ) = 0;
      virtual HRESULT __stdcall get_CntrlID (
        /*[out,retval]*/ short * pwCntrlID ) = 0;
      virtual HRESULT __stdcall put_TypeSpecific1 (
        /*[in]*/ short pwTypeSpecific ) = 0;
      virtual HRESULT __stdcall get_TypeSpecific1 (
        /*[out,retval]*/ short * pwTypeSpecific ) = 0;
      virtual HRESULT __stdcall put_Priority (
        /*[in]*/ short pwPriority ) = 0;
      virtual HRESULT __stdcall get_Priority (
        /*[out,retval]*/ short * pwPriority ) = 0;
      virtual HRESULT __stdcall put_Spacing (
        /*[in]*/ short pwSpacing ) = 0;
      virtual HRESULT __stdcall get_Spacing (
        /*[out,retval]*/ short * pwSpacing ) = 0;
      virtual HRESULT __stdcall put_TypeSpecific2 (
        /*[in]*/ short pwTypeSpecific ) = 0;
      virtual HRESULT __stdcall get_TypeSpecific2 (
        /*[out,retval]*/ short * pwTypeSpecific ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR pCaption ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * pCaption ) = 0;
      virtual HRESULT __stdcall put_MiniHelp (
        /*[in]*/ BSTR pMiniHelp ) = 0;
      virtual HRESULT __stdcall get_MiniHelp (
        /*[out,retval]*/ BSTR * pMiniHelp ) = 0;
      virtual HRESULT __stdcall get_BuiltIn (
        /*[out,retval]*/ VARIANT_BOOL * pbBuiltIn ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL pbEnabled ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * pbEnabled ) = 0;
      virtual HRESULT __stdcall put_FaceID (
        /*[in]*/ short pwFaceID ) = 0;
      virtual HRESULT __stdcall get_FaceID (
        /*[out,retval]*/ short * pwFaceID ) = 0;
      virtual HRESULT __stdcall put_State (
        /*[in]*/ short pwState ) = 0;
      virtual HRESULT __stdcall get_State (
        /*[out,retval]*/ short * pwState ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ short pwStyle ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ short * pwStyle ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL pbVisible ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * pbVisible ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ short pwWidth ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ short * pwWidth ) = 0;
      virtual HRESULT __stdcall put_PaletteWidth (
        /*[in]*/ short pwWidth ) = 0;
      virtual HRESULT __stdcall get_PaletteWidth (
        /*[out,retval]*/ short * pwWidth ) = 0;
      virtual HRESULT __stdcall get_ToolbarItems (
        /*[out,retval]*/ struct IVToolbarItems * * lplpVToolbarItems ) = 0;
      virtual HRESULT __stdcall get_IsSeparator (
        /*[out,retval]*/ short * pIsSeparator ) = 0;
      virtual HRESULT __stdcall get_IsHierarchical (
        /*[out,retval]*/ short * pIsHierarchical ) = 0;
      virtual HRESULT __stdcall put_BeginGroup (
        /*[in]*/ VARIANT_BOOL pbRet ) = 0;
      virtual HRESULT __stdcall get_BeginGroup (
        /*[out,retval]*/ VARIANT_BOOL * pbRet ) = 0;
};

struct __declspec(uuid("000d0243-0000-0000-c000-000000000046"))
IEnumVToolbarItem : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Next (
        long celt,
        struct IVToolbarItem * * rgelt,
        long * pceltFetched );
    HRESULT Skip (
        long celt );
    HRESULT Reset ( );
    HRESULT Clone (
        struct IEnumVToolbarItem * * ppenm );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Next (
        /*[in]*/ long celt,
        /*[out]*/ struct IVToolbarItem * * rgelt,
        /*[out]*/ long * pceltFetched ) = 0;
      virtual HRESULT __stdcall raw_Skip (
        /*[in]*/ long celt ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_Clone (
        /*[out]*/ struct IEnumVToolbarItem * * ppenm ) = 0;
};

struct __declspec(uuid("000d0285-0000-0000-c000-000000000046"))
IVStatusBars : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVStatusBarPtr Item[];
    __declspec(property(get=GetItemAtID))
    IVStatusBarPtr ItemAtID[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IVUIObjectPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    IVStatusBarPtr GetItem (
        long lIndex );
    IVStatusBarPtr GetItemAtID (
        long lID );
    IVStatusBarPtr Add ( );
    IVStatusBarPtr AddAtID (
        long lID );
    long GetCount ( );
    IVUIObjectPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * lplpIEnumVStatusBar ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ struct IVStatusBar * * lplpStatusBar ) = 0;
      virtual HRESULT __stdcall get_ItemAtID (
        /*[in]*/ long lID,
        /*[out,retval]*/ struct IVStatusBar * * lplpStatusBar ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[out,retval]*/ struct IVStatusBar * * lplpStatusBar ) = 0;
      virtual HRESULT __stdcall raw_AddAtID (
        /*[in]*/ long lID,
        /*[out,retval]*/ struct IVStatusBar * * lplpStatusBar ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * lplCount ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IVUIObject * * lplpVUIObject ) = 0;
};

struct __declspec(uuid("000d0282-0000-0000-c000-000000000046"))
IVStatusBar : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetDefault))
    _bstr_t Default;
    __declspec(property(get=GetSetID))
    long SetID;
    __declspec(property(get=GetStatusBarItems))
    IVStatusBarItemsPtr StatusBarItems;
    __declspec(property(get=GetParent))
    IVStatusBarsPtr Parent;
    __declspec(property(get=GetBuiltIn))
    VARIANT_BOOL BuiltIn;
    __declspec(property(get=GetProtection,put=PutProtection))
    short Protection;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Delete ( );
    _bstr_t GetDefault ( );
    void PutCaption (
        _bstr_t pCaption );
    _bstr_t GetCaption ( );
    long GetSetID ( );
    IVStatusBarItemsPtr GetStatusBarItems ( );
    IVStatusBarsPtr GetParent ( );
    VARIANT_BOOL GetBuiltIn ( );
    void PutProtection (
        short pProt );
    short GetProtection ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Default (
        /*[out,retval]*/ BSTR * pCaption ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR pCaption ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * pCaption ) = 0;
      virtual HRESULT __stdcall get_SetID (
        /*[out,retval]*/ long * plSetID ) = 0;
      virtual HRESULT __stdcall get_StatusBarItems (
        /*[out,retval]*/ struct IVStatusBarItems * * lplpVStatusBarItems ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IVStatusBars * * lplpVStatusBars ) = 0;
      virtual HRESULT __stdcall get_BuiltIn (
        /*[out,retval]*/ VARIANT_BOOL * pbBuiltIn ) = 0;
      virtual HRESULT __stdcall put_Protection (
        /*[in]*/ short pProt ) = 0;
      virtual HRESULT __stdcall get_Protection (
        /*[out,retval]*/ short * pProt ) = 0;
};

struct __declspec(uuid("000d0283-0000-0000-c000-000000000046"))
IEnumVStatusBar : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Next (
        long celt,
        struct IVStatusBar * * rgelt,
        long * pceltFetched );
    HRESULT Skip (
        long celt );
    HRESULT Reset ( );
    HRESULT Clone (
        struct IEnumVStatusBar * * ppenm );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Next (
        /*[in]*/ long celt,
        /*[out]*/ struct IVStatusBar * * rgelt,
        /*[out]*/ long * pceltFetched ) = 0;
      virtual HRESULT __stdcall raw_Skip (
        /*[in]*/ long celt ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_Clone (
        /*[out]*/ struct IEnumVStatusBar * * ppenm ) = 0;
};

struct __declspec(uuid("000d0275-0000-0000-c000-000000000046"))
IVStatusBarItems : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVStatusBarItemPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IVStatusBarPtr Parent;
    __declspec(property(get=GetParentItem))
    IVStatusBarItemPtr ParentItem;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    IVStatusBarItemPtr GetItem (
        long lIndex );
    IVStatusBarItemPtr Add ( );
    IVStatusBarItemPtr AddAt (
        long lIndex );
    long GetCount ( );
    IVStatusBarPtr GetParent ( );
    IVStatusBarItemPtr GetParentItem ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * lplpIEnumVStatusBar ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ struct IVStatusBarItem * * lplpStatusBar ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[out,retval]*/ struct IVStatusBarItem * * lplpStatusBarItem ) = 0;
      virtual HRESULT __stdcall raw_AddAt (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ struct IVStatusBarItem * * lplpStatusBarItem ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * lplCount ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IVStatusBar * * lplpVStatusBar ) = 0;
      virtual HRESULT __stdcall get_ParentItem (
        /*[out,retval]*/ struct IVStatusBarItem * * lplpVStatusBarItem ) = 0;
};

struct __declspec(uuid("000d0272-0000-0000-c000-000000000046"))
IVStatusBarItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetActionText,put=PutActionText))
    _bstr_t ActionText;
    __declspec(property(get=GetWidth,put=PutWidth))
    short Width;
    __declspec(property(get=GetDefault))
    _bstr_t Default;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetParent))
    IVStatusBarItemsPtr Parent;
    __declspec(property(get=GetCmdNum,put=PutCmdNum))
    short CmdNum;
    __declspec(property(get=GetPaletteWidth,put=PutPaletteWidth))
    short PaletteWidth;
    __declspec(property(get=GetHelpContextID,put=PutHelpContextID))
    short HelpContextID;
    __declspec(property(get=GetStatusBarItems))
    IVStatusBarItemsPtr StatusBarItems;
    __declspec(property(get=GetIsSeparator))
    short IsSeparator;
    __declspec(property(get=GetIsHierarchical))
    short IsHierarchical;
    __declspec(property(get=GetAddOnName,put=PutAddOnName))
    _bstr_t AddOnName;
    __declspec(property(get=GetAddOnArgs,put=PutAddOnArgs))
    _bstr_t AddOnArgs;
    __declspec(property(get=GetHelpFile,put=PutHelpFile))
    _bstr_t HelpFile;
    __declspec(property(get=GetCntrlType,put=PutCntrlType))
    short CntrlType;
    __declspec(property(get=GetCntrlID,put=PutCntrlID))
    short CntrlID;
    __declspec(property(get=GetTypeSpecific1,put=PutTypeSpecific1))
    short TypeSpecific1;
    __declspec(property(get=GetPriority,put=PutPriority))
    short Priority;
    __declspec(property(get=GetSpacing,put=PutSpacing))
    short Spacing;
    __declspec(property(get=GetTypeSpecific2,put=PutTypeSpecific2))
    short TypeSpecific2;
    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetMiniHelp,put=PutMiniHelp))
    _bstr_t MiniHelp;
    __declspec(property(get=GetBuiltIn))
    VARIANT_BOOL BuiltIn;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetFaceID,put=PutFaceID))
    short FaceID;
    __declspec(property(get=GetState,put=PutState))
    short State;
    __declspec(property(get=GetStyle,put=PutStyle))
    short Style;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Delete ( );
    HRESULT IconFileName (
        _bstr_t IconFileName );
    _bstr_t GetDefault ( );
    long GetIndex ( );
    IVStatusBarItemsPtr GetParent ( );
    void PutCmdNum (
        short pwCmd );
    short GetCmdNum ( );
    void PutHelpContextID (
        short pHelpContextID );
    short GetHelpContextID ( );
    void PutActionText (
        _bstr_t pActionText );
    _bstr_t GetActionText ( );
    void PutAddOnName (
        _bstr_t pAddOnName );
    _bstr_t GetAddOnName ( );
    void PutAddOnArgs (
        _bstr_t pAddOnArgs );
    _bstr_t GetAddOnArgs ( );
    void PutHelpFile (
        _bstr_t pHelpFile );
    _bstr_t GetHelpFile ( );
    void PutCntrlType (
        short pwCntrlType );
    short GetCntrlType ( );
    void PutCntrlID (
        short pwCntrlID );
    short GetCntrlID ( );
    void PutTypeSpecific1 (
        short pwTypeSpecific );
    short GetTypeSpecific1 ( );
    void PutPriority (
        short pwPriority );
    short GetPriority ( );
    void PutSpacing (
        short pwSpacing );
    short GetSpacing ( );
    void PutTypeSpecific2 (
        short pwTypeSpecific );
    short GetTypeSpecific2 ( );
    void PutCaption (
        _bstr_t pCaption );
    _bstr_t GetCaption ( );
    void PutMiniHelp (
        _bstr_t pMiniHelp );
    _bstr_t GetMiniHelp ( );
    VARIANT_BOOL GetBuiltIn ( );
    void PutEnabled (
        VARIANT_BOOL pbEnabled );
    VARIANT_BOOL GetEnabled ( );
    void PutFaceID (
        short pwFaceID );
    short GetFaceID ( );
    void PutState (
        short pwState );
    short GetState ( );
    void PutStyle (
        short pwStyle );
    short GetStyle ( );
    void PutVisible (
        VARIANT_BOOL pbVisible );
    VARIANT_BOOL GetVisible ( );
    void PutWidth (
        short pwWidth );
    short GetWidth ( );
    void PutPaletteWidth (
        short pwWidth );
    short GetPaletteWidth ( );
    IVStatusBarItemsPtr GetStatusBarItems ( );
    short GetIsSeparator ( );
    short GetIsHierarchical ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_IconFileName (
        /*[in]*/ BSTR IconFileName ) = 0;
      virtual HRESULT __stdcall get_Default (
        /*[out,retval]*/ BSTR * pActionText ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * plIndex ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IVStatusBarItems * * lplpVStatusBarItems ) = 0;
      virtual HRESULT __stdcall put_CmdNum (
        /*[in]*/ short pwCmd ) = 0;
      virtual HRESULT __stdcall get_CmdNum (
        /*[out,retval]*/ short * pwCmd ) = 0;
      virtual HRESULT __stdcall put_HelpContextID (
        /*[in]*/ short pHelpContextID ) = 0;
      virtual HRESULT __stdcall get_HelpContextID (
        /*[out,retval]*/ short * pHelpContextID ) = 0;
      virtual HRESULT __stdcall put_ActionText (
        /*[in]*/ BSTR pActionText ) = 0;
      virtual HRESULT __stdcall get_ActionText (
        /*[out,retval]*/ BSTR * pActionText ) = 0;
      virtual HRESULT __stdcall put_AddOnName (
        /*[in]*/ BSTR pAddOnName ) = 0;
      virtual HRESULT __stdcall get_AddOnName (
        /*[out,retval]*/ BSTR * pAddOnName ) = 0;
      virtual HRESULT __stdcall put_AddOnArgs (
        /*[in]*/ BSTR pAddOnArgs ) = 0;
      virtual HRESULT __stdcall get_AddOnArgs (
        /*[out,retval]*/ BSTR * pAddOnArgs ) = 0;
      virtual HRESULT __stdcall put_HelpFile (
        /*[in]*/ BSTR pHelpFile ) = 0;
      virtual HRESULT __stdcall get_HelpFile (
        /*[out,retval]*/ BSTR * pHelpFile ) = 0;
      virtual HRESULT __stdcall put_CntrlType (
        /*[in]*/ short pwCntrlType ) = 0;
      virtual HRESULT __stdcall get_CntrlType (
        /*[out,retval]*/ short * pwCntrlType ) = 0;
      virtual HRESULT __stdcall put_CntrlID (
        /*[in]*/ short pwCntrlID ) = 0;
      virtual HRESULT __stdcall get_CntrlID (
        /*[out,retval]*/ short * pwCntrlID ) = 0;
      virtual HRESULT __stdcall put_TypeSpecific1 (
        /*[in]*/ short pwTypeSpecific ) = 0;
      virtual HRESULT __stdcall get_TypeSpecific1 (
        /*[out,retval]*/ short * pwTypeSpecific ) = 0;
      virtual HRESULT __stdcall put_Priority (
        /*[in]*/ short pwPriority ) = 0;
      virtual HRESULT __stdcall get_Priority (
        /*[out,retval]*/ short * pwPriority ) = 0;
      virtual HRESULT __stdcall put_Spacing (
        /*[in]*/ short pwSpacing ) = 0;
      virtual HRESULT __stdcall get_Spacing (
        /*[out,retval]*/ short * pwSpacing ) = 0;
      virtual HRESULT __stdcall put_TypeSpecific2 (
        /*[in]*/ short pwTypeSpecific ) = 0;
      virtual HRESULT __stdcall get_TypeSpecific2 (
        /*[out,retval]*/ short * pwTypeSpecific ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR pCaption ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * pCaption ) = 0;
      virtual HRESULT __stdcall put_MiniHelp (
        /*[in]*/ BSTR pMiniHelp ) = 0;
      virtual HRESULT __stdcall get_MiniHelp (
        /*[out,retval]*/ BSTR * pMiniHelp ) = 0;
      virtual HRESULT __stdcall get_BuiltIn (
        /*[out,retval]*/ VARIANT_BOOL * pbBuiltIn ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL pbEnabled ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * pbEnabled ) = 0;
      virtual HRESULT __stdcall put_FaceID (
        /*[in]*/ short pwFaceID ) = 0;
      virtual HRESULT __stdcall get_FaceID (
        /*[out,retval]*/ short * pwFaceID ) = 0;
      virtual HRESULT __stdcall put_State (
        /*[in]*/ short pwState ) = 0;
      virtual HRESULT __stdcall get_State (
        /*[out,retval]*/ short * pwState ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ short pwStyle ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ short * pwStyle ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL pbVisible ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * pbVisible ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ short pwWidth ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ short * pwWidth ) = 0;
      virtual HRESULT __stdcall put_PaletteWidth (
        /*[in]*/ short pwWidth ) = 0;
      virtual HRESULT __stdcall get_PaletteWidth (
        /*[out,retval]*/ short * pwWidth ) = 0;
      virtual HRESULT __stdcall get_StatusBarItems (
        /*[out,retval]*/ struct IVStatusBarItems * * lplpVStatusBarItems ) = 0;
      virtual HRESULT __stdcall get_IsSeparator (
        /*[out,retval]*/ short * pIsSeparator ) = 0;
      virtual HRESULT __stdcall get_IsHierarchical (
        /*[out,retval]*/ short * pIsHierarchical ) = 0;
};

struct __declspec(uuid("000d0273-0000-0000-c000-000000000046"))
IEnumVStatusBarItem : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Next (
        long celt,
        struct IVStatusBarItem * * rgelt,
        long * pceltFetched );
    HRESULT Skip (
        long celt );
    HRESULT Reset ( );
    HRESULT Clone (
        struct IEnumVStatusBarItem * * ppenm );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Next (
        /*[in]*/ long celt,
        /*[out]*/ struct IVStatusBarItem * * rgelt,
        /*[out]*/ long * pceltFetched ) = 0;
      virtual HRESULT __stdcall raw_Skip (
        /*[in]*/ long celt ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_Clone (
        /*[out]*/ struct IEnumVStatusBarItem * * ppenm ) = 0;
};

struct __declspec(uuid("000d02a5-0000-0000-c000-000000000046"))
IVAccelTables : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVAccelTablePtr Item[];
    __declspec(property(get=GetItemAtID))
    IVAccelTablePtr ItemAtID[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IVUIObjectPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    IVAccelTablePtr GetItem (
        long lIndex );
    IVAccelTablePtr GetItemAtID (
        long lID );
    IVAccelTablePtr Add ( );
    IVAccelTablePtr AddAtID (
        long lID );
    long GetCount ( );
    IVUIObjectPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * lplpIEnumVAccelTable ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ struct IVAccelTable * * lplpAccelTable ) = 0;
      virtual HRESULT __stdcall get_ItemAtID (
        /*[in]*/ long lID,
        /*[out,retval]*/ struct IVAccelTable * * lplpAccelTable ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[out,retval]*/ struct IVAccelTable * * lplpAccelTable ) = 0;
      virtual HRESULT __stdcall raw_AddAtID (
        /*[in]*/ long lID,
        /*[out,retval]*/ struct IVAccelTable * * lplpAccelTable ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * lplCount ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IVUIObject * * lplpVUIObject ) = 0;
};

struct __declspec(uuid("000d02a2-0000-0000-c000-000000000046"))
IVAccelTable : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetTableName,put=PutTableName))
    _bstr_t TableName;
    __declspec(property(get=GetDefault))
    _bstr_t Default;
    __declspec(property(get=GetSetID))
    long SetID;
    __declspec(property(get=GetAccelItems))
    IVAccelItemsPtr AccelItems;
    __declspec(property(get=GetParent))
    IVAccelTablesPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Delete ( );
    _bstr_t GetDefault ( );
    void PutTableName (
        _bstr_t pTableName );
    _bstr_t GetTableName ( );
    long GetSetID ( );
    IVAccelItemsPtr GetAccelItems ( );
    IVAccelTablesPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Default (
        /*[out,retval]*/ BSTR * pTableName ) = 0;
      virtual HRESULT __stdcall put_TableName (
        /*[in]*/ BSTR pTableName ) = 0;
      virtual HRESULT __stdcall get_TableName (
        /*[out,retval]*/ BSTR * pTableName ) = 0;
      virtual HRESULT __stdcall get_SetID (
        /*[out,retval]*/ long * plSetID ) = 0;
      virtual HRESULT __stdcall get_AccelItems (
        /*[out,retval]*/ struct IVAccelItems * * lplpVAccelItems ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IVAccelTables * * lplpVAccelTables ) = 0;
};

struct __declspec(uuid("000d02a3-0000-0000-c000-000000000046"))
IEnumVAccelTable : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Next (
        long celt,
        struct IVAccelTable * * rgelt,
        long * pceltFetched );
    HRESULT Skip (
        long celt );
    HRESULT Reset ( );
    HRESULT Clone (
        struct IEnumVAccelTable * * ppenm );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Next (
        /*[in]*/ long celt,
        /*[out]*/ struct IVAccelTable * * rgelt,
        /*[out]*/ long * pceltFetched ) = 0;
      virtual HRESULT __stdcall raw_Skip (
        /*[in]*/ long celt ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_Clone (
        /*[out]*/ struct IEnumVAccelTable * * ppenm ) = 0;
};

struct __declspec(uuid("000d0295-0000-0000-c000-000000000046"))
IVAccelItems : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    IVAccelItemPtr Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IVAccelTablePtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    IVAccelItemPtr GetItem (
        long lIndex );
    IVAccelItemPtr Add ( );
    long GetCount ( );
    IVAccelTablePtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * lplpIEnumVAccelItem ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ struct IVAccelItem * * lplpAccelItem ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[out,retval]*/ struct IVAccelItem * * lplpAccelItem ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * lplCount ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IVAccelTable * * lplpVAccelTable ) = 0;
};

struct __declspec(uuid("000d0292-0000-0000-c000-000000000046"))
IVAccelItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCmdNum,put=PutCmdNum))
    short CmdNum;
    __declspec(property(get=GetDefault))
    short Default;
    __declspec(property(get=GetKey,put=PutKey))
    short Key;
    __declspec(property(get=GetAlt,put=PutAlt))
    short Alt;
    __declspec(property(get=GetShift,put=PutShift))
    short Shift;
    __declspec(property(get=GetControl,put=PutControl))
    short Control;
    __declspec(property(get=GetParent))
    IVAccelItemsPtr Parent;
    __declspec(property(get=GetAddOnName,put=PutAddOnName))
    _bstr_t AddOnName;
    __declspec(property(get=GetAddOnArgs,put=PutAddOnArgs))
    _bstr_t AddOnArgs;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Delete ( );
    short GetDefault ( );
    void PutCmdNum (
        short pwCmd );
    short GetCmdNum ( );
    void PutKey (
        short pKey );
    short GetKey ( );
    void PutAlt (
        short pAlt );
    short GetAlt ( );
    void PutShift (
        short pShift );
    short GetShift ( );
    void PutControl (
        short pControl );
    short GetControl ( );
    IVAccelItemsPtr GetParent ( );
    void PutAddOnName (
        _bstr_t pAddOnName );
    _bstr_t GetAddOnName ( );
    void PutAddOnArgs (
        _bstr_t pAddOnArgs );
    _bstr_t GetAddOnArgs ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Default (
        /*[out,retval]*/ short * pwCmd ) = 0;
      virtual HRESULT __stdcall put_CmdNum (
        /*[in]*/ short pwCmd ) = 0;
      virtual HRESULT __stdcall get_CmdNum (
        /*[out,retval]*/ short * pwCmd ) = 0;
      virtual HRESULT __stdcall put_Key (
        /*[in]*/ short pKey ) = 0;
      virtual HRESULT __stdcall get_Key (
        /*[out,retval]*/ short * pKey ) = 0;
      virtual HRESULT __stdcall put_Alt (
        /*[in]*/ short pAlt ) = 0;
      virtual HRESULT __stdcall get_Alt (
        /*[out,retval]*/ short * pAlt ) = 0;
      virtual HRESULT __stdcall put_Shift (
        /*[in]*/ short pShift ) = 0;
      virtual HRESULT __stdcall get_Shift (
        /*[out,retval]*/ short * pShift ) = 0;
      virtual HRESULT __stdcall put_Control (
        /*[in]*/ short pControl ) = 0;
      virtual HRESULT __stdcall get_Control (
        /*[out,retval]*/ short * pControl ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct IVAccelItems * * lplpVAccelItems ) = 0;
      virtual HRESULT __stdcall put_AddOnName (
        /*[in]*/ BSTR pAddOnName ) = 0;
      virtual HRESULT __stdcall get_AddOnName (
        /*[out,retval]*/ BSTR * pAddOnName ) = 0;
      virtual HRESULT __stdcall put_AddOnArgs (
        /*[in]*/ BSTR pAddOnArgs ) = 0;
      virtual HRESULT __stdcall get_AddOnArgs (
        /*[out,retval]*/ BSTR * pAddOnArgs ) = 0;
};

struct __declspec(uuid("000d0293-0000-0000-c000-000000000046"))
IEnumVAccelItem : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Next (
        long celt,
        struct IVAccelItem * * rgelt,
        long * pceltFetched );
    HRESULT Skip (
        long celt );
    HRESULT Reset ( );
    HRESULT Clone (
        struct IEnumVAccelItem * * ppenm );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Next (
        /*[in]*/ long celt,
        /*[out]*/ struct IVAccelItem * * rgelt,
        /*[out]*/ long * pceltFetched ) = 0;
      virtual HRESULT __stdcall raw_Skip (
        /*[in]*/ long celt ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_Clone (
        /*[out]*/ struct IEnumVAccelItem * * ppenm ) = 0;
};

struct __declspec(uuid("000d1306-0000-0000-c000-000000000046"))
IVBUndoManager : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Add (
        struct IVBUndoUnit * pUnit );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct IVBUndoUnit * pUnit ) = 0;
};

struct __declspec(uuid("000d1305-0000-0000-c000-000000000046"))
IVBUndoUnit : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetUnitTypeCLSID))
    _bstr_t UnitTypeCLSID;
    __declspec(property(get=GetUnitTypeLong))
    long UnitTypeLong;
    __declspec(property(get=GetUnitSize))
    long UnitSize;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Do (
        struct IVBUndoManager * pMgr );
    _bstr_t GetDescription ( );
    _bstr_t GetUnitTypeCLSID ( );
    HRESULT OnNextAdd ( );
    long GetUnitTypeLong ( );
    long GetUnitSize ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Do (
        /*[in]*/ struct IVBUndoManager * pMgr ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pbstrDesc ) = 0;
      virtual HRESULT __stdcall get_UnitTypeCLSID (
        /*[out,retval]*/ BSTR * pbstrCLSID ) = 0;
      virtual HRESULT __stdcall raw_OnNextAdd ( ) = 0;
      virtual HRESULT __stdcall get_UnitTypeLong (
        /*[out,retval]*/ long * pnType ) = 0;
      virtual HRESULT __stdcall get_UnitSize (
        /*[out,retval]*/ long * pnSize ) = 0;
};

//
// Function implementation mapping
//

#pragma start_map_region("f:\hitetouchpro_work\test_cross_1\utility\win32\release\vislib.tli")
__declspec(implementation_key(1)) HRESULT EDocument::DocumentOpened ( struct IVDocument * doc );
__declspec(implementation_key(2)) HRESULT EDocument::DocumentCreated ( struct IVDocument * doc );
__declspec(implementation_key(3)) HRESULT EDocument::DocumentSaved ( struct IVDocument * doc );
__declspec(implementation_key(4)) HRESULT EDocument::DocumentSavedAs ( struct IVDocument * doc );
__declspec(implementation_key(5)) HRESULT EDocument::DocumentChanged ( struct IVDocument * doc );
__declspec(implementation_key(6)) HRESULT EDocument::BeforeDocumentClose ( struct IVDocument * doc );
__declspec(implementation_key(7)) HRESULT EDocument::StyleAdded ( struct IVStyle * Style );
__declspec(implementation_key(8)) HRESULT EDocument::StyleChanged ( struct IVStyle * Style );
__declspec(implementation_key(9)) HRESULT EDocument::BeforeStyleDelete ( struct IVStyle * Style );
__declspec(implementation_key(10)) HRESULT EDocument::MasterAdded ( struct IVMaster * Master );
__declspec(implementation_key(11)) HRESULT EDocument::MasterChanged ( struct IVMaster * Master );
__declspec(implementation_key(12)) HRESULT EDocument::BeforeMasterDelete ( struct IVMaster * Master );
__declspec(implementation_key(13)) HRESULT EDocument::PageAdded ( struct IVPage * Page );
__declspec(implementation_key(14)) HRESULT EDocument::PageChanged ( struct IVPage * Page );
__declspec(implementation_key(15)) HRESULT EDocument::BeforePageDelete ( struct IVPage * Page );
__declspec(implementation_key(16)) HRESULT EDocument::ShapeAdded ( struct IVShape * Shape );
__declspec(implementation_key(17)) HRESULT EDocument::BeforeSelectionDelete ( struct IVSelection * Selection );
__declspec(implementation_key(18)) HRESULT EDocument::RunModeEntered ( struct IVDocument * doc );
__declspec(implementation_key(19)) HRESULT EDocument::DesignModeEntered ( struct IVDocument * doc );
__declspec(implementation_key(20)) HRESULT EDocument::BeforeDocumentSave ( struct IVDocument * doc );
__declspec(implementation_key(21)) HRESULT EDocument::BeforeDocumentSaveAs ( struct IVDocument * doc );
__declspec(implementation_key(22)) HRESULT EDocument::QueryCancelDocumentClose ( struct IVDocument * doc, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(23)) HRESULT EDocument::DocumentCloseCanceled ( struct IVDocument * doc );
__declspec(implementation_key(24)) HRESULT EDocument::QueryCancelStyleDelete ( struct IVStyle * Style, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(25)) HRESULT EDocument::StyleDeleteCanceled ( struct IVStyle * Style );
__declspec(implementation_key(26)) HRESULT EDocument::QueryCancelMasterDelete ( struct IVMaster * Master, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(27)) HRESULT EDocument::MasterDeleteCanceled ( struct IVMaster * Master );
__declspec(implementation_key(28)) HRESULT EDocument::QueryCancelPageDelete ( struct IVPage * Page, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(29)) HRESULT EDocument::PageDeleteCanceled ( struct IVPage * Page );
__declspec(implementation_key(30)) HRESULT EDocument::ShapeParentChanged ( struct IVShape * Shape );
__declspec(implementation_key(31)) HRESULT EDocument::BeforeShapeTextEdit ( struct IVShape * Shape );
__declspec(implementation_key(32)) HRESULT EDocument::ShapeExitedTextEdit ( struct IVShape * Shape );
__declspec(implementation_key(33)) HRESULT EDocument::QueryCancelSelectionDelete ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(34)) HRESULT EDocument::SelectionDeleteCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(35)) HRESULT EDocument::QueryCancelUngroup ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(36)) HRESULT EDocument::UngroupCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(37)) HRESULT EDocument::QueryCancelConvertToGroup ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(38)) HRESULT EDocument::ConvertToGroupCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(39)) HRESULT EDocument::QueryCancelGroup ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(40)) HRESULT EDocument::GroupCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(41)) HRESULT EDocument::ShapeDataGraphicChanged ( struct IVShape * Shape );
__declspec(implementation_key(42)) HRESULT EDocument::BeforeDataRecordsetDelete ( struct IVDataRecordset * DataRecordset );
__declspec(implementation_key(43)) HRESULT EDocument::DataRecordsetAdded ( struct IVDataRecordset * DataRecordset );
__declspec(implementation_key(44)) HRESULT EDocument::AfterRemoveHiddenInformation ( struct IVDocument * doc );
__declspec(implementation_key(45)) HRESULT EApplication::AppActivated ( struct IVApplication * app );
__declspec(implementation_key(46)) HRESULT EApplication::AppDeactivated ( struct IVApplication * app );
__declspec(implementation_key(47)) HRESULT EApplication::AppObjActivated ( struct IVApplication * app );
__declspec(implementation_key(48)) HRESULT EApplication::AppObjDeactivated ( struct IVApplication * app );
__declspec(implementation_key(49)) HRESULT EApplication::BeforeQuit ( struct IVApplication * app );
__declspec(implementation_key(50)) HRESULT EApplication::BeforeModal ( struct IVApplication * app );
__declspec(implementation_key(51)) HRESULT EApplication::AfterModal ( struct IVApplication * app );
__declspec(implementation_key(52)) HRESULT EApplication::WindowOpened ( struct IVWindow * Window );
__declspec(implementation_key(53)) HRESULT EApplication::SelectionChanged ( struct IVWindow * Window );
__declspec(implementation_key(54)) HRESULT EApplication::BeforeWindowClosed ( struct IVWindow * Window );
__declspec(implementation_key(55)) HRESULT EApplication::WindowActivated ( struct IVWindow * Window );
__declspec(implementation_key(56)) HRESULT EApplication::BeforeWindowSelDelete ( struct IVWindow * Window );
__declspec(implementation_key(57)) HRESULT EApplication::BeforeWindowPageTurn ( struct IVWindow * Window );
__declspec(implementation_key(58)) HRESULT EApplication::WindowTurnedToPage ( struct IVWindow * Window );
__declspec(implementation_key(59)) HRESULT EApplication::DocumentOpened ( struct IVDocument * doc );
__declspec(implementation_key(60)) HRESULT EApplication::DocumentCreated ( struct IVDocument * doc );
__declspec(implementation_key(61)) HRESULT EApplication::DocumentSaved ( struct IVDocument * doc );
__declspec(implementation_key(62)) HRESULT EApplication::DocumentSavedAs ( struct IVDocument * doc );
__declspec(implementation_key(63)) HRESULT EApplication::DocumentChanged ( struct IVDocument * doc );
__declspec(implementation_key(64)) HRESULT EApplication::BeforeDocumentClose ( struct IVDocument * doc );
__declspec(implementation_key(65)) HRESULT EApplication::StyleAdded ( struct IVStyle * Style );
__declspec(implementation_key(66)) HRESULT EApplication::StyleChanged ( struct IVStyle * Style );
__declspec(implementation_key(67)) HRESULT EApplication::BeforeStyleDelete ( struct IVStyle * Style );
__declspec(implementation_key(68)) HRESULT EApplication::MasterAdded ( struct IVMaster * Master );
__declspec(implementation_key(69)) HRESULT EApplication::MasterChanged ( struct IVMaster * Master );
__declspec(implementation_key(70)) HRESULT EApplication::BeforeMasterDelete ( struct IVMaster * Master );
__declspec(implementation_key(71)) HRESULT EApplication::PageAdded ( struct IVPage * Page );
__declspec(implementation_key(72)) HRESULT EApplication::PageChanged ( struct IVPage * Page );
__declspec(implementation_key(73)) HRESULT EApplication::BeforePageDelete ( struct IVPage * Page );
__declspec(implementation_key(74)) HRESULT EApplication::ShapeAdded ( struct IVShape * Shape );
__declspec(implementation_key(75)) HRESULT EApplication::BeforeSelectionDelete ( struct IVSelection * Selection );
__declspec(implementation_key(76)) HRESULT EApplication::ShapeChanged ( struct IVShape * Shape );
__declspec(implementation_key(77)) HRESULT EApplication::SelectionAdded ( struct IVSelection * Selection );
__declspec(implementation_key(78)) HRESULT EApplication::BeforeShapeDelete ( struct IVShape * Shape );
__declspec(implementation_key(79)) HRESULT EApplication::TextChanged ( struct IVShape * Shape );
__declspec(implementation_key(80)) HRESULT EApplication::CellChanged ( struct IVCell * Cell );
__declspec(implementation_key(81)) HRESULT EApplication::MarkerEvent ( struct IVApplication * app, long SequenceNum, _bstr_t ContextString );
__declspec(implementation_key(82)) HRESULT EApplication::NoEventsPending ( struct IVApplication * app );
__declspec(implementation_key(83)) HRESULT EApplication::VisioIsIdle ( struct IVApplication * app );
__declspec(implementation_key(84)) HRESULT EApplication::MustFlushScopeBeginning ( struct IVApplication * app );
__declspec(implementation_key(85)) HRESULT EApplication::MustFlushScopeEnded ( struct IVApplication * app );
__declspec(implementation_key(86)) HRESULT EApplication::RunModeEntered ( struct IVDocument * doc );
__declspec(implementation_key(87)) HRESULT EApplication::DesignModeEntered ( struct IVDocument * doc );
__declspec(implementation_key(88)) HRESULT EApplication::BeforeDocumentSave ( struct IVDocument * doc );
__declspec(implementation_key(89)) HRESULT EApplication::BeforeDocumentSaveAs ( struct IVDocument * doc );
__declspec(implementation_key(90)) HRESULT EApplication::FormulaChanged ( struct IVCell * Cell );
__declspec(implementation_key(91)) HRESULT EApplication::ConnectionsAdded ( struct IVConnects * Connects );
__declspec(implementation_key(92)) HRESULT EApplication::ConnectionsDeleted ( struct IVConnects * Connects );
__declspec(implementation_key(93)) HRESULT EApplication::EnterScope ( struct IVApplication * app, long nScopeID, _bstr_t bstrDescription );
__declspec(implementation_key(94)) HRESULT EApplication::ExitScope ( struct IVApplication * app, long nScopeID, _bstr_t bstrDescription, VARIANT_BOOL bErrOrCancelled );
__declspec(implementation_key(95)) HRESULT EApplication::QueryCancelQuit ( struct IVApplication * app, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(96)) HRESULT EApplication::QuitCanceled ( struct IVApplication * app );
__declspec(implementation_key(97)) HRESULT EApplication::WindowChanged ( struct IVWindow * Window );
__declspec(implementation_key(98)) HRESULT EApplication::ViewChanged ( struct IVWindow * Window );
__declspec(implementation_key(99)) HRESULT EApplication::QueryCancelWindowClose ( struct IVWindow * Window, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(100)) HRESULT EApplication::WindowCloseCanceled ( struct IVWindow * Window );
__declspec(implementation_key(101)) HRESULT EApplication::QueryCancelDocumentClose ( struct IVDocument * doc, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(102)) HRESULT EApplication::DocumentCloseCanceled ( struct IVDocument * doc );
__declspec(implementation_key(103)) HRESULT EApplication::QueryCancelStyleDelete ( struct IVStyle * Style, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(104)) HRESULT EApplication::StyleDeleteCanceled ( struct IVStyle * Style );
__declspec(implementation_key(105)) HRESULT EApplication::QueryCancelMasterDelete ( struct IVMaster * Master, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(106)) HRESULT EApplication::MasterDeleteCanceled ( struct IVMaster * Master );
__declspec(implementation_key(107)) HRESULT EApplication::QueryCancelPageDelete ( struct IVPage * Page, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(108)) HRESULT EApplication::PageDeleteCanceled ( struct IVPage * Page );
__declspec(implementation_key(109)) HRESULT EApplication::ShapeParentChanged ( struct IVShape * Shape );
__declspec(implementation_key(110)) HRESULT EApplication::BeforeShapeTextEdit ( struct IVShape * Shape );
__declspec(implementation_key(111)) HRESULT EApplication::ShapeExitedTextEdit ( struct IVShape * Shape );
__declspec(implementation_key(112)) HRESULT EApplication::QueryCancelSelectionDelete ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(113)) HRESULT EApplication::SelectionDeleteCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(114)) HRESULT EApplication::QueryCancelUngroup ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(115)) HRESULT EApplication::UngroupCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(116)) HRESULT EApplication::QueryCancelConvertToGroup ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(117)) HRESULT EApplication::ConvertToGroupCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(118)) HRESULT EApplication::QueryCancelSuspend ( struct IVApplication * app, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(119)) HRESULT EApplication::SuspendCanceled ( struct IVApplication * app );
__declspec(implementation_key(120)) HRESULT EApplication::BeforeSuspend ( struct IVApplication * app );
__declspec(implementation_key(121)) HRESULT EApplication::AfterResume ( struct IVApplication * app );
__declspec(implementation_key(122)) HRESULT EApplication::OnKeystrokeMessageForAddon ( struct IVMSGWrap * MSG, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(123)) HRESULT EApplication::MouseDown ( long Button, long KeyButtonState, double x, double y, VARIANT_BOOL * CancelDefault );
__declspec(implementation_key(124)) HRESULT EApplication::MouseMove ( long Button, long KeyButtonState, double x, double y, VARIANT_BOOL * CancelDefault );
__declspec(implementation_key(125)) HRESULT EApplication::MouseUp ( long Button, long KeyButtonState, double x, double y, VARIANT_BOOL * CancelDefault );
__declspec(implementation_key(126)) HRESULT EApplication::KeyDown ( long KeyCode, long KeyButtonState, VARIANT_BOOL * CancelDefault );
__declspec(implementation_key(127)) HRESULT EApplication::KeyPress ( long KeyAscii, VARIANT_BOOL * CancelDefault );
__declspec(implementation_key(128)) HRESULT EApplication::KeyUp ( long KeyCode, long KeyButtonState, VARIANT_BOOL * CancelDefault );
__declspec(implementation_key(129)) HRESULT EApplication::QueryCancelSuspendEvents ( struct IVApplication * app, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(130)) HRESULT EApplication::SuspendEventsCanceled ( struct IVApplication * app );
__declspec(implementation_key(131)) HRESULT EApplication::BeforeSuspendEvents ( struct IVApplication * app );
__declspec(implementation_key(132)) HRESULT EApplication::AfterResumeEvents ( struct IVApplication * app );
__declspec(implementation_key(133)) HRESULT EApplication::QueryCancelGroup ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(134)) HRESULT EApplication::GroupCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(135)) HRESULT EApplication::ShapeDataGraphicChanged ( struct IVShape * Shape );
__declspec(implementation_key(136)) HRESULT EApplication::BeforeDataRecordsetDelete ( struct IVDataRecordset * DataRecordset );
__declspec(implementation_key(137)) HRESULT EApplication::DataRecordsetChanged ( struct IVDataRecordsetChangedEvent * DataRecordsetChanged );
__declspec(implementation_key(138)) HRESULT EApplication::DataRecordsetAdded ( struct IVDataRecordset * DataRecordset );
__declspec(implementation_key(139)) HRESULT EApplication::ShapeLinkAdded ( struct IVShape * Shape, long DataRecordsetID, long DataRowID );
__declspec(implementation_key(140)) HRESULT EApplication::ShapeLinkDeleted ( struct IVShape * Shape, long DataRecordsetID, long DataRowID );
__declspec(implementation_key(141)) HRESULT EApplication::AfterRemoveHiddenInformation ( struct IVDocument * doc );
__declspec(implementation_key(142)) HRESULT EWindows::WindowOpened ( struct IVWindow * Window );
__declspec(implementation_key(143)) HRESULT EWindows::SelectionChanged ( struct IVWindow * Window );
__declspec(implementation_key(144)) HRESULT EWindows::BeforeWindowClosed ( struct IVWindow * Window );
__declspec(implementation_key(145)) HRESULT EWindows::WindowActivated ( struct IVWindow * Window );
__declspec(implementation_key(146)) HRESULT EWindows::BeforeWindowSelDelete ( struct IVWindow * Window );
__declspec(implementation_key(147)) HRESULT EWindows::BeforeWindowPageTurn ( struct IVWindow * Window );
__declspec(implementation_key(148)) HRESULT EWindows::WindowTurnedToPage ( struct IVWindow * Window );
__declspec(implementation_key(149)) HRESULT EWindows::WindowChanged ( struct IVWindow * Window );
__declspec(implementation_key(150)) HRESULT EWindows::ViewChanged ( struct IVWindow * Window );
__declspec(implementation_key(151)) HRESULT EWindows::QueryCancelWindowClose ( struct IVWindow * Window, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(152)) HRESULT EWindows::WindowCloseCanceled ( struct IVWindow * Window );
__declspec(implementation_key(153)) HRESULT EWindows::OnKeystrokeMessageForAddon ( struct IVMSGWrap * MSG, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(154)) HRESULT EWindows::MouseDown ( long Button, long KeyButtonState, double x, double y, VARIANT_BOOL * CancelDefault );
__declspec(implementation_key(155)) HRESULT EWindows::MouseMove ( long Button, long KeyButtonState, double x, double y, VARIANT_BOOL * CancelDefault );
__declspec(implementation_key(156)) HRESULT EWindows::MouseUp ( long Button, long KeyButtonState, double x, double y, VARIANT_BOOL * CancelDefault );
__declspec(implementation_key(157)) HRESULT EWindows::KeyDown ( long KeyCode, long KeyButtonState, VARIANT_BOOL * CancelDefault );
__declspec(implementation_key(158)) HRESULT EWindows::KeyPress ( long KeyAscii, VARIANT_BOOL * CancelDefault );
__declspec(implementation_key(159)) HRESULT EWindows::KeyUp ( long KeyCode, long KeyButtonState, VARIANT_BOOL * CancelDefault );
__declspec(implementation_key(160)) HRESULT EWindow::SelectionChanged ( struct IVWindow * Window );
__declspec(implementation_key(161)) HRESULT EWindow::BeforeWindowClosed ( struct IVWindow * Window );
__declspec(implementation_key(162)) HRESULT EWindow::WindowActivated ( struct IVWindow * Window );
__declspec(implementation_key(163)) HRESULT EWindow::BeforeWindowSelDelete ( struct IVWindow * Window );
__declspec(implementation_key(164)) HRESULT EWindow::BeforeWindowPageTurn ( struct IVWindow * Window );
__declspec(implementation_key(165)) HRESULT EWindow::WindowTurnedToPage ( struct IVWindow * Window );
__declspec(implementation_key(166)) HRESULT EWindow::WindowChanged ( struct IVWindow * Window );
__declspec(implementation_key(167)) HRESULT EWindow::ViewChanged ( struct IVWindow * Window );
__declspec(implementation_key(168)) HRESULT EWindow::QueryCancelWindowClose ( struct IVWindow * Window, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(169)) HRESULT EWindow::WindowCloseCanceled ( struct IVWindow * Window );
__declspec(implementation_key(170)) HRESULT EWindow::OnKeystrokeMessageForAddon ( struct IVMSGWrap * MSG, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(171)) HRESULT EWindow::MouseDown ( long Button, long KeyButtonState, double x, double y, VARIANT_BOOL * CancelDefault );
__declspec(implementation_key(172)) HRESULT EWindow::MouseMove ( long Button, long KeyButtonState, double x, double y, VARIANT_BOOL * CancelDefault );
__declspec(implementation_key(173)) HRESULT EWindow::MouseUp ( long Button, long KeyButtonState, double x, double y, VARIANT_BOOL * CancelDefault );
__declspec(implementation_key(174)) HRESULT EWindow::KeyDown ( long KeyCode, long KeyButtonState, VARIANT_BOOL * CancelDefault );
__declspec(implementation_key(175)) HRESULT EWindow::KeyPress ( long KeyAscii, VARIANT_BOOL * CancelDefault );
__declspec(implementation_key(176)) HRESULT EWindow::KeyUp ( long KeyCode, long KeyButtonState, VARIANT_BOOL * CancelDefault );
__declspec(implementation_key(177)) HRESULT EDocuments::DocumentOpened ( struct IVDocument * doc );
__declspec(implementation_key(178)) HRESULT EDocuments::DocumentCreated ( struct IVDocument * doc );
__declspec(implementation_key(179)) HRESULT EDocuments::DocumentSaved ( struct IVDocument * doc );
__declspec(implementation_key(180)) HRESULT EDocuments::DocumentSavedAs ( struct IVDocument * doc );
__declspec(implementation_key(181)) HRESULT EDocuments::DocumentChanged ( struct IVDocument * doc );
__declspec(implementation_key(182)) HRESULT EDocuments::BeforeDocumentClose ( struct IVDocument * doc );
__declspec(implementation_key(183)) HRESULT EDocuments::StyleAdded ( struct IVStyle * Style );
__declspec(implementation_key(184)) HRESULT EDocuments::StyleChanged ( struct IVStyle * Style );
__declspec(implementation_key(185)) HRESULT EDocuments::BeforeStyleDelete ( struct IVStyle * Style );
__declspec(implementation_key(186)) HRESULT EDocuments::MasterAdded ( struct IVMaster * Master );
__declspec(implementation_key(187)) HRESULT EDocuments::MasterChanged ( struct IVMaster * Master );
__declspec(implementation_key(188)) HRESULT EDocuments::BeforeMasterDelete ( struct IVMaster * Master );
__declspec(implementation_key(189)) HRESULT EDocuments::PageAdded ( struct IVPage * Page );
__declspec(implementation_key(190)) HRESULT EDocuments::PageChanged ( struct IVPage * Page );
__declspec(implementation_key(191)) HRESULT EDocuments::BeforePageDelete ( struct IVPage * Page );
__declspec(implementation_key(192)) HRESULT EDocuments::ShapeAdded ( struct IVShape * Shape );
__declspec(implementation_key(193)) HRESULT EDocuments::BeforeSelectionDelete ( struct IVSelection * Selection );
__declspec(implementation_key(194)) HRESULT EDocuments::ShapeChanged ( struct IVShape * Shape );
__declspec(implementation_key(195)) HRESULT EDocuments::SelectionAdded ( struct IVSelection * Selection );
__declspec(implementation_key(196)) HRESULT EDocuments::BeforeShapeDelete ( struct IVShape * Shape );
__declspec(implementation_key(197)) HRESULT EDocuments::TextChanged ( struct IVShape * Shape );
__declspec(implementation_key(198)) HRESULT EDocuments::CellChanged ( struct IVCell * Cell );
__declspec(implementation_key(199)) HRESULT EDocuments::RunModeEntered ( struct IVDocument * doc );
__declspec(implementation_key(200)) HRESULT EDocuments::DesignModeEntered ( struct IVDocument * doc );
__declspec(implementation_key(201)) HRESULT EDocuments::BeforeDocumentSave ( struct IVDocument * doc );
__declspec(implementation_key(202)) HRESULT EDocuments::BeforeDocumentSaveAs ( struct IVDocument * doc );
__declspec(implementation_key(203)) HRESULT EDocuments::FormulaChanged ( struct IVCell * Cell );
__declspec(implementation_key(204)) HRESULT EDocuments::ConnectionsAdded ( struct IVConnects * Connects );
__declspec(implementation_key(205)) HRESULT EDocuments::ConnectionsDeleted ( struct IVConnects * Connects );
__declspec(implementation_key(206)) HRESULT EDocuments::QueryCancelDocumentClose ( struct IVDocument * doc, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(207)) HRESULT EDocuments::DocumentCloseCanceled ( struct IVDocument * doc );
__declspec(implementation_key(208)) HRESULT EDocuments::QueryCancelStyleDelete ( struct IVStyle * Style, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(209)) HRESULT EDocuments::StyleDeleteCanceled ( struct IVStyle * Style );
__declspec(implementation_key(210)) HRESULT EDocuments::QueryCancelMasterDelete ( struct IVMaster * Master, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(211)) HRESULT EDocuments::MasterDeleteCanceled ( struct IVMaster * Master );
__declspec(implementation_key(212)) HRESULT EDocuments::QueryCancelPageDelete ( struct IVPage * Page, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(213)) HRESULT EDocuments::PageDeleteCanceled ( struct IVPage * Page );
__declspec(implementation_key(214)) HRESULT EDocuments::ShapeParentChanged ( struct IVShape * Shape );
__declspec(implementation_key(215)) HRESULT EDocuments::BeforeShapeTextEdit ( struct IVShape * Shape );
__declspec(implementation_key(216)) HRESULT EDocuments::ShapeExitedTextEdit ( struct IVShape * Shape );
__declspec(implementation_key(217)) HRESULT EDocuments::QueryCancelSelectionDelete ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(218)) HRESULT EDocuments::SelectionDeleteCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(219)) HRESULT EDocuments::QueryCancelUngroup ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(220)) HRESULT EDocuments::UngroupCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(221)) HRESULT EDocuments::QueryCancelConvertToGroup ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(222)) HRESULT EDocuments::ConvertToGroupCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(223)) HRESULT EDocuments::QueryCancelGroup ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(224)) HRESULT EDocuments::GroupCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(225)) HRESULT EDocuments::ShapeDataGraphicChanged ( struct IVShape * Shape );
__declspec(implementation_key(226)) HRESULT EDocuments::BeforeDataRecordsetDelete ( struct IVDataRecordset * DataRecordset );
__declspec(implementation_key(227)) HRESULT EDocuments::DataRecordsetChanged ( struct IVDataRecordsetChangedEvent * DataRecordsetChanged );
__declspec(implementation_key(228)) HRESULT EDocuments::DataRecordsetAdded ( struct IVDataRecordset * DataRecordset );
__declspec(implementation_key(229)) HRESULT EDocuments::ShapeLinkAdded ( struct IVShape * Shape, long DataRecordsetID, long DataRowID );
__declspec(implementation_key(230)) HRESULT EDocuments::ShapeLinkDeleted ( struct IVShape * Shape, long DataRecordsetID, long DataRowID );
__declspec(implementation_key(231)) HRESULT EDocuments::AfterRemoveHiddenInformation ( struct IVDocument * doc );
__declspec(implementation_key(232)) HRESULT EStyles::StyleAdded ( struct IVStyle * Style );
__declspec(implementation_key(233)) HRESULT EStyles::StyleChanged ( struct IVStyle * Style );
__declspec(implementation_key(234)) HRESULT EStyles::BeforeStyleDelete ( struct IVStyle * Style );
__declspec(implementation_key(235)) HRESULT EStyles::QueryCancelStyleDelete ( struct IVStyle * Style, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(236)) HRESULT EStyles::StyleDeleteCanceled ( struct IVStyle * Style );
__declspec(implementation_key(237)) HRESULT EStyle::StyleChanged ( struct IVStyle * Style );
__declspec(implementation_key(238)) HRESULT EStyle::BeforeStyleDelete ( struct IVStyle * Style );
__declspec(implementation_key(239)) HRESULT EStyle::QueryCancelStyleDelete ( struct IVStyle * Style, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(240)) HRESULT EStyle::StyleDeleteCanceled ( struct IVStyle * Style );
__declspec(implementation_key(241)) HRESULT EMasters::MasterAdded ( struct IVMaster * Master );
__declspec(implementation_key(242)) HRESULT EMasters::MasterChanged ( struct IVMaster * Master );
__declspec(implementation_key(243)) HRESULT EMasters::BeforeMasterDelete ( struct IVMaster * Master );
__declspec(implementation_key(244)) HRESULT EMasters::ShapeAdded ( struct IVShape * Shape );
__declspec(implementation_key(245)) HRESULT EMasters::BeforeSelectionDelete ( struct IVSelection * Selection );
__declspec(implementation_key(246)) HRESULT EMasters::ShapeChanged ( struct IVShape * Shape );
__declspec(implementation_key(247)) HRESULT EMasters::SelectionAdded ( struct IVSelection * Selection );
__declspec(implementation_key(248)) HRESULT EMasters::BeforeShapeDelete ( struct IVShape * Shape );
__declspec(implementation_key(249)) HRESULT EMasters::TextChanged ( struct IVShape * Shape );
__declspec(implementation_key(250)) HRESULT EMasters::CellChanged ( struct IVCell * Cell );
__declspec(implementation_key(251)) HRESULT EMasters::FormulaChanged ( struct IVCell * Cell );
__declspec(implementation_key(252)) HRESULT EMasters::ConnectionsAdded ( struct IVConnects * Connects );
__declspec(implementation_key(253)) HRESULT EMasters::ConnectionsDeleted ( struct IVConnects * Connects );
__declspec(implementation_key(254)) HRESULT EMasters::QueryCancelMasterDelete ( struct IVMaster * Master, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(255)) HRESULT EMasters::MasterDeleteCanceled ( struct IVMaster * Master );
__declspec(implementation_key(256)) HRESULT EMasters::ShapeParentChanged ( struct IVShape * Shape );
__declspec(implementation_key(257)) HRESULT EMasters::BeforeShapeTextEdit ( struct IVShape * Shape );
__declspec(implementation_key(258)) HRESULT EMasters::ShapeExitedTextEdit ( struct IVShape * Shape );
__declspec(implementation_key(259)) HRESULT EMasters::QueryCancelSelectionDelete ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(260)) HRESULT EMasters::SelectionDeleteCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(261)) HRESULT EMasters::QueryCancelUngroup ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(262)) HRESULT EMasters::UngroupCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(263)) HRESULT EMasters::QueryCancelConvertToGroup ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(264)) HRESULT EMasters::ConvertToGroupCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(265)) HRESULT EMasters::QueryCancelGroup ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(266)) HRESULT EMasters::GroupCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(267)) HRESULT EMasters::ShapeDataGraphicChanged ( struct IVShape * Shape );
__declspec(implementation_key(268)) HRESULT EMaster::MasterChanged ( struct IVMaster * Master );
__declspec(implementation_key(269)) HRESULT EMaster::BeforeMasterDelete ( struct IVMaster * Master );
__declspec(implementation_key(270)) HRESULT EMaster::ShapeAdded ( struct IVShape * Shape );
__declspec(implementation_key(271)) HRESULT EMaster::BeforeSelectionDelete ( struct IVSelection * Selection );
__declspec(implementation_key(272)) HRESULT EMaster::ShapeChanged ( struct IVShape * Shape );
__declspec(implementation_key(273)) HRESULT EMaster::SelectionAdded ( struct IVSelection * Selection );
__declspec(implementation_key(274)) HRESULT EMaster::BeforeShapeDelete ( struct IVShape * Shape );
__declspec(implementation_key(275)) HRESULT EMaster::TextChanged ( struct IVShape * Shape );
__declspec(implementation_key(276)) HRESULT EMaster::CellChanged ( struct IVCell * Cell );
__declspec(implementation_key(277)) HRESULT EMaster::FormulaChanged ( struct IVCell * Cell );
__declspec(implementation_key(278)) HRESULT EMaster::ConnectionsAdded ( struct IVConnects * Connects );
__declspec(implementation_key(279)) HRESULT EMaster::ConnectionsDeleted ( struct IVConnects * Connects );
__declspec(implementation_key(280)) HRESULT EMaster::QueryCancelMasterDelete ( struct IVMaster * Master, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(281)) HRESULT EMaster::MasterDeleteCanceled ( struct IVMaster * Master );
__declspec(implementation_key(282)) HRESULT EMaster::ShapeParentChanged ( struct IVShape * Shape );
__declspec(implementation_key(283)) HRESULT EMaster::BeforeShapeTextEdit ( struct IVShape * Shape );
__declspec(implementation_key(284)) HRESULT EMaster::ShapeExitedTextEdit ( struct IVShape * Shape );
__declspec(implementation_key(285)) HRESULT EMaster::QueryCancelSelectionDelete ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(286)) HRESULT EMaster::SelectionDeleteCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(287)) HRESULT EMaster::QueryCancelUngroup ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(288)) HRESULT EMaster::UngroupCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(289)) HRESULT EMaster::QueryCancelConvertToGroup ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(290)) HRESULT EMaster::ConvertToGroupCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(291)) HRESULT EMaster::QueryCancelGroup ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(292)) HRESULT EMaster::GroupCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(293)) HRESULT EMaster::ShapeDataGraphicChanged ( struct IVShape * Shape );
__declspec(implementation_key(294)) HRESULT EPages::PageAdded ( struct IVPage * Page );
__declspec(implementation_key(295)) HRESULT EPages::PageChanged ( struct IVPage * Page );
__declspec(implementation_key(296)) HRESULT EPages::BeforePageDelete ( struct IVPage * Page );
__declspec(implementation_key(297)) HRESULT EPages::ShapeAdded ( struct IVShape * Shape );
__declspec(implementation_key(298)) HRESULT EPages::BeforeSelectionDelete ( struct IVSelection * Selection );
__declspec(implementation_key(299)) HRESULT EPages::ShapeChanged ( struct IVShape * Shape );
__declspec(implementation_key(300)) HRESULT EPages::SelectionAdded ( struct IVSelection * Selection );
__declspec(implementation_key(301)) HRESULT EPages::BeforeShapeDelete ( struct IVShape * Shape );
__declspec(implementation_key(302)) HRESULT EPages::TextChanged ( struct IVShape * Shape );
__declspec(implementation_key(303)) HRESULT EPages::CellChanged ( struct IVCell * Cell );
__declspec(implementation_key(304)) HRESULT EPages::FormulaChanged ( struct IVCell * Cell );
__declspec(implementation_key(305)) HRESULT EPages::ConnectionsAdded ( struct IVConnects * Connects );
__declspec(implementation_key(306)) HRESULT EPages::ConnectionsDeleted ( struct IVConnects * Connects );
__declspec(implementation_key(307)) HRESULT EPages::QueryCancelPageDelete ( struct IVPage * Page, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(308)) HRESULT EPages::PageDeleteCanceled ( struct IVPage * Page );
__declspec(implementation_key(309)) HRESULT EPages::ShapeParentChanged ( struct IVShape * Shape );
__declspec(implementation_key(310)) HRESULT EPages::BeforeShapeTextEdit ( struct IVShape * Shape );
__declspec(implementation_key(311)) HRESULT EPages::ShapeExitedTextEdit ( struct IVShape * Shape );
__declspec(implementation_key(312)) HRESULT EPages::QueryCancelSelectionDelete ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(313)) HRESULT EPages::SelectionDeleteCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(314)) HRESULT EPages::QueryCancelUngroup ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(315)) HRESULT EPages::UngroupCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(316)) HRESULT EPages::QueryCancelConvertToGroup ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(317)) HRESULT EPages::ConvertToGroupCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(318)) HRESULT EPages::QueryCancelGroup ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(319)) HRESULT EPages::GroupCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(320)) HRESULT EPages::ShapeDataGraphicChanged ( struct IVShape * Shape );
__declspec(implementation_key(321)) HRESULT EPages::ShapeLinkAdded ( struct IVShape * Shape, long DataRecordsetID, long DataRowID );
__declspec(implementation_key(322)) HRESULT EPages::ShapeLinkDeleted ( struct IVShape * Shape, long DataRecordsetID, long DataRowID );
__declspec(implementation_key(323)) HRESULT EPage::PageChanged ( struct IVPage * Page );
__declspec(implementation_key(324)) HRESULT EPage::BeforePageDelete ( struct IVPage * Page );
__declspec(implementation_key(325)) HRESULT EPage::ShapeAdded ( struct IVShape * Shape );
__declspec(implementation_key(326)) HRESULT EPage::BeforeSelectionDelete ( struct IVSelection * Selection );
__declspec(implementation_key(327)) HRESULT EPage::ShapeChanged ( struct IVShape * Shape );
__declspec(implementation_key(328)) HRESULT EPage::SelectionAdded ( struct IVSelection * Selection );
__declspec(implementation_key(329)) HRESULT EPage::BeforeShapeDelete ( struct IVShape * Shape );
__declspec(implementation_key(330)) HRESULT EPage::TextChanged ( struct IVShape * Shape );
__declspec(implementation_key(331)) HRESULT EPage::CellChanged ( struct IVCell * Cell );
__declspec(implementation_key(332)) HRESULT EPage::FormulaChanged ( struct IVCell * Cell );
__declspec(implementation_key(333)) HRESULT EPage::ConnectionsAdded ( struct IVConnects * Connects );
__declspec(implementation_key(334)) HRESULT EPage::ConnectionsDeleted ( struct IVConnects * Connects );
__declspec(implementation_key(335)) HRESULT EPage::QueryCancelPageDelete ( struct IVPage * Page, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(336)) HRESULT EPage::PageDeleteCanceled ( struct IVPage * Page );
__declspec(implementation_key(337)) HRESULT EPage::ShapeParentChanged ( struct IVShape * Shape );
__declspec(implementation_key(338)) HRESULT EPage::BeforeShapeTextEdit ( struct IVShape * Shape );
__declspec(implementation_key(339)) HRESULT EPage::ShapeExitedTextEdit ( struct IVShape * Shape );
__declspec(implementation_key(340)) HRESULT EPage::QueryCancelSelectionDelete ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(341)) HRESULT EPage::SelectionDeleteCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(342)) HRESULT EPage::QueryCancelUngroup ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(343)) HRESULT EPage::UngroupCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(344)) HRESULT EPage::QueryCancelConvertToGroup ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(345)) HRESULT EPage::ConvertToGroupCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(346)) HRESULT EPage::QueryCancelGroup ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(347)) HRESULT EPage::GroupCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(348)) HRESULT EPage::ShapeDataGraphicChanged ( struct IVShape * Shape );
__declspec(implementation_key(349)) HRESULT EPage::ShapeLinkAdded ( struct IVShape * Shape, long DataRecordsetID, long DataRowID );
__declspec(implementation_key(350)) HRESULT EPage::ShapeLinkDeleted ( struct IVShape * Shape, long DataRecordsetID, long DataRowID );
__declspec(implementation_key(351)) HRESULT EShape::CellChanged ( struct IVCell * Cell );
__declspec(implementation_key(352)) HRESULT EShape::ShapeAdded ( struct IVShape * Shape );
__declspec(implementation_key(353)) HRESULT EShape::BeforeSelectionDelete ( struct IVSelection * Selection );
__declspec(implementation_key(354)) HRESULT EShape::ShapeChanged ( struct IVShape * Shape );
__declspec(implementation_key(355)) HRESULT EShape::SelectionAdded ( struct IVSelection * Selection );
__declspec(implementation_key(356)) HRESULT EShape::BeforeShapeDelete ( struct IVShape * Shape );
__declspec(implementation_key(357)) HRESULT EShape::TextChanged ( struct IVShape * Shape );
__declspec(implementation_key(358)) HRESULT EShape::FormulaChanged ( struct IVCell * Cell );
__declspec(implementation_key(359)) HRESULT EShape::ShapeParentChanged ( struct IVShape * Shape );
__declspec(implementation_key(360)) HRESULT EShape::BeforeShapeTextEdit ( struct IVShape * Shape );
__declspec(implementation_key(361)) HRESULT EShape::ShapeExitedTextEdit ( struct IVShape * Shape );
__declspec(implementation_key(362)) HRESULT EShape::QueryCancelSelectionDelete ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(363)) HRESULT EShape::SelectionDeleteCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(364)) HRESULT EShape::QueryCancelUngroup ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(365)) HRESULT EShape::UngroupCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(366)) HRESULT EShape::QueryCancelConvertToGroup ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(367)) HRESULT EShape::ConvertToGroupCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(368)) HRESULT EShape::QueryCancelGroup ( struct IVSelection * Selection, VARIANT_BOOL * lpboolRet );
__declspec(implementation_key(369)) HRESULT EShape::GroupCanceled ( struct IVSelection * Selection );
__declspec(implementation_key(370)) HRESULT EShape::ShapeDataGraphicChanged ( struct IVShape * Shape );
__declspec(implementation_key(371)) HRESULT EShape::ShapeLinkAdded ( struct IVShape * Shape, long DataRecordsetID, long DataRowID );
__declspec(implementation_key(372)) HRESULT EShape::ShapeLinkDeleted ( struct IVShape * Shape, long DataRecordsetID, long DataRowID );
__declspec(implementation_key(373)) HRESULT ECharacters::TextChanged ( struct IVShape * Shape );
__declspec(implementation_key(374)) HRESULT ECell::CellChanged ( struct IVCell * Cell );
__declspec(implementation_key(375)) HRESULT ECell::FormulaChanged ( struct IVCell * Cell );
__declspec(implementation_key(376)) _bstr_t IVDispExtender::GetName ( );
__declspec(implementation_key(377)) void IVDispExtender::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(378)) IUnknownPtr IVDispExtender::GetObject ( );
__declspec(implementation_key(379)) IUnknownPtr IVDispExtender::GetParent ( );
__declspec(implementation_key(380)) HRESULT IVDispExtender::Delete ( );
__declspec(implementation_key(381)) HRESULT IVDispExtender::Index ( );
__declspec(implementation_key(382)) IVShapePtr IVDispExtender::GetShape ( );
__declspec(implementation_key(383)) HRESULT IVDispExtender::VoidGroup ( );
__declspec(implementation_key(384)) HRESULT IVDispExtender::BringForward ( );
__declspec(implementation_key(385)) HRESULT IVDispExtender::BringToFront ( );
__declspec(implementation_key(386)) HRESULT IVDispExtender::ConvertToGroup ( );
__declspec(implementation_key(387)) HRESULT IVDispExtender::SendBackward ( );
__declspec(implementation_key(388)) HRESULT IVDispExtender::SendToBack ( );
__declspec(implementation_key(389)) IVDocumentPtr IVDispExtender::GetDocument ( );
__declspec(implementation_key(390)) IDispatchPtr IVDispExtender::GetShapeParent ( );
__declspec(implementation_key(391)) IVApplicationPtr IVDispExtender::GetApplication ( );
__declspec(implementation_key(392)) IVMasterPtr IVDispExtender::GetMaster ( );
__declspec(implementation_key(393)) IVCellPtr IVDispExtender::GetCells ( _bstr_t localeSpecificCellName );
__declspec(implementation_key(394)) IVCellPtr IVDispExtender::GetCellsSRC ( short Section, short Row, short Column );
__declspec(implementation_key(395)) _bstr_t IVDispExtender::GetData1 ( );
__declspec(implementation_key(396)) void IVDispExtender::PutData1 ( _bstr_t _arg1 );
__declspec(implementation_key(397)) _bstr_t IVDispExtender::GetData2 ( );
__declspec(implementation_key(398)) void IVDispExtender::PutData2 ( _bstr_t _arg1 );
__declspec(implementation_key(399)) _bstr_t IVDispExtender::GetData3 ( );
__declspec(implementation_key(400)) void IVDispExtender::PutData3 ( _bstr_t _arg1 );
__declspec(implementation_key(401)) _bstr_t IVDispExtender::GetHelp ( );
__declspec(implementation_key(402)) void IVDispExtender::PutHelp ( _bstr_t _arg1 );
__declspec(implementation_key(403)) _bstr_t IVDispExtender::GetNameID ( );
__declspec(implementation_key(404)) HRESULT IVDispExtender::ShapeCopy ( );
__declspec(implementation_key(405)) HRESULT IVDispExtender::ShapeCut ( );
__declspec(implementation_key(406)) HRESULT IVDispExtender::ShapeDelete ( );
__declspec(implementation_key(407)) HRESULT IVDispExtender::VoidShapeDuplicate ( );
__declspec(implementation_key(408)) short IVDispExtender::GetRowCount ( short Section );
__declspec(implementation_key(409)) short IVDispExtender::AddSection ( short Section );
__declspec(implementation_key(410)) HRESULT IVDispExtender::DeleteSection ( short Section );
__declspec(implementation_key(411)) short IVDispExtender::AddRow ( short Section, short Row, short RowTag );
__declspec(implementation_key(412)) HRESULT IVDispExtender::DeleteRow ( short Section, short Row );
__declspec(implementation_key(413)) short IVDispExtender::GetRowsCellCount ( short Section, short Row );
__declspec(implementation_key(414)) short IVDispExtender::GetRowType ( short Section, short Row );
__declspec(implementation_key(415)) void IVDispExtender::PutRowType ( short Section, short Row, short _arg3 );
__declspec(implementation_key(416)) HRESULT IVDispExtender::SetCenter ( double xPos, double yPos );
__declspec(implementation_key(417)) IVConnectsPtr IVDispExtender::GetConnects ( );
__declspec(implementation_key(418)) short IVDispExtender::GetShapeIndex16 ( );
__declspec(implementation_key(419)) _bstr_t IVDispExtender::GetStyle ( );
__declspec(implementation_key(420)) void IVDispExtender::PutStyle ( _bstr_t _arg1 );
__declspec(implementation_key(421)) void IVDispExtender::PutStyleKeepFmt ( _bstr_t _arg1 );
__declspec(implementation_key(422)) _bstr_t IVDispExtender::GetLineStyle ( );
__declspec(implementation_key(423)) void IVDispExtender::PutLineStyle ( _bstr_t _arg1 );
__declspec(implementation_key(424)) void IVDispExtender::PutLineStyleKeepFmt ( _bstr_t _arg1 );
__declspec(implementation_key(425)) _bstr_t IVDispExtender::GetFillStyle ( );
__declspec(implementation_key(426)) void IVDispExtender::PutFillStyle ( _bstr_t _arg1 );
__declspec(implementation_key(427)) void IVDispExtender::PutFillStyleKeepFmt ( _bstr_t _arg1 );
__declspec(implementation_key(428)) HRESULT IVDispExtender::Export ( _bstr_t FileName );
__declspec(implementation_key(429)) _bstr_t IVDispExtender::GetUniqueID ( short fUniqueID );
__declspec(implementation_key(430)) IVPagePtr IVDispExtender::GetContainingPage ( );
__declspec(implementation_key(431)) IVMasterPtr IVDispExtender::GetContainingMaster ( );
__declspec(implementation_key(432)) IVShapePtr IVDispExtender::GetContainingShape ( );
__declspec(implementation_key(433)) short IVDispExtender::GetSectionExists ( short Section, short fExistsLocally );
__declspec(implementation_key(434)) short IVDispExtender::GetRowExists ( short Section, short Row, short fExistsLocally );
__declspec(implementation_key(435)) short IVDispExtender::GetCellExists ( _bstr_t localeSpecificCellName, short fExistsLocally );
__declspec(implementation_key(436)) short IVDispExtender::GetCellsSRCExists ( short Section, short Row, short Column, short fExistsLocally );
__declspec(implementation_key(437)) short IVDispExtender::GetLayerCount ( );
__declspec(implementation_key(438)) IVLayerPtr IVDispExtender::GetLayer ( short Index );
__declspec(implementation_key(439)) short IVDispExtender::AddNamedRow ( short Section, _bstr_t RowName, short RowTag );
__declspec(implementation_key(440)) short IVDispExtender::AddRows ( short Section, short Row, short RowTag, short RowCount );
__declspec(implementation_key(441)) IVEventListPtr IVDispExtender::GetEventList ( );
__declspec(implementation_key(442)) short IVDispExtender::GetPersistsEvents ( );
__declspec(implementation_key(443)) _bstr_t IVDispExtender::GetClassID ( );
__declspec(implementation_key(444)) IDispatchPtr IVDispExtender::GetShapeObject ( );
__declspec(implementation_key(445)) IVWindowPtr IVDispExtender::OpenSheetWindow ( );
__declspec(implementation_key(446)) short IVDispExtender::GetShapeID16 ( );
__declspec(implementation_key(447)) HRESULT IVDispExtender::GetFormulas ( SAFEARRAY * * SRCStream, SAFEARRAY * * formulaArray );
__declspec(implementation_key(448)) HRESULT IVDispExtender::GetResults ( SAFEARRAY * * SRCStream, short Flags, SAFEARRAY * * UnitsNamesOrCodes, SAFEARRAY * * resultArray );
__declspec(implementation_key(449)) short IVDispExtender::SetFormulas ( SAFEARRAY * * SRCStream, SAFEARRAY * * formulaArray, short Flags );
__declspec(implementation_key(450)) short IVDispExtender::SetResults ( SAFEARRAY * * SRCStream, SAFEARRAY * * UnitsNamesOrCodes, SAFEARRAY * * resultArray, short Flags );
__declspec(implementation_key(451)) IVConnectsPtr IVDispExtender::GetFromConnects ( );
__declspec(implementation_key(452)) HRESULT IVDispExtender::BoundingBox ( short Flags, double * lpr8Left, double * lpr8Bottom, double * lpr8Right, double * lpr8Top );
__declspec(implementation_key(453)) short IVDispExtender::HitTest ( double xPos, double yPos, double Tolerance );
__declspec(implementation_key(454)) IVHyperlinkPtr IVDispExtender::GetHyperlink ( );
__declspec(implementation_key(455)) _bstr_t IVDispExtender::GetProgID ( );
__declspec(implementation_key(456)) short IVDispExtender::GetObjectIsInherited ( );
__declspec(implementation_key(457)) long IVDispExtender::GetShapeID ( );
__declspec(implementation_key(458)) long IVDispExtender::GetShapeIndex ( );
__declspec(implementation_key(459)) IVShapePtr IVDispExtender::Group ( );
__declspec(implementation_key(460)) IVShapePtr IVDispExtender::ShapeDuplicate ( );
__declspec(implementation_key(461)) _variant_t IVisEventProc::VisEventProc ( short nEventCode, IDispatch * pSourceObj, long nEventID, long nEventSeqNum, IDispatch * pSubjectObj, const _variant_t & vMoreInfo );
__declspec(implementation_key(462)) HRESULT ESection::CellChanged ( struct IVCell * Cell );
__declspec(implementation_key(463)) HRESULT ESection::FormulaChanged ( struct IVCell * Cell );
__declspec(implementation_key(464)) HRESULT ERow::CellChanged ( struct IVCell * Cell );
__declspec(implementation_key(465)) HRESULT ERow::FormulaChanged ( struct IVCell * Cell );
__declspec(implementation_key(466)) HRESULT EDataRecordset::DataRecordsetChanged ( struct IVDataRecordsetChangedEvent * DataRecordsetChanged );
__declspec(implementation_key(467)) HRESULT EDataRecordset::BeforeDataRecordsetDelete ( struct IVDataRecordset * DataRecordset );
__declspec(implementation_key(468)) HRESULT EDataRecordsets::DataRecordsetAdded ( struct IVDataRecordset * DataRecordset );
__declspec(implementation_key(469)) HRESULT EDataRecordsets::BeforeDataRecordsetDelete ( struct IVDataRecordset * DataRecordset );
__declspec(implementation_key(470)) HRESULT EDataRecordsets::DataRecordsetChanged ( struct IVDataRecordsetChangedEvent * DataRecordsetChanged );
__declspec(implementation_key(471)) IVDocumentPtr IVApplication::GetActiveDocument ( );
__declspec(implementation_key(472)) IVPagePtr IVApplication::GetActivePage ( );
__declspec(implementation_key(473)) IVWindowPtr IVApplication::GetActiveWindow ( );
__declspec(implementation_key(474)) IVApplicationPtr IVApplication::GetApplication ( );
__declspec(implementation_key(475)) IVDocumentsPtr IVApplication::GetDocuments ( );
__declspec(implementation_key(476)) short IVApplication::GetObjectType ( );
__declspec(implementation_key(477)) long IVApplication::GetOnDataChangeDelay ( );
__declspec(implementation_key(478)) void IVApplication::PutOnDataChangeDelay ( long lpi4Ret );
__declspec(implementation_key(479)) long IVApplication::GetProcessID ( );
__declspec(implementation_key(480)) HRESULT IVApplication::Quit ( );
__declspec(implementation_key(481)) HRESULT IVApplication::Redo ( );
__declspec(implementation_key(482)) short IVApplication::GetScreenUpdating ( );
__declspec(implementation_key(483)) void IVApplication::PutScreenUpdating ( short lpi2Ret );
__declspec(implementation_key(484)) short IVApplication::GetStat ( );
__declspec(implementation_key(485)) HRESULT IVApplication::Undo ( );
__declspec(implementation_key(486)) _bstr_t IVApplication::GetVersion ( );
__declspec(implementation_key(487)) short IVApplication::GetWindowHandle ( );
__declspec(implementation_key(488)) IVWindowsPtr IVApplication::GetWindows ( );
__declspec(implementation_key(489)) long IVApplication::GetLanguage ( );
__declspec(implementation_key(490)) short IVApplication::GetIsVisio16 ( );
__declspec(implementation_key(491)) short IVApplication::GetIsVisio32 ( );
__declspec(implementation_key(492)) long IVApplication::GetWindowHandle32 ( );
__declspec(implementation_key(493)) short IVApplication::GetInstanceHandle ( );
__declspec(implementation_key(494)) long IVApplication::GetInstanceHandle32 ( );
__declspec(implementation_key(495)) IVUIObjectPtr IVApplication::GetBuiltInMenus ( );
__declspec(implementation_key(496)) IVUIObjectPtr IVApplication::GetBuiltInToolbars ( short fIgnored );
__declspec(implementation_key(497)) IVUIObjectPtr IVApplication::GetCustomMenus ( );
__declspec(implementation_key(498)) HRESULT IVApplication::SetCustomMenus ( struct IVUIObject * MenusObject );
__declspec(implementation_key(499)) _bstr_t IVApplication::GetCustomMenusFile ( );
__declspec(implementation_key(500)) void IVApplication::PutCustomMenusFile ( _bstr_t lpbstrRet );
__declspec(implementation_key(501)) HRESULT IVApplication::ClearCustomMenus ( );
__declspec(implementation_key(502)) IVUIObjectPtr IVApplication::GetCustomToolbars ( );
__declspec(implementation_key(503)) HRESULT IVApplication::SetCustomToolbars ( struct IVUIObject * ToolbarsObject );
__declspec(implementation_key(504)) _bstr_t IVApplication::GetCustomToolbarsFile ( );
__declspec(implementation_key(505)) void IVApplication::PutCustomToolbarsFile ( _bstr_t lpbstrRet );
__declspec(implementation_key(506)) HRESULT IVApplication::ClearCustomToolbars ( );
__declspec(implementation_key(507)) _bstr_t IVApplication::GetAddonPaths ( );
__declspec(implementation_key(508)) void IVApplication::PutAddonPaths ( _bstr_t lpbstrRet );
__declspec(implementation_key(509)) _bstr_t IVApplication::GetDrawingPaths ( );
__declspec(implementation_key(510)) void IVApplication::PutDrawingPaths ( _bstr_t lpbstrRet );
__declspec(implementation_key(511)) _bstr_t IVApplication::GetFilterPaths ( );
__declspec(implementation_key(512)) void IVApplication::PutFilterPaths ( _bstr_t lpbstrRet );
__declspec(implementation_key(513)) _bstr_t IVApplication::GetHelpPaths ( );
__declspec(implementation_key(514)) void IVApplication::PutHelpPaths ( _bstr_t lpbstrRet );
__declspec(implementation_key(515)) _bstr_t IVApplication::GetStartupPaths ( );
__declspec(implementation_key(516)) void IVApplication::PutStartupPaths ( _bstr_t lpbstrRet );
__declspec(implementation_key(517)) _bstr_t IVApplication::GetStencilPaths ( );
__declspec(implementation_key(518)) void IVApplication::PutStencilPaths ( _bstr_t lpbstrRet );
__declspec(implementation_key(519)) _bstr_t IVApplication::GetTemplatePaths ( );
__declspec(implementation_key(520)) void IVApplication::PutTemplatePaths ( _bstr_t lpbstrRet );
__declspec(implementation_key(521)) _bstr_t IVApplication::GetUserName ( );
__declspec(implementation_key(522)) void IVApplication::PutUserName ( _bstr_t lpbstrRet );
__declspec(implementation_key(523)) short IVApplication::GetPromptForSummary ( );
__declspec(implementation_key(524)) void IVApplication::PutPromptForSummary ( short lpi2Ret );
__declspec(implementation_key(525)) IVAddonsPtr IVApplication::GetAddons ( );
__declspec(implementation_key(526)) HRESULT IVApplication::SaveWorkspaceAs ( _bstr_t FileName );
__declspec(implementation_key(527)) HRESULT IVApplication::DoCmd ( short CommandID );
__declspec(implementation_key(528)) _bstr_t IVApplication::GetProfileName ( );
__declspec(implementation_key(529)) _bstr_t IVApplication::GetEventInfo ( long eventSeqNum );
__declspec(implementation_key(530)) IVEventListPtr IVApplication::GetEventList ( );
__declspec(implementation_key(531)) short IVApplication::GetPersistsEvents ( );
__declspec(implementation_key(532)) short IVApplication::GetActive ( );
__declspec(implementation_key(533)) short IVApplication::GetDeferRecalc ( );
__declspec(implementation_key(534)) void IVApplication::PutDeferRecalc ( short lpi2Ret );
__declspec(implementation_key(535)) short IVApplication::GetAlertResponse ( );
__declspec(implementation_key(536)) void IVApplication::PutAlertResponse ( short lpi2Ret );
__declspec(implementation_key(537)) short IVApplication::GetShowProgress ( );
__declspec(implementation_key(538)) void IVApplication::PutShowProgress ( short lpi2Ret );
__declspec(implementation_key(539)) IDispatchPtr IVApplication::GetVbe ( );
__declspec(implementation_key(540)) short IVApplication::GetShowMenus ( );
__declspec(implementation_key(541)) void IVApplication::PutShowMenus ( short lpi2Ret );
__declspec(implementation_key(542)) short IVApplication::GetToolbarStyle ( );
__declspec(implementation_key(543)) void IVApplication::PutToolbarStyle ( short lpi2Ret );
__declspec(implementation_key(544)) short IVApplication::GetShowStatusBar ( );
__declspec(implementation_key(545)) void IVApplication::PutShowStatusBar ( short lpi2Ret );
__declspec(implementation_key(546)) short IVApplication::GetEventsEnabled ( );
__declspec(implementation_key(547)) void IVApplication::PutEventsEnabled ( short lpi2Ret );
__declspec(implementation_key(548)) _bstr_t IVApplication::FormatResult ( const _variant_t & StringOrNumber, const _variant_t & UnitsIn, const _variant_t & UnitsOut, _bstr_t Format );
__declspec(implementation_key(549)) double IVApplication::ConvertResult ( const _variant_t & StringOrNumber, const _variant_t & UnitsIn, const _variant_t & UnitsOut );
__declspec(implementation_key(550)) _bstr_t IVApplication::GetPath ( );
__declspec(implementation_key(551)) HRESULT IVApplication::EnumDirectories ( _bstr_t PathsString, SAFEARRAY * * NameArray );
__declspec(implementation_key(552)) long IVApplication::GetTraceFlags ( );
__declspec(implementation_key(553)) void IVApplication::PutTraceFlags ( long lpi4Ret );
__declspec(implementation_key(554)) HRESULT IVApplication::PurgeUndo ( );
__declspec(implementation_key(555)) long IVApplication::QueueMarkerEvent ( _bstr_t ContextString );
__declspec(implementation_key(556)) short IVApplication::GetShowToolbar ( );
__declspec(implementation_key(557)) void IVApplication::PutShowToolbar ( short lpi2Ret );
__declspec(implementation_key(558)) VARIANT_BOOL IVApplication::GetLiveDynamics ( );
__declspec(implementation_key(559)) void IVApplication::PutLiveDynamics ( VARIANT_BOOL pbRet );
__declspec(implementation_key(560)) VARIANT_BOOL IVApplication::GetAutoLayout ( );
__declspec(implementation_key(561)) void IVApplication::PutAutoLayout ( VARIANT_BOOL pbRet );
__declspec(implementation_key(562)) VARIANT_BOOL IVApplication::GetVisible ( );
__declspec(implementation_key(563)) void IVApplication::PutVisible ( VARIANT_BOOL pbVisible );
__declspec(implementation_key(564)) long IVApplication::BeginUndoScope ( _bstr_t bstrUndoScopeName );
__declspec(implementation_key(565)) HRESULT IVApplication::EndUndoScope ( long nScopeID, VARIANT_BOOL bCommit );
__declspec(implementation_key(566)) HRESULT IVApplication::AddUndoUnit ( IUnknown * pUndoUnit );
__declspec(implementation_key(567)) _bstr_t IVApplication::GetCommandLine ( );
__declspec(implementation_key(568)) VARIANT_BOOL IVApplication::GetIsUndoingOrRedoing ( );
__declspec(implementation_key(569)) long IVApplication::GetCurrentScope ( );
__declspec(implementation_key(570)) VARIANT_BOOL IVApplication::GetIsInScope ( long nCmdID );
__declspec(implementation_key(571)) IDispatchPtr IVApplication::Getold_Addins ( );
__declspec(implementation_key(572)) _bstr_t IVApplication::GetProductName ( );
__declspec(implementation_key(573)) VARIANT_BOOL IVApplication::GetUndoEnabled ( );
__declspec(implementation_key(574)) void IVApplication::PutUndoEnabled ( VARIANT_BOOL pbRet );
__declspec(implementation_key(575)) VARIANT_BOOL IVApplication::GetShowChanges ( );
__declspec(implementation_key(576)) void IVApplication::PutShowChanges ( VARIANT_BOOL pbRet );
__declspec(implementation_key(577)) short IVApplication::GetTypelibMajorVersion ( );
__declspec(implementation_key(578)) short IVApplication::GetTypelibMinorVersion ( );
__declspec(implementation_key(579)) short IVApplication::GetAutoRecoverInterval ( );
__declspec(implementation_key(580)) void IVApplication::PutAutoRecoverInterval ( short lpi2Ret );
__declspec(implementation_key(581)) VARIANT_BOOL IVApplication::GetInhibitSelectChange ( );
__declspec(implementation_key(582)) void IVApplication::PutInhibitSelectChange ( VARIANT_BOOL pbRet );
__declspec(implementation_key(583)) _bstr_t IVApplication::GetActivePrinter ( );
__declspec(implementation_key(584)) void IVApplication::PutActivePrinter ( _bstr_t pbstrPrinterName );
__declspec(implementation_key(585)) SAFEARRAY * IVApplication::GetAvailablePrinters ( );
__declspec(implementation_key(586)) HRESULT IVApplication::RenameCurrentScope ( _bstr_t bstrScopeName );
__declspec(implementation_key(587)) HRESULT IVApplication::InvokeHelp ( _bstr_t bstrHelpFileName, long Command, long Data );
__declspec(implementation_key(588)) IDispatchPtr IVApplication::GetCommandBars ( );
__declspec(implementation_key(589)) long IVApplication::GetBuild ( );
__declspec(implementation_key(590)) IDispatchPtr IVApplication::GetCOMAddIns ( );
__declspec(implementation_key(591)) _variant_t IVApplication::GetDefaultPageUnits ( );
__declspec(implementation_key(592)) void IVApplication::PutDefaultPageUnits ( const _variant_t & pUnitsNameOrCode );
__declspec(implementation_key(593)) _variant_t IVApplication::GetDefaultTextUnits ( );
__declspec(implementation_key(594)) void IVApplication::PutDefaultTextUnits ( const _variant_t & pUnitsNameOrCode );
__declspec(implementation_key(595)) _variant_t IVApplication::GetDefaultAngleUnits ( );
__declspec(implementation_key(596)) void IVApplication::PutDefaultAngleUnits ( const _variant_t & pUnitsNameOrCode );
__declspec(implementation_key(597)) _variant_t IVApplication::GetDefaultDurationUnits ( );
__declspec(implementation_key(598)) void IVApplication::PutDefaultDurationUnits ( const _variant_t & pUnitsNameOrCode );
__declspec(implementation_key(599)) long IVApplication::GetFullBuild ( );
__declspec(implementation_key(600)) HRESULT IVApplication::OnComponentEnterState ( enum VisOnComponentEnterCodes uStateID, VARIANT_BOOL bEnter );
__declspec(implementation_key(601)) VARIANT_BOOL IVApplication::GetVBAEnabled ( );
__declspec(implementation_key(602)) enum VisZoomBehavior IVApplication::GetDefaultZoomBehavior ( );
__declspec(implementation_key(603)) void IVApplication::PutDefaultZoomBehavior ( enum VisZoomBehavior pnZoomBehavior );
__declspec(implementation_key(604)) _variant_t IVApplication::GetUsageStatistic ( long nWhichStatistic );
__declspec(implementation_key(605)) IFontDisp * IVApplication::GetDialogFont ( );
__declspec(implementation_key(606)) long IVApplication::GetLanguageHelp ( );
__declspec(implementation_key(607)) IVWindowPtr IVApplication::GetWindow ( );
__declspec(implementation_key(608)) _bstr_t IVApplication::GetName ( );
__declspec(implementation_key(609)) IUnknownPtr IVApplication::GetConnectorToolDataObject ( );
__declspec(implementation_key(610)) IVApplicationSettingsPtr IVApplication::GetSettings ( );
__declspec(implementation_key(611)) _bstr_t IVApplication::FormatResultEx ( const _variant_t & StringOrNumber, const _variant_t & UnitsIn, const _variant_t & UnitsOut, _bstr_t Format, long LangID, long CalendarID );
__declspec(implementation_key(612)) IDispatchPtr IVApplication::GetSaveAsWebObject ( );
__declspec(implementation_key(613)) IDispatchPtr IVApplication::GetMsoDebugOptions ( );
__declspec(implementation_key(614)) _bstr_t IVApplication::GetMyShapesPath ( );
__declspec(implementation_key(615)) void IVApplication::PutMyShapesPath ( _bstr_t lpbstrRet );
__declspec(implementation_key(616)) IUnknownPtr IVApplication::GetDefaultRectangleDataObject ( );
__declspec(implementation_key(617)) VARIANT_BOOL IVApplication::GetDataFeaturesEnabled ( );
__declspec(implementation_key(618)) IDispatchPtr IVApplication::GetLanguageSettings ( );
__declspec(implementation_key(619)) IDispatchPtr IVApplication::GetAssistance ( );
__declspec(implementation_key(620)) IVApplicationPtr IVCurve::GetApplication ( );
__declspec(implementation_key(621)) short IVCurve::GetObjectType ( );
__declspec(implementation_key(622)) short IVCurve::GetClosed ( );
__declspec(implementation_key(623)) HRESULT IVCurve::Points ( double Tolerance, SAFEARRAY * * xyArray );
__declspec(implementation_key(624)) double IVCurve::GetStart ( );
__declspec(implementation_key(625)) double IVCurve::GetEnd ( );
__declspec(implementation_key(626)) HRESULT IVCurve::Point ( double t, double * x, double * y );
__declspec(implementation_key(627)) HRESULT IVCurve::PointAndDerivatives ( double t, short n, double * x, double * y, double * dxdt, double * dydt, double * ddxdt, double * ddydt );
__declspec(implementation_key(628)) IVApplicationPtr IVPath::GetApplication ( );
__declspec(implementation_key(629)) short IVPath::GetObjectType ( );
__declspec(implementation_key(630)) IVCurvePtr IVPath::GetItem16 ( short Index );
__declspec(implementation_key(631)) short IVPath::GetCount16 ( );
__declspec(implementation_key(632)) short IVPath::GetClosed ( );
__declspec(implementation_key(633)) HRESULT IVPath::Points ( double Tolerance, SAFEARRAY * * xyArray );
__declspec(implementation_key(634)) IVCurvePtr IVPath::GetItem ( long Index );
__declspec(implementation_key(635)) long IVPath::GetCount ( );
__declspec(implementation_key(636)) IUnknownPtr IVPath::Get_NewEnum ( );
__declspec(implementation_key(637)) IVApplicationPtr IVPaths::GetApplication ( );
__declspec(implementation_key(638)) short IVPaths::GetObjectType ( );
__declspec(implementation_key(639)) IVPathPtr IVPaths::GetItem16 ( short Index );
__declspec(implementation_key(640)) short IVPaths::GetCount16 ( );
__declspec(implementation_key(641)) IVPathPtr IVPaths::GetItem ( long Index );
__declspec(implementation_key(642)) long IVPaths::GetCount ( );
__declspec(implementation_key(643)) IUnknownPtr IVPaths::Get_NewEnum ( );
__declspec(implementation_key(644)) IVApplicationPtr IVAddon::GetApplication ( );
__declspec(implementation_key(645)) short IVAddon::GetObjectType ( );
__declspec(implementation_key(646)) _bstr_t IVAddon::GetName ( );
__declspec(implementation_key(647)) short IVAddon::GetIndex ( );
__declspec(implementation_key(648)) short IVAddon::GetEnabled ( );
__declspec(implementation_key(649)) HRESULT IVAddon::Run ( _bstr_t ArgString );
__declspec(implementation_key(650)) _bstr_t IVAddon::GetNameU ( );
__declspec(implementation_key(651)) IVApplicationPtr IVAddons::GetApplication ( );
__declspec(implementation_key(652)) short IVAddons::GetObjectType ( );
__declspec(implementation_key(653)) IVAddonPtr IVAddons::GetItem ( const _variant_t & NameOrIndex );
__declspec(implementation_key(654)) short IVAddons::GetCount ( );
__declspec(implementation_key(655)) IVAddonPtr IVAddons::Add ( _bstr_t FileName );
__declspec(implementation_key(656)) HRESULT IVAddons::GetNames ( SAFEARRAY * * NameArray );
__declspec(implementation_key(657)) IUnknownPtr IVAddons::Get_NewEnum ( );
__declspec(implementation_key(658)) IVAddonPtr IVAddons::GetItemU ( const _variant_t & NameOrIndex );
__declspec(implementation_key(659)) HRESULT IVAddons::GetNamesU ( SAFEARRAY * * NameArray );
__declspec(implementation_key(660)) IVApplicationPtr IVApplicationSettings::GetApplication ( );
__declspec(implementation_key(661)) enum VisObjectTypes IVApplicationSettings::GetObjectType ( );
__declspec(implementation_key(662)) VARIANT_BOOL IVApplicationSettings::GetDrawingAids ( );
__declspec(implementation_key(663)) void IVApplicationSettings::PutDrawingAids ( VARIANT_BOOL RetVal );
__declspec(implementation_key(664)) long IVApplicationSettings::GetSnapStrengthRulerX ( );
__declspec(implementation_key(665)) void IVApplicationSettings::PutSnapStrengthRulerX ( long strength );
__declspec(implementation_key(666)) long IVApplicationSettings::GetSnapStrengthRulerY ( );
__declspec(implementation_key(667)) void IVApplicationSettings::PutSnapStrengthRulerY ( long strength );
__declspec(implementation_key(668)) long IVApplicationSettings::GetSnapStrengthGridX ( );
__declspec(implementation_key(669)) void IVApplicationSettings::PutSnapStrengthGridX ( long strength );
__declspec(implementation_key(670)) long IVApplicationSettings::GetSnapStrengthGridY ( );
__declspec(implementation_key(671)) void IVApplicationSettings::PutSnapStrengthGridY ( long strength );
__declspec(implementation_key(672)) long IVApplicationSettings::GetSnapStrengthGuidesX ( );
__declspec(implementation_key(673)) void IVApplicationSettings::PutSnapStrengthGuidesX ( long strength );
__declspec(implementation_key(674)) long IVApplicationSettings::GetSnapStrengthGuidesY ( );
__declspec(implementation_key(675)) void IVApplicationSettings::PutSnapStrengthGuidesY ( long strength );
__declspec(implementation_key(676)) long IVApplicationSettings::GetSnapStrengthPointsX ( );
__declspec(implementation_key(677)) void IVApplicationSettings::PutSnapStrengthPointsX ( long strength );
__declspec(implementation_key(678)) long IVApplicationSettings::GetSnapStrengthPointsY ( );
__declspec(implementation_key(679)) void IVApplicationSettings::PutSnapStrengthPointsY ( long strength );
__declspec(implementation_key(680)) long IVApplicationSettings::GetSnapStrengthGeometryX ( );
__declspec(implementation_key(681)) void IVApplicationSettings::PutSnapStrengthGeometryX ( long strength );
__declspec(implementation_key(682)) long IVApplicationSettings::GetSnapStrengthGeometryY ( );
__declspec(implementation_key(683)) void IVApplicationSettings::PutSnapStrengthGeometryY ( long strength );
__declspec(implementation_key(684)) long IVApplicationSettings::GetSnapStrengthExtensionsX ( );
__declspec(implementation_key(685)) void IVApplicationSettings::PutSnapStrengthExtensionsX ( long strength );
__declspec(implementation_key(686)) long IVApplicationSettings::GetSnapStrengthExtensionsY ( );
__declspec(implementation_key(687)) void IVApplicationSettings::PutSnapStrengthExtensionsY ( long strength );
__declspec(implementation_key(688)) VARIANT_BOOL IVApplicationSettings::GetShowFileSaveWarnings ( );
__declspec(implementation_key(689)) void IVApplicationSettings::PutShowFileSaveWarnings ( VARIANT_BOOL Show );
__declspec(implementation_key(690)) VARIANT_BOOL IVApplicationSettings::GetShowFileOpenWarnings ( );
__declspec(implementation_key(691)) void IVApplicationSettings::PutShowFileOpenWarnings ( VARIANT_BOOL Show );
__declspec(implementation_key(692)) enum VisDefaultSaveFormats IVApplicationSettings::GetDefaultSaveFormat ( );
__declspec(implementation_key(693)) void IVApplicationSettings::PutDefaultSaveFormat ( enum VisDefaultSaveFormats pFormatType );
__declspec(implementation_key(694)) OLE_COLOR IVApplicationSettings::GetDrawingPageColor ( );
__declspec(implementation_key(695)) void IVApplicationSettings::PutDrawingPageColor ( OLE_COLOR pColor );
__declspec(implementation_key(696)) OLE_COLOR IVApplicationSettings::GetDrawingBackgroundColor ( );
__declspec(implementation_key(697)) void IVApplicationSettings::PutDrawingBackgroundColor ( OLE_COLOR pColor );
__declspec(implementation_key(698)) OLE_COLOR IVApplicationSettings::GetDrawingBackgroundColorGradient ( );
__declspec(implementation_key(699)) void IVApplicationSettings::PutDrawingBackgroundColorGradient ( OLE_COLOR pColor );
__declspec(implementation_key(700)) OLE_COLOR IVApplicationSettings::GetStencilBackgroundColor ( );
__declspec(implementation_key(701)) void IVApplicationSettings::PutStencilBackgroundColor ( OLE_COLOR pColor );
__declspec(implementation_key(702)) OLE_COLOR IVApplicationSettings::GetStencilBackgroundColorGradient ( );
__declspec(implementation_key(703)) void IVApplicationSettings::PutStencilBackgroundColorGradient ( OLE_COLOR pColor );
__declspec(implementation_key(704)) OLE_COLOR IVApplicationSettings::GetStencilTextColor ( );
__declspec(implementation_key(705)) void IVApplicationSettings::PutStencilTextColor ( OLE_COLOR pColor );
__declspec(implementation_key(706)) OLE_COLOR IVApplicationSettings::GetPrintPreviewBackgroundColor ( );
__declspec(implementation_key(707)) void IVApplicationSettings::PutPrintPreviewBackgroundColor ( OLE_COLOR pColor );
__declspec(implementation_key(708)) OLE_COLOR IVApplicationSettings::GetFullScreenBackgroundColor ( );
__declspec(implementation_key(709)) void IVApplicationSettings::PutFullScreenBackgroundColor ( OLE_COLOR pColor );
__declspec(implementation_key(710)) VARIANT_BOOL IVApplicationSettings::GetShowStartupDialog ( );
__declspec(implementation_key(711)) void IVApplicationSettings::PutShowStartupDialog ( VARIANT_BOOL pShow );
__declspec(implementation_key(712)) VARIANT_BOOL IVApplicationSettings::GetShowSmartTags ( );
__declspec(implementation_key(713)) void IVApplicationSettings::PutShowSmartTags ( VARIANT_BOOL pShow );
__declspec(implementation_key(714)) enum VisTextDisplayQualityTypes IVApplicationSettings::GetTextDisplayQuality ( );
__declspec(implementation_key(715)) void IVApplicationSettings::PutTextDisplayQuality ( enum VisTextDisplayQualityTypes pTextQuality );
__declspec(implementation_key(716)) VARIANT_BOOL IVApplicationSettings::GetHigherQualityShapeDisplay ( );
__declspec(implementation_key(717)) void IVApplicationSettings::PutHigherQualityShapeDisplay ( VARIANT_BOOL pbRet );
__declspec(implementation_key(718)) VARIANT_BOOL IVApplicationSettings::GetSmoothDrawing ( );
__declspec(implementation_key(719)) void IVApplicationSettings::PutSmoothDrawing ( VARIANT_BOOL pbRet );
__declspec(implementation_key(720)) long IVApplicationSettings::GetStencilCharactersPerLine ( );
__declspec(implementation_key(721)) void IVApplicationSettings::PutStencilCharactersPerLine ( long pCharCount );
__declspec(implementation_key(722)) long IVApplicationSettings::GetStencilLinesPerMaster ( );
__declspec(implementation_key(723)) void IVApplicationSettings::PutStencilLinesPerMaster ( long pLineCount );
__declspec(implementation_key(724)) _bstr_t IVApplicationSettings::GetUserName ( );
__declspec(implementation_key(725)) void IVApplicationSettings::PutUserName ( _bstr_t lpbstrRet );
__declspec(implementation_key(726)) _bstr_t IVApplicationSettings::GetUserInitials ( );
__declspec(implementation_key(727)) void IVApplicationSettings::PutUserInitials ( _bstr_t lpbstrRet );
__declspec(implementation_key(728)) VARIANT_BOOL IVApplicationSettings::GetZoomOnRoll ( );
__declspec(implementation_key(729)) void IVApplicationSettings::PutZoomOnRoll ( VARIANT_BOOL pVal );
__declspec(implementation_key(730)) long IVApplicationSettings::GetUndoLevels ( );
__declspec(implementation_key(731)) void IVApplicationSettings::PutUndoLevels ( long pNumLevels );
__declspec(implementation_key(732)) long IVApplicationSettings::GetRecentFilesListSize ( );
__declspec(implementation_key(733)) void IVApplicationSettings::PutRecentFilesListSize ( long pNumFiles );
__declspec(implementation_key(734)) VARIANT_BOOL IVApplicationSettings::GetCenterSelectionOnZoom ( );
__declspec(implementation_key(735)) void IVApplicationSettings::PutCenterSelectionOnZoom ( VARIANT_BOOL pVal );
__declspec(implementation_key(736)) VARIANT_BOOL IVApplicationSettings::GetConnectorSplittingEnabled ( );
__declspec(implementation_key(737)) void IVApplicationSettings::PutConnectorSplittingEnabled ( VARIANT_BOOL pVal );
__declspec(implementation_key(738)) enum VisRegionalUIOptions IVApplicationSettings::GetAsianTextUI ( );
__declspec(implementation_key(739)) void IVApplicationSettings::PutAsianTextUI ( enum VisRegionalUIOptions pAsianTextUIOption );
__declspec(implementation_key(740)) enum VisRegionalUIOptions IVApplicationSettings::GetComplexTextUI ( );
__declspec(implementation_key(741)) void IVApplicationSettings::PutComplexTextUI ( enum VisRegionalUIOptions pComplexTextUIOption );
__declspec(implementation_key(742)) enum VisRegionalUIOptions IVApplicationSettings::GetKanaFindAndReplace ( );
__declspec(implementation_key(743)) void IVApplicationSettings::PutKanaFindAndReplace ( enum VisRegionalUIOptions pKanaOption );
__declspec(implementation_key(744)) long IVApplicationSettings::GetFreeformDrawingPrecision ( );
__declspec(implementation_key(745)) void IVApplicationSettings::PutFreeformDrawingPrecision ( long plVal );
__declspec(implementation_key(746)) long IVApplicationSettings::GetFreeformDrawingSmoothing ( );
__declspec(implementation_key(747)) void IVApplicationSettings::PutFreeformDrawingSmoothing ( long plVal );
__declspec(implementation_key(748)) VARIANT_BOOL IVApplicationSettings::GetDeveloperMode ( );
__declspec(implementation_key(749)) void IVApplicationSettings::PutDeveloperMode ( VARIANT_BOOL pVal );
__declspec(implementation_key(750)) VARIANT_BOOL IVApplicationSettings::GetShowChooseDrawingTypePane ( );
__declspec(implementation_key(751)) void IVApplicationSettings::PutShowChooseDrawingTypePane ( VARIANT_BOOL pShow );
__declspec(implementation_key(752)) VARIANT_BOOL IVApplicationSettings::GetShowShapeSearchPane ( );
__declspec(implementation_key(753)) void IVApplicationSettings::PutShowShapeSearchPane ( VARIANT_BOOL pVal );
__declspec(implementation_key(754)) VARIANT_BOOL IVApplicationSettings::GetApplyThemesOnShapeAdd ( );
__declspec(implementation_key(755)) void IVApplicationSettings::PutApplyThemesOnShapeAdd ( VARIANT_BOOL pVal );
__declspec(implementation_key(756)) enum VisRegionalUIOptions IVApplicationSettings::GetSATextUI ( );
__declspec(implementation_key(757)) enum VisRegionalUIOptions IVApplicationSettings::GetBIDITextUI ( );
__declspec(implementation_key(758)) enum VisRegionalUIOptions IVApplicationSettings::GetKashidaTextUI ( );
__declspec(implementation_key(759)) short IVApplicationSettings::GetStat ( );
__declspec(implementation_key(760)) VARIANT_BOOL IVApplicationSettings::GetShowMoreShapeHandlesOnHover ( );
__declspec(implementation_key(761)) void IVApplicationSettings::PutShowMoreShapeHandlesOnHover ( VARIANT_BOOL pVal );
__declspec(implementation_key(762)) VARIANT_BOOL IVApplicationSettings::GetEnableAutoConnect ( );
__declspec(implementation_key(763)) void IVApplicationSettings::PutEnableAutoConnect ( VARIANT_BOOL pVal );
__declspec(implementation_key(764)) IVApplicationPtr IVMSGWrap::GetApplication ( );
__declspec(implementation_key(765)) short IVMSGWrap::GetObjectType ( );
__declspec(implementation_key(766)) long IVMSGWrap::Gethwnd ( );
__declspec(implementation_key(767)) void IVMSGWrap::Puthwnd ( long lpi4Ret );
__declspec(implementation_key(768)) long IVMSGWrap::Getmessage ( );
__declspec(implementation_key(769)) void IVMSGWrap::Putmessage ( long lpi4Ret );
__declspec(implementation_key(770)) long IVMSGWrap::GetwParam ( );
__declspec(implementation_key(771)) void IVMSGWrap::PutwParam ( long lpi4Ret );
__declspec(implementation_key(772)) long IVMSGWrap::GetlParam ( );
__declspec(implementation_key(773)) void IVMSGWrap::PutlParam ( long lpi4Ret );
__declspec(implementation_key(774)) long IVMSGWrap::Getposttime ( );
__declspec(implementation_key(775)) void IVMSGWrap::Putposttime ( long lpi4Ret );
__declspec(implementation_key(776)) long IVMSGWrap::Getptx ( );
__declspec(implementation_key(777)) void IVMSGWrap::Putptx ( long lpi4Ret );
__declspec(implementation_key(778)) long IVMSGWrap::Getpty ( );
__declspec(implementation_key(779)) void IVMSGWrap::Putpty ( long lpi4Ret );
__declspec(implementation_key(780)) IVApplicationPtr IVDocument::GetApplication ( );
__declspec(implementation_key(781)) short IVDocument::GetStat ( );
__declspec(implementation_key(782)) short IVDocument::GetObjectType ( );
__declspec(implementation_key(783)) short IVDocument::GetInPlace ( );
__declspec(implementation_key(784)) IVMastersPtr IVDocument::GetMasters ( );
__declspec(implementation_key(785)) IVPagesPtr IVDocument::GetPages ( );
__declspec(implementation_key(786)) IVStylesPtr IVDocument::GetStyles ( );
__declspec(implementation_key(787)) _bstr_t IVDocument::GetName ( );
__declspec(implementation_key(788)) _bstr_t IVDocument::GetPath ( );
__declspec(implementation_key(789)) _bstr_t IVDocument::GetFullName ( );
__declspec(implementation_key(790)) IVMasterPtr IVDocument::Drop ( IUnknown * ObjectToDrop, short xPos, short yPos );
__declspec(implementation_key(791)) short IVDocument::GetIndex ( );
__declspec(implementation_key(792)) short IVDocument::Getold_Saved ( );
__declspec(implementation_key(793)) void IVDocument::Putold_Saved ( short lpi2Ret );
__declspec(implementation_key(794)) short IVDocument::GetReadOnly ( );
__declspec(implementation_key(795)) short IVDocument::Save ( );
__declspec(implementation_key(796)) short IVDocument::SaveAs ( _bstr_t FileName );
__declspec(implementation_key(797)) long IVDocument::Getold_Version ( );
__declspec(implementation_key(798)) void IVDocument::Putold_Version ( long lpi4Ret );
__declspec(implementation_key(799)) _bstr_t IVDocument::GetTitle ( );
__declspec(implementation_key(800)) void IVDocument::PutTitle ( _bstr_t lpbstrRet );
__declspec(implementation_key(801)) _bstr_t IVDocument::GetSubject ( );
__declspec(implementation_key(802)) void IVDocument::PutSubject ( _bstr_t lpbstrRet );
__declspec(implementation_key(803)) _bstr_t IVDocument::GetCreator ( );
__declspec(implementation_key(804)) void IVDocument::PutCreator ( _bstr_t lpbstrRet );
__declspec(implementation_key(805)) _bstr_t IVDocument::GetKeywords ( );
__declspec(implementation_key(806)) void IVDocument::PutKeywords ( _bstr_t lpbstrRet );
__declspec(implementation_key(807)) _bstr_t IVDocument::GetDescription ( );
__declspec(implementation_key(808)) void IVDocument::PutDescription ( _bstr_t lpbstrRet );
__declspec(implementation_key(809)) HRESULT IVDocument::Print ( );
__declspec(implementation_key(810)) HRESULT IVDocument::Close ( );
__declspec(implementation_key(811)) IVUIObjectPtr IVDocument::GetCustomMenus ( );
__declspec(implementation_key(812)) HRESULT IVDocument::SetCustomMenus ( struct IVUIObject * MenusObject );
__declspec(implementation_key(813)) _bstr_t IVDocument::GetCustomMenusFile ( );
__declspec(implementation_key(814)) void IVDocument::PutCustomMenusFile ( _bstr_t lpbstrRet );
__declspec(implementation_key(815)) HRESULT IVDocument::ClearCustomMenus ( );
__declspec(implementation_key(816)) IVUIObjectPtr IVDocument::GetCustomToolbars ( );
__declspec(implementation_key(817)) HRESULT IVDocument::SetCustomToolbars ( struct IVUIObject * ToolbarsObject );
__declspec(implementation_key(818)) _bstr_t IVDocument::GetCustomToolbarsFile ( );
__declspec(implementation_key(819)) void IVDocument::PutCustomToolbarsFile ( _bstr_t lpbstrRet );
__declspec(implementation_key(820)) HRESULT IVDocument::ClearCustomToolbars ( );
__declspec(implementation_key(821)) IVFontsPtr IVDocument::GetFonts ( );
__declspec(implementation_key(822)) IVColorsPtr IVDocument::GetColors ( );
__declspec(implementation_key(823)) IVEventListPtr IVDocument::GetEventList ( );
__declspec(implementation_key(824)) _bstr_t IVDocument::GetTemplate ( );
__declspec(implementation_key(825)) HRESULT IVDocument::SaveAsEx ( _bstr_t FileName, short SaveFlags );
__declspec(implementation_key(826)) short IVDocument::Getold_SavePreviewMode ( );
__declspec(implementation_key(827)) void IVDocument::Putold_SavePreviewMode ( short lpi2Ret );
__declspec(implementation_key(828)) HRESULT IVDocument::GetIcon ( short ID, _bstr_t FileName );
__declspec(implementation_key(829)) HRESULT IVDocument::SetIcon ( short ID, short Index, _bstr_t FileName );
__declspec(implementation_key(830)) double IVDocument::GetLeftMargin ( const _variant_t & UnitsNameOrCode );
__declspec(implementation_key(831)) void IVDocument::PutLeftMargin ( const _variant_t & UnitsNameOrCode, double lpr8Ret );
__declspec(implementation_key(832)) double IVDocument::GetRightMargin ( const _variant_t & UnitsNameOrCode );
__declspec(implementation_key(833)) void IVDocument::PutRightMargin ( const _variant_t & UnitsNameOrCode, double lpr8Ret );
__declspec(implementation_key(834)) double IVDocument::GetTopMargin ( const _variant_t & UnitsNameOrCode );
__declspec(implementation_key(835)) void IVDocument::PutTopMargin ( const _variant_t & UnitsNameOrCode, double lpr8Ret );
__declspec(implementation_key(836)) double IVDocument::GetBottomMargin ( const _variant_t & UnitsNameOrCode );
__declspec(implementation_key(837)) void IVDocument::PutBottomMargin ( const _variant_t & UnitsNameOrCode, double lpr8Ret );
__declspec(implementation_key(838)) short IVDocument::Getold_PrintLandscape ( );
__declspec(implementation_key(839)) void IVDocument::Putold_PrintLandscape ( short lpi2Ret );
__declspec(implementation_key(840)) short IVDocument::Getold_PrintCenteredH ( );
__declspec(implementation_key(841)) void IVDocument::Putold_PrintCenteredH ( short lpi2Ret );
__declspec(implementation_key(842)) short IVDocument::Getold_PrintCenteredV ( );
__declspec(implementation_key(843)) void IVDocument::Putold_PrintCenteredV ( short lpi2Ret );
__declspec(implementation_key(844)) double IVDocument::GetPrintScale ( );
__declspec(implementation_key(845)) void IVDocument::PutPrintScale ( double lpr8Ret );
__declspec(implementation_key(846)) short IVDocument::Getold_PrintFitOnPages ( );
__declspec(implementation_key(847)) void IVDocument::Putold_PrintFitOnPages ( short lpi2Ret );
__declspec(implementation_key(848)) short IVDocument::GetPrintPagesAcross ( );
__declspec(implementation_key(849)) void IVDocument::PutPrintPagesAcross ( short lpi2Ret );
__declspec(implementation_key(850)) short IVDocument::GetPrintPagesDown ( );
__declspec(implementation_key(851)) void IVDocument::PutPrintPagesDown ( short lpi2Ret );
__declspec(implementation_key(852)) _bstr_t IVDocument::GetDefaultStyle ( );
__declspec(implementation_key(853)) void IVDocument::PutDefaultStyle ( _bstr_t lpLocaleSpecificName );
__declspec(implementation_key(854)) _bstr_t IVDocument::GetDefaultLineStyle ( );
__declspec(implementation_key(855)) void IVDocument::PutDefaultLineStyle ( _bstr_t lpLocaleSpecificName );
__declspec(implementation_key(856)) _bstr_t IVDocument::GetDefaultFillStyle ( );
__declspec(implementation_key(857)) void IVDocument::PutDefaultFillStyle ( _bstr_t lpLocaleSpecificName );
__declspec(implementation_key(858)) _bstr_t IVDocument::GetDefaultTextStyle ( );
__declspec(implementation_key(859)) void IVDocument::PutDefaultTextStyle ( _bstr_t lpLocaleSpecificName );
__declspec(implementation_key(860)) short IVDocument::GetPersistsEvents ( );
__declspec(implementation_key(861)) IVWindowPtr IVDocument::OpenStencilWindow ( );
__declspec(implementation_key(862)) HRESULT IVDocument::ParseLine ( _bstr_t Line );
__declspec(implementation_key(863)) HRESULT IVDocument::ExecuteLine ( _bstr_t Line );
__declspec(implementation_key(864)) IDispatchPtr IVDocument::GetVBProject ( );
__declspec(implementation_key(865)) double IVDocument::GetPaperWidth ( const _variant_t & UnitsNameOrCode );
__declspec(implementation_key(866)) double IVDocument::GetPaperHeight ( const _variant_t & UnitsNameOrCode );
__declspec(implementation_key(867)) short IVDocument::Getold_PaperSize ( );
__declspec(implementation_key(868)) void IVDocument::Putold_PaperSize ( short lpi2Ret );
__declspec(implementation_key(869)) HRESULT IVDocument::FollowHyperlink45 ( _bstr_t Target, _bstr_t Location );
__declspec(implementation_key(870)) _bstr_t IVDocument::GetCodeName ( );
__declspec(implementation_key(871)) short IVDocument::Getold_Mode ( );
__declspec(implementation_key(872)) void IVDocument::Putold_Mode ( short lpi2Ret );
__declspec(implementation_key(873)) IVOLEObjectsPtr IVDocument::GetOLEObjects ( );
__declspec(implementation_key(874)) HRESULT IVDocument::FollowHyperlink ( _bstr_t Address, _bstr_t SubAddress, const _variant_t & ExtraInfo, const _variant_t & Frame, const _variant_t & NewWindow, const _variant_t & res1, const _variant_t & res2, const _variant_t & res3 );
__declspec(implementation_key(875)) _bstr_t IVDocument::GetManager ( );
__declspec(implementation_key(876)) void IVDocument::PutManager ( _bstr_t lpbstrRet );
__declspec(implementation_key(877)) _bstr_t IVDocument::GetCompany ( );
__declspec(implementation_key(878)) void IVDocument::PutCompany ( _bstr_t lpbstrRet );
__declspec(implementation_key(879)) _bstr_t IVDocument::GetCategory ( );
__declspec(implementation_key(880)) void IVDocument::PutCategory ( _bstr_t lpbstrRet );
__declspec(implementation_key(881)) _bstr_t IVDocument::GetHyperlinkBase ( );
__declspec(implementation_key(882)) void IVDocument::PutHyperlinkBase ( _bstr_t lpbstrRet );
__declspec(implementation_key(883)) IVShapePtr IVDocument::GetDocumentSheet ( );
__declspec(implementation_key(884)) IDispatchPtr IVDocument::GetContainer ( );
__declspec(implementation_key(885)) _bstr_t IVDocument::GetClassID ( );
__declspec(implementation_key(886)) _bstr_t IVDocument::GetProgID ( );
__declspec(implementation_key(887)) IVMasterShortcutsPtr IVDocument::GetMasterShortcuts ( );
__declspec(implementation_key(888)) _bstr_t IVDocument::GetAlternateNames ( );
__declspec(implementation_key(889)) void IVDocument::PutAlternateNames ( _bstr_t lpbstrRet );
__declspec(implementation_key(890)) IVShapePtr IVDocument::GetGestureFormatSheet ( );
__declspec(implementation_key(891)) HRESULT IVDocument::ClearGestureFormatSheet ( );
__declspec(implementation_key(892)) VARIANT_BOOL IVDocument::GetAutoRecover ( );
__declspec(implementation_key(893)) void IVDocument::PutAutoRecover ( VARIANT_BOOL pbRet );
__declspec(implementation_key(894)) VARIANT_BOOL IVDocument::GetSaved ( );
__declspec(implementation_key(895)) void IVDocument::PutSaved ( VARIANT_BOOL pbRet );
__declspec(implementation_key(896)) enum VisDocVersions IVDocument::GetVersion ( );
__declspec(implementation_key(897)) void IVDocument::PutVersion ( enum VisDocVersions lpi4Ret );
__declspec(implementation_key(898)) enum VisSavePreviewMode IVDocument::GetSavePreviewMode ( );
__declspec(implementation_key(899)) void IVDocument::PutSavePreviewMode ( enum VisSavePreviewMode lpi4Ret );
__declspec(implementation_key(900)) VARIANT_BOOL IVDocument::GetPrintLandscape ( );
__declspec(implementation_key(901)) void IVDocument::PutPrintLandscape ( VARIANT_BOOL pbRet );
__declspec(implementation_key(902)) VARIANT_BOOL IVDocument::GetPrintCenteredH ( );
__declspec(implementation_key(903)) void IVDocument::PutPrintCenteredH ( VARIANT_BOOL pbRet );
__declspec(implementation_key(904)) VARIANT_BOOL IVDocument::GetPrintCenteredV ( );
__declspec(implementation_key(905)) void IVDocument::PutPrintCenteredV ( VARIANT_BOOL pbRet );
__declspec(implementation_key(906)) VARIANT_BOOL IVDocument::GetPrintFitOnPages ( );
__declspec(implementation_key(907)) void IVDocument::PutPrintFitOnPages ( VARIANT_BOOL pbRet );
__declspec(implementation_key(908)) enum VisPaperSizes IVDocument::GetPaperSize ( );
__declspec(implementation_key(909)) void IVDocument::PutPaperSize ( enum VisPaperSizes lpi4Ret );
__declspec(implementation_key(910)) enum VisDocModeArgs IVDocument::GetMode ( );
__declspec(implementation_key(911)) void IVDocument::PutMode ( enum VisDocModeArgs lpi4Ret );
__declspec(implementation_key(912)) VARIANT_BOOL IVDocument::GetSnapEnabled ( );
__declspec(implementation_key(913)) void IVDocument::PutSnapEnabled ( VARIANT_BOOL pbRet );
__declspec(implementation_key(914)) enum VisSnapSettings IVDocument::GetSnapSettings ( );
__declspec(implementation_key(915)) void IVDocument::PutSnapSettings ( enum VisSnapSettings pnRet );
__declspec(implementation_key(916)) enum VisSnapExtensions IVDocument::GetSnapExtensions ( );
__declspec(implementation_key(917)) void IVDocument::PutSnapExtensions ( enum VisSnapExtensions pnRet );
__declspec(implementation_key(918)) SAFEARRAY * IVDocument::GetSnapAngles ( );
__declspec(implementation_key(919)) void IVDocument::PutSnapAngles ( SAFEARRAY * * dAngles );
__declspec(implementation_key(920)) VARIANT_BOOL IVDocument::GetGlueEnabled ( );
__declspec(implementation_key(921)) void IVDocument::PutGlueEnabled ( VARIANT_BOOL pbRet );
__declspec(implementation_key(922)) enum VisGlueSettings IVDocument::GetGlueSettings ( );
__declspec(implementation_key(923)) void IVDocument::PutGlueSettings ( enum VisGlueSettings pnRet );
__declspec(implementation_key(924)) VARIANT_BOOL IVDocument::GetDynamicGridEnabled ( );
__declspec(implementation_key(925)) void IVDocument::PutDynamicGridEnabled ( VARIANT_BOOL pbRet );
__declspec(implementation_key(926)) _bstr_t IVDocument::GetDefaultGuideStyle ( );
__declspec(implementation_key(927)) void IVDocument::PutDefaultGuideStyle ( _bstr_t lpLocaleSpecificName );
__declspec(implementation_key(928)) enum VisProtection IVDocument::GetProtection ( const _variant_t & bstrPassword );
__declspec(implementation_key(929)) void IVDocument::PutProtection ( const _variant_t & bstrPassword, enum VisProtection pnRet );
__declspec(implementation_key(930)) _bstr_t IVDocument::GetPrinter ( );
__declspec(implementation_key(931)) void IVDocument::PutPrinter ( _bstr_t pbstrRet );
__declspec(implementation_key(932)) long IVDocument::GetPrintCopies ( );
__declspec(implementation_key(933)) void IVDocument::PutPrintCopies ( long pnRet );
__declspec(implementation_key(934)) _bstr_t IVDocument::GetHeaderLeft ( );
__declspec(implementation_key(935)) void IVDocument::PutHeaderLeft ( _bstr_t pbstrRet );
__declspec(implementation_key(936)) _bstr_t IVDocument::GetHeaderCenter ( );
__declspec(implementation_key(937)) void IVDocument::PutHeaderCenter ( _bstr_t pbstrRet );
__declspec(implementation_key(938)) _bstr_t IVDocument::GetHeaderRight ( );
__declspec(implementation_key(939)) void IVDocument::PutHeaderRight ( _bstr_t pbstrRet );
__declspec(implementation_key(940)) double IVDocument::GetHeaderMargin ( const _variant_t & UnitsNameOrCode );
__declspec(implementation_key(941)) void IVDocument::PutHeaderMargin ( const _variant_t & UnitsNameOrCode, double pdRet );
__declspec(implementation_key(942)) _bstr_t IVDocument::GetFooterLeft ( );
__declspec(implementation_key(943)) void IVDocument::PutFooterLeft ( _bstr_t pbstrRet );
__declspec(implementation_key(944)) _bstr_t IVDocument::GetFooterCenter ( );
__declspec(implementation_key(945)) void IVDocument::PutFooterCenter ( _bstr_t pbstrRet );
__declspec(implementation_key(946)) _bstr_t IVDocument::GetFooterRight ( );
__declspec(implementation_key(947)) void IVDocument::PutFooterRight ( _bstr_t pbstrRet );
__declspec(implementation_key(948)) double IVDocument::GetFooterMargin ( const _variant_t & UnitsNameOrCode );
__declspec(implementation_key(949)) void IVDocument::PutFooterMargin ( const _variant_t & UnitsNameOrCode, double pdRet );
__declspec(implementation_key(950)) IFontDisp * IVDocument::GetHeaderFooterFont ( );
__declspec(implementation_key(951)) void IVDocument::PutRefHeaderFooterFont ( IFontDisp * ppFontDisp );
__declspec(implementation_key(952)) OLE_COLOR IVDocument::GetHeaderFooterColor ( );
__declspec(implementation_key(953)) void IVDocument::PutHeaderFooterColor ( OLE_COLOR pColor );
__declspec(implementation_key(954)) void IVDocument::PutPassword ( const _variant_t & bstrExistingPassword, _bstr_t _arg2 );
__declspec(implementation_key(955)) IPictureDisp * IVDocument::GetPreviewPicture ( );
__declspec(implementation_key(956)) void IVDocument::PutRefPreviewPicture ( IPictureDisp * ppPictureDisp );
__declspec(implementation_key(957)) HRESULT IVDocument::Clean ( const _variant_t & nTargets, const _variant_t & nActions, const _variant_t & nAlerts, const _variant_t & nFixes, const _variant_t & bStopOnError, const _variant_t & bLogFileName, const _variant_t & nReserved );
__declspec(implementation_key(958)) long IVDocument::GetBuildNumberCreated ( );
__declspec(implementation_key(959)) long IVDocument::GetBuildNumberEdited ( );
__declspec(implementation_key(960)) DATE IVDocument::GetTimeCreated ( );
__declspec(implementation_key(961)) DATE IVDocument::GetTime ( );
__declspec(implementation_key(962)) DATE IVDocument::GetTimeEdited ( );
__declspec(implementation_key(963)) DATE IVDocument::GetTimePrinted ( );
__declspec(implementation_key(964)) DATE IVDocument::GetTimeSaved ( );
__declspec(implementation_key(965)) HRESULT IVDocument::CopyPreviewPicture ( struct IVDocument * pSourceDoc );
__declspec(implementation_key(966)) VARIANT_BOOL IVDocument::GetContainsWorkspace ( );
__declspec(implementation_key(967)) SAFEARRAY * IVDocument::GetEmailRoutingData ( );
__declspec(implementation_key(968)) SAFEARRAY * IVDocument::GetVBProjectData ( );
__declspec(implementation_key(969)) long IVDocument::GetSolutionXMLElementCount ( );
__declspec(implementation_key(970)) _bstr_t IVDocument::GetSolutionXMLElementName ( long Index );
__declspec(implementation_key(971)) VARIANT_BOOL IVDocument::GetSolutionXMLElementExists ( _bstr_t ElementName );
__declspec(implementation_key(972)) _bstr_t IVDocument::GetSolutionXMLElement ( _bstr_t ElementName );
__declspec(implementation_key(973)) void IVDocument::PutSolutionXMLElement ( _bstr_t ElementName, _bstr_t pWellFormedXML );
__declspec(implementation_key(974)) HRESULT IVDocument::DeleteSolutionXMLElement ( _bstr_t ElementName );
__declspec(implementation_key(975)) long IVDocument::GetFullBuildNumberCreated ( );
__declspec(implementation_key(976)) long IVDocument::GetFullBuildNumberEdited ( );
__declspec(implementation_key(977)) long IVDocument::GetID ( );
__declspec(implementation_key(978)) VARIANT_BOOL IVDocument::GetMacrosEnabled ( );
__declspec(implementation_key(979)) enum VisZoomBehavior IVDocument::GetZoomBehavior ( );
__declspec(implementation_key(980)) void IVDocument::PutZoomBehavior ( enum VisZoomBehavior pnZoomBehavior );
__declspec(implementation_key(981)) VARIANT_BOOL IVDocument::CanCheckIn ( );
__declspec(implementation_key(982)) HRESULT IVDocument::CheckIn ( VARIANT_BOOL SaveChanges, VARIANT * Comments, VARIANT_BOOL MakePublic );
__declspec(implementation_key(983)) enum VisDocumentTypes IVDocument::GetType ( );
__declspec(implementation_key(984)) long IVDocument::GetLanguage ( );
__declspec(implementation_key(985)) void IVDocument::PutLanguage ( long lpLangID );
__declspec(implementation_key(986)) VARIANT_BOOL IVDocument::GetRemovePersonalInformation ( );
__declspec(implementation_key(987)) void IVDocument::PutRemovePersonalInformation ( VARIANT_BOOL pbRet );
__declspec(implementation_key(988)) HRESULT IVDocument::PrintOut ( enum VisPrintOutRange PrintRange, long FromPage, long ToPage, VARIANT_BOOL ScaleCurrentViewToPaper, _bstr_t PrinterName, VARIANT_BOOL PrintToFile, _bstr_t OutputFileName, long Copies, VARIANT_BOOL Collate, VARIANT_BOOL ColorAsBlack );
__declspec(implementation_key(989)) long IVDocument::BeginUndoScope ( _bstr_t bstrUndoScopeName );
__declspec(implementation_key(990)) HRESULT IVDocument::EndUndoScope ( long nScopeID, VARIANT_BOOL bCommit );
__declspec(implementation_key(991)) HRESULT IVDocument::AddUndoUnit ( IUnknown * pUndoUnit );
__declspec(implementation_key(992)) HRESULT IVDocument::PurgeUndo ( );
__declspec(implementation_key(993)) VARIANT_BOOL IVDocument::GetUndoEnabled ( );
__declspec(implementation_key(994)) void IVDocument::PutUndoEnabled ( VARIANT_BOOL pbRet );
__declspec(implementation_key(995)) HRESULT IVDocument::RenameCurrentScope ( _bstr_t bstrScopeName );
__declspec(implementation_key(996)) IDispatchPtr IVDocument::GetSharedWorkspace ( );
__declspec(implementation_key(997)) IDispatchPtr IVDocument::GetSync ( );
__declspec(implementation_key(998)) HRESULT IVDocument::RemoveHiddenInformation ( long RemoveHiddenInfoItems );
__declspec(implementation_key(999)) IVDataRecordsetsPtr IVDocument::GetDataRecordsets ( );
__declspec(implementation_key(1000)) HRESULT IVDocument::GetThemeNames ( enum VisThemeTypes eType, SAFEARRAY * * NameArray );
__declspec(implementation_key(1001)) HRESULT IVDocument::GetThemeNamesU ( enum VisThemeTypes eType, SAFEARRAY * * NameArray );
__declspec(implementation_key(1002)) VARIANT_BOOL IVDocument::CanUndoCheckOut ( );
__declspec(implementation_key(1003)) HRESULT IVDocument::UndoCheckOut ( );
__declspec(implementation_key(1004)) VARIANT_BOOL IVDocument::GetContainsWorkspaceEx ( );
__declspec(implementation_key(1005)) void IVDocument::PutContainsWorkspaceEx ( VARIANT_BOOL TrueOrFalse );
__declspec(implementation_key(1006)) HRESULT IVDocument::ExportAsFixedFormat ( enum VisFixedFormatTypes FixedFormat, _bstr_t OutputFileName, enum VisDocExIntent Intent, enum VisPrintOutRange PrintRange, long FromPage, long ToPage, VARIANT_BOOL ColorAsBlack, VARIANT_BOOL IncludeBackground, VARIANT_BOOL IncludeDocumentProperties, VARIANT_BOOL IncludeStructureTags, VARIANT_BOOL UseISO19005_1, const _variant_t & FixedFormatExtClass );
__declspec(implementation_key(1007)) _bstr_t IVDocument::GetDefaultSavePath ( );
__declspec(implementation_key(1008)) void IVDocument::PutDefaultSavePath ( _bstr_t SaveLocation );
__declspec(implementation_key(1009)) IVApplicationPtr IVDataConnection::GetApplication ( );
__declspec(implementation_key(1010)) short IVDataConnection::GetStat ( );
__declspec(implementation_key(1011)) IVDocumentPtr IVDataConnection::GetDocument ( );
__declspec(implementation_key(1012)) short IVDataConnection::GetObjectType ( );
__declspec(implementation_key(1013)) long IVDataConnection::GetID ( );
__declspec(implementation_key(1014)) _bstr_t IVDataConnection::GetConnectionString ( );
__declspec(implementation_key(1015)) void IVDataConnection::PutConnectionString ( _bstr_t ConnectionString );
__declspec(implementation_key(1016)) _bstr_t IVDataConnection::GetFileName ( );
__declspec(implementation_key(1017)) long IVDataConnection::GetTimeout ( );
__declspec(implementation_key(1018)) void IVDataConnection::PutTimeout ( long Timeout );
__declspec(implementation_key(1019)) IVApplicationPtr IVFont::GetApplication ( );
__declspec(implementation_key(1020)) IVDocumentPtr IVFont::GetDocument ( );
__declspec(implementation_key(1021)) short IVFont::GetIndex ( );
__declspec(implementation_key(1022)) _bstr_t IVFont::GetName ( );
__declspec(implementation_key(1023)) short IVFont::GetID16 ( );
__declspec(implementation_key(1024)) short IVFont::GetAttributes ( );
__declspec(implementation_key(1025)) short IVFont::GetCharSet ( );
__declspec(implementation_key(1026)) short IVFont::GetPitchAndFamily ( );
__declspec(implementation_key(1027)) short IVFont::GetObjectType ( );
__declspec(implementation_key(1028)) short IVFont::GetStat ( );
__declspec(implementation_key(1029)) long IVFont::GetID ( );
__declspec(implementation_key(1030)) IVApplicationPtr IVFonts::GetApplication ( );
__declspec(implementation_key(1031)) IVDocumentPtr IVFonts::GetDocument ( );
__declspec(implementation_key(1032)) short IVFonts::GetCount ( );
__declspec(implementation_key(1033)) IVFontPtr IVFonts::GetItem ( const _variant_t & NameOrIndex );
__declspec(implementation_key(1034)) IVFontPtr IVFonts::GetItemFromID ( long ObjectID );
__declspec(implementation_key(1035)) short IVFonts::GetObjectType ( );
__declspec(implementation_key(1036)) short IVFonts::GetStat ( );
__declspec(implementation_key(1037)) IUnknownPtr IVFonts::Get_NewEnum ( );
__declspec(implementation_key(1038)) IVApplicationPtr IVColor::GetApplication ( );
__declspec(implementation_key(1039)) IVDocumentPtr IVColor::GetDocument ( );
__declspec(implementation_key(1040)) short IVColor::GetIndex16 ( );
__declspec(implementation_key(1041)) short IVColor::GetRed ( );
__declspec(implementation_key(1042)) void IVColor::PutRed ( short lpi2Ret );
__declspec(implementation_key(1043)) short IVColor::GetGreen ( );
__declspec(implementation_key(1044)) void IVColor::PutGreen ( short lpi2Ret );
__declspec(implementation_key(1045)) short IVColor::GetBlue ( );
__declspec(implementation_key(1046)) void IVColor::PutBlue ( short lpi2Ret );
__declspec(implementation_key(1047)) short IVColor::GetFlags ( );
__declspec(implementation_key(1048)) void IVColor::PutFlags ( short lpi2Ret );
__declspec(implementation_key(1049)) long IVColor::GetPaletteEntry ( );
__declspec(implementation_key(1050)) void IVColor::PutPaletteEntry ( long lpi4Ret );
__declspec(implementation_key(1051)) short IVColor::GetObjectType ( );
__declspec(implementation_key(1052)) short IVColor::GetStat ( );
__declspec(implementation_key(1053)) long IVColor::GetIndex ( );
__declspec(implementation_key(1054)) IVApplicationPtr IVColors::GetApplication ( );
__declspec(implementation_key(1055)) IVDocumentPtr IVColors::GetDocument ( );
__declspec(implementation_key(1056)) short IVColors::GetCount16 ( );
__declspec(implementation_key(1057)) IVColorPtr IVColors::GetItem16 ( short Index );
__declspec(implementation_key(1058)) short IVColors::GetObjectType ( );
__declspec(implementation_key(1059)) short IVColors::GetStat ( );
__declspec(implementation_key(1060)) IVColorPtr IVColors::GetItem ( long Index );
__declspec(implementation_key(1061)) long IVColors::GetCount ( );
__declspec(implementation_key(1062)) IUnknownPtr IVColors::Get_NewEnum ( );
__declspec(implementation_key(1063)) IVApplicationPtr IVMasters::GetApplication ( );
__declspec(implementation_key(1064)) short IVMasters::GetObjectType ( );
__declspec(implementation_key(1065)) IVMasterPtr IVMasters::GetItem ( const _variant_t & NameUIDOrIndex );
__declspec(implementation_key(1066)) short IVMasters::GetCount ( );
__declspec(implementation_key(1067)) IVDocumentPtr IVMasters::GetDocument ( );
__declspec(implementation_key(1068)) short IVMasters::GetStat ( );
__declspec(implementation_key(1069)) IVEventListPtr IVMasters::GetEventList ( );
__declspec(implementation_key(1070)) short IVMasters::GetPersistsEvents ( );
__declspec(implementation_key(1071)) IVMasterPtr IVMasters::Add ( );
__declspec(implementation_key(1072)) HRESULT IVMasters::GetNames ( SAFEARRAY * * localeSpecificNameArray );
__declspec(implementation_key(1073)) IVMasterPtr IVMasters::Drop ( IUnknown * ObjectToDrop, short xPos, short yPos );
__declspec(implementation_key(1074)) IVMasterPtr IVMasters::GetItemU ( const _variant_t & NameUIDOrIndex );
__declspec(implementation_key(1075)) HRESULT IVMasters::GetNamesU ( SAFEARRAY * * localeIndependentNameArray );
__declspec(implementation_key(1076)) IUnknownPtr IVMasters::Get_NewEnum ( );
__declspec(implementation_key(1077)) IVMasterPtr IVMasters::GetItemFromID ( long nID );
__declspec(implementation_key(1078)) HRESULT IVMasters::Paste ( const _variant_t & Flags );
__declspec(implementation_key(1079)) IVMasterPtr IVMasters::AddEx ( enum VisMasterTypes Type );
__declspec(implementation_key(1080)) IVDocumentPtr IVMaster::GetDocument ( );
__declspec(implementation_key(1081)) _bstr_t IVMaster::GetPrompt ( );
__declspec(implementation_key(1082)) void IVMaster::PutPrompt ( _bstr_t lpbstrRet );
__declspec(implementation_key(1083)) short IVMaster::GetAlignName ( );
__declspec(implementation_key(1084)) void IVMaster::PutAlignName ( short lpi2Ret );
__declspec(implementation_key(1085)) short IVMaster::GetIconSize ( );
__declspec(implementation_key(1086)) void IVMaster::PutIconSize ( short lpi2Ret );
__declspec(implementation_key(1087)) short IVMaster::GetIconUpdate ( );
__declspec(implementation_key(1088)) void IVMaster::PutIconUpdate ( short lpi2Ret );
__declspec(implementation_key(1089)) IVApplicationPtr IVMaster::GetApplication ( );
__declspec(implementation_key(1090)) short IVMaster::GetStat ( );
__declspec(implementation_key(1091)) short IVMaster::GetObjectType ( );
__declspec(implementation_key(1092)) _bstr_t IVMaster::GetName ( );
__declspec(implementation_key(1093)) void IVMaster::PutName ( _bstr_t lpLocaleSpecificName );
__declspec(implementation_key(1094)) IVShapesPtr IVMaster::GetShapes ( );
__declspec(implementation_key(1095)) short IVMaster::GetIndex ( );
__declspec(implementation_key(1096)) short IVMaster::GetOneD ( );
__declspec(implementation_key(1097)) HRESULT IVMaster::Delete ( );
__declspec(implementation_key(1098)) _bstr_t IVMaster::GetUniqueID ( );
__declspec(implementation_key(1099)) IVLayersPtr IVMaster::GetLayers ( );
__declspec(implementation_key(1100)) IVShapePtr IVMaster::GetPageSheet ( );
__declspec(implementation_key(1101)) IVShapePtr IVMaster::Drop ( IUnknown * ObjectToDrop, double xPos, double yPos );
__declspec(implementation_key(1102)) HRESULT IVMaster::CenterDrawing ( );
__declspec(implementation_key(1103)) IVEventListPtr IVMaster::GetEventList ( );
__declspec(implementation_key(1104)) short IVMaster::GetPersistsEvents ( );
__declspec(implementation_key(1105)) IVShapePtr IVMaster::DrawLine ( double xBegin, double yBegin, double xEnd, double yEnd );
__declspec(implementation_key(1106)) IVShapePtr IVMaster::DrawRectangle ( double x1, double y1, double x2, double y2 );
__declspec(implementation_key(1107)) IVShapePtr IVMaster::DrawOval ( double x1, double y1, double x2, double y2 );
__declspec(implementation_key(1108)) IVShapePtr IVMaster::DrawSpline ( SAFEARRAY * * xyArray, double Tolerance, short Flags );
__declspec(implementation_key(1109)) IVShapePtr IVMaster::DrawBezier ( SAFEARRAY * * xyArray, short degree, short Flags );
__declspec(implementation_key(1110)) IVShapePtr IVMaster::DrawPolyline ( SAFEARRAY * * xyArray, short Flags );
__declspec(implementation_key(1111)) IVShapePtr IVMaster::Import ( _bstr_t FileName );
__declspec(implementation_key(1112)) HRESULT IVMaster::Export ( _bstr_t FileName );
__declspec(implementation_key(1113)) IVShapePtr IVMaster::InsertFromFile ( _bstr_t FileName, short Flags );
__declspec(implementation_key(1114)) IVShapePtr IVMaster::InsertObject ( _bstr_t ClassOrProgID, short Flags );
__declspec(implementation_key(1115)) IVWindowPtr IVMaster::OpenDrawWindow ( );
__declspec(implementation_key(1116)) IVWindowPtr IVMaster::OpenIconWindow ( );
__declspec(implementation_key(1117)) IVMasterPtr IVMaster::Open ( );
__declspec(implementation_key(1118)) HRESULT IVMaster::Close ( );
__declspec(implementation_key(1119)) short IVMaster::DropMany ( SAFEARRAY * * ObjectsToInstance, SAFEARRAY * * xyArray, SAFEARRAY * * IDArray );
__declspec(implementation_key(1120)) HRESULT IVMaster::GetFormulas ( SAFEARRAY * * SID_SRCStream, SAFEARRAY * * formulaArray );
__declspec(implementation_key(1121)) HRESULT IVMaster::GetResults ( SAFEARRAY * * SID_SRCStream, short Flags, SAFEARRAY * * UnitsNamesOrCodes, SAFEARRAY * * resultArray );
__declspec(implementation_key(1122)) short IVMaster::SetFormulas ( SAFEARRAY * * SID_SRCStream, SAFEARRAY * * formulaArray, short Flags );
__declspec(implementation_key(1123)) short IVMaster::SetResults ( SAFEARRAY * * SID_SRCStream, SAFEARRAY * * UnitsNamesOrCodes, SAFEARRAY * * resultArray, short Flags );
__declspec(implementation_key(1124)) IVConnectsPtr IVMaster::GetConnects ( );
__declspec(implementation_key(1125)) HRESULT IVMaster::ImportIcon ( _bstr_t FileName );
__declspec(implementation_key(1126)) HRESULT IVMaster::ExportIconTransparentAsBlack ( _bstr_t FileName, short Flags );
__declspec(implementation_key(1127)) HRESULT IVMaster::Layout ( );
__declspec(implementation_key(1128)) HRESULT IVMaster::BoundingBox ( short Flags, double * lpr8Left, double * lpr8Bottom, double * lpr8Right, double * lpr8Top );
__declspec(implementation_key(1129)) short IVMaster::GetID16 ( );
__declspec(implementation_key(1130)) IVOLEObjectsPtr IVMaster::GetOLEObjects ( );
__declspec(implementation_key(1131)) short IVMaster::GetPatternFlags ( );
__declspec(implementation_key(1132)) void IVMaster::PutPatternFlags ( short lpi2Ret );
__declspec(implementation_key(1133)) short IVMaster::GetMatchByName ( );
__declspec(implementation_key(1134)) void IVMaster::PutMatchByName ( short lpi2Ret );
__declspec(implementation_key(1135)) long IVMaster::GetID ( );
__declspec(implementation_key(1136)) short IVMaster::GetHidden ( );
__declspec(implementation_key(1137)) void IVMaster::PutHidden ( short lpi2Ret );
__declspec(implementation_key(1138)) _bstr_t IVMaster::GetBaseID ( );
__declspec(implementation_key(1139)) _bstr_t IVMaster::GetNewBaseID ( );
__declspec(implementation_key(1140)) IVSelectionPtr IVMaster::GetSpatialSearch ( double x, double y, short Relation, double Tolerance, short Flags );
__declspec(implementation_key(1141)) IVMasterShortcutPtr IVMaster::CreateShortcut ( );
__declspec(implementation_key(1142)) _bstr_t IVMaster::GetNameU ( );
__declspec(implementation_key(1143)) void IVMaster::PutNameU ( _bstr_t lpLocaleIndependentName );
__declspec(implementation_key(1144)) short IVMaster::DropManyU ( SAFEARRAY * * ObjectsToInstance, SAFEARRAY * * xyArray, SAFEARRAY * * IDArray );
__declspec(implementation_key(1145)) HRESULT IVMaster::GetFormulasU ( SAFEARRAY * * SID_SRCStream, SAFEARRAY * * formulaArray );
__declspec(implementation_key(1146)) IVShapePtr IVMaster::DrawNURBS ( short degree, short Flags, SAFEARRAY * * xyArray, SAFEARRAY * * knots, const _variant_t & weights );
__declspec(implementation_key(1147)) HRESULT IVMaster::ExportIcon ( _bstr_t FileName, short Flags, const _variant_t & TransparentRGB );
__declspec(implementation_key(1148)) short IVMaster::GetIndexInStencil ( );
__declspec(implementation_key(1149)) IPictureDisp * IVMaster::GetPicture ( );
__declspec(implementation_key(1150)) IPictureDisp * IVMaster::GetIcon ( );
__declspec(implementation_key(1151)) void IVMaster::PutRefIcon ( IPictureDisp * ppPictureDisp );
__declspec(implementation_key(1152)) IVMasterPtr IVMaster::GetEditCopy ( );
__declspec(implementation_key(1153)) IVMasterPtr IVMaster::GetOriginal ( );
__declspec(implementation_key(1154)) VARIANT_BOOL IVMaster::GetIsChanged ( );
__declspec(implementation_key(1155)) void IVMaster::PutIndexInStencil ( short lpi2Ret );
__declspec(implementation_key(1156)) HRESULT IVMaster::ResizeToFitContents ( );
__declspec(implementation_key(1157)) HRESULT IVMaster::Paste ( const _variant_t & Flags );
__declspec(implementation_key(1158)) HRESULT IVMaster::PasteSpecial ( long Format, const _variant_t & Link, const _variant_t & DisplayAsIcon );
__declspec(implementation_key(1159)) IVSelectionPtr IVMaster::CreateSelection ( enum VisSelectionTypes SelType, enum VisSelectMode IterationMode, const _variant_t & Data );
__declspec(implementation_key(1160)) IVShapePtr IVMaster::AddGuide ( short Type, double xPos, double yPos );
__declspec(implementation_key(1161)) IVShapePtr IVMaster::DrawArcByThreePoints ( double xBegin, double yBegin, double xEnd, double yEnd, double xControl, double yControl );
__declspec(implementation_key(1162)) IVShapePtr IVMaster::DrawQuarterArc ( double xBegin, double yBegin, double xEnd, double yEnd, enum VisArcSweepFlags SweepFlag );
__declspec(implementation_key(1163)) IVShapePtr IVMaster::DrawCircularArc ( double xCenter, double yCenter, double Radius, double StartAngle, double EndAngle );
__declspec(implementation_key(1164)) enum VisMasterTypes IVMaster::GetType ( );
__declspec(implementation_key(1165)) VARIANT_BOOL IVMaster::GetDataGraphicHidden ( );
__declspec(implementation_key(1166)) void IVMaster::PutDataGraphicHidden ( VARIANT_BOOL Hidden );
__declspec(implementation_key(1167)) VARIANT_BOOL IVMaster::GetDataGraphicHidesText ( );
__declspec(implementation_key(1168)) void IVMaster::PutDataGraphicHidesText ( VARIANT_BOOL HideText );
__declspec(implementation_key(1169)) VARIANT_BOOL IVMaster::GetDataGraphicShowBorder ( );
__declspec(implementation_key(1170)) void IVMaster::PutDataGraphicShowBorder ( VARIANT_BOOL ShowBorder );
__declspec(implementation_key(1171)) enum VisGraphicPositionHorizontal IVMaster::GetDataGraphicHorizontalPosition ( );
__declspec(implementation_key(1172)) void IVMaster::PutDataGraphicHorizontalPosition ( enum VisGraphicPositionHorizontal Position );
__declspec(implementation_key(1173)) enum VisGraphicPositionVertical IVMaster::GetDataGraphicVerticalPosition ( );
__declspec(implementation_key(1174)) void IVMaster::PutDataGraphicVerticalPosition ( enum VisGraphicPositionVertical Position );
__declspec(implementation_key(1175)) IVGraphicItemsPtr IVMaster::GetGraphicItems ( );
__declspec(implementation_key(1176)) HRESULT IVMaster::DataGraphicDelete ( );
__declspec(implementation_key(1177)) IVApplicationPtr IVGraphicItem::GetApplication ( );
__declspec(implementation_key(1178)) IVDocumentPtr IVGraphicItem::GetDocument ( );
__declspec(implementation_key(1179)) enum VisObjectTypes IVGraphicItem::GetObjectType ( );
__declspec(implementation_key(1180)) HRESULT IVGraphicItem::Delete ( );
__declspec(implementation_key(1181)) long IVGraphicItem::GetIndex ( );
__declspec(implementation_key(1182)) void IVGraphicItem::PutIndex ( long Index );
__declspec(implementation_key(1183)) long IVGraphicItem::GetID ( );
__declspec(implementation_key(1184)) _bstr_t IVGraphicItem::GetDescription ( );
__declspec(implementation_key(1185)) enum VisGraphicItemTypes IVGraphicItem::GetType ( );
__declspec(implementation_key(1186)) HRESULT IVGraphicItem::GetExpression ( enum VisGraphicField * Field, BSTR * Expression );
__declspec(implementation_key(1187)) HRESULT IVGraphicItem::SetExpression ( enum VisGraphicField Field, _bstr_t Expression );
__declspec(implementation_key(1188)) IVMasterPtr IVGraphicItem::GetDataGraphic ( );
__declspec(implementation_key(1189)) short IVGraphicItem::GetStat ( );
__declspec(implementation_key(1190)) _bstr_t IVGraphicItem::GetTag ( );
__declspec(implementation_key(1191)) void IVGraphicItem::PutTag ( _bstr_t Tag );
__declspec(implementation_key(1192)) enum VisGraphicPositionHorizontal IVGraphicItem::GetHorizontalPosition ( );
__declspec(implementation_key(1193)) void IVGraphicItem::PutHorizontalPosition ( enum VisGraphicPositionHorizontal Position );
__declspec(implementation_key(1194)) enum VisGraphicPositionVertical IVGraphicItem::GetVerticalPosition ( );
__declspec(implementation_key(1195)) void IVGraphicItem::PutVerticalPosition ( enum VisGraphicPositionVertical Position );
__declspec(implementation_key(1196)) VARIANT_BOOL IVGraphicItem::GetUseDataGraphicPosition ( );
__declspec(implementation_key(1197)) void IVGraphicItem::PutUseDataGraphicPosition ( VARIANT_BOOL UseDataGraphicPosition );
__declspec(implementation_key(1198)) IVApplicationPtr IVGraphicItems::GetApplication ( );
__declspec(implementation_key(1199)) IVDocumentPtr IVGraphicItems::GetDocument ( );
__declspec(implementation_key(1200)) enum VisObjectTypes IVGraphicItems::GetObjectType ( );
__declspec(implementation_key(1201)) IVMasterPtr IVGraphicItems::GetDataGraphic ( );
__declspec(implementation_key(1202)) IUnknownPtr IVGraphicItems::Get_NewEnum ( );
__declspec(implementation_key(1203)) long IVGraphicItems::GetCount ( );
__declspec(implementation_key(1204)) IVGraphicItemPtr IVGraphicItems::AddCopy ( struct IVGraphicItem * GraphicItem );
__declspec(implementation_key(1205)) IVGraphicItemPtr IVGraphicItems::GetItem ( long Index );
__declspec(implementation_key(1206)) IVGraphicItemPtr IVGraphicItems::GetItemFromID ( long ObjectID );
__declspec(implementation_key(1207)) short IVGraphicItems::GetStat ( );
__declspec(implementation_key(1208)) IVApplicationPtr IVShapes::GetApplication ( );
__declspec(implementation_key(1209)) short IVShapes::GetObjectType ( );
__declspec(implementation_key(1210)) IVShapePtr IVShapes::GetItem ( const _variant_t & NameUIDOrIndex );
__declspec(implementation_key(1211)) short IVShapes::GetCount16 ( );
__declspec(implementation_key(1212)) IVDocumentPtr IVShapes::GetDocument ( );
__declspec(implementation_key(1213)) IVPagePtr IVShapes::GetContainingPage ( );
__declspec(implementation_key(1214)) IVMasterPtr IVShapes::GetContainingMaster ( );
__declspec(implementation_key(1215)) IVShapePtr IVShapes::GetContainingShape ( );
__declspec(implementation_key(1216)) HRESULT IVShapes::CenterDrawing ( );
__declspec(implementation_key(1217)) short IVShapes::GetStat ( );
__declspec(implementation_key(1218)) IVEventListPtr IVShapes::GetEventList ( );
__declspec(implementation_key(1219)) short IVShapes::GetPersistsEvents ( );
__declspec(implementation_key(1220)) IVShapePtr IVShapes::GetItemFromID16 ( short ObjectID );
__declspec(implementation_key(1221)) long IVShapes::GetCount ( );
__declspec(implementation_key(1222)) IVShapePtr IVShapes::GetItemFromID ( long ObjectID );
__declspec(implementation_key(1223)) IVShapePtr IVShapes::GetItemU ( const _variant_t & NameUIDOrIndex );
__declspec(implementation_key(1224)) IUnknownPtr IVShapes::Get_NewEnum ( );
__declspec(implementation_key(1225)) HRESULT IVShape::VoidGroup ( );
__declspec(implementation_key(1226)) HRESULT IVShape::BringForward ( );
__declspec(implementation_key(1227)) HRESULT IVShape::BringToFront ( );
__declspec(implementation_key(1228)) HRESULT IVShape::ConvertToGroup ( );
__declspec(implementation_key(1229)) HRESULT IVShape::FlipHorizontal ( );
__declspec(implementation_key(1230)) HRESULT IVShape::FlipVertical ( );
__declspec(implementation_key(1231)) HRESULT IVShape::ReverseEnds ( );
__declspec(implementation_key(1232)) HRESULT IVShape::SendBackward ( );
__declspec(implementation_key(1233)) HRESULT IVShape::SendToBack ( );
__declspec(implementation_key(1234)) HRESULT IVShape::Rotate90 ( );
__declspec(implementation_key(1235)) HRESULT IVShape::Ungroup ( );
__declspec(implementation_key(1236)) IVDocumentPtr IVShape::GetDocument ( );
__declspec(implementation_key(1237)) IDispatchPtr IVShape::GetParent ( );
__declspec(implementation_key(1238)) IVApplicationPtr IVShape::GetApplication ( );
__declspec(implementation_key(1239)) short IVShape::GetStat ( );
__declspec(implementation_key(1240)) IVMasterPtr IVShape::GetMaster ( );
__declspec(implementation_key(1241)) short IVShape::GetType ( );
__declspec(implementation_key(1242)) short IVShape::GetObjectType ( );
__declspec(implementation_key(1243)) IVCellPtr IVShape::GetCells ( _bstr_t localeSpecificCellName );
__declspec(implementation_key(1244)) IVCellPtr IVShape::GetCellsSRC ( short Section, short Row, short Column );
__declspec(implementation_key(1245)) IVShapesPtr IVShape::GetShapes ( );
__declspec(implementation_key(1246)) _bstr_t IVShape::GetData1 ( );
__declspec(implementation_key(1247)) void IVShape::PutData1 ( _bstr_t lpbstrRet );
__declspec(implementation_key(1248)) _bstr_t IVShape::GetData2 ( );
__declspec(implementation_key(1249)) void IVShape::PutData2 ( _bstr_t lpbstrRet );
__declspec(implementation_key(1250)) _bstr_t IVShape::GetData3 ( );
__declspec(implementation_key(1251)) void IVShape::PutData3 ( _bstr_t lpbstrRet );
__declspec(implementation_key(1252)) _bstr_t IVShape::GetHelp ( );
__declspec(implementation_key(1253)) void IVShape::PutHelp ( _bstr_t lpbstrRet );
__declspec(implementation_key(1254)) _bstr_t IVShape::GetNameID ( );
__declspec(implementation_key(1255)) _bstr_t IVShape::GetName ( );
__declspec(implementation_key(1256)) void IVShape::PutName ( _bstr_t lpLocaleSpecificName );
__declspec(implementation_key(1257)) _bstr_t IVShape::GetText ( );
__declspec(implementation_key(1258)) void IVShape::PutText ( _bstr_t lpbstrRet );
__declspec(implementation_key(1259)) long IVShape::GetCharCount ( );
__declspec(implementation_key(1260)) IVCharactersPtr IVShape::GetCharacters ( );
__declspec(implementation_key(1261)) HRESULT IVShape::old_Copy ( );
__declspec(implementation_key(1262)) HRESULT IVShape::old_Cut ( );
__declspec(implementation_key(1263)) HRESULT IVShape::Delete ( );
__declspec(implementation_key(1264)) HRESULT IVShape::VoidDuplicate ( );
__declspec(implementation_key(1265)) IVShapePtr IVShape::Drop ( IUnknown * ObjectToDrop, double xPos, double yPos );
__declspec(implementation_key(1266)) short IVShape::GetOneD ( );
__declspec(implementation_key(1267)) void IVShape::PutOneD ( short lpi2Ret );
__declspec(implementation_key(1268)) short IVShape::GetGeometryCount ( );
__declspec(implementation_key(1269)) short IVShape::GetRowCount ( short Section );
__declspec(implementation_key(1270)) short IVShape::AddSection ( short Section );
__declspec(implementation_key(1271)) HRESULT IVShape::DeleteSection ( short Section );
__declspec(implementation_key(1272)) short IVShape::AddRow ( short Section, short Row, short RowTag );
__declspec(implementation_key(1273)) HRESULT IVShape::DeleteRow ( short Section, short Row );
__declspec(implementation_key(1274)) short IVShape::GetRowsCellCount ( short Section, short Row );
__declspec(implementation_key(1275)) short IVShape::GetRowType ( short Section, short Row );
__declspec(implementation_key(1276)) void IVShape::PutRowType ( short Section, short Row, short lpi2Ret );
__declspec(implementation_key(1277)) HRESULT IVShape::SetCenter ( double xPos, double yPos );
__declspec(implementation_key(1278)) HRESULT IVShape::SetBegin ( double xPos, double yPos );
__declspec(implementation_key(1279)) HRESULT IVShape::SetEnd ( double xPos, double yPos );
__declspec(implementation_key(1280)) IVConnectsPtr IVShape::GetConnects ( );
__declspec(implementation_key(1281)) short IVShape::GetIndex16 ( );
__declspec(implementation_key(1282)) _bstr_t IVShape::GetStyle ( );
__declspec(implementation_key(1283)) void IVShape::PutStyle ( _bstr_t lpLocaleSpecificStyleName );
__declspec(implementation_key(1284)) void IVShape::PutStyleKeepFmt ( _bstr_t _arg1 );
__declspec(implementation_key(1285)) _bstr_t IVShape::GetLineStyle ( );
__declspec(implementation_key(1286)) void IVShape::PutLineStyle ( _bstr_t lpLocaleSpecificStyleName );
__declspec(implementation_key(1287)) void IVShape::PutLineStyleKeepFmt ( _bstr_t _arg1 );
__declspec(implementation_key(1288)) _bstr_t IVShape::GetFillStyle ( );
__declspec(implementation_key(1289)) void IVShape::PutFillStyle ( _bstr_t lpLocaleSpecificStyleName );
__declspec(implementation_key(1290)) void IVShape::PutFillStyleKeepFmt ( _bstr_t _arg1 );
__declspec(implementation_key(1291)) _bstr_t IVShape::GetTextStyle ( );
__declspec(implementation_key(1292)) void IVShape::PutTextStyle ( _bstr_t lpLocaleSpecificStyleName );
__declspec(implementation_key(1293)) void IVShape::PutTextStyleKeepFmt ( _bstr_t _arg1 );
__declspec(implementation_key(1294)) HRESULT IVShape::Export ( _bstr_t FileName );
__declspec(implementation_key(1295)) double IVShape::Getold_AreaIU ( );
__declspec(implementation_key(1296)) double IVShape::Getold_LengthIU ( );
__declspec(implementation_key(1297)) IUnknownPtr IVShape::GetGeomExIf ( short fFill, double LineRes );
__declspec(implementation_key(1298)) _bstr_t IVShape::GetUniqueID ( short fUniqueID );
__declspec(implementation_key(1299)) IVPagePtr IVShape::GetContainingPage ( );
__declspec(implementation_key(1300)) IVMasterPtr IVShape::GetContainingMaster ( );
__declspec(implementation_key(1301)) IVShapePtr IVShape::GetContainingShape ( );
__declspec(implementation_key(1302)) short IVShape::GetSectionExists ( short Section, short fExistsLocally );
__declspec(implementation_key(1303)) short IVShape::GetRowExists ( short Section, short Row, short fExistsLocally );
__declspec(implementation_key(1304)) short IVShape::GetCellExists ( _bstr_t localeSpecificCellName, short fExistsLocally );
__declspec(implementation_key(1305)) short IVShape::GetCellsSRCExists ( short Section, short Row, short Column, short fExistsLocally );
__declspec(implementation_key(1306)) short IVShape::GetLayerCount ( );
__declspec(implementation_key(1307)) IVLayerPtr IVShape::GetLayer ( short Index );
__declspec(implementation_key(1308)) short IVShape::AddNamedRow ( short Section, _bstr_t RowName, short RowTag );
__declspec(implementation_key(1309)) short IVShape::AddRows ( short Section, short Row, short RowTag, short RowCount );
__declspec(implementation_key(1310)) IVEventListPtr IVShape::GetEventList ( );
__declspec(implementation_key(1311)) short IVShape::GetPersistsEvents ( );
__declspec(implementation_key(1312)) IVShapePtr IVShape::DrawLine ( double xBegin, double yBegin, double xEnd, double yEnd );
__declspec(implementation_key(1313)) IVShapePtr IVShape::DrawRectangle ( double x1, double y1, double x2, double y2 );
__declspec(implementation_key(1314)) IVShapePtr IVShape::DrawOval ( double x1, double y1, double x2, double y2 );
__declspec(implementation_key(1315)) IVShapePtr IVShape::DrawSpline ( SAFEARRAY * * xyArray, double Tolerance, short Flags );
__declspec(implementation_key(1316)) IVShapePtr IVShape::DrawBezier ( SAFEARRAY * * xyArray, short degree, short Flags );
__declspec(implementation_key(1317)) IVShapePtr IVShape::DrawPolyline ( SAFEARRAY * * xyArray, short Flags );
__declspec(implementation_key(1318)) HRESULT IVShape::FitCurve ( double Tolerance, short Flags );
__declspec(implementation_key(1319)) IVShapePtr IVShape::Import ( _bstr_t FileName );
__declspec(implementation_key(1320)) HRESULT IVShape::CenterDrawing ( );
__declspec(implementation_key(1321)) IVShapePtr IVShape::InsertFromFile ( _bstr_t FileName, short Flags );
__declspec(implementation_key(1322)) IVShapePtr IVShape::InsertObject ( _bstr_t ClassOrProgID, short Flags );
__declspec(implementation_key(1323)) _bstr_t IVShape::GetClassID ( );
__declspec(implementation_key(1324)) short IVShape::GetForeignType ( );
__declspec(implementation_key(1325)) IDispatchPtr IVShape::GetObject ( );
__declspec(implementation_key(1326)) IVWindowPtr IVShape::OpenDrawWindow ( );
__declspec(implementation_key(1327)) IVWindowPtr IVShape::OpenSheetWindow ( );
__declspec(implementation_key(1328)) short IVShape::GetID16 ( );
__declspec(implementation_key(1329)) short IVShape::DropMany ( SAFEARRAY * * ObjectsToInstance, SAFEARRAY * * xyArray, SAFEARRAY * * IDArray );
__declspec(implementation_key(1330)) HRESULT IVShape::GetFormulas ( SAFEARRAY * * SRCStream, SAFEARRAY * * formulaArray );
__declspec(implementation_key(1331)) HRESULT IVShape::GetResults ( SAFEARRAY * * SRCStream, short Flags, SAFEARRAY * * UnitsNamesOrCodes, SAFEARRAY * * resultArray );
__declspec(implementation_key(1332)) short IVShape::SetFormulas ( SAFEARRAY * * SRCStream, SAFEARRAY * * formulaArray, short Flags );
__declspec(implementation_key(1333)) short IVShape::SetResults ( SAFEARRAY * * SRCStream, SAFEARRAY * * UnitsNamesOrCodes, SAFEARRAY * * resultArray, short Flags );
__declspec(implementation_key(1334)) IVConnectsPtr IVShape::GetFromConnects ( );
__declspec(implementation_key(1335)) HRESULT IVShape::Layout ( );
__declspec(implementation_key(1336)) HRESULT IVShape::BoundingBox ( short Flags, double * lpr8Left, double * lpr8Bottom, double * lpr8Right, double * lpr8Top );
__declspec(implementation_key(1337)) short IVShape::HitTest ( double xPos, double yPos, double Tolerance );
__declspec(implementation_key(1338)) IVHyperlinkPtr IVShape::GetHyperlink ( );
__declspec(implementation_key(1339)) _bstr_t IVShape::GetProgID ( );
__declspec(implementation_key(1340)) short IVShape::GetObjectIsInherited ( );
__declspec(implementation_key(1341)) IVPathsPtr IVShape::GetPaths ( );
__declspec(implementation_key(1342)) IVPathsPtr IVShape::GetPathsLocal ( );
__declspec(implementation_key(1343)) IVHyperlinkPtr IVShape::AddHyperlink ( );
__declspec(implementation_key(1344)) long IVShape::GetID ( );
__declspec(implementation_key(1345)) long IVShape::GetIndex ( );
__declspec(implementation_key(1346)) IVSectionPtr IVShape::GetSection ( short Index );
__declspec(implementation_key(1347)) IVHyperlinksPtr IVShape::GetHyperlinks ( );
__declspec(implementation_key(1348)) short IVShape::GetSpatialRelation ( struct IVShape * OtherShape, double Tolerance, short Flags );
__declspec(implementation_key(1349)) double IVShape::GetDistanceFrom ( struct IVShape * OtherShape, short Flags );
__declspec(implementation_key(1350)) double IVShape::GetDistanceFromPoint ( double x, double y, short Flags, VARIANT * pvPathIndex, VARIANT * pvCurveIndex, VARIANT * pvt );
__declspec(implementation_key(1351)) IVSelectionPtr IVShape::GetSpatialNeighbors ( short Relation, double Tolerance, short Flags, const _variant_t & ResultRoot );
__declspec(implementation_key(1352)) IVSelectionPtr IVShape::GetSpatialSearch ( double x, double y, short Relation, double Tolerance, short Flags );
__declspec(implementation_key(1353)) HRESULT IVShape::TransformXYTo ( struct IVShape * OtherShape, double x, double y, double * xprime, double * yprime );
__declspec(implementation_key(1354)) HRESULT IVShape::TransformXYFrom ( struct IVShape * OtherShape, double x, double y, double * xprime, double * yprime );
__declspec(implementation_key(1355)) HRESULT IVShape::XYToPage ( double x, double y, double * xprime, double * yprime );
__declspec(implementation_key(1356)) HRESULT IVShape::XYFromPage ( double x, double y, double * xprime, double * yprime );
__declspec(implementation_key(1357)) HRESULT IVShape::UpdateAlignmentBox ( );
__declspec(implementation_key(1358)) IVCellPtr IVShape::GetCellsU ( _bstr_t localeIndependentCellName );
__declspec(implementation_key(1359)) _bstr_t IVShape::GetNameU ( );
__declspec(implementation_key(1360)) void IVShape::PutNameU ( _bstr_t lpLocaleIndependentName );
__declspec(implementation_key(1361)) short IVShape::GetCellExistsU ( _bstr_t localeIndependentCellName, short fExistsLocally );
__declspec(implementation_key(1362)) short IVShape::DropManyU ( SAFEARRAY * * ObjectsToInstance, SAFEARRAY * * xyArray, SAFEARRAY * * IDArray );
__declspec(implementation_key(1363)) HRESULT IVShape::GetFormulasU ( SAFEARRAY * * SRCStream, SAFEARRAY * * formulaArray );
__declspec(implementation_key(1364)) IVShapePtr IVShape::DrawNURBS ( short degree, short Flags, SAFEARRAY * * xyArray, SAFEARRAY * * knots, const _variant_t & weights );
__declspec(implementation_key(1365)) short IVShape::GetCellsRowIndex ( _bstr_t localeSpecificCellName );
__declspec(implementation_key(1366)) short IVShape::GetCellsRowIndexU ( _bstr_t localeIndependentCellName );
__declspec(implementation_key(1367)) VARIANT_BOOL IVShape::GetIsOpenForTextEdit ( );
__declspec(implementation_key(1368)) IVShapePtr IVShape::GetRootShape ( );
__declspec(implementation_key(1369)) IVShapePtr IVShape::GetMasterShape ( );
__declspec(implementation_key(1370)) IPictureDisp * IVShape::GetPicture ( );
__declspec(implementation_key(1371)) IVShapePtr IVShape::Group ( );
__declspec(implementation_key(1372)) IVShapePtr IVShape::Duplicate ( );
__declspec(implementation_key(1373)) HRESULT IVShape::SwapEnds ( );
__declspec(implementation_key(1374)) void IVShape::PutParent ( IDispatch * lpdispRet );
__declspec(implementation_key(1375)) SAFEARRAY * IVShape::GetForeignData ( );
__declspec(implementation_key(1376)) HRESULT IVShape::Copy ( const _variant_t & Flags );
__declspec(implementation_key(1377)) HRESULT IVShape::Cut ( const _variant_t & Flags );
__declspec(implementation_key(1378)) HRESULT IVShape::Paste ( const _variant_t & Flags );
__declspec(implementation_key(1379)) HRESULT IVShape::PasteSpecial ( long Format, const _variant_t & Link, const _variant_t & DisplayAsIcon );
__declspec(implementation_key(1380)) IVSelectionPtr IVShape::CreateSelection ( enum VisSelectionTypes SelType, enum VisSelectMode IterationMode, const _variant_t & Data );
__declspec(implementation_key(1381)) long IVShape::GetLanguage ( );
__declspec(implementation_key(1382)) void IVShape::PutLanguage ( long lpLangID );
__declspec(implementation_key(1383)) HRESULT IVShape::Offset ( double Distance );
__declspec(implementation_key(1384)) IVShapePtr IVShape::AddGuide ( short Type, double xPos, double yPos );
__declspec(implementation_key(1385)) double IVShape::GetAreaIU ( VARIANT_BOOL fIncludeSubShapes );
__declspec(implementation_key(1386)) double IVShape::GetLengthIU ( VARIANT_BOOL fIncludeSubShapes );
__declspec(implementation_key(1387)) IVShapePtr IVShape::DrawArcByThreePoints ( double xBegin, double yBegin, double xEnd, double yEnd, double xControl, double yControl );
__declspec(implementation_key(1388)) IVShapePtr IVShape::DrawQuarterArc ( double xBegin, double yBegin, double xEnd, double yEnd, enum VisArcSweepFlags SweepFlag );
__declspec(implementation_key(1389)) IVShapePtr IVShape::DrawCircularArc ( double xCenter, double yCenter, double Radius, double StartAngle, double EndAngle );
__declspec(implementation_key(1390)) long IVShape::GetContainingPageID ( );
__declspec(implementation_key(1391)) long IVShape::GetContainingMasterID ( );
__declspec(implementation_key(1392)) HRESULT IVShape::LinkToData ( long DataRecordsetID, long RowID, VARIANT_BOOL ApplyDataGraphicAfterLink );
__declspec(implementation_key(1393)) HRESULT IVShape::BreakLinkToData ( long DataRecordsetID );
__declspec(implementation_key(1394)) long IVShape::GetLinkedDataRow ( long DataRecordsetID );
__declspec(implementation_key(1395)) HRESULT IVShape::GetLinkedDataRecordsetIDs ( SAFEARRAY * * DataRecordsetIDs );
__declspec(implementation_key(1396)) HRESULT IVShape::GetCustomPropertiesLinkedToData ( long DataRecordsetID, SAFEARRAY * * CustomPropertyIndices );
__declspec(implementation_key(1397)) VARIANT_BOOL IVShape::IsCustomPropertyLinked ( long DataRecordsetID, long CustomPropertyIndex );
__declspec(implementation_key(1398)) _bstr_t IVShape::GetCustomPropertyLinkedColumn ( long DataRecordsetID, long CustomPropertyIndex );
__declspec(implementation_key(1399)) HRESULT IVShape::AutoConnect ( struct IVShape * ToShape, enum VisAutoConnectDir PlacementDir, IUnknown * Connector );
__declspec(implementation_key(1400)) IVMasterPtr IVShape::GetDataGraphic ( );
__declspec(implementation_key(1401)) void IVShape::PutDataGraphic ( struct IVMaster * DataGraphic );
__declspec(implementation_key(1402)) VARIANT_BOOL IVShape::GetIsDataGraphicCallout ( );
__declspec(implementation_key(1403)) IVApplicationPtr IVOLEObject::GetApplication ( );
__declspec(implementation_key(1404)) IVShapePtr IVOLEObject::GetShape ( );
__declspec(implementation_key(1405)) short IVOLEObject::GetObjectType ( );
__declspec(implementation_key(1406)) short IVOLEObject::GetStat ( );
__declspec(implementation_key(1407)) _bstr_t IVOLEObject::GetClassID ( );
__declspec(implementation_key(1408)) _bstr_t IVOLEObject::GetProgID ( );
__declspec(implementation_key(1409)) short IVOLEObject::GetForeignType ( );
__declspec(implementation_key(1410)) IDispatchPtr IVOLEObject::GetObject ( );
__declspec(implementation_key(1411)) IVApplicationPtr IVOLEObjects::GetApplication ( );
__declspec(implementation_key(1412)) short IVOLEObjects::GetObjectType ( );
__declspec(implementation_key(1413)) short IVOLEObjects::GetStat ( );
__declspec(implementation_key(1414)) IVOLEObjectPtr IVOLEObjects::GetItem ( const _variant_t & NameOrIndex );
__declspec(implementation_key(1415)) short IVOLEObjects::GetCount16 ( );
__declspec(implementation_key(1416)) long IVOLEObjects::GetCount ( );
__declspec(implementation_key(1417)) IUnknownPtr IVOLEObjects::Get_NewEnum ( );
__declspec(implementation_key(1418)) _bstr_t IVHyperlink::GetDescription ( );
__declspec(implementation_key(1419)) void IVHyperlink::PutDescription ( _bstr_t lpbstrRet );
__declspec(implementation_key(1420)) IVApplicationPtr IVHyperlink::GetApplication ( );
__declspec(implementation_key(1421)) IVShapePtr IVHyperlink::GetShape ( );
__declspec(implementation_key(1422)) short IVHyperlink::GetObjectType ( );
__declspec(implementation_key(1423)) short IVHyperlink::GetStat ( );
__declspec(implementation_key(1424)) _bstr_t IVHyperlink::GetAddress ( );
__declspec(implementation_key(1425)) void IVHyperlink::PutAddress ( _bstr_t lpbstrRet );
__declspec(implementation_key(1426)) _bstr_t IVHyperlink::GetSubAddress ( );
__declspec(implementation_key(1427)) void IVHyperlink::PutSubAddress ( _bstr_t lpbstrRet );
__declspec(implementation_key(1428)) short IVHyperlink::GetNewWindow ( );
__declspec(implementation_key(1429)) void IVHyperlink::PutNewWindow ( short lpi2Ret );
__declspec(implementation_key(1430)) _bstr_t IVHyperlink::GetExtraInfo ( );
__declspec(implementation_key(1431)) void IVHyperlink::PutExtraInfo ( _bstr_t lpbstrRet );
__declspec(implementation_key(1432)) _bstr_t IVHyperlink::GetFrame ( );
__declspec(implementation_key(1433)) void IVHyperlink::PutFrame ( _bstr_t lpbstrRet );
__declspec(implementation_key(1434)) HRESULT IVHyperlink::AddToFavorites ( const _variant_t & FavoritesTitle );
__declspec(implementation_key(1435)) HRESULT IVHyperlink::Follow ( );
__declspec(implementation_key(1436)) HRESULT IVHyperlink::Delete ( );
__declspec(implementation_key(1437)) HRESULT IVHyperlink::Copy ( );
__declspec(implementation_key(1438)) _bstr_t IVHyperlink::CreateURL ( short CanonicalForm );
__declspec(implementation_key(1439)) short IVHyperlink::GetRow ( );
__declspec(implementation_key(1440)) short IVHyperlink::GetIsDefaultLink ( );
__declspec(implementation_key(1441)) void IVHyperlink::PutIsDefaultLink ( short lpi2Ret );
__declspec(implementation_key(1442)) _bstr_t IVHyperlink::GetName ( );
__declspec(implementation_key(1443)) void IVHyperlink::PutName ( _bstr_t lpLocaleSpecificName );
__declspec(implementation_key(1444)) _bstr_t IVHyperlink::GetNameU ( );
__declspec(implementation_key(1445)) void IVHyperlink::PutNameU ( _bstr_t lpLocaleIndepenentName );
__declspec(implementation_key(1446)) IVApplicationPtr IVHyperlinks::GetApplication ( );
__declspec(implementation_key(1447)) IVShapePtr IVHyperlinks::GetShape ( );
__declspec(implementation_key(1448)) short IVHyperlinks::GetObjectType ( );
__declspec(implementation_key(1449)) short IVHyperlinks::GetStat ( );
__declspec(implementation_key(1450)) IVHyperlinkPtr IVHyperlinks::GetItem ( const _variant_t & NameOrIndex );
__declspec(implementation_key(1451)) short IVHyperlinks::GetCount ( );
__declspec(implementation_key(1452)) IVHyperlinkPtr IVHyperlinks::Add ( );
__declspec(implementation_key(1453)) IUnknownPtr IVHyperlinks::Get_NewEnum ( );
__declspec(implementation_key(1454)) IVHyperlinkPtr IVHyperlinks::GetItemU ( const _variant_t & NameOrIndex );
__declspec(implementation_key(1455)) long IVAmbients::GetBackColor ( );
__declspec(implementation_key(1456)) _bstr_t IVAmbients::GetDisplayName ( );
__declspec(implementation_key(1457)) IDispatchPtr IVAmbients::GetFont ( );
__declspec(implementation_key(1458)) long IVAmbients::GetForeColor ( );
__declspec(implementation_key(1459)) long IVAmbients::GetLocaleID ( );
__declspec(implementation_key(1460)) VARIANT_BOOL IVAmbients::GetMessageReflect ( );
__declspec(implementation_key(1461)) _bstr_t IVAmbients::GetScaleUnits ( );
__declspec(implementation_key(1462)) short IVAmbients::GetTextAlign ( );
__declspec(implementation_key(1463)) VARIANT_BOOL IVAmbients::GetUserMode ( );
__declspec(implementation_key(1464)) VARIANT_BOOL IVAmbients::GetUIDead ( );
__declspec(implementation_key(1465)) VARIANT_BOOL IVAmbients::GetShowGrabHandles ( );
__declspec(implementation_key(1466)) VARIANT_BOOL IVAmbients::GetShowHatching ( );
__declspec(implementation_key(1467)) VARIANT_BOOL IVAmbients::GetDisplayAsDefault ( );
__declspec(implementation_key(1468)) VARIANT_BOOL IVAmbients::GetSupportsMnemonics ( );
__declspec(implementation_key(1469)) VARIANT_BOOL IVAmbients::GetAutoClip ( );
__declspec(implementation_key(1470)) long IVAmbients::GetAppearance ( );
__declspec(implementation_key(1471)) IVShapePtr IVAmbients::GetShape ( );
__declspec(implementation_key(1472)) IVShapePtr IVClientSite::GetShape ( );
__declspec(implementation_key(1473)) IVApplicationPtr IVCell::GetApplication ( );
__declspec(implementation_key(1474)) short IVCell::GetObjectType ( );
__declspec(implementation_key(1475)) short IVCell::GetError ( );
__declspec(implementation_key(1476)) _bstr_t IVCell::GetFormula ( );
__declspec(implementation_key(1477)) void IVCell::PutFormula ( _bstr_t lpbstrRet );
__declspec(implementation_key(1478)) void IVCell::PutFormulaForce ( _bstr_t _arg1 );
__declspec(implementation_key(1479)) HRESULT IVCell::GlueTo ( struct IVCell * CellObject );
__declspec(implementation_key(1480)) HRESULT IVCell::GlueToPos ( struct IVShape * SheetObject, double xPercent, double yPercent );
__declspec(implementation_key(1481)) double IVCell::GetResult ( const _variant_t & UnitsNameOrCode );
__declspec(implementation_key(1482)) void IVCell::PutResult ( const _variant_t & UnitsNameOrCode, double lpr8Ret );
__declspec(implementation_key(1483)) void IVCell::PutResultForce ( const _variant_t & UnitsNameOrCode, double _arg2 );
__declspec(implementation_key(1484)) double IVCell::GetResultIU ( );
__declspec(implementation_key(1485)) void IVCell::PutResultIU ( double lpr8Ret );
__declspec(implementation_key(1486)) void IVCell::PutResultIUForce ( double _arg1 );
__declspec(implementation_key(1487)) short IVCell::GetStat ( );
__declspec(implementation_key(1488)) short IVCell::GetUnits ( );
__declspec(implementation_key(1489)) _bstr_t IVCell::GetName ( );
__declspec(implementation_key(1490)) _bstr_t IVCell::GetLocalName ( );
__declspec(implementation_key(1491)) void IVCell::PutRowName ( _bstr_t lpbstrRet );
__declspec(implementation_key(1492)) IVDocumentPtr IVCell::GetDocument ( );
__declspec(implementation_key(1493)) IVShapePtr IVCell::GetShape ( );
__declspec(implementation_key(1494)) IVStylePtr IVCell::GetStyle ( );
__declspec(implementation_key(1495)) short IVCell::GetSection ( );
__declspec(implementation_key(1496)) short IVCell::GetRow ( );
__declspec(implementation_key(1497)) short IVCell::GetColumn ( );
__declspec(implementation_key(1498)) short IVCell::GetIsConstant ( );
__declspec(implementation_key(1499)) short IVCell::GetIsInherited ( );
__declspec(implementation_key(1500)) long IVCell::GetResultInt ( const _variant_t & UnitsNameOrCode, short fRound );
__declspec(implementation_key(1501)) void IVCell::PutResultFromInt ( const _variant_t & UnitsNameOrCode, long _arg2 );
__declspec(implementation_key(1502)) void IVCell::PutResultFromIntForce ( const _variant_t & UnitsNameOrCode, long _arg2 );
__declspec(implementation_key(1503)) _bstr_t IVCell::GetResultStr ( const _variant_t & UnitsNameOrCode );
__declspec(implementation_key(1504)) HRESULT IVCell::Trigger ( );
__declspec(implementation_key(1505)) _bstr_t IVCell::GetRowName ( );
__declspec(implementation_key(1506)) IVEventListPtr IVCell::GetEventList ( );
__declspec(implementation_key(1507)) short IVCell::GetPersistsEvents ( );
__declspec(implementation_key(1508)) IVRowPtr IVCell::GetContainingRow ( );
__declspec(implementation_key(1509)) _bstr_t IVCell::GetFormulaU ( );
__declspec(implementation_key(1510)) void IVCell::PutFormulaU ( _bstr_t lpbstrRet );
__declspec(implementation_key(1511)) void IVCell::PutFormulaForceU ( _bstr_t _arg1 );
__declspec(implementation_key(1512)) _bstr_t IVCell::GetRowNameU ( );
__declspec(implementation_key(1513)) void IVCell::PutRowNameU ( _bstr_t lpLocaleIndependentName );
__declspec(implementation_key(1514)) IVCellPtr IVCell::GetInheritedValueSource ( );
__declspec(implementation_key(1515)) IVCellPtr IVCell::GetInheritedFormulaSource ( );
__declspec(implementation_key(1516)) SAFEARRAY * IVCell::GetDependents ( );
__declspec(implementation_key(1517)) SAFEARRAY * IVCell::GetPrecedents ( );
__declspec(implementation_key(1518)) long IVCell::GetContainingPageID ( );
__declspec(implementation_key(1519)) long IVCell::GetContainingMasterID ( );
__declspec(implementation_key(1520)) _bstr_t IVCell::GetResultStrU ( const _variant_t & UnitsNameOrCode );
__declspec(implementation_key(1521)) IVApplicationPtr IVConnect::GetApplication ( );
__declspec(implementation_key(1522)) short IVConnect::GetStat ( );
__declspec(implementation_key(1523)) IVShapePtr IVConnect::GetFromSheet ( );
__declspec(implementation_key(1524)) IVShapePtr IVConnect::GetToSheet ( );
__declspec(implementation_key(1525)) IVCellPtr IVConnect::GetFromCell ( );
__declspec(implementation_key(1526)) IVCellPtr IVConnect::GetToCell ( );
__declspec(implementation_key(1527)) short IVConnect::GetFromPart ( );
__declspec(implementation_key(1528)) short IVConnect::GetToPart ( );
__declspec(implementation_key(1529)) short IVConnect::GetObjectType ( );
__declspec(implementation_key(1530)) short IVConnect::GetIndex16 ( );
__declspec(implementation_key(1531)) IVDocumentPtr IVConnect::GetDocument ( );
__declspec(implementation_key(1532)) long IVConnect::GetIndex ( );
__declspec(implementation_key(1533)) long IVConnect::GetContainingPageID ( );
__declspec(implementation_key(1534)) long IVConnect::GetContainingMasterID ( );
__declspec(implementation_key(1535)) IVApplicationPtr IVConnects::GetApplication ( );
__declspec(implementation_key(1536)) IVConnectPtr IVConnects::GetItem16 ( short Index );
__declspec(implementation_key(1537)) short IVConnects::GetCount16 ( );
__declspec(implementation_key(1538)) IVShapePtr IVConnects::GetFromSheet ( );
__declspec(implementation_key(1539)) short IVConnects::GetObjectType ( );
__declspec(implementation_key(1540)) IVDocumentPtr IVConnects::GetDocument ( );
__declspec(implementation_key(1541)) short IVConnects::GetStat ( );
__declspec(implementation_key(1542)) IVShapePtr IVConnects::GetToSheet ( );
__declspec(implementation_key(1543)) IVConnectPtr IVConnects::GetItem ( long Index );
__declspec(implementation_key(1544)) long IVConnects::GetCount ( );
__declspec(implementation_key(1545)) IUnknownPtr IVConnects::Get_NewEnum ( );
__declspec(implementation_key(1546)) IVApplicationPtr IVStyle::GetApplication ( );
__declspec(implementation_key(1547)) short IVStyle::GetStat ( );
__declspec(implementation_key(1548)) short IVStyle::GetObjectType ( );
__declspec(implementation_key(1549)) _bstr_t IVStyle::GetName ( );
__declspec(implementation_key(1550)) void IVStyle::PutName ( _bstr_t localeSpecificCellName );
__declspec(implementation_key(1551)) short IVStyle::GetIndex16 ( );
__declspec(implementation_key(1552)) IVDocumentPtr IVStyle::GetDocument ( );
__declspec(implementation_key(1553)) _bstr_t IVStyle::GetBasedOn ( );
__declspec(implementation_key(1554)) void IVStyle::PutBasedOn ( _bstr_t lpLocaleSpecificStyleName );
__declspec(implementation_key(1555)) _bstr_t IVStyle::GetTextBasedOn ( );
__declspec(implementation_key(1556)) void IVStyle::PutTextBasedOn ( _bstr_t lpLocaleSpecificStyleName );
__declspec(implementation_key(1557)) _bstr_t IVStyle::GetLineBasedOn ( );
__declspec(implementation_key(1558)) void IVStyle::PutLineBasedOn ( _bstr_t lpLocaleSpecificStyleName );
__declspec(implementation_key(1559)) _bstr_t IVStyle::GetFillBasedOn ( );
__declspec(implementation_key(1560)) void IVStyle::PutFillBasedOn ( _bstr_t lpLocaleSpecificStyleName );
__declspec(implementation_key(1561)) short IVStyle::GetIncludesText ( );
__declspec(implementation_key(1562)) void IVStyle::PutIncludesText ( short lpi2Ret );
__declspec(implementation_key(1563)) short IVStyle::GetIncludesLine ( );
__declspec(implementation_key(1564)) void IVStyle::PutIncludesLine ( short lpi2Ret );
__declspec(implementation_key(1565)) short IVStyle::GetIncludesFill ( );
__declspec(implementation_key(1566)) void IVStyle::PutIncludesFill ( short lpi2Ret );
__declspec(implementation_key(1567)) IVCellPtr IVStyle::GetCells ( _bstr_t localeSpecificCellName );
__declspec(implementation_key(1568)) HRESULT IVStyle::Delete ( );
__declspec(implementation_key(1569)) IVEventListPtr IVStyle::GetEventList ( );
__declspec(implementation_key(1570)) short IVStyle::GetPersistsEvents ( );
__declspec(implementation_key(1571)) short IVStyle::GetID16 ( );
__declspec(implementation_key(1572)) HRESULT IVStyle::GetFormulas ( SAFEARRAY * * SRCStream, SAFEARRAY * * formulaArray );
__declspec(implementation_key(1573)) HRESULT IVStyle::GetResults ( SAFEARRAY * * SRCStream, short Flags, SAFEARRAY * * UnitsNamesOrCodes, SAFEARRAY * * resultArray );
__declspec(implementation_key(1574)) short IVStyle::SetFormulas ( SAFEARRAY * * SRCStream, SAFEARRAY * * formulaArray, short Flags );
__declspec(implementation_key(1575)) short IVStyle::SetResults ( SAFEARRAY * * SRCStream, SAFEARRAY * * UnitsNamesOrCodes, SAFEARRAY * * resultArray, short Flags );
__declspec(implementation_key(1576)) long IVStyle::GetID ( );
__declspec(implementation_key(1577)) long IVStyle::GetIndex ( );
__declspec(implementation_key(1578)) IVSectionPtr IVStyle::GetSection ( short Index );
__declspec(implementation_key(1579)) short IVStyle::GetHidden ( );
__declspec(implementation_key(1580)) void IVStyle::PutHidden ( short lpi2Ret );
__declspec(implementation_key(1581)) _bstr_t IVStyle::GetNameU ( );
__declspec(implementation_key(1582)) void IVStyle::PutNameU ( _bstr_t lpLocaleIndependentName );
__declspec(implementation_key(1583)) IVCellPtr IVStyle::GetCellsU ( _bstr_t localeIndependentCellName );
__declspec(implementation_key(1584)) short IVStyle::GetCellExists ( _bstr_t localeSpecificCellName, short fExistsLocally );
__declspec(implementation_key(1585)) short IVStyle::GetCellExistsU ( _bstr_t localeIndependentCellName, short fExistsLocally );
__declspec(implementation_key(1586)) HRESULT IVStyle::GetFormulasU ( SAFEARRAY * * SRCStream, SAFEARRAY * * formulaArray );
__declspec(implementation_key(1587)) IVCellPtr IVStyle::GetCellsSRC ( short Section, short Row, short Column );
__declspec(implementation_key(1588)) short IVStyle::GetCellsSRCExists ( short Section, short Row, short Column, short fExistsLocally );
__declspec(implementation_key(1589)) IVApplicationPtr IVEventList::GetApplication ( );
__declspec(implementation_key(1590)) short IVEventList::GetObjectType ( );
__declspec(implementation_key(1591)) IVEventPtr IVEventList::GetItem ( short Index );
__declspec(implementation_key(1592)) short IVEventList::GetCount ( );
__declspec(implementation_key(1593)) IVEventPtr IVEventList::Add ( short EventCode, short Action, _bstr_t Target, _bstr_t TargetArgs );
__declspec(implementation_key(1594)) IVEventPtr IVEventList::AddAdvise ( short EventCode, const _variant_t & SinkIUnkOrIDisp, _bstr_t IIDSink, _bstr_t TargetArgs );
__declspec(implementation_key(1595)) IVEventPtr IVEventList::GetItemFromID ( long ObjectID );
__declspec(implementation_key(1596)) IUnknownPtr IVEventList::Get_NewEnum ( );
__declspec(implementation_key(1597)) IVApplicationPtr IVEvent::GetApplication ( );
__declspec(implementation_key(1598)) IVEventListPtr IVEvent::GetEventList ( );
__declspec(implementation_key(1599)) short IVEvent::GetIndex ( );
__declspec(implementation_key(1600)) short IVEvent::GetEvent ( );
__declspec(implementation_key(1601)) void IVEvent::PutEvent ( short lpi2Ret );
__declspec(implementation_key(1602)) short IVEvent::GetAction ( );
__declspec(implementation_key(1603)) void IVEvent::PutAction ( short lpi2Ret );
__declspec(implementation_key(1604)) _bstr_t IVEvent::GetTarget ( );
__declspec(implementation_key(1605)) void IVEvent::PutTarget ( _bstr_t lpbstrRet );
__declspec(implementation_key(1606)) _bstr_t IVEvent::GetTargetArgs ( );
__declspec(implementation_key(1607)) void IVEvent::PutTargetArgs ( _bstr_t lpbstrRet );
__declspec(implementation_key(1608)) HRESULT IVEvent::Trigger ( _bstr_t ContextString );
__declspec(implementation_key(1609)) HRESULT IVEvent::Delete ( );
__declspec(implementation_key(1610)) short IVEvent::GetObjectType ( );
__declspec(implementation_key(1611)) long IVEvent::GetID ( );
__declspec(implementation_key(1612)) short IVEvent::GetEnabled ( );
__declspec(implementation_key(1613)) void IVEvent::PutEnabled ( short lpi2Ret );
__declspec(implementation_key(1614)) short IVEvent::GetPersistable ( );
__declspec(implementation_key(1615)) short IVEvent::GetPersistent ( );
__declspec(implementation_key(1616)) void IVEvent::PutPersistent ( short lpi2Ret );
__declspec(implementation_key(1617)) SAFEARRAY * IVEvent::GetFilterObjects ( );
__declspec(implementation_key(1618)) HRESULT IVEvent::SetFilterObjects ( SAFEARRAY * * Objects );
__declspec(implementation_key(1619)) SAFEARRAY * IVEvent::GetFilterCommands ( );
__declspec(implementation_key(1620)) HRESULT IVEvent::SetFilterCommands ( SAFEARRAY * * Commands );
__declspec(implementation_key(1621)) SAFEARRAY * IVEvent::GetFilterSRC ( );
__declspec(implementation_key(1622)) HRESULT IVEvent::SetFilterSRC ( SAFEARRAY * * SRCStream );
__declspec(implementation_key(1623)) SAFEARRAY * IVEvent::GetFilterActions ( );
__declspec(implementation_key(1624)) HRESULT IVEvent::SetFilterActions ( SAFEARRAY * * filterActionStream );
__declspec(implementation_key(1625)) HRESULT IVCharacters::AddCustomField ( _bstr_t Formula, short Format );
__declspec(implementation_key(1626)) HRESULT IVCharacters::AddField ( short Category, short Code, short Format );
__declspec(implementation_key(1627)) IVApplicationPtr IVCharacters::GetApplication ( );
__declspec(implementation_key(1628)) long IVCharacters::GetBegin ( );
__declspec(implementation_key(1629)) void IVCharacters::PutBegin ( long lpi4Ret );
__declspec(implementation_key(1630)) long IVCharacters::GetCharCount ( );
__declspec(implementation_key(1631)) void IVCharacters::PutCharProps ( short CellIndex, short _arg2 );
__declspec(implementation_key(1632)) short IVCharacters::GetCharPropsRow ( short BiasLorR );
__declspec(implementation_key(1633)) HRESULT IVCharacters::Copy ( );
__declspec(implementation_key(1634)) HRESULT IVCharacters::Cut ( );
__declspec(implementation_key(1635)) short IVCharacters::GetObjectType ( );
__declspec(implementation_key(1636)) long IVCharacters::GetEnd ( );
__declspec(implementation_key(1637)) void IVCharacters::PutEnd ( long lpi4Ret );
__declspec(implementation_key(1638)) short IVCharacters::GetFieldCategory ( );
__declspec(implementation_key(1639)) short IVCharacters::GetFieldCode ( );
__declspec(implementation_key(1640)) short IVCharacters::GetFieldFormat ( );
__declspec(implementation_key(1641)) _bstr_t IVCharacters::GetFieldFormula ( );
__declspec(implementation_key(1642)) short IVCharacters::GetIsField ( );
__declspec(implementation_key(1643)) void IVCharacters::PutParaProps ( short CellIndex, short _arg2 );
__declspec(implementation_key(1644)) short IVCharacters::GetParaPropsRow ( short BiasLorR );
__declspec(implementation_key(1645)) HRESULT IVCharacters::Paste ( );
__declspec(implementation_key(1646)) short IVCharacters::GetTabPropsRow ( short BiasLorR );
__declspec(implementation_key(1647)) long IVCharacters::GetRunBegin ( short RunType );
__declspec(implementation_key(1648)) long IVCharacters::GetRunEnd ( short RunType );
__declspec(implementation_key(1649)) IVShapePtr IVCharacters::GetShape ( );
__declspec(implementation_key(1650)) short IVCharacters::GetStat ( );
__declspec(implementation_key(1651)) _bstr_t IVCharacters::GetTextAsString ( );
__declspec(implementation_key(1652)) void IVCharacters::PutText ( const _variant_t & lpvarRet );
__declspec(implementation_key(1653)) IVDocumentPtr IVCharacters::GetDocument ( );
__declspec(implementation_key(1654)) IVEventListPtr IVCharacters::GetEventList ( );
__declspec(implementation_key(1655)) short IVCharacters::GetPersistsEvents ( );
__declspec(implementation_key(1656)) _variant_t IVCharacters::GetText ( );
__declspec(implementation_key(1657)) HRESULT IVCharacters::AddCustomFieldU ( _bstr_t Formula, short Format );
__declspec(implementation_key(1658)) _bstr_t IVCharacters::GetFieldFormulaU ( );
__declspec(implementation_key(1659)) HRESULT IVCharacters::Delete ( );
__declspec(implementation_key(1660)) HRESULT IVCharacters::AddFieldEx ( enum VisFieldCategories Category, enum VisFieldCodes Code, enum VisFieldFormats Format, long LangID, long CalendarID );
__declspec(implementation_key(1661)) long IVCharacters::GetContainingPageID ( );
__declspec(implementation_key(1662)) long IVCharacters::GetContainingMasterID ( );
__declspec(implementation_key(1663)) IVApplicationPtr IVStyles::GetApplication ( );
__declspec(implementation_key(1664)) short IVStyles::GetObjectType ( );
__declspec(implementation_key(1665)) IVStylePtr IVStyles::GetItem ( const _variant_t & NameOrIndex );
__declspec(implementation_key(1666)) short IVStyles::GetCount16 ( );
__declspec(implementation_key(1667)) IVDocumentPtr IVStyles::GetDocument ( );
__declspec(implementation_key(1668)) IVStylePtr IVStyles::Add ( _bstr_t StyleName, _bstr_t BasedOn, short fIncludesText, short fIncludesLine, short fIncludesFill );
__declspec(implementation_key(1669)) short IVStyles::GetStat ( );
__declspec(implementation_key(1670)) IVEventListPtr IVStyles::GetEventList ( );
__declspec(implementation_key(1671)) short IVStyles::GetPersistsEvents ( );
__declspec(implementation_key(1672)) IVStylePtr IVStyles::GetItemFromID16 ( short ObjectID );
__declspec(implementation_key(1673)) HRESULT IVStyles::GetNames ( SAFEARRAY * * localeSpecificNameArray );
__declspec(implementation_key(1674)) long IVStyles::GetCount ( );
__declspec(implementation_key(1675)) IVStylePtr IVStyles::GetItemFromID ( long ObjectID );
__declspec(implementation_key(1676)) IVStylePtr IVStyles::GetItemU ( const _variant_t & NameOrIndex );
__declspec(implementation_key(1677)) HRESULT IVStyles::GetNamesU ( SAFEARRAY * * localeIndependentNameArray );
__declspec(implementation_key(1678)) IUnknownPtr IVStyles::Get_NewEnum ( );
__declspec(implementation_key(1679)) IVDocumentPtr IVDocuments::Add ( _bstr_t FileName );
__declspec(implementation_key(1680)) IVDocumentPtr IVDocuments::Open ( _bstr_t FileName );
__declspec(implementation_key(1681)) IVApplicationPtr IVDocuments::GetApplication ( );
__declspec(implementation_key(1682)) short IVDocuments::GetObjectType ( );
__declspec(implementation_key(1683)) IVDocumentPtr IVDocuments::GetItem ( const _variant_t & NameOrIndex );
__declspec(implementation_key(1684)) short IVDocuments::GetCount ( );
__declspec(implementation_key(1685)) IVDocumentPtr IVDocuments::OpenEx ( _bstr_t FileName, short Flags );
__declspec(implementation_key(1686)) IVEventListPtr IVDocuments::GetEventList ( );
__declspec(implementation_key(1687)) short IVDocuments::GetPersistsEvents ( );
__declspec(implementation_key(1688)) HRESULT IVDocuments::GetNames ( SAFEARRAY * * NameArray );
__declspec(implementation_key(1689)) IUnknownPtr IVDocuments::Get_NewEnum ( );
__declspec(implementation_key(1690)) IVDocumentPtr IVDocuments::GetItemFromID ( long ObjectID );
__declspec(implementation_key(1691)) VARIANT_BOOL IVDocuments::CanCheckOut ( _bstr_t FileName );
__declspec(implementation_key(1692)) HRESULT IVDocuments::CheckOut ( _bstr_t FileName );
__declspec(implementation_key(1693)) IVDocumentPtr IVDocuments::AddEx ( _bstr_t FileName, enum VisMeasurementSystem MeasurementSystem, long Flags, long LangID );
__declspec(implementation_key(1694)) IVApplicationPtr IVSection::GetApplication ( );
__declspec(implementation_key(1695)) IVShapePtr IVSection::GetShape ( );
__declspec(implementation_key(1696)) IVStylePtr IVSection::GetStyle ( );
__declspec(implementation_key(1697)) short IVSection::GetIndex ( );
__declspec(implementation_key(1698)) short IVSection::GetObjectType ( );
__declspec(implementation_key(1699)) IVEventListPtr IVSection::GetEventList ( );
__declspec(implementation_key(1700)) short IVSection::GetPersistsEvents ( );
__declspec(implementation_key(1701)) short IVSection::GetStat ( );
__declspec(implementation_key(1702)) short IVSection::GetCount ( );
__declspec(implementation_key(1703)) IVRowPtr IVSection::GetRow ( short Index );
__declspec(implementation_key(1704)) long IVSection::GetContainingPageID ( );
__declspec(implementation_key(1705)) long IVSection::GetContainingMasterID ( );
__declspec(implementation_key(1706)) IVApplicationPtr IVRow::GetApplication ( );
__declspec(implementation_key(1707)) IVShapePtr IVRow::GetShape ( );
__declspec(implementation_key(1708)) IVStylePtr IVRow::GetStyle ( );
__declspec(implementation_key(1709)) IVSectionPtr IVRow::GetContainingSection ( );
__declspec(implementation_key(1710)) short IVRow::GetIndex ( );
__declspec(implementation_key(1711)) short IVRow::GetObjectType ( );
__declspec(implementation_key(1712)) IVEventListPtr IVRow::GetEventList ( );
__declspec(implementation_key(1713)) short IVRow::GetPersistsEvents ( );
__declspec(implementation_key(1714)) short IVRow::GetStat ( );
__declspec(implementation_key(1715)) _bstr_t IVRow::GetName ( );
__declspec(implementation_key(1716)) void IVRow::PutName ( _bstr_t lpLocaleSpecificName );
__declspec(implementation_key(1717)) short IVRow::GetCount ( );
__declspec(implementation_key(1718)) IVCellPtr IVRow::GetCell ( const _variant_t & NameOrIndex );
__declspec(implementation_key(1719)) _bstr_t IVRow::GetNameU ( );
__declspec(implementation_key(1720)) void IVRow::PutNameU ( _bstr_t lpLocaleIndependentName );
__declspec(implementation_key(1721)) IVCellPtr IVRow::GetCellU ( const _variant_t & NameOrIndex );
__declspec(implementation_key(1722)) HRESULT IVRow::GetPolylineData ( short Flags, SAFEARRAY * * xyArray );
__declspec(implementation_key(1723)) long IVRow::GetContainingPageID ( );
__declspec(implementation_key(1724)) long IVRow::GetContainingMasterID ( );
__declspec(implementation_key(1725)) IVDocumentPtr IVPage::GetDocument ( );
__declspec(implementation_key(1726)) IVApplicationPtr IVPage::GetApplication ( );
__declspec(implementation_key(1727)) short IVPage::GetStat ( );
__declspec(implementation_key(1728)) short IVPage::GetBackground ( );
__declspec(implementation_key(1729)) void IVPage::PutBackground ( short lpi2Ret );
__declspec(implementation_key(1730)) HRESULT IVPage::old_Paste ( );
__declspec(implementation_key(1731)) HRESULT IVPage::old_PasteSpecial ( short Format );
__declspec(implementation_key(1732)) short IVPage::GetObjectType ( );
__declspec(implementation_key(1733)) IVShapePtr IVPage::DrawLine ( double xBegin, double yBegin, double xEnd, double yEnd );
__declspec(implementation_key(1734)) IVShapePtr IVPage::DrawRectangle ( double x1, double y1, double x2, double y2 );
__declspec(implementation_key(1735)) IVShapePtr IVPage::DrawOval ( double x1, double y1, double x2, double y2 );
__declspec(implementation_key(1736)) short IVPage::GetIndex ( );
__declspec(implementation_key(1737)) _bstr_t IVPage::GetName ( );
__declspec(implementation_key(1738)) void IVPage::PutName ( _bstr_t lpLocaleSpecificName );
__declspec(implementation_key(1739)) IVShapesPtr IVPage::GetShapes ( );
__declspec(implementation_key(1740)) IVShapePtr IVPage::Drop ( IUnknown * ObjectToDrop, double xPos, double yPos );
__declspec(implementation_key(1741)) IVShapePtr IVPage::AddGuide ( short Type, double xPos, double yPos );
__declspec(implementation_key(1742)) IVPagePtr IVPage::GetBackPageAsObj ( );
__declspec(implementation_key(1743)) void IVPage::PutBackPageFromName ( _bstr_t _arg1 );
__declspec(implementation_key(1744)) HRESULT IVPage::Print ( );
__declspec(implementation_key(1745)) IVShapePtr IVPage::Import ( _bstr_t FileName );
__declspec(implementation_key(1746)) HRESULT IVPage::Export ( _bstr_t FileName );
__declspec(implementation_key(1747)) IVLayersPtr IVPage::GetLayers ( );
__declspec(implementation_key(1748)) IVShapePtr IVPage::GetPageSheet ( );
__declspec(implementation_key(1749)) HRESULT IVPage::Delete ( short fRenumberPages );
__declspec(implementation_key(1750)) HRESULT IVPage::CenterDrawing ( );
__declspec(implementation_key(1751)) IVEventListPtr IVPage::GetEventList ( );
__declspec(implementation_key(1752)) short IVPage::GetPersistsEvents ( );
__declspec(implementation_key(1753)) IVShapePtr IVPage::DrawSpline ( SAFEARRAY * * xyArray, double Tolerance, short Flags );
__declspec(implementation_key(1754)) IVShapePtr IVPage::DrawBezier ( SAFEARRAY * * xyArray, short degree, short Flags );
__declspec(implementation_key(1755)) IVShapePtr IVPage::DrawPolyline ( SAFEARRAY * * xyArray, short Flags );
__declspec(implementation_key(1756)) IVShapePtr IVPage::InsertFromFile ( _bstr_t FileName, short Flags );
__declspec(implementation_key(1757)) IVShapePtr IVPage::InsertObject ( _bstr_t ClassOrProgID, short Flags );
__declspec(implementation_key(1758)) IVWindowPtr IVPage::OpenDrawWindow ( );
__declspec(implementation_key(1759)) short IVPage::DropMany ( SAFEARRAY * * ObjectsToInstance, SAFEARRAY * * xyArray, SAFEARRAY * * IDArray );
__declspec(implementation_key(1760)) HRESULT IVPage::GetFormulas ( SAFEARRAY * * SID_SRCStream, SAFEARRAY * * formulaArray );
__declspec(implementation_key(1761)) HRESULT IVPage::GetResults ( SAFEARRAY * * SID_SRCStream, short Flags, SAFEARRAY * * UnitsNamesOrCodes, SAFEARRAY * * resultArray );
__declspec(implementation_key(1762)) short IVPage::SetFormulas ( SAFEARRAY * * SID_SRCStream, SAFEARRAY * * formulaArray, short Flags );
__declspec(implementation_key(1763)) short IVPage::SetResults ( SAFEARRAY * * SID_SRCStream, SAFEARRAY * * UnitsNamesOrCodes, SAFEARRAY * * resultArray, short Flags );
__declspec(implementation_key(1764)) IVConnectsPtr IVPage::GetConnects ( );
__declspec(implementation_key(1765)) _variant_t IVPage::GetBackPage ( );
__declspec(implementation_key(1766)) void IVPage::PutBackPage ( const _variant_t & lpobjRet );
__declspec(implementation_key(1767)) HRESULT IVPage::Layout ( );
__declspec(implementation_key(1768)) HRESULT IVPage::BoundingBox ( short Flags, double * lpr8Left, double * lpr8Bottom, double * lpr8Right, double * lpr8Top );
__declspec(implementation_key(1769)) short IVPage::GetID16 ( );
__declspec(implementation_key(1770)) IVOLEObjectsPtr IVPage::GetOLEObjects ( );
__declspec(implementation_key(1771)) long IVPage::GetID ( );
__declspec(implementation_key(1772)) IVSelectionPtr IVPage::GetSpatialSearch ( double x, double y, short Relation, double Tolerance, short Flags );
__declspec(implementation_key(1773)) _bstr_t IVPage::GetNameU ( );
__declspec(implementation_key(1774)) void IVPage::PutNameU ( _bstr_t lpLocaleIndependentName );
__declspec(implementation_key(1775)) short IVPage::DropManyU ( SAFEARRAY * * ObjectsToInstance, SAFEARRAY * * xyArray, SAFEARRAY * * IDArray );
__declspec(implementation_key(1776)) HRESULT IVPage::GetFormulasU ( SAFEARRAY * * SID_SRCStream, SAFEARRAY * * formulaArray );
__declspec(implementation_key(1777)) IVShapePtr IVPage::DrawNURBS ( short degree, short Flags, SAFEARRAY * * xyArray, SAFEARRAY * * knots, const _variant_t & weights );
__declspec(implementation_key(1778)) IPictureDisp * IVPage::GetPicture ( );
__declspec(implementation_key(1779)) void IVPage::PutIndex ( short lpi2Ret );
__declspec(implementation_key(1780)) long IVPage::GetPrintTileCount ( );
__declspec(implementation_key(1781)) HRESULT IVPage::PrintTile ( long nTile );
__declspec(implementation_key(1782)) HRESULT IVPage::ResizeToFitContents ( );
__declspec(implementation_key(1783)) HRESULT IVPage::Paste ( const _variant_t & Flags );
__declspec(implementation_key(1784)) HRESULT IVPage::PasteSpecial ( long Format, const _variant_t & Link, const _variant_t & DisplayAsIcon );
__declspec(implementation_key(1785)) IVSelectionPtr IVPage::CreateSelection ( enum VisSelectionTypes SelType, enum VisSelectMode IterationMode, const _variant_t & Data );
__declspec(implementation_key(1786)) enum VisPageTypes IVPage::GetType ( );
__declspec(implementation_key(1787)) IVShapePtr IVPage::DrawArcByThreePoints ( double xBegin, double yBegin, double xEnd, double yEnd, double xControl, double yControl );
__declspec(implementation_key(1788)) IVShapePtr IVPage::DrawQuarterArc ( double xBegin, double yBegin, double xEnd, double yEnd, enum VisArcSweepFlags SweepFlag );
__declspec(implementation_key(1789)) IVShapePtr IVPage::DrawCircularArc ( double xCenter, double yCenter, double Radius, double StartAngle, double EndAngle );
__declspec(implementation_key(1790)) long IVPage::GetReviewerID ( );
__declspec(implementation_key(1791)) IVPagePtr IVPage::GetOriginalPage ( );
__declspec(implementation_key(1792)) HRESULT IVPage::GetShapesLinkedToData ( long DataRecordsetID, SAFEARRAY * * ShapeIDs );
__declspec(implementation_key(1793)) HRESULT IVPage::GetShapesLinkedToDataRow ( long DataRecordsetID, long DataRowID, SAFEARRAY * * ShapeIDs );
__declspec(implementation_key(1794)) HRESULT IVPage::LinkShapesToDataRows ( long DataRecordsetID, SAFEARRAY * * DataRowIDs, SAFEARRAY * * ShapeIDs, VARIANT_BOOL ApplyDataGraphicAfterLink );
__declspec(implementation_key(1795)) HRESULT IVPage::ShapeIDsToUniqueIDs ( SAFEARRAY * * ShapeIDs, enum VisUniqueIDArgs UniqueIDArgs, SAFEARRAY * * GUIDs );
__declspec(implementation_key(1796)) HRESULT IVPage::UniqueIDsToShapeIDs ( SAFEARRAY * * GUIDs, SAFEARRAY * * ShapeIDs );
__declspec(implementation_key(1797)) IVShapePtr IVPage::DropLinked ( IUnknown * ObjectToDrop, double x, double y, long DataRecordsetID, long DataRowID, VARIANT_BOOL ApplyDataGraphicAfterLink );
__declspec(implementation_key(1798)) long IVPage::DropManyLinkedU ( SAFEARRAY * * ObjectsToInstance, SAFEARRAY * * XYs, long DataRecordsetID, SAFEARRAY * * DataRowIDs, VARIANT_BOOL ApplyDataGraphicAfterLink, SAFEARRAY * * ShapeIDs );
__declspec(implementation_key(1799)) _variant_t IVPage::GetThemeColors ( );
__declspec(implementation_key(1800)) void IVPage::PutThemeColors ( const _variant_t & pVar );
__declspec(implementation_key(1801)) _variant_t IVPage::GetThemeEffects ( );
__declspec(implementation_key(1802)) void IVPage::PutThemeEffects ( const _variant_t & pVar );
__declspec(implementation_key(1803)) IVApplicationPtr IVLayer::GetApplication ( );
__declspec(implementation_key(1804)) IVDocumentPtr IVLayer::GetDocument ( );
__declspec(implementation_key(1805)) IVPagePtr IVLayer::GetPage ( );
__declspec(implementation_key(1806)) IVMasterPtr IVLayer::GetMaster ( );
__declspec(implementation_key(1807)) short IVLayer::GetIndex ( );
__declspec(implementation_key(1808)) short IVLayer::GetRow ( );
__declspec(implementation_key(1809)) HRESULT IVLayer::Add ( struct IVShape * SheetObject, short fPresMems );
__declspec(implementation_key(1810)) HRESULT IVLayer::Remove ( struct IVShape * SheetObject, short fPresMems );
__declspec(implementation_key(1811)) HRESULT IVLayer::Delete ( short fDeleteShapes );
__declspec(implementation_key(1812)) _bstr_t IVLayer::GetName ( );
__declspec(implementation_key(1813)) void IVLayer::PutName ( _bstr_t lpLocaleSpecificName );
__declspec(implementation_key(1814)) IVCellPtr IVLayer::GetCellsC ( short Column );
__declspec(implementation_key(1815)) short IVLayer::GetObjectType ( );
__declspec(implementation_key(1816)) short IVLayer::GetStat ( );
__declspec(implementation_key(1817)) IVEventListPtr IVLayer::GetEventList ( );
__declspec(implementation_key(1818)) short IVLayer::GetPersistsEvents ( );
__declspec(implementation_key(1819)) _bstr_t IVLayer::GetNameU ( );
__declspec(implementation_key(1820)) void IVLayer::PutNameU ( _bstr_t lpLocaleIndependentName );
__declspec(implementation_key(1821)) IVApplicationPtr IVLayers::GetApplication ( );
__declspec(implementation_key(1822)) IVDocumentPtr IVLayers::GetDocument ( );
__declspec(implementation_key(1823)) IVPagePtr IVLayers::GetPage ( );
__declspec(implementation_key(1824)) IVMasterPtr IVLayers::GetMaster ( );
__declspec(implementation_key(1825)) short IVLayers::GetCount ( );
__declspec(implementation_key(1826)) IVLayerPtr IVLayers::GetItem ( const _variant_t & NameOrIndex );
__declspec(implementation_key(1827)) IVLayerPtr IVLayers::Add ( _bstr_t LayerName );
__declspec(implementation_key(1828)) short IVLayers::GetObjectType ( );
__declspec(implementation_key(1829)) short IVLayers::GetStat ( );
__declspec(implementation_key(1830)) IVEventListPtr IVLayers::GetEventList ( );
__declspec(implementation_key(1831)) short IVLayers::GetPersistsEvents ( );
__declspec(implementation_key(1832)) IVLayerPtr IVLayers::GetItemU ( const _variant_t & NameOrIndex );
__declspec(implementation_key(1833)) IUnknownPtr IVLayers::Get_NewEnum ( );
__declspec(implementation_key(1834)) IVApplicationPtr IVSelection::GetApplication ( );
__declspec(implementation_key(1835)) short IVSelection::GetStat ( );
__declspec(implementation_key(1836)) short IVSelection::GetObjectType ( );
__declspec(implementation_key(1837)) IVShapePtr IVSelection::GetItem16 ( short Index );
__declspec(implementation_key(1838)) short IVSelection::GetCount16 ( );
__declspec(implementation_key(1839)) HRESULT IVSelection::Export ( _bstr_t FileName );
__declspec(implementation_key(1840)) IVDocumentPtr IVSelection::GetDocument ( );
__declspec(implementation_key(1841)) IVPagePtr IVSelection::GetContainingPage ( );
__declspec(implementation_key(1842)) IVMasterPtr IVSelection::GetContainingMaster ( );
__declspec(implementation_key(1843)) IVShapePtr IVSelection::GetContainingShape ( );
__declspec(implementation_key(1844)) HRESULT IVSelection::BringForward ( );
__declspec(implementation_key(1845)) HRESULT IVSelection::BringToFront ( );
__declspec(implementation_key(1846)) HRESULT IVSelection::SendBackward ( );
__declspec(implementation_key(1847)) HRESULT IVSelection::SendToBack ( );
__declspec(implementation_key(1848)) _bstr_t IVSelection::GetStyle ( );
__declspec(implementation_key(1849)) void IVSelection::PutStyle ( _bstr_t lpLocaleSpecificStyleName );
__declspec(implementation_key(1850)) void IVSelection::PutStyleKeepFmt ( _bstr_t _arg1 );
__declspec(implementation_key(1851)) _bstr_t IVSelection::GetLineStyle ( );
__declspec(implementation_key(1852)) void IVSelection::PutLineStyle ( _bstr_t lpLocaleSpecificStyleName );
__declspec(implementation_key(1853)) void IVSelection::PutLineStyleKeepFmt ( _bstr_t _arg1 );
__declspec(implementation_key(1854)) _bstr_t IVSelection::GetFillStyle ( );
__declspec(implementation_key(1855)) void IVSelection::PutFillStyle ( _bstr_t lpLocaleSpecificStyleName );
__declspec(implementation_key(1856)) void IVSelection::PutFillStyleKeepFmt ( _bstr_t _arg1 );
__declspec(implementation_key(1857)) _bstr_t IVSelection::GetTextStyle ( );
__declspec(implementation_key(1858)) void IVSelection::PutTextStyle ( _bstr_t lpLocaleSpecificStyleName );
__declspec(implementation_key(1859)) void IVSelection::PutTextStyleKeepFmt ( _bstr_t _arg1 );
__declspec(implementation_key(1860)) HRESULT IVSelection::Combine ( );
__declspec(implementation_key(1861)) HRESULT IVSelection::Fragment ( );
__declspec(implementation_key(1862)) HRESULT IVSelection::Intersect ( );
__declspec(implementation_key(1863)) HRESULT IVSelection::Subtract ( );
__declspec(implementation_key(1864)) HRESULT IVSelection::Union ( );
__declspec(implementation_key(1865)) HRESULT IVSelection::FlipHorizontal ( );
__declspec(implementation_key(1866)) HRESULT IVSelection::FlipVertical ( );
__declspec(implementation_key(1867)) HRESULT IVSelection::ReverseEnds ( );
__declspec(implementation_key(1868)) HRESULT IVSelection::Rotate90 ( );
__declspec(implementation_key(1869)) HRESULT IVSelection::old_Copy ( );
__declspec(implementation_key(1870)) HRESULT IVSelection::old_Cut ( );
__declspec(implementation_key(1871)) HRESULT IVSelection::Delete ( );
__declspec(implementation_key(1872)) HRESULT IVSelection::VoidDuplicate ( );
__declspec(implementation_key(1873)) HRESULT IVSelection::VoidGroup ( );
__declspec(implementation_key(1874)) HRESULT IVSelection::ConvertToGroup ( );
__declspec(implementation_key(1875)) HRESULT IVSelection::Ungroup ( );
__declspec(implementation_key(1876)) HRESULT IVSelection::SelectAll ( );
__declspec(implementation_key(1877)) HRESULT IVSelection::DeselectAll ( );
__declspec(implementation_key(1878)) HRESULT IVSelection::Select ( struct IVShape * SheetObject, short SelectAction );
__declspec(implementation_key(1879)) IVEventListPtr IVSelection::GetEventList ( );
__declspec(implementation_key(1880)) short IVSelection::GetPersistsEvents ( );
__declspec(implementation_key(1881)) HRESULT IVSelection::Trim ( );
__declspec(implementation_key(1882)) HRESULT IVSelection::Join ( );
__declspec(implementation_key(1883)) HRESULT IVSelection::FitCurve ( double Tolerance, short Flags );
__declspec(implementation_key(1884)) HRESULT IVSelection::Layout ( );
__declspec(implementation_key(1885)) HRESULT IVSelection::BoundingBox ( short Flags, double * lpr8Left, double * lpr8Bottom, double * lpr8Right, double * lpr8Top );
__declspec(implementation_key(1886)) IVShapePtr IVSelection::GetItem ( long Index );
__declspec(implementation_key(1887)) long IVSelection::GetCount ( );
__declspec(implementation_key(1888)) IVShapePtr IVSelection::DrawRegion ( double Tolerance, short Flags, const _variant_t & x, const _variant_t & y, const _variant_t & ResultsMaster );
__declspec(implementation_key(1889)) IUnknownPtr IVSelection::Get_NewEnum ( );
__declspec(implementation_key(1890)) long IVSelection::GetIterationMode ( );
__declspec(implementation_key(1891)) void IVSelection::PutIterationMode ( long lpi4Ret );
__declspec(implementation_key(1892)) short IVSelection::GetItemStatus ( long Index );
__declspec(implementation_key(1893)) IVShapePtr IVSelection::GetPrimaryItem ( );
__declspec(implementation_key(1894)) IPictureDisp * IVSelection::GetPicture ( );
__declspec(implementation_key(1895)) IVShapePtr IVSelection::Group ( );
__declspec(implementation_key(1896)) HRESULT IVSelection::SwapEnds ( );
__declspec(implementation_key(1897)) HRESULT IVSelection::AddToGroup ( );
__declspec(implementation_key(1898)) HRESULT IVSelection::RemoveFromGroup ( );
__declspec(implementation_key(1899)) IVSelectionPtr IVSelection::Duplicate ( );
__declspec(implementation_key(1900)) HRESULT IVSelection::Copy ( const _variant_t & Flags );
__declspec(implementation_key(1901)) HRESULT IVSelection::Cut ( const _variant_t & Flags );
__declspec(implementation_key(1902)) HRESULT IVSelection::Move ( double dx, double dy, const _variant_t & UnitsNameOrCode );
__declspec(implementation_key(1903)) HRESULT IVSelection::Rotate ( double Angle, const _variant_t & AngleUnitsNameOrCode, VARIANT_BOOL BlastGuards, enum VisRotationTypes RotationType, double PinX, double PinY, const _variant_t & PinUnitsNameOrCode );
__declspec(implementation_key(1904)) HRESULT IVSelection::Align ( enum VisHorizontalAlignTypes AlignHorizontal, enum VisVerticalAlignTypes AlignVertical, VARIANT_BOOL GlueToGuide );
__declspec(implementation_key(1905)) HRESULT IVSelection::Distribute ( enum VisDistributeTypes Distribute, VARIANT_BOOL GlueToGuide );
__declspec(implementation_key(1906)) HRESULT IVSelection::UpdateAlignmentBox ( );
__declspec(implementation_key(1907)) HRESULT IVSelection::Offset ( double Distance );
__declspec(implementation_key(1908)) HRESULT IVSelection::ConnectShapes ( );
__declspec(implementation_key(1909)) HRESULT IVSelection::Flip ( enum VisFlipDirection FlipDirection, enum VisFlipTypes FlipType, VARIANT_BOOL BlastGuards, double PinX, double PinY, const _variant_t & PinUnitsNameOrCode );
__declspec(implementation_key(1910)) long IVSelection::GetContainingPageID ( );
__declspec(implementation_key(1911)) long IVSelection::GetContainingMasterID ( );
__declspec(implementation_key(1912)) HRESULT IVSelection::LinkToData ( long DataRecordsetID, long DataRowID, VARIANT_BOOL ApplyDataGraphicAfterLink );
__declspec(implementation_key(1913)) HRESULT IVSelection::BreakLinkToData ( long DataRecordsetID );
__declspec(implementation_key(1914)) HRESULT IVSelection::GetIDs ( SAFEARRAY * * ShapeIDs );
__declspec(implementation_key(1915)) long IVSelection::AutomaticLink ( long DataRecordsetID, SAFEARRAY * * ColumnNames, SAFEARRAY * * AutoLinkFieldTypes, SAFEARRAY * * FieldNames, long AutoLinkBehavior, SAFEARRAY * * ShapeIDs );
__declspec(implementation_key(1916)) IVMasterPtr IVSelection::GetDataGraphic ( );
__declspec(implementation_key(1917)) void IVSelection::PutDataGraphic ( struct IVMaster * DataGraphic );
__declspec(implementation_key(1918)) IVApplicationPtr IVPages::GetApplication ( );
__declspec(implementation_key(1919)) short IVPages::GetObjectType ( );
__declspec(implementation_key(1920)) IVPagePtr IVPages::GetItem ( const _variant_t & NameOrIndex );
__declspec(implementation_key(1921)) short IVPages::GetCount ( );
__declspec(implementation_key(1922)) IVPagePtr IVPages::Add ( );
__declspec(implementation_key(1923)) IVDocumentPtr IVPages::GetDocument ( );
__declspec(implementation_key(1924)) short IVPages::GetStat ( );
__declspec(implementation_key(1925)) IVEventListPtr IVPages::GetEventList ( );
__declspec(implementation_key(1926)) short IVPages::GetPersistsEvents ( );
__declspec(implementation_key(1927)) HRESULT IVPages::GetNames ( SAFEARRAY * * localeSpecificNameArray );
__declspec(implementation_key(1928)) IVPagePtr IVPages::GetItemU ( const _variant_t & NameOrIndex );
__declspec(implementation_key(1929)) HRESULT IVPages::GetNamesU ( SAFEARRAY * * localeIndependentNameArray );
__declspec(implementation_key(1930)) IUnknownPtr IVPages::Get_NewEnum ( );
__declspec(implementation_key(1931)) IVPagePtr IVPages::GetItemFromID ( long nID );
__declspec(implementation_key(1932)) IVApplicationPtr IVWindow::GetApplication ( );
__declspec(implementation_key(1933)) short IVWindow::GetStat ( );
__declspec(implementation_key(1934)) short IVWindow::GetObjectType ( );
__declspec(implementation_key(1935)) HRESULT IVWindow::Activate ( );
__declspec(implementation_key(1936)) short IVWindow::GetType ( );
__declspec(implementation_key(1937)) IVDocumentPtr IVWindow::GetDocument ( );
__declspec(implementation_key(1938)) IVPagePtr IVWindow::GetPageAsObj ( );
__declspec(implementation_key(1939)) void IVWindow::PutPageFromName ( _bstr_t _arg1 );
__declspec(implementation_key(1940)) double IVWindow::GetZoom ( );
__declspec(implementation_key(1941)) void IVWindow::PutZoom ( double lpr8Ret );
__declspec(implementation_key(1942)) HRESULT IVWindow::Close ( );
__declspec(implementation_key(1943)) HRESULT IVWindow::SelectAll ( );
__declspec(implementation_key(1944)) HRESULT IVWindow::DeselectAll ( );
__declspec(implementation_key(1945)) IVSelectionPtr IVWindow::GetSelection ( );
__declspec(implementation_key(1946)) HRESULT IVWindow::Select ( struct IVShape * SheetObject, short SelectAction );
__declspec(implementation_key(1947)) short IVWindow::GetIndex ( );
__declspec(implementation_key(1948)) HRESULT IVWindow::Cut ( );
__declspec(implementation_key(1949)) HRESULT IVWindow::Copy ( );
__declspec(implementation_key(1950)) HRESULT IVWindow::Paste ( );
__declspec(implementation_key(1951)) HRESULT IVWindow::Delete ( );
__declspec(implementation_key(1952)) HRESULT IVWindow::Duplicate ( );
__declspec(implementation_key(1953)) HRESULT IVWindow::Group ( );
__declspec(implementation_key(1954)) HRESULT IVWindow::Union ( );
__declspec(implementation_key(1955)) HRESULT IVWindow::Combine ( );
__declspec(implementation_key(1956)) HRESULT IVWindow::Fragment ( );
__declspec(implementation_key(1957)) HRESULT IVWindow::AddToGroup ( );
__declspec(implementation_key(1958)) HRESULT IVWindow::RemoveFromGroup ( );
__declspec(implementation_key(1959)) short IVWindow::GetSubType ( );
__declspec(implementation_key(1960)) HRESULT IVWindow::Intersect ( );
__declspec(implementation_key(1961)) HRESULT IVWindow::Subtract ( );
__declspec(implementation_key(1962)) IVEventListPtr IVWindow::GetEventList ( );
__declspec(implementation_key(1963)) short IVWindow::GetPersistsEvents ( );
__declspec(implementation_key(1964)) short IVWindow::GetWindowHandle ( );
__declspec(implementation_key(1965)) long IVWindow::GetWindowHandle32 ( );
__declspec(implementation_key(1966)) HRESULT IVWindow::Trim ( );
__declspec(implementation_key(1967)) HRESULT IVWindow::Join ( );
__declspec(implementation_key(1968)) short IVWindow::GetShowRulers ( );
__declspec(implementation_key(1969)) void IVWindow::PutShowRulers ( short lpi2Ret );
__declspec(implementation_key(1970)) short IVWindow::GetShowGrid ( );
__declspec(implementation_key(1971)) void IVWindow::PutShowGrid ( short lpi2Ret );
__declspec(implementation_key(1972)) short IVWindow::GetShowGuides ( );
__declspec(implementation_key(1973)) void IVWindow::PutShowGuides ( short lpi2Ret );
__declspec(implementation_key(1974)) short IVWindow::GetShowConnectPoints ( );
__declspec(implementation_key(1975)) void IVWindow::PutShowConnectPoints ( short lpi2Ret );
__declspec(implementation_key(1976)) short IVWindow::GetShowPageBreaks ( );
__declspec(implementation_key(1977)) void IVWindow::PutShowPageBreaks ( short lpi2Ret );
__declspec(implementation_key(1978)) _variant_t IVWindow::GetPage ( );
__declspec(implementation_key(1979)) void IVWindow::PutPage ( const _variant_t & lpobjRet );
__declspec(implementation_key(1980)) HRESULT IVWindow::DockedStencils ( SAFEARRAY * * NameArray );
__declspec(implementation_key(1981)) _variant_t IVWindow::GetMaster ( );
__declspec(implementation_key(1982)) short IVWindow::GetShowScrollBars ( );
__declspec(implementation_key(1983)) void IVWindow::PutShowScrollBars ( short lpi2Ret );
__declspec(implementation_key(1984)) VARIANT_BOOL IVWindow::GetVisible ( );
__declspec(implementation_key(1985)) void IVWindow::PutVisible ( VARIANT_BOOL pbVisible );
__declspec(implementation_key(1986)) _bstr_t IVWindow::GetCaption ( );
__declspec(implementation_key(1987)) void IVWindow::PutCaption ( _bstr_t pbstrCaption );
__declspec(implementation_key(1988)) IVWindowsPtr IVWindow::GetWindows ( );
__declspec(implementation_key(1989)) HRESULT IVWindow::Scroll ( long nxFlags, long nyFlags );
__declspec(implementation_key(1990)) HRESULT IVWindow::ScrollViewTo ( double x, double y );
__declspec(implementation_key(1991)) HRESULT IVWindow::GetViewRect ( double * pdLeft, double * pdTop, double * pdWidth, double * pdHeight );
__declspec(implementation_key(1992)) HRESULT IVWindow::SetViewRect ( double dLeft, double dTop, double dWidth, double dHeight );
__declspec(implementation_key(1993)) HRESULT IVWindow::GetWindowRect ( long * pnLeft, long * pnTop, long * pnWidth, long * pnHeight );
__declspec(implementation_key(1994)) HRESULT IVWindow::SetWindowRect ( long nLeft, long nTop, long nWidth, long nHeight );
__declspec(implementation_key(1995)) long IVWindow::GetWindowState ( );
__declspec(implementation_key(1996)) void IVWindow::PutWindowState ( long pnState );
__declspec(implementation_key(1997)) long IVWindow::GetViewFit ( );
__declspec(implementation_key(1998)) void IVWindow::PutViewFit ( long pnFit );
__declspec(implementation_key(1999)) VARIANT_BOOL IVWindow::GetIsEditingText ( );
__declspec(implementation_key(2000)) VARIANT_BOOL IVWindow::GetIsEditingOLE ( );
__declspec(implementation_key(2001)) IVWindowsPtr IVWindow::GetParent ( );
__declspec(implementation_key(2002)) IVMasterShortcutPtr IVWindow::GetMasterShortcut ( );
__declspec(implementation_key(2003)) long IVWindow::GetID ( );
__declspec(implementation_key(2004)) IVWindowPtr IVWindow::GetParentWindow ( );
__declspec(implementation_key(2005)) _bstr_t IVWindow::GetMergeID ( );
__declspec(implementation_key(2006)) _bstr_t IVWindow::GetMergeClass ( );
__declspec(implementation_key(2007)) long IVWindow::GetMergePosition ( );
__declspec(implementation_key(2008)) VARIANT_BOOL IVWindow::GetAllowEditing ( );
__declspec(implementation_key(2009)) void IVWindow::PutAllowEditing ( VARIANT_BOOL pbAllowEditing );
__declspec(implementation_key(2010)) double IVWindow::GetPageTabWidth ( );
__declspec(implementation_key(2011)) void IVWindow::PutPageTabWidth ( double pdWidth );
__declspec(implementation_key(2012)) VARIANT_BOOL IVWindow::GetShowPageTabs ( );
__declspec(implementation_key(2013)) void IVWindow::PutShowPageTabs ( VARIANT_BOOL pbShow );
__declspec(implementation_key(2014)) void IVWindow::PutMergeID ( _bstr_t pbstrRet );
__declspec(implementation_key(2015)) void IVWindow::PutMergeClass ( _bstr_t pbstrRet );
__declspec(implementation_key(2016)) void IVWindow::PutMergePosition ( long pnRet );
__declspec(implementation_key(2017)) VARIANT_BOOL IVWindow::GetInPlace ( );
__declspec(implementation_key(2018)) _bstr_t IVWindow::GetMergeCaption ( );
__declspec(implementation_key(2019)) void IVWindow::PutMergeCaption ( _bstr_t pbstrRet );
__declspec(implementation_key(2020)) IPictureDisp * IVWindow::GetIcon ( );
__declspec(implementation_key(2021)) void IVWindow::PutRefIcon ( IPictureDisp * ppPictureDisp );
__declspec(implementation_key(2022)) IVShapePtr IVWindow::GetShape ( );
__declspec(implementation_key(2023)) IVCellPtr IVWindow::GetSelectedCell ( );
__declspec(implementation_key(2024)) IVWindowPtr IVWindow::NewWindow ( );
__declspec(implementation_key(2025)) OLE_COLOR IVWindow::GetBackgroundColor ( );
__declspec(implementation_key(2026)) void IVWindow::PutBackgroundColor ( OLE_COLOR pColor );
__declspec(implementation_key(2027)) OLE_COLOR IVWindow::GetBackgroundColorGradient ( );
__declspec(implementation_key(2028)) void IVWindow::PutBackgroundColorGradient ( OLE_COLOR pColor );
__declspec(implementation_key(2029)) VARIANT_BOOL IVWindow::GetShowPageOutline ( );
__declspec(implementation_key(2030)) void IVWindow::PutShowPageOutline ( VARIANT_BOOL Show );
__declspec(implementation_key(2031)) VARIANT_BOOL IVWindow::GetScrollLock ( );
__declspec(implementation_key(2032)) void IVWindow::PutScrollLock ( VARIANT_BOOL Lock );
__declspec(implementation_key(2033)) VARIANT_BOOL IVWindow::GetZoomLock ( );
__declspec(implementation_key(2034)) void IVWindow::PutZoomLock ( VARIANT_BOOL Lock );
__declspec(implementation_key(2035)) enum VisZoomBehavior IVWindow::GetZoomBehavior ( );
__declspec(implementation_key(2036)) void IVWindow::PutZoomBehavior ( enum VisZoomBehavior pnZoomBehavior );
__declspec(implementation_key(2037)) SAFEARRAY * IVWindow::GetSelectedMasters ( );
__declspec(implementation_key(2038)) IVCharactersPtr IVWindow::GetSelectedText ( );
__declspec(implementation_key(2039)) void IVWindow::PutSelectedText ( struct IVCharacters * ppObjReturn );
__declspec(implementation_key(2040)) VARIANT_BOOL IVWindow::GetReviewerMarkupVisible ( long ReviewerID );
__declspec(implementation_key(2041)) void IVWindow::PutReviewerMarkupVisible ( long ReviewerID, VARIANT_BOOL viewStatus );
__declspec(implementation_key(2042)) void IVWindow::PutSelection ( struct IVSelection * lpdispRet );
__declspec(implementation_key(2043)) IVDataRecordsetPtr IVWindow::GetSelectedDataRecordset ( );
__declspec(implementation_key(2044)) void IVWindow::PutSelectedDataRecordset ( struct IVDataRecordset * DataRecordset );
__declspec(implementation_key(2045)) long IVWindow::GetSelectedDataRowID ( );
__declspec(implementation_key(2046)) void IVWindow::PutSelectedDataRowID ( long DataRowID );
__declspec(implementation_key(2047)) IVApplicationPtr IVWindows::GetApplication ( );
__declspec(implementation_key(2048)) short IVWindows::GetObjectType ( );
__declspec(implementation_key(2049)) IVWindowPtr IVWindows::GetItem ( short Index );
__declspec(implementation_key(2050)) short IVWindows::GetCount ( );
__declspec(implementation_key(2051)) HRESULT IVWindows::VoidArrange ( );
__declspec(implementation_key(2052)) IVEventListPtr IVWindows::GetEventList ( );
__declspec(implementation_key(2053)) short IVWindows::GetPersistsEvents ( );
__declspec(implementation_key(2054)) IVWindowPtr IVWindows::Add_WithoutMergeArgs ( const _variant_t & bstrCaption, const _variant_t & nFlags, const _variant_t & nType, const _variant_t & nLeft, const _variant_t & nTop, const _variant_t & nWidth, const _variant_t & nHeight );
__declspec(implementation_key(2055)) HRESULT IVWindows::Arrange ( const _variant_t & nArrangeFlags );
__declspec(implementation_key(2056)) IUnknownPtr IVWindows::Get_NewEnum ( );
__declspec(implementation_key(2057)) IVWindowPtr IVWindows::GetItemFromID ( long nID );
__declspec(implementation_key(2058)) IVWindowPtr IVWindows::Add ( const _variant_t & bstrCaption, const _variant_t & nFlags, const _variant_t & nType, const _variant_t & nLeft, const _variant_t & nTop, const _variant_t & nWidth, const _variant_t & nHeight, const _variant_t & bstrMergeID, const _variant_t & bstrMergeClass, const _variant_t & nMergePosition );
__declspec(implementation_key(2059)) IVWindowPtr IVWindows::GetItemEx ( const _variant_t & CaptionOrIndex );
__declspec(implementation_key(2060)) IVApplicationPtr IVMasterShortcut::GetApplication ( );
__declspec(implementation_key(2061)) IVDocumentPtr IVMasterShortcut::GetDocument ( );
__declspec(implementation_key(2062)) short IVMasterShortcut::GetIndex ( );
__declspec(implementation_key(2063)) short IVMasterShortcut::GetObjectType ( );
__declspec(implementation_key(2064)) short IVMasterShortcut::GetStat ( );
__declspec(implementation_key(2065)) _bstr_t IVMasterShortcut::GetName ( );
__declspec(implementation_key(2066)) void IVMasterShortcut::PutName ( _bstr_t lpLocaleSpecificName );
__declspec(implementation_key(2067)) _bstr_t IVMasterShortcut::GetPrompt ( );
__declspec(implementation_key(2068)) void IVMasterShortcut::PutPrompt ( _bstr_t lpbstrRet );
__declspec(implementation_key(2069)) short IVMasterShortcut::GetAlignName ( );
__declspec(implementation_key(2070)) void IVMasterShortcut::PutAlignName ( short lpi2Ret );
__declspec(implementation_key(2071)) short IVMasterShortcut::GetIconSize ( );
__declspec(implementation_key(2072)) void IVMasterShortcut::PutIconSize ( short lpi2Ret );
__declspec(implementation_key(2073)) HRESULT IVMasterShortcut::Delete ( );
__declspec(implementation_key(2074)) HRESULT IVMasterShortcut::ImportIcon ( _bstr_t FileName );
__declspec(implementation_key(2075)) HRESULT IVMasterShortcut::ExportIcon ( _bstr_t FileName, short Flags, const _variant_t & TransparentRGB );
__declspec(implementation_key(2076)) long IVMasterShortcut::GetID ( );
__declspec(implementation_key(2077)) IVWindowPtr IVMasterShortcut::OpenIconWindow ( );
__declspec(implementation_key(2078)) _bstr_t IVMasterShortcut::GetTargetDocumentName ( );
__declspec(implementation_key(2079)) void IVMasterShortcut::PutTargetDocumentName ( _bstr_t lpbstrRet );
__declspec(implementation_key(2080)) _bstr_t IVMasterShortcut::GetTargetMasterName ( );
__declspec(implementation_key(2081)) void IVMasterShortcut::PutTargetMasterName ( _bstr_t lpLocaleIndependentName );
__declspec(implementation_key(2082)) _bstr_t IVMasterShortcut::GetTargetBaseID ( );
__declspec(implementation_key(2083)) void IVMasterShortcut::PutTargetBaseID ( _bstr_t lpbstrRet );
__declspec(implementation_key(2084)) _bstr_t IVMasterShortcut::GetDropActions ( );
__declspec(implementation_key(2085)) void IVMasterShortcut::PutDropActions ( _bstr_t lpbstrRet );
__declspec(implementation_key(2086)) _bstr_t IVMasterShortcut::GetShapeHelp ( );
__declspec(implementation_key(2087)) void IVMasterShortcut::PutShapeHelp ( _bstr_t lpbstrRet );
__declspec(implementation_key(2088)) _bstr_t IVMasterShortcut::GetNameU ( );
__declspec(implementation_key(2089)) void IVMasterShortcut::PutNameU ( _bstr_t lpLocaleIndependentName );
__declspec(implementation_key(2090)) short IVMasterShortcut::GetIndexInStencil ( );
__declspec(implementation_key(2091)) IPictureDisp * IVMasterShortcut::GetIcon ( );
__declspec(implementation_key(2092)) void IVMasterShortcut::PutRefIcon ( IPictureDisp * ppPictureDisp );
__declspec(implementation_key(2093)) void IVMasterShortcut::PutIndexInStencil ( short lpi2Ret );
__declspec(implementation_key(2094)) IVApplicationPtr IVMasterShortcuts::GetApplication ( );
__declspec(implementation_key(2095)) IVDocumentPtr IVMasterShortcuts::GetDocument ( );
__declspec(implementation_key(2096)) short IVMasterShortcuts::GetObjectType ( );
__declspec(implementation_key(2097)) short IVMasterShortcuts::GetStat ( );
__declspec(implementation_key(2098)) IVMasterShortcutPtr IVMasterShortcuts::GetItem ( const _variant_t & NameOrIndex );
__declspec(implementation_key(2099)) short IVMasterShortcuts::GetCount ( );
__declspec(implementation_key(2100)) HRESULT IVMasterShortcuts::GetNames ( SAFEARRAY * * localeSpecificNameArray );
__declspec(implementation_key(2101)) IVMasterShortcutPtr IVMasterShortcuts::Drop ( IUnknown * ObjectToDrop, short xPos, short yPos );
__declspec(implementation_key(2102)) IVMasterShortcutPtr IVMasterShortcuts::GetItemU ( const _variant_t & NameOrIndex );
__declspec(implementation_key(2103)) HRESULT IVMasterShortcuts::GetNamesU ( SAFEARRAY * * localeIndependentNameArray );
__declspec(implementation_key(2104)) IUnknownPtr IVMasterShortcuts::Get_NewEnum ( );
__declspec(implementation_key(2105)) IVMasterShortcutPtr IVMasterShortcuts::GetItemFromID ( long nID );
__declspec(implementation_key(2106)) HRESULT IVMasterShortcuts::Paste ( const _variant_t & Flags );
__declspec(implementation_key(2107)) _bstr_t IVMouseEvent::GetToString ( );
__declspec(implementation_key(2108)) IVApplicationPtr IVMouseEvent::GetApplication ( );
__declspec(implementation_key(2109)) enum VisObjectTypes IVMouseEvent::GetObjectType ( );
__declspec(implementation_key(2110)) IVWindowPtr IVMouseEvent::GetWindow ( );
__declspec(implementation_key(2111)) long IVMouseEvent::GetButton ( );
__declspec(implementation_key(2112)) long IVMouseEvent::GetKeyButtonState ( );
__declspec(implementation_key(2113)) double IVMouseEvent::Getx ( );
__declspec(implementation_key(2114)) double IVMouseEvent::Gety ( );
__declspec(implementation_key(2115)) enum VisMouseMoveDragStates IVMouseEvent::GetDragState ( );
__declspec(implementation_key(2116)) short IVMouseEvent::GetStat ( );
__declspec(implementation_key(2117)) _bstr_t IVKeyboardEvent::GetToString ( );
__declspec(implementation_key(2118)) IVApplicationPtr IVKeyboardEvent::GetApplication ( );
__declspec(implementation_key(2119)) enum VisObjectTypes IVKeyboardEvent::GetObjectType ( );
__declspec(implementation_key(2120)) IVWindowPtr IVKeyboardEvent::GetWindow ( );
__declspec(implementation_key(2121)) long IVKeyboardEvent::GetKeyCode ( );
__declspec(implementation_key(2122)) long IVKeyboardEvent::GetKeyButtonState ( );
__declspec(implementation_key(2123)) long IVKeyboardEvent::GetKeyAscii ( );
__declspec(implementation_key(2124)) short IVKeyboardEvent::GetStat ( );
__declspec(implementation_key(2125)) IVApplicationPtr IVGlobal::GetApplication ( );
__declspec(implementation_key(2126)) IVDocumentPtr IVGlobal::GetActiveDocument ( );
__declspec(implementation_key(2127)) IVPagePtr IVGlobal::GetActivePage ( );
__declspec(implementation_key(2128)) IVWindowPtr IVGlobal::GetActiveWindow ( );
__declspec(implementation_key(2129)) IVDocumentsPtr IVGlobal::GetDocuments ( );
__declspec(implementation_key(2130)) IVWindowsPtr IVGlobal::GetWindows ( );
__declspec(implementation_key(2131)) IVAddonsPtr IVGlobal::GetAddons ( );
__declspec(implementation_key(2132)) IDispatchPtr IVGlobal::GetVbe ( );
__declspec(implementation_key(2133)) _bstr_t IVExtender::GetName ( );
__declspec(implementation_key(2134)) void IVExtender::PutName ( _bstr_t pbstr );
__declspec(implementation_key(2135)) IUnknownPtr IVExtender::GetObject ( );
__declspec(implementation_key(2136)) IUnknownPtr IVExtender::GetParent ( );
__declspec(implementation_key(2137)) HRESULT IVExtender::Delete ( );
__declspec(implementation_key(2138)) HRESULT IVExtender::Index ( );
__declspec(implementation_key(2139)) IVShapePtr IVExtender::GetShape ( );
__declspec(implementation_key(2140)) HRESULT IVExtender::VoidGroup ( );
__declspec(implementation_key(2141)) HRESULT IVExtender::BringForward ( );
__declspec(implementation_key(2142)) HRESULT IVExtender::BringToFront ( );
__declspec(implementation_key(2143)) HRESULT IVExtender::ConvertToGroup ( );
__declspec(implementation_key(2144)) HRESULT IVExtender::SendBackward ( );
__declspec(implementation_key(2145)) HRESULT IVExtender::SendToBack ( );
__declspec(implementation_key(2146)) IVDocumentPtr IVExtender::GetDocument ( );
__declspec(implementation_key(2147)) IDispatchPtr IVExtender::GetShapeParent ( );
__declspec(implementation_key(2148)) IVApplicationPtr IVExtender::GetApplication ( );
__declspec(implementation_key(2149)) IVMasterPtr IVExtender::GetMaster ( );
__declspec(implementation_key(2150)) IVCellPtr IVExtender::GetCells ( _bstr_t localeSpecificCellName );
__declspec(implementation_key(2151)) IVCellPtr IVExtender::GetCellsSRC ( short Section, short Row, short Column );
__declspec(implementation_key(2152)) _bstr_t IVExtender::GetData1 ( );
__declspec(implementation_key(2153)) void IVExtender::PutData1 ( _bstr_t lpbstrRet );
__declspec(implementation_key(2154)) _bstr_t IVExtender::GetData2 ( );
__declspec(implementation_key(2155)) void IVExtender::PutData2 ( _bstr_t lpbstrRet );
__declspec(implementation_key(2156)) _bstr_t IVExtender::GetData3 ( );
__declspec(implementation_key(2157)) void IVExtender::PutData3 ( _bstr_t lpbstrRet );
__declspec(implementation_key(2158)) _bstr_t IVExtender::GetHelp ( );
__declspec(implementation_key(2159)) void IVExtender::PutHelp ( _bstr_t lpbstrRet );
__declspec(implementation_key(2160)) _bstr_t IVExtender::GetNameID ( );
__declspec(implementation_key(2161)) HRESULT IVExtender::ShapeCopy ( );
__declspec(implementation_key(2162)) HRESULT IVExtender::ShapeCut ( );
__declspec(implementation_key(2163)) HRESULT IVExtender::ShapeDelete ( );
__declspec(implementation_key(2164)) HRESULT IVExtender::VoidShapeDuplicate ( );
__declspec(implementation_key(2165)) short IVExtender::GetRowCount ( short Section );
__declspec(implementation_key(2166)) short IVExtender::AddSection ( short Section );
__declspec(implementation_key(2167)) HRESULT IVExtender::DeleteSection ( short Section );
__declspec(implementation_key(2168)) short IVExtender::AddRow ( short Section, short Row, short RowTag );
__declspec(implementation_key(2169)) HRESULT IVExtender::DeleteRow ( short Section, short Row );
__declspec(implementation_key(2170)) short IVExtender::GetRowsCellCount ( short Section, short Row );
__declspec(implementation_key(2171)) short IVExtender::GetRowType ( short Section, short Row );
__declspec(implementation_key(2172)) void IVExtender::PutRowType ( short Section, short Row, short lpi2Ret );
__declspec(implementation_key(2173)) HRESULT IVExtender::SetCenter ( double xPos, double yPos );
__declspec(implementation_key(2174)) IVConnectsPtr IVExtender::GetConnects ( );
__declspec(implementation_key(2175)) short IVExtender::GetShapeIndex16 ( );
__declspec(implementation_key(2176)) _bstr_t IVExtender::GetStyle ( );
__declspec(implementation_key(2177)) void IVExtender::PutStyle ( _bstr_t lpbstrRet );
__declspec(implementation_key(2178)) void IVExtender::PutStyleKeepFmt ( _bstr_t _arg1 );
__declspec(implementation_key(2179)) _bstr_t IVExtender::GetLineStyle ( );
__declspec(implementation_key(2180)) void IVExtender::PutLineStyle ( _bstr_t lpbstrRet );
__declspec(implementation_key(2181)) void IVExtender::PutLineStyleKeepFmt ( _bstr_t _arg1 );
__declspec(implementation_key(2182)) _bstr_t IVExtender::GetFillStyle ( );
__declspec(implementation_key(2183)) void IVExtender::PutFillStyle ( _bstr_t lpbstrRet );
__declspec(implementation_key(2184)) void IVExtender::PutFillStyleKeepFmt ( _bstr_t _arg1 );
__declspec(implementation_key(2185)) HRESULT IVExtender::Export ( _bstr_t FileName );
__declspec(implementation_key(2186)) _bstr_t IVExtender::GetUniqueID ( short fUniqueID );
__declspec(implementation_key(2187)) IVPagePtr IVExtender::GetContainingPage ( );
__declspec(implementation_key(2188)) IVMasterPtr IVExtender::GetContainingMaster ( );
__declspec(implementation_key(2189)) IVShapePtr IVExtender::GetContainingShape ( );
__declspec(implementation_key(2190)) short IVExtender::GetSectionExists ( short Section, short fExistsLocally );
__declspec(implementation_key(2191)) short IVExtender::GetRowExists ( short Section, short Row, short fExistsLocally );
__declspec(implementation_key(2192)) short IVExtender::GetCellExists ( _bstr_t localeSpecificCellName, short fExistsLocally );
__declspec(implementation_key(2193)) short IVExtender::GetCellsSRCExists ( short Section, short Row, short Column, short fExistsLocally );
__declspec(implementation_key(2194)) short IVExtender::GetLayerCount ( );
__declspec(implementation_key(2195)) IVLayerPtr IVExtender::GetLayer ( short Index );
__declspec(implementation_key(2196)) short IVExtender::AddNamedRow ( short Section, _bstr_t RowName, short RowTag );
__declspec(implementation_key(2197)) short IVExtender::AddRows ( short Section, short Row, short RowTag, short RowCount );
__declspec(implementation_key(2198)) IVEventListPtr IVExtender::GetEventList ( );
__declspec(implementation_key(2199)) short IVExtender::GetPersistsEvents ( );
__declspec(implementation_key(2200)) _bstr_t IVExtender::GetClassID ( );
__declspec(implementation_key(2201)) IDispatchPtr IVExtender::GetShapeObject ( );
__declspec(implementation_key(2202)) IVWindowPtr IVExtender::OpenSheetWindow ( );
__declspec(implementation_key(2203)) short IVExtender::GetShapeID16 ( );
__declspec(implementation_key(2204)) HRESULT IVExtender::GetFormulas ( SAFEARRAY * * SRCStream, SAFEARRAY * * formulaArray );
__declspec(implementation_key(2205)) HRESULT IVExtender::GetResults ( SAFEARRAY * * SRCStream, short Flags, SAFEARRAY * * UnitsNamesOrCodes, SAFEARRAY * * resultArray );
__declspec(implementation_key(2206)) short IVExtender::SetFormulas ( SAFEARRAY * * SRCStream, SAFEARRAY * * formulaArray, short Flags );
__declspec(implementation_key(2207)) short IVExtender::SetResults ( SAFEARRAY * * SRCStream, SAFEARRAY * * UnitsNamesOrCodes, SAFEARRAY * * resultArray, short Flags );
__declspec(implementation_key(2208)) IVConnectsPtr IVExtender::GetFromConnects ( );
__declspec(implementation_key(2209)) HRESULT IVExtender::BoundingBox ( short Flags, double * lpr8Left, double * lpr8Bottom, double * lpr8Right, double * lpr8Top );
__declspec(implementation_key(2210)) short IVExtender::HitTest ( double xPos, double yPos, double Tolerance );
__declspec(implementation_key(2211)) IVHyperlinkPtr IVExtender::GetHyperlink ( );
__declspec(implementation_key(2212)) _bstr_t IVExtender::GetProgID ( );
__declspec(implementation_key(2213)) short IVExtender::GetObjectIsInherited ( );
__declspec(implementation_key(2214)) long IVExtender::GetShapeID ( );
__declspec(implementation_key(2215)) long IVExtender::GetShapeIndex ( );
__declspec(implementation_key(2216)) IVShapePtr IVExtender::Group ( );
__declspec(implementation_key(2217)) IVShapePtr IVExtender::ShapeDuplicate ( );
__declspec(implementation_key(2218)) _bstr_t IVisLibOcxSupport::GetHostID ( );
__declspec(implementation_key(2219)) void IVisLibOcxSupport::PutHostID ( _bstr_t pbstr );
__declspec(implementation_key(2220)) IVWindowPtr IVisLibOcxSupport::GetWindow ( );
__declspec(implementation_key(2221)) IVDocumentPtr IVisLibOcxSupport::GetDocument ( );
__declspec(implementation_key(2222)) _bstr_t IVisLibOcxSupport::GetSrc ( );
__declspec(implementation_key(2223)) void IVisLibOcxSupport::PutSrc ( _bstr_t pbstr );
__declspec(implementation_key(2224)) VARIANT_BOOL IVisLibOcxSupport::GetNegotiateMenus ( );
__declspec(implementation_key(2225)) void IVisLibOcxSupport::PutNegotiateMenus ( VARIANT_BOOL pbVal );
__declspec(implementation_key(2226)) VARIANT_BOOL IVisLibOcxSupport::GetNegotiateToolbars ( );
__declspec(implementation_key(2227)) void IVisLibOcxSupport::PutNegotiateToolbars ( VARIANT_BOOL pbVal );
__declspec(implementation_key(2228)) HRESULT IVisLibOcxSupport::About ( );
__declspec(implementation_key(2229)) enum VisPageSizingBehaviors IVisLibOcxSupport::GetPageSizingBehavior ( );
__declspec(implementation_key(2230)) void IVisLibOcxSupport::PutPageSizingBehavior ( enum VisPageSizingBehaviors peVal );
__declspec(implementation_key(2231)) IVApplicationPtr IVDataRecordset::GetApplication ( );
__declspec(implementation_key(2232)) short IVDataRecordset::GetStat ( );
__declspec(implementation_key(2233)) IVDocumentPtr IVDataRecordset::GetDocument ( );
__declspec(implementation_key(2234)) short IVDataRecordset::GetObjectType ( );
__declspec(implementation_key(2235)) long IVDataRecordset::GetID ( );
__declspec(implementation_key(2236)) _bstr_t IVDataRecordset::GetName ( );
__declspec(implementation_key(2237)) void IVDataRecordset::PutName ( _bstr_t Name );
__declspec(implementation_key(2238)) enum VisLinkReplaceBehavior IVDataRecordset::GetLinkReplaceBehavior ( );
__declspec(implementation_key(2239)) void IVDataRecordset::PutLinkReplaceBehavior ( enum VisLinkReplaceBehavior Property );
__declspec(implementation_key(2240)) IVDataConnectionPtr IVDataRecordset::GetDataConnection ( );
__declspec(implementation_key(2241)) IVDataColumnsPtr IVDataRecordset::GetDataColumns ( );
__declspec(implementation_key(2242)) HRESULT IVDataRecordset::GetPrimaryKey ( enum VisPrimaryKeySettings * PrimaryKeySettings, SAFEARRAY * * PrimaryKey );
__declspec(implementation_key(2243)) HRESULT IVDataRecordset::SetPrimaryKey ( enum VisPrimaryKeySettings PrimaryKeySettings, SAFEARRAY * * PrimaryKey );
__declspec(implementation_key(2244)) _bstr_t IVDataRecordset::GetCommandString ( );
__declspec(implementation_key(2245)) void IVDataRecordset::PutCommandString ( _bstr_t CommandString );
__declspec(implementation_key(2246)) _bstr_t IVDataRecordset::GetDataAsXML ( );
__declspec(implementation_key(2247)) SAFEARRAY * IVDataRecordset::GetDataRowIDs ( _bstr_t CriteriaString );
__declspec(implementation_key(2248)) SAFEARRAY * IVDataRecordset::GetRowData ( long DataRowID );
__declspec(implementation_key(2249)) HRESULT IVDataRecordset::Delete ( );
__declspec(implementation_key(2250)) HRESULT IVDataRecordset::Refresh ( );
__declspec(implementation_key(2251)) HRESULT IVDataRecordset::RefreshUsingXML ( _bstr_t NewDataAsXML );
__declspec(implementation_key(2252)) DATE IVDataRecordset::GetTimeRefreshed ( );
__declspec(implementation_key(2253)) long IVDataRecordset::GetRefreshInterval ( );
__declspec(implementation_key(2254)) void IVDataRecordset::PutRefreshInterval ( long RefreshInterval );
__declspec(implementation_key(2255)) long IVDataRecordset::GetRefreshSettings ( );
__declspec(implementation_key(2256)) void IVDataRecordset::PutRefreshSettings ( long Settings );
__declspec(implementation_key(2257)) IVEventListPtr IVDataRecordset::GetEventList ( );
__declspec(implementation_key(2258)) SAFEARRAY * IVDataRecordset::GetAllRefreshConflicts ( );
__declspec(implementation_key(2259)) HRESULT IVDataRecordset::RemoveRefreshConflict ( struct IVShape * ShapeInConflict );
__declspec(implementation_key(2260)) SAFEARRAY * IVDataRecordset::GetMatchingRowsForRefreshConflict ( struct IVShape * ShapeInConflict );
__declspec(implementation_key(2261)) IVApplicationPtr IVDataColumn::GetApplication ( );
__declspec(implementation_key(2262)) short IVDataColumn::GetStat ( );
__declspec(implementation_key(2263)) IVDocumentPtr IVDataColumn::GetDocument ( );
__declspec(implementation_key(2264)) short IVDataColumn::GetObjectType ( );
__declspec(implementation_key(2265)) IVDataRecordsetPtr IVDataColumn::GetDataRecordset ( );
__declspec(implementation_key(2266)) _bstr_t IVDataColumn::GetName ( );
__declspec(implementation_key(2267)) _bstr_t IVDataColumn::GetDisplayName ( );
__declspec(implementation_key(2268)) void IVDataColumn::PutDisplayName ( _bstr_t DisplayName );
__declspec(implementation_key(2269)) VARIANT_BOOL IVDataColumn::GetVisible ( );
__declspec(implementation_key(2270)) void IVDataColumn::PutVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(2271)) _variant_t IVDataColumn::GetProperty ( enum VisDataColumnProperties Property );
__declspec(implementation_key(2272)) HRESULT IVDataColumn::SetProperty ( enum VisDataColumnProperties Property, const _variant_t & Value );
__declspec(implementation_key(2273)) VARIANT_BOOL IVDataColumn::GetHyperlink ( );
__declspec(implementation_key(2274)) void IVDataColumn::PutHyperlink ( VARIANT_BOOL Hyperlink );
__declspec(implementation_key(2275)) IVApplicationPtr IVDataColumns::GetApplication ( );
__declspec(implementation_key(2276)) short IVDataColumns::GetStat ( );
__declspec(implementation_key(2277)) IVDocumentPtr IVDataColumns::GetDocument ( );
__declspec(implementation_key(2278)) short IVDataColumns::GetObjectType ( );
__declspec(implementation_key(2279)) IVDataRecordsetPtr IVDataColumns::GetDataRecordset ( );
__declspec(implementation_key(2280)) long IVDataColumns::GetCount ( );
__declspec(implementation_key(2281)) IVDataColumnPtr IVDataColumns::GetItem ( const _variant_t & IndexOrName );
__declspec(implementation_key(2282)) IUnknownPtr IVDataColumns::Get_NewEnum ( );
__declspec(implementation_key(2283)) HRESULT IVDataColumns::SetColumnProperties ( SAFEARRAY * * ColumnNames, SAFEARRAY * * Properties, SAFEARRAY * * Values );
__declspec(implementation_key(2284)) IVApplicationPtr IVDataRecordsets::GetApplication ( );
__declspec(implementation_key(2285)) short IVDataRecordsets::GetStat ( );
__declspec(implementation_key(2286)) IVDocumentPtr IVDataRecordsets::GetDocument ( );
__declspec(implementation_key(2287)) short IVDataRecordsets::GetObjectType ( );
__declspec(implementation_key(2288)) long IVDataRecordsets::GetCount ( );
__declspec(implementation_key(2289)) IVDataRecordsetPtr IVDataRecordsets::GetItem ( long Index );
__declspec(implementation_key(2290)) IVDataRecordsetPtr IVDataRecordsets::GetItemFromID ( long ID );
__declspec(implementation_key(2291)) IUnknownPtr IVDataRecordsets::Get_NewEnum ( );
__declspec(implementation_key(2292)) IVEventListPtr IVDataRecordsets::GetEventList ( );
__declspec(implementation_key(2293)) IVDataRecordsetPtr IVDataRecordsets::Add ( const _variant_t & ConnectionIDOrString, _bstr_t CommandString, long AddOptions, _bstr_t Name );
__declspec(implementation_key(2294)) IVDataRecordsetPtr IVDataRecordsets::AddFromXML ( _bstr_t XMLString, long AddOptions, _bstr_t Name );
__declspec(implementation_key(2295)) IVDataRecordsetPtr IVDataRecordsets::AddFromConnectionFile ( _bstr_t FileName, long AddOptions, _bstr_t Name );
__declspec(implementation_key(2296)) HRESULT IVDataRecordsets::GetLastDataError ( long * DataErrorCode, BSTR * DataErrorDescription, long * RecordsetID );
__declspec(implementation_key(2297)) IVApplicationPtr IVDataRecordsetChangedEvent::GetApplication ( );
__declspec(implementation_key(2298)) short IVDataRecordsetChangedEvent::GetStat ( );
__declspec(implementation_key(2299)) short IVDataRecordsetChangedEvent::GetObjectType ( );
__declspec(implementation_key(2300)) IVDataRecordsetPtr IVDataRecordsetChangedEvent::GetDataRecordset ( );
__declspec(implementation_key(2301)) SAFEARRAY * IVDataRecordsetChangedEvent::GetDataRowsAdded ( );
__declspec(implementation_key(2302)) SAFEARRAY * IVDataRecordsetChangedEvent::GetDataRowsDeleted ( );
__declspec(implementation_key(2303)) SAFEARRAY * IVDataRecordsetChangedEvent::GetDataColumnsAdded ( );
__declspec(implementation_key(2304)) SAFEARRAY * IVDataRecordsetChangedEvent::GetDataColumnsDeleted ( );
__declspec(implementation_key(2305)) SAFEARRAY * IVDataRecordsetChangedEvent::GetDataColumnsChanged ( );
__declspec(implementation_key(2306)) HRESULT IVUIObject::Delete ( );
__declspec(implementation_key(2307)) _bstr_t IVUIObject::GetDefault ( );
__declspec(implementation_key(2308)) void IVUIObject::PutName ( _bstr_t pName );
__declspec(implementation_key(2309)) _bstr_t IVUIObject::GetName ( );
__declspec(implementation_key(2310)) void IVUIObject::PutFlavor ( short pFlavor );
__declspec(implementation_key(2311)) short IVUIObject::GetFlavor ( );
__declspec(implementation_key(2312)) IVMenuSetsPtr IVUIObject::GetMenuSets ( );
__declspec(implementation_key(2313)) IVToolbarSetsPtr IVUIObject::GetToolbarSets ( );
__declspec(implementation_key(2314)) IVStatusBarsPtr IVUIObject::GetStatusBars ( );
__declspec(implementation_key(2315)) IVAccelTablesPtr IVUIObject::GetAccelTables ( );
__declspec(implementation_key(2316)) HRESULT IVUIObject::SaveToFile ( _bstr_t FileName );
__declspec(implementation_key(2317)) HRESULT IVUIObject::LoadFromFile ( _bstr_t FileName );
__declspec(implementation_key(2318)) HRESULT IVUIObject::UpdateUI ( );
__declspec(implementation_key(2319)) VARIANT_BOOL IVUIObject::GetDisplayKeysInTooltips ( );
__declspec(implementation_key(2320)) void IVUIObject::PutDisplayKeysInTooltips ( VARIANT_BOOL pbShow );
__declspec(implementation_key(2321)) VARIANT_BOOL IVUIObject::GetDisplayTooltips ( );
__declspec(implementation_key(2322)) void IVUIObject::PutDisplayTooltips ( VARIANT_BOOL pbShow );
__declspec(implementation_key(2323)) VARIANT_BOOL IVUIObject::GetLargeButtons ( );
__declspec(implementation_key(2324)) void IVUIObject::PutLargeButtons ( VARIANT_BOOL pbLarge );
__declspec(implementation_key(2325)) short IVUIObject::GetMenuAnimationStyle ( );
__declspec(implementation_key(2326)) void IVUIObject::PutMenuAnimationStyle ( short pAnim );
__declspec(implementation_key(2327)) IVUIObjectPtr IVUIObject::GetClone ( );
__declspec(implementation_key(2328)) IVDocumentPtr IVInvisibleApp::GetActiveDocument ( );
__declspec(implementation_key(2329)) IVPagePtr IVInvisibleApp::GetActivePage ( );
__declspec(implementation_key(2330)) IVWindowPtr IVInvisibleApp::GetActiveWindow ( );
__declspec(implementation_key(2331)) IVApplicationPtr IVInvisibleApp::GetApplication ( );
__declspec(implementation_key(2332)) IVDocumentsPtr IVInvisibleApp::GetDocuments ( );
__declspec(implementation_key(2333)) short IVInvisibleApp::GetObjectType ( );
__declspec(implementation_key(2334)) long IVInvisibleApp::GetOnDataChangeDelay ( );
__declspec(implementation_key(2335)) void IVInvisibleApp::PutOnDataChangeDelay ( long lpi4Ret );
__declspec(implementation_key(2336)) long IVInvisibleApp::GetProcessID ( );
__declspec(implementation_key(2337)) HRESULT IVInvisibleApp::Quit ( );
__declspec(implementation_key(2338)) HRESULT IVInvisibleApp::Redo ( );
__declspec(implementation_key(2339)) short IVInvisibleApp::GetScreenUpdating ( );
__declspec(implementation_key(2340)) void IVInvisibleApp::PutScreenUpdating ( short lpi2Ret );
__declspec(implementation_key(2341)) short IVInvisibleApp::GetStat ( );
__declspec(implementation_key(2342)) HRESULT IVInvisibleApp::Undo ( );
__declspec(implementation_key(2343)) _bstr_t IVInvisibleApp::GetVersion ( );
__declspec(implementation_key(2344)) short IVInvisibleApp::GetWindowHandle ( );
__declspec(implementation_key(2345)) IVWindowsPtr IVInvisibleApp::GetWindows ( );
__declspec(implementation_key(2346)) long IVInvisibleApp::GetLanguage ( );
__declspec(implementation_key(2347)) short IVInvisibleApp::GetIsVisio16 ( );
__declspec(implementation_key(2348)) short IVInvisibleApp::GetIsVisio32 ( );
__declspec(implementation_key(2349)) long IVInvisibleApp::GetWindowHandle32 ( );
__declspec(implementation_key(2350)) short IVInvisibleApp::GetInstanceHandle ( );
__declspec(implementation_key(2351)) long IVInvisibleApp::GetInstanceHandle32 ( );
__declspec(implementation_key(2352)) IVUIObjectPtr IVInvisibleApp::GetBuiltInMenus ( );
__declspec(implementation_key(2353)) IVUIObjectPtr IVInvisibleApp::GetBuiltInToolbars ( short fIgnored );
__declspec(implementation_key(2354)) IVUIObjectPtr IVInvisibleApp::GetCustomMenus ( );
__declspec(implementation_key(2355)) HRESULT IVInvisibleApp::SetCustomMenus ( struct IVUIObject * MenusObject );
__declspec(implementation_key(2356)) _bstr_t IVInvisibleApp::GetCustomMenusFile ( );
__declspec(implementation_key(2357)) void IVInvisibleApp::PutCustomMenusFile ( _bstr_t lpbstrRet );
__declspec(implementation_key(2358)) HRESULT IVInvisibleApp::ClearCustomMenus ( );
__declspec(implementation_key(2359)) IVUIObjectPtr IVInvisibleApp::GetCustomToolbars ( );
__declspec(implementation_key(2360)) HRESULT IVInvisibleApp::SetCustomToolbars ( struct IVUIObject * ToolbarsObject );
__declspec(implementation_key(2361)) _bstr_t IVInvisibleApp::GetCustomToolbarsFile ( );
__declspec(implementation_key(2362)) void IVInvisibleApp::PutCustomToolbarsFile ( _bstr_t lpbstrRet );
__declspec(implementation_key(2363)) HRESULT IVInvisibleApp::ClearCustomToolbars ( );
__declspec(implementation_key(2364)) _bstr_t IVInvisibleApp::GetAddonPaths ( );
__declspec(implementation_key(2365)) void IVInvisibleApp::PutAddonPaths ( _bstr_t lpbstrRet );
__declspec(implementation_key(2366)) _bstr_t IVInvisibleApp::GetDrawingPaths ( );
__declspec(implementation_key(2367)) void IVInvisibleApp::PutDrawingPaths ( _bstr_t lpbstrRet );
__declspec(implementation_key(2368)) _bstr_t IVInvisibleApp::GetFilterPaths ( );
__declspec(implementation_key(2369)) void IVInvisibleApp::PutFilterPaths ( _bstr_t lpbstrRet );
__declspec(implementation_key(2370)) _bstr_t IVInvisibleApp::GetHelpPaths ( );
__declspec(implementation_key(2371)) void IVInvisibleApp::PutHelpPaths ( _bstr_t lpbstrRet );
__declspec(implementation_key(2372)) _bstr_t IVInvisibleApp::GetStartupPaths ( );
__declspec(implementation_key(2373)) void IVInvisibleApp::PutStartupPaths ( _bstr_t lpbstrRet );
__declspec(implementation_key(2374)) _bstr_t IVInvisibleApp::GetStencilPaths ( );
__declspec(implementation_key(2375)) void IVInvisibleApp::PutStencilPaths ( _bstr_t lpbstrRet );
__declspec(implementation_key(2376)) _bstr_t IVInvisibleApp::GetTemplatePaths ( );
__declspec(implementation_key(2377)) void IVInvisibleApp::PutTemplatePaths ( _bstr_t lpbstrRet );
__declspec(implementation_key(2378)) _bstr_t IVInvisibleApp::GetUserName ( );
__declspec(implementation_key(2379)) void IVInvisibleApp::PutUserName ( _bstr_t lpbstrRet );
__declspec(implementation_key(2380)) short IVInvisibleApp::GetPromptForSummary ( );
__declspec(implementation_key(2381)) void IVInvisibleApp::PutPromptForSummary ( short lpi2Ret );
__declspec(implementation_key(2382)) IVAddonsPtr IVInvisibleApp::GetAddons ( );
__declspec(implementation_key(2383)) HRESULT IVInvisibleApp::SaveWorkspaceAs ( _bstr_t FileName );
__declspec(implementation_key(2384)) HRESULT IVInvisibleApp::DoCmd ( short CommandID );
__declspec(implementation_key(2385)) _bstr_t IVInvisibleApp::GetProfileName ( );
__declspec(implementation_key(2386)) _bstr_t IVInvisibleApp::GetEventInfo ( long eventSeqNum );
__declspec(implementation_key(2387)) IVEventListPtr IVInvisibleApp::GetEventList ( );
__declspec(implementation_key(2388)) short IVInvisibleApp::GetPersistsEvents ( );
__declspec(implementation_key(2389)) short IVInvisibleApp::GetActive ( );
__declspec(implementation_key(2390)) short IVInvisibleApp::GetDeferRecalc ( );
__declspec(implementation_key(2391)) void IVInvisibleApp::PutDeferRecalc ( short lpi2Ret );
__declspec(implementation_key(2392)) short IVInvisibleApp::GetAlertResponse ( );
__declspec(implementation_key(2393)) void IVInvisibleApp::PutAlertResponse ( short lpi2Ret );
__declspec(implementation_key(2394)) short IVInvisibleApp::GetShowProgress ( );
__declspec(implementation_key(2395)) void IVInvisibleApp::PutShowProgress ( short lpi2Ret );
__declspec(implementation_key(2396)) IDispatchPtr IVInvisibleApp::GetVbe ( );
__declspec(implementation_key(2397)) short IVInvisibleApp::GetShowMenus ( );
__declspec(implementation_key(2398)) void IVInvisibleApp::PutShowMenus ( short lpi2Ret );
__declspec(implementation_key(2399)) short IVInvisibleApp::GetToolbarStyle ( );
__declspec(implementation_key(2400)) void IVInvisibleApp::PutToolbarStyle ( short lpi2Ret );
__declspec(implementation_key(2401)) short IVInvisibleApp::GetShowStatusBar ( );
__declspec(implementation_key(2402)) void IVInvisibleApp::PutShowStatusBar ( short lpi2Ret );
__declspec(implementation_key(2403)) short IVInvisibleApp::GetEventsEnabled ( );
__declspec(implementation_key(2404)) void IVInvisibleApp::PutEventsEnabled ( short lpi2Ret );
__declspec(implementation_key(2405)) _bstr_t IVInvisibleApp::FormatResult ( const _variant_t & StringOrNumber, const _variant_t & UnitsIn, const _variant_t & UnitsOut, _bstr_t Format );
__declspec(implementation_key(2406)) double IVInvisibleApp::ConvertResult ( const _variant_t & StringOrNumber, const _variant_t & UnitsIn, const _variant_t & UnitsOut );
__declspec(implementation_key(2407)) _bstr_t IVInvisibleApp::GetPath ( );
__declspec(implementation_key(2408)) HRESULT IVInvisibleApp::EnumDirectories ( _bstr_t PathsString, SAFEARRAY * * NameArray );
__declspec(implementation_key(2409)) long IVInvisibleApp::GetTraceFlags ( );
__declspec(implementation_key(2410)) void IVInvisibleApp::PutTraceFlags ( long lpi4Ret );
__declspec(implementation_key(2411)) HRESULT IVInvisibleApp::PurgeUndo ( );
__declspec(implementation_key(2412)) long IVInvisibleApp::QueueMarkerEvent ( _bstr_t ContextString );
__declspec(implementation_key(2413)) short IVInvisibleApp::GetShowToolbar ( );
__declspec(implementation_key(2414)) void IVInvisibleApp::PutShowToolbar ( short lpi2Ret );
__declspec(implementation_key(2415)) VARIANT_BOOL IVInvisibleApp::GetLiveDynamics ( );
__declspec(implementation_key(2416)) void IVInvisibleApp::PutLiveDynamics ( VARIANT_BOOL pbRet );
__declspec(implementation_key(2417)) VARIANT_BOOL IVInvisibleApp::GetAutoLayout ( );
__declspec(implementation_key(2418)) void IVInvisibleApp::PutAutoLayout ( VARIANT_BOOL pbRet );
__declspec(implementation_key(2419)) VARIANT_BOOL IVInvisibleApp::GetVisible ( );
__declspec(implementation_key(2420)) void IVInvisibleApp::PutVisible ( VARIANT_BOOL pbVisible );
__declspec(implementation_key(2421)) long IVInvisibleApp::BeginUndoScope ( _bstr_t bstrUndoScopeName );
__declspec(implementation_key(2422)) HRESULT IVInvisibleApp::EndUndoScope ( long nScopeID, VARIANT_BOOL bCommit );
__declspec(implementation_key(2423)) HRESULT IVInvisibleApp::AddUndoUnit ( IUnknown * pUndoUnit );
__declspec(implementation_key(2424)) _bstr_t IVInvisibleApp::GetCommandLine ( );
__declspec(implementation_key(2425)) VARIANT_BOOL IVInvisibleApp::GetIsUndoingOrRedoing ( );
__declspec(implementation_key(2426)) long IVInvisibleApp::GetCurrentScope ( );
__declspec(implementation_key(2427)) VARIANT_BOOL IVInvisibleApp::GetIsInScope ( long nCmdID );
__declspec(implementation_key(2428)) IDispatchPtr IVInvisibleApp::Getold_Addins ( );
__declspec(implementation_key(2429)) _bstr_t IVInvisibleApp::GetProductName ( );
__declspec(implementation_key(2430)) VARIANT_BOOL IVInvisibleApp::GetUndoEnabled ( );
__declspec(implementation_key(2431)) void IVInvisibleApp::PutUndoEnabled ( VARIANT_BOOL pbRet );
__declspec(implementation_key(2432)) VARIANT_BOOL IVInvisibleApp::GetShowChanges ( );
__declspec(implementation_key(2433)) void IVInvisibleApp::PutShowChanges ( VARIANT_BOOL pbRet );
__declspec(implementation_key(2434)) short IVInvisibleApp::GetTypelibMajorVersion ( );
__declspec(implementation_key(2435)) short IVInvisibleApp::GetTypelibMinorVersion ( );
__declspec(implementation_key(2436)) short IVInvisibleApp::GetAutoRecoverInterval ( );
__declspec(implementation_key(2437)) void IVInvisibleApp::PutAutoRecoverInterval ( short lpi2Ret );
__declspec(implementation_key(2438)) VARIANT_BOOL IVInvisibleApp::GetInhibitSelectChange ( );
__declspec(implementation_key(2439)) void IVInvisibleApp::PutInhibitSelectChange ( VARIANT_BOOL pbRet );
__declspec(implementation_key(2440)) _bstr_t IVInvisibleApp::GetActivePrinter ( );
__declspec(implementation_key(2441)) void IVInvisibleApp::PutActivePrinter ( _bstr_t pbstrPrinterName );
__declspec(implementation_key(2442)) SAFEARRAY * IVInvisibleApp::GetAvailablePrinters ( );
__declspec(implementation_key(2443)) HRESULT IVInvisibleApp::RenameCurrentScope ( _bstr_t bstrScopeName );
__declspec(implementation_key(2444)) HRESULT IVInvisibleApp::InvokeHelp ( _bstr_t bstrHelpFileName, long Command, long Data );
__declspec(implementation_key(2445)) IDispatchPtr IVInvisibleApp::GetCommandBars ( );
__declspec(implementation_key(2446)) long IVInvisibleApp::GetBuild ( );
__declspec(implementation_key(2447)) IDispatchPtr IVInvisibleApp::GetCOMAddIns ( );
__declspec(implementation_key(2448)) _variant_t IVInvisibleApp::GetDefaultPageUnits ( );
__declspec(implementation_key(2449)) void IVInvisibleApp::PutDefaultPageUnits ( const _variant_t & pUnitsNameOrCode );
__declspec(implementation_key(2450)) _variant_t IVInvisibleApp::GetDefaultTextUnits ( );
__declspec(implementation_key(2451)) void IVInvisibleApp::PutDefaultTextUnits ( const _variant_t & pUnitsNameOrCode );
__declspec(implementation_key(2452)) _variant_t IVInvisibleApp::GetDefaultAngleUnits ( );
__declspec(implementation_key(2453)) void IVInvisibleApp::PutDefaultAngleUnits ( const _variant_t & pUnitsNameOrCode );
__declspec(implementation_key(2454)) _variant_t IVInvisibleApp::GetDefaultDurationUnits ( );
__declspec(implementation_key(2455)) void IVInvisibleApp::PutDefaultDurationUnits ( const _variant_t & pUnitsNameOrCode );
__declspec(implementation_key(2456)) long IVInvisibleApp::GetFullBuild ( );
__declspec(implementation_key(2457)) HRESULT IVInvisibleApp::OnComponentEnterState ( enum VisOnComponentEnterCodes uStateID, VARIANT_BOOL bEnter );
__declspec(implementation_key(2458)) VARIANT_BOOL IVInvisibleApp::GetVBAEnabled ( );
__declspec(implementation_key(2459)) enum VisZoomBehavior IVInvisibleApp::GetDefaultZoomBehavior ( );
__declspec(implementation_key(2460)) void IVInvisibleApp::PutDefaultZoomBehavior ( enum VisZoomBehavior pnZoomBehavior );
__declspec(implementation_key(2461)) _variant_t IVInvisibleApp::GetUsageStatistic ( long nWhichStatistic );
__declspec(implementation_key(2462)) IFontDisp * IVInvisibleApp::GetDialogFont ( );
__declspec(implementation_key(2463)) long IVInvisibleApp::GetLanguageHelp ( );
__declspec(implementation_key(2464)) IVWindowPtr IVInvisibleApp::GetWindow ( );
__declspec(implementation_key(2465)) _bstr_t IVInvisibleApp::GetName ( );
__declspec(implementation_key(2466)) IUnknownPtr IVInvisibleApp::GetConnectorToolDataObject ( );
__declspec(implementation_key(2467)) IVApplicationSettingsPtr IVInvisibleApp::GetSettings ( );
__declspec(implementation_key(2468)) _bstr_t IVInvisibleApp::FormatResultEx ( const _variant_t & StringOrNumber, const _variant_t & UnitsIn, const _variant_t & UnitsOut, _bstr_t Format, long LangID, long CalendarID );
__declspec(implementation_key(2469)) IDispatchPtr IVInvisibleApp::GetSaveAsWebObject ( );
__declspec(implementation_key(2470)) IDispatchPtr IVInvisibleApp::GetMsoDebugOptions ( );
__declspec(implementation_key(2471)) _bstr_t IVInvisibleApp::GetMyShapesPath ( );
__declspec(implementation_key(2472)) void IVInvisibleApp::PutMyShapesPath ( _bstr_t lpbstrRet );
__declspec(implementation_key(2473)) IUnknownPtr IVInvisibleApp::GetDefaultRectangleDataObject ( );
__declspec(implementation_key(2474)) VARIANT_BOOL IVInvisibleApp::GetDataFeaturesEnabled ( );
__declspec(implementation_key(2475)) IDispatchPtr IVInvisibleApp::GetLanguageSettings ( );
__declspec(implementation_key(2476)) IDispatchPtr IVInvisibleApp::GetAssistance ( );
__declspec(implementation_key(2477)) IUnknownPtr IVMenuSets::Get_NewEnum ( );
__declspec(implementation_key(2478)) IVMenuSetPtr IVMenuSets::GetItem ( long lIndex );
__declspec(implementation_key(2479)) IVMenuSetPtr IVMenuSets::GetItemAtID ( long lID );
__declspec(implementation_key(2480)) IVMenuSetPtr IVMenuSets::Add ( );
__declspec(implementation_key(2481)) IVMenuSetPtr IVMenuSets::AddAtID ( long lID );
__declspec(implementation_key(2482)) long IVMenuSets::GetCount ( );
__declspec(implementation_key(2483)) IVUIObjectPtr IVMenuSets::GetParent ( );
__declspec(implementation_key(2484)) HRESULT IVMenuSet::Delete ( );
__declspec(implementation_key(2485)) _bstr_t IVMenuSet::GetDefault ( );
__declspec(implementation_key(2486)) void IVMenuSet::PutCaption ( _bstr_t pCaption );
__declspec(implementation_key(2487)) _bstr_t IVMenuSet::GetCaption ( );
__declspec(implementation_key(2488)) long IVMenuSet::GetSetID ( );
__declspec(implementation_key(2489)) IVMenusPtr IVMenuSet::GetMenus ( );
__declspec(implementation_key(2490)) IVMenuSetsPtr IVMenuSet::GetParent ( );
__declspec(implementation_key(2491)) VARIANT_BOOL IVMenuSet::GetBuiltIn ( );
__declspec(implementation_key(2492)) void IVMenuSet::PutEnabled ( VARIANT_BOOL pbEnabled );
__declspec(implementation_key(2493)) VARIANT_BOOL IVMenuSet::GetEnabled ( );
__declspec(implementation_key(2494)) void IVMenuSet::PutHeight ( short pHeight );
__declspec(implementation_key(2495)) short IVMenuSet::GetHeight ( );
__declspec(implementation_key(2496)) void IVMenuSet::PutLeft ( short pLeft );
__declspec(implementation_key(2497)) short IVMenuSet::GetLeft ( );
__declspec(implementation_key(2498)) void IVMenuSet::PutPosition ( short pPos );
__declspec(implementation_key(2499)) short IVMenuSet::GetPosition ( );
__declspec(implementation_key(2500)) void IVMenuSet::PutProtection ( short pProt );
__declspec(implementation_key(2501)) short IVMenuSet::GetProtection ( );
__declspec(implementation_key(2502)) void IVMenuSet::PutRowIndex ( short pwRow );
__declspec(implementation_key(2503)) short IVMenuSet::GetRowIndex ( );
__declspec(implementation_key(2504)) void IVMenuSet::PutTop ( short pTop );
__declspec(implementation_key(2505)) short IVMenuSet::GetTop ( );
__declspec(implementation_key(2506)) void IVMenuSet::PutVisible ( VARIANT_BOOL pbVisible );
__declspec(implementation_key(2507)) VARIANT_BOOL IVMenuSet::GetVisible ( );
__declspec(implementation_key(2508)) void IVMenuSet::PutWidth ( short pwWidth );
__declspec(implementation_key(2509)) short IVMenuSet::GetWidth ( );
__declspec(implementation_key(2510)) HRESULT IEnumVMenuSet::Next ( long celt, struct IVMenuSet * * rgelt, long * pceltFetched );
__declspec(implementation_key(2511)) HRESULT IEnumVMenuSet::Skip ( long celt );
__declspec(implementation_key(2512)) HRESULT IEnumVMenuSet::Reset ( );
__declspec(implementation_key(2513)) HRESULT IEnumVMenuSet::Clone ( struct IEnumVMenuSet * * ppenm );
__declspec(implementation_key(2514)) IUnknownPtr IVMenus::Get_NewEnum ( );
__declspec(implementation_key(2515)) IVMenuPtr IVMenus::GetItem ( long lIndex );
__declspec(implementation_key(2516)) IVMenuPtr IVMenus::Add ( );
__declspec(implementation_key(2517)) IVMenuPtr IVMenus::AddAt ( long lIndex );
__declspec(implementation_key(2518)) long IVMenus::GetCount ( );
__declspec(implementation_key(2519)) IVMenuSetPtr IVMenus::GetParent ( );
__declspec(implementation_key(2520)) HRESULT IVMenu::Delete ( );
__declspec(implementation_key(2521)) _bstr_t IVMenu::GetDefault ( );
__declspec(implementation_key(2522)) void IVMenu::PutCaption ( _bstr_t pCaption );
__declspec(implementation_key(2523)) _bstr_t IVMenu::GetCaption ( );
__declspec(implementation_key(2524)) long IVMenu::GetIndex ( );
__declspec(implementation_key(2525)) void IVMenu::PutMDIWindowMenu ( short pMDIWindowMenu );
__declspec(implementation_key(2526)) short IVMenu::GetMDIWindowMenu ( );
__declspec(implementation_key(2527)) IVMenuItemsPtr IVMenu::GetMenuItems ( );
__declspec(implementation_key(2528)) IVMenusPtr IVMenu::GetParent ( );
__declspec(implementation_key(2529)) void IVMenu::PutCmdNum ( short pwCmd );
__declspec(implementation_key(2530)) short IVMenu::GetCmdNum ( );
__declspec(implementation_key(2531)) void IVMenu::PutHelpContextID ( short pHelpContextID );
__declspec(implementation_key(2532)) short IVMenu::GetHelpContextID ( );
__declspec(implementation_key(2533)) short IVMenu::GetIsSeparator ( );
__declspec(implementation_key(2534)) short IVMenu::GetIsHierarchical ( );
__declspec(implementation_key(2535)) void IVMenu::PutCntrlType ( short pwCntrlType );
__declspec(implementation_key(2536)) short IVMenu::GetCntrlType ( );
__declspec(implementation_key(2537)) void IVMenu::PutCntrlID ( short pwCntrlID );
__declspec(implementation_key(2538)) short IVMenu::GetCntrlID ( );
__declspec(implementation_key(2539)) void IVMenu::PutTypeSpecific1 ( short pwTypeSpecific );
__declspec(implementation_key(2540)) short IVMenu::GetTypeSpecific1 ( );
__declspec(implementation_key(2541)) void IVMenu::PutPriority ( short pwPriority );
__declspec(implementation_key(2542)) short IVMenu::GetPriority ( );
__declspec(implementation_key(2543)) void IVMenu::PutSpacing ( short pwSpacing );
__declspec(implementation_key(2544)) short IVMenu::GetSpacing ( );
__declspec(implementation_key(2545)) void IVMenu::PutTypeSpecific2 ( short pwTypeSpecific );
__declspec(implementation_key(2546)) short IVMenu::GetTypeSpecific2 ( );
__declspec(implementation_key(2547)) void IVMenu::PutActionText ( _bstr_t pActionText );
__declspec(implementation_key(2548)) _bstr_t IVMenu::GetActionText ( );
__declspec(implementation_key(2549)) void IVMenu::PutMiniHelp ( _bstr_t pMiniHelp );
__declspec(implementation_key(2550)) _bstr_t IVMenu::GetMiniHelp ( );
__declspec(implementation_key(2551)) void IVMenu::PutAddOnName ( _bstr_t pAddOnName );
__declspec(implementation_key(2552)) _bstr_t IVMenu::GetAddOnName ( );
__declspec(implementation_key(2553)) void IVMenu::PutAddOnArgs ( _bstr_t pAddOnArgs );
__declspec(implementation_key(2554)) _bstr_t IVMenu::GetAddOnArgs ( );
__declspec(implementation_key(2555)) void IVMenu::PutHelpFile ( _bstr_t pHelpFile );
__declspec(implementation_key(2556)) _bstr_t IVMenu::GetHelpFile ( );
__declspec(implementation_key(2557)) HRESULT IVMenu::IconFileName ( _bstr_t IconFileName );
__declspec(implementation_key(2558)) VARIANT_BOOL IVMenu::GetBuiltIn ( );
__declspec(implementation_key(2559)) void IVMenu::PutEnabled ( VARIANT_BOOL pbEnabled );
__declspec(implementation_key(2560)) VARIANT_BOOL IVMenu::GetEnabled ( );
__declspec(implementation_key(2561)) void IVMenu::PutFaceID ( short pwFaceID );
__declspec(implementation_key(2562)) short IVMenu::GetFaceID ( );
__declspec(implementation_key(2563)) void IVMenu::PutState ( short pwState );
__declspec(implementation_key(2564)) short IVMenu::GetState ( );
__declspec(implementation_key(2565)) void IVMenu::PutStyle ( short pwStyle );
__declspec(implementation_key(2566)) short IVMenu::GetStyle ( );
__declspec(implementation_key(2567)) void IVMenu::PutVisible ( VARIANT_BOOL pbVisible );
__declspec(implementation_key(2568)) VARIANT_BOOL IVMenu::GetVisible ( );
__declspec(implementation_key(2569)) void IVMenu::PutWidth ( short pwWidth );
__declspec(implementation_key(2570)) short IVMenu::GetWidth ( );
__declspec(implementation_key(2571)) void IVMenu::PutPaletteWidth ( short pwWidth );
__declspec(implementation_key(2572)) short IVMenu::GetPaletteWidth ( );
__declspec(implementation_key(2573)) HRESULT IEnumVMenu::Next ( long celt, struct IVMenu * * rgelt, long * pceltFetched );
__declspec(implementation_key(2574)) HRESULT IEnumVMenu::Skip ( long celt );
__declspec(implementation_key(2575)) HRESULT IEnumVMenu::Reset ( );
__declspec(implementation_key(2576)) HRESULT IEnumVMenu::Clone ( struct IEnumVMenu * * ppenm );
__declspec(implementation_key(2577)) IUnknownPtr IVMenuItems::Get_NewEnum ( );
__declspec(implementation_key(2578)) IVMenuItemPtr IVMenuItems::GetItem ( long lIndex );
__declspec(implementation_key(2579)) IVMenuItemPtr IVMenuItems::Add ( );
__declspec(implementation_key(2580)) IVMenuItemPtr IVMenuItems::AddAt ( long lIndex );
__declspec(implementation_key(2581)) long IVMenuItems::GetCount ( );
__declspec(implementation_key(2582)) IVMenuPtr IVMenuItems::GetParent ( );
__declspec(implementation_key(2583)) IVMenuItemPtr IVMenuItems::GetParentItem ( );
__declspec(implementation_key(2584)) HRESULT IVMenuItem::Delete ( );
__declspec(implementation_key(2585)) _bstr_t IVMenuItem::GetDefault ( );
__declspec(implementation_key(2586)) long IVMenuItem::GetIndex ( );
__declspec(implementation_key(2587)) IVMenuItemsPtr IVMenuItem::GetMenuItems ( );
__declspec(implementation_key(2588)) IVMenuItemsPtr IVMenuItem::GetParent ( );
__declspec(implementation_key(2589)) void IVMenuItem::PutCmdNum ( short pwCmd );
__declspec(implementation_key(2590)) short IVMenuItem::GetCmdNum ( );
__declspec(implementation_key(2591)) void IVMenuItem::PutHelpContextID ( short pHelpContextID );
__declspec(implementation_key(2592)) short IVMenuItem::GetHelpContextID ( );
__declspec(implementation_key(2593)) short IVMenuItem::GetIsSeparator ( );
__declspec(implementation_key(2594)) short IVMenuItem::GetIsHierarchical ( );
__declspec(implementation_key(2595)) void IVMenuItem::PutCaption ( _bstr_t pCaption );
__declspec(implementation_key(2596)) _bstr_t IVMenuItem::GetCaption ( );
__declspec(implementation_key(2597)) void IVMenuItem::PutActionText ( _bstr_t pActionText );
__declspec(implementation_key(2598)) _bstr_t IVMenuItem::GetActionText ( );
__declspec(implementation_key(2599)) void IVMenuItem::PutMiniHelp ( _bstr_t pMiniHelp );
__declspec(implementation_key(2600)) _bstr_t IVMenuItem::GetMiniHelp ( );
__declspec(implementation_key(2601)) void IVMenuItem::PutAddOnName ( _bstr_t pAddOnName );
__declspec(implementation_key(2602)) _bstr_t IVMenuItem::GetAddOnName ( );
__declspec(implementation_key(2603)) void IVMenuItem::PutAddOnArgs ( _bstr_t pAddOnArgs );
__declspec(implementation_key(2604)) _bstr_t IVMenuItem::GetAddOnArgs ( );
__declspec(implementation_key(2605)) void IVMenuItem::PutHelpFile ( _bstr_t pHelpFile );
__declspec(implementation_key(2606)) _bstr_t IVMenuItem::GetHelpFile ( );
__declspec(implementation_key(2607)) void IVMenuItem::PutCntrlType ( short pwCntrlType );
__declspec(implementation_key(2608)) short IVMenuItem::GetCntrlType ( );
__declspec(implementation_key(2609)) void IVMenuItem::PutCntrlID ( short pwCntrlID );
__declspec(implementation_key(2610)) short IVMenuItem::GetCntrlID ( );
__declspec(implementation_key(2611)) void IVMenuItem::PutTypeSpecific1 ( short pwTypeSpecific );
__declspec(implementation_key(2612)) short IVMenuItem::GetTypeSpecific1 ( );
__declspec(implementation_key(2613)) void IVMenuItem::PutPriority ( short pwPriority );
__declspec(implementation_key(2614)) short IVMenuItem::GetPriority ( );
__declspec(implementation_key(2615)) void IVMenuItem::PutSpacing ( short pwSpacing );
__declspec(implementation_key(2616)) short IVMenuItem::GetSpacing ( );
__declspec(implementation_key(2617)) void IVMenuItem::PutTypeSpecific2 ( short pwTypeSpecific );
__declspec(implementation_key(2618)) short IVMenuItem::GetTypeSpecific2 ( );
__declspec(implementation_key(2619)) HRESULT IVMenuItem::IconFileName ( _bstr_t IconFileName );
__declspec(implementation_key(2620)) VARIANT_BOOL IVMenuItem::GetBuiltIn ( );
__declspec(implementation_key(2621)) void IVMenuItem::PutEnabled ( VARIANT_BOOL pbEnabled );
__declspec(implementation_key(2622)) VARIANT_BOOL IVMenuItem::GetEnabled ( );
__declspec(implementation_key(2623)) void IVMenuItem::PutFaceID ( short pwFaceID );
__declspec(implementation_key(2624)) short IVMenuItem::GetFaceID ( );
__declspec(implementation_key(2625)) void IVMenuItem::PutState ( short pwState );
__declspec(implementation_key(2626)) short IVMenuItem::GetState ( );
__declspec(implementation_key(2627)) void IVMenuItem::PutStyle ( short pwStyle );
__declspec(implementation_key(2628)) short IVMenuItem::GetStyle ( );
__declspec(implementation_key(2629)) void IVMenuItem::PutVisible ( VARIANT_BOOL pbVisible );
__declspec(implementation_key(2630)) VARIANT_BOOL IVMenuItem::GetVisible ( );
__declspec(implementation_key(2631)) void IVMenuItem::PutWidth ( short pwWidth );
__declspec(implementation_key(2632)) short IVMenuItem::GetWidth ( );
__declspec(implementation_key(2633)) void IVMenuItem::PutPaletteWidth ( short pwWidth );
__declspec(implementation_key(2634)) short IVMenuItem::GetPaletteWidth ( );
__declspec(implementation_key(2635)) void IVMenuItem::PutBeginGroup ( VARIANT_BOOL pbRet );
__declspec(implementation_key(2636)) VARIANT_BOOL IVMenuItem::GetBeginGroup ( );
__declspec(implementation_key(2637)) HRESULT IEnumVMenuItem::Next ( long celt, struct IVMenuItem * * rgelt, long * pceltFetched );
__declspec(implementation_key(2638)) HRESULT IEnumVMenuItem::Skip ( long celt );
__declspec(implementation_key(2639)) HRESULT IEnumVMenuItem::Reset ( );
__declspec(implementation_key(2640)) HRESULT IEnumVMenuItem::Clone ( struct IEnumVMenuItem * * ppenm );
__declspec(implementation_key(2641)) IUnknownPtr IVToolbarSets::Get_NewEnum ( );
__declspec(implementation_key(2642)) IVToolbarSetPtr IVToolbarSets::GetItem ( long lIndex );
__declspec(implementation_key(2643)) IVToolbarSetPtr IVToolbarSets::GetItemAtID ( long lID );
__declspec(implementation_key(2644)) IVToolbarSetPtr IVToolbarSets::Add ( );
__declspec(implementation_key(2645)) IVToolbarSetPtr IVToolbarSets::AddAtID ( long lID );
__declspec(implementation_key(2646)) long IVToolbarSets::GetCount ( );
__declspec(implementation_key(2647)) IVUIObjectPtr IVToolbarSets::GetParent ( );
__declspec(implementation_key(2648)) HRESULT IVToolbarSet::Delete ( );
__declspec(implementation_key(2649)) _bstr_t IVToolbarSet::GetDefault ( );
__declspec(implementation_key(2650)) void IVToolbarSet::PutCaption ( _bstr_t pCaption );
__declspec(implementation_key(2651)) _bstr_t IVToolbarSet::GetCaption ( );
__declspec(implementation_key(2652)) long IVToolbarSet::GetSetID ( );
__declspec(implementation_key(2653)) IVToolbarsPtr IVToolbarSet::GetToolbars ( );
__declspec(implementation_key(2654)) IVToolbarSetsPtr IVToolbarSet::GetParent ( );
__declspec(implementation_key(2655)) HRESULT IEnumVToolbarSet::Next ( long celt, struct IVToolbarSet * * rgelt, long * pceltFetched );
__declspec(implementation_key(2656)) HRESULT IEnumVToolbarSet::Skip ( long celt );
__declspec(implementation_key(2657)) HRESULT IEnumVToolbarSet::Reset ( );
__declspec(implementation_key(2658)) HRESULT IEnumVToolbarSet::Clone ( struct IEnumVToolbarSet * * ppenm );
__declspec(implementation_key(2659)) IUnknownPtr IVToolbars::Get_NewEnum ( );
__declspec(implementation_key(2660)) IVToolbarPtr IVToolbars::GetItem ( long lIndex );
__declspec(implementation_key(2661)) IVToolbarPtr IVToolbars::Add ( );
__declspec(implementation_key(2662)) IVToolbarPtr IVToolbars::AddAt ( long lIndex );
__declspec(implementation_key(2663)) long IVToolbars::GetCount ( );
__declspec(implementation_key(2664)) IVToolbarSetPtr IVToolbars::GetParent ( );
__declspec(implementation_key(2665)) HRESULT IVToolbar::Delete ( );
__declspec(implementation_key(2666)) _bstr_t IVToolbar::GetDefault ( );
__declspec(implementation_key(2667)) void IVToolbar::PutCaption ( _bstr_t pCaption );
__declspec(implementation_key(2668)) _bstr_t IVToolbar::GetCaption ( );
__declspec(implementation_key(2669)) long IVToolbar::GetIndex ( );
__declspec(implementation_key(2670)) IVToolbarItemsPtr IVToolbar::GetToolbarItems ( );
__declspec(implementation_key(2671)) IVToolbarsPtr IVToolbar::GetParent ( );
__declspec(implementation_key(2672)) VARIANT_BOOL IVToolbar::GetBuiltIn ( );
__declspec(implementation_key(2673)) void IVToolbar::PutEnabled ( VARIANT_BOOL pbEnabled );
__declspec(implementation_key(2674)) VARIANT_BOOL IVToolbar::GetEnabled ( );
__declspec(implementation_key(2675)) void IVToolbar::PutHeight ( short pHeight );
__declspec(implementation_key(2676)) short IVToolbar::GetHeight ( );
__declspec(implementation_key(2677)) void IVToolbar::PutLeft ( short pLeft );
__declspec(implementation_key(2678)) short IVToolbar::GetLeft ( );
__declspec(implementation_key(2679)) void IVToolbar::PutPosition ( short pPos );
__declspec(implementation_key(2680)) short IVToolbar::GetPosition ( );
__declspec(implementation_key(2681)) void IVToolbar::PutProtection ( short pProt );
__declspec(implementation_key(2682)) short IVToolbar::GetProtection ( );
__declspec(implementation_key(2683)) void IVToolbar::PutRowIndex ( short pwRow );
__declspec(implementation_key(2684)) short IVToolbar::GetRowIndex ( );
__declspec(implementation_key(2685)) void IVToolbar::PutTop ( short pTop );
__declspec(implementation_key(2686)) short IVToolbar::GetTop ( );
__declspec(implementation_key(2687)) void IVToolbar::PutVisible ( VARIANT_BOOL pbVisible );
__declspec(implementation_key(2688)) VARIANT_BOOL IVToolbar::GetVisible ( );
__declspec(implementation_key(2689)) void IVToolbar::PutWidth ( short pwWidth );
__declspec(implementation_key(2690)) short IVToolbar::GetWidth ( );
__declspec(implementation_key(2691)) HRESULT IEnumVToolbar::Next ( long celt, struct IVToolbar * * rgelt, long * pceltFetched );
__declspec(implementation_key(2692)) HRESULT IEnumVToolbar::Skip ( long celt );
__declspec(implementation_key(2693)) HRESULT IEnumVToolbar::Reset ( );
__declspec(implementation_key(2694)) HRESULT IEnumVToolbar::Clone ( struct IEnumVToolbar * * ppenm );
__declspec(implementation_key(2695)) IUnknownPtr IVToolbarItems::Get_NewEnum ( );
__declspec(implementation_key(2696)) IVToolbarItemPtr IVToolbarItems::GetItem ( long lIndex );
__declspec(implementation_key(2697)) IVToolbarItemPtr IVToolbarItems::Add ( );
__declspec(implementation_key(2698)) IVToolbarItemPtr IVToolbarItems::AddAt ( long lIndex );
__declspec(implementation_key(2699)) long IVToolbarItems::GetCount ( );
__declspec(implementation_key(2700)) IVToolbarPtr IVToolbarItems::GetParent ( );
__declspec(implementation_key(2701)) IVToolbarItemPtr IVToolbarItems::GetParentItem ( );
__declspec(implementation_key(2702)) HRESULT IVToolbarItem::Delete ( );
__declspec(implementation_key(2703)) HRESULT IVToolbarItem::IconFileName ( _bstr_t IconFileName );
__declspec(implementation_key(2704)) _bstr_t IVToolbarItem::GetDefault ( );
__declspec(implementation_key(2705)) long IVToolbarItem::GetIndex ( );
__declspec(implementation_key(2706)) IVToolbarItemsPtr IVToolbarItem::GetParent ( );
__declspec(implementation_key(2707)) void IVToolbarItem::PutCmdNum ( short pwCmd );
__declspec(implementation_key(2708)) short IVToolbarItem::GetCmdNum ( );
__declspec(implementation_key(2709)) void IVToolbarItem::PutHelpContextID ( short pHelpContextID );
__declspec(implementation_key(2710)) short IVToolbarItem::GetHelpContextID ( );
__declspec(implementation_key(2711)) void IVToolbarItem::PutActionText ( _bstr_t pActionText );
__declspec(implementation_key(2712)) _bstr_t IVToolbarItem::GetActionText ( );
__declspec(implementation_key(2713)) void IVToolbarItem::PutAddOnName ( _bstr_t pAddOnName );
__declspec(implementation_key(2714)) _bstr_t IVToolbarItem::GetAddOnName ( );
__declspec(implementation_key(2715)) void IVToolbarItem::PutAddOnArgs ( _bstr_t pAddOnArgs );
__declspec(implementation_key(2716)) _bstr_t IVToolbarItem::GetAddOnArgs ( );
__declspec(implementation_key(2717)) void IVToolbarItem::PutHelpFile ( _bstr_t pHelpFile );
__declspec(implementation_key(2718)) _bstr_t IVToolbarItem::GetHelpFile ( );
__declspec(implementation_key(2719)) void IVToolbarItem::PutCntrlType ( short pwCntrlType );
__declspec(implementation_key(2720)) short IVToolbarItem::GetCntrlType ( );
__declspec(implementation_key(2721)) void IVToolbarItem::PutCntrlID ( short pwCntrlID );
__declspec(implementation_key(2722)) short IVToolbarItem::GetCntrlID ( );
__declspec(implementation_key(2723)) void IVToolbarItem::PutTypeSpecific1 ( short pwTypeSpecific );
__declspec(implementation_key(2724)) short IVToolbarItem::GetTypeSpecific1 ( );
__declspec(implementation_key(2725)) void IVToolbarItem::PutPriority ( short pwPriority );
__declspec(implementation_key(2726)) short IVToolbarItem::GetPriority ( );
__declspec(implementation_key(2727)) void IVToolbarItem::PutSpacing ( short pwSpacing );
__declspec(implementation_key(2728)) short IVToolbarItem::GetSpacing ( );
__declspec(implementation_key(2729)) void IVToolbarItem::PutTypeSpecific2 ( short pwTypeSpecific );
__declspec(implementation_key(2730)) short IVToolbarItem::GetTypeSpecific2 ( );
__declspec(implementation_key(2731)) void IVToolbarItem::PutCaption ( _bstr_t pCaption );
__declspec(implementation_key(2732)) _bstr_t IVToolbarItem::GetCaption ( );
__declspec(implementation_key(2733)) void IVToolbarItem::PutMiniHelp ( _bstr_t pMiniHelp );
__declspec(implementation_key(2734)) _bstr_t IVToolbarItem::GetMiniHelp ( );
__declspec(implementation_key(2735)) VARIANT_BOOL IVToolbarItem::GetBuiltIn ( );
__declspec(implementation_key(2736)) void IVToolbarItem::PutEnabled ( VARIANT_BOOL pbEnabled );
__declspec(implementation_key(2737)) VARIANT_BOOL IVToolbarItem::GetEnabled ( );
__declspec(implementation_key(2738)) void IVToolbarItem::PutFaceID ( short pwFaceID );
__declspec(implementation_key(2739)) short IVToolbarItem::GetFaceID ( );
__declspec(implementation_key(2740)) void IVToolbarItem::PutState ( short pwState );
__declspec(implementation_key(2741)) short IVToolbarItem::GetState ( );
__declspec(implementation_key(2742)) void IVToolbarItem::PutStyle ( short pwStyle );
__declspec(implementation_key(2743)) short IVToolbarItem::GetStyle ( );
__declspec(implementation_key(2744)) void IVToolbarItem::PutVisible ( VARIANT_BOOL pbVisible );
__declspec(implementation_key(2745)) VARIANT_BOOL IVToolbarItem::GetVisible ( );
__declspec(implementation_key(2746)) void IVToolbarItem::PutWidth ( short pwWidth );
__declspec(implementation_key(2747)) short IVToolbarItem::GetWidth ( );
__declspec(implementation_key(2748)) void IVToolbarItem::PutPaletteWidth ( short pwWidth );
__declspec(implementation_key(2749)) short IVToolbarItem::GetPaletteWidth ( );
__declspec(implementation_key(2750)) IVToolbarItemsPtr IVToolbarItem::GetToolbarItems ( );
__declspec(implementation_key(2751)) short IVToolbarItem::GetIsSeparator ( );
__declspec(implementation_key(2752)) short IVToolbarItem::GetIsHierarchical ( );
__declspec(implementation_key(2753)) void IVToolbarItem::PutBeginGroup ( VARIANT_BOOL pbRet );
__declspec(implementation_key(2754)) VARIANT_BOOL IVToolbarItem::GetBeginGroup ( );
__declspec(implementation_key(2755)) HRESULT IEnumVToolbarItem::Next ( long celt, struct IVToolbarItem * * rgelt, long * pceltFetched );
__declspec(implementation_key(2756)) HRESULT IEnumVToolbarItem::Skip ( long celt );
__declspec(implementation_key(2757)) HRESULT IEnumVToolbarItem::Reset ( );
__declspec(implementation_key(2758)) HRESULT IEnumVToolbarItem::Clone ( struct IEnumVToolbarItem * * ppenm );
__declspec(implementation_key(2759)) IUnknownPtr IVStatusBars::Get_NewEnum ( );
__declspec(implementation_key(2760)) IVStatusBarPtr IVStatusBars::GetItem ( long lIndex );
__declspec(implementation_key(2761)) IVStatusBarPtr IVStatusBars::GetItemAtID ( long lID );
__declspec(implementation_key(2762)) IVStatusBarPtr IVStatusBars::Add ( );
__declspec(implementation_key(2763)) IVStatusBarPtr IVStatusBars::AddAtID ( long lID );
__declspec(implementation_key(2764)) long IVStatusBars::GetCount ( );
__declspec(implementation_key(2765)) IVUIObjectPtr IVStatusBars::GetParent ( );
__declspec(implementation_key(2766)) HRESULT IVStatusBar::Delete ( );
__declspec(implementation_key(2767)) _bstr_t IVStatusBar::GetDefault ( );
__declspec(implementation_key(2768)) void IVStatusBar::PutCaption ( _bstr_t pCaption );
__declspec(implementation_key(2769)) _bstr_t IVStatusBar::GetCaption ( );
__declspec(implementation_key(2770)) long IVStatusBar::GetSetID ( );
__declspec(implementation_key(2771)) IVStatusBarItemsPtr IVStatusBar::GetStatusBarItems ( );
__declspec(implementation_key(2772)) IVStatusBarsPtr IVStatusBar::GetParent ( );
__declspec(implementation_key(2773)) VARIANT_BOOL IVStatusBar::GetBuiltIn ( );
__declspec(implementation_key(2774)) void IVStatusBar::PutProtection ( short pProt );
__declspec(implementation_key(2775)) short IVStatusBar::GetProtection ( );
__declspec(implementation_key(2776)) HRESULT IEnumVStatusBar::Next ( long celt, struct IVStatusBar * * rgelt, long * pceltFetched );
__declspec(implementation_key(2777)) HRESULT IEnumVStatusBar::Skip ( long celt );
__declspec(implementation_key(2778)) HRESULT IEnumVStatusBar::Reset ( );
__declspec(implementation_key(2779)) HRESULT IEnumVStatusBar::Clone ( struct IEnumVStatusBar * * ppenm );
__declspec(implementation_key(2780)) IUnknownPtr IVStatusBarItems::Get_NewEnum ( );
__declspec(implementation_key(2781)) IVStatusBarItemPtr IVStatusBarItems::GetItem ( long lIndex );
__declspec(implementation_key(2782)) IVStatusBarItemPtr IVStatusBarItems::Add ( );
__declspec(implementation_key(2783)) IVStatusBarItemPtr IVStatusBarItems::AddAt ( long lIndex );
__declspec(implementation_key(2784)) long IVStatusBarItems::GetCount ( );
__declspec(implementation_key(2785)) IVStatusBarPtr IVStatusBarItems::GetParent ( );
__declspec(implementation_key(2786)) IVStatusBarItemPtr IVStatusBarItems::GetParentItem ( );
__declspec(implementation_key(2787)) HRESULT IVStatusBarItem::Delete ( );
__declspec(implementation_key(2788)) HRESULT IVStatusBarItem::IconFileName ( _bstr_t IconFileName );
__declspec(implementation_key(2789)) _bstr_t IVStatusBarItem::GetDefault ( );
__declspec(implementation_key(2790)) long IVStatusBarItem::GetIndex ( );
__declspec(implementation_key(2791)) IVStatusBarItemsPtr IVStatusBarItem::GetParent ( );
__declspec(implementation_key(2792)) void IVStatusBarItem::PutCmdNum ( short pwCmd );
__declspec(implementation_key(2793)) short IVStatusBarItem::GetCmdNum ( );
__declspec(implementation_key(2794)) void IVStatusBarItem::PutHelpContextID ( short pHelpContextID );
__declspec(implementation_key(2795)) short IVStatusBarItem::GetHelpContextID ( );
__declspec(implementation_key(2796)) void IVStatusBarItem::PutActionText ( _bstr_t pActionText );
__declspec(implementation_key(2797)) _bstr_t IVStatusBarItem::GetActionText ( );
__declspec(implementation_key(2798)) void IVStatusBarItem::PutAddOnName ( _bstr_t pAddOnName );
__declspec(implementation_key(2799)) _bstr_t IVStatusBarItem::GetAddOnName ( );
__declspec(implementation_key(2800)) void IVStatusBarItem::PutAddOnArgs ( _bstr_t pAddOnArgs );
__declspec(implementation_key(2801)) _bstr_t IVStatusBarItem::GetAddOnArgs ( );
__declspec(implementation_key(2802)) void IVStatusBarItem::PutHelpFile ( _bstr_t pHelpFile );
__declspec(implementation_key(2803)) _bstr_t IVStatusBarItem::GetHelpFile ( );
__declspec(implementation_key(2804)) void IVStatusBarItem::PutCntrlType ( short pwCntrlType );
__declspec(implementation_key(2805)) short IVStatusBarItem::GetCntrlType ( );
__declspec(implementation_key(2806)) void IVStatusBarItem::PutCntrlID ( short pwCntrlID );
__declspec(implementation_key(2807)) short IVStatusBarItem::GetCntrlID ( );
__declspec(implementation_key(2808)) void IVStatusBarItem::PutTypeSpecific1 ( short pwTypeSpecific );
__declspec(implementation_key(2809)) short IVStatusBarItem::GetTypeSpecific1 ( );
__declspec(implementation_key(2810)) void IVStatusBarItem::PutPriority ( short pwPriority );
__declspec(implementation_key(2811)) short IVStatusBarItem::GetPriority ( );
__declspec(implementation_key(2812)) void IVStatusBarItem::PutSpacing ( short pwSpacing );
__declspec(implementation_key(2813)) short IVStatusBarItem::GetSpacing ( );
__declspec(implementation_key(2814)) void IVStatusBarItem::PutTypeSpecific2 ( short pwTypeSpecific );
__declspec(implementation_key(2815)) short IVStatusBarItem::GetTypeSpecific2 ( );
__declspec(implementation_key(2816)) void IVStatusBarItem::PutCaption ( _bstr_t pCaption );
__declspec(implementation_key(2817)) _bstr_t IVStatusBarItem::GetCaption ( );
__declspec(implementation_key(2818)) void IVStatusBarItem::PutMiniHelp ( _bstr_t pMiniHelp );
__declspec(implementation_key(2819)) _bstr_t IVStatusBarItem::GetMiniHelp ( );
__declspec(implementation_key(2820)) VARIANT_BOOL IVStatusBarItem::GetBuiltIn ( );
__declspec(implementation_key(2821)) void IVStatusBarItem::PutEnabled ( VARIANT_BOOL pbEnabled );
__declspec(implementation_key(2822)) VARIANT_BOOL IVStatusBarItem::GetEnabled ( );
__declspec(implementation_key(2823)) void IVStatusBarItem::PutFaceID ( short pwFaceID );
__declspec(implementation_key(2824)) short IVStatusBarItem::GetFaceID ( );
__declspec(implementation_key(2825)) void IVStatusBarItem::PutState ( short pwState );
__declspec(implementation_key(2826)) short IVStatusBarItem::GetState ( );
__declspec(implementation_key(2827)) void IVStatusBarItem::PutStyle ( short pwStyle );
__declspec(implementation_key(2828)) short IVStatusBarItem::GetStyle ( );
__declspec(implementation_key(2829)) void IVStatusBarItem::PutVisible ( VARIANT_BOOL pbVisible );
__declspec(implementation_key(2830)) VARIANT_BOOL IVStatusBarItem::GetVisible ( );
__declspec(implementation_key(2831)) void IVStatusBarItem::PutWidth ( short pwWidth );
__declspec(implementation_key(2832)) short IVStatusBarItem::GetWidth ( );
__declspec(implementation_key(2833)) void IVStatusBarItem::PutPaletteWidth ( short pwWidth );
__declspec(implementation_key(2834)) short IVStatusBarItem::GetPaletteWidth ( );
__declspec(implementation_key(2835)) IVStatusBarItemsPtr IVStatusBarItem::GetStatusBarItems ( );
__declspec(implementation_key(2836)) short IVStatusBarItem::GetIsSeparator ( );
__declspec(implementation_key(2837)) short IVStatusBarItem::GetIsHierarchical ( );
__declspec(implementation_key(2838)) HRESULT IEnumVStatusBarItem::Next ( long celt, struct IVStatusBarItem * * rgelt, long * pceltFetched );
__declspec(implementation_key(2839)) HRESULT IEnumVStatusBarItem::Skip ( long celt );
__declspec(implementation_key(2840)) HRESULT IEnumVStatusBarItem::Reset ( );
__declspec(implementation_key(2841)) HRESULT IEnumVStatusBarItem::Clone ( struct IEnumVStatusBarItem * * ppenm );
__declspec(implementation_key(2842)) IUnknownPtr IVAccelTables::Get_NewEnum ( );
__declspec(implementation_key(2843)) IVAccelTablePtr IVAccelTables::GetItem ( long lIndex );
__declspec(implementation_key(2844)) IVAccelTablePtr IVAccelTables::GetItemAtID ( long lID );
__declspec(implementation_key(2845)) IVAccelTablePtr IVAccelTables::Add ( );
__declspec(implementation_key(2846)) IVAccelTablePtr IVAccelTables::AddAtID ( long lID );
__declspec(implementation_key(2847)) long IVAccelTables::GetCount ( );
__declspec(implementation_key(2848)) IVUIObjectPtr IVAccelTables::GetParent ( );
__declspec(implementation_key(2849)) HRESULT IVAccelTable::Delete ( );
__declspec(implementation_key(2850)) _bstr_t IVAccelTable::GetDefault ( );
__declspec(implementation_key(2851)) void IVAccelTable::PutTableName ( _bstr_t pTableName );
__declspec(implementation_key(2852)) _bstr_t IVAccelTable::GetTableName ( );
__declspec(implementation_key(2853)) long IVAccelTable::GetSetID ( );
__declspec(implementation_key(2854)) IVAccelItemsPtr IVAccelTable::GetAccelItems ( );
__declspec(implementation_key(2855)) IVAccelTablesPtr IVAccelTable::GetParent ( );
__declspec(implementation_key(2856)) HRESULT IEnumVAccelTable::Next ( long celt, struct IVAccelTable * * rgelt, long * pceltFetched );
__declspec(implementation_key(2857)) HRESULT IEnumVAccelTable::Skip ( long celt );
__declspec(implementation_key(2858)) HRESULT IEnumVAccelTable::Reset ( );
__declspec(implementation_key(2859)) HRESULT IEnumVAccelTable::Clone ( struct IEnumVAccelTable * * ppenm );
__declspec(implementation_key(2860)) IUnknownPtr IVAccelItems::Get_NewEnum ( );
__declspec(implementation_key(2861)) IVAccelItemPtr IVAccelItems::GetItem ( long lIndex );
__declspec(implementation_key(2862)) IVAccelItemPtr IVAccelItems::Add ( );
__declspec(implementation_key(2863)) long IVAccelItems::GetCount ( );
__declspec(implementation_key(2864)) IVAccelTablePtr IVAccelItems::GetParent ( );
__declspec(implementation_key(2865)) HRESULT IVAccelItem::Delete ( );
__declspec(implementation_key(2866)) short IVAccelItem::GetDefault ( );
__declspec(implementation_key(2867)) void IVAccelItem::PutCmdNum ( short pwCmd );
__declspec(implementation_key(2868)) short IVAccelItem::GetCmdNum ( );
__declspec(implementation_key(2869)) void IVAccelItem::PutKey ( short pKey );
__declspec(implementation_key(2870)) short IVAccelItem::GetKey ( );
__declspec(implementation_key(2871)) void IVAccelItem::PutAlt ( short pAlt );
__declspec(implementation_key(2872)) short IVAccelItem::GetAlt ( );
__declspec(implementation_key(2873)) void IVAccelItem::PutShift ( short pShift );
__declspec(implementation_key(2874)) short IVAccelItem::GetShift ( );
__declspec(implementation_key(2875)) void IVAccelItem::PutControl ( short pControl );
__declspec(implementation_key(2876)) short IVAccelItem::GetControl ( );
__declspec(implementation_key(2877)) IVAccelItemsPtr IVAccelItem::GetParent ( );
__declspec(implementation_key(2878)) void IVAccelItem::PutAddOnName ( _bstr_t pAddOnName );
__declspec(implementation_key(2879)) _bstr_t IVAccelItem::GetAddOnName ( );
__declspec(implementation_key(2880)) void IVAccelItem::PutAddOnArgs ( _bstr_t pAddOnArgs );
__declspec(implementation_key(2881)) _bstr_t IVAccelItem::GetAddOnArgs ( );
__declspec(implementation_key(2882)) HRESULT IEnumVAccelItem::Next ( long celt, struct IVAccelItem * * rgelt, long * pceltFetched );
__declspec(implementation_key(2883)) HRESULT IEnumVAccelItem::Skip ( long celt );
__declspec(implementation_key(2884)) HRESULT IEnumVAccelItem::Reset ( );
__declspec(implementation_key(2885)) HRESULT IEnumVAccelItem::Clone ( struct IEnumVAccelItem * * ppenm );
__declspec(implementation_key(2886)) HRESULT IVBUndoManager::Add ( struct IVBUndoUnit * pUnit );
__declspec(implementation_key(2887)) HRESULT IVBUndoUnit::Do ( struct IVBUndoManager * pMgr );
__declspec(implementation_key(2888)) _bstr_t IVBUndoUnit::GetDescription ( );
__declspec(implementation_key(2889)) _bstr_t IVBUndoUnit::GetUnitTypeCLSID ( );
__declspec(implementation_key(2890)) HRESULT IVBUndoUnit::OnNextAdd ( );
__declspec(implementation_key(2891)) long IVBUndoUnit::GetUnitTypeLong ( );
__declspec(implementation_key(2892)) long IVBUndoUnit::GetUnitSize ( );
#pragma stop_map_region

} // namespace MSVISIO

#pragma pack(pop)
