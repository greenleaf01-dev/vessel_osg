// Created by Microsoft (R) C/C++ Compiler Version 14.00.24215.1 (39883558).
//
// f:\hitetouchpro_work\test_cross_1\utility\win32\release\msword.tlh
//
// C++ source equivalent of Win32 type library ./ImportFile/MSWORD.OLB
// compiler-generated file created 01/25/18 at 14:37:11 - DO NOT EDIT!

//
// Cross-referenced type libraries:
//
//

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace MSWord {

//
// Forward references and typedefs
//

struct __declspec(uuid("00020905-0000-0000-c000-000000000046"))
/* LIBID */ __Word;
enum WdMailSystem;
enum WdTemplateType;
enum WdContinue;
enum WdIMEMode;
enum WdBaselineAlignment;
enum WdIndexFilter;
enum WdIndexSortBy;
enum WdJustificationMode;
enum WdFarEastLineBreakLevel;
enum WdMultipleWordConversionsMode;
enum WdColorIndex;
enum WdTextureIndex;
enum WdUnderline;
enum WdEmphasisMark;
enum WdInternationalIndex;
enum WdAutoMacros;
enum WdCaptionPosition;
enum WdCountry;
enum WdHeadingSeparator;
enum WdSeparatorType;
enum WdPageNumberAlignment;
enum WdBorderType;
enum WdBorderTypeHID;
enum WdFramePosition;
enum WdAnimation;
enum WdCharacterCase;
enum WdCharacterCaseHID;
enum WdSummaryMode;
enum WdSummaryLength;
enum WdStyleType;
enum WdUnits;
enum WdGoToItem;
enum WdGoToDirection;
enum WdCollapseDirection;
enum WdRowHeightRule;
enum WdFrameSizeRule;
enum WdInsertCells;
enum WdDeleteCells;
enum WdListApplyTo;
enum WdAlertLevel;
enum WdCursorType;
enum WdEnableCancelKey;
enum WdRulerStyle;
enum WdParagraphAlignment;
enum WdParagraphAlignmentHID;
enum WdListLevelAlignment;
enum WdRowAlignment;
enum WdTabAlignment;
enum WdVerticalAlignment;
enum WdCellVerticalAlignment;
enum WdTrailingCharacter;
enum WdListGalleryType;
enum WdListNumberStyle;
enum WdListNumberStyleHID;
enum WdNoteNumberStyle;
enum WdNoteNumberStyleHID;
enum WdCaptionNumberStyle;
enum WdCaptionNumberStyleHID;
enum WdPageNumberStyle;
enum WdPageNumberStyleHID;
enum WdStatistic;
enum WdStatisticHID;
enum WdBuiltInProperty;
enum WdLineSpacing;
enum WdNumberType;
enum WdListType;
enum WdStoryType;
enum WdSaveFormat;
enum WdOpenFormat;
enum WdHeaderFooterIndex;
enum WdTocFormat;
enum WdTofFormat;
enum WdToaFormat;
enum WdLineStyle;
enum WdLineWidth;
enum WdBreakType;
enum WdTabLeader;
enum WdTabLeaderHID;
enum WdMeasurementUnits;
enum WdMeasurementUnitsHID;
enum WdDropPosition;
enum WdNumberingRule;
enum WdFootnoteLocation;
enum WdEndnoteLocation;
enum WdSortSeparator;
enum WdTableFieldSeparator;
enum WdSortFieldType;
enum WdSortFieldTypeHID;
enum WdSortOrder;
enum WdTableFormat;
enum WdTableFormatApply;
enum WdLanguageID;
enum WdFieldType;
enum WdBuiltinStyle;
enum WdWordDialogTab;
enum WdWordDialogTabHID;
enum WdWordDialog;
enum WdWordDialogHID;
enum WdFieldKind;
enum WdTextFormFieldType;
enum WdChevronConvertRule;
enum WdMailMergeMainDocType;
enum WdMailMergeState;
enum WdMailMergeDestination;
enum WdMailMergeActiveRecord;
enum WdMailMergeDefaultRecord;
enum WdMailMergeDataSource;
enum WdMailMergeComparison;
enum WdBookmarkSortBy;
enum WdWindowState;
enum WdPictureLinkType;
enum WdLinkType;
enum WdWindowType;
enum WdViewType;
enum WdSeekView;
enum WdSpecialPane;
enum WdPageFit;
enum WdBrowseTarget;
enum WdPaperTray;
enum WdOrientation;
enum WdSelectionType;
enum WdCaptionLabelID;
enum WdReferenceType;
enum WdReferenceKind;
enum WdIndexFormat;
enum WdIndexType;
enum WdRevisionsWrap;
enum WdRevisionType;
enum WdRoutingSlipDelivery;
enum WdRoutingSlipStatus;
enum WdSectionStart;
enum WdSaveOptions;
enum WdDocumentKind;
enum WdDocumentType;
enum WdOriginalFormat;
enum WdRelocate;
enum WdInsertedTextMark;
enum WdRevisedLinesMark;
enum WdDeletedTextMark;
enum WdRevisedPropertiesMark;
enum WdFieldShading;
enum WdDefaultFilePath;
enum WdCompatibility;
enum WdPaperSize;
enum WdCustomLabelPageSize;
enum WdProtectionType;
enum WdPartOfSpeech;
enum WdSubscriberFormats;
enum WdEditionType;
enum WdEditionOption;
enum WdRelativeHorizontalPosition;
enum WdRelativeVerticalPosition;
enum WdHelpType;
enum WdHelpTypeHID;
enum WdKeyCategory;
enum WdKey;
enum WdOLEType;
enum WdOLEVerb;
enum WdOLEPlacement;
enum WdEnvelopeOrientation;
enum WdLetterStyle;
enum WdLetterheadLocation;
enum WdSalutationType;
enum WdSalutationGender;
enum WdMovementType;
enum WdConstants;
enum WdPasteDataType;
enum WdPrintOutItem;
enum WdPrintOutPages;
enum WdPrintOutRange;
enum WdDictionaryType;
enum WdDictionaryTypeHID;
enum WdSpellingWordType;
enum WdSpellingErrorType;
enum WdProofreadingErrorType;
enum WdInlineShapeType;
enum WdArrangeStyle;
enum WdSelectionFlags;
enum WdAutoVersions;
enum WdOrganizerObject;
enum WdFindMatch;
enum WdFindWrap;
enum WdInformation;
enum WdWrapType;
enum WdWrapSideType;
enum WdOutlineLevel;
enum WdTextOrientation;
enum WdTextOrientationHID;
enum WdPageBorderArt;
enum WdBorderDistanceFrom;
enum WdReplace;
enum WdFontBias;
struct __declspec(uuid("00020970-0000-0000-c000-000000000046"))
/* dual interface */ _Application;
struct __declspec(uuid("000209b9-0000-0000-c000-000000000046"))
/* dual interface */ _Global;
struct __declspec(uuid("0002096f-0000-0000-c000-000000000046"))
/* dual interface */ FontNames;
struct __declspec(uuid("0002096e-0000-0000-c000-000000000046"))
/* dual interface */ Languages;
struct __declspec(uuid("0002096d-0000-0000-c000-000000000046"))
/* dual interface */ Language;
struct __declspec(uuid("0002096c-0000-0000-c000-000000000046"))
/* dual interface */ Documents;
struct __declspec(uuid("0002096b-0000-0000-c000-000000000046"))
/* dual interface */ _Document;
struct __declspec(uuid("0002096a-0000-0000-c000-000000000046"))
/* dual interface */ Template;
struct __declspec(uuid("000209a2-0000-0000-c000-000000000046"))
/* dual interface */ Templates;
struct __declspec(uuid("00020969-0000-0000-c000-000000000046"))
/* dual interface */ RoutingSlip;
struct __declspec(uuid("00020968-0000-0000-c000-000000000046"))
/* dual interface */ Bookmark;
struct __declspec(uuid("00020967-0000-0000-c000-000000000046"))
/* dual interface */ Bookmarks;
struct __declspec(uuid("00020966-0000-0000-c000-000000000046"))
/* dual interface */ Variable;
struct __declspec(uuid("00020965-0000-0000-c000-000000000046"))
/* dual interface */ Variables;
struct __declspec(uuid("00020964-0000-0000-c000-000000000046"))
/* dual interface */ RecentFile;
struct __declspec(uuid("00020963-0000-0000-c000-000000000046"))
/* dual interface */ RecentFiles;
struct __declspec(uuid("00020962-0000-0000-c000-000000000046"))
/* dual interface */ Window;
struct __declspec(uuid("00020961-0000-0000-c000-000000000046"))
/* dual interface */ Windows;
struct __declspec(uuid("00020960-0000-0000-c000-000000000046"))
/* dual interface */ Pane;
struct __declspec(uuid("0002095f-0000-0000-c000-000000000046"))
/* dual interface */ Panes;
struct __declspec(uuid("0002095e-0000-0000-c000-000000000046"))
/* dual interface */ Range;
struct __declspec(uuid("000209c0-0000-0000-c000-000000000046"))
/* dual interface */ ListFormat;
struct __declspec(uuid("000209b0-0000-0000-c000-000000000046"))
/* dual interface */ Find;
struct __declspec(uuid("000209b1-0000-0000-c000-000000000046"))
/* dual interface */ Replacement;
struct __declspec(uuid("0002095d-0000-0000-c000-000000000046"))
/* dual interface */ Characters;
struct __declspec(uuid("0002095c-0000-0000-c000-000000000046"))
/* dual interface */ Words;
struct __declspec(uuid("0002095b-0000-0000-c000-000000000046"))
/* dual interface */ Sentences;
struct __declspec(uuid("0002095a-0000-0000-c000-000000000046"))
/* dual interface */ Sections;
struct __declspec(uuid("00020959-0000-0000-c000-000000000046"))
/* dual interface */ Section;
struct __declspec(uuid("00020958-0000-0000-c000-000000000046"))
/* dual interface */ Paragraphs;
struct __declspec(uuid("00020957-0000-0000-c000-000000000046"))
/* dual interface */ Paragraph;
struct __declspec(uuid("00020956-0000-0000-c000-000000000046"))
/* dual interface */ DropCap;
struct __declspec(uuid("00020955-0000-0000-c000-000000000046"))
/* dual interface */ TabStops;
struct __declspec(uuid("00020954-0000-0000-c000-000000000046"))
/* dual interface */ TabStop;
struct __declspec(uuid("00020953-0000-0000-c000-000000000046"))
/* dual interface */ _ParagraphFormat;
struct __declspec(uuid("00020952-0000-0000-c000-000000000046"))
/* dual interface */ _Font;
struct __declspec(uuid("00020951-0000-0000-c000-000000000046"))
/* dual interface */ Table;
struct __declspec(uuid("00020950-0000-0000-c000-000000000046"))
/* dual interface */ Row;
struct __declspec(uuid("0002094f-0000-0000-c000-000000000046"))
/* dual interface */ Column;
struct __declspec(uuid("0002094e-0000-0000-c000-000000000046"))
/* dual interface */ Cell;
struct __declspec(uuid("0002094d-0000-0000-c000-000000000046"))
/* dual interface */ Tables;
struct __declspec(uuid("0002094c-0000-0000-c000-000000000046"))
/* dual interface */ Rows;
struct __declspec(uuid("0002094b-0000-0000-c000-000000000046"))
/* dual interface */ Columns;
struct __declspec(uuid("0002094a-0000-0000-c000-000000000046"))
/* dual interface */ Cells;
struct __declspec(uuid("00020949-0000-0000-c000-000000000046"))
/* dual interface */ AutoCorrect;
struct __declspec(uuid("00020948-0000-0000-c000-000000000046"))
/* dual interface */ AutoCorrectEntries;
struct __declspec(uuid("00020947-0000-0000-c000-000000000046"))
/* dual interface */ AutoCorrectEntry;
struct __declspec(uuid("00020946-0000-0000-c000-000000000046"))
/* dual interface */ FirstLetterExceptions;
struct __declspec(uuid("00020945-0000-0000-c000-000000000046"))
/* dual interface */ FirstLetterException;
struct __declspec(uuid("00020944-0000-0000-c000-000000000046"))
/* dual interface */ TwoInitialCapsExceptions;
struct __declspec(uuid("00020943-0000-0000-c000-000000000046"))
/* dual interface */ TwoInitialCapsException;
struct __declspec(uuid("00020942-0000-0000-c000-000000000046"))
/* dual interface */ Footnotes;
struct __declspec(uuid("00020941-0000-0000-c000-000000000046"))
/* dual interface */ Endnotes;
struct __declspec(uuid("00020940-0000-0000-c000-000000000046"))
/* dual interface */ Comments;
struct __declspec(uuid("0002093f-0000-0000-c000-000000000046"))
/* dual interface */ Footnote;
struct __declspec(uuid("0002093e-0000-0000-c000-000000000046"))
/* dual interface */ Endnote;
struct __declspec(uuid("0002093d-0000-0000-c000-000000000046"))
/* dual interface */ Comment;
struct __declspec(uuid("0002093c-0000-0000-c000-000000000046"))
/* dual interface */ Borders;
struct __declspec(uuid("0002093b-0000-0000-c000-000000000046"))
/* dual interface */ Border;
struct __declspec(uuid("0002093a-0000-0000-c000-000000000046"))
/* dual interface */ Shading;
struct __declspec(uuid("00020939-0000-0000-c000-000000000046"))
/* dual interface */ TextRetrievalMode;
struct __declspec(uuid("00020937-0000-0000-c000-000000000046"))
/* dual interface */ AutoTextEntries;
struct __declspec(uuid("00020936-0000-0000-c000-000000000046"))
/* dual interface */ AutoTextEntry;
struct __declspec(uuid("00020935-0000-0000-c000-000000000046"))
/* dual interface */ System;
struct __declspec(uuid("00020933-0000-0000-c000-000000000046"))
/* dual interface */ OLEFormat;
struct __declspec(uuid("00020931-0000-0000-c000-000000000046"))
/* dual interface */ LinkFormat;
struct __declspec(uuid("000209a4-0000-0000-c000-000000000046"))
/* dual interface */ _OLEControl;
struct __declspec(uuid("00020930-0000-0000-c000-000000000046"))
/* dual interface */ Fields;
struct __declspec(uuid("0002092f-0000-0000-c000-000000000046"))
/* dual interface */ Field;
struct __declspec(uuid("0002092e-0000-0000-c000-000000000046"))
/* dual interface */ Browser;
struct __declspec(uuid("0002092d-0000-0000-c000-000000000046"))
/* dual interface */ Styles;
struct __declspec(uuid("0002092c-0000-0000-c000-000000000046"))
/* dual interface */ Style;
struct __declspec(uuid("0002092b-0000-0000-c000-000000000046"))
/* dual interface */ Frames;
struct __declspec(uuid("0002092a-0000-0000-c000-000000000046"))
/* dual interface */ Frame;
struct __declspec(uuid("00020929-0000-0000-c000-000000000046"))
/* dual interface */ FormFields;
struct __declspec(uuid("00020928-0000-0000-c000-000000000046"))
/* dual interface */ FormField;
struct __declspec(uuid("00020927-0000-0000-c000-000000000046"))
/* dual interface */ TextInput;
struct __declspec(uuid("00020926-0000-0000-c000-000000000046"))
/* dual interface */ CheckBox;
struct __declspec(uuid("00020925-0000-0000-c000-000000000046"))
/* dual interface */ DropDown;
struct __declspec(uuid("00020924-0000-0000-c000-000000000046"))
/* dual interface */ ListEntries;
struct __declspec(uuid("00020923-0000-0000-c000-000000000046"))
/* dual interface */ ListEntry;
struct __declspec(uuid("00020922-0000-0000-c000-000000000046"))
/* dual interface */ TablesOfFigures;
struct __declspec(uuid("00020921-0000-0000-c000-000000000046"))
/* dual interface */ TableOfFigures;
struct __declspec(uuid("00020920-0000-0000-c000-000000000046"))
/* dual interface */ MailMerge;
struct __declspec(uuid("0002091f-0000-0000-c000-000000000046"))
/* dual interface */ MailMergeFields;
struct __declspec(uuid("0002091e-0000-0000-c000-000000000046"))
/* dual interface */ MailMergeField;
struct __declspec(uuid("0002091d-0000-0000-c000-000000000046"))
/* dual interface */ MailMergeDataSource;
struct __declspec(uuid("0002091c-0000-0000-c000-000000000046"))
/* dual interface */ MailMergeFieldNames;
struct __declspec(uuid("0002091b-0000-0000-c000-000000000046"))
/* dual interface */ MailMergeFieldName;
struct __declspec(uuid("0002091a-0000-0000-c000-000000000046"))
/* dual interface */ MailMergeDataFields;
struct __declspec(uuid("00020919-0000-0000-c000-000000000046"))
/* dual interface */ MailMergeDataField;
struct __declspec(uuid("00020918-0000-0000-c000-000000000046"))
/* dual interface */ Envelope;
struct __declspec(uuid("00020917-0000-0000-c000-000000000046"))
/* dual interface */ MailingLabel;
struct __declspec(uuid("00020916-0000-0000-c000-000000000046"))
/* dual interface */ CustomLabels;
struct __declspec(uuid("00020915-0000-0000-c000-000000000046"))
/* dual interface */ CustomLabel;
struct __declspec(uuid("00020914-0000-0000-c000-000000000046"))
/* dual interface */ TablesOfContents;
struct __declspec(uuid("00020913-0000-0000-c000-000000000046"))
/* dual interface */ TableOfContents;
struct __declspec(uuid("00020912-0000-0000-c000-000000000046"))
/* dual interface */ TablesOfAuthorities;
struct __declspec(uuid("00020911-0000-0000-c000-000000000046"))
/* dual interface */ TableOfAuthorities;
struct __declspec(uuid("00020910-0000-0000-c000-000000000046"))
/* dual interface */ Dialogs;
struct __declspec(uuid("000209b8-0000-0000-c000-000000000046"))
/* dual interface */ Dialog;
struct __declspec(uuid("00020971-0000-0000-c000-000000000046"))
/* dual interface */ PageSetup;
struct __declspec(uuid("00020972-0000-0000-c000-000000000046"))
/* dual interface */ LineNumbering;
struct __declspec(uuid("00020973-0000-0000-c000-000000000046"))
/* dual interface */ TextColumns;
struct __declspec(uuid("00020974-0000-0000-c000-000000000046"))
/* dual interface */ TextColumn;
struct __declspec(uuid("00020975-0000-0000-c000-000000000046"))
/* dual interface */ Selection;
struct __declspec(uuid("00020976-0000-0000-c000-000000000046"))
/* dual interface */ TablesOfAuthoritiesCategories;
struct __declspec(uuid("00020977-0000-0000-c000-000000000046"))
/* dual interface */ TableOfAuthoritiesCategory;
struct __declspec(uuid("00020978-0000-0000-c000-000000000046"))
/* dual interface */ CaptionLabels;
struct __declspec(uuid("00020979-0000-0000-c000-000000000046"))
/* dual interface */ CaptionLabel;
struct __declspec(uuid("0002097a-0000-0000-c000-000000000046"))
/* dual interface */ AutoCaptions;
struct __declspec(uuid("0002097b-0000-0000-c000-000000000046"))
/* dual interface */ AutoCaption;
struct __declspec(uuid("0002097c-0000-0000-c000-000000000046"))
/* dual interface */ Indexes;
struct __declspec(uuid("0002097d-0000-0000-c000-000000000046"))
/* dual interface */ Index;
struct __declspec(uuid("0002097e-0000-0000-c000-000000000046"))
/* dual interface */ AddIn;
struct __declspec(uuid("0002097f-0000-0000-c000-000000000046"))
/* dual interface */ AddIns;
struct __declspec(uuid("00020980-0000-0000-c000-000000000046"))
/* dual interface */ Revisions;
struct __declspec(uuid("00020981-0000-0000-c000-000000000046"))
/* dual interface */ Revision;
struct __declspec(uuid("00020982-0000-0000-c000-000000000046"))
/* dual interface */ Task;
struct __declspec(uuid("00020983-0000-0000-c000-000000000046"))
/* dual interface */ Tasks;
struct __declspec(uuid("00020984-0000-0000-c000-000000000046"))
/* dual interface */ HeadersFooters;
struct __declspec(uuid("00020985-0000-0000-c000-000000000046"))
/* dual interface */ HeaderFooter;
struct __declspec(uuid("00020986-0000-0000-c000-000000000046"))
/* dual interface */ PageNumbers;
struct __declspec(uuid("00020987-0000-0000-c000-000000000046"))
/* dual interface */ PageNumber;
struct __declspec(uuid("00020988-0000-0000-c000-000000000046"))
/* dual interface */ Subdocuments;
struct __declspec(uuid("00020989-0000-0000-c000-000000000046"))
/* dual interface */ Subdocument;
struct __declspec(uuid("0002098a-0000-0000-c000-000000000046"))
/* dual interface */ HeadingStyles;
struct __declspec(uuid("0002098b-0000-0000-c000-000000000046"))
/* dual interface */ HeadingStyle;
struct __declspec(uuid("0002098c-0000-0000-c000-000000000046"))
/* dual interface */ StoryRanges;
struct __declspec(uuid("0002098d-0000-0000-c000-000000000046"))
/* dual interface */ ListLevel;
struct __declspec(uuid("0002098e-0000-0000-c000-000000000046"))
/* dual interface */ ListLevels;
struct __declspec(uuid("0002098f-0000-0000-c000-000000000046"))
/* dual interface */ ListTemplate;
struct __declspec(uuid("00020990-0000-0000-c000-000000000046"))
/* dual interface */ ListTemplates;
struct __declspec(uuid("00020991-0000-0000-c000-000000000046"))
/* dual interface */ ListParagraphs;
struct __declspec(uuid("00020992-0000-0000-c000-000000000046"))
/* dual interface */ List;
struct __declspec(uuid("00020993-0000-0000-c000-000000000046"))
/* dual interface */ Lists;
struct __declspec(uuid("00020994-0000-0000-c000-000000000046"))
/* dual interface */ ListGallery;
struct __declspec(uuid("00020995-0000-0000-c000-000000000046"))
/* dual interface */ ListGalleries;
struct __declspec(uuid("00020996-0000-0000-c000-000000000046"))
/* dual interface */ KeyBindings;
struct __declspec(uuid("00020997-0000-0000-c000-000000000046"))
/* dual interface */ KeysBoundTo;
struct __declspec(uuid("00020998-0000-0000-c000-000000000046"))
/* dual interface */ KeyBinding;
struct __declspec(uuid("00020999-0000-0000-c000-000000000046"))
/* dual interface */ FileConverter;
struct __declspec(uuid("0002099a-0000-0000-c000-000000000046"))
/* dual interface */ FileConverters;
struct __declspec(uuid("0002099b-0000-0000-c000-000000000046"))
/* dual interface */ SynonymInfo;
struct __declspec(uuid("0002099c-0000-0000-c000-000000000046"))
/* dual interface */ Hyperlinks;
struct __declspec(uuid("0002099d-0000-0000-c000-000000000046"))
/* dual interface */ Hyperlink;
struct __declspec(uuid("0002099f-0000-0000-c000-000000000046"))
/* dual interface */ Shapes;
struct __declspec(uuid("000209b5-0000-0000-c000-000000000046"))
/* dual interface */ ShapeRange;
struct __declspec(uuid("000209b6-0000-0000-c000-000000000046"))
/* dual interface */ GroupShapes;
struct __declspec(uuid("000209a0-0000-0000-c000-000000000046"))
/* dual interface */ Shape;
struct __declspec(uuid("000209b2-0000-0000-c000-000000000046"))
/* dual interface */ TextFrame;
struct __declspec(uuid("000209a1-0000-0000-c000-000000000046"))
/* dual interface */ _LetterContent;
struct __declspec(uuid("000209a5-0000-0000-c000-000000000046"))
/* dual interface */ View;
struct __declspec(uuid("000209a6-0000-0000-c000-000000000046"))
/* dual interface */ Zoom;
struct __declspec(uuid("000209a7-0000-0000-c000-000000000046"))
/* dual interface */ Zooms;
struct __declspec(uuid("000209a8-0000-0000-c000-000000000046"))
/* dual interface */ InlineShape;
struct __declspec(uuid("000209a9-0000-0000-c000-000000000046"))
/* dual interface */ InlineShapes;
struct __declspec(uuid("000209aa-0000-0000-c000-000000000046"))
/* dual interface */ SpellingSuggestions;
struct __declspec(uuid("000209ab-0000-0000-c000-000000000046"))
/* dual interface */ SpellingSuggestion;
struct __declspec(uuid("000209ac-0000-0000-c000-000000000046"))
/* dual interface */ Dictionaries;
struct __declspec(uuid("000209e0-0000-0000-c000-000000000046"))
/* dual interface */ HangulHanjaConversionDictionaries;
struct __declspec(uuid("000209ad-0000-0000-c000-000000000046"))
/* dual interface */ Dictionary;
struct __declspec(uuid("000209ae-0000-0000-c000-000000000046"))
/* dual interface */ ReadabilityStatistics;
struct __declspec(uuid("000209af-0000-0000-c000-000000000046"))
/* dual interface */ ReadabilityStatistic;
struct __declspec(uuid("000209b3-0000-0000-c000-000000000046"))
/* dual interface */ Versions;
struct __declspec(uuid("000209b4-0000-0000-c000-000000000046"))
/* dual interface */ Version;
struct __declspec(uuid("000209b7-0000-0000-c000-000000000046"))
/* dual interface */ Options;
struct __declspec(uuid("000209ba-0000-0000-c000-000000000046"))
/* dual interface */ MailMessage;
struct __declspec(uuid("000209bb-0000-0000-c000-000000000046"))
/* dual interface */ ProofreadingErrors;
struct __declspec(uuid("000209bd-0000-0000-c000-000000000046"))
/* dual interface */ Mailer;
struct __declspec(uuid("000209c3-0000-0000-c000-000000000046"))
/* dual interface */ WrapFormat;
struct __declspec(uuid("000209d1-0000-0000-c000-000000000046"))
/* dual interface */ HangulAndAlphabetExceptions;
struct __declspec(uuid("000209d2-0000-0000-c000-000000000046"))
/* dual interface */ HangulAndAlphabetException;
struct __declspec(uuid("000209c4-0000-0000-c000-000000000046"))
/* dual interface */ Adjustments;
struct __declspec(uuid("000209c5-0000-0000-c000-000000000046"))
/* dual interface */ CalloutFormat;
struct __declspec(uuid("000209c6-0000-0000-c000-000000000046"))
/* dual interface */ ColorFormat;
struct __declspec(uuid("000209c7-0000-0000-c000-000000000046"))
/* dual interface */ ConnectorFormat;
struct __declspec(uuid("000209c8-0000-0000-c000-000000000046"))
/* dual interface */ FillFormat;
struct __declspec(uuid("000209c9-0000-0000-c000-000000000046"))
/* dual interface */ FreeformBuilder;
struct __declspec(uuid("000209ca-0000-0000-c000-000000000046"))
/* dual interface */ LineFormat;
struct __declspec(uuid("000209cb-0000-0000-c000-000000000046"))
/* dual interface */ PictureFormat;
struct __declspec(uuid("000209cc-0000-0000-c000-000000000046"))
/* dual interface */ ShadowFormat;
struct __declspec(uuid("000209cd-0000-0000-c000-000000000046"))
/* dual interface */ ShapeNode;
struct __declspec(uuid("000209ce-0000-0000-c000-000000000046"))
/* dual interface */ ShapeNodes;
struct __declspec(uuid("000209cf-0000-0000-c000-000000000046"))
/* dual interface */ TextEffectFormat;
struct __declspec(uuid("000209d0-0000-0000-c000-000000000046"))
/* dual interface */ ThreeDFormat;
struct __declspec(uuid("000209f7-0000-0000-c000-000000000046"))
/* dispinterface */ ApplicationEvents;
struct /* coclass */ Global;
struct /* coclass */ Application;
struct __declspec(uuid("000209f6-0000-0000-c000-000000000046"))
/* dispinterface */ DocumentEvents;
struct /* coclass */ Document;
struct /* coclass */ Font;
struct /* coclass */ ParagraphFormat;
struct __declspec(uuid("000209f3-0000-0000-c000-000000000046"))
/* dispinterface */ OCXEvents;
struct /* coclass */ OLEControl;
struct /* coclass */ LetterContent;
struct __declspec(uuid("000209f7-0001-0000-c000-000000000046"))
/* dual interface */ IApplicationEvents;
struct __declspec(uuid("000209fe-0001-0000-c000-000000000046"))
/* dual interface */ IApplicationEvents2;
struct __declspec(uuid("000209fe-0000-0000-c000-000000000046"))
/* dispinterface */ ApplicationEvents2;
enum WdBrowserLevel;
enum WdEnclosureType;
enum WdEncloseStyle;
enum WdHighAnsiText;
enum WdLayoutMode;
enum WdDocumentMedium;
enum WdMailerPriority;
enum WdDocumentViewDirection;
enum WdArabicNumeral;
enum WdMonthNames;
enum WdCursorMovement;
enum WdVisualSelection;
enum WdTableDirection;
enum WdFlowDirection;
enum WdDiacriticColor;
enum WdGutterStyle;
enum WdGutterStyleOld;
enum WdSectionDirection;
enum WdDateLanguage;
enum WdCalendarTypeBi;
enum WdCalendarType;
enum WdReadingOrder;
enum WdHebSpellStart;
enum WdAraSpeller;
enum WdColor;
enum WdShapePosition;
enum WdTablePosition;
enum WdDefaultListBehavior;
enum WdDefaultTableBehavior;
enum WdAutoFitBehavior;
enum WdPreferredWidthType;
enum WdFarEastLineBreakLanguageID;
enum WdViewTypeOld;
enum WdFramesetType;
enum WdFramesetSizeType;
enum WdFramesetNewFrameLocation;
enum WdScrollbarType;
enum WdTwoLinesInOneType;
enum WdHorizontalInVerticalType;
enum WdHorizontalLineAlignment;
enum WdHorizontalLineWidthType;
enum WdPhoneticGuideAlignmentType;
enum WdNewDocumentType;
enum WdKana;
enum WdCharacterWidth;
enum WdNumberStyleWordBasicBiDi;
enum WdTCSCConverterDirection;
struct __declspec(uuid("000209d7-0000-0000-c000-000000000046"))
/* dual interface */ EmailAuthor;
struct __declspec(uuid("000209db-0000-0000-c000-000000000046"))
/* dual interface */ EmailOptions;
struct __declspec(uuid("000209dc-0000-0000-c000-000000000046"))
/* dual interface */ EmailSignature;
struct __declspec(uuid("000209dd-0000-0000-c000-000000000046"))
/* dual interface */ Email;
struct __declspec(uuid("000209de-0000-0000-c000-000000000046"))
/* dual interface */ HorizontalLineFormat;
struct __declspec(uuid("000209e2-0000-0000-c000-000000000046"))
/* dual interface */ Frameset;
struct __declspec(uuid("000209e3-0000-0000-c000-000000000046"))
/* dual interface */ DefaultWebOptions;
struct __declspec(uuid("000209e4-0000-0000-c000-000000000046"))
/* dual interface */ WebOptions;
struct __declspec(uuid("000209df-0000-0000-c000-000000000046"))
/* dual interface */ OtherCorrectionsExceptions;
struct __declspec(uuid("000209e1-0000-0000-c000-000000000046"))
/* dual interface */ OtherCorrectionsException;
struct __declspec(uuid("000209e5-0000-0000-c000-000000000046"))
/* dual interface */ EmailSignatureEntries;
struct __declspec(uuid("000209e6-0000-0000-c000-000000000046"))
/* dual interface */ EmailSignatureEntry;
struct __declspec(uuid("000209e7-0000-0000-c000-000000000046"))
/* dual interface */ HTMLDivision;
struct __declspec(uuid("000209e8-0000-0000-c000-000000000046"))
/* dual interface */ HTMLDivisions;
struct __declspec(uuid("000209e9-0000-0000-c000-000000000046"))
/* dual interface */ DiagramNode;
struct __declspec(uuid("000209ea-0000-0000-c000-000000000046"))
/* dual interface */ DiagramNodeChildren;
struct __declspec(uuid("000209eb-0000-0000-c000-000000000046"))
/* dual interface */ DiagramNodes;
struct __declspec(uuid("000209ec-0000-0000-c000-000000000046"))
/* dual interface */ Diagram;
struct __declspec(uuid("b923fde0-f08c-11d3-91b0-00105a0a19fd"))
/* dual interface */ CustomProperty;
struct __declspec(uuid("b923fde1-f08c-11d3-91b0-00105a0a19fd"))
/* dual interface */ CustomProperties;
struct __declspec(uuid("000209ed-0000-0000-c000-000000000046"))
/* dual interface */ SmartTag;
struct __declspec(uuid("000209ee-0000-0000-c000-000000000046"))
/* dual interface */ SmartTags;
struct __declspec(uuid("000209ef-0000-0000-c000-000000000046"))
/* dual interface */ StyleSheet;
struct __declspec(uuid("07b7cc7e-e66c-11d3-9454-00105aa31a08"))
/* dual interface */ StyleSheets;
struct __declspec(uuid("5d311669-ea51-11d3-87cc-00105aa31a34"))
/* dual interface */ MappedDataField;
struct __declspec(uuid("799a6814-ea41-11d3-87cc-00105aa31a34"))
/* dual interface */ MappedDataFields;
struct __declspec(uuid("396f9073-f9fd-11d3-8ea0-0050049a1a01"))
/* dual interface */ CanvasShapes;
struct __declspec(uuid("b7564e97-0519-4c68-b400-3803e7c63242"))
/* dual interface */ TableStyle;
struct __declspec(uuid("1498f56d-ed33-41f9-b37b-ef30e50b08ac"))
/* dual interface */ ConditionalStyle;
struct __declspec(uuid("bea85a24-d7da-4f3d-b58c-ed90fb01d615"))
/* dual interface */ FootnoteOptions;
struct __declspec(uuid("bf043168-f4de-4e7c-b206-741a8b3ef71a"))
/* dual interface */ EndnoteOptions;
struct __declspec(uuid("12dcdc9a-5418-48a3-bbe6-eb57bae275e8"))
/* dual interface */ Reviewers;
struct __declspec(uuid("47cef4ae-dc32-4220-8aa5-19ccc0e6633a"))
/* dual interface */ Reviewer;
struct __declspec(uuid("b9f1a4e2-0d0a-43b7-8495-139e7acbd840"))
/* dual interface */ TaskPane;
struct __declspec(uuid("e6aaec05-e543-4085-ba92-9bf7d2474f5c"))
/* dual interface */ TaskPanes;
struct __declspec(uuid("00020a00-0001-0000-c000-000000000046"))
/* dual interface */ IApplicationEvents3;
struct __declspec(uuid("00020a00-0000-0000-c000-000000000046"))
/* dispinterface */ ApplicationEvents3;
enum WdDisableFeaturesIntroducedAfter;
enum WdWrapTypeMerged;
enum WdRecoveryType;
enum WdLineEndingType;
enum WdStyleSheetLinkType;
enum WdStyleSheetPrecedence;
enum WdEmailHTMLFidelity;
enum WdMailMergeMailFormat;
enum WdMappedDataFields;
enum WdConditionCode;
enum WdCompareTarget;
enum WdMergeTarget;
enum WdUseFormattingFrom;
enum WdRevisionsView;
enum WdRevisionsMode;
enum WdRevisionsBalloonWidthType;
enum WdRevisionsBalloonPrintOrientation;
enum WdRevisionsBalloonMargin;
enum WdTaskPanes;
enum WdShowFilter;
enum WdMergeSubType;
enum WdDocumentDirection;
enum WdLanguageID2000;
struct __declspec(uuid("dfb6aa6c-1068-420f-969d-01280fcc1630"))
/* dual interface */ SmartTagAction;
struct __declspec(uuid("cde12cd8-767b-4757-8a31-13029a086305"))
/* dual interface */ SmartTagActions;
struct __declspec(uuid("15ebe471-0182-4cce-98d0-b6614d1c32a1"))
/* dual interface */ SmartTagRecognizer;
struct __declspec(uuid("f2b60a10-ded5-46fb-a914-3c6f4ebb6451"))
/* dual interface */ SmartTagRecognizers;
struct __declspec(uuid("5e9a888c-e5dc-4dcb-8308-3c91fb61e6f4"))
/* dual interface */ SmartTagType;
struct __declspec(uuid("db8e3072-e106-4453-8e7c-53056f1d30dc"))
/* dual interface */ SmartTagTypes;
struct __declspec(uuid("ae6ce2f5-b9d3-407d-85a8-0f10c63289a4"))
/* dual interface */ Line;
struct __declspec(uuid("e2e8a400-0615-427d-adcc-cad39ffebd42"))
/* dual interface */ Lines;
struct __declspec(uuid("add4edf3-2f33-4734-9ce6-d476097c5ada"))
/* dual interface */ Rectangle;
struct __declspec(uuid("7d0f7985-68d9-4d93-91cb-8109280e76cc"))
/* dual interface */ Rectangles;
struct __declspec(uuid("79635bf1-bd1d-4b3f-a520-c1106f1aaad8"))
/* dual interface */ Break;
struct __declspec(uuid("16be9309-d708-4322-bb1a-b056f58d17ea"))
/* dual interface */ Breaks;
struct __declspec(uuid("352840a9-af7d-4ca4-87fc-21c68fdab3e4"))
/* dual interface */ Page;
struct __declspec(uuid("91807402-6c6f-47cd-b8fa-c42fee8ee924"))
/* dual interface */ Pages;
struct __declspec(uuid("09760240-0b89-49f7-a79d-479f24723f56"))
/* dual interface */ XMLNode;
struct __declspec(uuid("d36c1f42-7044-4b9e-9ca3-85919454db04"))
/* dual interface */ XMLNodes;
struct __declspec(uuid("fe0971f0-5e60-4985-bcda-95cb0b8e0308"))
/* dual interface */ XMLSchemaReference;
struct __declspec(uuid("356b06ec-4908-42a4-81fc-4b5a51f3483b"))
/* dual interface */ XMLSchemaReferences;
struct __declspec(uuid("a87e00e9-3ac3-4b53-abe3-7379653d0e82"))
/* dual interface */ XMLChildNodeSuggestion;
struct __declspec(uuid("de63b5ac-ca4f-46fe-9184-a5719ab9ed5b"))
/* dual interface */ XMLChildNodeSuggestions;
struct __declspec(uuid("b140a023-4850-4da6-bc5f-cc459c4507bc"))
/* dual interface */ XMLNamespace;
struct __declspec(uuid("656bbed7-e82d-4b0a-8f97-ec742ba11ffa"))
/* dual interface */ XMLNamespaces;
struct __declspec(uuid("e3124493-7d6a-410f-9a48-cc822c033cec"))
/* dual interface */ XSLTransform;
struct __declspec(uuid("c774f5ea-a539-4284-a1be-30aec052d899"))
/* dual interface */ XSLTransforms;
struct __declspec(uuid("aed7e08c-14f0-4f33-921d-4c5353137bf6"))
/* dual interface */ Editors;
struct __declspec(uuid("dd947d72-f33c-4198-9bdf-f86181d05e41"))
/* dual interface */ Editor;
struct __declspec(uuid("00020a01-0001-0000-c000-000000000046"))
/* interface */ IApplicationEvents4;
struct __declspec(uuid("00020a01-0000-0000-c000-000000000046"))
/* dispinterface */ ApplicationEvents4;
struct __declspec(uuid("00020a02-0000-0000-c000-000000000046"))
/* dispinterface */ DocumentEvents2;
enum WdRectangleType;
enum WdLineType;
enum WdXMLNodeType;
enum WdXMLSelectionChangeReason;
enum WdXMLNodeLevel;
enum WdSmartTagControlType;
enum WdEditorType;
enum WdXMLValidationStatus;
struct __declspec(uuid("4a6ae865-199d-4ea3-9f6b-125bd9c40edf"))
/* dual interface */ Source;
struct __declspec(uuid("fa02a26b-6550-45c5-b6f0-80e757cd3482"))
/* dual interface */ Sources;
struct __declspec(uuid("3834f60f-ee8c-455d-a441-d766675d6d3b"))
/* dual interface */ Bibliography;
struct __declspec(uuid("873e774b-926a-4cb1-878d-635a45187595"))
/* dual interface */ OMaths;
struct __declspec(uuid("e4442a83-f623-459c-8e95-8bfb44dcf23a"))
/* dual interface */ OMath;
struct __declspec(uuid("497142a4-16fd-42c6-bc58-15d89345fc21"))
/* dual interface */ OMathFunctions;
struct __declspec(uuid("8245795b-9aed-4943-a16d-e586ed8180d1"))
/* dual interface */ OMathArgs;
struct __declspec(uuid("f1f37152-1db1-4901-ad9a-c740f99464b4"))
/* dual interface */ OMathFunction;
struct __declspec(uuid("f258de05-c41b-4c33-a778-f0d3f98ceeb3"))
/* dual interface */ OMathAcc;
struct __declspec(uuid("f08b45f1-8f23-4156-9d63-1820c0ed229a"))
/* dual interface */ OMathBar;
struct __declspec(uuid("842c37fe-c76f-4b2b-9b60-c408cb5e838e"))
/* dual interface */ OMathBox;
struct __declspec(uuid("2503b6ee-0889-44df-b920-6d6f9659dea3"))
/* dual interface */ OMathBorderBox;
struct __declspec(uuid("c94688a6-a2a7-4133-a26d-726cd569d5f3"))
/* dual interface */ OMathDelim;
struct __declspec(uuid("1f998a61-71c6-44c2-a0f2-1d66169b47cb"))
/* dual interface */ OMathEqArray;
struct __declspec(uuid("50209974-ba32-4a03-8fa6-bac56cc056fd"))
/* dual interface */ OMathFrac;
struct __declspec(uuid("0d951adf-10a6-4c9b-bcd9-0fb8cbad9a87"))
/* dual interface */ OMathFunc;
struct __declspec(uuid("02b17cb4-7d55-4b34-b38b-10381433441f"))
/* dual interface */ OMathGroupChar;
struct __declspec(uuid("74de9576-8e99-4e28-912b-cb30747c60ce"))
/* dual interface */ OMathLimLow;
struct __declspec(uuid("fc9086c6-0287-4997-b2e1-816c334a22f8"))
/* dual interface */ OMathLimUpp;
struct __declspec(uuid("3e061a7e-67ad-4eaa-bc1e-55057d5e596f"))
/* dual interface */ OMathMat;
struct __declspec(uuid("1b426348-607d-433c-9216-c5d2bf0ef31f"))
/* dual interface */ OMathMatRows;
struct __declspec(uuid("efc71f9c-7f42-4cd4-a7a7-970d7a48cd27"))
/* dual interface */ OMathMatCols;
struct __declspec(uuid("5daa8bb6-054e-48f6-beac-eaad02be0cc7"))
/* dual interface */ OMathMatRow;
struct __declspec(uuid("cae36175-3818-4c60-bcbf-0645d51eb33b"))
/* dual interface */ OMathMatCol;
struct __declspec(uuid("cebd4184-4e6d-4fc6-a42d-2142b1b76af5"))
/* dual interface */ OMathNary;
struct __declspec(uuid("db77d541-85c3-42e8-8649-afbd7cf87866"))
/* dual interface */ OMathPhantom;
struct __declspec(uuid("afaf0c0e-8603-40f6-8fd1-42726cac21e3"))
/* dual interface */ OMathScrPre;
struct __declspec(uuid("67a7eec5-285d-4024-b071-bd6b33b88547"))
/* dual interface */ OMathRad;
struct __declspec(uuid("98dfbd12-96cb-4f07-90ea-749ff1d6b89d"))
/* dual interface */ OMathScrSub;
struct __declspec(uuid("dc489ad4-23c4-4f4b-990f-45a51c7c0c4f"))
/* dual interface */ OMathScrSubSup;
struct __declspec(uuid("d0a95726-678a-4b9d-8103-1e2b86735ae7"))
/* dual interface */ OMathScrSup;
struct __declspec(uuid("6f9d1f68-06f7-49ef-8902-185e54eb5e87"))
/* dual interface */ OMathAutoCorrect;
struct __declspec(uuid("18cd5ec8-8b7b-42c8-992a-2a407468642c"))
/* dual interface */ OMathAutoCorrectEntries;
struct __declspec(uuid("d8779f01-4869-4403-b334-d60c5f9c9175"))
/* dual interface */ OMathAutoCorrectEntry;
struct __declspec(uuid("44fee887-6600-41ab-95a5-de33c605116c"))
/* dual interface */ OMathRecognizedFunctions;
struct __declspec(uuid("5c04bd93-2f3f-4668-918d-9738ec901039"))
/* dual interface */ OMathRecognizedFunction;
struct __declspec(uuid("804cd967-f83b-432d-9446-c61a45cfeff0"))
/* dual interface */ ContentControls;
struct __declspec(uuid("ee95afe3-3026-4172-b078-0e79dab5cc3d"))
/* dual interface */ ContentControl;
struct __declspec(uuid("0c1fabe7-f737-406f-9ca3-b07661f9d1a2"))
/* dual interface */ XMLMapping;
struct __declspec(uuid("54f46dc4-f6a6-48cc-bd66-46c1ddeadd22"))
/* dual interface */ ContentControlListEntries;
struct __declspec(uuid("0c6fa8ca-e65f-4fc7-ab8f-20729eecbb14"))
/* dual interface */ ContentControlListEntry;
struct __declspec(uuid("b5828b50-0e3d-448a-962d-a40702a5868d"))
/* dual interface */ BuildingBlockTypes;
struct __declspec(uuid("817f99fa-ccc4-4971-8e9d-1238f735aaff"))
/* dual interface */ BuildingBlockType;
struct __declspec(uuid("6e47678b-a879-4e56-8698-3b7cf169fad4"))
/* dual interface */ Categories;
struct __declspec(uuid("ecfbdb5e-acd2-4530-ad79-4560b7ff055c"))
/* dual interface */ Category;
struct __declspec(uuid("c6d50987-25d7-408a-bff2-90bf86a24e93"))
/* dual interface */ BuildingBlocks;
struct __declspec(uuid("bfd3fc23-f763-4ff8-826e-1afbf598a4e7"))
/* dual interface */ BuildingBlock;
struct __declspec(uuid("39709229-56a0-4e29-9112-b31dd067ebfd"))
/* dual interface */ BuildingBlockEntries;
struct __declspec(uuid("e2e0f3a7-204c-40c5-baa5-290f374fdf5a"))
/* dual interface */ OMathBreaks;
struct __declspec(uuid("65e515d5-f50b-4951-8f38-fa6ac8707387"))
/* dual interface */ OMathBreak;
struct __declspec(uuid("e6aaec05-e543-4085-ba92-9bf7d2474f51"))
/* dual interface */ Research;
struct __declspec(uuid("d040daf9-6ce4-4be8-839d-f4538a4301cf"))
/* dual interface */ SoftEdgeFormat;
struct __declspec(uuid("f1b14f40-5c32-4c8c-b5b2-de537bb6b89d"))
/* dual interface */ GlowFormat;
struct __declspec(uuid("f01943ff-1985-445e-8602-8fb8f39cca75"))
/* dual interface */ ReflectionFormat;
enum WdStyleSort;
enum WdRemoveDocInfoType;
enum WdCheckInVersionType;
enum WdMoveToTextMark;
enum WdMoveFromTextMark;
enum WdOMathFunctionType;
enum WdOMathHorizAlignType;
enum WdOMathVertAlignType;
enum WdOMathFracType;
enum WdOMathSpacingRule;
enum WdOMathType;
enum WdOMathShapeType;
enum WdOMathJc;
enum WdOMathBreakBin;
enum WdOMathBreakSub;
enum WdReadingLayoutMargin;
enum WdContentControlType;
enum WdCompareDestination;
enum WdGranularity;
enum WdMergeFormatFrom;
enum WdShowSourceDocuments;
enum WdPasteOptions;
enum WdBuildingBlockTypes;
enum WdAlignmentTabRelative;
enum WdAlignmentTabAlignment;
enum WdCellColor;
enum WdTextboxTightWrap;
enum WdShapePositionRelative;
enum WdShapeSizeRelative;
enum WdRelativeHorizontalSize;
enum WdRelativeVerticalSize;
enum WdThemeColorIndex;
enum WdExportFormat;
enum WdExportOptimizeFor;
enum WdExportCreateBookmarks;
enum WdExportItem;
enum WdExportRange;
enum WdFrenchSpeller;
enum WdDocPartInsertOptions;
enum WdContentControlDateStorageFormat;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(_OLEControl, __uuidof(_OLEControl));
_COM_SMARTPTR_TYPEDEF(ApplicationEvents, __uuidof(ApplicationEvents));
_COM_SMARTPTR_TYPEDEF(FontNames, __uuidof(FontNames));
_COM_SMARTPTR_TYPEDEF(RoutingSlip, __uuidof(RoutingSlip));
_COM_SMARTPTR_TYPEDEF(Variable, __uuidof(Variable));
_COM_SMARTPTR_TYPEDEF(Variables, __uuidof(Variables));
_COM_SMARTPTR_TYPEDEF(DropCap, __uuidof(DropCap));
_COM_SMARTPTR_TYPEDEF(TabStop, __uuidof(TabStop));
_COM_SMARTPTR_TYPEDEF(TabStops, __uuidof(TabStops));
_COM_SMARTPTR_TYPEDEF(FirstLetterException, __uuidof(FirstLetterException));
_COM_SMARTPTR_TYPEDEF(FirstLetterExceptions, __uuidof(FirstLetterExceptions));
_COM_SMARTPTR_TYPEDEF(TwoInitialCapsException, __uuidof(TwoInitialCapsException));
_COM_SMARTPTR_TYPEDEF(TwoInitialCapsExceptions, __uuidof(TwoInitialCapsExceptions));
_COM_SMARTPTR_TYPEDEF(TextRetrievalMode, __uuidof(TextRetrievalMode));
_COM_SMARTPTR_TYPEDEF(System, __uuidof(System));
_COM_SMARTPTR_TYPEDEF(OLEFormat, __uuidof(OLEFormat));
_COM_SMARTPTR_TYPEDEF(LinkFormat, __uuidof(LinkFormat));
_COM_SMARTPTR_TYPEDEF(Browser, __uuidof(Browser));
_COM_SMARTPTR_TYPEDEF(TextInput, __uuidof(TextInput));
_COM_SMARTPTR_TYPEDEF(CheckBox, __uuidof(CheckBox));
_COM_SMARTPTR_TYPEDEF(ListEntry, __uuidof(ListEntry));
_COM_SMARTPTR_TYPEDEF(ListEntries, __uuidof(ListEntries));
_COM_SMARTPTR_TYPEDEF(DropDown, __uuidof(DropDown));
_COM_SMARTPTR_TYPEDEF(MailMergeFieldName, __uuidof(MailMergeFieldName));
_COM_SMARTPTR_TYPEDEF(MailMergeFieldNames, __uuidof(MailMergeFieldNames));
_COM_SMARTPTR_TYPEDEF(MailMergeDataField, __uuidof(MailMergeDataField));
_COM_SMARTPTR_TYPEDEF(MailMergeDataFields, __uuidof(MailMergeDataFields));
_COM_SMARTPTR_TYPEDEF(CustomLabel, __uuidof(CustomLabel));
_COM_SMARTPTR_TYPEDEF(CustomLabels, __uuidof(CustomLabels));
_COM_SMARTPTR_TYPEDEF(Dialog, __uuidof(Dialog));
_COM_SMARTPTR_TYPEDEF(Dialogs, __uuidof(Dialogs));
_COM_SMARTPTR_TYPEDEF(LineNumbering, __uuidof(LineNumbering));
_COM_SMARTPTR_TYPEDEF(TextColumn, __uuidof(TextColumn));
_COM_SMARTPTR_TYPEDEF(TableOfAuthoritiesCategory, __uuidof(TableOfAuthoritiesCategory));
_COM_SMARTPTR_TYPEDEF(TablesOfAuthoritiesCategories, __uuidof(TablesOfAuthoritiesCategories));
_COM_SMARTPTR_TYPEDEF(CaptionLabel, __uuidof(CaptionLabel));
_COM_SMARTPTR_TYPEDEF(CaptionLabels, __uuidof(CaptionLabels));
_COM_SMARTPTR_TYPEDEF(AutoCaption, __uuidof(AutoCaption));
_COM_SMARTPTR_TYPEDEF(AutoCaptions, __uuidof(AutoCaptions));
_COM_SMARTPTR_TYPEDEF(AddIn, __uuidof(AddIn));
_COM_SMARTPTR_TYPEDEF(AddIns, __uuidof(AddIns));
_COM_SMARTPTR_TYPEDEF(Task, __uuidof(Task));
_COM_SMARTPTR_TYPEDEF(Tasks, __uuidof(Tasks));
_COM_SMARTPTR_TYPEDEF(PageNumber, __uuidof(PageNumber));
_COM_SMARTPTR_TYPEDEF(PageNumbers, __uuidof(PageNumbers));
_COM_SMARTPTR_TYPEDEF(HeadingStyle, __uuidof(HeadingStyle));
_COM_SMARTPTR_TYPEDEF(HeadingStyles, __uuidof(HeadingStyles));
_COM_SMARTPTR_TYPEDEF(KeyBinding, __uuidof(KeyBinding));
_COM_SMARTPTR_TYPEDEF(KeyBindings, __uuidof(KeyBindings));
_COM_SMARTPTR_TYPEDEF(KeysBoundTo, __uuidof(KeysBoundTo));
_COM_SMARTPTR_TYPEDEF(FileConverter, __uuidof(FileConverter));
_COM_SMARTPTR_TYPEDEF(FileConverters, __uuidof(FileConverters));
_COM_SMARTPTR_TYPEDEF(SynonymInfo, __uuidof(SynonymInfo));
_COM_SMARTPTR_TYPEDEF(Zoom, __uuidof(Zoom));
_COM_SMARTPTR_TYPEDEF(Zooms, __uuidof(Zooms));
_COM_SMARTPTR_TYPEDEF(SpellingSuggestion, __uuidof(SpellingSuggestion));
_COM_SMARTPTR_TYPEDEF(SpellingSuggestions, __uuidof(SpellingSuggestions));
_COM_SMARTPTR_TYPEDEF(Dictionary, __uuidof(Dictionary));
_COM_SMARTPTR_TYPEDEF(Language, __uuidof(Language));
_COM_SMARTPTR_TYPEDEF(Languages, __uuidof(Languages));
_COM_SMARTPTR_TYPEDEF(Dictionaries, __uuidof(Dictionaries));
_COM_SMARTPTR_TYPEDEF(HangulHanjaConversionDictionaries, __uuidof(HangulHanjaConversionDictionaries));
_COM_SMARTPTR_TYPEDEF(ReadabilityStatistic, __uuidof(ReadabilityStatistic));
_COM_SMARTPTR_TYPEDEF(ReadabilityStatistics, __uuidof(ReadabilityStatistics));
_COM_SMARTPTR_TYPEDEF(MailMessage, __uuidof(MailMessage));
_COM_SMARTPTR_TYPEDEF(Mailer, __uuidof(Mailer));
_COM_SMARTPTR_TYPEDEF(WrapFormat, __uuidof(WrapFormat));
_COM_SMARTPTR_TYPEDEF(HangulAndAlphabetException, __uuidof(HangulAndAlphabetException));
_COM_SMARTPTR_TYPEDEF(HangulAndAlphabetExceptions, __uuidof(HangulAndAlphabetExceptions));
_COM_SMARTPTR_TYPEDEF(Adjustments, __uuidof(Adjustments));
_COM_SMARTPTR_TYPEDEF(CalloutFormat, __uuidof(CalloutFormat));
_COM_SMARTPTR_TYPEDEF(PictureFormat, __uuidof(PictureFormat));
_COM_SMARTPTR_TYPEDEF(ShapeNode, __uuidof(ShapeNode));
_COM_SMARTPTR_TYPEDEF(ShapeNodes, __uuidof(ShapeNodes));
_COM_SMARTPTR_TYPEDEF(TextEffectFormat, __uuidof(TextEffectFormat));
_COM_SMARTPTR_TYPEDEF(DocumentEvents, __uuidof(DocumentEvents));
_COM_SMARTPTR_TYPEDEF(Documents, __uuidof(Documents));
_COM_SMARTPTR_TYPEDEF(RecentFile, __uuidof(RecentFile));
_COM_SMARTPTR_TYPEDEF(RecentFiles, __uuidof(RecentFiles));
_COM_SMARTPTR_TYPEDEF(MailingLabel, __uuidof(MailingLabel));
_COM_SMARTPTR_TYPEDEF(Version, __uuidof(Version));
_COM_SMARTPTR_TYPEDEF(Versions, __uuidof(Versions));
_COM_SMARTPTR_TYPEDEF(OCXEvents, __uuidof(OCXEvents));
_COM_SMARTPTR_TYPEDEF(_LetterContent, __uuidof(_LetterContent));
_COM_SMARTPTR_TYPEDEF(IApplicationEvents, __uuidof(IApplicationEvents));
_COM_SMARTPTR_TYPEDEF(ApplicationEvents2, __uuidof(ApplicationEvents2));
_COM_SMARTPTR_TYPEDEF(TextColumns, __uuidof(TextColumns));
_COM_SMARTPTR_TYPEDEF(PageSetup, __uuidof(PageSetup));
_COM_SMARTPTR_TYPEDEF(Border, __uuidof(Border));
_COM_SMARTPTR_TYPEDEF(Borders, __uuidof(Borders));
_COM_SMARTPTR_TYPEDEF(Shading, __uuidof(Shading));
_COM_SMARTPTR_TYPEDEF(_Font, __uuidof(_Font));
_COM_SMARTPTR_TYPEDEF(HorizontalLineFormat, __uuidof(HorizontalLineFormat));
_COM_SMARTPTR_TYPEDEF(Frameset, __uuidof(Frameset));
_COM_SMARTPTR_TYPEDEF(DefaultWebOptions, __uuidof(DefaultWebOptions));
_COM_SMARTPTR_TYPEDEF(WebOptions, __uuidof(WebOptions));
_COM_SMARTPTR_TYPEDEF(OtherCorrectionsException, __uuidof(OtherCorrectionsException));
_COM_SMARTPTR_TYPEDEF(OtherCorrectionsExceptions, __uuidof(OtherCorrectionsExceptions));
_COM_SMARTPTR_TYPEDEF(EmailSignatureEntry, __uuidof(EmailSignatureEntry));
_COM_SMARTPTR_TYPEDEF(CustomProperty, __uuidof(CustomProperty));
_COM_SMARTPTR_TYPEDEF(CustomProperties, __uuidof(CustomProperties));
_COM_SMARTPTR_TYPEDEF(MappedDataField, __uuidof(MappedDataField));
_COM_SMARTPTR_TYPEDEF(ConditionalStyle, __uuidof(ConditionalStyle));
_COM_SMARTPTR_TYPEDEF(FootnoteOptions, __uuidof(FootnoteOptions));
_COM_SMARTPTR_TYPEDEF(EndnoteOptions, __uuidof(EndnoteOptions));
_COM_SMARTPTR_TYPEDEF(Reviewer, __uuidof(Reviewer));
_COM_SMARTPTR_TYPEDEF(Reviewers, __uuidof(Reviewers));
_COM_SMARTPTR_TYPEDEF(TaskPane, __uuidof(TaskPane));
_COM_SMARTPTR_TYPEDEF(ApplicationEvents3, __uuidof(ApplicationEvents3));
_COM_SMARTPTR_TYPEDEF(StyleSheet, __uuidof(StyleSheet));
_COM_SMARTPTR_TYPEDEF(StyleSheets, __uuidof(StyleSheets));
_COM_SMARTPTR_TYPEDEF(MappedDataFields, __uuidof(MappedDataFields));
_COM_SMARTPTR_TYPEDEF(MailMergeDataSource, __uuidof(MailMergeDataSource));
_COM_SMARTPTR_TYPEDEF(TableStyle, __uuidof(TableStyle));
_COM_SMARTPTR_TYPEDEF(TaskPanes, __uuidof(TaskPanes));
_COM_SMARTPTR_TYPEDEF(SmartTagRecognizer, __uuidof(SmartTagRecognizer));
_COM_SMARTPTR_TYPEDEF(SmartTagRecognizers, __uuidof(SmartTagRecognizers));
_COM_SMARTPTR_TYPEDEF(XMLSchemaReference, __uuidof(XMLSchemaReference));
_COM_SMARTPTR_TYPEDEF(XMLSchemaReferences, __uuidof(XMLSchemaReferences));
_COM_SMARTPTR_TYPEDEF(XSLTransform, __uuidof(XSLTransform));
_COM_SMARTPTR_TYPEDEF(XSLTransforms, __uuidof(XSLTransforms));
_COM_SMARTPTR_TYPEDEF(XMLNamespace, __uuidof(XMLNamespace));
_COM_SMARTPTR_TYPEDEF(XMLNamespaces, __uuidof(XMLNamespaces));
_COM_SMARTPTR_TYPEDEF(ApplicationEvents4, __uuidof(ApplicationEvents4));
_COM_SMARTPTR_TYPEDEF(DocumentEvents2, __uuidof(DocumentEvents2));
_COM_SMARTPTR_TYPEDEF(SmartTagAction, __uuidof(SmartTagAction));
_COM_SMARTPTR_TYPEDEF(SmartTagActions, __uuidof(SmartTagActions));
_COM_SMARTPTR_TYPEDEF(SmartTagType, __uuidof(SmartTagType));
_COM_SMARTPTR_TYPEDEF(SmartTagTypes, __uuidof(SmartTagTypes));
_COM_SMARTPTR_TYPEDEF(Source, __uuidof(Source));
_COM_SMARTPTR_TYPEDEF(Sources, __uuidof(Sources));
_COM_SMARTPTR_TYPEDEF(Bibliography, __uuidof(Bibliography));
_COM_SMARTPTR_TYPEDEF(OMathAutoCorrectEntry, __uuidof(OMathAutoCorrectEntry));
_COM_SMARTPTR_TYPEDEF(OMathAutoCorrectEntries, __uuidof(OMathAutoCorrectEntries));
_COM_SMARTPTR_TYPEDEF(OMathRecognizedFunction, __uuidof(OMathRecognizedFunction));
_COM_SMARTPTR_TYPEDEF(OMathRecognizedFunctions, __uuidof(OMathRecognizedFunctions));
_COM_SMARTPTR_TYPEDEF(OMathAutoCorrect, __uuidof(OMathAutoCorrect));
_COM_SMARTPTR_TYPEDEF(XMLMapping, __uuidof(XMLMapping));
_COM_SMARTPTR_TYPEDEF(ContentControlListEntry, __uuidof(ContentControlListEntry));
_COM_SMARTPTR_TYPEDEF(ContentControlListEntries, __uuidof(ContentControlListEntries));
_COM_SMARTPTR_TYPEDEF(Research, __uuidof(Research));
_COM_SMARTPTR_TYPEDEF(SoftEdgeFormat, __uuidof(SoftEdgeFormat));
_COM_SMARTPTR_TYPEDEF(ReflectionFormat, __uuidof(ReflectionFormat));
_COM_SMARTPTR_TYPEDEF(View, __uuidof(View));
_COM_SMARTPTR_TYPEDEF(_ParagraphFormat, __uuidof(_ParagraphFormat));
_COM_SMARTPTR_TYPEDEF(ColorFormat, __uuidof(ColorFormat));
_COM_SMARTPTR_TYPEDEF(FillFormat, __uuidof(FillFormat));
_COM_SMARTPTR_TYPEDEF(LineFormat, __uuidof(LineFormat));
_COM_SMARTPTR_TYPEDEF(ShadowFormat, __uuidof(ShadowFormat));
_COM_SMARTPTR_TYPEDEF(ThreeDFormat, __uuidof(ThreeDFormat));
_COM_SMARTPTR_TYPEDEF(GlowFormat, __uuidof(GlowFormat));
_COM_SMARTPTR_TYPEDEF(Options, __uuidof(Options));
_COM_SMARTPTR_TYPEDEF(_Application, __uuidof(_Application));
_COM_SMARTPTR_TYPEDEF(_Global, __uuidof(_Global));
_COM_SMARTPTR_TYPEDEF(_Document, __uuidof(_Document));
_COM_SMARTPTR_TYPEDEF(Template, __uuidof(Template));
_COM_SMARTPTR_TYPEDEF(Templates, __uuidof(Templates));
_COM_SMARTPTR_TYPEDEF(Bookmark, __uuidof(Bookmark));
_COM_SMARTPTR_TYPEDEF(Bookmarks, __uuidof(Bookmarks));
_COM_SMARTPTR_TYPEDEF(Window, __uuidof(Window));
_COM_SMARTPTR_TYPEDEF(Windows, __uuidof(Windows));
_COM_SMARTPTR_TYPEDEF(Pane, __uuidof(Pane));
_COM_SMARTPTR_TYPEDEF(Panes, __uuidof(Panes));
_COM_SMARTPTR_TYPEDEF(Range, __uuidof(Range));
_COM_SMARTPTR_TYPEDEF(Characters, __uuidof(Characters));
_COM_SMARTPTR_TYPEDEF(Words, __uuidof(Words));
_COM_SMARTPTR_TYPEDEF(Sentences, __uuidof(Sentences));
_COM_SMARTPTR_TYPEDEF(Paragraph, __uuidof(Paragraph));
_COM_SMARTPTR_TYPEDEF(Paragraphs, __uuidof(Paragraphs));
_COM_SMARTPTR_TYPEDEF(AutoCorrectEntry, __uuidof(AutoCorrectEntry));
_COM_SMARTPTR_TYPEDEF(AutoCorrectEntries, __uuidof(AutoCorrectEntries));
_COM_SMARTPTR_TYPEDEF(AutoCorrect, __uuidof(AutoCorrect));
_COM_SMARTPTR_TYPEDEF(Footnote, __uuidof(Footnote));
_COM_SMARTPTR_TYPEDEF(Footnotes, __uuidof(Footnotes));
_COM_SMARTPTR_TYPEDEF(Endnote, __uuidof(Endnote));
_COM_SMARTPTR_TYPEDEF(Endnotes, __uuidof(Endnotes));
_COM_SMARTPTR_TYPEDEF(Comment, __uuidof(Comment));
_COM_SMARTPTR_TYPEDEF(Comments, __uuidof(Comments));
_COM_SMARTPTR_TYPEDEF(AutoTextEntry, __uuidof(AutoTextEntry));
_COM_SMARTPTR_TYPEDEF(AutoTextEntries, __uuidof(AutoTextEntries));
_COM_SMARTPTR_TYPEDEF(Frame, __uuidof(Frame));
_COM_SMARTPTR_TYPEDEF(Replacement, __uuidof(Replacement));
_COM_SMARTPTR_TYPEDEF(Find, __uuidof(Find));
_COM_SMARTPTR_TYPEDEF(Frames, __uuidof(Frames));
_COM_SMARTPTR_TYPEDEF(FormField, __uuidof(FormField));
_COM_SMARTPTR_TYPEDEF(FormFields, __uuidof(FormFields));
_COM_SMARTPTR_TYPEDEF(TableOfFigures, __uuidof(TableOfFigures));
_COM_SMARTPTR_TYPEDEF(MailMergeField, __uuidof(MailMergeField));
_COM_SMARTPTR_TYPEDEF(MailMergeFields, __uuidof(MailMergeFields));
_COM_SMARTPTR_TYPEDEF(MailMerge, __uuidof(MailMerge));
_COM_SMARTPTR_TYPEDEF(TableOfContents, __uuidof(TableOfContents));
_COM_SMARTPTR_TYPEDEF(TableOfAuthorities, __uuidof(TableOfAuthorities));
_COM_SMARTPTR_TYPEDEF(Index, __uuidof(Index));
_COM_SMARTPTR_TYPEDEF(Subdocument, __uuidof(Subdocument));
_COM_SMARTPTR_TYPEDEF(Subdocuments, __uuidof(Subdocuments));
_COM_SMARTPTR_TYPEDEF(StoryRanges, __uuidof(StoryRanges));
_COM_SMARTPTR_TYPEDEF(ListParagraphs, __uuidof(ListParagraphs));
_COM_SMARTPTR_TYPEDEF(ProofreadingErrors, __uuidof(ProofreadingErrors));
_COM_SMARTPTR_TYPEDEF(EmailSignatureEntries, __uuidof(EmailSignatureEntries));
_COM_SMARTPTR_TYPEDEF(EmailSignature, __uuidof(EmailSignature));
_COM_SMARTPTR_TYPEDEF(Break, __uuidof(Break));
_COM_SMARTPTR_TYPEDEF(Breaks, __uuidof(Breaks));
_COM_SMARTPTR_TYPEDEF(Editor, __uuidof(Editor));
_COM_SMARTPTR_TYPEDEF(Editors, __uuidof(Editors));
_COM_SMARTPTR_TYPEDEF(OMathBreak, __uuidof(OMathBreak));
_COM_SMARTPTR_TYPEDEF(OMathBreaks, __uuidof(OMathBreaks));
_COM_SMARTPTR_TYPEDEF(ListFormat, __uuidof(ListFormat));
_COM_SMARTPTR_TYPEDEF(Sections, __uuidof(Sections));
_COM_SMARTPTR_TYPEDEF(Section, __uuidof(Section));
_COM_SMARTPTR_TYPEDEF(Table, __uuidof(Table));
_COM_SMARTPTR_TYPEDEF(Tables, __uuidof(Tables));
_COM_SMARTPTR_TYPEDEF(Row, __uuidof(Row));
_COM_SMARTPTR_TYPEDEF(Rows, __uuidof(Rows));
_COM_SMARTPTR_TYPEDEF(Column, __uuidof(Column));
_COM_SMARTPTR_TYPEDEF(Cell, __uuidof(Cell));
_COM_SMARTPTR_TYPEDEF(Columns, __uuidof(Columns));
_COM_SMARTPTR_TYPEDEF(Cells, __uuidof(Cells));
_COM_SMARTPTR_TYPEDEF(Fields, __uuidof(Fields));
_COM_SMARTPTR_TYPEDEF(Field, __uuidof(Field));
_COM_SMARTPTR_TYPEDEF(TablesOfFigures, __uuidof(TablesOfFigures));
_COM_SMARTPTR_TYPEDEF(TablesOfContents, __uuidof(TablesOfContents));
_COM_SMARTPTR_TYPEDEF(TablesOfAuthorities, __uuidof(TablesOfAuthorities));
_COM_SMARTPTR_TYPEDEF(Indexes, __uuidof(Indexes));
_COM_SMARTPTR_TYPEDEF(Styles, __uuidof(Styles));
_COM_SMARTPTR_TYPEDEF(Style, __uuidof(Style));
_COM_SMARTPTR_TYPEDEF(Envelope, __uuidof(Envelope));
_COM_SMARTPTR_TYPEDEF(Revision, __uuidof(Revision));
_COM_SMARTPTR_TYPEDEF(Revisions, __uuidof(Revisions));
_COM_SMARTPTR_TYPEDEF(EmailAuthor, __uuidof(EmailAuthor));
_COM_SMARTPTR_TYPEDEF(EmailOptions, __uuidof(EmailOptions));
_COM_SMARTPTR_TYPEDEF(Email, __uuidof(Email));
_COM_SMARTPTR_TYPEDEF(Selection, __uuidof(Selection));
_COM_SMARTPTR_TYPEDEF(IApplicationEvents2, __uuidof(IApplicationEvents2));
_COM_SMARTPTR_TYPEDEF(IApplicationEvents3, __uuidof(IApplicationEvents3));
_COM_SMARTPTR_TYPEDEF(HeadersFooters, __uuidof(HeadersFooters));
_COM_SMARTPTR_TYPEDEF(HeaderFooter, __uuidof(HeaderFooter));
_COM_SMARTPTR_TYPEDEF(ListLevel, __uuidof(ListLevel));
_COM_SMARTPTR_TYPEDEF(ListLevels, __uuidof(ListLevels));
_COM_SMARTPTR_TYPEDEF(ListTemplate, __uuidof(ListTemplate));
_COM_SMARTPTR_TYPEDEF(ListTemplates, __uuidof(ListTemplates));
_COM_SMARTPTR_TYPEDEF(List, __uuidof(List));
_COM_SMARTPTR_TYPEDEF(Lists, __uuidof(Lists));
_COM_SMARTPTR_TYPEDEF(ListGallery, __uuidof(ListGallery));
_COM_SMARTPTR_TYPEDEF(ListGalleries, __uuidof(ListGalleries));
_COM_SMARTPTR_TYPEDEF(Hyperlinks, __uuidof(Hyperlinks));
_COM_SMARTPTR_TYPEDEF(Hyperlink, __uuidof(Hyperlink));
_COM_SMARTPTR_TYPEDEF(Shapes, __uuidof(Shapes));
_COM_SMARTPTR_TYPEDEF(ShapeRange, __uuidof(ShapeRange));
_COM_SMARTPTR_TYPEDEF(GroupShapes, __uuidof(GroupShapes));
_COM_SMARTPTR_TYPEDEF(Shape, __uuidof(Shape));
_COM_SMARTPTR_TYPEDEF(TextFrame, __uuidof(TextFrame));
_COM_SMARTPTR_TYPEDEF(InlineShape, __uuidof(InlineShape));
_COM_SMARTPTR_TYPEDEF(InlineShapes, __uuidof(InlineShapes));
_COM_SMARTPTR_TYPEDEF(ConnectorFormat, __uuidof(ConnectorFormat));
_COM_SMARTPTR_TYPEDEF(FreeformBuilder, __uuidof(FreeformBuilder));
_COM_SMARTPTR_TYPEDEF(CanvasShapes, __uuidof(CanvasShapes));
_COM_SMARTPTR_TYPEDEF(HTMLDivision, __uuidof(HTMLDivision));
_COM_SMARTPTR_TYPEDEF(HTMLDivisions, __uuidof(HTMLDivisions));
_COM_SMARTPTR_TYPEDEF(DiagramNode, __uuidof(DiagramNode));
_COM_SMARTPTR_TYPEDEF(DiagramNodeChildren, __uuidof(DiagramNodeChildren));
_COM_SMARTPTR_TYPEDEF(DiagramNodes, __uuidof(DiagramNodes));
_COM_SMARTPTR_TYPEDEF(Diagram, __uuidof(Diagram));
_COM_SMARTPTR_TYPEDEF(SmartTag, __uuidof(SmartTag));
_COM_SMARTPTR_TYPEDEF(SmartTags, __uuidof(SmartTags));
_COM_SMARTPTR_TYPEDEF(Line, __uuidof(Line));
_COM_SMARTPTR_TYPEDEF(Lines, __uuidof(Lines));
_COM_SMARTPTR_TYPEDEF(Rectangle, __uuidof(Rectangle));
_COM_SMARTPTR_TYPEDEF(Rectangles, __uuidof(Rectangles));
_COM_SMARTPTR_TYPEDEF(Page, __uuidof(Page));
_COM_SMARTPTR_TYPEDEF(Pages, __uuidof(Pages));
_COM_SMARTPTR_TYPEDEF(XMLNode, __uuidof(XMLNode));
_COM_SMARTPTR_TYPEDEF(XMLNodes, __uuidof(XMLNodes));
_COM_SMARTPTR_TYPEDEF(XMLChildNodeSuggestion, __uuidof(XMLChildNodeSuggestion));
_COM_SMARTPTR_TYPEDEF(XMLChildNodeSuggestions, __uuidof(XMLChildNodeSuggestions));
_COM_SMARTPTR_TYPEDEF(IApplicationEvents4, __uuidof(IApplicationEvents4));
_COM_SMARTPTR_TYPEDEF(OMaths, __uuidof(OMaths));
_COM_SMARTPTR_TYPEDEF(OMath, __uuidof(OMath));
_COM_SMARTPTR_TYPEDEF(OMathArgs, __uuidof(OMathArgs));
_COM_SMARTPTR_TYPEDEF(OMathAcc, __uuidof(OMathAcc));
_COM_SMARTPTR_TYPEDEF(OMathBar, __uuidof(OMathBar));
_COM_SMARTPTR_TYPEDEF(OMathBox, __uuidof(OMathBox));
_COM_SMARTPTR_TYPEDEF(OMathBorderBox, __uuidof(OMathBorderBox));
_COM_SMARTPTR_TYPEDEF(OMathDelim, __uuidof(OMathDelim));
_COM_SMARTPTR_TYPEDEF(OMathEqArray, __uuidof(OMathEqArray));
_COM_SMARTPTR_TYPEDEF(OMathFrac, __uuidof(OMathFrac));
_COM_SMARTPTR_TYPEDEF(OMathFunc, __uuidof(OMathFunc));
_COM_SMARTPTR_TYPEDEF(OMathGroupChar, __uuidof(OMathGroupChar));
_COM_SMARTPTR_TYPEDEF(OMathMatRow, __uuidof(OMathMatRow));
_COM_SMARTPTR_TYPEDEF(OMathMatRows, __uuidof(OMathMatRows));
_COM_SMARTPTR_TYPEDEF(OMathMatCol, __uuidof(OMathMatCol));
_COM_SMARTPTR_TYPEDEF(OMathMatCols, __uuidof(OMathMatCols));
_COM_SMARTPTR_TYPEDEF(OMathMat, __uuidof(OMathMat));
_COM_SMARTPTR_TYPEDEF(OMathNary, __uuidof(OMathNary));
_COM_SMARTPTR_TYPEDEF(OMathPhantom, __uuidof(OMathPhantom));
_COM_SMARTPTR_TYPEDEF(OMathRad, __uuidof(OMathRad));
_COM_SMARTPTR_TYPEDEF(OMathScrSub, __uuidof(OMathScrSub));
_COM_SMARTPTR_TYPEDEF(OMathScrSup, __uuidof(OMathScrSup));
_COM_SMARTPTR_TYPEDEF(OMathFunctions, __uuidof(OMathFunctions));
_COM_SMARTPTR_TYPEDEF(OMathFunction, __uuidof(OMathFunction));
_COM_SMARTPTR_TYPEDEF(OMathLimLow, __uuidof(OMathLimLow));
_COM_SMARTPTR_TYPEDEF(OMathLimUpp, __uuidof(OMathLimUpp));
_COM_SMARTPTR_TYPEDEF(OMathScrPre, __uuidof(OMathScrPre));
_COM_SMARTPTR_TYPEDEF(OMathScrSubSup, __uuidof(OMathScrSubSup));
_COM_SMARTPTR_TYPEDEF(ContentControls, __uuidof(ContentControls));
_COM_SMARTPTR_TYPEDEF(ContentControl, __uuidof(ContentControl));
_COM_SMARTPTR_TYPEDEF(BuildingBlockTypes, __uuidof(BuildingBlockTypes));
_COM_SMARTPTR_TYPEDEF(BuildingBlockType, __uuidof(BuildingBlockType));
_COM_SMARTPTR_TYPEDEF(Categories, __uuidof(Categories));
_COM_SMARTPTR_TYPEDEF(Category, __uuidof(Category));
_COM_SMARTPTR_TYPEDEF(BuildingBlock, __uuidof(BuildingBlock));
_COM_SMARTPTR_TYPEDEF(BuildingBlocks, __uuidof(BuildingBlocks));
_COM_SMARTPTR_TYPEDEF(BuildingBlockEntries, __uuidof(BuildingBlockEntries));

//
// Type library items
//

enum WdMailSystem
{
    wdNoMailSystem = 0,
    wdMAPI = 1,
    wdPowerTalk = 2,
    wdMAPIandPowerTalk = 3
};

enum WdTemplateType
{
    wdNormalTemplate = 0,
    wdGlobalTemplate = 1,
    wdAttachedTemplate = 2
};

enum WdContinue
{
    wdContinueDisabled = 0,
    wdResetList = 1,
    wdContinueList = 2
};

enum WdIMEMode
{
    wdIMEModeNoControl = 0,
    wdIMEModeOn = 1,
    wdIMEModeOff = 2,
    wdIMEModeHiragana = 4,
    wdIMEModeKatakana = 5,
    wdIMEModeKatakanaHalf = 6,
    wdIMEModeAlphaFull = 7,
    wdIMEModeAlpha = 8,
    wdIMEModeHangulFull = 9,
    wdIMEModeHangul = 10
};

enum WdBaselineAlignment
{
    wdBaselineAlignTop = 0,
    wdBaselineAlignCenter = 1,
    wdBaselineAlignBaseline = 2,
    wdBaselineAlignFarEast50 = 3,
    wdBaselineAlignAuto = 4
};

enum WdIndexFilter
{
    wdIndexFilterNone = 0,
    wdIndexFilterAiueo = 1,
    wdIndexFilterAkasatana = 2,
    wdIndexFilterChosung = 3,
    wdIndexFilterLow = 4,
    wdIndexFilterMedium = 5,
    wdIndexFilterFull = 6
};

enum WdIndexSortBy
{
    wdIndexSortByStroke = 0,
    wdIndexSortBySyllable = 1
};

enum WdJustificationMode
{
    wdJustificationModeExpand = 0,
    wdJustificationModeCompress = 1,
    wdJustificationModeCompressKana = 2
};

enum WdFarEastLineBreakLevel
{
    wdFarEastLineBreakLevelNormal = 0,
    wdFarEastLineBreakLevelStrict = 1,
    wdFarEastLineBreakLevelCustom = 2
};

enum WdMultipleWordConversionsMode
{
    wdHangulToHanja = 0,
    wdHanjaToHangul = 1
};

enum WdColorIndex
{
    wdAuto = 0,
    wdBlack = 1,
    wdBlue = 2,
    wdTurquoise = 3,
    wdBrightGreen = 4,
    wdPink = 5,
    wdRed = 6,
    wdYellow = 7,
    wdWhite = 8,
    wdDarkBlue = 9,
    wdTeal = 10,
    wdGreen = 11,
    wdViolet = 12,
    wdDarkRed = 13,
    wdDarkYellow = 14,
    wdGray50 = 15,
    wdGray25 = 16,
    wdByAuthor = -1,
    wdNoHighlight = 0
};

enum WdTextureIndex
{
    wdTextureNone = 0,
    wdTexture2Pt5Percent = 25,
    wdTexture5Percent = 50,
    wdTexture7Pt5Percent = 75,
    wdTexture10Percent = 100,
    wdTexture12Pt5Percent = 125,
    wdTexture15Percent = 150,
    wdTexture17Pt5Percent = 175,
    wdTexture20Percent = 200,
    wdTexture22Pt5Percent = 225,
    wdTexture25Percent = 250,
    wdTexture27Pt5Percent = 275,
    wdTexture30Percent = 300,
    wdTexture32Pt5Percent = 325,
    wdTexture35Percent = 350,
    wdTexture37Pt5Percent = 375,
    wdTexture40Percent = 400,
    wdTexture42Pt5Percent = 425,
    wdTexture45Percent = 450,
    wdTexture47Pt5Percent = 475,
    wdTexture50Percent = 500,
    wdTexture52Pt5Percent = 525,
    wdTexture55Percent = 550,
    wdTexture57Pt5Percent = 575,
    wdTexture60Percent = 600,
    wdTexture62Pt5Percent = 625,
    wdTexture65Percent = 650,
    wdTexture67Pt5Percent = 675,
    wdTexture70Percent = 700,
    wdTexture72Pt5Percent = 725,
    wdTexture75Percent = 750,
    wdTexture77Pt5Percent = 775,
    wdTexture80Percent = 800,
    wdTexture82Pt5Percent = 825,
    wdTexture85Percent = 850,
    wdTexture87Pt5Percent = 875,
    wdTexture90Percent = 900,
    wdTexture92Pt5Percent = 925,
    wdTexture95Percent = 950,
    wdTexture97Pt5Percent = 975,
    wdTextureSolid = 1000,
    wdTextureDarkHorizontal = -1,
    wdTextureDarkVertical = -2,
    wdTextureDarkDiagonalDown = -3,
    wdTextureDarkDiagonalUp = -4,
    wdTextureDarkCross = -5,
    wdTextureDarkDiagonalCross = -6,
    wdTextureHorizontal = -7,
    wdTextureVertical = -8,
    wdTextureDiagonalDown = -9,
    wdTextureDiagonalUp = -10,
    wdTextureCross = -11,
    wdTextureDiagonalCross = -12
};

enum WdUnderline
{
    wdUnderlineNone = 0,
    wdUnderlineSingle = 1,
    wdUnderlineWords = 2,
    wdUnderlineDouble = 3,
    wdUnderlineDotted = 4,
    wdUnderlineThick = 6,
    wdUnderlineDash = 7,
    wdUnderlineDotDash = 9,
    wdUnderlineDotDotDash = 10,
    wdUnderlineWavy = 11,
    wdUnderlineWavyHeavy = 27,
    wdUnderlineDottedHeavy = 20,
    wdUnderlineDashHeavy = 23,
    wdUnderlineDotDashHeavy = 25,
    wdUnderlineDotDotDashHeavy = 26,
    wdUnderlineDashLong = 39,
    wdUnderlineDashLongHeavy = 55,
    wdUnderlineWavyDouble = 43
};

enum WdEmphasisMark
{
    wdEmphasisMarkNone = 0,
    wdEmphasisMarkOverSolidCircle = 1,
    wdEmphasisMarkOverComma = 2,
    wdEmphasisMarkOverWhiteCircle = 3,
    wdEmphasisMarkUnderSolidCircle = 4
};

enum WdInternationalIndex
{
    wdListSeparator = 17,
    wdDecimalSeparator = 18,
    wdThousandsSeparator = 19,
    wdCurrencyCode = 20,
    wd24HourClock = 21,
    wdInternationalAM = 22,
    wdInternationalPM = 23,
    wdTimeSeparator = 24,
    wdDateSeparator = 25,
    wdProductLanguageID = 26
};

enum WdAutoMacros
{
    wdAutoExec = 0,
    wdAutoNew = 1,
    wdAutoOpen = 2,
    wdAutoClose = 3,
    wdAutoExit = 4,
    wdAutoSync = 5
};

enum WdCaptionPosition
{
    wdCaptionPositionAbove = 0,
    wdCaptionPositionBelow = 1
};

enum WdCountry
{
    wdUS = 1,
    wdCanada = 2,
    wdLatinAmerica = 3,
    wdNetherlands = 31,
    wdFrance = 33,
    wdSpain = 34,
    wdItaly = 39,
    wdUK = 44,
    wdDenmark = 45,
    wdSweden = 46,
    wdNorway = 47,
    wdGermany = 49,
    wdPeru = 51,
    wdMexico = 52,
    wdArgentina = 54,
    wdBrazil = 55,
    wdChile = 56,
    wdVenezuela = 58,
    wdJapan = 81,
    wdTaiwan = 886,
    wdChina = 86,
    wdKorea = 82,
    wdFinland = 358,
    wdIceland = 354
};

enum WdHeadingSeparator
{
    wdHeadingSeparatorNone = 0,
    wdHeadingSeparatorBlankLine = 1,
    wdHeadingSeparatorLetter = 2,
    wdHeadingSeparatorLetterLow = 3,
    wdHeadingSeparatorLetterFull = 4
};

enum WdSeparatorType
{
    wdSeparatorHyphen = 0,
    wdSeparatorPeriod = 1,
    wdSeparatorColon = 2,
    wdSeparatorEmDash = 3,
    wdSeparatorEnDash = 4
};

enum WdPageNumberAlignment
{
    wdAlignPageNumberLeft = 0,
    wdAlignPageNumberCenter = 1,
    wdAlignPageNumberRight = 2,
    wdAlignPageNumberInside = 3,
    wdAlignPageNumberOutside = 4
};

enum WdBorderType
{
    wdBorderTop = -1,
    wdBorderLeft = -2,
    wdBorderBottom = -3,
    wdBorderRight = -4,
    wdBorderHorizontal = -5,
    wdBorderVertical = -6,
    wdBorderDiagonalDown = -7,
    wdBorderDiagonalUp = -8
};

enum WdBorderTypeHID
{
    emptyenum = 0
};

enum WdFramePosition
{
    wdFrameTop = -999999,
    wdFrameLeft = -999998,
    wdFrameBottom = -999997,
    wdFrameRight = -999996,
    wdFrameCenter = -999995,
    wdFrameInside = -999994,
    wdFrameOutside = -999993
};

enum WdAnimation
{
    wdAnimationNone = 0,
    wdAnimationLasVegasLights = 1,
    wdAnimationBlinkingBackground = 2,
    wdAnimationSparkleText = 3,
    wdAnimationMarchingBlackAnts = 4,
    wdAnimationMarchingRedAnts = 5,
    wdAnimationShimmer = 6
};

enum WdCharacterCase
{
    wdNextCase = -1,
    wdLowerCase = 0,
    wdUpperCase = 1,
    wdTitleWord = 2,
    wdTitleSentence = 4,
    wdToggleCase = 5,
    wdHalfWidth = 6,
    wdFullWidth = 7,
    wdKatakana = 8,
    wdHiragana = 9
};

enum WdCharacterCaseHID
{
//  emptyenum = 0
};

enum WdSummaryMode
{
    wdSummaryModeHighlight = 0,
    wdSummaryModeHideAllButSummary = 1,
    wdSummaryModeInsert = 2,
    wdSummaryModeCreateNew = 3
};

enum WdSummaryLength
{
    wd10Sentences = -2,
    wd20Sentences = -3,
    wd100Words = -4,
    wd500Words = -5,
    wd10Percent = -6,
    wd25Percent = -7,
    wd50Percent = -8,
    wd75Percent = -9
};

enum WdStyleType
{
    wdStyleTypeParagraph = 1,
    wdStyleTypeCharacter = 2,
    wdStyleTypeTable = 3,
    wdStyleTypeList = 4,
    wdStyleTypeParagraphOnly = 5,
    wdStyleTypeLinked = 6
};

enum WdUnits
{
    wdCharacter = 1,
    wdWord = 2,
    wdSentence = 3,
    wdParagraph = 4,
    wdLine = 5,
    wdStory = 6,
    wdScreen = 7,
    wdSection = 8,
    wdColumn = 9,
    wdRow = 10,
    wdWindow = 11,
    wdCell = 12,
    wdCharacterFormatting = 13,
    wdParagraphFormatting = 14,
    wdTable = 15,
    wdItem = 16
};

enum WdGoToItem
{
    wdGoToBookmark = -1,
    wdGoToSection = 0,
    wdGoToPage = 1,
    wdGoToTable = 2,
    wdGoToLine = 3,
    wdGoToFootnote = 4,
    wdGoToEndnote = 5,
    wdGoToComment = 6,
    wdGoToField = 7,
    wdGoToGraphic = 8,
    wdGoToObject = 9,
    wdGoToEquation = 10,
    wdGoToHeading = 11,
    wdGoToPercent = 12,
    wdGoToSpellingError = 13,
    wdGoToGrammaticalError = 14,
    wdGoToProofreadingError = 15
};

enum WdGoToDirection
{
    wdGoToFirst = 1,
    wdGoToLast = -1,
    wdGoToNext = 2,
    wdGoToRelative = 2,
    wdGoToPrevious = 3,
    wdGoToAbsolute = 1
};

enum WdCollapseDirection
{
    wdCollapseStart = 1,
    wdCollapseEnd = 0
};

enum WdRowHeightRule
{
    wdRowHeightAuto = 0,
    wdRowHeightAtLeast = 1,
    wdRowHeightExactly = 2
};

enum WdFrameSizeRule
{
    wdFrameAuto = 0,
    wdFrameAtLeast = 1,
    wdFrameExact = 2
};

enum WdInsertCells
{
    wdInsertCellsShiftRight = 0,
    wdInsertCellsShiftDown = 1,
    wdInsertCellsEntireRow = 2,
    wdInsertCellsEntireColumn = 3
};

enum WdDeleteCells
{
    wdDeleteCellsShiftLeft = 0,
    wdDeleteCellsShiftUp = 1,
    wdDeleteCellsEntireRow = 2,
    wdDeleteCellsEntireColumn = 3
};

enum WdListApplyTo
{
    wdListApplyToWholeList = 0,
    wdListApplyToThisPointForward = 1,
    wdListApplyToSelection = 2
};

enum WdAlertLevel
{
    wdAlertsNone = 0,
    wdAlertsMessageBox = -2,
    wdAlertsAll = -1
};

enum WdCursorType
{
    wdCursorWait = 0,
    wdCursorIBeam = 1,
    wdCursorNormal = 2,
    wdCursorNorthwestArrow = 3
};

enum WdEnableCancelKey
{
    wdCancelDisabled = 0,
    wdCancelInterrupt = 1
};

enum WdRulerStyle
{
    wdAdjustNone = 0,
    wdAdjustProportional = 1,
    wdAdjustFirstColumn = 2,
    wdAdjustSameWidth = 3
};

enum WdParagraphAlignment
{
    wdAlignParagraphLeft = 0,
    wdAlignParagraphCenter = 1,
    wdAlignParagraphRight = 2,
    wdAlignParagraphJustify = 3,
    wdAlignParagraphDistribute = 4,
    wdAlignParagraphJustifyMed = 5,
    wdAlignParagraphJustifyHi = 7,
    wdAlignParagraphJustifyLow = 8,
    wdAlignParagraphThaiJustify = 9
};

enum WdParagraphAlignmentHID
{
//  emptyenum = 0
};

enum WdListLevelAlignment
{
    wdListLevelAlignLeft = 0,
    wdListLevelAlignCenter = 1,
    wdListLevelAlignRight = 2
};

enum WdRowAlignment
{
    wdAlignRowLeft = 0,
    wdAlignRowCenter = 1,
    wdAlignRowRight = 2
};

enum WdTabAlignment
{
    wdAlignTabLeft = 0,
    wdAlignTabCenter = 1,
    wdAlignTabRight = 2,
    wdAlignTabDecimal = 3,
    wdAlignTabBar = 4,
    wdAlignTabList = 6
};

enum WdVerticalAlignment
{
    wdAlignVerticalTop = 0,
    wdAlignVerticalCenter = 1,
    wdAlignVerticalJustify = 2,
    wdAlignVerticalBottom = 3
};

enum WdCellVerticalAlignment
{
    wdCellAlignVerticalTop = 0,
    wdCellAlignVerticalCenter = 1,
    wdCellAlignVerticalBottom = 3
};

enum WdTrailingCharacter
{
    wdTrailingTab = 0,
    wdTrailingSpace = 1,
    wdTrailingNone = 2
};

enum WdListGalleryType
{
    wdBulletGallery = 1,
    wdNumberGallery = 2,
    wdOutlineNumberGallery = 3
};

enum WdListNumberStyle
{
    wdListNumberStyleArabic = 0,
    wdListNumberStyleUppercaseRoman = 1,
    wdListNumberStyleLowercaseRoman = 2,
    wdListNumberStyleUppercaseLetter = 3,
    wdListNumberStyleLowercaseLetter = 4,
    wdListNumberStyleOrdinal = 5,
    wdListNumberStyleCardinalText = 6,
    wdListNumberStyleOrdinalText = 7,
    wdListNumberStyleKanji = 10,
    wdListNumberStyleKanjiDigit = 11,
    wdListNumberStyleAiueoHalfWidth = 12,
    wdListNumberStyleIrohaHalfWidth = 13,
    wdListNumberStyleArabicFullWidth = 14,
    wdListNumberStyleKanjiTraditional = 16,
    wdListNumberStyleKanjiTraditional2 = 17,
    wdListNumberStyleNumberInCircle = 18,
    wdListNumberStyleAiueo = 20,
    wdListNumberStyleIroha = 21,
    wdListNumberStyleArabicLZ = 22,
    wdListNumberStyleBullet = 23,
    wdListNumberStyleGanada = 24,
    wdListNumberStyleChosung = 25,
    wdListNumberStyleGBNum1 = 26,
    wdListNumberStyleGBNum2 = 27,
    wdListNumberStyleGBNum3 = 28,
    wdListNumberStyleGBNum4 = 29,
    wdListNumberStyleZodiac1 = 30,
    wdListNumberStyleZodiac2 = 31,
    wdListNumberStyleZodiac3 = 32,
    wdListNumberStyleTradChinNum1 = 33,
    wdListNumberStyleTradChinNum2 = 34,
    wdListNumberStyleTradChinNum3 = 35,
    wdListNumberStyleTradChinNum4 = 36,
    wdListNumberStyleSimpChinNum1 = 37,
    wdListNumberStyleSimpChinNum2 = 38,
    wdListNumberStyleSimpChinNum3 = 39,
    wdListNumberStyleSimpChinNum4 = 40,
    wdListNumberStyleHanjaRead = 41,
    wdListNumberStyleHanjaReadDigit = 42,
    wdListNumberStyleHangul = 43,
    wdListNumberStyleHanja = 44,
    wdListNumberStyleHebrew1 = 45,
    wdListNumberStyleArabic1 = 46,
    wdListNumberStyleHebrew2 = 47,
    wdListNumberStyleArabic2 = 48,
    wdListNumberStyleHindiLetter1 = 49,
    wdListNumberStyleHindiLetter2 = 50,
    wdListNumberStyleHindiArabic = 51,
    wdListNumberStyleHindiCardinalText = 52,
    wdListNumberStyleThaiLetter = 53,
    wdListNumberStyleThaiArabic = 54,
    wdListNumberStyleThaiCardinalText = 55,
    wdListNumberStyleVietCardinalText = 56,
    wdListNumberStyleLowercaseRussian = 58,
    wdListNumberStyleUppercaseRussian = 59,
    wdListNumberStylePictureBullet = 249,
    wdListNumberStyleLegal = 253,
    wdListNumberStyleLegalLZ = 254,
    wdListNumberStyleNone = 255
};

enum WdListNumberStyleHID
{
//  emptyenum = 0
};

enum WdNoteNumberStyle
{
    wdNoteNumberStyleArabic = 0,
    wdNoteNumberStyleUppercaseRoman = 1,
    wdNoteNumberStyleLowercaseRoman = 2,
    wdNoteNumberStyleUppercaseLetter = 3,
    wdNoteNumberStyleLowercaseLetter = 4,
    wdNoteNumberStyleSymbol = 9,
    wdNoteNumberStyleArabicFullWidth = 14,
    wdNoteNumberStyleKanji = 10,
    wdNoteNumberStyleKanjiDigit = 11,
    wdNoteNumberStyleKanjiTraditional = 16,
    wdNoteNumberStyleNumberInCircle = 18,
    wdNoteNumberStyleHanjaRead = 41,
    wdNoteNumberStyleHanjaReadDigit = 42,
    wdNoteNumberStyleTradChinNum1 = 33,
    wdNoteNumberStyleTradChinNum2 = 34,
    wdNoteNumberStyleSimpChinNum1 = 37,
    wdNoteNumberStyleSimpChinNum2 = 38,
    wdNoteNumberStyleHebrewLetter1 = 45,
    wdNoteNumberStyleArabicLetter1 = 46,
    wdNoteNumberStyleHebrewLetter2 = 47,
    wdNoteNumberStyleArabicLetter2 = 48,
    wdNoteNumberStyleHindiLetter1 = 49,
    wdNoteNumberStyleHindiLetter2 = 50,
    wdNoteNumberStyleHindiArabic = 51,
    wdNoteNumberStyleHindiCardinalText = 52,
    wdNoteNumberStyleThaiLetter = 53,
    wdNoteNumberStyleThaiArabic = 54,
    wdNoteNumberStyleThaiCardinalText = 55,
    wdNoteNumberStyleVietCardinalText = 56
};

enum WdNoteNumberStyleHID
{
//  emptyenum = 0
};

enum WdCaptionNumberStyle
{
    wdCaptionNumberStyleArabic = 0,
    wdCaptionNumberStyleUppercaseRoman = 1,
    wdCaptionNumberStyleLowercaseRoman = 2,
    wdCaptionNumberStyleUppercaseLetter = 3,
    wdCaptionNumberStyleLowercaseLetter = 4,
    wdCaptionNumberStyleArabicFullWidth = 14,
    wdCaptionNumberStyleKanji = 10,
    wdCaptionNumberStyleKanjiDigit = 11,
    wdCaptionNumberStyleKanjiTraditional = 16,
    wdCaptionNumberStyleNumberInCircle = 18,
    wdCaptionNumberStyleGanada = 24,
    wdCaptionNumberStyleChosung = 25,
    wdCaptionNumberStyleZodiac1 = 30,
    wdCaptionNumberStyleZodiac2 = 31,
    wdCaptionNumberStyleHanjaRead = 41,
    wdCaptionNumberStyleHanjaReadDigit = 42,
    wdCaptionNumberStyleTradChinNum2 = 34,
    wdCaptionNumberStyleTradChinNum3 = 35,
    wdCaptionNumberStyleSimpChinNum2 = 38,
    wdCaptionNumberStyleSimpChinNum3 = 39,
    wdCaptionNumberStyleHebrewLetter1 = 45,
    wdCaptionNumberStyleArabicLetter1 = 46,
    wdCaptionNumberStyleHebrewLetter2 = 47,
    wdCaptionNumberStyleArabicLetter2 = 48,
    wdCaptionNumberStyleHindiLetter1 = 49,
    wdCaptionNumberStyleHindiLetter2 = 50,
    wdCaptionNumberStyleHindiArabic = 51,
    wdCaptionNumberStyleHindiCardinalText = 52,
    wdCaptionNumberStyleThaiLetter = 53,
    wdCaptionNumberStyleThaiArabic = 54,
    wdCaptionNumberStyleThaiCardinalText = 55,
    wdCaptionNumberStyleVietCardinalText = 56
};

enum WdCaptionNumberStyleHID
{
//  emptyenum = 0
};

enum WdPageNumberStyle
{
    wdPageNumberStyleArabic = 0,
    wdPageNumberStyleUppercaseRoman = 1,
    wdPageNumberStyleLowercaseRoman = 2,
    wdPageNumberStyleUppercaseLetter = 3,
    wdPageNumberStyleLowercaseLetter = 4,
    wdPageNumberStyleArabicFullWidth = 14,
    wdPageNumberStyleKanji = 10,
    wdPageNumberStyleKanjiDigit = 11,
    wdPageNumberStyleKanjiTraditional = 16,
    wdPageNumberStyleNumberInCircle = 18,
    wdPageNumberStyleHanjaRead = 41,
    wdPageNumberStyleHanjaReadDigit = 42,
    wdPageNumberStyleTradChinNum1 = 33,
    wdPageNumberStyleTradChinNum2 = 34,
    wdPageNumberStyleSimpChinNum1 = 37,
    wdPageNumberStyleSimpChinNum2 = 38,
    wdPageNumberStyleHebrewLetter1 = 45,
    wdPageNumberStyleArabicLetter1 = 46,
    wdPageNumberStyleHebrewLetter2 = 47,
    wdPageNumberStyleArabicLetter2 = 48,
    wdPageNumberStyleHindiLetter1 = 49,
    wdPageNumberStyleHindiLetter2 = 50,
    wdPageNumberStyleHindiArabic = 51,
    wdPageNumberStyleHindiCardinalText = 52,
    wdPageNumberStyleThaiLetter = 53,
    wdPageNumberStyleThaiArabic = 54,
    wdPageNumberStyleThaiCardinalText = 55,
    wdPageNumberStyleVietCardinalText = 56,
    wdPageNumberStyleNumberInDash = 57
};

enum WdPageNumberStyleHID
{
//  emptyenum = 0
};

enum WdStatistic
{
    wdStatisticWords = 0,
    wdStatisticLines = 1,
    wdStatisticPages = 2,
    wdStatisticCharacters = 3,
    wdStatisticParagraphs = 4,
    wdStatisticCharactersWithSpaces = 5,
    wdStatisticFarEastCharacters = 6
};

enum WdStatisticHID
{
//  emptyenum = 0
};

enum WdBuiltInProperty
{
    wdPropertyTitle = 1,
    wdPropertySubject = 2,
    wdPropertyAuthor = 3,
    wdPropertyKeywords = 4,
    wdPropertyComments = 5,
    wdPropertyTemplate = 6,
    wdPropertyLastAuthor = 7,
    wdPropertyRevision = 8,
    wdPropertyAppName = 9,
    wdPropertyTimeLastPrinted = 10,
    wdPropertyTimeCreated = 11,
    wdPropertyTimeLastSaved = 12,
    wdPropertyVBATotalEdit = 13,
    wdPropertyPages = 14,
    wdPropertyWords = 15,
    wdPropertyCharacters = 16,
    wdPropertySecurity = 17,
    wdPropertyCategory = 18,
    wdPropertyFormat = 19,
    wdPropertyManager = 20,
    wdPropertyCompany = 21,
    wdPropertyBytes = 22,
    wdPropertyLines = 23,
    wdPropertyParas = 24,
    wdPropertySlides = 25,
    wdPropertyNotes = 26,
    wdPropertyHiddenSlides = 27,
    wdPropertyMMClips = 28,
    wdPropertyHyperlinkBase = 29,
    wdPropertyCharsWSpaces = 30
};

enum WdLineSpacing
{
    wdLineSpaceSingle = 0,
    wdLineSpace1pt5 = 1,
    wdLineSpaceDouble = 2,
    wdLineSpaceAtLeast = 3,
    wdLineSpaceExactly = 4,
    wdLineSpaceMultiple = 5
};

enum WdNumberType
{
    wdNumberParagraph = 1,
    wdNumberListNum = 2,
    wdNumberAllNumbers = 3
};

enum WdListType
{
    wdListNoNumbering = 0,
    wdListListNumOnly = 1,
    wdListBullet = 2,
    wdListSimpleNumbering = 3,
    wdListOutlineNumbering = 4,
    wdListMixedNumbering = 5,
    wdListPictureBullet = 6
};

enum WdStoryType
{
    wdMainTextStory = 1,
    wdFootnotesStory = 2,
    wdEndnotesStory = 3,
    wdCommentsStory = 4,
    wdTextFrameStory = 5,
    wdEvenPagesHeaderStory = 6,
    wdPrimaryHeaderStory = 7,
    wdEvenPagesFooterStory = 8,
    wdPrimaryFooterStory = 9,
    wdFirstPageHeaderStory = 10,
    wdFirstPageFooterStory = 11,
    wdFootnoteSeparatorStory = 12,
    wdFootnoteContinuationSeparatorStory = 13,
    wdFootnoteContinuationNoticeStory = 14,
    wdEndnoteSeparatorStory = 15,
    wdEndnoteContinuationSeparatorStory = 16,
    wdEndnoteContinuationNoticeStory = 17
};

enum WdSaveFormat
{
    wdFormatDocument = 0,
    wdFormatDocument97 = 0,
    wdFormatTemplate = 1,
    wdFormatTemplate97 = 1,
    wdFormatText = 2,
    wdFormatTextLineBreaks = 3,
    wdFormatDOSText = 4,
    wdFormatDOSTextLineBreaks = 5,
    wdFormatRTF = 6,
    wdFormatUnicodeText = 7,
    wdFormatEncodedText = 7,
    wdFormatHTML = 8,
    wdFormatWebArchive = 9,
    wdFormatFilteredHTML = 10,
    wdFormatXML = 11,
    wdFormatXMLDocument = 12,
    wdFormatXMLDocumentMacroEnabled = 13,
    wdFormatXMLTemplate = 14,
    wdFormatXMLTemplateMacroEnabled = 15,
    wdFormatDocumentDefault = 16,
    wdFormatPDF = 17,
    wdFormatXPS = 18,
    wdFormatFlatXML = 19,
    wdFormatFlatXMLMacroEnabled = 20,
    wdFormatFlatXMLTemplate = 21,
    wdFormatFlatXMLTemplateMacroEnabled = 22
};

enum WdOpenFormat
{
    wdOpenFormatAuto = 0,
    wdOpenFormatDocument = 1,
    wdOpenFormatTemplate = 2,
    wdOpenFormatRTF = 3,
    wdOpenFormatText = 4,
    wdOpenFormatUnicodeText = 5,
    wdOpenFormatEncodedText = 5,
    wdOpenFormatAllWord = 6,
    wdOpenFormatWebPages = 7,
    wdOpenFormatXML = 8,
    wdOpenFormatXMLDocument = 9,
    wdOpenFormatXMLDocumentMacroEnabled = 10,
    wdOpenFormatXMLTemplate = 11,
    wdOpenFormatXMLTemplateMacroEnabled = 12,
    wdOpenFormatDocument97 = 1,
    wdOpenFormatTemplate97 = 2,
    wdOpenFormatAllWordTemplates = 13,
    wdOpenFormatXMLDocumentSerialized = 14,
    wdOpenFormatXMLDocumentMacroEnabledSerialized = 15,
    wdOpenFormatXMLTemplateSerialized = 16,
    wdOpenFormatXMLTemplateMacroEnabledSerialized = 17
};

enum WdHeaderFooterIndex
{
    wdHeaderFooterPrimary = 1,
    wdHeaderFooterFirstPage = 2,
    wdHeaderFooterEvenPages = 3
};

enum WdTocFormat
{
    wdTOCTemplate = 0,
    wdTOCClassic = 1,
    wdTOCDistinctive = 2,
    wdTOCFancy = 3,
    wdTOCModern = 4,
    wdTOCFormal = 5,
    wdTOCSimple = 6
};

enum WdTofFormat
{
    wdTOFTemplate = 0,
    wdTOFClassic = 1,
    wdTOFDistinctive = 2,
    wdTOFCentered = 3,
    wdTOFFormal = 4,
    wdTOFSimple = 5
};

enum WdToaFormat
{
    wdTOATemplate = 0,
    wdTOAClassic = 1,
    wdTOADistinctive = 2,
    wdTOAFormal = 3,
    wdTOASimple = 4
};

enum WdLineStyle
{
    wdLineStyleNone = 0,
    wdLineStyleSingle = 1,
    wdLineStyleDot = 2,
    wdLineStyleDashSmallGap = 3,
    wdLineStyleDashLargeGap = 4,
    wdLineStyleDashDot = 5,
    wdLineStyleDashDotDot = 6,
    wdLineStyleDouble = 7,
    wdLineStyleTriple = 8,
    wdLineStyleThinThickSmallGap = 9,
    wdLineStyleThickThinSmallGap = 10,
    wdLineStyleThinThickThinSmallGap = 11,
    wdLineStyleThinThickMedGap = 12,
    wdLineStyleThickThinMedGap = 13,
    wdLineStyleThinThickThinMedGap = 14,
    wdLineStyleThinThickLargeGap = 15,
    wdLineStyleThickThinLargeGap = 16,
    wdLineStyleThinThickThinLargeGap = 17,
    wdLineStyleSingleWavy = 18,
    wdLineStyleDoubleWavy = 19,
    wdLineStyleDashDotStroked = 20,
    wdLineStyleEmboss3D = 21,
    wdLineStyleEngrave3D = 22,
    wdLineStyleOutset = 23,
    wdLineStyleInset = 24
};

enum WdLineWidth
{
    wdLineWidth025pt = 2,
    wdLineWidth050pt = 4,
    wdLineWidth075pt = 6,
    wdLineWidth100pt = 8,
    wdLineWidth150pt = 12,
    wdLineWidth225pt = 18,
    wdLineWidth300pt = 24,
    wdLineWidth450pt = 36,
    wdLineWidth600pt = 48
};

enum WdBreakType
{
    wdSectionBreakNextPage = 2,
    wdSectionBreakContinuous = 3,
    wdSectionBreakEvenPage = 4,
    wdSectionBreakOddPage = 5,
    wdLineBreak = 6,
    wdPageBreak = 7,
    wdColumnBreak = 8,
    wdLineBreakClearLeft = 9,
    wdLineBreakClearRight = 10,
    wdTextWrappingBreak = 11
};

enum WdTabLeader
{
    wdTabLeaderSpaces = 0,
    wdTabLeaderDots = 1,
    wdTabLeaderDashes = 2,
    wdTabLeaderLines = 3,
    wdTabLeaderHeavy = 4,
    wdTabLeaderMiddleDot = 5
};

enum WdTabLeaderHID
{
//  emptyenum = 0
};

enum WdMeasurementUnits
{
    wdInches = 0,
    wdCentimeters = 1,
    wdMillimeters = 2,
    wdPoints = 3,
    wdPicas = 4
};

enum WdMeasurementUnitsHID
{
//  emptyenum = 0
};

enum WdDropPosition
{
    wdDropNone = 0,
    wdDropNormal = 1,
    wdDropMargin = 2
};

enum WdNumberingRule
{
    wdRestartContinuous = 0,
    wdRestartSection = 1,
    wdRestartPage = 2
};

enum WdFootnoteLocation
{
    wdBottomOfPage = 0,
    wdBeneathText = 1
};

enum WdEndnoteLocation
{
    wdEndOfSection = 0,
    wdEndOfDocument = 1
};

enum WdSortSeparator
{
    wdSortSeparateByTabs = 0,
    wdSortSeparateByCommas = 1,
    wdSortSeparateByDefaultTableSeparator = 2
};

enum WdTableFieldSeparator
{
    wdSeparateByParagraphs = 0,
    wdSeparateByTabs = 1,
    wdSeparateByCommas = 2,
    wdSeparateByDefaultListSeparator = 3
};

enum WdSortFieldType
{
    wdSortFieldAlphanumeric = 0,
    wdSortFieldNumeric = 1,
    wdSortFieldDate = 2,
    wdSortFieldSyllable = 3,
    wdSortFieldJapanJIS = 4,
    wdSortFieldStroke = 5,
    wdSortFieldKoreaKS = 6
};

enum WdSortFieldTypeHID
{
//  emptyenum = 0
};

enum WdSortOrder
{
    wdSortOrderAscending = 0,
    wdSortOrderDescending = 1
};

enum WdTableFormat
{
    wdTableFormatNone = 0,
    wdTableFormatSimple1 = 1,
    wdTableFormatSimple2 = 2,
    wdTableFormatSimple3 = 3,
    wdTableFormatClassic1 = 4,
    wdTableFormatClassic2 = 5,
    wdTableFormatClassic3 = 6,
    wdTableFormatClassic4 = 7,
    wdTableFormatColorful1 = 8,
    wdTableFormatColorful2 = 9,
    wdTableFormatColorful3 = 10,
    wdTableFormatColumns1 = 11,
    wdTableFormatColumns2 = 12,
    wdTableFormatColumns3 = 13,
    wdTableFormatColumns4 = 14,
    wdTableFormatColumns5 = 15,
    wdTableFormatGrid1 = 16,
    wdTableFormatGrid2 = 17,
    wdTableFormatGrid3 = 18,
    wdTableFormatGrid4 = 19,
    wdTableFormatGrid5 = 20,
    wdTableFormatGrid6 = 21,
    wdTableFormatGrid7 = 22,
    wdTableFormatGrid8 = 23,
    wdTableFormatList1 = 24,
    wdTableFormatList2 = 25,
    wdTableFormatList3 = 26,
    wdTableFormatList4 = 27,
    wdTableFormatList5 = 28,
    wdTableFormatList6 = 29,
    wdTableFormatList7 = 30,
    wdTableFormatList8 = 31,
    wdTableFormat3DEffects1 = 32,
    wdTableFormat3DEffects2 = 33,
    wdTableFormat3DEffects3 = 34,
    wdTableFormatContemporary = 35,
    wdTableFormatElegant = 36,
    wdTableFormatProfessional = 37,
    wdTableFormatSubtle1 = 38,
    wdTableFormatSubtle2 = 39,
    wdTableFormatWeb1 = 40,
    wdTableFormatWeb2 = 41,
    wdTableFormatWeb3 = 42
};

enum WdTableFormatApply
{
    wdTableFormatApplyBorders = 1,
    wdTableFormatApplyShading = 2,
    wdTableFormatApplyFont = 4,
    wdTableFormatApplyColor = 8,
    wdTableFormatApplyAutoFit = 16,
    wdTableFormatApplyHeadingRows = 32,
    wdTableFormatApplyLastRow = 64,
    wdTableFormatApplyFirstColumn = 128,
    wdTableFormatApplyLastColumn = 256
};

enum WdLanguageID
{
    wdLanguageNone = 0,
    wdNoProofing = 1024,
    wdAfrikaans = 1078,
    wdAlbanian = 1052,
    wdAmharic = 1118,
    wdArabicAlgeria = 5121,
    wdArabicBahrain = 15361,
    wdArabicEgypt = 3073,
    wdArabicIraq = 2049,
    wdArabicJordan = 11265,
    wdArabicKuwait = 13313,
    wdArabicLebanon = 12289,
    wdArabicLibya = 4097,
    wdArabicMorocco = 6145,
    wdArabicOman = 8193,
    wdArabicQatar = 16385,
    wdArabic = 1025,
    wdArabicSyria = 10241,
    wdArabicTunisia = 7169,
    wdArabicUAE = 14337,
    wdArabicYemen = 9217,
    wdArmenian = 1067,
    wdAssamese = 1101,
    wdAzeriCyrillic = 2092,
    wdAzeriLatin = 1068,
    wdBasque = 1069,
    wdByelorussian = 1059,
    wdBengali = 1093,
    wdBulgarian = 1026,
    wdBurmese = 1109,
    wdCatalan = 1027,
    wdCherokee = 1116,
    wdChineseHongKongSAR = 3076,
    wdChineseMacaoSAR = 5124,
    wdSimplifiedChinese = 2052,
    wdChineseSingapore = 4100,
    wdTraditionalChinese = 1028,
    wdCroatian = 1050,
    wdCzech = 1029,
    wdDanish = 1030,
    wdDivehi = 1125,
    wdBelgianDutch = 2067,
    wdDutch = 1043,
    wdEdo = 1126,
    wdEnglishAUS = 3081,
    wdEnglishBelize = 10249,
    wdEnglishCanadian = 4105,
    wdEnglishCaribbean = 9225,
    wdEnglishIreland = 6153,
    wdEnglishJamaica = 8201,
    wdEnglishNewZealand = 5129,
    wdEnglishPhilippines = 13321,
    wdEnglishSouthAfrica = 7177,
    wdEnglishTrinidadTobago = 11273,
    wdEnglishUK = 2057,
    wdEnglishUS = 1033,
    wdEnglishZimbabwe = 12297,
    wdEnglishIndonesia = 14345,
    wdEstonian = 1061,
    wdFaeroese = 1080,
    wdPersian = 1065,
    wdFilipino = 1124,
    wdFinnish = 1035,
    wdFulfulde = 1127,
    wdBelgianFrench = 2060,
    wdFrenchCameroon = 11276,
    wdFrenchCanadian = 3084,
    wdFrenchCotedIvoire = 12300,
    wdFrench = 1036,
    wdFrenchLuxembourg = 5132,
    wdFrenchMali = 13324,
    wdFrenchMonaco = 6156,
    wdFrenchReunion = 8204,
    wdFrenchSenegal = 10252,
    wdFrenchMorocco = 14348,
    wdFrenchHaiti = 15372,
    wdSwissFrench = 4108,
    wdFrenchWestIndies = 7180,
    wdFrenchCongoDRC = 9228,
    wdFrisianNetherlands = 1122,
    wdGaelicIreland = 2108,
    wdGaelicScotland = 1084,
    wdGalician = 1110,
    wdGeorgian = 1079,
    wdGermanAustria = 3079,
    wdGerman = 1031,
    wdGermanLiechtenstein = 5127,
    wdGermanLuxembourg = 4103,
    wdSwissGerman = 2055,
    wdGreek = 1032,
    wdGuarani = 1140,
    wdGujarati = 1095,
    wdHausa = 1128,
    wdHawaiian = 1141,
    wdHebrew = 1037,
    wdHindi = 1081,
    wdHungarian = 1038,
    wdIbibio = 1129,
    wdIcelandic = 1039,
    wdIgbo = 1136,
    wdIndonesian = 1057,
    wdInuktitut = 1117,
    wdItalian = 1040,
    wdSwissItalian = 2064,
    wdJapanese = 1041,
    wdKannada = 1099,
    wdKanuri = 1137,
    wdKashmiri = 1120,
    wdKazakh = 1087,
    wdKhmer = 1107,
    wdKirghiz = 1088,
    wdKonkani = 1111,
    wdKorean = 1042,
    wdKyrgyz = 1088,
    wdLao = 1108,
    wdLatin = 1142,
    wdLatvian = 1062,
    wdLithuanian = 1063,
    wdMacedonianFYROM = 1071,
    wdMalaysian = 1086,
    wdMalayBruneiDarussalam = 2110,
    wdMalayalam = 1100,
    wdMaltese = 1082,
    wdManipuri = 1112,
    wdMarathi = 1102,
    wdMongolian = 1104,
    wdNepali = 1121,
    wdNorwegianBokmol = 1044,
    wdNorwegianNynorsk = 2068,
    wdOriya = 1096,
    wdOromo = 1138,
    wdPashto = 1123,
    wdPolish = 1045,
    wdPortugueseBrazil = 1046,
    wdPortuguese = 2070,
    wdPunjabi = 1094,
    wdRhaetoRomanic = 1047,
    wdRomanianMoldova = 2072,
    wdRomanian = 1048,
    wdRussianMoldova = 2073,
    wdRussian = 1049,
    wdSamiLappish = 1083,
    wdSanskrit = 1103,
    wdSerbianCyrillic = 3098,
    wdSerbianLatin = 2074,
    wdSinhalese = 1115,
    wdSindhi = 1113,
    wdSindhiPakistan = 2137,
    wdSlovak = 1051,
    wdSlovenian = 1060,
    wdSomali = 1143,
    wdSorbian = 1070,
    wdSpanishArgentina = 11274,
    wdSpanishBolivia = 16394,
    wdSpanishChile = 13322,
    wdSpanishColombia = 9226,
    wdSpanishCostaRica = 5130,
    wdSpanishDominicanRepublic = 7178,
    wdSpanishEcuador = 12298,
    wdSpanishElSalvador = 17418,
    wdSpanishGuatemala = 4106,
    wdSpanishHonduras = 18442,
    wdMexicanSpanish = 2058,
    wdSpanishNicaragua = 19466,
    wdSpanishPanama = 6154,
    wdSpanishParaguay = 15370,
    wdSpanishPeru = 10250,
    wdSpanishPuertoRico = 20490,
    wdSpanishModernSort = 3082,
    wdSpanish = 1034,
    wdSpanishUruguay = 14346,
    wdSpanishVenezuela = 8202,
    wdSesotho = 1072,
    wdSutu = 1072,
    wdSwahili = 1089,
    wdSwedishFinland = 2077,
    wdSwedish = 1053,
    wdSyriac = 1114,
    wdTajik = 1064,
    wdTamazight = 1119,
    wdTamazightLatin = 2143,
    wdTamil = 1097,
    wdTatar = 1092,
    wdTelugu = 1098,
    wdThai = 1054,
    wdTibetan = 1105,
    wdTigrignaEthiopic = 1139,
    wdTigrignaEritrea = 2163,
    wdTsonga = 1073,
    wdTswana = 1074,
    wdTurkish = 1055,
    wdTurkmen = 1090,
    wdUkrainian = 1058,
    wdUrdu = 1056,
    wdUzbekCyrillic = 2115,
    wdUzbekLatin = 1091,
    wdVenda = 1075,
    wdVietnamese = 1066,
    wdWelsh = 1106,
    wdXhosa = 1076,
    wdYi = 1144,
    wdYiddish = 1085,
    wdYoruba = 1130,
    wdZulu = 1077
};

enum WdFieldType
{
    wdFieldEmpty = -1,
    wdFieldRef = 3,
    wdFieldIndexEntry = 4,
    wdFieldFootnoteRef = 5,
    wdFieldSet = 6,
    wdFieldIf = 7,
    wdFieldIndex = 8,
    wdFieldTOCEntry = 9,
    wdFieldStyleRef = 10,
    wdFieldRefDoc = 11,
    wdFieldSequence = 12,
    wdFieldTOC = 13,
    wdFieldInfo = 14,
    wdFieldTitle = 15,
    wdFieldSubject = 16,
    wdFieldAuthor = 17,
    wdFieldKeyWord = 18,
    wdFieldComments = 19,
    wdFieldLastSavedBy = 20,
    wdFieldCreateDate = 21,
    wdFieldSaveDate = 22,
    wdFieldPrintDate = 23,
    wdFieldRevisionNum = 24,
    wdFieldEditTime = 25,
    wdFieldNumPages = 26,
    wdFieldNumWords = 27,
    wdFieldNumChars = 28,
    wdFieldFileName = 29,
    wdFieldTemplate = 30,
    wdFieldDate = 31,
    wdFieldTime = 32,
    wdFieldPage = 33,
    wdFieldExpression = 34,
    wdFieldQuote = 35,
    wdFieldInclude = 36,
    wdFieldPageRef = 37,
    wdFieldAsk = 38,
    wdFieldFillIn = 39,
    wdFieldData = 40,
    wdFieldNext = 41,
    wdFieldNextIf = 42,
    wdFieldSkipIf = 43,
    wdFieldMergeRec = 44,
    wdFieldDDE = 45,
    wdFieldDDEAuto = 46,
    wdFieldGlossary = 47,
    wdFieldPrint = 48,
    wdFieldFormula = 49,
    wdFieldGoToButton = 50,
    wdFieldMacroButton = 51,
    wdFieldAutoNumOutline = 52,
    wdFieldAutoNumLegal = 53,
    wdFieldAutoNum = 54,
    wdFieldImport = 55,
    wdFieldLink = 56,
    wdFieldSymbol = 57,
    wdFieldEmbed = 58,
    wdFieldMergeField = 59,
    wdFieldUserName = 60,
    wdFieldUserInitials = 61,
    wdFieldUserAddress = 62,
    wdFieldBarCode = 63,
    wdFieldDocVariable = 64,
    wdFieldSection = 65,
    wdFieldSectionPages = 66,
    wdFieldIncludePicture = 67,
    wdFieldIncludeText = 68,
    wdFieldFileSize = 69,
    wdFieldFormTextInput = 70,
    wdFieldFormCheckBox = 71,
    wdFieldNoteRef = 72,
    wdFieldTOA = 73,
    wdFieldTOAEntry = 74,
    wdFieldMergeSeq = 75,
    wdFieldPrivate = 77,
    wdFieldDatabase = 78,
    wdFieldAutoText = 79,
    wdFieldCompare = 80,
    wdFieldAddin = 81,
    wdFieldSubscriber = 82,
    wdFieldFormDropDown = 83,
    wdFieldAdvance = 84,
    wdFieldDocProperty = 85,
    wdFieldOCX = 87,
    wdFieldHyperlink = 88,
    wdFieldAutoTextList = 89,
    wdFieldListNum = 90,
    wdFieldHTMLActiveX = 91,
    wdFieldBidiOutline = 92,
    wdFieldAddressBlock = 93,
    wdFieldGreetingLine = 94,
    wdFieldShape = 95,
    wdFieldCitation = 96,
    wdFieldBibliography = 97
};

enum WdBuiltinStyle
{
    wdStyleNormal = -1,
    wdStyleEnvelopeAddress = -37,
    wdStyleEnvelopeReturn = -38,
    wdStyleBodyText = -67,
    wdStyleHeading1 = -2,
    wdStyleHeading2 = -3,
    wdStyleHeading3 = -4,
    wdStyleHeading4 = -5,
    wdStyleHeading5 = -6,
    wdStyleHeading6 = -7,
    wdStyleHeading7 = -8,
    wdStyleHeading8 = -9,
    wdStyleHeading9 = -10,
    wdStyleIndex1 = -11,
    wdStyleIndex2 = -12,
    wdStyleIndex3 = -13,
    wdStyleIndex4 = -14,
    wdStyleIndex5 = -15,
    wdStyleIndex6 = -16,
    wdStyleIndex7 = -17,
    wdStyleIndex8 = -18,
    wdStyleIndex9 = -19,
    wdStyleTOC1 = -20,
    wdStyleTOC2 = -21,
    wdStyleTOC3 = -22,
    wdStyleTOC4 = -23,
    wdStyleTOC5 = -24,
    wdStyleTOC6 = -25,
    wdStyleTOC7 = -26,
    wdStyleTOC8 = -27,
    wdStyleTOC9 = -28,
    wdStyleNormalIndent = -29,
    wdStyleFootnoteText = -30,
    wdStyleCommentText = -31,
    wdStyleHeader = -32,
    wdStyleFooter = -33,
    wdStyleIndexHeading = -34,
    wdStyleCaption = -35,
    wdStyleTableOfFigures = -36,
    wdStyleFootnoteReference = -39,
    wdStyleCommentReference = -40,
    wdStyleLineNumber = -41,
    wdStylePageNumber = -42,
    wdStyleEndnoteReference = -43,
    wdStyleEndnoteText = -44,
    wdStyleTableOfAuthorities = -45,
    wdStyleMacroText = -46,
    wdStyleTOAHeading = -47,
    wdStyleList = -48,
    wdStyleListBullet = -49,
    wdStyleListNumber = -50,
    wdStyleList2 = -51,
    wdStyleList3 = -52,
    wdStyleList4 = -53,
    wdStyleList5 = -54,
    wdStyleListBullet2 = -55,
    wdStyleListBullet3 = -56,
    wdStyleListBullet4 = -57,
    wdStyleListBullet5 = -58,
    wdStyleListNumber2 = -59,
    wdStyleListNumber3 = -60,
    wdStyleListNumber4 = -61,
    wdStyleListNumber5 = -62,
    wdStyleTitle = -63,
    wdStyleClosing = -64,
    wdStyleSignature = -65,
    wdStyleDefaultParagraphFont = -66,
    wdStyleBodyTextIndent = -68,
    wdStyleListContinue = -69,
    wdStyleListContinue2 = -70,
    wdStyleListContinue3 = -71,
    wdStyleListContinue4 = -72,
    wdStyleListContinue5 = -73,
    wdStyleMessageHeader = -74,
    wdStyleSubtitle = -75,
    wdStyleSalutation = -76,
    wdStyleDate = -77,
    wdStyleBodyTextFirstIndent = -78,
    wdStyleBodyTextFirstIndent2 = -79,
    wdStyleNoteHeading = -80,
    wdStyleBodyText2 = -81,
    wdStyleBodyText3 = -82,
    wdStyleBodyTextIndent2 = -83,
    wdStyleBodyTextIndent3 = -84,
    wdStyleBlockQuotation = -85,
    wdStyleHyperlink = -86,
    wdStyleHyperlinkFollowed = -87,
    wdStyleStrong = -88,
    wdStyleEmphasis = -89,
    wdStyleNavPane = -90,
    wdStylePlainText = -91,
    wdStyleHtmlNormal = -95,
    wdStyleHtmlAcronym = -96,
    wdStyleHtmlAddress = -97,
    wdStyleHtmlCite = -98,
    wdStyleHtmlCode = -99,
    wdStyleHtmlDfn = -100,
    wdStyleHtmlKbd = -101,
    wdStyleHtmlPre = -102,
    wdStyleHtmlSamp = -103,
    wdStyleHtmlTt = -104,
    wdStyleHtmlVar = -105,
    wdStyleNormalTable = -106,
    wdStyleNormalObject = -158,
    wdStyleTableLightShading = -159,
    wdStyleTableLightList = -160,
    wdStyleTableLightGrid = -161,
    wdStyleTableMediumShading1 = -162,
    wdStyleTableMediumShading2 = -163,
    wdStyleTableMediumList1 = -164,
    wdStyleTableMediumList2 = -165,
    wdStyleTableMediumGrid1 = -166,
    wdStyleTableMediumGrid2 = -167,
    wdStyleTableMediumGrid3 = -168,
    wdStyleTableDarkList = -169,
    wdStyleTableColorfulShading = -170,
    wdStyleTableColorfulList = -171,
    wdStyleTableColorfulGrid = -172,
    wdStyleTableLightShadingAccent1 = -173,
    wdStyleTableLightListAccent1 = -174,
    wdStyleTableLightGridAccent1 = -175,
    wdStyleTableMediumShading1Accent1 = -176,
    wdStyleTableMediumShading2Accent1 = -177,
    wdStyleTableMediumList1Accent1 = -178,
    wdStyleListParagraph = -180,
    wdStyleQuote = -181,
    wdStyleIntenseQuote = -182,
    wdStyleSubtleEmphasis = -261,
    wdStyleIntenseEmphasis = -262,
    wdStyleSubtleReference = -263,
    wdStyleIntenseReference = -264,
    wdStyleBookTitle = -265,
    wdStyleBibliography = -266,
    wdStyleTocHeading = -267
};

enum WdWordDialogTab
{
    wdDialogToolsOptionsTabView = 204,
    wdDialogToolsOptionsTabGeneral = 203,
    wdDialogToolsOptionsTabEdit = 224,
    wdDialogToolsOptionsTabPrint = 208,
    wdDialogToolsOptionsTabSave = 209,
    wdDialogToolsOptionsTabProofread = 211,
    wdDialogToolsOptionsTabTrackChanges = 386,
    wdDialogToolsOptionsTabUserInfo = 213,
    wdDialogToolsOptionsTabCompatibility = 525,
    wdDialogToolsOptionsTabTypography = 739,
    wdDialogToolsOptionsTabFileLocations = 225,
    wdDialogToolsOptionsTabFuzzy = 790,
    wdDialogToolsOptionsTabHangulHanjaConversion = 786,
    wdDialogToolsOptionsTabBidi = 1029,
    wdDialogToolsOptionsTabSecurity = 1361,
    wdDialogFilePageSetupTabMargins = 150000,
    wdDialogFilePageSetupTabPaper = 150001,
    wdDialogFilePageSetupTabLayout = 150003,
    wdDialogFilePageSetupTabCharsLines = 150004,
    wdDialogInsertSymbolTabSymbols = 200000,
    wdDialogInsertSymbolTabSpecialCharacters = 200001,
    wdDialogNoteOptionsTabAllFootnotes = 300000,
    wdDialogNoteOptionsTabAllEndnotes = 300001,
    wdDialogInsertIndexAndTablesTabIndex = 400000,
    wdDialogInsertIndexAndTablesTabTableOfContents = 400001,
    wdDialogInsertIndexAndTablesTabTableOfFigures = 400002,
    wdDialogInsertIndexAndTablesTabTableOfAuthorities = 400003,
    wdDialogOrganizerTabStyles = 500000,
    wdDialogOrganizerTabAutoText = 500001,
    wdDialogOrganizerTabCommandBars = 500002,
    wdDialogOrganizerTabMacros = 500003,
    wdDialogFormatFontTabFont = 600000,
    wdDialogFormatFontTabCharacterSpacing = 600001,
    wdDialogFormatFontTabAnimation = 600002,
    wdDialogFormatBordersAndShadingTabBorders = 700000,
    wdDialogFormatBordersAndShadingTabPageBorder = 700001,
    wdDialogFormatBordersAndShadingTabShading = 700002,
    wdDialogToolsEnvelopesAndLabelsTabEnvelopes = 800000,
    wdDialogToolsEnvelopesAndLabelsTabLabels = 800001,
    wdDialogFormatParagraphTabIndentsAndSpacing = 1000000,
    wdDialogFormatParagraphTabTextFlow = 1000001,
    wdDialogFormatParagraphTabTeisai = 1000002,
    wdDialogFormatDrawingObjectTabColorsAndLines = 1200000,
    wdDialogFormatDrawingObjectTabSize = 1200001,
    wdDialogFormatDrawingObjectTabPosition = 1200002,
    wdDialogFormatDrawingObjectTabWrapping = 1200003,
    wdDialogFormatDrawingObjectTabPicture = 1200004,
    wdDialogFormatDrawingObjectTabTextbox = 1200005,
    wdDialogFormatDrawingObjectTabWeb = 1200006,
    wdDialogFormatDrawingObjectTabHR = 1200007,
    wdDialogToolsAutoCorrectExceptionsTabFirstLetter = 1400000,
    wdDialogToolsAutoCorrectExceptionsTabInitialCaps = 1400001,
    wdDialogToolsAutoCorrectExceptionsTabHangulAndAlphabet = 1400002,
    wdDialogToolsAutoCorrectExceptionsTabIac = 1400003,
    wdDialogFormatBulletsAndNumberingTabBulleted = 1500000,
    wdDialogFormatBulletsAndNumberingTabNumbered = 1500001,
    wdDialogFormatBulletsAndNumberingTabOutlineNumbered = 1500002,
    wdDialogLetterWizardTabLetterFormat = 1600000,
    wdDialogLetterWizardTabRecipientInfo = 1600001,
    wdDialogLetterWizardTabOtherElements = 1600002,
    wdDialogLetterWizardTabSenderInfo = 1600003,
    wdDialogToolsAutoManagerTabAutoCorrect = 1700000,
    wdDialogToolsAutoManagerTabAutoFormatAsYouType = 1700001,
    wdDialogToolsAutoManagerTabAutoText = 1700002,
    wdDialogToolsAutoManagerTabAutoFormat = 1700003,
    wdDialogToolsAutoManagerTabSmartTags = 1700004,
    wdDialogTablePropertiesTabTable = 1800000,
    wdDialogTablePropertiesTabRow = 1800001,
    wdDialogTablePropertiesTabColumn = 1800002,
    wdDialogTablePropertiesTabCell = 1800003,
    wdDialogEmailOptionsTabSignature = 1900000,
    wdDialogEmailOptionsTabStationary = 1900001,
    wdDialogEmailOptionsTabQuoting = 1900002,
    wdDialogWebOptionsBrowsers = 2000000,
    wdDialogWebOptionsGeneral = 2000000,
    wdDialogWebOptionsFiles = 2000001,
    wdDialogWebOptionsPictures = 2000002,
    wdDialogWebOptionsEncoding = 2000003,
    wdDialogWebOptionsFonts = 2000004,
    wdDialogToolsOptionsTabAcetate = 1266,
    wdDialogTemplates = 2100000,
    wdDialogTemplatesXMLSchema = 2100001,
    wdDialogTemplatesXMLExpansionPacks = 2100002,
    wdDialogTemplatesLinkedCSS = 2100003,
    wdDialogStyleManagementTabEdit = 2200000,
    wdDialogStyleManagementTabRecommend = 2200001,
    wdDialogStyleManagementTabRestrict = 2200002
};

enum WdWordDialogTabHID
{
    wdDialogFilePageSetupTabPaperSize = 150001,
    wdDialogFilePageSetupTabPaperSource = 150002
};

enum WdWordDialog
{
    wdDialogHelpAbout = 9,
    wdDialogHelpWordPerfectHelp = 10,
    wdDialogDocumentStatistics = 78,
    wdDialogFileNew = 79,
    wdDialogFileOpen = 80,
    wdDialogMailMergeOpenDataSource = 81,
    wdDialogMailMergeOpenHeaderSource = 82,
    wdDialogFileSaveAs = 84,
    wdDialogFileSummaryInfo = 86,
    wdDialogToolsTemplates = 87,
    wdDialogFilePrint = 88,
    wdDialogFilePrintSetup = 97,
    wdDialogFileFind = 99,
    wdDialogFormatAddrFonts = 103,
    wdDialogEditPasteSpecial = 111,
    wdDialogEditFind = 112,
    wdDialogEditReplace = 117,
    wdDialogEditStyle = 120,
    wdDialogEditLinks = 124,
    wdDialogEditObject = 125,
    wdDialogTableToText = 128,
    wdDialogTextToTable = 127,
    wdDialogTableInsertTable = 129,
    wdDialogTableInsertCells = 130,
    wdDialogTableInsertRow = 131,
    wdDialogTableDeleteCells = 133,
    wdDialogTableSplitCells = 137,
    wdDialogTableRowHeight = 142,
    wdDialogTableColumnWidth = 143,
    wdDialogToolsCustomize = 152,
    wdDialogInsertBreak = 159,
    wdDialogInsertSymbol = 162,
    wdDialogInsertPicture = 163,
    wdDialogInsertFile = 164,
    wdDialogInsertDateTime = 165,
    wdDialogInsertField = 166,
    wdDialogInsertMergeField = 167,
    wdDialogInsertBookmark = 168,
    wdDialogMarkIndexEntry = 169,
    wdDialogInsertIndex = 170,
    wdDialogInsertTableOfContents = 171,
    wdDialogInsertObject = 172,
    wdDialogToolsCreateEnvelope = 173,
    wdDialogFormatFont = 174,
    wdDialogFormatParagraph = 175,
    wdDialogFormatSectionLayout = 176,
    wdDialogFormatColumns = 177,
    wdDialogFileDocumentLayout = 178,
    wdDialogFilePageSetup = 178,
    wdDialogFormatTabs = 179,
    wdDialogFormatStyle = 180,
    wdDialogFormatDefineStyleFont = 181,
    wdDialogFormatDefineStylePara = 182,
    wdDialogFormatDefineStyleTabs = 183,
    wdDialogFormatDefineStyleFrame = 184,
    wdDialogFormatDefineStyleBorders = 185,
    wdDialogFormatDefineStyleLang = 186,
    wdDialogFormatPicture = 187,
    wdDialogToolsLanguage = 188,
    wdDialogFormatBordersAndShading = 189,
    wdDialogFormatFrame = 190,
    wdDialogToolsThesaurus = 194,
    wdDialogToolsHyphenation = 195,
    wdDialogToolsBulletsNumbers = 196,
    wdDialogToolsHighlightChanges = 197,
    wdDialogToolsRevisions = 197,
    wdDialogToolsCompareDocuments = 198,
    wdDialogTableSort = 199,
    wdDialogToolsOptionsGeneral = 203,
    wdDialogToolsOptionsView = 204,
    wdDialogToolsAdvancedSettings = 206,
    wdDialogToolsOptionsPrint = 208,
    wdDialogToolsOptionsSave = 209,
    wdDialogToolsOptionsSpellingAndGrammar = 211,
    wdDialogToolsOptionsUserInfo = 213,
    wdDialogToolsMacroRecord = 214,
    wdDialogToolsMacro = 215,
    wdDialogWindowActivate = 220,
    wdDialogFormatRetAddrFonts = 221,
    wdDialogOrganizer = 222,
    wdDialogToolsOptionsEdit = 224,
    wdDialogToolsOptionsFileLocations = 225,
    wdDialogToolsWordCount = 228,
    wdDialogControlRun = 235,
    wdDialogInsertPageNumbers = 294,
    wdDialogFormatPageNumber = 298,
    wdDialogCopyFile = 300,
    wdDialogFormatChangeCase = 322,
    wdDialogUpdateTOC = 331,
    wdDialogInsertDatabase = 341,
    wdDialogTableFormula = 348,
    wdDialogFormFieldOptions = 353,
    wdDialogInsertCaption = 357,
    wdDialogInsertCaptionNumbering = 358,
    wdDialogInsertAutoCaption = 359,
    wdDialogFormFieldHelp = 361,
    wdDialogInsertCrossReference = 367,
    wdDialogInsertFootnote = 370,
    wdDialogNoteOptions = 373,
    wdDialogToolsAutoCorrect = 378,
    wdDialogToolsOptionsTrackChanges = 386,
    wdDialogConvertObject = 392,
    wdDialogInsertAddCaption = 402,
    wdDialogConnect = 420,
    wdDialogToolsCustomizeKeyboard = 432,
    wdDialogToolsCustomizeMenus = 433,
    wdDialogToolsMergeDocuments = 435,
    wdDialogMarkTableOfContentsEntry = 442,
    wdDialogFileMacPageSetupGX = 444,
    wdDialogFilePrintOneCopy = 445,
    wdDialogEditFrame = 458,
    wdDialogMarkCitation = 463,
    wdDialogTableOfContentsOptions = 470,
    wdDialogInsertTableOfAuthorities = 471,
    wdDialogInsertTableOfFigures = 472,
    wdDialogInsertIndexAndTables = 473,
    wdDialogInsertFormField = 483,
    wdDialogFormatDropCap = 488,
    wdDialogToolsCreateLabels = 489,
    wdDialogToolsProtectDocument = 503,
    wdDialogFormatStyleGallery = 505,
    wdDialogToolsAcceptRejectChanges = 506,
    wdDialogHelpWordPerfectHelpOptions = 511,
    wdDialogToolsUnprotectDocument = 521,
    wdDialogToolsOptionsCompatibility = 525,
    wdDialogTableOfCaptionsOptions = 551,
    wdDialogTableAutoFormat = 563,
    wdDialogMailMergeFindRecord = 569,
    wdDialogReviewAfmtRevisions = 570,
    wdDialogViewZoom = 577,
    wdDialogToolsProtectSection = 578,
    wdDialogFontSubstitution = 581,
    wdDialogInsertSubdocument = 583,
    wdDialogNewToolbar = 586,
    wdDialogToolsEnvelopesAndLabels = 607,
    wdDialogFormatCallout = 610,
    wdDialogTableFormatCell = 612,
    wdDialogToolsCustomizeMenuBar = 615,
    wdDialogFileRoutingSlip = 624,
    wdDialogEditTOACategory = 625,
    wdDialogToolsManageFields = 631,
    wdDialogDrawSnapToGrid = 633,
    wdDialogDrawAlign = 634,
    wdDialogMailMergeCreateDataSource = 642,
    wdDialogMailMergeCreateHeaderSource = 643,
    wdDialogMailMerge = 676,
    wdDialogMailMergeCheck = 677,
    wdDialogMailMergeHelper = 680,
    wdDialogMailMergeQueryOptions = 681,
    wdDialogFileMacPageSetup = 685,
    wdDialogListCommands = 723,
    wdDialogEditCreatePublisher = 732,
    wdDialogEditSubscribeTo = 733,
    wdDialogEditPublishOptions = 735,
    wdDialogEditSubscribeOptions = 736,
    wdDialogFileMacCustomPageSetupGX = 737,
    wdDialogToolsOptionsTypography = 739,
    wdDialogToolsAutoCorrectExceptions = 762,
    wdDialogToolsOptionsAutoFormatAsYouType = 778,
    wdDialogMailMergeUseAddressBook = 779,
    wdDialogToolsHangulHanjaConversion = 784,
    wdDialogToolsOptionsFuzzy = 790,
    wdDialogEditGoToOld = 811,
    wdDialogInsertNumber = 812,
    wdDialogLetterWizard = 821,
    wdDialogFormatBulletsAndNumbering = 824,
    wdDialogToolsSpellingAndGrammar = 828,
    wdDialogToolsCreateDirectory = 833,
    wdDialogTableWrapping = 854,
    wdDialogFormatTheme = 855,
    wdDialogTableProperties = 861,
    wdDialogEmailOptions = 863,
    wdDialogCreateAutoText = 872,
    wdDialogToolsAutoSummarize = 874,
    wdDialogToolsGrammarSettings = 885,
    wdDialogEditGoTo = 896,
    wdDialogWebOptions = 898,
    wdDialogInsertHyperlink = 925,
    wdDialogToolsAutoManager = 915,
    wdDialogFileVersions = 945,
    wdDialogToolsOptionsAutoFormat = 959,
    wdDialogFormatDrawingObject = 960,
    wdDialogToolsOptions = 974,
    wdDialogFitText = 983,
    wdDialogEditAutoText = 985,
    wdDialogPhoneticGuide = 986,
    wdDialogToolsDictionary = 989,
    wdDialogFileSaveVersion = 1007,
    wdDialogToolsOptionsBidi = 1029,
    wdDialogFrameSetProperties = 1074,
    wdDialogTableTableOptions = 1080,
    wdDialogTableCellOptions = 1081,
    wdDialogIMESetDefault = 1094,
    wdDialogTCSCTranslator = 1156,
    wdDialogHorizontalInVertical = 1160,
    wdDialogTwoLinesInOne = 1161,
    wdDialogFormatEncloseCharacters = 1162,
    wdDialogConsistencyChecker = 1121,
    wdDialogToolsOptionsSmartTag = 1395,
    wdDialogFormatStylesCustom = 1248,
    wdDialogCSSLinks = 1261,
    wdDialogInsertWebComponent = 1324,
    wdDialogToolsOptionsEditCopyPaste = 1356,
    wdDialogToolsOptionsSecurity = 1361,
    wdDialogSearch = 1363,
    wdDialogShowRepairs = 1381,
    wdDialogMailMergeInsertAsk = 4047,
    wdDialogMailMergeInsertFillIn = 4048,
    wdDialogMailMergeInsertIf = 4049,
    wdDialogMailMergeInsertNextIf = 4053,
    wdDialogMailMergeInsertSet = 4054,
    wdDialogMailMergeInsertSkipIf = 4055,
    wdDialogMailMergeFieldMapping = 1304,
    wdDialogMailMergeInsertAddressBlock = 1305,
    wdDialogMailMergeInsertGreetingLine = 1306,
    wdDialogMailMergeInsertFields = 1307,
    wdDialogMailMergeRecipients = 1308,
    wdDialogMailMergeFindRecipient = 1326,
    wdDialogMailMergeSetDocumentType = 1339,
    wdDialogLabelOptions = 1367,
    wdDialogXMLElementAttributes = 1460,
    wdDialogSchemaLibrary = 1417,
    wdDialogPermission = 1469,
    wdDialogMyPermission = 1437,
    wdDialogXMLOptions = 1425,
    wdDialogFormattingRestrictions = 1427,
    wdDialogSourceManager = 1920,
    wdDialogCreateSource = 1922,
    wdDialogDocumentInspector = 1482,
    wdDialogStyleManagement = 1948,
    wdDialogInsertSource = 2120,
    wdDialogOMathRecognizedFunctions = 2165,
    wdDialogInsertPlaceholder = 2348,
    wdDialogBuildingBlockOrganizer = 2067,
    wdDialogContentControlProperties = 2394,
    wdDialogCompatibilityChecker = 2439,
    wdDialogExportAsFixedFormat = 2349
};

enum WdWordDialogHID
{
//  emptyenum = 0
};

enum WdFieldKind
{
    wdFieldKindNone = 0,
    wdFieldKindHot = 1,
    wdFieldKindWarm = 2,
    wdFieldKindCold = 3
};

enum WdTextFormFieldType
{
    wdRegularText = 0,
    wdNumberText = 1,
    wdDateText = 2,
    wdCurrentDateText = 3,
    wdCurrentTimeText = 4,
    wdCalculationText = 5
};

enum WdChevronConvertRule
{
    wdNeverConvert = 0,
    wdAlwaysConvert = 1,
    wdAskToNotConvert = 2,
    wdAskToConvert = 3
};

enum WdMailMergeMainDocType
{
    wdNotAMergeDocument = -1,
    wdFormLetters = 0,
    wdMailingLabels = 1,
    wdEnvelopes = 2,
    wdCatalog = 3,
    wdEMail = 4,
    wdFax = 5,
    wdDirectory = 3
};

enum WdMailMergeState
{
    wdNormalDocument = 0,
    wdMainDocumentOnly = 1,
    wdMainAndDataSource = 2,
    wdMainAndHeader = 3,
    wdMainAndSourceAndHeader = 4,
    wdDataSource = 5
};

enum WdMailMergeDestination
{
    wdSendToNewDocument = 0,
    wdSendToPrinter = 1,
    wdSendToEmail = 2,
    wdSendToFax = 3
};

enum WdMailMergeActiveRecord
{
    wdNoActiveRecord = -1,
    wdNextRecord = -2,
    wdPreviousRecord = -3,
    wdFirstRecord = -4,
    wdLastRecord = -5,
    wdFirstDataSourceRecord = -6,
    wdLastDataSourceRecord = -7,
    wdNextDataSourceRecord = -8,
    wdPreviousDataSourceRecord = -9
};

enum WdMailMergeDefaultRecord
{
    wdDefaultFirstRecord = 1,
    wdDefaultLastRecord = -16
};

enum WdMailMergeDataSource
{
    wdNoMergeInfo = -1,
    wdMergeInfoFromWord = 0,
    wdMergeInfoFromAccessDDE = 1,
    wdMergeInfoFromExcelDDE = 2,
    wdMergeInfoFromMSQueryDDE = 3,
    wdMergeInfoFromODBC = 4,
    wdMergeInfoFromODSO = 5
};

enum WdMailMergeComparison
{
    wdMergeIfEqual = 0,
    wdMergeIfNotEqual = 1,
    wdMergeIfLessThan = 2,
    wdMergeIfGreaterThan = 3,
    wdMergeIfLessThanOrEqual = 4,
    wdMergeIfGreaterThanOrEqual = 5,
    wdMergeIfIsBlank = 6,
    wdMergeIfIsNotBlank = 7
};

enum WdBookmarkSortBy
{
    wdSortByName = 0,
    wdSortByLocation = 1
};

enum WdWindowState
{
    wdWindowStateNormal = 0,
    wdWindowStateMaximize = 1,
    wdWindowStateMinimize = 2
};

enum WdPictureLinkType
{
    wdLinkNone = 0,
    wdLinkDataInDoc = 1,
    wdLinkDataOnDisk = 2
};

enum WdLinkType
{
    wdLinkTypeOLE = 0,
    wdLinkTypePicture = 1,
    wdLinkTypeText = 2,
    wdLinkTypeReference = 3,
    wdLinkTypeInclude = 4,
    wdLinkTypeImport = 5,
    wdLinkTypeDDE = 6,
    wdLinkTypeDDEAuto = 7,
    wdLinkTypeChart = 8
};

enum WdWindowType
{
    wdWindowDocument = 0,
    wdWindowTemplate = 1
};

enum WdViewType
{
    wdNormalView = 1,
    wdOutlineView = 2,
    wdPrintView = 3,
    wdPrintPreview = 4,
    wdMasterView = 5,
    wdWebView = 6,
    wdReadingView = 7
};

enum WdSeekView
{
    wdSeekMainDocument = 0,
    wdSeekPrimaryHeader = 1,
    wdSeekFirstPageHeader = 2,
    wdSeekEvenPagesHeader = 3,
    wdSeekPrimaryFooter = 4,
    wdSeekFirstPageFooter = 5,
    wdSeekEvenPagesFooter = 6,
    wdSeekFootnotes = 7,
    wdSeekEndnotes = 8,
    wdSeekCurrentPageHeader = 9,
    wdSeekCurrentPageFooter = 10
};

enum WdSpecialPane
{
    wdPaneNone = 0,
    wdPanePrimaryHeader = 1,
    wdPaneFirstPageHeader = 2,
    wdPaneEvenPagesHeader = 3,
    wdPanePrimaryFooter = 4,
    wdPaneFirstPageFooter = 5,
    wdPaneEvenPagesFooter = 6,
    wdPaneFootnotes = 7,
    wdPaneEndnotes = 8,
    wdPaneFootnoteContinuationNotice = 9,
    wdPaneFootnoteContinuationSeparator = 10,
    wdPaneFootnoteSeparator = 11,
    wdPaneEndnoteContinuationNotice = 12,
    wdPaneEndnoteContinuationSeparator = 13,
    wdPaneEndnoteSeparator = 14,
    wdPaneComments = 15,
    wdPaneCurrentPageHeader = 16,
    wdPaneCurrentPageFooter = 17,
    wdPaneRevisions = 18,
    wdPaneRevisionsHoriz = 19,
    wdPaneRevisionsVert = 20
};

enum WdPageFit
{
    wdPageFitNone = 0,
    wdPageFitFullPage = 1,
    wdPageFitBestFit = 2,
    wdPageFitTextFit = 3
};

enum WdBrowseTarget
{
    wdBrowsePage = 1,
    wdBrowseSection = 2,
    wdBrowseComment = 3,
    wdBrowseFootnote = 4,
    wdBrowseEndnote = 5,
    wdBrowseField = 6,
    wdBrowseTable = 7,
    wdBrowseGraphic = 8,
    wdBrowseHeading = 9,
    wdBrowseEdit = 10,
    wdBrowseFind = 11,
    wdBrowseGoTo = 12
};

enum WdPaperTray
{
    wdPrinterDefaultBin = 0,
    wdPrinterUpperBin = 1,
    wdPrinterOnlyBin = 1,
    wdPrinterLowerBin = 2,
    wdPrinterMiddleBin = 3,
    wdPrinterManualFeed = 4,
    wdPrinterEnvelopeFeed = 5,
    wdPrinterManualEnvelopeFeed = 6,
    wdPrinterAutomaticSheetFeed = 7,
    wdPrinterTractorFeed = 8,
    wdPrinterSmallFormatBin = 9,
    wdPrinterLargeFormatBin = 10,
    wdPrinterLargeCapacityBin = 11,
    wdPrinterPaperCassette = 14,
    wdPrinterFormSource = 15
};

enum WdOrientation
{
    wdOrientPortrait = 0,
    wdOrientLandscape = 1
};

enum WdSelectionType
{
    wdNoSelection = 0,
    wdSelectionIP = 1,
    wdSelectionNormal = 2,
    wdSelectionFrame = 3,
    wdSelectionColumn = 4,
    wdSelectionRow = 5,
    wdSelectionBlock = 6,
    wdSelectionInlineShape = 7,
    wdSelectionShape = 8
};

enum WdCaptionLabelID
{
    wdCaptionFigure = -1,
    wdCaptionTable = -2,
    wdCaptionEquation = -3
};

enum WdReferenceType
{
    wdRefTypeNumberedItem = 0,
    wdRefTypeHeading = 1,
    wdRefTypeBookmark = 2,
    wdRefTypeFootnote = 3,
    wdRefTypeEndnote = 4
};

enum WdReferenceKind
{
    wdContentText = -1,
    wdNumberRelativeContext = -2,
    wdNumberNoContext = -3,
    wdNumberFullContext = -4,
    wdEntireCaption = 2,
    wdOnlyLabelAndNumber = 3,
    wdOnlyCaptionText = 4,
    wdFootnoteNumber = 5,
    wdEndnoteNumber = 6,
    wdPageNumber = 7,
    wdPosition = 15,
    wdFootnoteNumberFormatted = 16,
    wdEndnoteNumberFormatted = 17
};

enum WdIndexFormat
{
    wdIndexTemplate = 0,
    wdIndexClassic = 1,
    wdIndexFancy = 2,
    wdIndexModern = 3,
    wdIndexBulleted = 4,
    wdIndexFormal = 5,
    wdIndexSimple = 6
};

enum WdIndexType
{
    wdIndexIndent = 0,
    wdIndexRunin = 1
};

enum WdRevisionsWrap
{
    wdWrapNever = 0,
    wdWrapAlways = 1,
    wdWrapAsk = 2
};

enum WdRevisionType
{
    wdNoRevision = 0,
    wdRevisionInsert = 1,
    wdRevisionDelete = 2,
    wdRevisionProperty = 3,
    wdRevisionParagraphNumber = 4,
    wdRevisionDisplayField = 5,
    wdRevisionReconcile = 6,
    wdRevisionConflict = 7,
    wdRevisionStyle = 8,
    wdRevisionReplace = 9,
    wdRevisionParagraphProperty = 10,
    wdRevisionTableProperty = 11,
    wdRevisionSectionProperty = 12,
    wdRevisionStyleDefinition = 13,
    wdRevisionMovedFrom = 14,
    wdRevisionMovedTo = 15,
    wdRevisionCellInsertion = 16,
    wdRevisionCellDeletion = 17,
    wdRevisionCellMerge = 18
};

enum WdRoutingSlipDelivery
{
    wdOneAfterAnother = 0,
    wdAllAtOnce = 1
};

enum WdRoutingSlipStatus
{
    wdNotYetRouted = 0,
    wdRouteInProgress = 1,
    wdRouteComplete = 2
};

enum WdSectionStart
{
    wdSectionContinuous = 0,
    wdSectionNewColumn = 1,
    wdSectionNewPage = 2,
    wdSectionEvenPage = 3,
    wdSectionOddPage = 4
};

enum WdSaveOptions
{
    wdDoNotSaveChanges = 0,
    wdSaveChanges = -1,
    wdPromptToSaveChanges = -2
};

enum WdDocumentKind
{
    wdDocumentNotSpecified = 0,
    wdDocumentLetter = 1,
    wdDocumentEmail = 2
};

enum WdDocumentType
{
    wdTypeDocument = 0,
    wdTypeTemplate = 1,
    wdTypeFrameset = 2
};

enum WdOriginalFormat
{
    wdWordDocument = 0,
    wdOriginalDocumentFormat = 1,
    wdPromptUser = 2
};

enum WdRelocate
{
    wdRelocateUp = 0,
    wdRelocateDown = 1
};

enum WdInsertedTextMark
{
    wdInsertedTextMarkNone = 0,
    wdInsertedTextMarkBold = 1,
    wdInsertedTextMarkItalic = 2,
    wdInsertedTextMarkUnderline = 3,
    wdInsertedTextMarkDoubleUnderline = 4,
    wdInsertedTextMarkColorOnly = 5,
    wdInsertedTextMarkStrikeThrough = 6,
    wdInsertedTextMarkDoubleStrikeThrough = 7
};

enum WdRevisedLinesMark
{
    wdRevisedLinesMarkNone = 0,
    wdRevisedLinesMarkLeftBorder = 1,
    wdRevisedLinesMarkRightBorder = 2,
    wdRevisedLinesMarkOutsideBorder = 3
};

enum WdDeletedTextMark
{
    wdDeletedTextMarkHidden = 0,
    wdDeletedTextMarkStrikeThrough = 1,
    wdDeletedTextMarkCaret = 2,
    wdDeletedTextMarkPound = 3,
    wdDeletedTextMarkNone = 4,
    wdDeletedTextMarkBold = 5,
    wdDeletedTextMarkItalic = 6,
    wdDeletedTextMarkUnderline = 7,
    wdDeletedTextMarkDoubleUnderline = 8,
    wdDeletedTextMarkColorOnly = 9,
    wdDeletedTextMarkDoubleStrikeThrough = 10
};

enum WdRevisedPropertiesMark
{
    wdRevisedPropertiesMarkNone = 0,
    wdRevisedPropertiesMarkBold = 1,
    wdRevisedPropertiesMarkItalic = 2,
    wdRevisedPropertiesMarkUnderline = 3,
    wdRevisedPropertiesMarkDoubleUnderline = 4,
    wdRevisedPropertiesMarkColorOnly = 5,
    wdRevisedPropertiesMarkStrikeThrough = 6,
    wdRevisedPropertiesMarkDoubleStrikeThrough = 7
};

enum WdFieldShading
{
    wdFieldShadingNever = 0,
    wdFieldShadingAlways = 1,
    wdFieldShadingWhenSelected = 2
};

enum WdDefaultFilePath
{
    wdDocumentsPath = 0,
    wdPicturesPath = 1,
    wdUserTemplatesPath = 2,
    wdWorkgroupTemplatesPath = 3,
    wdUserOptionsPath = 4,
    wdAutoRecoverPath = 5,
    wdToolsPath = 6,
    wdTutorialPath = 7,
    wdStartupPath = 8,
    wdProgramPath = 9,
    wdGraphicsFiltersPath = 10,
    wdTextConvertersPath = 11,
    wdProofingToolsPath = 12,
    wdTempFilePath = 13,
    wdCurrentFolderPath = 14,
    wdStyleGalleryPath = 15,
    wdBorderArtPath = 19
};

enum WdCompatibility
{
    wdNoTabHangIndent = 1,
    wdNoSpaceRaiseLower = 2,
    wdPrintColBlack = 3,
    wdWrapTrailSpaces = 4,
    wdNoColumnBalance = 5,
    wdConvMailMergeEsc = 6,
    wdSuppressSpBfAfterPgBrk = 7,
    wdSuppressTopSpacing = 8,
    wdOrigWordTableRules = 9,
    wdTransparentMetafiles = 10,
    wdShowBreaksInFrames = 11,
    wdSwapBordersFacingPages = 12,
    wdLeaveBackslashAlone = 13,
    wdExpandShiftReturn = 14,
    wdDontULTrailSpace = 15,
    wdDontBalanceSingleByteDoubleByteWidth = 16,
    wdSuppressTopSpacingMac5 = 17,
    wdSpacingInWholePoints = 18,
    wdPrintBodyTextBeforeHeader = 19,
    wdNoLeading = 20,
    wdNoSpaceForUL = 21,
    wdMWSmallCaps = 22,
    wdNoExtraLineSpacing = 23,
    wdTruncateFontHeight = 24,
    wdSubFontBySize = 25,
    wdUsePrinterMetrics = 26,
    wdWW6BorderRules = 27,
    wdExactOnTop = 28,
    wdSuppressBottomSpacing = 29,
    wdWPSpaceWidth = 30,
    wdWPJustification = 31,
    wdLineWrapLikeWord6 = 32,
    wdShapeLayoutLikeWW8 = 33,
    wdFootnoteLayoutLikeWW8 = 34,
    wdDontUseHTMLParagraphAutoSpacing = 35,
    wdDontAdjustLineHeightInTable = 36,
    wdForgetLastTabAlignment = 37,
    wdAutospaceLikeWW7 = 38,
    wdAlignTablesRowByRow = 39,
    wdLayoutRawTableWidth = 40,
    wdLayoutTableRowsApart = 41,
    wdUseWord97LineBreakingRules = 42,
    wdDontBreakWrappedTables = 43,
    wdDontSnapTextToGridInTableWithObjects = 44,
    wdSelectFieldWithFirstOrLastCharacter = 45,
    wdApplyBreakingRules = 46,
    wdDontWrapTextWithPunctuation = 47,
    wdDontUseAsianBreakRulesInGrid = 48,
    wdUseWord2002TableStyleRules = 49,
    wdGrowAutofit = 50,
    wdUseNormalStyleForList = 51,
    wdDontUseIndentAsNumberingTabStop = 52,
    wdFELineBreak11 = 53,
    wdAllowSpaceOfSameStyleInTable = 54,
    wdWW11IndentRules = 55,
    wdDontAutofitConstrainedTables = 56,
    wdAutofitLikeWW11 = 57,
    wdUnderlineTabInNumList = 58,
    wdHangulWidthLikeWW11 = 59,
    wdSplitPgBreakAndParaMark = 60,
    wdDontVertAlignCellWithShape = 61,
    wdDontBreakConstrainedForcedTables = 62,
    wdDontVertAlignInTextbox = 63,
    wdWord11KerningPairs = 64,
    wdCachedColBalance = 65
};

enum WdPaperSize
{
    wdPaper10x14 = 0,
    wdPaper11x17 = 1,
    wdPaperLetter = 2,
    wdPaperLetterSmall = 3,
    wdPaperLegal = 4,
    wdPaperExecutive = 5,
    wdPaperA3 = 6,
    wdPaperA4 = 7,
    wdPaperA4Small = 8,
    wdPaperA5 = 9,
    wdPaperB4 = 10,
    wdPaperB5 = 11,
    wdPaperCSheet = 12,
    wdPaperDSheet = 13,
    wdPaperESheet = 14,
    wdPaperFanfoldLegalGerman = 15,
    wdPaperFanfoldStdGerman = 16,
    wdPaperFanfoldUS = 17,
    wdPaperFolio = 18,
    wdPaperLedger = 19,
    wdPaperNote = 20,
    wdPaperQuarto = 21,
    wdPaperStatement = 22,
    wdPaperTabloid = 23,
    wdPaperEnvelope9 = 24,
    wdPaperEnvelope10 = 25,
    wdPaperEnvelope11 = 26,
    wdPaperEnvelope12 = 27,
    wdPaperEnvelope14 = 28,
    wdPaperEnvelopeB4 = 29,
    wdPaperEnvelopeB5 = 30,
    wdPaperEnvelopeB6 = 31,
    wdPaperEnvelopeC3 = 32,
    wdPaperEnvelopeC4 = 33,
    wdPaperEnvelopeC5 = 34,
    wdPaperEnvelopeC6 = 35,
    wdPaperEnvelopeC65 = 36,
    wdPaperEnvelopeDL = 37,
    wdPaperEnvelopeItaly = 38,
    wdPaperEnvelopeMonarch = 39,
    wdPaperEnvelopePersonal = 40,
    wdPaperCustom = 41
};

enum WdCustomLabelPageSize
{
    wdCustomLabelLetter = 0,
    wdCustomLabelLetterLS = 1,
    wdCustomLabelA4 = 2,
    wdCustomLabelA4LS = 3,
    wdCustomLabelA5 = 4,
    wdCustomLabelA5LS = 5,
    wdCustomLabelB5 = 6,
    wdCustomLabelMini = 7,
    wdCustomLabelFanfold = 8,
    wdCustomLabelVertHalfSheet = 9,
    wdCustomLabelVertHalfSheetLS = 10,
    wdCustomLabelHigaki = 11,
    wdCustomLabelHigakiLS = 12,
    wdCustomLabelB4JIS = 13
};

enum WdProtectionType
{
    wdNoProtection = -1,
    wdAllowOnlyRevisions = 0,
    wdAllowOnlyComments = 1,
    wdAllowOnlyFormFields = 2,
    wdAllowOnlyReading = 3
};

enum WdPartOfSpeech
{
    wdAdjective = 0,
    wdNoun = 1,
    wdAdverb = 2,
    wdVerb = 3,
    wdPronoun = 4,
    wdConjunction = 5,
    wdPreposition = 6,
    wdInterjection = 7,
    wdIdiom = 8,
    wdOther = 9
};

enum WdSubscriberFormats
{
    wdSubscriberBestFormat = 0,
    wdSubscriberRTF = 1,
    wdSubscriberText = 2,
    wdSubscriberPict = 4
};

enum WdEditionType
{
    wdPublisher = 0,
    wdSubscriber = 1
};

enum WdEditionOption
{
    wdCancelPublisher = 0,
    wdSendPublisher = 1,
    wdSelectPublisher = 2,
    wdAutomaticUpdate = 3,
    wdManualUpdate = 4,
    wdChangeAttributes = 5,
    wdUpdateSubscriber = 6,
    wdOpenSource = 7
};

enum WdRelativeHorizontalPosition
{
    wdRelativeHorizontalPositionMargin = 0,
    wdRelativeHorizontalPositionPage = 1,
    wdRelativeHorizontalPositionColumn = 2,
    wdRelativeHorizontalPositionCharacter = 3,
    wdRelativeHorizontalPositionLeftMarginArea = 4,
    wdRelativeHorizontalPositionRightMarginArea = 5,
    wdRelativeHorizontalPositionInnerMarginArea = 6,
    wdRelativeHorizontalPositionOuterMarginArea = 7
};

enum WdRelativeVerticalPosition
{
    wdRelativeVerticalPositionMargin = 0,
    wdRelativeVerticalPositionPage = 1,
    wdRelativeVerticalPositionParagraph = 2,
    wdRelativeVerticalPositionLine = 3,
    wdRelativeVerticalPositionTopMarginArea = 4,
    wdRelativeVerticalPositionBottomMarginArea = 5,
    wdRelativeVerticalPositionInnerMarginArea = 6,
    wdRelativeVerticalPositionOuterMarginArea = 7
};

enum WdHelpType
{
    wdHelp = 0,
    wdHelpAbout = 1,
    wdHelpActiveWindow = 2,
    wdHelpContents = 3,
    wdHelpExamplesAndDemos = 4,
    wdHelpIndex = 5,
    wdHelpKeyboard = 6,
    wdHelpPSSHelp = 7,
    wdHelpQuickPreview = 8,
    wdHelpSearch = 9,
    wdHelpUsingHelp = 10,
    wdHelpIchitaro = 11,
    wdHelpPE2 = 12,
    wdHelpHWP = 13
};

enum WdHelpTypeHID
{
//  emptyenum = 0
};

enum WdKeyCategory
{
    wdKeyCategoryNil = -1,
    wdKeyCategoryDisable = 0,
    wdKeyCategoryCommand = 1,
    wdKeyCategoryMacro = 2,
    wdKeyCategoryFont = 3,
    wdKeyCategoryAutoText = 4,
    wdKeyCategoryStyle = 5,
    wdKeyCategorySymbol = 6,
    wdKeyCategoryPrefix = 7
};

enum WdKey
{
    wdNoKey = 255,
    wdKeyShift = 256,
    wdKeyControl = 512,
    wdKeyCommand = 512,
    wdKeyAlt = 1024,
    wdKeyOption = 1024,
    wdKeyA = 65,
    wdKeyB = 66,
    wdKeyC = 67,
    wdKeyD = 68,
    wdKeyE = 69,
    wdKeyF = 70,
    wdKeyG = 71,
    wdKeyH = 72,
    wdKeyI = 73,
    wdKeyJ = 74,
    wdKeyK = 75,
    wdKeyL = 76,
    wdKeyM = 77,
    wdKeyN = 78,
    wdKeyO = 79,
    wdKeyP = 80,
    wdKeyQ = 81,
    wdKeyR = 82,
    wdKeyS = 83,
    wdKeyT = 84,
    wdKeyU = 85,
    wdKeyV = 86,
    wdKeyW = 87,
    wdKeyX = 88,
    wdKeyY = 89,
    wdKeyZ = 90,
    wdKey0 = 48,
    wdKey1 = 49,
    wdKey2 = 50,
    wdKey3 = 51,
    wdKey4 = 52,
    wdKey5 = 53,
    wdKey6 = 54,
    wdKey7 = 55,
    wdKey8 = 56,
    wdKey9 = 57,
    wdKeyBackspace = 8,
    wdKeyTab = 9,
    wdKeyNumeric5Special = 12,
    wdKeyReturn = 13,
    wdKeyPause = 19,
    wdKeyEsc = 27,
    wdKeySpacebar = 32,
    wdKeyPageUp = 33,
    wdKeyPageDown = 34,
    wdKeyEnd = 35,
    wdKeyHome = 36,
    wdKeyInsert = 45,
    wdKeyDelete = 46,
    wdKeyNumeric0 = 96,
    wdKeyNumeric1 = 97,
    wdKeyNumeric2 = 98,
    wdKeyNumeric3 = 99,
    wdKeyNumeric4 = 100,
    wdKeyNumeric5 = 101,
    wdKeyNumeric6 = 102,
    wdKeyNumeric7 = 103,
    wdKeyNumeric8 = 104,
    wdKeyNumeric9 = 105,
    wdKeyNumericMultiply = 106,
    wdKeyNumericAdd = 107,
    wdKeyNumericSubtract = 109,
    wdKeyNumericDecimal = 110,
    wdKeyNumericDivide = 111,
    wdKeyF1 = 112,
    wdKeyF2 = 113,
    wdKeyF3 = 114,
    wdKeyF4 = 115,
    wdKeyF5 = 116,
    wdKeyF6 = 117,
    wdKeyF7 = 118,
    wdKeyF8 = 119,
    wdKeyF9 = 120,
    wdKeyF10 = 121,
    wdKeyF11 = 122,
    wdKeyF12 = 123,
    wdKeyF13 = 124,
    wdKeyF14 = 125,
    wdKeyF15 = 126,
    wdKeyF16 = 127,
    wdKeyScrollLock = 145,
    wdKeySemiColon = 186,
    wdKeyEquals = 187,
    wdKeyComma = 188,
    wdKeyHyphen = 189,
    wdKeyPeriod = 190,
    wdKeySlash = 191,
    wdKeyBackSingleQuote = 192,
    wdKeyOpenSquareBrace = 219,
    wdKeyBackSlash = 220,
    wdKeyCloseSquareBrace = 221,
    wdKeySingleQuote = 222
};

enum WdOLEType
{
    wdOLELink = 0,
    wdOLEEmbed = 1,
    wdOLEControl = 2
};

enum WdOLEVerb
{
    wdOLEVerbPrimary = 0,
    wdOLEVerbShow = -1,
    wdOLEVerbOpen = -2,
    wdOLEVerbHide = -3,
    wdOLEVerbUIActivate = -4,
    wdOLEVerbInPlaceActivate = -5,
    wdOLEVerbDiscardUndoState = -6
};

enum WdOLEPlacement
{
    wdInLine = 0,
    wdFloatOverText = 1
};

enum WdEnvelopeOrientation
{
    wdLeftPortrait = 0,
    wdCenterPortrait = 1,
    wdRightPortrait = 2,
    wdLeftLandscape = 3,
    wdCenterLandscape = 4,
    wdRightLandscape = 5,
    wdLeftClockwise = 6,
    wdCenterClockwise = 7,
    wdRightClockwise = 8
};

enum WdLetterStyle
{
    wdFullBlock = 0,
    wdModifiedBlock = 1,
    wdSemiBlock = 2
};

enum WdLetterheadLocation
{
    wdLetterTop = 0,
    wdLetterBottom = 1,
    wdLetterLeft = 2,
    wdLetterRight = 3
};

enum WdSalutationType
{
    wdSalutationInformal = 0,
    wdSalutationFormal = 1,
    wdSalutationBusiness = 2,
    wdSalutationOther = 3
};

enum WdSalutationGender
{
    wdGenderFemale = 0,
    wdGenderMale = 1,
    wdGenderNeutral = 2,
    wdGenderUnknown = 3
};

enum WdMovementType
{
    wdMove = 0,
    wdExtend = 1
};

enum WdConstants
{
    wdUndefined = 9999999,
    wdToggle = 9999998,
    wdForward = 1073741823,
    wdBackward = -1073741823,
    wdAutoPosition = 0,
    wdFirst = 1,
    wdCreatorCode = 1297307460
};

enum WdPasteDataType
{
    wdPasteOLEObject = 0,
    wdPasteRTF = 1,
    wdPasteText = 2,
    wdPasteMetafilePicture = 3,
    wdPasteBitmap = 4,
    wdPasteDeviceIndependentBitmap = 5,
    wdPasteHyperlink = 7,
    wdPasteShape = 8,
    wdPasteEnhancedMetafile = 9,
    wdPasteHTML = 10
};

enum WdPrintOutItem
{
    wdPrintDocumentContent = 0,
    wdPrintProperties = 1,
    wdPrintComments = 2,
    wdPrintMarkup = 2,
    wdPrintStyles = 3,
    wdPrintAutoTextEntries = 4,
    wdPrintKeyAssignments = 5,
    wdPrintEnvelope = 6,
    wdPrintDocumentWithMarkup = 7
};

enum WdPrintOutPages
{
    wdPrintAllPages = 0,
    wdPrintOddPagesOnly = 1,
    wdPrintEvenPagesOnly = 2
};

enum WdPrintOutRange
{
    wdPrintAllDocument = 0,
    wdPrintSelection = 1,
    wdPrintCurrentPage = 2,
    wdPrintFromTo = 3,
    wdPrintRangeOfPages = 4
};

enum WdDictionaryType
{
    wdSpelling = 0,
    wdGrammar = 1,
    wdThesaurus = 2,
    wdHyphenation = 3,
    wdSpellingComplete = 4,
    wdSpellingCustom = 5,
    wdSpellingLegal = 6,
    wdSpellingMedical = 7,
    wdHangulHanjaConversion = 8,
    wdHangulHanjaConversionCustom = 9
};

enum WdDictionaryTypeHID
{
//  emptyenum = 0
};

enum WdSpellingWordType
{
    wdSpellword = 0,
    wdWildcard = 1,
    wdAnagram = 2
};

enum WdSpellingErrorType
{
    wdSpellingCorrect = 0,
    wdSpellingNotInDictionary = 1,
    wdSpellingCapitalization = 2
};

enum WdProofreadingErrorType
{
    wdSpellingError = 0,
    wdGrammaticalError = 1
};

enum WdInlineShapeType
{
    wdInlineShapeEmbeddedOLEObject = 1,
    wdInlineShapeLinkedOLEObject = 2,
    wdInlineShapePicture = 3,
    wdInlineShapeLinkedPicture = 4,
    wdInlineShapeOLEControlObject = 5,
    wdInlineShapeHorizontalLine = 6,
    wdInlineShapePictureHorizontalLine = 7,
    wdInlineShapeLinkedPictureHorizontalLine = 8,
    wdInlineShapePictureBullet = 9,
    wdInlineShapeScriptAnchor = 10,
    wdInlineShapeOWSAnchor = 11,
    wdInlineShapeChart = 12,
    wdInlineShapeDiagram = 13,
    wdInlineShapeLockedCanvas = 14,
    wdInlineShapeSmartArt = 15
};

enum WdArrangeStyle
{
    wdTiled = 0,
    wdIcons = 1
};

enum WdSelectionFlags
{
    wdSelStartActive = 1,
    wdSelAtEOL = 2,
    wdSelOvertype = 4,
    wdSelActive = 8,
    wdSelReplace = 16
};

enum WdAutoVersions
{
    wdAutoVersionOff = 0,
    wdAutoVersionOnClose = 1
};

enum WdOrganizerObject
{
    wdOrganizerObjectStyles = 0,
    wdOrganizerObjectAutoText = 1,
    wdOrganizerObjectCommandBars = 2,
    wdOrganizerObjectProjectItems = 3
};

enum WdFindMatch
{
    wdMatchParagraphMark = 65551,
    wdMatchTabCharacter = 9,
    wdMatchCommentMark = 5,
    wdMatchAnyCharacter = 65599,
    wdMatchAnyDigit = 65567,
    wdMatchAnyLetter = 65583,
    wdMatchCaretCharacter = 11,
    wdMatchColumnBreak = 14,
    wdMatchEmDash = 8212,
    wdMatchEnDash = 8211,
    wdMatchEndnoteMark = 65555,
    wdMatchField = 19,
    wdMatchFootnoteMark = 65554,
    wdMatchGraphic = 1,
    wdMatchManualLineBreak = 65551,
    wdMatchManualPageBreak = 65564,
    wdMatchNonbreakingHyphen = 30,
    wdMatchNonbreakingSpace = 160,
    wdMatchOptionalHyphen = 31,
    wdMatchSectionBreak = 65580,
    wdMatchWhiteSpace = 65655
};

enum WdFindWrap
{
    wdFindStop = 0,
    wdFindContinue = 1,
    wdFindAsk = 2
};

enum WdInformation
{
    wdActiveEndAdjustedPageNumber = 1,
    wdActiveEndSectionNumber = 2,
    wdActiveEndPageNumber = 3,
    wdNumberOfPagesInDocument = 4,
    wdHorizontalPositionRelativeToPage = 5,
    wdVerticalPositionRelativeToPage = 6,
    wdHorizontalPositionRelativeToTextBoundary = 7,
    wdVerticalPositionRelativeToTextBoundary = 8,
    wdFirstCharacterColumnNumber = 9,
    wdFirstCharacterLineNumber = 10,
    wdFrameIsSelected = 11,
    wdWithInTable = 12,
    wdStartOfRangeRowNumber = 13,
    wdEndOfRangeRowNumber = 14,
    wdMaximumNumberOfRows = 15,
    wdStartOfRangeColumnNumber = 16,
    wdEndOfRangeColumnNumber = 17,
    wdMaximumNumberOfColumns = 18,
    wdZoomPercentage = 19,
    wdSelectionMode = 20,
    wdCapsLock = 21,
    wdNumLock = 22,
    wdOverType = 23,
    wdRevisionMarking = 24,
    wdInFootnoteEndnotePane = 25,
    wdInCommentPane = 26,
    wdInHeaderFooter = 28,
    wdAtEndOfRowMarker = 31,
    wdReferenceOfType = 32,
    wdHeaderFooterType = 33,
    wdInMasterDocument = 34,
    wdInFootnote = 35,
    wdInEndnote = 36,
    wdInWordMail = 37,
    wdInClipboard = 38
};

enum WdWrapType
{
    wdWrapSquare = 0,
    wdWrapTight = 1,
    wdWrapThrough = 2,
    wdWrapNone = 3,
    wdWrapTopBottom = 4,
    wdWrapBehind = 5,
    wdWrapFront = 3,
    wdWrapInline = 7
};

enum WdWrapSideType
{
    wdWrapBoth = 0,
    wdWrapLeft = 1,
    wdWrapRight = 2,
    wdWrapLargest = 3
};

enum WdOutlineLevel
{
    wdOutlineLevel1 = 1,
    wdOutlineLevel2 = 2,
    wdOutlineLevel3 = 3,
    wdOutlineLevel4 = 4,
    wdOutlineLevel5 = 5,
    wdOutlineLevel6 = 6,
    wdOutlineLevel7 = 7,
    wdOutlineLevel8 = 8,
    wdOutlineLevel9 = 9,
    wdOutlineLevelBodyText = 10
};

enum WdTextOrientation
{
    wdTextOrientationHorizontal = 0,
    wdTextOrientationUpward = 2,
    wdTextOrientationDownward = 3,
    wdTextOrientationVerticalFarEast = 1,
    wdTextOrientationHorizontalRotatedFarEast = 4,
    wdTextOrientationVertical = 5
};

enum WdTextOrientationHID
{
//  emptyenum = 0
};

enum WdPageBorderArt
{
    wdArtApples = 1,
    wdArtMapleMuffins = 2,
    wdArtCakeSlice = 3,
    wdArtCandyCorn = 4,
    wdArtIceCreamCones = 5,
    wdArtChampagneBottle = 6,
    wdArtPartyGlass = 7,
    wdArtChristmasTree = 8,
    wdArtTrees = 9,
    wdArtPalmsColor = 10,
    wdArtBalloons3Colors = 11,
    wdArtBalloonsHotAir = 12,
    wdArtPartyFavor = 13,
    wdArtConfettiStreamers = 14,
    wdArtHearts = 15,
    wdArtHeartBalloon = 16,
    wdArtStars3D = 17,
    wdArtStarsShadowed = 18,
    wdArtStars = 19,
    wdArtSun = 20,
    wdArtEarth2 = 21,
    wdArtEarth1 = 22,
    wdArtPeopleHats = 23,
    wdArtSombrero = 24,
    wdArtPencils = 25,
    wdArtPackages = 26,
    wdArtClocks = 27,
    wdArtFirecrackers = 28,
    wdArtRings = 29,
    wdArtMapPins = 30,
    wdArtConfetti = 31,
    wdArtCreaturesButterfly = 32,
    wdArtCreaturesLadyBug = 33,
    wdArtCreaturesFish = 34,
    wdArtBirdsFlight = 35,
    wdArtScaredCat = 36,
    wdArtBats = 37,
    wdArtFlowersRoses = 38,
    wdArtFlowersRedRose = 39,
    wdArtPoinsettias = 40,
    wdArtHolly = 41,
    wdArtFlowersTiny = 42,
    wdArtFlowersPansy = 43,
    wdArtFlowersModern2 = 44,
    wdArtFlowersModern1 = 45,
    wdArtWhiteFlowers = 46,
    wdArtVine = 47,
    wdArtFlowersDaisies = 48,
    wdArtFlowersBlockPrint = 49,
    wdArtDecoArchColor = 50,
    wdArtFans = 51,
    wdArtFilm = 52,
    wdArtLightning1 = 53,
    wdArtCompass = 54,
    wdArtDoubleD = 55,
    wdArtClassicalWave = 56,
    wdArtShadowedSquares = 57,
    wdArtTwistedLines1 = 58,
    wdArtWaveline = 59,
    wdArtQuadrants = 60,
    wdArtCheckedBarColor = 61,
    wdArtSwirligig = 62,
    wdArtPushPinNote1 = 63,
    wdArtPushPinNote2 = 64,
    wdArtPumpkin1 = 65,
    wdArtEggsBlack = 66,
    wdArtCup = 67,
    wdArtHeartGray = 68,
    wdArtGingerbreadMan = 69,
    wdArtBabyPacifier = 70,
    wdArtBabyRattle = 71,
    wdArtCabins = 72,
    wdArtHouseFunky = 73,
    wdArtStarsBlack = 74,
    wdArtSnowflakes = 75,
    wdArtSnowflakeFancy = 76,
    wdArtSkyrocket = 77,
    wdArtSeattle = 78,
    wdArtMusicNotes = 79,
    wdArtPalmsBlack = 80,
    wdArtMapleLeaf = 81,
    wdArtPaperClips = 82,
    wdArtShorebirdTracks = 83,
    wdArtPeople = 84,
    wdArtPeopleWaving = 85,
    wdArtEclipsingSquares2 = 86,
    wdArtHypnotic = 87,
    wdArtDiamondsGray = 88,
    wdArtDecoArch = 89,
    wdArtDecoBlocks = 90,
    wdArtCirclesLines = 91,
    wdArtPapyrus = 92,
    wdArtWoodwork = 93,
    wdArtWeavingBraid = 94,
    wdArtWeavingRibbon = 95,
    wdArtWeavingAngles = 96,
    wdArtArchedScallops = 97,
    wdArtSafari = 98,
    wdArtCelticKnotwork = 99,
    wdArtCrazyMaze = 100,
    wdArtEclipsingSquares1 = 101,
    wdArtBirds = 102,
    wdArtFlowersTeacup = 103,
    wdArtNorthwest = 104,
    wdArtSouthwest = 105,
    wdArtTribal6 = 106,
    wdArtTribal4 = 107,
    wdArtTribal3 = 108,
    wdArtTribal2 = 109,
    wdArtTribal5 = 110,
    wdArtXIllusions = 111,
    wdArtZanyTriangles = 112,
    wdArtPyramids = 113,
    wdArtPyramidsAbove = 114,
    wdArtConfettiGrays = 115,
    wdArtConfettiOutline = 116,
    wdArtConfettiWhite = 117,
    wdArtMosaic = 118,
    wdArtLightning2 = 119,
    wdArtHeebieJeebies = 120,
    wdArtLightBulb = 121,
    wdArtGradient = 122,
    wdArtTriangleParty = 123,
    wdArtTwistedLines2 = 124,
    wdArtMoons = 125,
    wdArtOvals = 126,
    wdArtDoubleDiamonds = 127,
    wdArtChainLink = 128,
    wdArtTriangles = 129,
    wdArtTribal1 = 130,
    wdArtMarqueeToothed = 131,
    wdArtSharksTeeth = 132,
    wdArtSawtooth = 133,
    wdArtSawtoothGray = 134,
    wdArtPostageStamp = 135,
    wdArtWeavingStrips = 136,
    wdArtZigZag = 137,
    wdArtCrossStitch = 138,
    wdArtGems = 139,
    wdArtCirclesRectangles = 140,
    wdArtCornerTriangles = 141,
    wdArtCreaturesInsects = 142,
    wdArtZigZagStitch = 143,
    wdArtCheckered = 144,
    wdArtCheckedBarBlack = 145,
    wdArtMarquee = 146,
    wdArtBasicWhiteDots = 147,
    wdArtBasicWideMidline = 148,
    wdArtBasicWideOutline = 149,
    wdArtBasicWideInline = 150,
    wdArtBasicThinLines = 151,
    wdArtBasicWhiteDashes = 152,
    wdArtBasicWhiteSquares = 153,
    wdArtBasicBlackSquares = 154,
    wdArtBasicBlackDashes = 155,
    wdArtBasicBlackDots = 156,
    wdArtStarsTop = 157,
    wdArtCertificateBanner = 158,
    wdArtHandmade1 = 159,
    wdArtHandmade2 = 160,
    wdArtTornPaper = 161,
    wdArtTornPaperBlack = 162,
    wdArtCouponCutoutDashes = 163,
    wdArtCouponCutoutDots = 164
};

enum WdBorderDistanceFrom
{
    wdBorderDistanceFromText = 0,
    wdBorderDistanceFromPageEdge = 1
};

enum WdReplace
{
    wdReplaceNone = 0,
    wdReplaceOne = 1,
    wdReplaceAll = 2
};

enum WdFontBias
{
    wdFontBiasDontCare = 255,
    wdFontBiasDefault = 0,
    wdFontBiasFareast = 1
};

struct __declspec(uuid("000209a4-0000-0000-c000-000000000046"))
_OLEControl : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetLeft,put=PutLeft))
    float Left;
    __declspec(property(get=GetTop,put=PutTop))
    float Top;
    __declspec(property(get=GetHeight,put=PutHeight))
    float Height;
    __declspec(property(get=GetWidth,put=PutWidth))
    float Width;
    __declspec(property(get=GetAutomation))
    IDispatchPtr Automation;
    __declspec(property(get=GetAltHTML,put=PutAltHTML))
    _bstr_t AltHTML;

    //
    // Wrapper methods for error-handling
    //

    float GetLeft ( );
    void PutLeft (
        float prop );
    float GetTop ( );
    void PutTop (
        float prop );
    float GetHeight ( );
    void PutHeight (
        float prop );
    float GetWidth ( );
    void PutWidth (
        float prop );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t prop );
    IDispatchPtr GetAutomation ( );
    HRESULT Select ( );
    HRESULT Copy ( );
    HRESULT Cut ( );
    HRESULT Delete ( );
    HRESULT Activate ( );
    _bstr_t GetAltHTML ( );
    void PutAltHTML (
        _bstr_t prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Automation (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
      virtual HRESULT __stdcall raw_Copy ( ) = 0;
      virtual HRESULT __stdcall raw_Cut ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Activate ( ) = 0;
      virtual HRESULT __stdcall get_AltHTML (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_AltHTML (
        /*[in]*/ BSTR prop ) = 0;
};

struct __declspec(uuid("000209f7-0000-0000-c000-000000000046"))
ApplicationEvents : IDispatch
{};

struct __declspec(uuid("000209f0-0000-0000-c000-000000000046"))
Global;
    // [ default ] interface _Global

struct __declspec(uuid("000209ff-0000-0000-c000-000000000046"))
Application;
    // [ default ] interface _Application
    // [ source ] dispinterface ApplicationEvents
    // [ source ] dispinterface ApplicationEvents2
    // [ source ] dispinterface ApplicationEvents3
    // [ default, source ] dispinterface ApplicationEvents4

struct __declspec(uuid("0002096f-0000-0000-c000-000000000046"))
FontNames : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t Item (
        long Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * prop ) = 0;
};

struct __declspec(uuid("00020969-0000-0000-c000-000000000046"))
RoutingSlip : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSubject,put=PutSubject))
    _bstr_t Subject;
    __declspec(property(get=GetMessage,put=PutMessage))
    _bstr_t Message;
    __declspec(property(get=GetDelivery,put=PutDelivery))
    enum WdRoutingSlipDelivery Delivery;
    __declspec(property(get=GetTrackStatus,put=PutTrackStatus))
    VARIANT_BOOL TrackStatus;
    __declspec(property(get=GetProtect,put=PutProtect))
    enum WdProtectionType Protect;
    __declspec(property(get=GetReturnWhenDone,put=PutReturnWhenDone))
    VARIANT_BOOL ReturnWhenDone;
    __declspec(property(get=GetStatus))
    enum WdRoutingSlipStatus Status;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetRecipients))
    _variant_t Recipients[];

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetSubject ( );
    void PutSubject (
        _bstr_t prop );
    _bstr_t GetMessage ( );
    void PutMessage (
        _bstr_t prop );
    enum WdRoutingSlipDelivery GetDelivery ( );
    void PutDelivery (
        enum WdRoutingSlipDelivery prop );
    VARIANT_BOOL GetTrackStatus ( );
    void PutTrackStatus (
        VARIANT_BOOL prop );
    enum WdProtectionType GetProtect ( );
    void PutProtect (
        enum WdProtectionType prop );
    VARIANT_BOOL GetReturnWhenDone ( );
    void PutReturnWhenDone (
        VARIANT_BOOL prop );
    enum WdRoutingSlipStatus GetStatus ( );
    _variant_t GetRecipients (
        VARIANT * Index = &vtMissing );
    HRESULT Reset ( );
    HRESULT AddRecipient (
        _bstr_t Recipient );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Message (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Message (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Delivery (
        /*[out,retval]*/ enum WdRoutingSlipDelivery * prop ) = 0;
      virtual HRESULT __stdcall put_Delivery (
        /*[in]*/ enum WdRoutingSlipDelivery prop ) = 0;
      virtual HRESULT __stdcall get_TrackStatus (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_TrackStatus (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Protect (
        /*[out,retval]*/ enum WdProtectionType * prop ) = 0;
      virtual HRESULT __stdcall put_Protect (
        /*[in]*/ enum WdProtectionType prop ) = 0;
      virtual HRESULT __stdcall get_ReturnWhenDone (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ReturnWhenDone (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum WdRoutingSlipStatus * prop ) = 0;
      virtual HRESULT __stdcall get_Recipients (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_AddRecipient (
        /*[in]*/ BSTR Recipient ) = 0;
};

struct __declspec(uuid("00020966-0000-0000-c000-000000000046"))
Variable : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetValue,put=PutValue))
    _bstr_t Value;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    _bstr_t GetValue ( );
    void PutValue (
        _bstr_t prop );
    long GetIndex ( );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("00020965-0000-0000-c000-000000000046"))
Variables : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    VariablePtr Item (
        VARIANT * Index );
    VariablePtr Add (
        _bstr_t Name,
        VARIANT * Value = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Variable * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * Value,
        /*[out,retval]*/ struct Variable * * prop ) = 0;
};

struct __declspec(uuid("00020956-0000-0000-c000-000000000046"))
DropCap : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetPosition,put=PutPosition))
    enum WdDropPosition Position;
    __declspec(property(get=GetFontName,put=PutFontName))
    _bstr_t FontName;
    __declspec(property(get=GetLinesToDrop,put=PutLinesToDrop))
    long LinesToDrop;
    __declspec(property(get=GetDistanceFromText,put=PutDistanceFromText))
    float DistanceFromText;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    enum WdDropPosition GetPosition ( );
    void PutPosition (
        enum WdDropPosition prop );
    _bstr_t GetFontName ( );
    void PutFontName (
        _bstr_t prop );
    long GetLinesToDrop ( );
    void PutLinesToDrop (
        long prop );
    float GetDistanceFromText ( );
    void PutDistanceFromText (
        float prop );
    HRESULT Clear ( );
    HRESULT Enable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ enum WdDropPosition * prop ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ enum WdDropPosition prop ) = 0;
      virtual HRESULT __stdcall get_FontName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_FontName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_LinesToDrop (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_LinesToDrop (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DistanceFromText (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceFromText (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall raw_Clear ( ) = 0;
      virtual HRESULT __stdcall raw_Enable ( ) = 0;
};

struct __declspec(uuid("00020954-0000-0000-c000-000000000046"))
TabStop : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAlignment,put=PutAlignment))
    enum WdTabAlignment Alignment;
    __declspec(property(get=GetLeader,put=PutLeader))
    enum WdTabLeader Leader;
    __declspec(property(get=GetPosition,put=PutPosition))
    float Position;
    __declspec(property(get=GetCustomTab))
    VARIANT_BOOL CustomTab;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetNext))
    TabStopPtr Next;
    __declspec(property(get=GetPrevious))
    TabStopPtr Previous;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    enum WdTabAlignment GetAlignment ( );
    void PutAlignment (
        enum WdTabAlignment prop );
    enum WdTabLeader GetLeader ( );
    void PutLeader (
        enum WdTabLeader prop );
    float GetPosition ( );
    void PutPosition (
        float prop );
    VARIANT_BOOL GetCustomTab ( );
    TabStopPtr GetNext ( );
    TabStopPtr GetPrevious ( );
    HRESULT Clear ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum WdTabAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum WdTabAlignment prop ) = 0;
      virtual HRESULT __stdcall get_Leader (
        /*[out,retval]*/ enum WdTabLeader * prop ) = 0;
      virtual HRESULT __stdcall put_Leader (
        /*[in]*/ enum WdTabLeader prop ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_CustomTab (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Next (
        /*[out,retval]*/ struct TabStop * * prop ) = 0;
      virtual HRESULT __stdcall get_Previous (
        /*[out,retval]*/ struct TabStop * * prop ) = 0;
      virtual HRESULT __stdcall raw_Clear ( ) = 0;
};

struct __declspec(uuid("00020955-0000-0000-c000-000000000046"))
TabStops : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    TabStopPtr Item (
        VARIANT * Index );
    TabStopPtr Add (
        float Position,
        VARIANT * Alignment = &vtMissing,
        VARIANT * Leader = &vtMissing );
    HRESULT ClearAll ( );
    TabStopPtr Before (
        float Position );
    TabStopPtr After (
        float Position );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct TabStop * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ float Position,
        /*[in]*/ VARIANT * Alignment,
        /*[in]*/ VARIANT * Leader,
        /*[out,retval]*/ struct TabStop * * prop ) = 0;
      virtual HRESULT __stdcall raw_ClearAll ( ) = 0;
      virtual HRESULT __stdcall raw_Before (
        /*[in]*/ float Position,
        /*[out,retval]*/ struct TabStop * * prop ) = 0;
      virtual HRESULT __stdcall raw_After (
        /*[in]*/ float Position,
        /*[out,retval]*/ struct TabStop * * prop ) = 0;
};

struct __declspec(uuid("00020945-0000-0000-c000-000000000046"))
FirstLetterException : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetIndex ( );
    _bstr_t GetName ( );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("00020946-0000-0000-c000-000000000046"))
FirstLetterExceptions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    FirstLetterExceptionPtr Item (
        VARIANT * Index );
    FirstLetterExceptionPtr Add (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct FirstLetterException * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct FirstLetterException * * prop ) = 0;
};

struct __declspec(uuid("00020943-0000-0000-c000-000000000046"))
TwoInitialCapsException : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetIndex ( );
    _bstr_t GetName ( );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("00020944-0000-0000-c000-000000000046"))
TwoInitialCapsExceptions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    TwoInitialCapsExceptionPtr Item (
        VARIANT * Index );
    TwoInitialCapsExceptionPtr Add (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct TwoInitialCapsException * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct TwoInitialCapsException * * prop ) = 0;
};

struct __declspec(uuid("00020939-0000-0000-c000-000000000046"))
TextRetrievalMode : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetViewType,put=PutViewType))
    enum WdViewType ViewType;
    __declspec(property(get=GetDuplicate))
    TextRetrievalModePtr Duplicate;
    __declspec(property(get=GetIncludeHiddenText,put=PutIncludeHiddenText))
    VARIANT_BOOL IncludeHiddenText;
    __declspec(property(get=GetIncludeFieldCodes,put=PutIncludeFieldCodes))
    VARIANT_BOOL IncludeFieldCodes;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    enum WdViewType GetViewType ( );
    void PutViewType (
        enum WdViewType prop );
    TextRetrievalModePtr GetDuplicate ( );
    VARIANT_BOOL GetIncludeHiddenText ( );
    void PutIncludeHiddenText (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetIncludeFieldCodes ( );
    void PutIncludeFieldCodes (
        VARIANT_BOOL prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_ViewType (
        /*[out,retval]*/ enum WdViewType * prop ) = 0;
      virtual HRESULT __stdcall put_ViewType (
        /*[in]*/ enum WdViewType prop ) = 0;
      virtual HRESULT __stdcall get_Duplicate (
        /*[out,retval]*/ struct TextRetrievalMode * * prop ) = 0;
      virtual HRESULT __stdcall get_IncludeHiddenText (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IncludeHiddenText (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_IncludeFieldCodes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IncludeFieldCodes (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("00020935-0000-0000-c000-000000000046"))
System : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetOperatingSystem))
    _bstr_t OperatingSystem;
    __declspec(property(get=GetProcessorType))
    _bstr_t ProcessorType;
    __declspec(property(get=GetVersion))
    _bstr_t Version;
    __declspec(property(get=GetFreeDiskSpace))
    long FreeDiskSpace;
    __declspec(property(get=GetCountry))
    enum WdCountry Country;
    __declspec(property(get=GetLanguageDesignation))
    _bstr_t LanguageDesignation;
    __declspec(property(get=GetHorizontalResolution))
    long HorizontalResolution;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetVerticalResolution))
    long VerticalResolution;
    __declspec(property(get=GetProfileString,put=PutProfileString))
    _bstr_t ProfileString[][];
    __declspec(property(get=GetPrivateProfileString,put=PutPrivateProfileString))
    _bstr_t PrivateProfileString[][][];
    __declspec(property(get=GetMathCoprocessorInstalled))
    VARIANT_BOOL MathCoprocessorInstalled;
    __declspec(property(get=GetComputerType))
    _bstr_t ComputerType;
    __declspec(property(get=GetMacintoshName))
    _bstr_t MacintoshName;
    __declspec(property(get=GetQuickDrawInstalled))
    VARIANT_BOOL QuickDrawInstalled;
    __declspec(property(get=GetCursor,put=PutCursor))
    enum WdCursorType Cursor;
    __declspec(property(get=GetCountryRegion))
    enum WdCountry CountryRegion;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetOperatingSystem ( );
    _bstr_t GetProcessorType ( );
    _bstr_t GetVersion ( );
    long GetFreeDiskSpace ( );
    enum WdCountry GetCountry ( );
    _bstr_t GetLanguageDesignation ( );
    long GetHorizontalResolution ( );
    long GetVerticalResolution ( );
    _bstr_t GetProfileString (
        _bstr_t Section,
        _bstr_t Key );
    void PutProfileString (
        _bstr_t Section,
        _bstr_t Key,
        _bstr_t prop );
    _bstr_t GetPrivateProfileString (
        _bstr_t FileName,
        _bstr_t Section,
        _bstr_t Key );
    void PutPrivateProfileString (
        _bstr_t FileName,
        _bstr_t Section,
        _bstr_t Key,
        _bstr_t prop );
    VARIANT_BOOL GetMathCoprocessorInstalled ( );
    _bstr_t GetComputerType ( );
    _bstr_t GetMacintoshName ( );
    VARIANT_BOOL GetQuickDrawInstalled ( );
    enum WdCursorType GetCursor ( );
    void PutCursor (
        enum WdCursorType prop );
    HRESULT MSInfo ( );
    HRESULT Connect (
        _bstr_t Path,
        VARIANT * Drive = &vtMissing,
        VARIANT * Password = &vtMissing );
    enum WdCountry GetCountryRegion ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_OperatingSystem (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_ProcessorType (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Version (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_FreeDiskSpace (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Country (
        /*[out,retval]*/ enum WdCountry * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageDesignation (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalResolution (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_VerticalResolution (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_ProfileString (
        /*[in]*/ BSTR Section,
        /*[in]*/ BSTR Key,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ProfileString (
        /*[in]*/ BSTR Section,
        /*[in]*/ BSTR Key,
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_PrivateProfileString (
        /*[in]*/ BSTR FileName,
        /*[in]*/ BSTR Section,
        /*[in]*/ BSTR Key,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_PrivateProfileString (
        /*[in]*/ BSTR FileName,
        /*[in]*/ BSTR Section,
        /*[in]*/ BSTR Key,
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_MathCoprocessorInstalled (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_ComputerType (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_MacintoshName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_QuickDrawInstalled (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Cursor (
        /*[out,retval]*/ enum WdCursorType * prop ) = 0;
      virtual HRESULT __stdcall put_Cursor (
        /*[in]*/ enum WdCursorType prop ) = 0;
      virtual HRESULT __stdcall raw_MSInfo ( ) = 0;
      virtual HRESULT __stdcall raw_Connect (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT * Drive = &vtMissing,
        /*[in]*/ VARIANT * Password = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_CountryRegion (
        /*[out,retval]*/ enum WdCountry * prop ) = 0;
};

struct __declspec(uuid("00020933-0000-0000-c000-000000000046"))
OLEFormat : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetClassType,put=PutClassType))
    _bstr_t ClassType;
    __declspec(property(get=GetDisplayAsIcon,put=PutDisplayAsIcon))
    VARIANT_BOOL DisplayAsIcon;
    __declspec(property(get=GetIconName,put=PutIconName))
    _bstr_t IconName;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIconPath))
    _bstr_t IconPath;
    __declspec(property(get=GetIconIndex,put=PutIconIndex))
    long IconIndex;
    __declspec(property(get=GetIconLabel,put=PutIconLabel))
    _bstr_t IconLabel;
    __declspec(property(get=GetLabel))
    _bstr_t Label;
    __declspec(property(get=GetObject))
    IDispatchPtr Object;
    __declspec(property(get=GetPreserveFormattingOnUpdate,put=PutPreserveFormattingOnUpdate))
    VARIANT_BOOL PreserveFormattingOnUpdate;
    __declspec(property(get=GetProgID))
    _bstr_t ProgID;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetClassType ( );
    void PutClassType (
        _bstr_t prop );
    VARIANT_BOOL GetDisplayAsIcon ( );
    void PutDisplayAsIcon (
        VARIANT_BOOL prop );
    _bstr_t GetIconName ( );
    void PutIconName (
        _bstr_t prop );
    _bstr_t GetIconPath ( );
    long GetIconIndex ( );
    void PutIconIndex (
        long prop );
    _bstr_t GetIconLabel ( );
    void PutIconLabel (
        _bstr_t prop );
    _bstr_t GetLabel ( );
    IDispatchPtr GetObject ( );
    _bstr_t GetProgID ( );
    HRESULT Activate ( );
    HRESULT Edit ( );
    HRESULT Open ( );
    HRESULT DoVerb (
        VARIANT * VerbIndex = &vtMissing );
    HRESULT ConvertTo (
        VARIANT * ClassType = &vtMissing,
        VARIANT * DisplayAsIcon = &vtMissing,
        VARIANT * IconFileName = &vtMissing,
        VARIANT * IconIndex = &vtMissing,
        VARIANT * IconLabel = &vtMissing );
    HRESULT ActivateAs (
        _bstr_t ClassType );
    VARIANT_BOOL GetPreserveFormattingOnUpdate ( );
    void PutPreserveFormattingOnUpdate (
        VARIANT_BOOL prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_ClassType (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ClassType (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_DisplayAsIcon (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayAsIcon (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_IconName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_IconName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_IconPath (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_IconIndex (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_IconIndex (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_IconLabel (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_IconLabel (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Label (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Object (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_ProgID (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall raw_Activate ( ) = 0;
      virtual HRESULT __stdcall raw_Edit ( ) = 0;
      virtual HRESULT __stdcall raw_Open ( ) = 0;
      virtual HRESULT __stdcall raw_DoVerb (
        /*[in]*/ VARIANT * VerbIndex = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_ConvertTo (
        /*[in]*/ VARIANT * ClassType = &vtMissing,
        /*[in]*/ VARIANT * DisplayAsIcon = &vtMissing,
        /*[in]*/ VARIANT * IconFileName = &vtMissing,
        /*[in]*/ VARIANT * IconIndex = &vtMissing,
        /*[in]*/ VARIANT * IconLabel = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_ActivateAs (
        /*[in]*/ BSTR ClassType ) = 0;
      virtual HRESULT __stdcall get_PreserveFormattingOnUpdate (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PreserveFormattingOnUpdate (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("00020931-0000-0000-c000-000000000046"))
LinkFormat : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAutoUpdate,put=PutAutoUpdate))
    VARIANT_BOOL AutoUpdate;
    __declspec(property(get=GetSourceName))
    _bstr_t SourceName;
    __declspec(property(get=GetSourcePath))
    _bstr_t SourcePath;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetLocked,put=PutLocked))
    VARIANT_BOOL Locked;
    __declspec(property(get=GetType))
    enum WdLinkType Type;
    __declspec(property(get=GetSourceFullName,put=PutSourceFullName))
    _bstr_t SourceFullName;
    __declspec(property(get=GetSavePictureWithDocument,put=PutSavePictureWithDocument))
    VARIANT_BOOL SavePictureWithDocument;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetAutoUpdate ( );
    void PutAutoUpdate (
        VARIANT_BOOL prop );
    _bstr_t GetSourceName ( );
    _bstr_t GetSourcePath ( );
    VARIANT_BOOL GetLocked ( );
    void PutLocked (
        VARIANT_BOOL prop );
    enum WdLinkType GetType ( );
    _bstr_t GetSourceFullName ( );
    void PutSourceFullName (
        _bstr_t prop );
    VARIANT_BOOL GetSavePictureWithDocument ( );
    void PutSavePictureWithDocument (
        VARIANT_BOOL prop );
    HRESULT BreakLink ( );
    HRESULT Update ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_AutoUpdate (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoUpdate (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SourceName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_SourcePath (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdLinkType * prop ) = 0;
      virtual HRESULT __stdcall get_SourceFullName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_SourceFullName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_SavePictureWithDocument (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SavePictureWithDocument (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall raw_BreakLink ( ) = 0;
      virtual HRESULT __stdcall raw_Update ( ) = 0;
};

struct __declspec(uuid("0002092e-0000-0000-c000-000000000046"))
Browser : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetTarget,put=PutTarget))
    enum WdBrowseTarget Target;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    enum WdBrowseTarget GetTarget ( );
    void PutTarget (
        enum WdBrowseTarget prop );
    HRESULT Next ( );
    HRESULT Previous ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Target (
        /*[out,retval]*/ enum WdBrowseTarget * prop ) = 0;
      virtual HRESULT __stdcall put_Target (
        /*[in]*/ enum WdBrowseTarget prop ) = 0;
      virtual HRESULT __stdcall raw_Next ( ) = 0;
      virtual HRESULT __stdcall raw_Previous ( ) = 0;
};

struct __declspec(uuid("00020927-0000-0000-c000-000000000046"))
TextInput : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetValid))
    VARIANT_BOOL Valid;
    __declspec(property(get=GetDefault,put=PutDefault))
    _bstr_t Default;
    __declspec(property(get=GetType))
    enum WdTextFormFieldType Type;
    __declspec(property(get=GetFormat))
    _bstr_t Format;
    __declspec(property(get=GetWidth,put=PutWidth))
    long Width;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetValid ( );
    _bstr_t GetDefault ( );
    void PutDefault (
        _bstr_t prop );
    enum WdTextFormFieldType GetType ( );
    _bstr_t GetFormat ( );
    long GetWidth ( );
    void PutWidth (
        long prop );
    HRESULT Clear ( );
    HRESULT EditType (
        enum WdTextFormFieldType Type,
        VARIANT * Default = &vtMissing,
        VARIANT * Format = &vtMissing,
        VARIANT * Enabled = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Valid (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Default (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Default (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdTextFormFieldType * prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall raw_Clear ( ) = 0;
      virtual HRESULT __stdcall raw_EditType (
        /*[in]*/ enum WdTextFormFieldType Type,
        /*[in]*/ VARIANT * Default = &vtMissing,
        /*[in]*/ VARIANT * Format = &vtMissing,
        /*[in]*/ VARIANT * Enabled = &vtMissing ) = 0;
};

struct __declspec(uuid("00020926-0000-0000-c000-000000000046"))
CheckBox : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetValid))
    VARIANT_BOOL Valid;
    __declspec(property(get=GetAutoSize,put=PutAutoSize))
    VARIANT_BOOL AutoSize;
    __declspec(property(get=GetSize,put=PutSize))
    float Size;
    __declspec(property(get=GetDefault,put=PutDefault))
    VARIANT_BOOL Default;
    __declspec(property(get=GetValue,put=PutValue))
    VARIANT_BOOL Value;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetValid ( );
    VARIANT_BOOL GetAutoSize ( );
    void PutAutoSize (
        VARIANT_BOOL prop );
    float GetSize ( );
    void PutSize (
        float prop );
    VARIANT_BOOL GetDefault ( );
    void PutDefault (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetValue ( );
    void PutValue (
        VARIANT_BOOL prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Valid (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Size (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Default (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Default (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("00020923-0000-0000-c000-000000000046"))
ListEntry : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetIndex ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t prop );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("00020924-0000-0000-c000-000000000046"))
ListEntries : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    ListEntryPtr Item (
        VARIANT * Index );
    ListEntryPtr Add (
        _bstr_t Name,
        VARIANT * Index = &vtMissing );
    HRESULT Clear ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct ListEntry * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct ListEntry * * prop ) = 0;
      virtual HRESULT __stdcall raw_Clear ( ) = 0;
};

struct __declspec(uuid("00020925-0000-0000-c000-000000000046"))
DropDown : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetValid))
    VARIANT_BOOL Valid;
    __declspec(property(get=GetDefault,put=PutDefault))
    long Default;
    __declspec(property(get=GetValue,put=PutValue))
    long Value;
    __declspec(property(get=GetListEntries))
    ListEntriesPtr ListEntries;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetValid ( );
    long GetDefault ( );
    void PutDefault (
        long prop );
    long GetValue ( );
    void PutValue (
        long prop );
    ListEntriesPtr GetListEntries ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Valid (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Default (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Default (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ListEntries (
        /*[out,retval]*/ struct ListEntries * * prop ) = 0;
};

struct __declspec(uuid("0002091b-0000-0000-c000-000000000046"))
MailMergeFieldName : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    long GetIndex ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("0002091c-0000-0000-c000-000000000046"))
MailMergeFieldNames : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    MailMergeFieldNamePtr Item (
        VARIANT * Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct MailMergeFieldName * * prop ) = 0;
};

struct __declspec(uuid("00020919-0000-0000-c000-000000000046"))
MailMergeDataField : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetValue))
    _bstr_t Value;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetValue ( );
    _bstr_t GetName ( );
    long GetIndex ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("0002091a-0000-0000-c000-000000000046"))
MailMergeDataFields : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    MailMergeDataFieldPtr Item (
        VARIANT * Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct MailMergeDataField * * prop ) = 0;
};

struct __declspec(uuid("00020915-0000-0000-c000-000000000046"))
CustomLabel : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetTopMargin,put=PutTopMargin))
    float TopMargin;
    __declspec(property(get=GetSideMargin,put=PutSideMargin))
    float SideMargin;
    __declspec(property(get=GetHeight,put=PutHeight))
    float Height;
    __declspec(property(get=GetWidth,put=PutWidth))
    float Width;
    __declspec(property(get=GetVerticalPitch,put=PutVerticalPitch))
    float VerticalPitch;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetHorizontalPitch,put=PutHorizontalPitch))
    float HorizontalPitch;
    __declspec(property(get=GetNumberAcross,put=PutNumberAcross))
    long NumberAcross;
    __declspec(property(get=GetNumberDown,put=PutNumberDown))
    long NumberDown;
    __declspec(property(get=GetDotMatrix))
    VARIANT_BOOL DotMatrix;
    __declspec(property(get=GetPageSize,put=PutPageSize))
    enum WdCustomLabelPageSize PageSize;
    __declspec(property(get=GetValid))
    VARIANT_BOOL Valid;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetIndex ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t prop );
    float GetTopMargin ( );
    void PutTopMargin (
        float prop );
    float GetSideMargin ( );
    void PutSideMargin (
        float prop );
    float GetHeight ( );
    void PutHeight (
        float prop );
    float GetWidth ( );
    void PutWidth (
        float prop );
    float GetVerticalPitch ( );
    void PutVerticalPitch (
        float prop );
    float GetHorizontalPitch ( );
    void PutHorizontalPitch (
        float prop );
    long GetNumberAcross ( );
    void PutNumberAcross (
        long prop );
    long GetNumberDown ( );
    void PutNumberDown (
        long prop );
    VARIANT_BOOL GetDotMatrix ( );
    enum WdCustomLabelPageSize GetPageSize ( );
    void PutPageSize (
        enum WdCustomLabelPageSize prop );
    VARIANT_BOOL GetValid ( );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_TopMargin (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TopMargin (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_SideMargin (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SideMargin (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_VerticalPitch (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_VerticalPitch (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalPitch (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_HorizontalPitch (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_NumberAcross (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_NumberAcross (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_NumberDown (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_NumberDown (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DotMatrix (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_PageSize (
        /*[out,retval]*/ enum WdCustomLabelPageSize * prop ) = 0;
      virtual HRESULT __stdcall put_PageSize (
        /*[in]*/ enum WdCustomLabelPageSize prop ) = 0;
      virtual HRESULT __stdcall get_Valid (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("00020916-0000-0000-c000-000000000046"))
CustomLabels : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    CustomLabelPtr Item (
        VARIANT * Index );
    CustomLabelPtr Add (
        _bstr_t Name,
        VARIANT * DotMatrix = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct CustomLabel * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * DotMatrix,
        /*[out,retval]*/ struct CustomLabel * * prop ) = 0;
};

struct __declspec(uuid("000209b8-0000-0000-c000-000000000046"))
Dialog : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum WdWordDialog Type;
    __declspec(property(get=GetDefaultTab,put=PutDefaultTab))
    enum WdWordDialogTab DefaultTab;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCommandName))
    _bstr_t CommandName;
    __declspec(property(get=GetCommandBarId))
    long CommandBarId;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    enum WdWordDialogTab GetDefaultTab ( );
    void PutDefaultTab (
        enum WdWordDialogTab prop );
    enum WdWordDialog GetType ( );
    long Show (
        VARIANT * TimeOut = &vtMissing );
    long Display (
        VARIANT * TimeOut = &vtMissing );
    HRESULT Execute ( );
    HRESULT Update ( );
    _bstr_t GetCommandName ( );
    long GetCommandBarId ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultTab (
        /*[out,retval]*/ enum WdWordDialogTab * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultTab (
        /*[in]*/ enum WdWordDialogTab prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdWordDialog * prop ) = 0;
      virtual HRESULT __stdcall raw_Show (
        /*[in]*/ VARIANT * TimeOut,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Display (
        /*[in]*/ VARIANT * TimeOut,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Execute ( ) = 0;
      virtual HRESULT __stdcall raw_Update ( ) = 0;
      virtual HRESULT __stdcall get_CommandName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_CommandBarId (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("00020910-0000-0000-c000-000000000046"))
Dialogs : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    DialogPtr Item (
        enum WdWordDialog Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ enum WdWordDialog Index,
        /*[out,retval]*/ struct Dialog * * prop ) = 0;
};

struct __declspec(uuid("00020972-0000-0000-c000-000000000046"))
LineNumbering : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRestartMode,put=PutRestartMode))
    enum WdNumberingRule RestartMode;
    __declspec(property(get=GetStartingNumber,put=PutStartingNumber))
    long StartingNumber;
    __declspec(property(get=GetDistanceFromText,put=PutDistanceFromText))
    float DistanceFromText;
    __declspec(property(get=GetCountBy,put=PutCountBy))
    long CountBy;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetActive,put=PutActive))
    long Active;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    enum WdNumberingRule GetRestartMode ( );
    void PutRestartMode (
        enum WdNumberingRule prop );
    long GetStartingNumber ( );
    void PutStartingNumber (
        long prop );
    float GetDistanceFromText ( );
    void PutDistanceFromText (
        float prop );
    long GetCountBy ( );
    void PutCountBy (
        long prop );
    long GetActive ( );
    void PutActive (
        long prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_RestartMode (
        /*[out,retval]*/ enum WdNumberingRule * prop ) = 0;
      virtual HRESULT __stdcall put_RestartMode (
        /*[in]*/ enum WdNumberingRule prop ) = 0;
      virtual HRESULT __stdcall get_StartingNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_StartingNumber (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DistanceFromText (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceFromText (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_CountBy (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_CountBy (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Active (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Active (
        /*[in]*/ long prop ) = 0;
};

struct __declspec(uuid("00020974-0000-0000-c000-000000000046"))
TextColumn : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetWidth,put=PutWidth))
    float Width;
    __declspec(property(get=GetSpaceAfter,put=PutSpaceAfter))
    float SpaceAfter;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    float GetWidth ( );
    void PutWidth (
        float prop );
    float GetSpaceAfter ( );
    void PutSpaceAfter (
        float prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_SpaceAfter (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceAfter (
        /*[in]*/ float prop ) = 0;
};

struct __declspec(uuid("00020977-0000-0000-c000-000000000046"))
TableOfAuthoritiesCategory : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t prop );
    long GetIndex ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("00020976-0000-0000-c000-000000000046"))
TablesOfAuthoritiesCategories : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    TableOfAuthoritiesCategoryPtr Item (
        VARIANT * Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct TableOfAuthoritiesCategory * * prop ) = 0;
};

struct __declspec(uuid("00020979-0000-0000-c000-000000000046"))
CaptionLabel : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetBuiltIn))
    VARIANT_BOOL BuiltIn;
    __declspec(property(get=GetID))
    enum WdCaptionLabelID ID;
    __declspec(property(get=GetIncludeChapterNumber,put=PutIncludeChapterNumber))
    VARIANT_BOOL IncludeChapterNumber;
    __declspec(property(get=GetNumberStyle,put=PutNumberStyle))
    enum WdCaptionNumberStyle NumberStyle;
    __declspec(property(get=GetChapterStyleLevel,put=PutChapterStyleLevel))
    long ChapterStyleLevel;
    __declspec(property(get=GetSeparator,put=PutSeparator))
    enum WdSeparatorType Separator;
    __declspec(property(get=GetPosition,put=PutPosition))
    enum WdCaptionPosition Position;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    VARIANT_BOOL GetBuiltIn ( );
    enum WdCaptionLabelID GetID ( );
    VARIANT_BOOL GetIncludeChapterNumber ( );
    void PutIncludeChapterNumber (
        VARIANT_BOOL prop );
    enum WdCaptionNumberStyle GetNumberStyle ( );
    void PutNumberStyle (
        enum WdCaptionNumberStyle prop );
    long GetChapterStyleLevel ( );
    void PutChapterStyleLevel (
        long prop );
    enum WdSeparatorType GetSeparator ( );
    void PutSeparator (
        enum WdSeparatorType prop );
    enum WdCaptionPosition GetPosition ( );
    void PutPosition (
        enum WdCaptionPosition prop );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_BuiltIn (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ enum WdCaptionLabelID * prop ) = 0;
      virtual HRESULT __stdcall get_IncludeChapterNumber (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IncludeChapterNumber (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_NumberStyle (
        /*[out,retval]*/ enum WdCaptionNumberStyle * prop ) = 0;
      virtual HRESULT __stdcall put_NumberStyle (
        /*[in]*/ enum WdCaptionNumberStyle prop ) = 0;
      virtual HRESULT __stdcall get_ChapterStyleLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ChapterStyleLevel (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Separator (
        /*[out,retval]*/ enum WdSeparatorType * prop ) = 0;
      virtual HRESULT __stdcall put_Separator (
        /*[in]*/ enum WdSeparatorType prop ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ enum WdCaptionPosition * prop ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ enum WdCaptionPosition prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("00020978-0000-0000-c000-000000000046"))
CaptionLabels : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    CaptionLabelPtr Item (
        VARIANT * Index );
    CaptionLabelPtr Add (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct CaptionLabel * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct CaptionLabel * * prop ) = 0;
};

struct __declspec(uuid("0002097b-0000-0000-c000-000000000046"))
AutoCaption : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetAutoInsert,put=PutAutoInsert))
    VARIANT_BOOL AutoInsert;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    VARIANT_BOOL GetAutoInsert ( );
    void PutAutoInsert (
        VARIANT_BOOL prop );
    long GetIndex ( );
    _variant_t GetCaptionLabel ( );
    void PutCaptionLabel (
        VARIANT * prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_AutoInsert (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoInsert (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_CaptionLabel (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_CaptionLabel (
        /*[in]*/ VARIANT * prop ) = 0;
};

struct __declspec(uuid("0002097a-0000-0000-c000-000000000046"))
AutoCaptions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    AutoCaptionPtr Item (
        VARIANT * Index );
    HRESULT CancelAutoInsert ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct AutoCaption * * prop ) = 0;
      virtual HRESULT __stdcall raw_CancelAutoInsert ( ) = 0;
};

struct __declspec(uuid("0002097e-0000-0000-c000-000000000046"))
AddIn : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetPath))
    _bstr_t Path;
    __declspec(property(get=GetInstalled,put=PutInstalled))
    VARIANT_BOOL Installed;
    __declspec(property(get=GetCompiled))
    VARIANT_BOOL Compiled;
    __declspec(property(get=GetAutoload))
    VARIANT_BOOL Autoload;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    long GetIndex ( );
    _bstr_t GetPath ( );
    VARIANT_BOOL GetInstalled ( );
    void PutInstalled (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetCompiled ( );
    VARIANT_BOOL GetAutoload ( );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Installed (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Installed (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Compiled (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Autoload (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("0002097f-0000-0000-c000-000000000046"))
AddIns : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    AddInPtr Item (
        VARIANT * Index );
    AddInPtr Add (
        _bstr_t FileName,
        VARIANT * Install = &vtMissing );
    HRESULT Unload (
        VARIANT_BOOL RemoveFromList );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct AddIn * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT * Install,
        /*[out,retval]*/ struct AddIn * * prop ) = 0;
      virtual HRESULT __stdcall raw_Unload (
        /*[in]*/ VARIANT_BOOL RemoveFromList ) = 0;
};

struct __declspec(uuid("00020982-0000-0000-c000-000000000046"))
Task : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetLeft,put=PutLeft))
    long Left;
    __declspec(property(get=GetTop,put=PutTop))
    long Top;
    __declspec(property(get=GetWidth,put=PutWidth))
    long Width;
    __declspec(property(get=GetHeight,put=PutHeight))
    long Height;
    __declspec(property(get=GetWindowState,put=PutWindowState))
    enum WdWindowState WindowState;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    long GetLeft ( );
    void PutLeft (
        long prop );
    long GetTop ( );
    void PutTop (
        long prop );
    long GetWidth ( );
    void PutWidth (
        long prop );
    long GetHeight ( );
    void PutHeight (
        long prop );
    enum WdWindowState GetWindowState ( );
    void PutWindowState (
        enum WdWindowState prop );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL prop );
    HRESULT Activate (
        VARIANT * Wait = &vtMissing );
    HRESULT Close ( );
    HRESULT Move (
        long Left,
        long Top );
    HRESULT Resize (
        long Width,
        long Height );
    HRESULT SendWindowMessage (
        long Message,
        long wParam,
        long lParam );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_WindowState (
        /*[out,retval]*/ enum WdWindowState * prop ) = 0;
      virtual HRESULT __stdcall put_WindowState (
        /*[in]*/ enum WdWindowState prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall raw_Activate (
        /*[in]*/ VARIANT * Wait = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Close ( ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ long Left,
        /*[in]*/ long Top ) = 0;
      virtual HRESULT __stdcall raw_Resize (
        /*[in]*/ long Width,
        /*[in]*/ long Height ) = 0;
      virtual HRESULT __stdcall raw_SendWindowMessage (
        /*[in]*/ long Message,
        /*[in]*/ long wParam,
        /*[in]*/ long lParam ) = 0;
};

struct __declspec(uuid("00020983-0000-0000-c000-000000000046"))
Tasks : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    TaskPtr Item (
        VARIANT * Index );
    VARIANT_BOOL Exists (
        _bstr_t Name );
    HRESULT WORDExitWindows ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Task * * prop ) = 0;
      virtual HRESULT __stdcall raw_Exists (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_WORDExitWindows ( ) = 0;
};

struct __declspec(uuid("00020987-0000-0000-c000-000000000046"))
PageNumber : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetAlignment,put=PutAlignment))
    enum WdPageNumberAlignment Alignment;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetIndex ( );
    enum WdPageNumberAlignment GetAlignment ( );
    void PutAlignment (
        enum WdPageNumberAlignment prop );
    HRESULT Select ( );
    HRESULT Copy ( );
    HRESULT Cut ( );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum WdPageNumberAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum WdPageNumberAlignment prop ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
      virtual HRESULT __stdcall raw_Copy ( ) = 0;
      virtual HRESULT __stdcall raw_Cut ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("00020986-0000-0000-c000-000000000046"))
PageNumbers : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetNumberStyle,put=PutNumberStyle))
    enum WdPageNumberStyle NumberStyle;
    __declspec(property(get=GetIncludeChapterNumber,put=PutIncludeChapterNumber))
    VARIANT_BOOL IncludeChapterNumber;
    __declspec(property(get=GetHeadingLevelForChapter,put=PutHeadingLevelForChapter))
    long HeadingLevelForChapter;
    __declspec(property(get=GetChapterPageSeparator,put=PutChapterPageSeparator))
    enum WdSeparatorType ChapterPageSeparator;
    __declspec(property(get=GetRestartNumberingAtSection,put=PutRestartNumberingAtSection))
    VARIANT_BOOL RestartNumberingAtSection;
    __declspec(property(get=GetStartingNumber,put=PutStartingNumber))
    long StartingNumber;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetShowFirstPageNumber,put=PutShowFirstPageNumber))
    VARIANT_BOOL ShowFirstPageNumber;
    __declspec(property(get=GetDoubleQuote,put=PutDoubleQuote))
    VARIANT_BOOL DoubleQuote;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    enum WdPageNumberStyle GetNumberStyle ( );
    void PutNumberStyle (
        enum WdPageNumberStyle prop );
    VARIANT_BOOL GetIncludeChapterNumber ( );
    void PutIncludeChapterNumber (
        VARIANT_BOOL prop );
    long GetHeadingLevelForChapter ( );
    void PutHeadingLevelForChapter (
        long prop );
    enum WdSeparatorType GetChapterPageSeparator ( );
    void PutChapterPageSeparator (
        enum WdSeparatorType prop );
    VARIANT_BOOL GetRestartNumberingAtSection ( );
    void PutRestartNumberingAtSection (
        VARIANT_BOOL prop );
    long GetStartingNumber ( );
    void PutStartingNumber (
        long prop );
    VARIANT_BOOL GetShowFirstPageNumber ( );
    void PutShowFirstPageNumber (
        VARIANT_BOOL prop );
    PageNumberPtr Item (
        long Index );
    PageNumberPtr Add (
        VARIANT * PageNumberAlignment = &vtMissing,
        VARIANT * FirstPage = &vtMissing );
    VARIANT_BOOL GetDoubleQuote ( );
    void PutDoubleQuote (
        VARIANT_BOOL prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_NumberStyle (
        /*[out,retval]*/ enum WdPageNumberStyle * prop ) = 0;
      virtual HRESULT __stdcall put_NumberStyle (
        /*[in]*/ enum WdPageNumberStyle prop ) = 0;
      virtual HRESULT __stdcall get_IncludeChapterNumber (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IncludeChapterNumber (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HeadingLevelForChapter (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_HeadingLevelForChapter (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ChapterPageSeparator (
        /*[out,retval]*/ enum WdSeparatorType * prop ) = 0;
      virtual HRESULT __stdcall put_ChapterPageSeparator (
        /*[in]*/ enum WdSeparatorType prop ) = 0;
      virtual HRESULT __stdcall get_RestartNumberingAtSection (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RestartNumberingAtSection (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_StartingNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_StartingNumber (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ShowFirstPageNumber (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowFirstPageNumber (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct PageNumber * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT * PageNumberAlignment,
        /*[in]*/ VARIANT * FirstPage,
        /*[out,retval]*/ struct PageNumber * * prop ) = 0;
      virtual HRESULT __stdcall get_DoubleQuote (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DoubleQuote (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("0002098b-0000-0000-c000-000000000046"))
HeadingStyle : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetLevel,put=PutLevel))
    short Level;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _variant_t GetStyle ( );
    void PutStyle (
        VARIANT * prop );
    short GetLevel ( );
    void PutLevel (
        short prop );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Level (
        /*[out,retval]*/ short * prop ) = 0;
      virtual HRESULT __stdcall put_Level (
        /*[in]*/ short prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("0002098a-0000-0000-c000-000000000046"))
HeadingStyles : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    HeadingStylePtr Item (
        long Index );
    HeadingStylePtr Add (
        VARIANT * Style,
        short Level );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct HeadingStyle * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT * Style,
        /*[in]*/ short Level,
        /*[out,retval]*/ struct HeadingStyle * * prop ) = 0;
};

struct __declspec(uuid("00020998-0000-0000-c000-000000000046"))
KeyBinding : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCommand))
    _bstr_t Command;
    __declspec(property(get=GetKeyString))
    _bstr_t KeyString;
    __declspec(property(get=GetProtected))
    VARIANT_BOOL Protected;
    __declspec(property(get=GetKeyCategory))
    enum WdKeyCategory KeyCategory;
    __declspec(property(get=GetKeyCode))
    long KeyCode;
    __declspec(property(get=GetKeyCode2))
    long KeyCode2;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCommandParameter))
    _bstr_t CommandParameter;
    __declspec(property(get=GetContext))
    IDispatchPtr Context;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetCommand ( );
    _bstr_t GetKeyString ( );
    VARIANT_BOOL GetProtected ( );
    enum WdKeyCategory GetKeyCategory ( );
    long GetKeyCode ( );
    long GetKeyCode2 ( );
    _bstr_t GetCommandParameter ( );
    IDispatchPtr GetContext ( );
    HRESULT Clear ( );
    HRESULT Disable ( );
    HRESULT Execute ( );
    HRESULT Rebind (
        enum WdKeyCategory KeyCategory,
        _bstr_t Command,
        VARIANT * CommandParameter = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Command (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_KeyString (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Protected (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_KeyCategory (
        /*[out,retval]*/ enum WdKeyCategory * prop ) = 0;
      virtual HRESULT __stdcall get_KeyCode (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_KeyCode2 (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_CommandParameter (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Context (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Clear ( ) = 0;
      virtual HRESULT __stdcall raw_Disable ( ) = 0;
      virtual HRESULT __stdcall raw_Execute ( ) = 0;
      virtual HRESULT __stdcall raw_Rebind (
        /*[in]*/ enum WdKeyCategory KeyCategory,
        /*[in]*/ BSTR Command,
        /*[in]*/ VARIANT * CommandParameter = &vtMissing ) = 0;
};

struct __declspec(uuid("00020996-0000-0000-c000-000000000046"))
KeyBindings : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetContext))
    IDispatchPtr Context;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    IDispatchPtr GetContext ( );
    KeyBindingPtr Item (
        long Index );
    KeyBindingPtr Add (
        enum WdKeyCategory KeyCategory,
        _bstr_t Command,
        long KeyCode,
        VARIANT * KeyCode2 = &vtMissing,
        VARIANT * CommandParameter = &vtMissing );
    HRESULT ClearAll ( );
    KeyBindingPtr Key (
        long KeyCode,
        VARIANT * KeyCode2 = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Context (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct KeyBinding * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ enum WdKeyCategory KeyCategory,
        /*[in]*/ BSTR Command,
        /*[in]*/ long KeyCode,
        /*[in]*/ VARIANT * KeyCode2,
        /*[in]*/ VARIANT * CommandParameter,
        /*[out,retval]*/ struct KeyBinding * * prop ) = 0;
      virtual HRESULT __stdcall raw_ClearAll ( ) = 0;
      virtual HRESULT __stdcall raw_Key (
        /*[in]*/ long KeyCode,
        /*[in]*/ VARIANT * KeyCode2,
        /*[out,retval]*/ struct KeyBinding * * prop ) = 0;
};

struct __declspec(uuid("00020997-0000-0000-c000-000000000046"))
KeysBoundTo : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetKeyCategory))
    enum WdKeyCategory KeyCategory;
    __declspec(property(get=GetCommand))
    _bstr_t Command;
    __declspec(property(get=GetCommandParameter))
    _bstr_t CommandParameter;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetContext))
    IDispatchPtr Context;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    enum WdKeyCategory GetKeyCategory ( );
    _bstr_t GetCommand ( );
    _bstr_t GetCommandParameter ( );
    IDispatchPtr GetContext ( );
    KeyBindingPtr Item (
        long Index );
    KeyBindingPtr Key (
        long KeyCode,
        VARIANT * KeyCode2 = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_KeyCategory (
        /*[out,retval]*/ enum WdKeyCategory * prop ) = 0;
      virtual HRESULT __stdcall get_Command (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_CommandParameter (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Context (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct KeyBinding * * prop ) = 0;
      virtual HRESULT __stdcall raw_Key (
        /*[in]*/ long KeyCode,
        /*[in]*/ VARIANT * KeyCode2,
        /*[out,retval]*/ struct KeyBinding * * prop ) = 0;
};

struct __declspec(uuid("00020999-0000-0000-c000-000000000046"))
FileConverter : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFormatName))
    _bstr_t FormatName;
    __declspec(property(get=GetClassName))
    _bstr_t ClassName;
    __declspec(property(get=GetSaveFormat))
    long SaveFormat;
    __declspec(property(get=GetOpenFormat))
    long OpenFormat;
    __declspec(property(get=GetCanSave))
    VARIANT_BOOL CanSave;
    __declspec(property(get=GetCanOpen))
    VARIANT_BOOL CanOpen;
    __declspec(property(get=GetPath))
    _bstr_t Path;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetExtensions))
    _bstr_t Extensions;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetFormatName ( );
    _bstr_t GetClassName ( );
    long GetSaveFormat ( );
    long GetOpenFormat ( );
    VARIANT_BOOL GetCanSave ( );
    VARIANT_BOOL GetCanOpen ( );
    _bstr_t GetPath ( );
    _bstr_t GetName ( );
    _bstr_t GetExtensions ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_FormatName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_ClassName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_SaveFormat (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_OpenFormat (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_CanSave (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_CanOpen (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Extensions (
        /*[out,retval]*/ BSTR * prop ) = 0;
};

struct __declspec(uuid("0002099a-0000-0000-c000-000000000046"))
FileConverters : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetConvertMacWordChevrons,put=PutConvertMacWordChevrons))
    enum WdChevronConvertRule ConvertMacWordChevrons;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    enum WdChevronConvertRule GetConvertMacWordChevrons ( );
    void PutConvertMacWordChevrons (
        enum WdChevronConvertRule prop );
    FileConverterPtr Item (
        VARIANT * Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_ConvertMacWordChevrons (
        /*[out,retval]*/ enum WdChevronConvertRule * prop ) = 0;
      virtual HRESULT __stdcall put_ConvertMacWordChevrons (
        /*[in]*/ enum WdChevronConvertRule prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct FileConverter * * prop ) = 0;
};

struct __declspec(uuid("0002099b-0000-0000-c000-000000000046"))
SynonymInfo : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetWord))
    _bstr_t Word;
    __declspec(property(get=GetFound))
    VARIANT_BOOL Found;
    __declspec(property(get=GetMeaningCount))
    long MeaningCount;
    __declspec(property(get=GetMeaningList))
    _variant_t MeaningList;
    __declspec(property(get=GetPartOfSpeechList))
    _variant_t PartOfSpeechList;
    __declspec(property(get=GetSynonymList))
    _variant_t SynonymList[];
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetAntonymList))
    _variant_t AntonymList;
    __declspec(property(get=GetRelatedExpressionList))
    _variant_t RelatedExpressionList;
    __declspec(property(get=GetRelatedWordList))
    _variant_t RelatedWordList;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetWord ( );
    VARIANT_BOOL GetFound ( );
    long GetMeaningCount ( );
    _variant_t GetMeaningList ( );
    _variant_t GetPartOfSpeechList ( );
    _variant_t GetSynonymList (
        VARIANT * Meaning );
    _variant_t GetAntonymList ( );
    _variant_t GetRelatedExpressionList ( );
    _variant_t GetRelatedWordList ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Word (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Found (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_MeaningCount (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_MeaningList (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_PartOfSpeechList (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_SynonymList (
        /*[in]*/ VARIANT * Meaning,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_AntonymList (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_RelatedExpressionList (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_RelatedWordList (
        /*[out,retval]*/ VARIANT * prop ) = 0;
};

struct __declspec(uuid("000209a6-0000-0000-c000-000000000046"))
Zoom : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetPercentage,put=PutPercentage))
    long Percentage;
    __declspec(property(get=GetPageFit,put=PutPageFit))
    enum WdPageFit PageFit;
    __declspec(property(get=GetPageRows,put=PutPageRows))
    long PageRows;
    __declspec(property(get=GetPageColumns,put=PutPageColumns))
    long PageColumns;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetPercentage ( );
    void PutPercentage (
        long prop );
    enum WdPageFit GetPageFit ( );
    void PutPageFit (
        enum WdPageFit prop );
    long GetPageRows ( );
    void PutPageRows (
        long prop );
    long GetPageColumns ( );
    void PutPageColumns (
        long prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Percentage (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Percentage (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_PageFit (
        /*[out,retval]*/ enum WdPageFit * prop ) = 0;
      virtual HRESULT __stdcall put_PageFit (
        /*[in]*/ enum WdPageFit prop ) = 0;
      virtual HRESULT __stdcall get_PageRows (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_PageRows (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_PageColumns (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_PageColumns (
        /*[in]*/ long prop ) = 0;
};

struct __declspec(uuid("000209a7-0000-0000-c000-000000000046"))
Zooms : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    ZoomPtr Item (
        enum WdViewType Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ enum WdViewType Index,
        /*[out,retval]*/ struct Zoom * * prop ) = 0;
};

struct __declspec(uuid("000209ab-0000-0000-c000-000000000046"))
SpellingSuggestion : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
};

struct __declspec(uuid("000209aa-0000-0000-c000-000000000046"))
SpellingSuggestions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetSpellingErrorType))
    enum WdSpellingErrorType SpellingErrorType;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    enum WdSpellingErrorType GetSpellingErrorType ( );
    SpellingSuggestionPtr Item (
        long Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_SpellingErrorType (
        /*[out,retval]*/ enum WdSpellingErrorType * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct SpellingSuggestion * * prop ) = 0;
};

struct __declspec(uuid("000209ad-0000-0000-c000-000000000046"))
Dictionary : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetPath))
    _bstr_t Path;
    __declspec(property(get=GetLanguageID,put=PutLanguageID))
    enum WdLanguageID LanguageID;
    __declspec(property(get=GetReadOnly))
    VARIANT_BOOL ReadOnly;
    __declspec(property(get=GetType))
    enum WdDictionaryType Type;
    __declspec(property(get=GetLanguageSpecific,put=PutLanguageSpecific))
    VARIANT_BOOL LanguageSpecific;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    _bstr_t GetPath ( );
    enum WdLanguageID GetLanguageID ( );
    void PutLanguageID (
        enum WdLanguageID prop );
    VARIANT_BOOL GetReadOnly ( );
    enum WdDictionaryType GetType ( );
    VARIANT_BOOL GetLanguageSpecific ( );
    void PutLanguageSpecific (
        VARIANT_BOOL prop );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageID (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageID (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_ReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdDictionaryType * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageSpecific (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageSpecific (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("0002096d-0000-0000-c000-000000000046"))
Language : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetNameLocal))
    _bstr_t NameLocal;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetID))
    enum WdLanguageID ID;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetActiveGrammarDictionary))
    DictionaryPtr ActiveGrammarDictionary;
    __declspec(property(get=GetActiveHyphenationDictionary))
    DictionaryPtr ActiveHyphenationDictionary;
    __declspec(property(get=GetActiveSpellingDictionary))
    DictionaryPtr ActiveSpellingDictionary;
    __declspec(property(get=GetActiveThesaurusDictionary))
    DictionaryPtr ActiveThesaurusDictionary;
    __declspec(property(get=GetDefaultWritingStyle,put=PutDefaultWritingStyle))
    _bstr_t DefaultWritingStyle;
    __declspec(property(get=GetWritingStyleList))
    _variant_t WritingStyleList;
    __declspec(property(get=GetSpellingDictionaryType,put=PutSpellingDictionaryType))
    enum WdDictionaryType SpellingDictionaryType;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    enum WdLanguageID GetID ( );
    _bstr_t GetNameLocal ( );
    _bstr_t GetName ( );
    DictionaryPtr GetActiveGrammarDictionary ( );
    DictionaryPtr GetActiveHyphenationDictionary ( );
    DictionaryPtr GetActiveSpellingDictionary ( );
    DictionaryPtr GetActiveThesaurusDictionary ( );
    _bstr_t GetDefaultWritingStyle ( );
    void PutDefaultWritingStyle (
        _bstr_t prop );
    _variant_t GetWritingStyleList ( );
    enum WdDictionaryType GetSpellingDictionaryType ( );
    void PutSpellingDictionaryType (
        enum WdDictionaryType prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall get_NameLocal (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveGrammarDictionary (
        /*[out,retval]*/ struct Dictionary * * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveHyphenationDictionary (
        /*[out,retval]*/ struct Dictionary * * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveSpellingDictionary (
        /*[out,retval]*/ struct Dictionary * * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveThesaurusDictionary (
        /*[out,retval]*/ struct Dictionary * * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultWritingStyle (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultWritingStyle (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_WritingStyleList (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_SpellingDictionaryType (
        /*[out,retval]*/ enum WdDictionaryType * prop ) = 0;
      virtual HRESULT __stdcall put_SpellingDictionaryType (
        /*[in]*/ enum WdDictionaryType prop ) = 0;
};

struct __declspec(uuid("0002096e-0000-0000-c000-000000000046"))
Languages : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    LanguagePtr Item (
        VARIANT * Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Language * * prop ) = 0;
};

struct __declspec(uuid("000209ac-0000-0000-c000-000000000046"))
Dictionaries : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetMaximum))
    long Maximum;
    __declspec(property(get=GetActiveCustomDictionary,put=PutActiveCustomDictionary))
    DictionaryPtr ActiveCustomDictionary;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    long GetMaximum ( );
    DictionaryPtr GetActiveCustomDictionary ( );
    void PutActiveCustomDictionary (
        struct Dictionary * prop );
    DictionaryPtr Item (
        VARIANT * Index );
    DictionaryPtr Add (
        _bstr_t FileName );
    HRESULT ClearAll ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Maximum (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveCustomDictionary (
        /*[out,retval]*/ struct Dictionary * * prop ) = 0;
      virtual HRESULT __stdcall put_ActiveCustomDictionary (
        /*[in]*/ struct Dictionary * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Dictionary * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ struct Dictionary * * prop ) = 0;
      virtual HRESULT __stdcall raw_ClearAll ( ) = 0;
};

struct __declspec(uuid("000209e0-0000-0000-c000-000000000046"))
HangulHanjaConversionDictionaries : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetMaximum))
    long Maximum;
    __declspec(property(get=GetActiveCustomDictionary,put=PutActiveCustomDictionary))
    DictionaryPtr ActiveCustomDictionary;
    __declspec(property(get=GetBuiltinDictionary))
    DictionaryPtr BuiltinDictionary;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    long GetMaximum ( );
    DictionaryPtr GetActiveCustomDictionary ( );
    void PutActiveCustomDictionary (
        struct Dictionary * prop );
    DictionaryPtr GetBuiltinDictionary ( );
    DictionaryPtr Item (
        VARIANT * Index );
    DictionaryPtr Add (
        _bstr_t FileName );
    HRESULT ClearAll ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Maximum (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveCustomDictionary (
        /*[out,retval]*/ struct Dictionary * * prop ) = 0;
      virtual HRESULT __stdcall put_ActiveCustomDictionary (
        /*[in]*/ struct Dictionary * prop ) = 0;
      virtual HRESULT __stdcall get_BuiltinDictionary (
        /*[out,retval]*/ struct Dictionary * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Dictionary * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ struct Dictionary * * prop ) = 0;
      virtual HRESULT __stdcall raw_ClearAll ( ) = 0;
};

struct __declspec(uuid("000209af-0000-0000-c000-000000000046"))
ReadabilityStatistic : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetValue))
    float Value;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    float GetValue ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ float * prop ) = 0;
};

struct __declspec(uuid("000209ae-0000-0000-c000-000000000046"))
ReadabilityStatistics : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    ReadabilityStatisticPtr Item (
        VARIANT * Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct ReadabilityStatistic * * prop ) = 0;
};

struct __declspec(uuid("000209ba-0000-0000-c000-000000000046"))
MailMessage : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    HRESULT CheckName ( );
    HRESULT Delete ( );
    HRESULT DisplayMoveDialog ( );
    HRESULT DisplayProperties ( );
    HRESULT DisplaySelectNamesDialog ( );
    HRESULT Forward ( );
    HRESULT GoToNext ( );
    HRESULT GoToPrevious ( );
    HRESULT Reply ( );
    HRESULT ReplyAll ( );
    HRESULT ToggleHeader ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_CheckName ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_DisplayMoveDialog ( ) = 0;
      virtual HRESULT __stdcall raw_DisplayProperties ( ) = 0;
      virtual HRESULT __stdcall raw_DisplaySelectNamesDialog ( ) = 0;
      virtual HRESULT __stdcall raw_Forward ( ) = 0;
      virtual HRESULT __stdcall raw_GoToNext ( ) = 0;
      virtual HRESULT __stdcall raw_GoToPrevious ( ) = 0;
      virtual HRESULT __stdcall raw_Reply ( ) = 0;
      virtual HRESULT __stdcall raw_ReplyAll ( ) = 0;
      virtual HRESULT __stdcall raw_ToggleHeader ( ) = 0;
};

struct __declspec(uuid("000209bd-0000-0000-c000-000000000046"))
Mailer : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetSender))
    _bstr_t Sender;
    __declspec(property(get=GetSendDateTime))
    DATE SendDateTime;
    __declspec(property(get=GetReceived))
    VARIANT_BOOL Received;
    __declspec(property(get=GetSubject,put=PutSubject))
    _bstr_t Subject;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _variant_t GetBCCRecipients ( );
    void PutBCCRecipients (
        VARIANT * prop );
    _variant_t GetCCRecipients ( );
    void PutCCRecipients (
        VARIANT * prop );
    _variant_t GetRecipients ( );
    void PutRecipients (
        VARIANT * prop );
    _variant_t GetEnclosures ( );
    void PutEnclosures (
        VARIANT * prop );
    _bstr_t GetSender ( );
    DATE GetSendDateTime ( );
    VARIANT_BOOL GetReceived ( );
    _bstr_t GetSubject ( );
    void PutSubject (
        _bstr_t prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_BCCRecipients (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_BCCRecipients (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_CCRecipients (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_CCRecipients (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Recipients (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Recipients (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Enclosures (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Enclosures (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Sender (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_SendDateTime (
        /*[out,retval]*/ DATE * prop ) = 0;
      virtual HRESULT __stdcall get_Received (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR prop ) = 0;
};

struct __declspec(uuid("000209c3-0000-0000-c000-000000000046"))
WrapFormat : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetType,put=PutType))
    enum WdWrapType Type;
    __declspec(property(get=GetSide,put=PutSide))
    enum WdWrapSideType Side;
    __declspec(property(get=GetDistanceTop,put=PutDistanceTop))
    float DistanceTop;
    __declspec(property(get=GetDistanceBottom,put=PutDistanceBottom))
    float DistanceBottom;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetDistanceLeft,put=PutDistanceLeft))
    float DistanceLeft;
    __declspec(property(get=GetDistanceRight,put=PutDistanceRight))
    float DistanceRight;
    __declspec(property(get=GetAllowOverlap,put=PutAllowOverlap))
    long AllowOverlap;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    enum WdWrapType GetType ( );
    void PutType (
        enum WdWrapType prop );
    enum WdWrapSideType GetSide ( );
    void PutSide (
        enum WdWrapSideType prop );
    float GetDistanceTop ( );
    void PutDistanceTop (
        float prop );
    float GetDistanceBottom ( );
    void PutDistanceBottom (
        float prop );
    float GetDistanceLeft ( );
    void PutDistanceLeft (
        float prop );
    float GetDistanceRight ( );
    void PutDistanceRight (
        float prop );
    long GetAllowOverlap ( );
    void PutAllowOverlap (
        long prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdWrapType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum WdWrapType prop ) = 0;
      virtual HRESULT __stdcall get_Side (
        /*[out,retval]*/ enum WdWrapSideType * prop ) = 0;
      virtual HRESULT __stdcall put_Side (
        /*[in]*/ enum WdWrapSideType prop ) = 0;
      virtual HRESULT __stdcall get_DistanceTop (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceTop (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_DistanceBottom (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceBottom (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_DistanceLeft (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceLeft (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_DistanceRight (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceRight (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_AllowOverlap (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AllowOverlap (
        /*[in]*/ long prop ) = 0;
};

struct __declspec(uuid("000209d2-0000-0000-c000-000000000046"))
HangulAndAlphabetException : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetIndex ( );
    _bstr_t GetName ( );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("000209d1-0000-0000-c000-000000000046"))
HangulAndAlphabetExceptions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    HangulAndAlphabetExceptionPtr Item (
        VARIANT * Index );
    HangulAndAlphabetExceptionPtr Add (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct HangulAndAlphabetException * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct HangulAndAlphabetException * * prop ) = 0;
};

struct __declspec(uuid("000209c4-0000-0000-c000-000000000046"))
Adjustments : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem,put=PutItem))
    float Item[];
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    float GetItem (
        long Index );
    void PutItem (
        long Index,
        float prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Item (
        /*[in]*/ long Index,
        /*[in]*/ float prop ) = 0;
};

struct __declspec(uuid("000209c5-0000-0000-c000-000000000046"))
CalloutFormat : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetAccent,put=PutAccent))
    enum Office::MsoTriState Accent;
    __declspec(property(get=GetAngle,put=PutAngle))
    enum Office::MsoCalloutAngleType Angle;
    __declspec(property(get=GetAutoAttach,put=PutAutoAttach))
    enum Office::MsoTriState AutoAttach;
    __declspec(property(get=GetAutoLength))
    enum Office::MsoTriState AutoLength;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetBorder,put=PutBorder))
    enum Office::MsoTriState Border;
    __declspec(property(get=GetDrop))
    float Drop;
    __declspec(property(get=GetDropType))
    enum Office::MsoCalloutDropType DropType;
    __declspec(property(get=GetGap,put=PutGap))
    float Gap;
    __declspec(property(get=GetLength))
    float Length;
    __declspec(property(get=GetType,put=PutType))
    enum Office::MsoCalloutType Type;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    enum Office::MsoTriState GetAccent ( );
    void PutAccent (
        enum Office::MsoTriState prop );
    enum Office::MsoCalloutAngleType GetAngle ( );
    void PutAngle (
        enum Office::MsoCalloutAngleType prop );
    enum Office::MsoTriState GetAutoAttach ( );
    void PutAutoAttach (
        enum Office::MsoTriState prop );
    enum Office::MsoTriState GetAutoLength ( );
    enum Office::MsoTriState GetBorder ( );
    void PutBorder (
        enum Office::MsoTriState prop );
    float GetDrop ( );
    enum Office::MsoCalloutDropType GetDropType ( );
    float GetGap ( );
    void PutGap (
        float prop );
    float GetLength ( );
    enum Office::MsoCalloutType GetType ( );
    void PutType (
        enum Office::MsoCalloutType prop );
    HRESULT AutomaticLength ( );
    HRESULT CustomDrop (
        float Drop );
    HRESULT CustomLength (
        float Length );
    HRESULT PresetDrop (
        enum Office::MsoCalloutDropType DropType );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Accent (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_Accent (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ enum Office::MsoCalloutAngleType * prop ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ enum Office::MsoCalloutAngleType prop ) = 0;
      virtual HRESULT __stdcall get_AutoAttach (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_AutoAttach (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_AutoLength (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_Border (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_Border (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_Drop (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall get_DropType (
        /*[out,retval]*/ enum Office::MsoCalloutDropType * prop ) = 0;
      virtual HRESULT __stdcall get_Gap (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Gap (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Length (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoCalloutType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum Office::MsoCalloutType prop ) = 0;
      virtual HRESULT __stdcall raw_AutomaticLength ( ) = 0;
      virtual HRESULT __stdcall raw_CustomDrop (
        /*[in]*/ float Drop ) = 0;
      virtual HRESULT __stdcall raw_CustomLength (
        /*[in]*/ float Length ) = 0;
      virtual HRESULT __stdcall raw_PresetDrop (
        /*[in]*/ enum Office::MsoCalloutDropType DropType ) = 0;
};

struct __declspec(uuid("000209cb-0000-0000-c000-000000000046"))
PictureFormat : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetBrightness,put=PutBrightness))
    float Brightness;
    __declspec(property(get=GetColorType,put=PutColorType))
    enum Office::MsoPictureColorType ColorType;
    __declspec(property(get=GetContrast,put=PutContrast))
    float Contrast;
    __declspec(property(get=GetCropBottom,put=PutCropBottom))
    float CropBottom;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetCropLeft,put=PutCropLeft))
    float CropLeft;
    __declspec(property(get=GetCropRight,put=PutCropRight))
    float CropRight;
    __declspec(property(get=GetCropTop,put=PutCropTop))
    float CropTop;
    __declspec(property(get=GetTransparencyColor,put=PutTransparencyColor))
    long TransparencyColor;
    __declspec(property(get=GetTransparentBackground,put=PutTransparentBackground))
    enum Office::MsoTriState TransparentBackground;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    float GetBrightness ( );
    void PutBrightness (
        float prop );
    enum Office::MsoPictureColorType GetColorType ( );
    void PutColorType (
        enum Office::MsoPictureColorType prop );
    float GetContrast ( );
    void PutContrast (
        float prop );
    float GetCropBottom ( );
    void PutCropBottom (
        float prop );
    float GetCropLeft ( );
    void PutCropLeft (
        float prop );
    float GetCropRight ( );
    void PutCropRight (
        float prop );
    float GetCropTop ( );
    void PutCropTop (
        float prop );
    long GetTransparencyColor ( );
    void PutTransparencyColor (
        long prop );
    enum Office::MsoTriState GetTransparentBackground ( );
    void PutTransparentBackground (
        enum Office::MsoTriState prop );
    HRESULT IncrementBrightness (
        float Increment );
    HRESULT IncrementContrast (
        float Increment );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Brightness (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Brightness (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ColorType (
        /*[out,retval]*/ enum Office::MsoPictureColorType * prop ) = 0;
      virtual HRESULT __stdcall put_ColorType (
        /*[in]*/ enum Office::MsoPictureColorType prop ) = 0;
      virtual HRESULT __stdcall get_Contrast (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Contrast (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_CropBottom (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CropBottom (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_CropLeft (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CropLeft (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_CropRight (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CropRight (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_CropTop (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CropTop (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_TransparencyColor (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_TransparencyColor (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_TransparentBackground (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_TransparentBackground (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall raw_IncrementBrightness (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall raw_IncrementContrast (
        /*[in]*/ float Increment ) = 0;
};

struct __declspec(uuid("000209cd-0000-0000-c000-000000000046"))
ShapeNode : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetEditingType))
    enum Office::MsoEditingType EditingType;
    __declspec(property(get=GetPoints))
    _variant_t Points;
    __declspec(property(get=GetSegmentType))
    enum Office::MsoSegmentType SegmentType;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    enum Office::MsoEditingType GetEditingType ( );
    _variant_t GetPoints ( );
    enum Office::MsoSegmentType GetSegmentType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_EditingType (
        /*[out,retval]*/ enum Office::MsoEditingType * prop ) = 0;
      virtual HRESULT __stdcall get_Points (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_SegmentType (
        /*[out,retval]*/ enum Office::MsoSegmentType * prop ) = 0;
};

struct __declspec(uuid("000209ce-0000-0000-c000-000000000046"))
ShapeNodes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    HRESULT Delete (
        long Index );
    ShapeNodePtr Item (
        VARIANT * Index );
    HRESULT SetEditingType (
        long Index,
        enum Office::MsoEditingType EditingType );
    HRESULT SetPosition (
        long Index,
        float X1,
        float Y1 );
    HRESULT SetSegmentType (
        long Index,
        enum Office::MsoSegmentType SegmentType );
    HRESULT Insert (
        long Index,
        enum Office::MsoSegmentType SegmentType,
        enum Office::MsoEditingType EditingType,
        float X1,
        float Y1,
        float X2,
        float Y2,
        float X3,
        float Y3 );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete (
        /*[in]*/ long Index ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct ShapeNode * * prop ) = 0;
      virtual HRESULT __stdcall raw_SetEditingType (
        /*[in]*/ long Index,
        /*[in]*/ enum Office::MsoEditingType EditingType ) = 0;
      virtual HRESULT __stdcall raw_SetPosition (
        /*[in]*/ long Index,
        /*[in]*/ float X1,
        /*[in]*/ float Y1 ) = 0;
      virtual HRESULT __stdcall raw_SetSegmentType (
        /*[in]*/ long Index,
        /*[in]*/ enum Office::MsoSegmentType SegmentType ) = 0;
      virtual HRESULT __stdcall raw_Insert (
        /*[in]*/ long Index,
        /*[in]*/ enum Office::MsoSegmentType SegmentType,
        /*[in]*/ enum Office::MsoEditingType EditingType,
        /*[in]*/ float X1,
        /*[in]*/ float Y1,
        /*[in]*/ float X2,
        /*[in]*/ float Y2,
        /*[in]*/ float X3,
        /*[in]*/ float Y3 ) = 0;
};

struct __declspec(uuid("000209cf-0000-0000-c000-000000000046"))
TextEffectFormat : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetAlignment,put=PutAlignment))
    enum Office::MsoTextEffectAlignment Alignment;
    __declspec(property(get=GetFontBold,put=PutFontBold))
    enum Office::MsoTriState FontBold;
    __declspec(property(get=GetFontItalic,put=PutFontItalic))
    enum Office::MsoTriState FontItalic;
    __declspec(property(get=GetFontName,put=PutFontName))
    _bstr_t FontName;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetFontSize,put=PutFontSize))
    float FontSize;
    __declspec(property(get=GetKernedPairs,put=PutKernedPairs))
    enum Office::MsoTriState KernedPairs;
    __declspec(property(get=GetNormalizedHeight,put=PutNormalizedHeight))
    enum Office::MsoTriState NormalizedHeight;
    __declspec(property(get=GetPresetShape,put=PutPresetShape))
    enum Office::MsoPresetTextEffectShape PresetShape;
    __declspec(property(get=GetPresetTextEffect,put=PutPresetTextEffect))
    enum Office::MsoPresetTextEffect PresetTextEffect;
    __declspec(property(get=GetRotatedChars,put=PutRotatedChars))
    enum Office::MsoTriState RotatedChars;
    __declspec(property(get=GetText,put=PutText))
    _bstr_t Text;
    __declspec(property(get=GetTracking,put=PutTracking))
    float Tracking;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    enum Office::MsoTextEffectAlignment GetAlignment ( );
    void PutAlignment (
        enum Office::MsoTextEffectAlignment prop );
    enum Office::MsoTriState GetFontBold ( );
    void PutFontBold (
        enum Office::MsoTriState prop );
    enum Office::MsoTriState GetFontItalic ( );
    void PutFontItalic (
        enum Office::MsoTriState prop );
    _bstr_t GetFontName ( );
    void PutFontName (
        _bstr_t prop );
    float GetFontSize ( );
    void PutFontSize (
        float prop );
    enum Office::MsoTriState GetKernedPairs ( );
    void PutKernedPairs (
        enum Office::MsoTriState prop );
    enum Office::MsoTriState GetNormalizedHeight ( );
    void PutNormalizedHeight (
        enum Office::MsoTriState prop );
    enum Office::MsoPresetTextEffectShape GetPresetShape ( );
    void PutPresetShape (
        enum Office::MsoPresetTextEffectShape prop );
    enum Office::MsoPresetTextEffect GetPresetTextEffect ( );
    void PutPresetTextEffect (
        enum Office::MsoPresetTextEffect prop );
    enum Office::MsoTriState GetRotatedChars ( );
    void PutRotatedChars (
        enum Office::MsoTriState prop );
    _bstr_t GetText ( );
    void PutText (
        _bstr_t prop );
    float GetTracking ( );
    void PutTracking (
        float prop );
    HRESULT ToggleVerticalText ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum Office::MsoTextEffectAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum Office::MsoTextEffectAlignment prop ) = 0;
      virtual HRESULT __stdcall get_FontBold (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_FontBold (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_FontItalic (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_FontItalic (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_FontName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_FontName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_FontSize (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_FontSize (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_KernedPairs (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_KernedPairs (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_NormalizedHeight (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_NormalizedHeight (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_PresetShape (
        /*[out,retval]*/ enum Office::MsoPresetTextEffectShape * prop ) = 0;
      virtual HRESULT __stdcall put_PresetShape (
        /*[in]*/ enum Office::MsoPresetTextEffectShape prop ) = 0;
      virtual HRESULT __stdcall get_PresetTextEffect (
        /*[out,retval]*/ enum Office::MsoPresetTextEffect * prop ) = 0;
      virtual HRESULT __stdcall put_PresetTextEffect (
        /*[in]*/ enum Office::MsoPresetTextEffect prop ) = 0;
      virtual HRESULT __stdcall get_RotatedChars (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_RotatedChars (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Tracking (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Tracking (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall raw_ToggleVerticalText ( ) = 0;
};

struct __declspec(uuid("000209f6-0000-0000-c000-000000000046"))
DocumentEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT New ( );
    HRESULT Open ( );
    HRESULT Close ( );
};

struct __declspec(uuid("00020906-0000-0000-c000-000000000046"))
Document;
    // [ default ] interface _Document
    // [ source ] dispinterface DocumentEvents
    // [ default, source ] dispinterface DocumentEvents2

struct __declspec(uuid("0002096c-0000-0000-c000-000000000046"))
Documents : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _DocumentPtr Item (
        VARIANT * Index );
    HRESULT Close (
        VARIANT * SaveChanges = &vtMissing,
        VARIANT * OriginalFormat = &vtMissing,
        VARIANT * RouteDocument = &vtMissing );
    _DocumentPtr AddOld (
        VARIANT * Template = &vtMissing,
        VARIANT * NewTemplate = &vtMissing );
    _DocumentPtr OpenOld (
        VARIANT * FileName,
        VARIANT * ConfirmConversions = &vtMissing,
        VARIANT * ReadOnly = &vtMissing,
        VARIANT * AddToRecentFiles = &vtMissing,
        VARIANT * PasswordDocument = &vtMissing,
        VARIANT * PasswordTemplate = &vtMissing,
        VARIANT * Revert = &vtMissing,
        VARIANT * WritePasswordDocument = &vtMissing,
        VARIANT * WritePasswordTemplate = &vtMissing,
        VARIANT * Format = &vtMissing );
    HRESULT Save (
        VARIANT * NoPrompt = &vtMissing,
        VARIANT * OriginalFormat = &vtMissing );
    _DocumentPtr Add (
        VARIANT * Template = &vtMissing,
        VARIANT * NewTemplate = &vtMissing,
        VARIANT * DocumentType = &vtMissing,
        VARIANT * Visible = &vtMissing );
    _DocumentPtr Open2000 (
        VARIANT * FileName,
        VARIANT * ConfirmConversions = &vtMissing,
        VARIANT * ReadOnly = &vtMissing,
        VARIANT * AddToRecentFiles = &vtMissing,
        VARIANT * PasswordDocument = &vtMissing,
        VARIANT * PasswordTemplate = &vtMissing,
        VARIANT * Revert = &vtMissing,
        VARIANT * WritePasswordDocument = &vtMissing,
        VARIANT * WritePasswordTemplate = &vtMissing,
        VARIANT * Format = &vtMissing,
        VARIANT * Encoding = &vtMissing,
        VARIANT * Visible = &vtMissing );
    HRESULT CheckOut (
        _bstr_t FileName );
    VARIANT_BOOL CanCheckOut (
        _bstr_t FileName );
    _DocumentPtr Open2002 (
        VARIANT * FileName,
        VARIANT * ConfirmConversions = &vtMissing,
        VARIANT * ReadOnly = &vtMissing,
        VARIANT * AddToRecentFiles = &vtMissing,
        VARIANT * PasswordDocument = &vtMissing,
        VARIANT * PasswordTemplate = &vtMissing,
        VARIANT * Revert = &vtMissing,
        VARIANT * WritePasswordDocument = &vtMissing,
        VARIANT * WritePasswordTemplate = &vtMissing,
        VARIANT * Format = &vtMissing,
        VARIANT * Encoding = &vtMissing,
        VARIANT * Visible = &vtMissing,
        VARIANT * OpenAndRepair = &vtMissing,
        VARIANT * DocumentDirection = &vtMissing,
        VARIANT * NoEncodingDialog = &vtMissing );
    _DocumentPtr Open (
        VARIANT * FileName,
        VARIANT * ConfirmConversions = &vtMissing,
        VARIANT * ReadOnly = &vtMissing,
        VARIANT * AddToRecentFiles = &vtMissing,
        VARIANT * PasswordDocument = &vtMissing,
        VARIANT * PasswordTemplate = &vtMissing,
        VARIANT * Revert = &vtMissing,
        VARIANT * WritePasswordDocument = &vtMissing,
        VARIANT * WritePasswordTemplate = &vtMissing,
        VARIANT * Format = &vtMissing,
        VARIANT * Encoding = &vtMissing,
        VARIANT * Visible = &vtMissing,
        VARIANT * OpenAndRepair = &vtMissing,
        VARIANT * DocumentDirection = &vtMissing,
        VARIANT * NoEncodingDialog = &vtMissing,
        VARIANT * XMLTransform = &vtMissing );
    _DocumentPtr OpenNoRepairDialog (
        VARIANT * FileName,
        VARIANT * ConfirmConversions = &vtMissing,
        VARIANT * ReadOnly = &vtMissing,
        VARIANT * AddToRecentFiles = &vtMissing,
        VARIANT * PasswordDocument = &vtMissing,
        VARIANT * PasswordTemplate = &vtMissing,
        VARIANT * Revert = &vtMissing,
        VARIANT * WritePasswordDocument = &vtMissing,
        VARIANT * WritePasswordTemplate = &vtMissing,
        VARIANT * Format = &vtMissing,
        VARIANT * Encoding = &vtMissing,
        VARIANT * Visible = &vtMissing,
        VARIANT * OpenAndRepair = &vtMissing,
        VARIANT * DocumentDirection = &vtMissing,
        VARIANT * NoEncodingDialog = &vtMissing,
        VARIANT * XMLTransform = &vtMissing );
    _DocumentPtr AddBlogDocument (
        _bstr_t ProviderID,
        _bstr_t PostURL,
        _bstr_t BlogName,
        _bstr_t PostID );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall raw_Close (
        /*[in]*/ VARIANT * SaveChanges = &vtMissing,
        /*[in]*/ VARIANT * OriginalFormat = &vtMissing,
        /*[in]*/ VARIANT * RouteDocument = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_AddOld (
        /*[in]*/ VARIANT * Template,
        /*[in]*/ VARIANT * NewTemplate,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall raw_OpenOld (
        /*[in]*/ VARIANT * FileName,
        /*[in]*/ VARIANT * ConfirmConversions,
        /*[in]*/ VARIANT * ReadOnly,
        /*[in]*/ VARIANT * AddToRecentFiles,
        /*[in]*/ VARIANT * PasswordDocument,
        /*[in]*/ VARIANT * PasswordTemplate,
        /*[in]*/ VARIANT * Revert,
        /*[in]*/ VARIANT * WritePasswordDocument,
        /*[in]*/ VARIANT * WritePasswordTemplate,
        /*[in]*/ VARIANT * Format,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall raw_Save (
        /*[in]*/ VARIANT * NoPrompt = &vtMissing,
        /*[in]*/ VARIANT * OriginalFormat = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT * Template,
        /*[in]*/ VARIANT * NewTemplate,
        /*[in]*/ VARIANT * DocumentType,
        /*[in]*/ VARIANT * Visible,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall raw_Open2000 (
        /*[in]*/ VARIANT * FileName,
        /*[in]*/ VARIANT * ConfirmConversions,
        /*[in]*/ VARIANT * ReadOnly,
        /*[in]*/ VARIANT * AddToRecentFiles,
        /*[in]*/ VARIANT * PasswordDocument,
        /*[in]*/ VARIANT * PasswordTemplate,
        /*[in]*/ VARIANT * Revert,
        /*[in]*/ VARIANT * WritePasswordDocument,
        /*[in]*/ VARIANT * WritePasswordTemplate,
        /*[in]*/ VARIANT * Format,
        /*[in]*/ VARIANT * Encoding,
        /*[in]*/ VARIANT * Visible,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall raw_CheckOut (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_CanCheckOut (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_Open2002 (
        /*[in]*/ VARIANT * FileName,
        /*[in]*/ VARIANT * ConfirmConversions,
        /*[in]*/ VARIANT * ReadOnly,
        /*[in]*/ VARIANT * AddToRecentFiles,
        /*[in]*/ VARIANT * PasswordDocument,
        /*[in]*/ VARIANT * PasswordTemplate,
        /*[in]*/ VARIANT * Revert,
        /*[in]*/ VARIANT * WritePasswordDocument,
        /*[in]*/ VARIANT * WritePasswordTemplate,
        /*[in]*/ VARIANT * Format,
        /*[in]*/ VARIANT * Encoding,
        /*[in]*/ VARIANT * Visible,
        /*[in]*/ VARIANT * OpenAndRepair,
        /*[in]*/ VARIANT * DocumentDirection,
        /*[in]*/ VARIANT * NoEncodingDialog,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall raw_Open (
        /*[in]*/ VARIANT * FileName,
        /*[in]*/ VARIANT * ConfirmConversions,
        /*[in]*/ VARIANT * ReadOnly,
        /*[in]*/ VARIANT * AddToRecentFiles,
        /*[in]*/ VARIANT * PasswordDocument,
        /*[in]*/ VARIANT * PasswordTemplate,
        /*[in]*/ VARIANT * Revert,
        /*[in]*/ VARIANT * WritePasswordDocument,
        /*[in]*/ VARIANT * WritePasswordTemplate,
        /*[in]*/ VARIANT * Format,
        /*[in]*/ VARIANT * Encoding,
        /*[in]*/ VARIANT * Visible,
        /*[in]*/ VARIANT * OpenAndRepair,
        /*[in]*/ VARIANT * DocumentDirection,
        /*[in]*/ VARIANT * NoEncodingDialog,
        /*[in]*/ VARIANT * XMLTransform,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall raw_OpenNoRepairDialog (
        /*[in]*/ VARIANT * FileName,
        /*[in]*/ VARIANT * ConfirmConversions,
        /*[in]*/ VARIANT * ReadOnly,
        /*[in]*/ VARIANT * AddToRecentFiles,
        /*[in]*/ VARIANT * PasswordDocument,
        /*[in]*/ VARIANT * PasswordTemplate,
        /*[in]*/ VARIANT * Revert,
        /*[in]*/ VARIANT * WritePasswordDocument,
        /*[in]*/ VARIANT * WritePasswordTemplate,
        /*[in]*/ VARIANT * Format,
        /*[in]*/ VARIANT * Encoding,
        /*[in]*/ VARIANT * Visible,
        /*[in]*/ VARIANT * OpenAndRepair,
        /*[in]*/ VARIANT * DocumentDirection,
        /*[in]*/ VARIANT * NoEncodingDialog,
        /*[in]*/ VARIANT * XMLTransform,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddBlogDocument (
        /*[in]*/ BSTR ProviderID,
        /*[in]*/ BSTR PostURL,
        /*[in]*/ BSTR BlogName,
        /*[in]*/ BSTR PostID,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
};

struct __declspec(uuid("00020964-0000-0000-c000-000000000046"))
RecentFile : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetReadOnly,put=PutReadOnly))
    VARIANT_BOOL ReadOnly;
    __declspec(property(get=GetPath))
    _bstr_t Path;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    long GetIndex ( );
    VARIANT_BOOL GetReadOnly ( );
    void PutReadOnly (
        VARIANT_BOOL prop );
    _bstr_t GetPath ( );
    _DocumentPtr Open ( );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_ReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ReadOnly (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall raw_Open (
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("00020963-0000-0000-c000-000000000046"))
RecentFiles : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetMaximum,put=PutMaximum))
    long Maximum;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    long GetMaximum ( );
    void PutMaximum (
        long prop );
    RecentFilePtr Item (
        long Index );
    RecentFilePtr Add (
        VARIANT * Document,
        VARIANT * ReadOnly = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Maximum (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Maximum (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct RecentFile * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT * Document,
        /*[in]*/ VARIANT * ReadOnly,
        /*[out,retval]*/ struct RecentFile * * prop ) = 0;
};

struct __declspec(uuid("00020917-0000-0000-c000-000000000046"))
MailingLabel : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDefaultPrintBarCode,put=PutDefaultPrintBarCode))
    VARIANT_BOOL DefaultPrintBarCode;
    __declspec(property(get=GetDefaultLaserTray,put=PutDefaultLaserTray))
    enum WdPaperTray DefaultLaserTray;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCustomLabels))
    CustomLabelsPtr CustomLabels;
    __declspec(property(get=GetDefaultLabelName,put=PutDefaultLabelName))
    _bstr_t DefaultLabelName;
    __declspec(property(get=GetVertical,put=PutVertical))
    VARIANT_BOOL Vertical;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetDefaultPrintBarCode ( );
    void PutDefaultPrintBarCode (
        VARIANT_BOOL prop );
    enum WdPaperTray GetDefaultLaserTray ( );
    void PutDefaultLaserTray (
        enum WdPaperTray prop );
    CustomLabelsPtr GetCustomLabels ( );
    _bstr_t GetDefaultLabelName ( );
    void PutDefaultLabelName (
        _bstr_t prop );
    _DocumentPtr CreateNewDocument2000 (
        VARIANT * Name = &vtMissing,
        VARIANT * Address = &vtMissing,
        VARIANT * AutoText = &vtMissing,
        VARIANT * ExtractAddress = &vtMissing,
        VARIANT * LaserTray = &vtMissing );
    HRESULT PrintOut2000 (
        VARIANT * Name = &vtMissing,
        VARIANT * Address = &vtMissing,
        VARIANT * ExtractAddress = &vtMissing,
        VARIANT * LaserTray = &vtMissing,
        VARIANT * SingleLabel = &vtMissing,
        VARIANT * Row = &vtMissing,
        VARIANT * Column = &vtMissing );
    HRESULT LabelOptions ( );
    _DocumentPtr CreateNewDocument (
        VARIANT * Name = &vtMissing,
        VARIANT * Address = &vtMissing,
        VARIANT * AutoText = &vtMissing,
        VARIANT * ExtractAddress = &vtMissing,
        VARIANT * LaserTray = &vtMissing,
        VARIANT * PrintEPostageLabel = &vtMissing,
        VARIANT * Vertical = &vtMissing );
    HRESULT PrintOut (
        VARIANT * Name = &vtMissing,
        VARIANT * Address = &vtMissing,
        VARIANT * ExtractAddress = &vtMissing,
        VARIANT * LaserTray = &vtMissing,
        VARIANT * SingleLabel = &vtMissing,
        VARIANT * Row = &vtMissing,
        VARIANT * Column = &vtMissing,
        VARIANT * PrintEPostageLabel = &vtMissing,
        VARIANT * Vertical = &vtMissing );
    VARIANT_BOOL GetVertical ( );
    void PutVertical (
        VARIANT_BOOL prop );
    _DocumentPtr CreateNewDocumentByID (
        VARIANT * LabelID = &vtMissing,
        VARIANT * Address = &vtMissing,
        VARIANT * AutoText = &vtMissing,
        VARIANT * ExtractAddress = &vtMissing,
        VARIANT * LaserTray = &vtMissing,
        VARIANT * PrintEPostageLabel = &vtMissing,
        VARIANT * Vertical = &vtMissing );
    HRESULT PrintOutByID (
        VARIANT * LabelID = &vtMissing,
        VARIANT * Address = &vtMissing,
        VARIANT * ExtractAddress = &vtMissing,
        VARIANT * LaserTray = &vtMissing,
        VARIANT * SingleLabel = &vtMissing,
        VARIANT * Row = &vtMissing,
        VARIANT * Column = &vtMissing,
        VARIANT * PrintEPostageLabel = &vtMissing,
        VARIANT * Vertical = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultPrintBarCode (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultPrintBarCode (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DefaultLaserTray (
        /*[out,retval]*/ enum WdPaperTray * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultLaserTray (
        /*[in]*/ enum WdPaperTray prop ) = 0;
      virtual HRESULT __stdcall get_CustomLabels (
        /*[out,retval]*/ struct CustomLabels * * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultLabelName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultLabelName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall raw_CreateNewDocument2000 (
        /*[in]*/ VARIANT * Name,
        /*[in]*/ VARIANT * Address,
        /*[in]*/ VARIANT * AutoText,
        /*[in]*/ VARIANT * ExtractAddress,
        /*[in]*/ VARIANT * LaserTray,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall raw_PrintOut2000 (
        /*[in]*/ VARIANT * Name = &vtMissing,
        /*[in]*/ VARIANT * Address = &vtMissing,
        /*[in]*/ VARIANT * ExtractAddress = &vtMissing,
        /*[in]*/ VARIANT * LaserTray = &vtMissing,
        /*[in]*/ VARIANT * SingleLabel = &vtMissing,
        /*[in]*/ VARIANT * Row = &vtMissing,
        /*[in]*/ VARIANT * Column = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_LabelOptions ( ) = 0;
      virtual HRESULT __stdcall raw_CreateNewDocument (
        /*[in]*/ VARIANT * Name,
        /*[in]*/ VARIANT * Address,
        /*[in]*/ VARIANT * AutoText,
        /*[in]*/ VARIANT * ExtractAddress,
        /*[in]*/ VARIANT * LaserTray,
        /*[in]*/ VARIANT * PrintEPostageLabel,
        /*[in]*/ VARIANT * Vertical,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall raw_PrintOut (
        /*[in]*/ VARIANT * Name = &vtMissing,
        /*[in]*/ VARIANT * Address = &vtMissing,
        /*[in]*/ VARIANT * ExtractAddress = &vtMissing,
        /*[in]*/ VARIANT * LaserTray = &vtMissing,
        /*[in]*/ VARIANT * SingleLabel = &vtMissing,
        /*[in]*/ VARIANT * Row = &vtMissing,
        /*[in]*/ VARIANT * Column = &vtMissing,
        /*[in]*/ VARIANT * PrintEPostageLabel = &vtMissing,
        /*[in]*/ VARIANT * Vertical = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_Vertical (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Vertical (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall raw_CreateNewDocumentByID (
        /*[in]*/ VARIANT * LabelID,
        /*[in]*/ VARIANT * Address,
        /*[in]*/ VARIANT * AutoText,
        /*[in]*/ VARIANT * ExtractAddress,
        /*[in]*/ VARIANT * LaserTray,
        /*[in]*/ VARIANT * PrintEPostageLabel,
        /*[in]*/ VARIANT * Vertical,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall raw_PrintOutByID (
        /*[in]*/ VARIANT * LabelID = &vtMissing,
        /*[in]*/ VARIANT * Address = &vtMissing,
        /*[in]*/ VARIANT * ExtractAddress = &vtMissing,
        /*[in]*/ VARIANT * LaserTray = &vtMissing,
        /*[in]*/ VARIANT * SingleLabel = &vtMissing,
        /*[in]*/ VARIANT * Row = &vtMissing,
        /*[in]*/ VARIANT * Column = &vtMissing,
        /*[in]*/ VARIANT * PrintEPostageLabel = &vtMissing,
        /*[in]*/ VARIANT * Vertical = &vtMissing ) = 0;
};

struct __declspec(uuid("000209b4-0000-0000-c000-000000000046"))
Version : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetSavedBy))
    _bstr_t SavedBy;
    __declspec(property(get=GetComment))
    _bstr_t Comment;
    __declspec(property(get=GetDate))
    DATE Date;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetSavedBy ( );
    _bstr_t GetComment ( );
    DATE GetDate ( );
    long GetIndex ( );
    HRESULT OpenOld ( );
    HRESULT Delete ( );
    _DocumentPtr Open ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_SavedBy (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Comment (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Date (
        /*[out,retval]*/ DATE * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_OpenOld ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Open (
        /*[out,retval]*/ struct _Document * * prop ) = 0;
};

struct __declspec(uuid("000209b3-0000-0000-c000-000000000046"))
Versions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetAutoVersion,put=PutAutoVersion))
    enum WdAutoVersions AutoVersion;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    enum WdAutoVersions GetAutoVersion ( );
    void PutAutoVersion (
        enum WdAutoVersions prop );
    VersionPtr Item (
        long Index );
    HRESULT Save (
        VARIANT * Comment = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_AutoVersion (
        /*[out,retval]*/ enum WdAutoVersions * prop ) = 0;
      virtual HRESULT __stdcall put_AutoVersion (
        /*[in]*/ enum WdAutoVersions prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Version * * prop ) = 0;
      virtual HRESULT __stdcall raw_Save (
        /*[in]*/ VARIANT * Comment = &vtMissing ) = 0;
};

struct __declspec(uuid("000209f5-0000-0000-c000-000000000046"))
Font;
    // [ default ] interface _Font

struct __declspec(uuid("000209f4-0000-0000-c000-000000000046"))
ParagraphFormat;
    // [ default ] interface _ParagraphFormat

struct __declspec(uuid("000209f3-0000-0000-c000-000000000046"))
OCXEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT GotFocus ( );
    HRESULT LostFocus ( );
};

struct __declspec(uuid("000209f2-0000-0000-c000-000000000046"))
OLEControl;
    // [ default ] interface _OLEControl
    // [ default, source ] dispinterface OCXEvents

struct __declspec(uuid("000209f1-0000-0000-c000-000000000046"))
LetterContent;
    // [ default ] interface _LetterContent

struct __declspec(uuid("000209a1-0000-0000-c000-000000000046"))
_LetterContent : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetSenderName,put=PutSenderName))
    _bstr_t SenderName;
    __declspec(property(get=GetClosing,put=PutClosing))
    _bstr_t Closing;
    __declspec(property(get=GetSenderCompany,put=PutSenderCompany))
    _bstr_t SenderCompany;
    __declspec(property(get=GetSenderJobTitle,put=PutSenderJobTitle))
    _bstr_t SenderJobTitle;
    __declspec(property(get=GetSenderInitials,put=PutSenderInitials))
    _bstr_t SenderInitials;
    __declspec(property(get=GetInfoBlock,put=PutInfoBlock))
    VARIANT_BOOL InfoBlock;
    __declspec(property(get=GetRecipientCode,put=PutRecipientCode))
    _bstr_t RecipientCode;
    __declspec(property(get=GetRecipientGender,put=PutRecipientGender))
    enum WdSalutationGender RecipientGender;
    __declspec(property(get=GetReturnAddressShortForm,put=PutReturnAddressShortForm))
    _bstr_t ReturnAddressShortForm;
    __declspec(property(get=GetDuplicate))
    _LetterContentPtr Duplicate;
    __declspec(property(get=GetSenderCity,put=PutSenderCity))
    _bstr_t SenderCity;
    __declspec(property(get=GetSenderCode,put=PutSenderCode))
    _bstr_t SenderCode;
    __declspec(property(get=GetSenderGender,put=PutSenderGender))
    enum WdSalutationGender SenderGender;
    __declspec(property(get=GetSenderReference,put=PutSenderReference))
    _bstr_t SenderReference;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetDateFormat,put=PutDateFormat))
    _bstr_t DateFormat;
    __declspec(property(get=GetIncludeHeaderFooter,put=PutIncludeHeaderFooter))
    VARIANT_BOOL IncludeHeaderFooter;
    __declspec(property(get=GetPageDesign,put=PutPageDesign))
    _bstr_t PageDesign;
    __declspec(property(get=GetLetterStyle,put=PutLetterStyle))
    enum WdLetterStyle LetterStyle;
    __declspec(property(get=GetLetterhead,put=PutLetterhead))
    VARIANT_BOOL Letterhead;
    __declspec(property(get=GetLetterheadLocation,put=PutLetterheadLocation))
    enum WdLetterheadLocation LetterheadLocation;
    __declspec(property(get=GetLetterheadSize,put=PutLetterheadSize))
    float LetterheadSize;
    __declspec(property(get=GetRecipientName,put=PutRecipientName))
    _bstr_t RecipientName;
    __declspec(property(get=GetRecipientAddress,put=PutRecipientAddress))
    _bstr_t RecipientAddress;
    __declspec(property(get=GetSalutation,put=PutSalutation))
    _bstr_t Salutation;
    __declspec(property(get=GetSalutationType,put=PutSalutationType))
    enum WdSalutationType SalutationType;
    __declspec(property(get=GetRecipientReference,put=PutRecipientReference))
    _bstr_t RecipientReference;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetMailingInstructions,put=PutMailingInstructions))
    _bstr_t MailingInstructions;
    __declspec(property(get=GetAttentionLine,put=PutAttentionLine))
    _bstr_t AttentionLine;
    __declspec(property(get=GetSubject,put=PutSubject))
    _bstr_t Subject;
    __declspec(property(get=GetEnclosureNumber,put=PutEnclosureNumber))
    long EnclosureNumber;
    __declspec(property(get=GetCCList,put=PutCCList))
    _bstr_t CCList;
    __declspec(property(get=GetReturnAddress,put=PutReturnAddress))
    _bstr_t ReturnAddress;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _LetterContentPtr GetDuplicate ( );
    _bstr_t GetDateFormat ( );
    void PutDateFormat (
        _bstr_t prop );
    VARIANT_BOOL GetIncludeHeaderFooter ( );
    void PutIncludeHeaderFooter (
        VARIANT_BOOL prop );
    _bstr_t GetPageDesign ( );
    void PutPageDesign (
        _bstr_t prop );
    enum WdLetterStyle GetLetterStyle ( );
    void PutLetterStyle (
        enum WdLetterStyle prop );
    VARIANT_BOOL GetLetterhead ( );
    void PutLetterhead (
        VARIANT_BOOL prop );
    enum WdLetterheadLocation GetLetterheadLocation ( );
    void PutLetterheadLocation (
        enum WdLetterheadLocation prop );
    float GetLetterheadSize ( );
    void PutLetterheadSize (
        float prop );
    _bstr_t GetRecipientName ( );
    void PutRecipientName (
        _bstr_t prop );
    _bstr_t GetRecipientAddress ( );
    void PutRecipientAddress (
        _bstr_t prop );
    _bstr_t GetSalutation ( );
    void PutSalutation (
        _bstr_t prop );
    enum WdSalutationType GetSalutationType ( );
    void PutSalutationType (
        enum WdSalutationType prop );
    _bstr_t GetRecipientReference ( );
    void PutRecipientReference (
        _bstr_t prop );
    _bstr_t GetMailingInstructions ( );
    void PutMailingInstructions (
        _bstr_t prop );
    _bstr_t GetAttentionLine ( );
    void PutAttentionLine (
        _bstr_t prop );
    _bstr_t GetSubject ( );
    void PutSubject (
        _bstr_t prop );
    long GetEnclosureNumber ( );
    void PutEnclosureNumber (
        long prop );
    _bstr_t GetCCList ( );
    void PutCCList (
        _bstr_t prop );
    _bstr_t GetReturnAddress ( );
    void PutReturnAddress (
        _bstr_t prop );
    _bstr_t GetSenderName ( );
    void PutSenderName (
        _bstr_t prop );
    _bstr_t GetClosing ( );
    void PutClosing (
        _bstr_t prop );
    _bstr_t GetSenderCompany ( );
    void PutSenderCompany (
        _bstr_t prop );
    _bstr_t GetSenderJobTitle ( );
    void PutSenderJobTitle (
        _bstr_t prop );
    _bstr_t GetSenderInitials ( );
    void PutSenderInitials (
        _bstr_t prop );
    VARIANT_BOOL GetInfoBlock ( );
    void PutInfoBlock (
        VARIANT_BOOL prop );
    _bstr_t GetRecipientCode ( );
    void PutRecipientCode (
        _bstr_t prop );
    enum WdSalutationGender GetRecipientGender ( );
    void PutRecipientGender (
        enum WdSalutationGender prop );
    _bstr_t GetReturnAddressShortForm ( );
    void PutReturnAddressShortForm (
        _bstr_t prop );
    _bstr_t GetSenderCity ( );
    void PutSenderCity (
        _bstr_t prop );
    _bstr_t GetSenderCode ( );
    void PutSenderCode (
        _bstr_t prop );
    enum WdSalutationGender GetSenderGender ( );
    void PutSenderGender (
        enum WdSalutationGender prop );
    _bstr_t GetSenderReference ( );
    void PutSenderReference (
        _bstr_t prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Duplicate (
        /*[out,retval]*/ struct _LetterContent * * prop ) = 0;
      virtual HRESULT __stdcall get_DateFormat (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_DateFormat (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_IncludeHeaderFooter (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IncludeHeaderFooter (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PageDesign (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_PageDesign (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_LetterStyle (
        /*[out,retval]*/ enum WdLetterStyle * prop ) = 0;
      virtual HRESULT __stdcall put_LetterStyle (
        /*[in]*/ enum WdLetterStyle prop ) = 0;
      virtual HRESULT __stdcall get_Letterhead (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Letterhead (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_LetterheadLocation (
        /*[out,retval]*/ enum WdLetterheadLocation * prop ) = 0;
      virtual HRESULT __stdcall put_LetterheadLocation (
        /*[in]*/ enum WdLetterheadLocation prop ) = 0;
      virtual HRESULT __stdcall get_LetterheadSize (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LetterheadSize (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RecipientName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_RecipientName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_RecipientAddress (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_RecipientAddress (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Salutation (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Salutation (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_SalutationType (
        /*[out,retval]*/ enum WdSalutationType * prop ) = 0;
      virtual HRESULT __stdcall put_SalutationType (
        /*[in]*/ enum WdSalutationType prop ) = 0;
      virtual HRESULT __stdcall get_RecipientReference (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_RecipientReference (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_MailingInstructions (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_MailingInstructions (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_AttentionLine (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_AttentionLine (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_EnclosureNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_EnclosureNumber (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_CCList (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_CCList (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ReturnAddress (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ReturnAddress (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_SenderName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_SenderName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Closing (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Closing (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_SenderCompany (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_SenderCompany (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_SenderJobTitle (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_SenderJobTitle (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_SenderInitials (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_SenderInitials (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_InfoBlock (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_InfoBlock (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RecipientCode (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_RecipientCode (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_RecipientGender (
        /*[out,retval]*/ enum WdSalutationGender * prop ) = 0;
      virtual HRESULT __stdcall put_RecipientGender (
        /*[in]*/ enum WdSalutationGender prop ) = 0;
      virtual HRESULT __stdcall get_ReturnAddressShortForm (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ReturnAddressShortForm (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_SenderCity (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_SenderCity (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_SenderCode (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_SenderCode (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_SenderGender (
        /*[out,retval]*/ enum WdSalutationGender * prop ) = 0;
      virtual HRESULT __stdcall put_SenderGender (
        /*[in]*/ enum WdSalutationGender prop ) = 0;
      virtual HRESULT __stdcall get_SenderReference (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_SenderReference (
        /*[in]*/ BSTR prop ) = 0;
};

struct __declspec(uuid("000209f7-0001-0000-c000-000000000046"))
IApplicationEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Startup ( );
    HRESULT Quit ( );
    HRESULT DocumentChange ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Startup ( ) = 0;
      virtual HRESULT __stdcall raw_Quit ( ) = 0;
      virtual HRESULT __stdcall raw_DocumentChange ( ) = 0;
};

struct __declspec(uuid("000209fe-0000-0000-c000-000000000046"))
ApplicationEvents2 : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Quit ( );
    HRESULT DocumentChange ( );
    HRESULT DocumentOpen (
        struct _Document * Doc );
    HRESULT DocumentBeforeClose (
        struct _Document * Doc,
        VARIANT_BOOL * Cancel );
    HRESULT DocumentBeforePrint (
        struct _Document * Doc,
        VARIANT_BOOL * Cancel );
    HRESULT DocumentBeforeSave (
        struct _Document * Doc,
        VARIANT_BOOL * SaveAsUI,
        VARIANT_BOOL * Cancel );
    HRESULT NewDocument (
        struct _Document * Doc );
    HRESULT WindowActivate (
        struct _Document * Doc,
        struct Window * Wn );
    HRESULT WindowDeactivate (
        struct _Document * Doc,
        struct Window * Wn );
    HRESULT WindowSelectionChange (
        struct Selection * Sel );
    HRESULT WindowBeforeRightClick (
        struct Selection * Sel,
        VARIANT_BOOL * Cancel );
    HRESULT WindowBeforeDoubleClick (
        struct Selection * Sel,
        VARIANT_BOOL * Cancel );
};

enum WdBrowserLevel
{
    wdBrowserLevelV4 = 0,
    wdBrowserLevelMicrosoftInternetExplorer5 = 1,
    wdBrowserLevelMicrosoftInternetExplorer6 = 2
};

enum WdEnclosureType
{
    wdEnclosureCircle = 0,
    wdEnclosureSquare = 1,
    wdEnclosureTriangle = 2,
    wdEnclosureDiamond = 3
};

enum WdEncloseStyle
{
    wdEncloseStyleNone = 0,
    wdEncloseStyleSmall = 1,
    wdEncloseStyleLarge = 2
};

enum WdHighAnsiText
{
    wdHighAnsiIsFarEast = 0,
    wdHighAnsiIsHighAnsi = 1,
    wdAutoDetectHighAnsiFarEast = 2
};

enum WdLayoutMode
{
    wdLayoutModeDefault = 0,
    wdLayoutModeGrid = 1,
    wdLayoutModeLineGrid = 2,
    wdLayoutModeGenko = 3
};

enum WdDocumentMedium
{
    wdEmailMessage = 0,
    wdDocument = 1,
    wdWebPage = 2
};

enum WdMailerPriority
{
    wdPriorityNormal = 1,
    wdPriorityLow = 2,
    wdPriorityHigh = 3
};

enum WdDocumentViewDirection
{
    wdDocumentViewRtl = 0,
    wdDocumentViewLtr = 1
};

enum WdArabicNumeral
{
    wdNumeralArabic = 0,
    wdNumeralHindi = 1,
    wdNumeralContext = 2,
    wdNumeralSystem = 3
};

enum WdMonthNames
{
    wdMonthNamesArabic = 0,
    wdMonthNamesEnglish = 1,
    wdMonthNamesFrench = 2
};

enum WdCursorMovement
{
    wdCursorMovementLogical = 0,
    wdCursorMovementVisual = 1
};

enum WdVisualSelection
{
    wdVisualSelectionBlock = 0,
    wdVisualSelectionContinuous = 1
};

enum WdTableDirection
{
    wdTableDirectionRtl = 0,
    wdTableDirectionLtr = 1
};

enum WdFlowDirection
{
    wdFlowLtr = 0,
    wdFlowRtl = 1
};

struct __declspec(uuid("00020973-0000-0000-c000-000000000046"))
TextColumns : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetEvenlySpaced,put=PutEvenlySpaced))
    long EvenlySpaced;
    __declspec(property(get=GetLineBetween,put=PutLineBetween))
    long LineBetween;
    __declspec(property(get=GetWidth,put=PutWidth))
    float Width;
    __declspec(property(get=GetSpacing,put=PutSpacing))
    float Spacing;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetFlowDirection,put=PutFlowDirection))
    enum WdFlowDirection FlowDirection;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetEvenlySpaced ( );
    void PutEvenlySpaced (
        long prop );
    long GetLineBetween ( );
    void PutLineBetween (
        long prop );
    float GetWidth ( );
    void PutWidth (
        float prop );
    float GetSpacing ( );
    void PutSpacing (
        float prop );
    TextColumnPtr Item (
        long Index );
    TextColumnPtr Add (
        VARIANT * Width = &vtMissing,
        VARIANT * Spacing = &vtMissing,
        VARIANT * EvenlySpaced = &vtMissing );
    HRESULT SetCount (
        long NumColumns );
    enum WdFlowDirection GetFlowDirection ( );
    void PutFlowDirection (
        enum WdFlowDirection prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_EvenlySpaced (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_EvenlySpaced (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_LineBetween (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_LineBetween (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Spacing (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Spacing (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct TextColumn * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT * Width,
        /*[in]*/ VARIANT * Spacing,
        /*[in]*/ VARIANT * EvenlySpaced,
        /*[out,retval]*/ struct TextColumn * * prop ) = 0;
      virtual HRESULT __stdcall raw_SetCount (
        /*[in]*/ long NumColumns ) = 0;
      virtual HRESULT __stdcall get_FlowDirection (
        /*[out,retval]*/ enum WdFlowDirection * prop ) = 0;
      virtual HRESULT __stdcall put_FlowDirection (
        /*[in]*/ enum WdFlowDirection prop ) = 0;
};

enum WdDiacriticColor
{
    wdDiacriticColorBidi = 0,
    wdDiacriticColorLatin = 1
};

enum WdGutterStyle
{
    wdGutterPosLeft = 0,
    wdGutterPosTop = 1,
    wdGutterPosRight = 2
};

enum WdGutterStyleOld
{
    wdGutterStyleLatin = -10,
    wdGutterStyleBidi = 2
};

enum WdSectionDirection
{
    wdSectionDirectionRtl = 0,
    wdSectionDirectionLtr = 1
};

struct __declspec(uuid("00020971-0000-0000-c000-000000000046"))
PageSetup : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetPaperSize,put=PutPaperSize))
    enum WdPaperSize PaperSize;
    __declspec(property(get=GetTwoPagesOnOne,put=PutTwoPagesOnOne))
    VARIANT_BOOL TwoPagesOnOne;
    __declspec(property(get=GetGutterOnTop,put=PutGutterOnTop))
    VARIANT_BOOL GutterOnTop;
    __declspec(property(get=GetCharsLine,put=PutCharsLine))
    float CharsLine;
    __declspec(property(get=GetLinesPage,put=PutLinesPage))
    float LinesPage;
    __declspec(property(get=GetShowGrid,put=PutShowGrid))
    VARIANT_BOOL ShowGrid;
    __declspec(property(get=GetGutterStyle,put=PutGutterStyle))
    enum WdGutterStyleOld GutterStyle;
    __declspec(property(get=GetSectionDirection,put=PutSectionDirection))
    enum WdSectionDirection SectionDirection;
    __declspec(property(get=GetLayoutMode,put=PutLayoutMode))
    enum WdLayoutMode LayoutMode;
    __declspec(property(get=GetGutterPos,put=PutGutterPos))
    enum WdGutterStyle GutterPos;
    __declspec(property(get=GetBookFoldPrinting,put=PutBookFoldPrinting))
    VARIANT_BOOL BookFoldPrinting;
    __declspec(property(get=GetBookFoldRevPrinting,put=PutBookFoldRevPrinting))
    VARIANT_BOOL BookFoldRevPrinting;
    __declspec(property(get=GetBookFoldPrintingSheets,put=PutBookFoldPrintingSheets))
    long BookFoldPrintingSheets;
    __declspec(property(get=GetTopMargin,put=PutTopMargin))
    float TopMargin;
    __declspec(property(get=GetBottomMargin,put=PutBottomMargin))
    float BottomMargin;
    __declspec(property(get=GetLeftMargin,put=PutLeftMargin))
    float LeftMargin;
    __declspec(property(get=GetRightMargin,put=PutRightMargin))
    float RightMargin;
    __declspec(property(get=GetGutter,put=PutGutter))
    float Gutter;
    __declspec(property(get=GetPageWidth,put=PutPageWidth))
    float PageWidth;
    __declspec(property(get=GetPageHeight,put=PutPageHeight))
    float PageHeight;
    __declspec(property(get=GetOrientation,put=PutOrientation))
    enum WdOrientation Orientation;
    __declspec(property(get=GetFirstPageTray,put=PutFirstPageTray))
    enum WdPaperTray FirstPageTray;
    __declspec(property(get=GetOtherPagesTray,put=PutOtherPagesTray))
    enum WdPaperTray OtherPagesTray;
    __declspec(property(get=GetVerticalAlignment,put=PutVerticalAlignment))
    enum WdVerticalAlignment VerticalAlignment;
    __declspec(property(get=GetMirrorMargins,put=PutMirrorMargins))
    long MirrorMargins;
    __declspec(property(get=GetHeaderDistance,put=PutHeaderDistance))
    float HeaderDistance;
    __declspec(property(get=GetFooterDistance,put=PutFooterDistance))
    float FooterDistance;
    __declspec(property(get=GetSectionStart,put=PutSectionStart))
    enum WdSectionStart SectionStart;
    __declspec(property(get=GetOddAndEvenPagesHeaderFooter,put=PutOddAndEvenPagesHeaderFooter))
    long OddAndEvenPagesHeaderFooter;
    __declspec(property(get=GetDifferentFirstPageHeaderFooter,put=PutDifferentFirstPageHeaderFooter))
    long DifferentFirstPageHeaderFooter;
    __declspec(property(get=GetSuppressEndnotes,put=PutSuppressEndnotes))
    long SuppressEndnotes;
    __declspec(property(get=GetLineNumbering,put=PutLineNumbering))
    LineNumberingPtr LineNumbering;
    __declspec(property(get=GetTextColumns,put=PutTextColumns))
    TextColumnsPtr TextColumns;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    float GetTopMargin ( );
    void PutTopMargin (
        float prop );
    float GetBottomMargin ( );
    void PutBottomMargin (
        float prop );
    float GetLeftMargin ( );
    void PutLeftMargin (
        float prop );
    float GetRightMargin ( );
    void PutRightMargin (
        float prop );
    float GetGutter ( );
    void PutGutter (
        float prop );
    float GetPageWidth ( );
    void PutPageWidth (
        float prop );
    float GetPageHeight ( );
    void PutPageHeight (
        float prop );
    enum WdOrientation GetOrientation ( );
    void PutOrientation (
        enum WdOrientation prop );
    enum WdPaperTray GetFirstPageTray ( );
    void PutFirstPageTray (
        enum WdPaperTray prop );
    enum WdPaperTray GetOtherPagesTray ( );
    void PutOtherPagesTray (
        enum WdPaperTray prop );
    enum WdVerticalAlignment GetVerticalAlignment ( );
    void PutVerticalAlignment (
        enum WdVerticalAlignment prop );
    long GetMirrorMargins ( );
    void PutMirrorMargins (
        long prop );
    float GetHeaderDistance ( );
    void PutHeaderDistance (
        float prop );
    float GetFooterDistance ( );
    void PutFooterDistance (
        float prop );
    enum WdSectionStart GetSectionStart ( );
    void PutSectionStart (
        enum WdSectionStart prop );
    long GetOddAndEvenPagesHeaderFooter ( );
    void PutOddAndEvenPagesHeaderFooter (
        long prop );
    long GetDifferentFirstPageHeaderFooter ( );
    void PutDifferentFirstPageHeaderFooter (
        long prop );
    long GetSuppressEndnotes ( );
    void PutSuppressEndnotes (
        long prop );
    LineNumberingPtr GetLineNumbering ( );
    void PutLineNumbering (
        struct LineNumbering * prop );
    TextColumnsPtr GetTextColumns ( );
    void PutTextColumns (
        struct TextColumns * prop );
    enum WdPaperSize GetPaperSize ( );
    void PutPaperSize (
        enum WdPaperSize prop );
    VARIANT_BOOL GetTwoPagesOnOne ( );
    void PutTwoPagesOnOne (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetGutterOnTop ( );
    void PutGutterOnTop (
        VARIANT_BOOL prop );
    float GetCharsLine ( );
    void PutCharsLine (
        float prop );
    float GetLinesPage ( );
    void PutLinesPage (
        float prop );
    VARIANT_BOOL GetShowGrid ( );
    void PutShowGrid (
        VARIANT_BOOL prop );
    HRESULT TogglePortrait ( );
    HRESULT SetAsTemplateDefault ( );
    enum WdGutterStyleOld GetGutterStyle ( );
    void PutGutterStyle (
        enum WdGutterStyleOld prop );
    enum WdSectionDirection GetSectionDirection ( );
    void PutSectionDirection (
        enum WdSectionDirection prop );
    enum WdLayoutMode GetLayoutMode ( );
    void PutLayoutMode (
        enum WdLayoutMode prop );
    enum WdGutterStyle GetGutterPos ( );
    void PutGutterPos (
        enum WdGutterStyle prop );
    VARIANT_BOOL GetBookFoldPrinting ( );
    void PutBookFoldPrinting (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetBookFoldRevPrinting ( );
    void PutBookFoldRevPrinting (
        VARIANT_BOOL prop );
    long GetBookFoldPrintingSheets ( );
    void PutBookFoldPrintingSheets (
        long prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_TopMargin (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TopMargin (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_BottomMargin (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_BottomMargin (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LeftMargin (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftMargin (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RightMargin (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RightMargin (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Gutter (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Gutter (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_PageWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_PageWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_PageHeight (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_PageHeight (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ enum WdOrientation * prop ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ enum WdOrientation prop ) = 0;
      virtual HRESULT __stdcall get_FirstPageTray (
        /*[out,retval]*/ enum WdPaperTray * prop ) = 0;
      virtual HRESULT __stdcall put_FirstPageTray (
        /*[in]*/ enum WdPaperTray prop ) = 0;
      virtual HRESULT __stdcall get_OtherPagesTray (
        /*[out,retval]*/ enum WdPaperTray * prop ) = 0;
      virtual HRESULT __stdcall put_OtherPagesTray (
        /*[in]*/ enum WdPaperTray prop ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ enum WdVerticalAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ enum WdVerticalAlignment prop ) = 0;
      virtual HRESULT __stdcall get_MirrorMargins (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_MirrorMargins (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_HeaderDistance (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_HeaderDistance (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_FooterDistance (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_FooterDistance (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_SectionStart (
        /*[out,retval]*/ enum WdSectionStart * prop ) = 0;
      virtual HRESULT __stdcall put_SectionStart (
        /*[in]*/ enum WdSectionStart prop ) = 0;
      virtual HRESULT __stdcall get_OddAndEvenPagesHeaderFooter (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_OddAndEvenPagesHeaderFooter (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DifferentFirstPageHeaderFooter (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DifferentFirstPageHeaderFooter (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_SuppressEndnotes (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SuppressEndnotes (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_LineNumbering (
        /*[out,retval]*/ struct LineNumbering * * prop ) = 0;
      virtual HRESULT __stdcall put_LineNumbering (
        /*[in]*/ struct LineNumbering * prop ) = 0;
      virtual HRESULT __stdcall get_TextColumns (
        /*[out,retval]*/ struct TextColumns * * prop ) = 0;
      virtual HRESULT __stdcall put_TextColumns (
        /*[in]*/ struct TextColumns * prop ) = 0;
      virtual HRESULT __stdcall get_PaperSize (
        /*[out,retval]*/ enum WdPaperSize * prop ) = 0;
      virtual HRESULT __stdcall put_PaperSize (
        /*[in]*/ enum WdPaperSize prop ) = 0;
      virtual HRESULT __stdcall get_TwoPagesOnOne (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_TwoPagesOnOne (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_GutterOnTop (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_GutterOnTop (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CharsLine (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CharsLine (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LinesPage (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LinesPage (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ShowGrid (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowGrid (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall raw_TogglePortrait ( ) = 0;
      virtual HRESULT __stdcall raw_SetAsTemplateDefault ( ) = 0;
      virtual HRESULT __stdcall get_GutterStyle (
        /*[out,retval]*/ enum WdGutterStyleOld * prop ) = 0;
      virtual HRESULT __stdcall put_GutterStyle (
        /*[in]*/ enum WdGutterStyleOld prop ) = 0;
      virtual HRESULT __stdcall get_SectionDirection (
        /*[out,retval]*/ enum WdSectionDirection * prop ) = 0;
      virtual HRESULT __stdcall put_SectionDirection (
        /*[in]*/ enum WdSectionDirection prop ) = 0;
      virtual HRESULT __stdcall get_LayoutMode (
        /*[out,retval]*/ enum WdLayoutMode * prop ) = 0;
      virtual HRESULT __stdcall put_LayoutMode (
        /*[in]*/ enum WdLayoutMode prop ) = 0;
      virtual HRESULT __stdcall get_GutterPos (
        /*[out,retval]*/ enum WdGutterStyle * prop ) = 0;
      virtual HRESULT __stdcall put_GutterPos (
        /*[in]*/ enum WdGutterStyle prop ) = 0;
      virtual HRESULT __stdcall get_BookFoldPrinting (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_BookFoldPrinting (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_BookFoldRevPrinting (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_BookFoldRevPrinting (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_BookFoldPrintingSheets (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_BookFoldPrintingSheets (
        /*[in]*/ long prop ) = 0;
};

enum WdDateLanguage
{
    wdDateLanguageBidi = 10,
    wdDateLanguageLatin = 1033
};

enum WdCalendarTypeBi
{
    wdCalendarTypeBidi = 99,
    wdCalendarTypeGregorian = 100
};

enum WdCalendarType
{
    wdCalendarWestern = 0,
    wdCalendarArabic = 1,
    wdCalendarHebrew = 2,
    wdCalendarChina = 3,
    wdCalendarJapan = 4,
    wdCalendarThai = 5,
    wdCalendarKorean = 6,
    wdCalendarSakaEra = 7,
    wdCalendarTranslitEnglish = 8,
    wdCalendarTranslitFrench = 9
};

enum WdReadingOrder
{
    wdReadingOrderRtl = 0,
    wdReadingOrderLtr = 1
};

enum WdHebSpellStart
{
    wdFullScript = 0,
    wdPartialScript = 1,
    wdMixedScript = 2,
    wdMixedAuthorizedScript = 3
};

enum WdAraSpeller
{
    wdNone = 0,
    wdInitialAlef = 1,
    wdFinalYaa = 2,
    wdBoth = 3
};

enum WdColor
{
    wdColorAutomatic = -16777216,
    wdColorBlack = 0,
    wdColorBlue = 16711680,
    wdColorTurquoise = 16776960,
    wdColorBrightGreen = 65280,
    wdColorPink = 16711935,
    wdColorRed = 255,
    wdColorYellow = 65535,
    wdColorWhite = 16777215,
    wdColorDarkBlue = 8388608,
    wdColorTeal = 8421376,
    wdColorGreen = 32768,
    wdColorViolet = 8388736,
    wdColorDarkRed = 128,
    wdColorDarkYellow = 32896,
    wdColorBrown = 13209,
    wdColorOliveGreen = 13107,
    wdColorDarkGreen = 13056,
    wdColorDarkTeal = 6697728,
    wdColorIndigo = 10040115,
    wdColorOrange = 26367,
    wdColorBlueGray = 10053222,
    wdColorLightOrange = 39423,
    wdColorLime = 52377,
    wdColorSeaGreen = 6723891,
    wdColorAqua = 13421619,
    wdColorLightBlue = 16737843,
    wdColorGold = 52479,
    wdColorSkyBlue = 16763904,
    wdColorPlum = 6697881,
    wdColorRose = 13408767,
    wdColorTan = 10079487,
    wdColorLightYellow = 10092543,
    wdColorLightGreen = 13434828,
    wdColorLightTurquoise = 16777164,
    wdColorPaleBlue = 16764057,
    wdColorLavender = 16751052,
    wdColorGray05 = 15987699,
    wdColorGray10 = 15132390,
    wdColorGray125 = 14737632,
    wdColorGray15 = 14277081,
    wdColorGray20 = 13421772,
    wdColorGray25 = 12632256,
    wdColorGray30 = 11776947,
    wdColorGray35 = 10921638,
    wdColorGray375 = 10526880,
    wdColorGray40 = 10066329,
    wdColorGray45 = 9211020,
    wdColorGray50 = 8421504,
    wdColorGray55 = 7566195,
    wdColorGray60 = 6710886,
    wdColorGray625 = 6316128,
    wdColorGray65 = 5855577,
    wdColorGray70 = 5000268,
    wdColorGray75 = 4210752,
    wdColorGray80 = 3355443,
    wdColorGray85 = 2500134,
    wdColorGray875 = 2105376,
    wdColorGray90 = 1644825,
    wdColorGray95 = 789516
};

struct __declspec(uuid("0002093b-0000-0000-c000-000000000046"))
Border : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetColorIndex,put=PutColorIndex))
    enum WdColorIndex ColorIndex;
    __declspec(property(get=GetInside))
    VARIANT_BOOL Inside;
    __declspec(property(get=GetLineStyle,put=PutLineStyle))
    enum WdLineStyle LineStyle;
    __declspec(property(get=GetLineWidth,put=PutLineWidth))
    enum WdLineWidth LineWidth;
    __declspec(property(get=GetArtStyle,put=PutArtStyle))
    enum WdPageBorderArt ArtStyle;
    __declspec(property(get=GetArtWidth,put=PutArtWidth))
    long ArtWidth;
    __declspec(property(get=GetColor,put=PutColor))
    enum WdColor Color;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL prop );
    enum WdColorIndex GetColorIndex ( );
    void PutColorIndex (
        enum WdColorIndex prop );
    VARIANT_BOOL GetInside ( );
    enum WdLineStyle GetLineStyle ( );
    void PutLineStyle (
        enum WdLineStyle prop );
    enum WdLineWidth GetLineWidth ( );
    void PutLineWidth (
        enum WdLineWidth prop );
    enum WdPageBorderArt GetArtStyle ( );
    void PutArtStyle (
        enum WdPageBorderArt prop );
    long GetArtWidth ( );
    void PutArtWidth (
        long prop );
    enum WdColor GetColor ( );
    void PutColor (
        enum WdColor prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ColorIndex (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_ColorIndex (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_Inside (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_LineStyle (
        /*[out,retval]*/ enum WdLineStyle * prop ) = 0;
      virtual HRESULT __stdcall put_LineStyle (
        /*[in]*/ enum WdLineStyle prop ) = 0;
      virtual HRESULT __stdcall get_LineWidth (
        /*[out,retval]*/ enum WdLineWidth * prop ) = 0;
      virtual HRESULT __stdcall put_LineWidth (
        /*[in]*/ enum WdLineWidth prop ) = 0;
      virtual HRESULT __stdcall get_ArtStyle (
        /*[out,retval]*/ enum WdPageBorderArt * prop ) = 0;
      virtual HRESULT __stdcall put_ArtStyle (
        /*[in]*/ enum WdPageBorderArt prop ) = 0;
      virtual HRESULT __stdcall get_ArtWidth (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ArtWidth (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ enum WdColor * prop ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ enum WdColor prop ) = 0;
};

struct __declspec(uuid("0002093c-0000-0000-c000-000000000046"))
Borders : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetEnable,put=PutEnable))
    long Enable;
    __declspec(property(get=GetDistanceFromTop,put=PutDistanceFromTop))
    long DistanceFromTop;
    __declspec(property(get=GetShadow,put=PutShadow))
    VARIANT_BOOL Shadow;
    __declspec(property(get=GetInsideLineStyle,put=PutInsideLineStyle))
    enum WdLineStyle InsideLineStyle;
    __declspec(property(get=GetOutsideLineStyle,put=PutOutsideLineStyle))
    enum WdLineStyle OutsideLineStyle;
    __declspec(property(get=GetInsideLineWidth,put=PutInsideLineWidth))
    enum WdLineWidth InsideLineWidth;
    __declspec(property(get=GetOutsideLineWidth,put=PutOutsideLineWidth))
    enum WdLineWidth OutsideLineWidth;
    __declspec(property(get=GetInsideColorIndex,put=PutInsideColorIndex))
    enum WdColorIndex InsideColorIndex;
    __declspec(property(get=GetOutsideColorIndex,put=PutOutsideColorIndex))
    enum WdColorIndex OutsideColorIndex;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;
    __declspec(property(get=GetDistanceFromLeft,put=PutDistanceFromLeft))
    long DistanceFromLeft;
    __declspec(property(get=GetDistanceFromBottom,put=PutDistanceFromBottom))
    long DistanceFromBottom;
    __declspec(property(get=GetDistanceFromRight,put=PutDistanceFromRight))
    long DistanceFromRight;
    __declspec(property(get=GetAlwaysInFront,put=PutAlwaysInFront))
    VARIANT_BOOL AlwaysInFront;
    __declspec(property(get=GetSurroundHeader,put=PutSurroundHeader))
    VARIANT_BOOL SurroundHeader;
    __declspec(property(get=GetSurroundFooter,put=PutSurroundFooter))
    VARIANT_BOOL SurroundFooter;
    __declspec(property(get=GetJoinBorders,put=PutJoinBorders))
    VARIANT_BOOL JoinBorders;
    __declspec(property(get=GetHasHorizontal))
    VARIANT_BOOL HasHorizontal;
    __declspec(property(get=GetHasVertical))
    VARIANT_BOOL HasVertical;
    __declspec(property(get=GetDistanceFrom,put=PutDistanceFrom))
    enum WdBorderDistanceFrom DistanceFrom;
    __declspec(property(get=GetEnableFirstPageInSection,put=PutEnableFirstPageInSection))
    VARIANT_BOOL EnableFirstPageInSection;
    __declspec(property(get=GetEnableOtherPagesInSection,put=PutEnableOtherPagesInSection))
    VARIANT_BOOL EnableOtherPagesInSection;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetInsideColor,put=PutInsideColor))
    enum WdColor InsideColor;
    __declspec(property(get=GetOutsideColor,put=PutOutsideColor))
    enum WdColor OutsideColor;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    long GetEnable ( );
    void PutEnable (
        long prop );
    long GetDistanceFromTop ( );
    void PutDistanceFromTop (
        long prop );
    VARIANT_BOOL GetShadow ( );
    void PutShadow (
        VARIANT_BOOL prop );
    enum WdLineStyle GetInsideLineStyle ( );
    void PutInsideLineStyle (
        enum WdLineStyle prop );
    enum WdLineStyle GetOutsideLineStyle ( );
    void PutOutsideLineStyle (
        enum WdLineStyle prop );
    enum WdLineWidth GetInsideLineWidth ( );
    void PutInsideLineWidth (
        enum WdLineWidth prop );
    enum WdLineWidth GetOutsideLineWidth ( );
    void PutOutsideLineWidth (
        enum WdLineWidth prop );
    enum WdColorIndex GetInsideColorIndex ( );
    void PutInsideColorIndex (
        enum WdColorIndex prop );
    enum WdColorIndex GetOutsideColorIndex ( );
    void PutOutsideColorIndex (
        enum WdColorIndex prop );
    long GetDistanceFromLeft ( );
    void PutDistanceFromLeft (
        long prop );
    long GetDistanceFromBottom ( );
    void PutDistanceFromBottom (
        long prop );
    long GetDistanceFromRight ( );
    void PutDistanceFromRight (
        long prop );
    VARIANT_BOOL GetAlwaysInFront ( );
    void PutAlwaysInFront (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetSurroundHeader ( );
    void PutSurroundHeader (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetSurroundFooter ( );
    void PutSurroundFooter (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetJoinBorders ( );
    void PutJoinBorders (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetHasHorizontal ( );
    VARIANT_BOOL GetHasVertical ( );
    enum WdBorderDistanceFrom GetDistanceFrom ( );
    void PutDistanceFrom (
        enum WdBorderDistanceFrom prop );
    VARIANT_BOOL GetEnableFirstPageInSection ( );
    void PutEnableFirstPageInSection (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetEnableOtherPagesInSection ( );
    void PutEnableOtherPagesInSection (
        VARIANT_BOOL prop );
    BorderPtr Item (
        enum WdBorderType Index );
    HRESULT ApplyPageBordersToAllSections ( );
    enum WdColor GetInsideColor ( );
    void PutInsideColor (
        enum WdColor prop );
    enum WdColor GetOutsideColor ( );
    void PutOutsideColor (
        enum WdColor prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Enable (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Enable (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DistanceFromTop (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceFromTop (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_InsideLineStyle (
        /*[out,retval]*/ enum WdLineStyle * prop ) = 0;
      virtual HRESULT __stdcall put_InsideLineStyle (
        /*[in]*/ enum WdLineStyle prop ) = 0;
      virtual HRESULT __stdcall get_OutsideLineStyle (
        /*[out,retval]*/ enum WdLineStyle * prop ) = 0;
      virtual HRESULT __stdcall put_OutsideLineStyle (
        /*[in]*/ enum WdLineStyle prop ) = 0;
      virtual HRESULT __stdcall get_InsideLineWidth (
        /*[out,retval]*/ enum WdLineWidth * prop ) = 0;
      virtual HRESULT __stdcall put_InsideLineWidth (
        /*[in]*/ enum WdLineWidth prop ) = 0;
      virtual HRESULT __stdcall get_OutsideLineWidth (
        /*[out,retval]*/ enum WdLineWidth * prop ) = 0;
      virtual HRESULT __stdcall put_OutsideLineWidth (
        /*[in]*/ enum WdLineWidth prop ) = 0;
      virtual HRESULT __stdcall get_InsideColorIndex (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_InsideColorIndex (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_OutsideColorIndex (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_OutsideColorIndex (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_DistanceFromLeft (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceFromLeft (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DistanceFromBottom (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceFromBottom (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DistanceFromRight (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceFromRight (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_AlwaysInFront (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AlwaysInFront (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SurroundHeader (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SurroundHeader (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SurroundFooter (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SurroundFooter (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_JoinBorders (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_JoinBorders (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HasHorizontal (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_HasVertical (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_DistanceFrom (
        /*[out,retval]*/ enum WdBorderDistanceFrom * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceFrom (
        /*[in]*/ enum WdBorderDistanceFrom prop ) = 0;
      virtual HRESULT __stdcall get_EnableFirstPageInSection (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EnableFirstPageInSection (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_EnableOtherPagesInSection (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EnableOtherPagesInSection (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ enum WdBorderType Index,
        /*[out,retval]*/ struct Border * * prop ) = 0;
      virtual HRESULT __stdcall raw_ApplyPageBordersToAllSections ( ) = 0;
      virtual HRESULT __stdcall get_InsideColor (
        /*[out,retval]*/ enum WdColor * prop ) = 0;
      virtual HRESULT __stdcall put_InsideColor (
        /*[in]*/ enum WdColor prop ) = 0;
      virtual HRESULT __stdcall get_OutsideColor (
        /*[out,retval]*/ enum WdColor * prop ) = 0;
      virtual HRESULT __stdcall put_OutsideColor (
        /*[in]*/ enum WdColor prop ) = 0;
};

struct __declspec(uuid("0002093a-0000-0000-c000-000000000046"))
Shading : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetForegroundPatternColorIndex,put=PutForegroundPatternColorIndex))
    enum WdColorIndex ForegroundPatternColorIndex;
    __declspec(property(get=GetBackgroundPatternColorIndex,put=PutBackgroundPatternColorIndex))
    enum WdColorIndex BackgroundPatternColorIndex;
    __declspec(property(get=GetTexture,put=PutTexture))
    enum WdTextureIndex Texture;
    __declspec(property(get=GetForegroundPatternColor,put=PutForegroundPatternColor))
    enum WdColor ForegroundPatternColor;
    __declspec(property(get=GetBackgroundPatternColor,put=PutBackgroundPatternColor))
    enum WdColor BackgroundPatternColor;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    enum WdColorIndex GetForegroundPatternColorIndex ( );
    void PutForegroundPatternColorIndex (
        enum WdColorIndex prop );
    enum WdColorIndex GetBackgroundPatternColorIndex ( );
    void PutBackgroundPatternColorIndex (
        enum WdColorIndex prop );
    enum WdTextureIndex GetTexture ( );
    void PutTexture (
        enum WdTextureIndex prop );
    enum WdColor GetForegroundPatternColor ( );
    void PutForegroundPatternColor (
        enum WdColor prop );
    enum WdColor GetBackgroundPatternColor ( );
    void PutBackgroundPatternColor (
        enum WdColor prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_ForegroundPatternColorIndex (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_ForegroundPatternColorIndex (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_BackgroundPatternColorIndex (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_BackgroundPatternColorIndex (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_Texture (
        /*[out,retval]*/ enum WdTextureIndex * prop ) = 0;
      virtual HRESULT __stdcall put_Texture (
        /*[in]*/ enum WdTextureIndex prop ) = 0;
      virtual HRESULT __stdcall get_ForegroundPatternColor (
        /*[out,retval]*/ enum WdColor * prop ) = 0;
      virtual HRESULT __stdcall put_ForegroundPatternColor (
        /*[in]*/ enum WdColor prop ) = 0;
      virtual HRESULT __stdcall get_BackgroundPatternColor (
        /*[out,retval]*/ enum WdColor * prop ) = 0;
      virtual HRESULT __stdcall put_BackgroundPatternColor (
        /*[in]*/ enum WdColor prop ) = 0;
};

struct __declspec(uuid("00020952-0000-0000-c000-000000000046"))
_Font : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetColorIndexBi,put=PutColorIndexBi))
    enum WdColorIndex ColorIndexBi;
    __declspec(property(get=GetDiacriticColor,put=PutDiacriticColor))
    enum WdColor DiacriticColor;
    __declspec(property(get=GetUnderlineColor,put=PutUnderlineColor))
    enum WdColor UnderlineColor;
    __declspec(property(get=GetDuplicate))
    _FontPtr Duplicate;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetBorders,put=PutBorders))
    BordersPtr Borders;
    __declspec(property(get=GetBold,put=PutBold))
    long Bold;
    __declspec(property(get=GetItalic,put=PutItalic))
    long Italic;
    __declspec(property(get=GetHidden,put=PutHidden))
    long Hidden;
    __declspec(property(get=GetSmallCaps,put=PutSmallCaps))
    long SmallCaps;
    __declspec(property(get=GetAllCaps,put=PutAllCaps))
    long AllCaps;
    __declspec(property(get=GetStrikeThrough,put=PutStrikeThrough))
    long StrikeThrough;
    __declspec(property(get=GetDoubleStrikeThrough,put=PutDoubleStrikeThrough))
    long DoubleStrikeThrough;
    __declspec(property(get=GetColorIndex,put=PutColorIndex))
    enum WdColorIndex ColorIndex;
    __declspec(property(get=GetSubscript,put=PutSubscript))
    long Subscript;
    __declspec(property(get=GetSuperscript,put=PutSuperscript))
    long Superscript;
    __declspec(property(get=GetUnderline,put=PutUnderline))
    enum WdUnderline Underline;
    __declspec(property(get=GetSize,put=PutSize))
    float Size;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetPosition,put=PutPosition))
    long Position;
    __declspec(property(get=GetSpacing,put=PutSpacing))
    float Spacing;
    __declspec(property(get=GetScaling,put=PutScaling))
    long Scaling;
    __declspec(property(get=GetShadow,put=PutShadow))
    long Shadow;
    __declspec(property(get=GetOutline,put=PutOutline))
    long Outline;
    __declspec(property(get=GetEmboss,put=PutEmboss))
    long Emboss;
    __declspec(property(get=GetKerning,put=PutKerning))
    float Kerning;
    __declspec(property(get=GetEngrave,put=PutEngrave))
    long Engrave;
    __declspec(property(get=GetAnimation,put=PutAnimation))
    enum WdAnimation Animation;
    __declspec(property(get=GetShading))
    ShadingPtr Shading;
    __declspec(property(get=GetEmphasisMark,put=PutEmphasisMark))
    enum WdEmphasisMark EmphasisMark;
    __declspec(property(get=GetDisableCharacterSpaceGrid,put=PutDisableCharacterSpaceGrid))
    VARIANT_BOOL DisableCharacterSpaceGrid;
    __declspec(property(get=GetNameFarEast,put=PutNameFarEast))
    _bstr_t NameFarEast;
    __declspec(property(get=GetNameAscii,put=PutNameAscii))
    _bstr_t NameAscii;
    __declspec(property(get=GetNameOther,put=PutNameOther))
    _bstr_t NameOther;
    __declspec(property(get=GetColor,put=PutColor))
    enum WdColor Color;
    __declspec(property(get=GetBoldBi,put=PutBoldBi))
    long BoldBi;
    __declspec(property(get=GetItalicBi,put=PutItalicBi))
    long ItalicBi;
    __declspec(property(get=GetSizeBi,put=PutSizeBi))
    float SizeBi;
    __declspec(property(get=GetNameBi,put=PutNameBi))
    _bstr_t NameBi;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _FontPtr GetDuplicate ( );
    long GetBold ( );
    void PutBold (
        long prop );
    long GetItalic ( );
    void PutItalic (
        long prop );
    long GetHidden ( );
    void PutHidden (
        long prop );
    long GetSmallCaps ( );
    void PutSmallCaps (
        long prop );
    long GetAllCaps ( );
    void PutAllCaps (
        long prop );
    long GetStrikeThrough ( );
    void PutStrikeThrough (
        long prop );
    long GetDoubleStrikeThrough ( );
    void PutDoubleStrikeThrough (
        long prop );
    enum WdColorIndex GetColorIndex ( );
    void PutColorIndex (
        enum WdColorIndex prop );
    long GetSubscript ( );
    void PutSubscript (
        long prop );
    long GetSuperscript ( );
    void PutSuperscript (
        long prop );
    enum WdUnderline GetUnderline ( );
    void PutUnderline (
        enum WdUnderline prop );
    float GetSize ( );
    void PutSize (
        float prop );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t prop );
    long GetPosition ( );
    void PutPosition (
        long prop );
    float GetSpacing ( );
    void PutSpacing (
        float prop );
    long GetScaling ( );
    void PutScaling (
        long prop );
    long GetShadow ( );
    void PutShadow (
        long prop );
    long GetOutline ( );
    void PutOutline (
        long prop );
    long GetEmboss ( );
    void PutEmboss (
        long prop );
    float GetKerning ( );
    void PutKerning (
        float prop );
    long GetEngrave ( );
    void PutEngrave (
        long prop );
    enum WdAnimation GetAnimation ( );
    void PutAnimation (
        enum WdAnimation prop );
    BordersPtr GetBorders ( );
    void PutBorders (
        struct Borders * prop );
    ShadingPtr GetShading ( );
    enum WdEmphasisMark GetEmphasisMark ( );
    void PutEmphasisMark (
        enum WdEmphasisMark prop );
    VARIANT_BOOL GetDisableCharacterSpaceGrid ( );
    void PutDisableCharacterSpaceGrid (
        VARIANT_BOOL prop );
    _bstr_t GetNameFarEast ( );
    void PutNameFarEast (
        _bstr_t prop );
    _bstr_t GetNameAscii ( );
    void PutNameAscii (
        _bstr_t prop );
    _bstr_t GetNameOther ( );
    void PutNameOther (
        _bstr_t prop );
    HRESULT Grow ( );
    HRESULT Shrink ( );
    HRESULT Reset ( );
    HRESULT SetAsTemplateDefault ( );
    enum WdColor GetColor ( );
    void PutColor (
        enum WdColor prop );
    long GetBoldBi ( );
    void PutBoldBi (
        long prop );
    long GetItalicBi ( );
    void PutItalicBi (
        long prop );
    float GetSizeBi ( );
    void PutSizeBi (
        float prop );
    _bstr_t GetNameBi ( );
    void PutNameBi (
        _bstr_t prop );
    enum WdColorIndex GetColorIndexBi ( );
    void PutColorIndexBi (
        enum WdColorIndex prop );
    enum WdColor GetDiacriticColor ( );
    void PutDiacriticColor (
        enum WdColor prop );
    enum WdColor GetUnderlineColor ( );
    void PutUnderlineColor (
        enum WdColor prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Duplicate (
        /*[out,retval]*/ struct _Font * * prop ) = 0;
      virtual HRESULT __stdcall get_Bold (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Bold (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Italic (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Italic (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Hidden (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Hidden (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_SmallCaps (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SmallCaps (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_AllCaps (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AllCaps (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_StrikeThrough (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_StrikeThrough (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DoubleStrikeThrough (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DoubleStrikeThrough (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ColorIndex (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_ColorIndex (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_Subscript (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Subscript (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Superscript (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Superscript (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Underline (
        /*[out,retval]*/ enum WdUnderline * prop ) = 0;
      virtual HRESULT __stdcall put_Underline (
        /*[in]*/ enum WdUnderline prop ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Size (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Spacing (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Spacing (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Scaling (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Scaling (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Shadow (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Outline (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Outline (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Emboss (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Emboss (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Kerning (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Kerning (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Engrave (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Engrave (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Animation (
        /*[out,retval]*/ enum WdAnimation * prop ) = 0;
      virtual HRESULT __stdcall put_Animation (
        /*[in]*/ enum WdAnimation prop ) = 0;
      virtual HRESULT __stdcall get_Borders (
        /*[out,retval]*/ struct Borders * * prop ) = 0;
      virtual HRESULT __stdcall put_Borders (
        /*[in]*/ struct Borders * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_EmphasisMark (
        /*[out,retval]*/ enum WdEmphasisMark * prop ) = 0;
      virtual HRESULT __stdcall put_EmphasisMark (
        /*[in]*/ enum WdEmphasisMark prop ) = 0;
      virtual HRESULT __stdcall get_DisableCharacterSpaceGrid (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisableCharacterSpaceGrid (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_NameFarEast (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NameFarEast (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_NameAscii (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NameAscii (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_NameOther (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NameOther (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall raw_Grow ( ) = 0;
      virtual HRESULT __stdcall raw_Shrink ( ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_SetAsTemplateDefault ( ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ enum WdColor * prop ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ enum WdColor prop ) = 0;
      virtual HRESULT __stdcall get_BoldBi (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_BoldBi (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ItalicBi (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ItalicBi (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_SizeBi (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SizeBi (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_NameBi (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NameBi (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ColorIndexBi (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_ColorIndexBi (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_DiacriticColor (
        /*[out,retval]*/ enum WdColor * prop ) = 0;
      virtual HRESULT __stdcall put_DiacriticColor (
        /*[in]*/ enum WdColor prop ) = 0;
      virtual HRESULT __stdcall get_UnderlineColor (
        /*[out,retval]*/ enum WdColor * prop ) = 0;
      virtual HRESULT __stdcall put_UnderlineColor (
        /*[in]*/ enum WdColor prop ) = 0;
};

enum WdShapePosition
{
    wdShapeTop = -999999,
    wdShapeLeft = -999998,
    wdShapeBottom = -999997,
    wdShapeRight = -999996,
    wdShapeCenter = -999995,
    wdShapeInside = -999994,
    wdShapeOutside = -999993
};

enum WdTablePosition
{
    wdTableTop = -999999,
    wdTableLeft = -999998,
    wdTableBottom = -999997,
    wdTableRight = -999996,
    wdTableCenter = -999995,
    wdTableInside = -999994,
    wdTableOutside = -999993
};

enum WdDefaultListBehavior
{
    wdWord8ListBehavior = 0,
    wdWord9ListBehavior = 1,
    wdWord10ListBehavior = 2
};

enum WdDefaultTableBehavior
{
    wdWord8TableBehavior = 0,
    wdWord9TableBehavior = 1
};

enum WdAutoFitBehavior
{
    wdAutoFitFixed = 0,
    wdAutoFitContent = 1,
    wdAutoFitWindow = 2
};

enum WdPreferredWidthType
{
    wdPreferredWidthAuto = 1,
    wdPreferredWidthPercent = 2,
    wdPreferredWidthPoints = 3
};

enum WdFarEastLineBreakLanguageID
{
    wdLineBreakJapanese = 1041,
    wdLineBreakKorean = 1042,
    wdLineBreakSimplifiedChinese = 2052,
    wdLineBreakTraditionalChinese = 1028
};

enum WdViewTypeOld
{
    wdPageView = 3,
    wdOnlineView = 6
};

enum WdFramesetType
{
    wdFramesetTypeFrameset = 0,
    wdFramesetTypeFrame = 1
};

enum WdFramesetSizeType
{
    wdFramesetSizeTypePercent = 0,
    wdFramesetSizeTypeFixed = 1,
    wdFramesetSizeTypeRelative = 2
};

enum WdFramesetNewFrameLocation
{
    wdFramesetNewFrameAbove = 0,
    wdFramesetNewFrameBelow = 1,
    wdFramesetNewFrameRight = 2,
    wdFramesetNewFrameLeft = 3
};

enum WdScrollbarType
{
    wdScrollbarTypeAuto = 0,
    wdScrollbarTypeYes = 1,
    wdScrollbarTypeNo = 2
};

enum WdTwoLinesInOneType
{
    wdTwoLinesInOneNone = 0,
    wdTwoLinesInOneNoBrackets = 1,
    wdTwoLinesInOneParentheses = 2,
    wdTwoLinesInOneSquareBrackets = 3,
    wdTwoLinesInOneAngleBrackets = 4,
    wdTwoLinesInOneCurlyBrackets = 5
};

enum WdHorizontalInVerticalType
{
    wdHorizontalInVerticalNone = 0,
    wdHorizontalInVerticalFitInLine = 1,
    wdHorizontalInVerticalResizeLine = 2
};

enum WdHorizontalLineAlignment
{
    wdHorizontalLineAlignLeft = 0,
    wdHorizontalLineAlignCenter = 1,
    wdHorizontalLineAlignRight = 2
};

enum WdHorizontalLineWidthType
{
    wdHorizontalLinePercentWidth = -1,
    wdHorizontalLineFixedWidth = -2
};

enum WdPhoneticGuideAlignmentType
{
    wdPhoneticGuideAlignmentCenter = 0,
    wdPhoneticGuideAlignmentZeroOneZero = 1,
    wdPhoneticGuideAlignmentOneTwoOne = 2,
    wdPhoneticGuideAlignmentLeft = 3,
    wdPhoneticGuideAlignmentRight = 4,
    wdPhoneticGuideAlignmentRightVertical = 5
};

enum WdNewDocumentType
{
    wdNewBlankDocument = 0,
    wdNewWebPage = 1,
    wdNewEmailMessage = 2,
    wdNewFrameset = 3,
    wdNewXMLDocument = 4
};

enum WdKana
{
    wdKanaKatakana = 8,
    wdKanaHiragana = 9
};

enum WdCharacterWidth
{
    wdWidthHalfWidth = 6,
    wdWidthFullWidth = 7
};

enum WdNumberStyleWordBasicBiDi
{
    wdListNumberStyleBidi1 = 49,
    wdListNumberStyleBidi2 = 50,
    wdCaptionNumberStyleBidiLetter1 = 49,
    wdCaptionNumberStyleBidiLetter2 = 50,
    wdNoteNumberStyleBidiLetter1 = 49,
    wdNoteNumberStyleBidiLetter2 = 50,
    wdPageNumberStyleBidiLetter1 = 49,
    wdPageNumberStyleBidiLetter2 = 50
};

enum WdTCSCConverterDirection
{
    wdTCSCConverterDirectionSCTC = 0,
    wdTCSCConverterDirectionTCSC = 1,
    wdTCSCConverterDirectionAuto = 2
};

struct __declspec(uuid("000209de-0000-0000-c000-000000000046"))
HorizontalLineFormat : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetPercentWidth,put=PutPercentWidth))
    float PercentWidth;
    __declspec(property(get=GetNoShade,put=PutNoShade))
    VARIANT_BOOL NoShade;
    __declspec(property(get=GetAlignment,put=PutAlignment))
    enum WdHorizontalLineAlignment Alignment;
    __declspec(property(get=GetWidthType,put=PutWidthType))
    enum WdHorizontalLineWidthType WidthType;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    float GetPercentWidth ( );
    void PutPercentWidth (
        float prop );
    VARIANT_BOOL GetNoShade ( );
    void PutNoShade (
        VARIANT_BOOL prop );
    enum WdHorizontalLineAlignment GetAlignment ( );
    void PutAlignment (
        enum WdHorizontalLineAlignment prop );
    enum WdHorizontalLineWidthType GetWidthType ( );
    void PutWidthType (
        enum WdHorizontalLineWidthType prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_PercentWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_PercentWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_NoShade (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_NoShade (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum WdHorizontalLineAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum WdHorizontalLineAlignment prop ) = 0;
      virtual HRESULT __stdcall get_WidthType (
        /*[out,retval]*/ enum WdHorizontalLineWidthType * prop ) = 0;
      virtual HRESULT __stdcall put_WidthType (
        /*[in]*/ enum WdHorizontalLineWidthType prop ) = 0;
};

struct __declspec(uuid("000209e2-0000-0000-c000-000000000046"))
Frameset : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum WdFramesetType Type;
    __declspec(property(get=GetWidthType,put=PutWidthType))
    enum WdFramesetSizeType WidthType;
    __declspec(property(get=GetHeightType,put=PutHeightType))
    enum WdFramesetSizeType HeightType;
    __declspec(property(get=GetWidth,put=PutWidth))
    long Width;
    __declspec(property(get=GetHeight,put=PutHeight))
    long Height;
    __declspec(property(get=GetChildFramesetCount))
    long ChildFramesetCount;
    __declspec(property(get=GetChildFramesetItem))
    FramesetPtr ChildFramesetItem[];
    __declspec(property(get=GetFrameName,put=PutFrameName))
    _bstr_t FrameName;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetParentFrameset))
    FramesetPtr ParentFrameset;
    __declspec(property(get=GetFrameDisplayBorders,put=PutFrameDisplayBorders))
    VARIANT_BOOL FrameDisplayBorders;
    __declspec(property(get=GetFrameDefaultURL,put=PutFrameDefaultURL))
    _bstr_t FrameDefaultURL;
    __declspec(property(get=GetFrameLinkToFile,put=PutFrameLinkToFile))
    VARIANT_BOOL FrameLinkToFile;
    __declspec(property(get=GetFramesetBorderWidth,put=PutFramesetBorderWidth))
    float FramesetBorderWidth;
    __declspec(property(get=GetFramesetBorderColor,put=PutFramesetBorderColor))
    enum WdColor FramesetBorderColor;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;
    __declspec(property(get=GetFrameScrollbarType,put=PutFrameScrollbarType))
    enum WdScrollbarType FrameScrollbarType;
    __declspec(property(get=GetFrameResizable,put=PutFrameResizable))
    VARIANT_BOOL FrameResizable;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    FramesetPtr GetParentFrameset ( );
    enum WdFramesetType GetType ( );
    enum WdFramesetSizeType GetWidthType ( );
    void PutWidthType (
        enum WdFramesetSizeType prop );
    enum WdFramesetSizeType GetHeightType ( );
    void PutHeightType (
        enum WdFramesetSizeType prop );
    long GetWidth ( );
    void PutWidth (
        long prop );
    long GetHeight ( );
    void PutHeight (
        long prop );
    long GetChildFramesetCount ( );
    FramesetPtr GetChildFramesetItem (
        long Index );
    float GetFramesetBorderWidth ( );
    void PutFramesetBorderWidth (
        float prop );
    enum WdColor GetFramesetBorderColor ( );
    void PutFramesetBorderColor (
        enum WdColor prop );
    enum WdScrollbarType GetFrameScrollbarType ( );
    void PutFrameScrollbarType (
        enum WdScrollbarType prop );
    VARIANT_BOOL GetFrameResizable ( );
    void PutFrameResizable (
        VARIANT_BOOL prop );
    _bstr_t GetFrameName ( );
    void PutFrameName (
        _bstr_t prop );
    VARIANT_BOOL GetFrameDisplayBorders ( );
    void PutFrameDisplayBorders (
        VARIANT_BOOL prop );
    _bstr_t GetFrameDefaultURL ( );
    void PutFrameDefaultURL (
        _bstr_t prop );
    VARIANT_BOOL GetFrameLinkToFile ( );
    void PutFrameLinkToFile (
        VARIANT_BOOL prop );
    FramesetPtr AddNewFrame (
        enum WdFramesetNewFrameLocation Where );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_ParentFrameset (
        /*[out,retval]*/ struct Frameset * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdFramesetType * prop ) = 0;
      virtual HRESULT __stdcall get_WidthType (
        /*[out,retval]*/ enum WdFramesetSizeType * prop ) = 0;
      virtual HRESULT __stdcall put_WidthType (
        /*[in]*/ enum WdFramesetSizeType prop ) = 0;
      virtual HRESULT __stdcall get_HeightType (
        /*[out,retval]*/ enum WdFramesetSizeType * prop ) = 0;
      virtual HRESULT __stdcall put_HeightType (
        /*[in]*/ enum WdFramesetSizeType prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ChildFramesetCount (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_ChildFramesetItem (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Frameset * * prop ) = 0;
      virtual HRESULT __stdcall get_FramesetBorderWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_FramesetBorderWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_FramesetBorderColor (
        /*[out,retval]*/ enum WdColor * prop ) = 0;
      virtual HRESULT __stdcall put_FramesetBorderColor (
        /*[in]*/ enum WdColor prop ) = 0;
      virtual HRESULT __stdcall get_FrameScrollbarType (
        /*[out,retval]*/ enum WdScrollbarType * prop ) = 0;
      virtual HRESULT __stdcall put_FrameScrollbarType (
        /*[in]*/ enum WdScrollbarType prop ) = 0;
      virtual HRESULT __stdcall get_FrameResizable (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FrameResizable (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FrameName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_FrameName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_FrameDisplayBorders (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FrameDisplayBorders (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FrameDefaultURL (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_FrameDefaultURL (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_FrameLinkToFile (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FrameLinkToFile (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall raw_AddNewFrame (
        /*[in]*/ enum WdFramesetNewFrameLocation Where,
        /*[out,retval]*/ struct Frameset * * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("000209e3-0000-0000-c000-000000000046"))
DefaultWebOptions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetOptimizeForBrowser,put=PutOptimizeForBrowser))
    VARIANT_BOOL OptimizeForBrowser;
    __declspec(property(get=GetBrowserLevel,put=PutBrowserLevel))
    enum WdBrowserLevel BrowserLevel;
    __declspec(property(get=GetRelyOnCSS,put=PutRelyOnCSS))
    VARIANT_BOOL RelyOnCSS;
    __declspec(property(get=GetOrganizeInFolder,put=PutOrganizeInFolder))
    VARIANT_BOOL OrganizeInFolder;
    __declspec(property(get=GetUpdateLinksOnSave,put=PutUpdateLinksOnSave))
    VARIANT_BOOL UpdateLinksOnSave;
    __declspec(property(get=GetUseLongFileNames,put=PutUseLongFileNames))
    VARIANT_BOOL UseLongFileNames;
    __declspec(property(get=GetCheckIfOfficeIsHTMLEditor,put=PutCheckIfOfficeIsHTMLEditor))
    VARIANT_BOOL CheckIfOfficeIsHTMLEditor;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCheckIfWordIsDefaultHTMLEditor,put=PutCheckIfWordIsDefaultHTMLEditor))
    VARIANT_BOOL CheckIfWordIsDefaultHTMLEditor;
    __declspec(property(get=GetRelyOnVML,put=PutRelyOnVML))
    VARIANT_BOOL RelyOnVML;
    __declspec(property(get=GetAllowPNG,put=PutAllowPNG))
    VARIANT_BOOL AllowPNG;
    __declspec(property(get=GetScreenSize,put=PutScreenSize))
    enum Office::MsoScreenSize ScreenSize;
    __declspec(property(get=GetPixelsPerInch,put=PutPixelsPerInch))
    long PixelsPerInch;
    __declspec(property(get=GetEncoding,put=PutEncoding))
    enum Office::MsoEncoding Encoding;
    __declspec(property(get=GetAlwaysSaveInDefaultEncoding,put=PutAlwaysSaveInDefaultEncoding))
    VARIANT_BOOL AlwaysSaveInDefaultEncoding;
    __declspec(property(get=GetFonts))
    Office::WebPageFontsPtr Fonts;
    __declspec(property(get=GetFolderSuffix))
    _bstr_t FolderSuffix;
    __declspec(property(get=GetTargetBrowser,put=PutTargetBrowser))
    enum Office::MsoTargetBrowser TargetBrowser;
    __declspec(property(get=GetSaveNewWebPagesAsWebArchives,put=PutSaveNewWebPagesAsWebArchives))
    VARIANT_BOOL SaveNewWebPagesAsWebArchives;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetOptimizeForBrowser ( );
    void PutOptimizeForBrowser (
        VARIANT_BOOL prop );
    enum WdBrowserLevel GetBrowserLevel ( );
    void PutBrowserLevel (
        enum WdBrowserLevel prop );
    VARIANT_BOOL GetRelyOnCSS ( );
    void PutRelyOnCSS (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetOrganizeInFolder ( );
    void PutOrganizeInFolder (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetUpdateLinksOnSave ( );
    void PutUpdateLinksOnSave (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetUseLongFileNames ( );
    void PutUseLongFileNames (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetCheckIfOfficeIsHTMLEditor ( );
    void PutCheckIfOfficeIsHTMLEditor (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetCheckIfWordIsDefaultHTMLEditor ( );
    void PutCheckIfWordIsDefaultHTMLEditor (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetRelyOnVML ( );
    void PutRelyOnVML (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAllowPNG ( );
    void PutAllowPNG (
        VARIANT_BOOL prop );
    enum Office::MsoScreenSize GetScreenSize ( );
    void PutScreenSize (
        enum Office::MsoScreenSize prop );
    long GetPixelsPerInch ( );
    void PutPixelsPerInch (
        long prop );
    enum Office::MsoEncoding GetEncoding ( );
    void PutEncoding (
        enum Office::MsoEncoding prop );
    VARIANT_BOOL GetAlwaysSaveInDefaultEncoding ( );
    void PutAlwaysSaveInDefaultEncoding (
        VARIANT_BOOL prop );
    Office::WebPageFontsPtr GetFonts ( );
    _bstr_t GetFolderSuffix ( );
    enum Office::MsoTargetBrowser GetTargetBrowser ( );
    void PutTargetBrowser (
        enum Office::MsoTargetBrowser prop );
    VARIANT_BOOL GetSaveNewWebPagesAsWebArchives ( );
    void PutSaveNewWebPagesAsWebArchives (
        VARIANT_BOOL prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_OptimizeForBrowser (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OptimizeForBrowser (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_BrowserLevel (
        /*[out,retval]*/ enum WdBrowserLevel * prop ) = 0;
      virtual HRESULT __stdcall put_BrowserLevel (
        /*[in]*/ enum WdBrowserLevel prop ) = 0;
      virtual HRESULT __stdcall get_RelyOnCSS (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RelyOnCSS (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_OrganizeInFolder (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OrganizeInFolder (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UpdateLinksOnSave (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UpdateLinksOnSave (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UseLongFileNames (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseLongFileNames (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CheckIfOfficeIsHTMLEditor (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CheckIfOfficeIsHTMLEditor (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CheckIfWordIsDefaultHTMLEditor (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CheckIfWordIsDefaultHTMLEditor (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RelyOnVML (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RelyOnVML (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AllowPNG (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowPNG (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ScreenSize (
        /*[out,retval]*/ enum Office::MsoScreenSize * prop ) = 0;
      virtual HRESULT __stdcall put_ScreenSize (
        /*[in]*/ enum Office::MsoScreenSize prop ) = 0;
      virtual HRESULT __stdcall get_PixelsPerInch (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_PixelsPerInch (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Encoding (
        /*[out,retval]*/ enum Office::MsoEncoding * prop ) = 0;
      virtual HRESULT __stdcall put_Encoding (
        /*[in]*/ enum Office::MsoEncoding prop ) = 0;
      virtual HRESULT __stdcall get_AlwaysSaveInDefaultEncoding (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AlwaysSaveInDefaultEncoding (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Fonts (
        /*[out,retval]*/ struct Office::WebPageFonts * * prop ) = 0;
      virtual HRESULT __stdcall get_FolderSuffix (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_TargetBrowser (
        /*[out,retval]*/ enum Office::MsoTargetBrowser * prop ) = 0;
      virtual HRESULT __stdcall put_TargetBrowser (
        /*[in]*/ enum Office::MsoTargetBrowser prop ) = 0;
      virtual HRESULT __stdcall get_SaveNewWebPagesAsWebArchives (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SaveNewWebPagesAsWebArchives (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("000209e4-0000-0000-c000-000000000046"))
WebOptions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetOptimizeForBrowser,put=PutOptimizeForBrowser))
    VARIANT_BOOL OptimizeForBrowser;
    __declspec(property(get=GetBrowserLevel,put=PutBrowserLevel))
    enum WdBrowserLevel BrowserLevel;
    __declspec(property(get=GetRelyOnCSS,put=PutRelyOnCSS))
    VARIANT_BOOL RelyOnCSS;
    __declspec(property(get=GetOrganizeInFolder,put=PutOrganizeInFolder))
    VARIANT_BOOL OrganizeInFolder;
    __declspec(property(get=GetUseLongFileNames,put=PutUseLongFileNames))
    VARIANT_BOOL UseLongFileNames;
    __declspec(property(get=GetRelyOnVML,put=PutRelyOnVML))
    VARIANT_BOOL RelyOnVML;
    __declspec(property(get=GetAllowPNG,put=PutAllowPNG))
    VARIANT_BOOL AllowPNG;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetScreenSize,put=PutScreenSize))
    enum Office::MsoScreenSize ScreenSize;
    __declspec(property(get=GetPixelsPerInch,put=PutPixelsPerInch))
    long PixelsPerInch;
    __declspec(property(get=GetEncoding,put=PutEncoding))
    enum Office::MsoEncoding Encoding;
    __declspec(property(get=GetFolderSuffix))
    _bstr_t FolderSuffix;
    __declspec(property(get=GetTargetBrowser,put=PutTargetBrowser))
    enum Office::MsoTargetBrowser TargetBrowser;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetOptimizeForBrowser ( );
    void PutOptimizeForBrowser (
        VARIANT_BOOL prop );
    enum WdBrowserLevel GetBrowserLevel ( );
    void PutBrowserLevel (
        enum WdBrowserLevel prop );
    VARIANT_BOOL GetRelyOnCSS ( );
    void PutRelyOnCSS (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetOrganizeInFolder ( );
    void PutOrganizeInFolder (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetUseLongFileNames ( );
    void PutUseLongFileNames (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetRelyOnVML ( );
    void PutRelyOnVML (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAllowPNG ( );
    void PutAllowPNG (
        VARIANT_BOOL prop );
    enum Office::MsoScreenSize GetScreenSize ( );
    void PutScreenSize (
        enum Office::MsoScreenSize prop );
    long GetPixelsPerInch ( );
    void PutPixelsPerInch (
        long prop );
    enum Office::MsoEncoding GetEncoding ( );
    void PutEncoding (
        enum Office::MsoEncoding prop );
    _bstr_t GetFolderSuffix ( );
    HRESULT UseDefaultFolderSuffix ( );
    enum Office::MsoTargetBrowser GetTargetBrowser ( );
    void PutTargetBrowser (
        enum Office::MsoTargetBrowser prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_OptimizeForBrowser (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OptimizeForBrowser (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_BrowserLevel (
        /*[out,retval]*/ enum WdBrowserLevel * prop ) = 0;
      virtual HRESULT __stdcall put_BrowserLevel (
        /*[in]*/ enum WdBrowserLevel prop ) = 0;
      virtual HRESULT __stdcall get_RelyOnCSS (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RelyOnCSS (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_OrganizeInFolder (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OrganizeInFolder (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UseLongFileNames (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseLongFileNames (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RelyOnVML (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RelyOnVML (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AllowPNG (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowPNG (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ScreenSize (
        /*[out,retval]*/ enum Office::MsoScreenSize * prop ) = 0;
      virtual HRESULT __stdcall put_ScreenSize (
        /*[in]*/ enum Office::MsoScreenSize prop ) = 0;
      virtual HRESULT __stdcall get_PixelsPerInch (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_PixelsPerInch (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Encoding (
        /*[out,retval]*/ enum Office::MsoEncoding * prop ) = 0;
      virtual HRESULT __stdcall put_Encoding (
        /*[in]*/ enum Office::MsoEncoding prop ) = 0;
      virtual HRESULT __stdcall get_FolderSuffix (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall raw_UseDefaultFolderSuffix ( ) = 0;
      virtual HRESULT __stdcall get_TargetBrowser (
        /*[out,retval]*/ enum Office::MsoTargetBrowser * prop ) = 0;
      virtual HRESULT __stdcall put_TargetBrowser (
        /*[in]*/ enum Office::MsoTargetBrowser prop ) = 0;
};

struct __declspec(uuid("000209e1-0000-0000-c000-000000000046"))
OtherCorrectionsException : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetIndex ( );
    _bstr_t GetName ( );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("000209df-0000-0000-c000-000000000046"))
OtherCorrectionsExceptions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    OtherCorrectionsExceptionPtr Item (
        VARIANT * Index );
    OtherCorrectionsExceptionPtr Add (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct OtherCorrectionsException * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct OtherCorrectionsException * * prop ) = 0;
};

struct __declspec(uuid("000209e6-0000-0000-c000-000000000046"))
EmailSignatureEntry : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetIndex ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t prop );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("b923fde0-f08c-11d3-91b0-00105a0a19fd"))
CustomProperty : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetValue,put=PutValue))
    _bstr_t Value;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    _bstr_t GetValue ( );
    void PutValue (
        _bstr_t prop );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("b923fde1-f08c-11d3-91b0-00105a0a19fd"))
CustomProperties : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    CustomPropertyPtr Item (
        VARIANT * Index );
    CustomPropertyPtr Add (
        _bstr_t Name,
        _bstr_t Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct CustomProperty * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Value,
        /*[out,retval]*/ struct CustomProperty * * prop ) = 0;
};

struct __declspec(uuid("5d311669-ea51-11d3-87cc-00105aa31a34"))
MappedDataField : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetDataFieldName))
    _bstr_t DataFieldName;
    __declspec(property(get=GetValue))
    _bstr_t Value;
    __declspec(property(get=GetDataFieldIndex,put=PutDataFieldIndex))
    long DataFieldIndex;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetIndex ( );
    _bstr_t GetDataFieldName ( );
    _bstr_t GetName ( );
    _bstr_t GetValue ( );
    long GetDataFieldIndex ( );
    void PutDataFieldIndex (
        long prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_DataFieldName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_DataFieldIndex (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DataFieldIndex (
        /*[in]*/ long prop ) = 0;
};

struct __declspec(uuid("1498f56d-ed33-41f9-b37b-ef30e50b08ac"))
ConditionalStyle : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetShading))
    ShadingPtr Shading;
    __declspec(property(get=GetBorders,put=PutBorders))
    BordersPtr Borders;
    __declspec(property(get=GetBottomPadding,put=PutBottomPadding))
    float BottomPadding;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetTopPadding,put=PutTopPadding))
    float TopPadding;
    __declspec(property(get=GetLeftPadding,put=PutLeftPadding))
    float LeftPadding;
    __declspec(property(get=GetRightPadding,put=PutRightPadding))
    float RightPadding;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParagraphFormat,put=PutParagraphFormat))
    _ParagraphFormatPtr ParagraphFormat;
    __declspec(property(get=GetFont,put=PutFont))
    _FontPtr Font;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    ShadingPtr GetShading ( );
    BordersPtr GetBorders ( );
    void PutBorders (
        struct Borders * prop );
    float GetBottomPadding ( );
    void PutBottomPadding (
        float prop );
    float GetTopPadding ( );
    void PutTopPadding (
        float prop );
    float GetLeftPadding ( );
    void PutLeftPadding (
        float prop );
    float GetRightPadding ( );
    void PutRightPadding (
        float prop );
    _ParagraphFormatPtr GetParagraphFormat ( );
    void PutParagraphFormat (
        struct _ParagraphFormat * prop );
    _FontPtr GetFont ( );
    void PutFont (
        struct _Font * prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_Borders (
        /*[out,retval]*/ struct Borders * * prop ) = 0;
      virtual HRESULT __stdcall put_Borders (
        /*[in]*/ struct Borders * prop ) = 0;
      virtual HRESULT __stdcall get_BottomPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_BottomPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_TopPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TopPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LeftPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RightPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RightPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ParagraphFormat (
        /*[out,retval]*/ struct _ParagraphFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_ParagraphFormat (
        /*[in]*/ struct _ParagraphFormat * prop ) = 0;
      virtual HRESULT __stdcall get_Font (
        /*[out,retval]*/ struct _Font * * prop ) = 0;
      virtual HRESULT __stdcall put_Font (
        /*[in]*/ struct _Font * prop ) = 0;
};

struct __declspec(uuid("bea85a24-d7da-4f3d-b58c-ed90fb01d615"))
FootnoteOptions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetLocation,put=PutLocation))
    enum WdFootnoteLocation Location;
    __declspec(property(get=GetNumberStyle,put=PutNumberStyle))
    enum WdNoteNumberStyle NumberStyle;
    __declspec(property(get=GetStartingNumber,put=PutStartingNumber))
    long StartingNumber;
    __declspec(property(get=GetNumberingRule,put=PutNumberingRule))
    enum WdNumberingRule NumberingRule;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    enum WdFootnoteLocation GetLocation ( );
    void PutLocation (
        enum WdFootnoteLocation prop );
    enum WdNoteNumberStyle GetNumberStyle ( );
    void PutNumberStyle (
        enum WdNoteNumberStyle prop );
    long GetStartingNumber ( );
    void PutStartingNumber (
        long prop );
    enum WdNumberingRule GetNumberingRule ( );
    void PutNumberingRule (
        enum WdNumberingRule prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Location (
        /*[out,retval]*/ enum WdFootnoteLocation * prop ) = 0;
      virtual HRESULT __stdcall put_Location (
        /*[in]*/ enum WdFootnoteLocation prop ) = 0;
      virtual HRESULT __stdcall get_NumberStyle (
        /*[out,retval]*/ enum WdNoteNumberStyle * prop ) = 0;
      virtual HRESULT __stdcall put_NumberStyle (
        /*[in]*/ enum WdNoteNumberStyle prop ) = 0;
      virtual HRESULT __stdcall get_StartingNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_StartingNumber (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_NumberingRule (
        /*[out,retval]*/ enum WdNumberingRule * prop ) = 0;
      virtual HRESULT __stdcall put_NumberingRule (
        /*[in]*/ enum WdNumberingRule prop ) = 0;
};

struct __declspec(uuid("bf043168-f4de-4e7c-b206-741a8b3ef71a"))
EndnoteOptions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetLocation,put=PutLocation))
    enum WdEndnoteLocation Location;
    __declspec(property(get=GetNumberStyle,put=PutNumberStyle))
    enum WdNoteNumberStyle NumberStyle;
    __declspec(property(get=GetStartingNumber,put=PutStartingNumber))
    long StartingNumber;
    __declspec(property(get=GetNumberingRule,put=PutNumberingRule))
    enum WdNumberingRule NumberingRule;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    enum WdEndnoteLocation GetLocation ( );
    void PutLocation (
        enum WdEndnoteLocation prop );
    enum WdNoteNumberStyle GetNumberStyle ( );
    void PutNumberStyle (
        enum WdNoteNumberStyle prop );
    long GetStartingNumber ( );
    void PutStartingNumber (
        long prop );
    enum WdNumberingRule GetNumberingRule ( );
    void PutNumberingRule (
        enum WdNumberingRule prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Location (
        /*[out,retval]*/ enum WdEndnoteLocation * prop ) = 0;
      virtual HRESULT __stdcall put_Location (
        /*[in]*/ enum WdEndnoteLocation prop ) = 0;
      virtual HRESULT __stdcall get_NumberStyle (
        /*[out,retval]*/ enum WdNoteNumberStyle * prop ) = 0;
      virtual HRESULT __stdcall put_NumberStyle (
        /*[in]*/ enum WdNoteNumberStyle prop ) = 0;
      virtual HRESULT __stdcall get_StartingNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_StartingNumber (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_NumberingRule (
        /*[out,retval]*/ enum WdNumberingRule * prop ) = 0;
      virtual HRESULT __stdcall put_NumberingRule (
        /*[in]*/ enum WdNumberingRule prop ) = 0;
};

struct __declspec(uuid("47cef4ae-dc32-4220-8aa5-19ccc0e6633a"))
Reviewer : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("12dcdc9a-5418-48a3-bbe6-eb57bae275e8"))
Reviewers : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    ReviewerPtr Item (
        VARIANT * Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Reviewer * * prop ) = 0;
};

struct __declspec(uuid("b9f1a4e2-0d0a-43b7-8495-139e7acbd840"))
TaskPane : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("00020a00-0000-0000-c000-000000000046"))
ApplicationEvents3 : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Quit ( );
    HRESULT DocumentChange ( );
    HRESULT DocumentOpen (
        struct _Document * Doc );
    HRESULT DocumentBeforeClose (
        struct _Document * Doc,
        VARIANT_BOOL * Cancel );
    HRESULT DocumentBeforePrint (
        struct _Document * Doc,
        VARIANT_BOOL * Cancel );
    HRESULT DocumentBeforeSave (
        struct _Document * Doc,
        VARIANT_BOOL * SaveAsUI,
        VARIANT_BOOL * Cancel );
    HRESULT NewDocument (
        struct _Document * Doc );
    HRESULT WindowActivate (
        struct _Document * Doc,
        struct Window * Wn );
    HRESULT WindowDeactivate (
        struct _Document * Doc,
        struct Window * Wn );
    HRESULT WindowSelectionChange (
        struct Selection * Sel );
    HRESULT WindowBeforeRightClick (
        struct Selection * Sel,
        VARIANT_BOOL * Cancel );
    HRESULT WindowBeforeDoubleClick (
        struct Selection * Sel,
        VARIANT_BOOL * Cancel );
    HRESULT EPostagePropertyDialog (
        struct _Document * Doc );
    HRESULT EPostageInsert (
        struct _Document * Doc );
    HRESULT MailMergeAfterMerge (
        struct _Document * Doc,
        struct _Document * DocResult );
    HRESULT MailMergeAfterRecordMerge (
        struct _Document * Doc );
    HRESULT MailMergeBeforeMerge (
        struct _Document * Doc,
        long StartRecord,
        long EndRecord,
        VARIANT_BOOL * Cancel );
    HRESULT MailMergeBeforeRecordMerge (
        struct _Document * Doc,
        VARIANT_BOOL * Cancel );
    HRESULT MailMergeDataSourceLoad (
        struct _Document * Doc );
    HRESULT MailMergeDataSourceValidate (
        struct _Document * Doc,
        VARIANT_BOOL * Handled );
    HRESULT MailMergeWizardSendToCustom (
        struct _Document * Doc );
    HRESULT MailMergeWizardStateChange (
        struct _Document * Doc,
        int * FromState,
        int * ToState,
        VARIANT_BOOL * Handled );
    HRESULT WindowSize (
        struct _Document * Doc,
        struct Window * Wn );
};

enum WdDisableFeaturesIntroducedAfter
{
    wd70 = 0,
    wd70FE = 1,
    wd80 = 2
};

enum WdWrapTypeMerged
{
    wdWrapMergeInline = 0,
    wdWrapMergeSquare = 1,
    wdWrapMergeTight = 2,
    wdWrapMergeBehind = 3,
    wdWrapMergeFront = 4,
    wdWrapMergeThrough = 5,
    wdWrapMergeTopBottom = 6
};

enum WdRecoveryType
{
    wdPasteDefault = 0,
    wdSingleCellText = 5,
    wdSingleCellTable = 6,
    wdListContinueNumbering = 7,
    wdListRestartNumbering = 8,
    wdTableInsertAsRows = 11,
    wdTableAppendTable = 10,
    wdTableOriginalFormatting = 12,
    wdChartPicture = 13,
    wdChart = 14,
    wdChartLinked = 15,
    wdFormatOriginalFormatting = 16,
    wdFormatSurroundingFormattingWithEmphasis = 20,
    wdFormatPlainText = 22,
    wdTableOverwriteCells = 23,
    wdListCombineWithExistingList = 24,
    wdListDontMerge = 25,
    wdUseDestinationStylesRecovery = 19
};

enum WdLineEndingType
{
    wdCRLF = 0,
    wdCROnly = 1,
    wdLFOnly = 2,
    wdLFCR = 3,
    wdLSPS = 4
};

enum WdStyleSheetLinkType
{
    wdStyleSheetLinkTypeLinked = 0,
    wdStyleSheetLinkTypeImported = 1
};

enum WdStyleSheetPrecedence
{
    wdStyleSheetPrecedenceHigher = -1,
    wdStyleSheetPrecedenceLower = -2,
    wdStyleSheetPrecedenceHighest = 1,
    wdStyleSheetPrecedenceLowest = 0
};

struct __declspec(uuid("000209ef-0000-0000-c000-000000000046"))
StyleSheet : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFullName))
    _bstr_t FullName;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetPath))
    _bstr_t Path;
    __declspec(property(get=GetType,put=PutType))
    enum WdStyleSheetLinkType Type;
    __declspec(property(get=GetTitle,put=PutTitle))
    _bstr_t Title;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetFullName ( );
    long GetIndex ( );
    _bstr_t GetName ( );
    _bstr_t GetPath ( );
    enum WdStyleSheetLinkType GetType ( );
    void PutType (
        enum WdStyleSheetLinkType prop );
    _bstr_t GetTitle ( );
    void PutTitle (
        _bstr_t prop );
    HRESULT Move (
        enum WdStyleSheetPrecedence Precedence );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_FullName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdStyleSheetLinkType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum WdStyleSheetLinkType prop ) = 0;
      virtual HRESULT __stdcall get_Title (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Title (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ enum WdStyleSheetPrecedence Precedence ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("07b7cc7e-e66c-11d3-9454-00105aa31a08"))
StyleSheets : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    StyleSheetPtr Item (
        VARIANT * Index );
    StyleSheetPtr Add (
        _bstr_t FileName,
        enum WdStyleSheetLinkType LinkType,
        _bstr_t Title,
        enum WdStyleSheetPrecedence Precedence );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct StyleSheet * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR FileName,
        /*[in]*/ enum WdStyleSheetLinkType LinkType,
        /*[in]*/ BSTR Title,
        /*[in]*/ enum WdStyleSheetPrecedence Precedence,
        /*[out,retval]*/ struct StyleSheet * * prop ) = 0;
};

enum WdEmailHTMLFidelity
{
    wdEmailHTMLFidelityLow = 1,
    wdEmailHTMLFidelityMedium = 2,
    wdEmailHTMLFidelityHigh = 3
};

enum WdMailMergeMailFormat
{
    wdMailFormatPlainText = 0,
    wdMailFormatHTML = 1
};

enum WdMappedDataFields
{
    wdUniqueIdentifier = 1,
    wdCourtesyTitle = 2,
    wdFirstName = 3,
    wdMiddleName = 4,
    wdLastName = 5,
    wdSuffix = 6,
    wdNickname = 7,
    wdJobTitle = 8,
    wdCompany = 9,
    wdAddress1 = 10,
    wdAddress2 = 11,
    wdCity = 12,
    wdState = 13,
    wdPostalCode = 14,
    wdCountryRegion = 15,
    wdBusinessPhone = 16,
    wdBusinessFax = 17,
    wdHomePhone = 18,
    wdHomeFax = 19,
    wdEmailAddress = 20,
    wdWebPageURL = 21,
    wdSpouseCourtesyTitle = 22,
    wdSpouseFirstName = 23,
    wdSpouseMiddleName = 24,
    wdSpouseLastName = 25,
    wdSpouseNickname = 26,
    wdRubyFirstName = 27,
    wdRubyLastName = 28,
    wdAddress3 = 29,
    wdDepartment = 30
};

struct __declspec(uuid("799a6814-ea41-11d3-87cc-00105aa31a34"))
MappedDataFields : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    MappedDataFieldPtr Item (
        enum WdMappedDataFields Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ enum WdMappedDataFields Index,
        /*[out,retval]*/ struct MappedDataField * * prop ) = 0;
};

struct __declspec(uuid("0002091d-0000-0000-c000-000000000046"))
MailMergeDataSource : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetHeaderSourceName))
    _bstr_t HeaderSourceName;
    __declspec(property(get=GetType))
    enum WdMailMergeDataSource Type;
    __declspec(property(get=GetHeaderSourceType))
    enum WdMailMergeDataSource HeaderSourceType;
    __declspec(property(get=GetConnectString))
    _bstr_t ConnectString;
    __declspec(property(get=GetQueryString,put=PutQueryString))
    _bstr_t QueryString;
    __declspec(property(get=GetActiveRecord,put=PutActiveRecord))
    enum WdMailMergeActiveRecord ActiveRecord;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetFirstRecord,put=PutFirstRecord))
    long FirstRecord;
    __declspec(property(get=GetLastRecord,put=PutLastRecord))
    long LastRecord;
    __declspec(property(get=GetFieldNames))
    MailMergeFieldNamesPtr FieldNames;
    __declspec(property(get=GetDataFields))
    MailMergeDataFieldsPtr DataFields;
    __declspec(property(get=GetRecordCount))
    long RecordCount;
    __declspec(property(get=GetIncluded,put=PutIncluded))
    VARIANT_BOOL Included;
    __declspec(property(get=GetInvalidAddress,put=PutInvalidAddress))
    VARIANT_BOOL InvalidAddress;
    __declspec(property(get=GetInvalidComments,put=PutInvalidComments))
    _bstr_t InvalidComments;
    __declspec(property(get=GetMappedDataFields))
    MappedDataFieldsPtr MappedDataFields;
    __declspec(property(get=GetTableName))
    _bstr_t TableName;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    _bstr_t GetHeaderSourceName ( );
    enum WdMailMergeDataSource GetType ( );
    enum WdMailMergeDataSource GetHeaderSourceType ( );
    _bstr_t GetConnectString ( );
    _bstr_t GetQueryString ( );
    void PutQueryString (
        _bstr_t prop );
    enum WdMailMergeActiveRecord GetActiveRecord ( );
    void PutActiveRecord (
        enum WdMailMergeActiveRecord prop );
    long GetFirstRecord ( );
    void PutFirstRecord (
        long prop );
    long GetLastRecord ( );
    void PutLastRecord (
        long prop );
    MailMergeFieldNamesPtr GetFieldNames ( );
    MailMergeDataFieldsPtr GetDataFields ( );
    VARIANT_BOOL FindRecord2000 (
        _bstr_t WORDFindText,
        _bstr_t Field );
    long GetRecordCount ( );
    VARIANT_BOOL GetIncluded ( );
    void PutIncluded (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetInvalidAddress ( );
    void PutInvalidAddress (
        VARIANT_BOOL prop );
    _bstr_t GetInvalidComments ( );
    void PutInvalidComments (
        _bstr_t prop );
    MappedDataFieldsPtr GetMappedDataFields ( );
    _bstr_t GetTableName ( );
    VARIANT_BOOL FindRecord (
        _bstr_t WORDFindText,
        VARIANT * Field = &vtMissing );
    HRESULT SetAllIncludedFlags (
        VARIANT_BOOL Included );
    HRESULT SetAllErrorFlags (
        VARIANT_BOOL Invalid,
        _bstr_t InvalidComment );
    HRESULT Close ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_HeaderSourceName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdMailMergeDataSource * prop ) = 0;
      virtual HRESULT __stdcall get_HeaderSourceType (
        /*[out,retval]*/ enum WdMailMergeDataSource * prop ) = 0;
      virtual HRESULT __stdcall get_ConnectString (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_QueryString (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_QueryString (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ActiveRecord (
        /*[out,retval]*/ enum WdMailMergeActiveRecord * prop ) = 0;
      virtual HRESULT __stdcall put_ActiveRecord (
        /*[in]*/ enum WdMailMergeActiveRecord prop ) = 0;
      virtual HRESULT __stdcall get_FirstRecord (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_FirstRecord (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_LastRecord (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_LastRecord (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_FieldNames (
        /*[out,retval]*/ struct MailMergeFieldNames * * prop ) = 0;
      virtual HRESULT __stdcall get_DataFields (
        /*[out,retval]*/ struct MailMergeDataFields * * prop ) = 0;
      virtual HRESULT __stdcall raw_FindRecord2000 (
        /*[in]*/ BSTR WORDFindText,
        /*[in]*/ BSTR Field,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_RecordCount (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Included (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Included (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_InvalidAddress (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_InvalidAddress (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_InvalidComments (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_InvalidComments (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_MappedDataFields (
        /*[out,retval]*/ struct MappedDataFields * * prop ) = 0;
      virtual HRESULT __stdcall get_TableName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall raw_FindRecord (
        /*[in]*/ BSTR WORDFindText,
        /*[in]*/ VARIANT * Field,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_SetAllIncludedFlags (
        /*[in]*/ VARIANT_BOOL Included ) = 0;
      virtual HRESULT __stdcall raw_SetAllErrorFlags (
        /*[in]*/ VARIANT_BOOL Invalid,
        /*[in]*/ BSTR InvalidComment ) = 0;
      virtual HRESULT __stdcall raw_Close ( ) = 0;
};

enum WdConditionCode
{
    wdFirstRow = 0,
    wdLastRow = 1,
    wdOddRowBanding = 2,
    wdEvenRowBanding = 3,
    wdFirstColumn = 4,
    wdLastColumn = 5,
    wdOddColumnBanding = 6,
    wdEvenColumnBanding = 7,
    wdNECell = 8,
    wdNWCell = 9,
    wdSECell = 10,
    wdSWCell = 11
};

struct __declspec(uuid("b7564e97-0519-4c68-b400-3803e7c63242"))
TableStyle : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAllowPageBreaks,put=PutAllowPageBreaks))
    VARIANT_BOOL AllowPageBreaks;
    __declspec(property(get=GetBorders,put=PutBorders))
    BordersPtr Borders;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetBottomPadding,put=PutBottomPadding))
    float BottomPadding;
    __declspec(property(get=GetLeftPadding,put=PutLeftPadding))
    float LeftPadding;
    __declspec(property(get=GetTopPadding,put=PutTopPadding))
    float TopPadding;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetRightPadding,put=PutRightPadding))
    float RightPadding;
    __declspec(property(get=GetAlignment,put=PutAlignment))
    enum WdRowAlignment Alignment;
    __declspec(property(get=GetSpacing,put=PutSpacing))
    float Spacing;
    __declspec(property(get=GetTableDirection,put=PutTableDirection))
    enum WdTableDirection TableDirection;
    __declspec(property(get=GetAllowBreakAcrossPage,put=PutAllowBreakAcrossPage))
    long AllowBreakAcrossPage;
    __declspec(property(get=GetLeftIndent,put=PutLeftIndent))
    float LeftIndent;
    __declspec(property(get=GetShading))
    ShadingPtr Shading;
    __declspec(property(get=GetRowStripe,put=PutRowStripe))
    long RowStripe;
    __declspec(property(get=GetColumnStripe,put=PutColumnStripe))
    long ColumnStripe;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetAllowPageBreaks ( );
    void PutAllowPageBreaks (
        VARIANT_BOOL prop );
    BordersPtr GetBorders ( );
    void PutBorders (
        struct Borders * prop );
    float GetBottomPadding ( );
    void PutBottomPadding (
        float prop );
    float GetLeftPadding ( );
    void PutLeftPadding (
        float prop );
    float GetTopPadding ( );
    void PutTopPadding (
        float prop );
    float GetRightPadding ( );
    void PutRightPadding (
        float prop );
    enum WdRowAlignment GetAlignment ( );
    void PutAlignment (
        enum WdRowAlignment prop );
    float GetSpacing ( );
    void PutSpacing (
        float prop );
    ConditionalStylePtr Condition (
        enum WdConditionCode ConditionCode );
    enum WdTableDirection GetTableDirection ( );
    void PutTableDirection (
        enum WdTableDirection prop );
    long GetAllowBreakAcrossPage ( );
    void PutAllowBreakAcrossPage (
        long prop );
    float GetLeftIndent ( );
    void PutLeftIndent (
        float prop );
    ShadingPtr GetShading ( );
    long GetRowStripe ( );
    void PutRowStripe (
        long prop );
    long GetColumnStripe ( );
    void PutColumnStripe (
        long prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_AllowPageBreaks (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowPageBreaks (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Borders (
        /*[out,retval]*/ struct Borders * * prop ) = 0;
      virtual HRESULT __stdcall put_Borders (
        /*[in]*/ struct Borders * prop ) = 0;
      virtual HRESULT __stdcall get_BottomPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_BottomPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LeftPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_TopPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TopPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RightPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RightPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum WdRowAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum WdRowAlignment prop ) = 0;
      virtual HRESULT __stdcall get_Spacing (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Spacing (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall raw_Condition (
        /*[in]*/ enum WdConditionCode ConditionCode,
        /*[out,retval]*/ struct ConditionalStyle * * prop ) = 0;
      virtual HRESULT __stdcall get_TableDirection (
        /*[out,retval]*/ enum WdTableDirection * prop ) = 0;
      virtual HRESULT __stdcall put_TableDirection (
        /*[in]*/ enum WdTableDirection prop ) = 0;
      virtual HRESULT __stdcall get_AllowBreakAcrossPage (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AllowBreakAcrossPage (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_LeftIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_RowStripe (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_RowStripe (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ColumnStripe (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ColumnStripe (
        /*[in]*/ long prop ) = 0;
};

enum WdCompareTarget
{
    wdCompareTargetSelected = 0,
    wdCompareTargetCurrent = 1,
    wdCompareTargetNew = 2
};

enum WdMergeTarget
{
    wdMergeTargetSelected = 0,
    wdMergeTargetCurrent = 1,
    wdMergeTargetNew = 2
};

enum WdUseFormattingFrom
{
    wdFormattingFromCurrent = 0,
    wdFormattingFromSelected = 1,
    wdFormattingFromPrompt = 2
};

enum WdRevisionsView
{
    wdRevisionsViewFinal = 0,
    wdRevisionsViewOriginal = 1
};

enum WdRevisionsMode
{
    wdBalloonRevisions = 0,
    wdInLineRevisions = 1,
    wdMixedRevisions = 2
};

enum WdRevisionsBalloonWidthType
{
    wdBalloonWidthPercent = 0,
    wdBalloonWidthPoints = 1
};

enum WdRevisionsBalloonPrintOrientation
{
    wdBalloonPrintOrientationAuto = 0,
    wdBalloonPrintOrientationPreserve = 1,
    wdBalloonPrintOrientationForceLandscape = 2
};

enum WdRevisionsBalloonMargin
{
    wdLeftMargin = 0,
    wdRightMargin = 1
};

enum WdTaskPanes
{
    wdTaskPaneFormatting = 0,
    wdTaskPaneRevealFormatting = 1,
    wdTaskPaneMailMerge = 2,
    wdTaskPaneTranslate = 3,
    wdTaskPaneSearch = 4,
    wdTaskPaneXMLStructure = 5,
    wdTaskPaneDocumentProtection = 6,
    wdTaskPaneDocumentActions = 7,
    wdTaskPaneSharedWorkspace = 8,
    wdTaskPaneHelp = 9,
    wdTaskPaneResearch = 10,
    wdTaskPaneFaxService = 11,
    wdTaskPaneXMLDocument = 12,
    wdTaskPaneDocumentUpdates = 13,
    wdTaskPaneSignature = 14,
    wdTaskPaneStyleInspector = 15,
    wdTaskPaneDocumentManagement = 16,
    wdTaskPaneApplyStyles = 17
};

struct __declspec(uuid("e6aaec05-e543-4085-ba92-9bf7d2474f5c"))
TaskPanes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    TaskPanePtr Item (
        enum WdTaskPanes Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ enum WdTaskPanes Index,
        /*[out,retval]*/ struct TaskPane * * prop ) = 0;
};

enum WdShowFilter
{
    wdShowFilterStylesAvailable = 0,
    wdShowFilterStylesInUse = 1,
    wdShowFilterStylesAll = 2,
    wdShowFilterFormattingInUse = 3,
    wdShowFilterFormattingAvailable = 4,
    wdShowFilterFormattingRecommended = 5
};

enum WdMergeSubType
{
    wdMergeSubTypeOther = 0,
    wdMergeSubTypeAccess = 1,
    wdMergeSubTypeOAL = 2,
    wdMergeSubTypeOLEDBWord = 3,
    wdMergeSubTypeWorks = 4,
    wdMergeSubTypeOLEDBText = 5,
    wdMergeSubTypeOutlook = 6,
    wdMergeSubTypeWord = 7,
    wdMergeSubTypeWord2000 = 8
};

enum WdDocumentDirection
{
    wdLeftToRight = 0,
    wdRightToLeft = 1
};

enum WdLanguageID2000
{
    wdChineseHongKong = 3076,
    wdChineseMacao = 5124,
    wdEnglishTrinidad = 11273
};

struct __declspec(uuid("15ebe471-0182-4cce-98d0-b6614d1c32a1"))
SmartTagRecognizer : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetProgID))
    _bstr_t ProgID;
    __declspec(property(get=GetFullName))
    _bstr_t FullName;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetCaption))
    _bstr_t Caption;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetFullName ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL prop );
    _bstr_t GetProgID ( );
    _bstr_t GetCaption ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_FullName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ProgID (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * prop ) = 0;
};

struct __declspec(uuid("f2b60a10-ded5-46fb-a914-3c6f4ebb6451"))
SmartTagRecognizers : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    SmartTagRecognizerPtr Item (
        VARIANT * Index );
    HRESULT ReloadRecognizers ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct SmartTagRecognizer * * prop ) = 0;
      virtual HRESULT __stdcall raw_ReloadRecognizers ( ) = 0;
};

struct __declspec(uuid("fe0971f0-5e60-4985-bcda-95cb0b8e0308"))
XMLSchemaReference : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetNamespaceURI))
    _bstr_t NamespaceURI;
    __declspec(property(get=GetLocation))
    _bstr_t Location;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetNamespaceURI ( );
    _bstr_t GetLocation ( );
    HRESULT Delete ( );
    HRESULT Reload ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_NamespaceURI (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Location (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Reload ( ) = 0;
};

struct __declspec(uuid("356b06ec-4908-42a4-81fc-4b5a51f3483b"))
XMLSchemaReferences : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetAutomaticValidation,put=PutAutomaticValidation))
    VARIANT_BOOL AutomaticValidation;
    __declspec(property(get=GetAllowSaveAsXMLWithoutValidation,put=PutAllowSaveAsXMLWithoutValidation))
    VARIANT_BOOL AllowSaveAsXMLWithoutValidation;
    __declspec(property(get=GetHideValidationErrors,put=PutHideValidationErrors))
    VARIANT_BOOL HideValidationErrors;
    __declspec(property(get=GetIgnoreMixedContent,put=PutIgnoreMixedContent))
    VARIANT_BOOL IgnoreMixedContent;
    __declspec(property(get=GetShowPlaceholderText,put=PutShowPlaceholderText))
    VARIANT_BOOL ShowPlaceholderText;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetAutomaticValidation ( );
    void PutAutomaticValidation (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAllowSaveAsXMLWithoutValidation ( );
    void PutAllowSaveAsXMLWithoutValidation (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetHideValidationErrors ( );
    void PutHideValidationErrors (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetIgnoreMixedContent ( );
    void PutIgnoreMixedContent (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowPlaceholderText ( );
    void PutShowPlaceholderText (
        VARIANT_BOOL prop );
    XMLSchemaReferencePtr Item (
        VARIANT * Index );
    HRESULT Validate ( );
    XMLSchemaReferencePtr Add (
        VARIANT * NamespaceURI,
        VARIANT * Alias,
        VARIANT * FileName,
        VARIANT_BOOL InstallForAllUsers );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_AutomaticValidation (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutomaticValidation (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AllowSaveAsXMLWithoutValidation (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowSaveAsXMLWithoutValidation (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HideValidationErrors (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HideValidationErrors (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_IgnoreMixedContent (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IgnoreMixedContent (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowPlaceholderText (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowPlaceholderText (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct XMLSchemaReference * * prop ) = 0;
      virtual HRESULT __stdcall raw_Validate ( ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT * NamespaceURI,
        /*[in]*/ VARIANT * Alias,
        /*[in]*/ VARIANT * FileName,
        /*[in]*/ VARIANT_BOOL InstallForAllUsers,
        /*[out,retval]*/ struct XMLSchemaReference * * prop ) = 0;
};

struct __declspec(uuid("e3124493-7d6a-410f-9a48-cc822c033cec"))
XSLTransform : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAlias,put=PutAlias))
    _bstr_t Alias[];
    __declspec(property(get=GetLocation,put=PutLocation))
    _bstr_t Location[];
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetAlias (
        VARIANT_BOOL AllUsers );
    void PutAlias (
        VARIANT_BOOL AllUsers,
        _bstr_t prop );
    _bstr_t GetLocation (
        VARIANT_BOOL AllUsers );
    void PutLocation (
        VARIANT_BOOL AllUsers,
        _bstr_t prop );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Alias (
        /*[in]*/ VARIANT_BOOL AllUsers,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Alias (
        /*[in]*/ VARIANT_BOOL AllUsers,
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Location (
        /*[in]*/ VARIANT_BOOL AllUsers,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Location (
        /*[in]*/ VARIANT_BOOL AllUsers,
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("c774f5ea-a539-4284-a1be-30aec052d899"))
XSLTransforms : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    XSLTransformPtr Item (
        VARIANT * Index );
    XSLTransformPtr Add (
        _bstr_t Location,
        VARIANT * Alias,
        VARIANT_BOOL InstallForAllUsers );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct XSLTransform * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Location,
        /*[in]*/ VARIANT * Alias,
        /*[in]*/ VARIANT_BOOL InstallForAllUsers,
        /*[out,retval]*/ struct XSLTransform * * prop ) = 0;
};

struct __declspec(uuid("b140a023-4850-4da6-bc5f-cc459c4507bc"))
XMLNamespace : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetURI))
    _bstr_t URI;
    __declspec(property(get=GetLocation,put=PutLocation))
    _bstr_t Location[];
    __declspec(property(get=GetAlias,put=PutAlias))
    _bstr_t Alias[];
    __declspec(property(get=GetXSLTransforms))
    XSLTransformsPtr XSLTransforms;
    __declspec(property(get=GetDefaultTransform,put=PutDefaultTransform))
    XSLTransformPtr DefaultTransform[];
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetURI ( );
    _bstr_t GetLocation (
        VARIANT_BOOL AllUsers );
    void PutLocation (
        VARIANT_BOOL AllUsers,
        _bstr_t prop );
    _bstr_t GetAlias (
        VARIANT_BOOL AllUsers );
    void PutAlias (
        VARIANT_BOOL AllUsers,
        _bstr_t prop );
    XSLTransformsPtr GetXSLTransforms ( );
    XSLTransformPtr GetDefaultTransform (
        VARIANT_BOOL AllUsers );
    void PutDefaultTransform (
        VARIANT_BOOL AllUsers,
        struct XSLTransform * prop );
    HRESULT AttachToDocument (
        VARIANT * Document );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_URI (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Location (
        /*[in]*/ VARIANT_BOOL AllUsers,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Location (
        /*[in]*/ VARIANT_BOOL AllUsers,
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Alias (
        /*[in]*/ VARIANT_BOOL AllUsers,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Alias (
        /*[in]*/ VARIANT_BOOL AllUsers,
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_XSLTransforms (
        /*[out,retval]*/ struct XSLTransforms * * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultTransform (
        /*[in]*/ VARIANT_BOOL AllUsers,
        /*[out,retval]*/ struct XSLTransform * * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultTransform (
        /*[in]*/ VARIANT_BOOL AllUsers,
        /*[in]*/ struct XSLTransform * prop ) = 0;
      virtual HRESULT __stdcall raw_AttachToDocument (
        /*[in]*/ VARIANT * Document ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("656bbed7-e82d-4b0a-8f97-ec742ba11ffa"))
XMLNamespaces : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    XMLNamespacePtr Item (
        VARIANT * Index );
    XMLNamespacePtr Add (
        _bstr_t Path,
        VARIANT * NamespaceURI,
        VARIANT * Alias,
        VARIANT_BOOL InstallForAllUsers );
    HRESULT InstallManifest (
        _bstr_t Path,
        VARIANT_BOOL InstallForAllUsers );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct XMLNamespace * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT * NamespaceURI,
        /*[in]*/ VARIANT * Alias,
        /*[in]*/ VARIANT_BOOL InstallForAllUsers,
        /*[out,retval]*/ struct XMLNamespace * * prop ) = 0;
      virtual HRESULT __stdcall raw_InstallManifest (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT_BOOL InstallForAllUsers ) = 0;
};

struct __declspec(uuid("00020a01-0000-0000-c000-000000000046"))
ApplicationEvents4 : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Quit ( );
    HRESULT DocumentChange ( );
    HRESULT DocumentOpen (
        struct _Document * Doc );
    HRESULT DocumentBeforeClose (
        struct _Document * Doc,
        VARIANT_BOOL * Cancel );
    HRESULT DocumentBeforePrint (
        struct _Document * Doc,
        VARIANT_BOOL * Cancel );
    HRESULT DocumentBeforeSave (
        struct _Document * Doc,
        VARIANT_BOOL * SaveAsUI,
        VARIANT_BOOL * Cancel );
    HRESULT NewDocument (
        struct _Document * Doc );
    HRESULT WindowActivate (
        struct _Document * Doc,
        struct Window * Wn );
    HRESULT WindowDeactivate (
        struct _Document * Doc,
        struct Window * Wn );
    HRESULT WindowSelectionChange (
        struct Selection * Sel );
    HRESULT WindowBeforeRightClick (
        struct Selection * Sel,
        VARIANT_BOOL * Cancel );
    HRESULT WindowBeforeDoubleClick (
        struct Selection * Sel,
        VARIANT_BOOL * Cancel );
    HRESULT EPostagePropertyDialog (
        struct _Document * Doc );
    HRESULT EPostageInsert (
        struct _Document * Doc );
    HRESULT MailMergeAfterMerge (
        struct _Document * Doc,
        struct _Document * DocResult );
    HRESULT MailMergeAfterRecordMerge (
        struct _Document * Doc );
    HRESULT MailMergeBeforeMerge (
        struct _Document * Doc,
        long StartRecord,
        long EndRecord,
        VARIANT_BOOL * Cancel );
    HRESULT MailMergeBeforeRecordMerge (
        struct _Document * Doc,
        VARIANT_BOOL * Cancel );
    HRESULT MailMergeDataSourceLoad (
        struct _Document * Doc );
    HRESULT MailMergeDataSourceValidate (
        struct _Document * Doc,
        VARIANT_BOOL * Handled );
    HRESULT MailMergeWizardSendToCustom (
        struct _Document * Doc );
    HRESULT MailMergeWizardStateChange (
        struct _Document * Doc,
        int * FromState,
        int * ToState,
        VARIANT_BOOL * Handled );
    HRESULT WindowSize (
        struct _Document * Doc,
        struct Window * Wn );
    HRESULT XMLSelectionChange (
        struct Selection * Sel,
        struct XMLNode * OldXMLNode,
        struct XMLNode * NewXMLNode,
        long * Reason );
    HRESULT XMLValidationError (
        struct XMLNode * XMLNode );
    HRESULT DocumentSync (
        struct _Document * Doc,
        enum Office::MsoSyncEventType SyncEventType );
    HRESULT EPostageInsertEx (
        struct _Document * Doc,
        int cpDeliveryAddrStart,
        int cpDeliveryAddrEnd,
        int cpReturnAddrStart,
        int cpReturnAddrEnd,
        int xaWidth,
        int yaHeight,
        _bstr_t bstrPrinterName,
        _bstr_t bstrPaperFeed,
        VARIANT_BOOL fPrint,
        VARIANT_BOOL * fCancel );
    HRESULT MailMergeDataSourceValidate2 (
        struct _Document * Doc,
        VARIANT_BOOL * Handled );
};

struct __declspec(uuid("00020a02-0000-0000-c000-000000000046"))
DocumentEvents2 : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT New ( );
    HRESULT Open ( );
    HRESULT Close ( );
    HRESULT Sync (
        enum Office::MsoSyncEventType SyncEventType );
    HRESULT XMLAfterInsert (
        struct XMLNode * NewXMLNode,
        VARIANT_BOOL InUndoRedo );
    HRESULT XMLBeforeDelete (
        struct Range * DeletedRange,
        struct XMLNode * OldXMLNode,
        VARIANT_BOOL InUndoRedo );
    HRESULT ContentControlAfterAdd (
        struct ContentControl * NewContentControl,
        VARIANT_BOOL InUndoRedo );
    HRESULT ContentControlBeforeDelete (
        struct ContentControl * OldContentControl,
        VARIANT_BOOL InUndoRedo );
    HRESULT ContentControlOnExit (
        struct ContentControl * ContentControl,
        VARIANT_BOOL * Cancel );
    HRESULT ContentControlOnEnter (
        struct ContentControl * ContentControl );
    HRESULT ContentControlBeforeStoreUpdate (
        struct ContentControl * ContentControl,
        BSTR * Content );
    HRESULT ContentControlBeforeContentUpdate (
        struct ContentControl * ContentControl,
        BSTR * Content );
    HRESULT BuildingBlockInsert (
        struct Range * Range,
        _bstr_t Name,
        _bstr_t Category,
        _bstr_t BlockType,
        _bstr_t Template );
};

enum WdRectangleType
{
    wdTextRectangle = 0,
    wdShapeRectangle = 1,
    wdMarkupRectangle = 2,
    wdMarkupRectangleButton = 3,
    wdPageBorderRectangle = 4,
    wdLineBetweenColumnRectangle = 5,
    wdSelection = 6,
    wdSystem = 7,
    wdMarkupRectangleArea = 8,
    wdReadingModeNavigation = 9,
    wdMarkupRectangleMoveMatch = 10,
    wdReadingModePanningArea = 11,
    wdMailNavArea = 12,
    wdDocumentControlRectangle = 13
};

enum WdLineType
{
    wdTextLine = 0,
    wdTableRow = 1
};

enum WdXMLNodeType
{
    wdXMLNodeElement = 1,
    wdXMLNodeAttribute = 2
};

enum WdXMLSelectionChangeReason
{
    wdXMLSelectionChangeReasonMove = 0,
    wdXMLSelectionChangeReasonInsert = 1,
    wdXMLSelectionChangeReasonDelete = 2
};

enum WdXMLNodeLevel
{
    wdXMLNodeLevelInline = 0,
    wdXMLNodeLevelParagraph = 1,
    wdXMLNodeLevelRow = 2,
    wdXMLNodeLevelCell = 3
};

enum WdSmartTagControlType
{
    wdControlSmartTag = 1,
    wdControlLink = 2,
    wdControlHelp = 3,
    wdControlHelpURL = 4,
    wdControlSeparator = 5,
    wdControlButton = 6,
    wdControlLabel = 7,
    wdControlImage = 8,
    wdControlCheckbox = 9,
    wdControlTextbox = 10,
    wdControlListbox = 11,
    wdControlCombo = 12,
    wdControlActiveX = 13,
    wdControlDocumentFragment = 14,
    wdControlDocumentFragmentURL = 15,
    wdControlRadioGroup = 16
};

struct __declspec(uuid("dfb6aa6c-1068-420f-969d-01280fcc1630"))
SmartTagAction : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetType))
    enum WdSmartTagControlType Type;
    __declspec(property(get=GetPresentInPane))
    VARIANT_BOOL PresentInPane;
    __declspec(property(get=GetExpandHelp,put=PutExpandHelp))
    VARIANT_BOOL ExpandHelp;
    __declspec(property(get=GetCheckboxState,put=PutCheckboxState))
    VARIANT_BOOL CheckboxState;
    __declspec(property(get=GetTextboxText,put=PutTextboxText))
    _bstr_t TextboxText;
    __declspec(property(get=GetListSelection,put=PutListSelection))
    long ListSelection;
    __declspec(property(get=GetRadioGroupSelection,put=PutRadioGroupSelection))
    long RadioGroupSelection;
    __declspec(property(get=GetExpandDocumentFragment,put=PutExpandDocumentFragment))
    VARIANT_BOOL ExpandDocumentFragment;
    __declspec(property(get=GetActiveXControl))
    IDispatchPtr ActiveXControl;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    HRESULT Execute ( );
    enum WdSmartTagControlType GetType ( );
    VARIANT_BOOL GetPresentInPane ( );
    VARIANT_BOOL GetExpandHelp ( );
    void PutExpandHelp (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetCheckboxState ( );
    void PutCheckboxState (
        VARIANT_BOOL prop );
    _bstr_t GetTextboxText ( );
    void PutTextboxText (
        _bstr_t prop );
    long GetListSelection ( );
    void PutListSelection (
        long prop );
    long GetRadioGroupSelection ( );
    void PutRadioGroupSelection (
        long prop );
    VARIANT_BOOL GetExpandDocumentFragment ( );
    void PutExpandDocumentFragment (
        VARIANT_BOOL prop );
    IDispatchPtr GetActiveXControl ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Execute ( ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdSmartTagControlType * prop ) = 0;
      virtual HRESULT __stdcall get_PresentInPane (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_ExpandHelp (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ExpandHelp (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CheckboxState (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CheckboxState (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_TextboxText (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_TextboxText (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ListSelection (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ListSelection (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_RadioGroupSelection (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_RadioGroupSelection (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ExpandDocumentFragment (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ExpandDocumentFragment (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ActiveXControl (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
};

struct __declspec(uuid("cde12cd8-767b-4757-8a31-13029a086305"))
SmartTagActions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    SmartTagActionPtr Item (
        VARIANT * Index );
    HRESULT ReloadActions ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct SmartTagAction * * prop ) = 0;
      virtual HRESULT __stdcall raw_ReloadActions ( ) = 0;
};

struct __declspec(uuid("5e9a888c-e5dc-4dcb-8308-3c91fb61e6f4"))
SmartTagType : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetSmartTagActions))
    SmartTagActionsPtr SmartTagActions;
    __declspec(property(get=GetSmartTagRecognizers))
    SmartTagRecognizersPtr SmartTagRecognizers;
    __declspec(property(get=GetFriendlyName))
    _bstr_t FriendlyName;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    SmartTagActionsPtr GetSmartTagActions ( );
    SmartTagRecognizersPtr GetSmartTagRecognizers ( );
    _bstr_t GetFriendlyName ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_SmartTagActions (
        /*[out,retval]*/ struct SmartTagActions * * prop ) = 0;
      virtual HRESULT __stdcall get_SmartTagRecognizers (
        /*[out,retval]*/ struct SmartTagRecognizers * * prop ) = 0;
      virtual HRESULT __stdcall get_FriendlyName (
        /*[out,retval]*/ BSTR * prop ) = 0;
};

struct __declspec(uuid("db8e3072-e106-4453-8e7c-53056f1d30dc"))
SmartTagTypes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    SmartTagTypePtr Item (
        VARIANT * Index );
    HRESULT ReloadAll ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct SmartTagType * * prop ) = 0;
      virtual HRESULT __stdcall raw_ReloadAll ( ) = 0;
};

enum WdEditorType
{
    wdEditorEveryone = -1,
    wdEditorOwners = -4,
    wdEditorEditors = -5,
    wdEditorCurrent = -6
};

enum WdXMLValidationStatus
{
    wdXMLValidationStatusOK = 0,
    wdXMLValidationStatusCustom = -1072898048
};

struct __declspec(uuid("4a6ae865-199d-4ea3-9f6b-125bd9c40edf"))
Source : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetTag))
    _bstr_t Tag;
    __declspec(property(get=GetField,put=PutField))
    _bstr_t Field[];
    __declspec(property(get=GetXML))
    _bstr_t XML;
    __declspec(property(get=GetCited))
    VARIANT_BOOL Cited;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetTag ( );
    _bstr_t GetField (
        _bstr_t Name );
    void PutField (
        _bstr_t Name,
        _bstr_t prop );
    _bstr_t GetXML ( );
    VARIANT_BOOL GetCited ( );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Tag (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Field (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Field (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_XML (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Cited (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("fa02a26b-6550-45c5-b6f0-80e757cd3482"))
Sources : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    SourcePtr Item (
        long Index );
    HRESULT Add (
        _bstr_t Data );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Source * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Data ) = 0;
};

struct __declspec(uuid("3834f60f-ee8c-455d-a441-d766675d6d3b"))
Bibliography : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetSources))
    SourcesPtr Sources;
    __declspec(property(get=GetBibliographyStyle,put=PutBibliographyStyle))
    _bstr_t BibliographyStyle;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    SourcesPtr GetSources ( );
    _bstr_t GetBibliographyStyle ( );
    void PutBibliographyStyle (
        _bstr_t prop );
    _bstr_t GenerateUniqueTag ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Sources (
        /*[out,retval]*/ struct Sources * * prop ) = 0;
      virtual HRESULT __stdcall get_BibliographyStyle (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_BibliographyStyle (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall raw_GenerateUniqueTag (
        /*[out,retval]*/ BSTR * prop ) = 0;
};

struct __declspec(uuid("d8779f01-4869-4403-b334-d60c5f9c9175"))
OMathAutoCorrectEntry : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetValue,put=PutValue))
    _bstr_t Value;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetIndex ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t prop );
    _bstr_t GetValue ( );
    void PutValue (
        _bstr_t prop );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("18cd5ec8-8b7b-42c8-992a-2a407468642c"))
OMathAutoCorrectEntries : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    OMathAutoCorrectEntryPtr Item (
        VARIANT * Index );
    OMathAutoCorrectEntryPtr Add (
        _bstr_t Name,
        _bstr_t Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct OMathAutoCorrectEntry * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Value,
        /*[out,retval]*/ struct OMathAutoCorrectEntry * * prop ) = 0;
};

struct __declspec(uuid("5c04bd93-2f3f-4668-918d-9738ec901039"))
OMathRecognizedFunction : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName))
    _bstr_t Name;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetIndex ( );
    _bstr_t GetName ( );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("44fee887-6600-41ab-95a5-de33c605116c"))
OMathRecognizedFunctions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    OMathRecognizedFunctionPtr Item (
        VARIANT * Index );
    OMathRecognizedFunctionPtr Add (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct OMathRecognizedFunction * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct OMathRecognizedFunction * * prop ) = 0;
};

struct __declspec(uuid("6f9d1f68-06f7-49ef-8902-185e54eb5e87"))
OMathAutoCorrect : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get__ReplaceText,put=Put__ReplaceText))
    VARIANT_BOOL __ReplaceText;
    __declspec(property(get=GetUseOutsideOMath,put=PutUseOutsideOMath))
    VARIANT_BOOL UseOutsideOMath;
    __declspec(property(get=GetEntries))
    OMathAutoCorrectEntriesPtr Entries;
    __declspec(property(get=GetFunctions))
    OMathRecognizedFunctionsPtr Functions;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL Get__ReplaceText ( );
    void Put__ReplaceText (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetUseOutsideOMath ( );
    void PutUseOutsideOMath (
        VARIANT_BOOL prop );
    OMathAutoCorrectEntriesPtr GetEntries ( );
    OMathRecognizedFunctionsPtr GetFunctions ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get___ReplaceText (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put___ReplaceText (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UseOutsideOMath (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseOutsideOMath (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Entries (
        /*[out,retval]*/ struct OMathAutoCorrectEntries * * prop ) = 0;
      virtual HRESULT __stdcall get_Functions (
        /*[out,retval]*/ struct OMathRecognizedFunctions * * prop ) = 0;
};

struct __declspec(uuid("0c1fabe7-f737-406f-9ca3-b07661f9d1a2"))
XMLMapping : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIsMapped))
    VARIANT_BOOL IsMapped;
    __declspec(property(get=GetCustomXMLPart))
    Office::_CustomXMLPartPtr CustomXMLPart;
    __declspec(property(get=GetCustomXMLNode))
    Office::CustomXMLNodePtr CustomXMLNode;
    __declspec(property(get=GetXPath))
    _bstr_t XPath;
    __declspec(property(get=GetPrefixMappings))
    _bstr_t PrefixMappings;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetIsMapped ( );
    Office::_CustomXMLPartPtr GetCustomXMLPart ( );
    Office::CustomXMLNodePtr GetCustomXMLNode ( );
    VARIANT_BOOL SetMapping (
        _bstr_t XPath,
        _bstr_t PrefixMapping,
        struct Office::_CustomXMLPart * Source );
    HRESULT Delete ( );
    VARIANT_BOOL SetMappingByNode (
        struct Office::CustomXMLNode * Node );
    _bstr_t GetXPath ( );
    _bstr_t GetPrefixMappings ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_IsMapped (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_CustomXMLPart (
        /*[out,retval]*/ struct Office::_CustomXMLPart * * prop ) = 0;
      virtual HRESULT __stdcall get_CustomXMLNode (
        /*[out,retval]*/ struct Office::CustomXMLNode * * prop ) = 0;
      virtual HRESULT __stdcall raw_SetMapping (
        /*[in]*/ BSTR XPath,
        /*[in]*/ BSTR PrefixMapping,
        /*[in]*/ struct Office::_CustomXMLPart * Source,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_SetMappingByNode (
        /*[in]*/ struct Office::CustomXMLNode * Node,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_XPath (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_PrefixMappings (
        /*[out,retval]*/ BSTR * prop ) = 0;
};

struct __declspec(uuid("0c6fa8ca-e65f-4fc7-ab8f-20729eecbb14"))
ContentControlListEntry : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetText,put=PutText))
    _bstr_t Text;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetValue,put=PutValue))
    _bstr_t Value;
    __declspec(property(get=GetIndex,put=PutIndex))
    long Index;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetText ( );
    void PutText (
        _bstr_t prop );
    _bstr_t GetValue ( );
    void PutValue (
        _bstr_t prop );
    long GetIndex ( );
    void PutIndex (
        long prop );
    HRESULT Delete ( );
    HRESULT MoveUp ( );
    HRESULT MoveDown ( );
    HRESULT Select ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Index (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_MoveUp ( ) = 0;
      virtual HRESULT __stdcall raw_MoveDown ( ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
};

struct __declspec(uuid("54f46dc4-f6a6-48cc-bd66-46c1ddeadd22"))
ContentControlListEntries : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    HRESULT Clear ( );
    ContentControlListEntryPtr Item (
        long Index );
    ContentControlListEntryPtr Add (
        _bstr_t Text,
        _bstr_t Value,
        long Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Clear ( ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct ContentControlListEntry * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Text,
        /*[in]*/ BSTR Value,
        /*[in]*/ long Index,
        /*[out,retval]*/ struct ContentControlListEntry * * prop ) = 0;
};

struct __declspec(uuid("e6aaec05-e543-4085-ba92-9bf7d2474f51"))
Research : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _variant_t Query (
        _bstr_t ServiceID,
        _bstr_t QueryString,
        enum WdLanguageID QueryLanguage,
        VARIANT_BOOL UseSelection,
        VARIANT_BOOL LaunchQuery );
    _variant_t SetLanguagePair (
        enum WdLanguageID LanguageFrom,
        enum WdLanguageID LanguageTo );
    VARIANT_BOOL IsResearchService (
        _bstr_t ServiceID );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Query (
        /*[in]*/ BSTR ServiceID,
        /*[in]*/ BSTR QueryString,
        /*[in]*/ enum WdLanguageID QueryLanguage,
        /*[in]*/ VARIANT_BOOL UseSelection,
        /*[in]*/ VARIANT_BOOL LaunchQuery,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall raw_SetLanguagePair (
        /*[in]*/ enum WdLanguageID LanguageFrom,
        /*[in]*/ enum WdLanguageID LanguageTo,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall raw_IsResearchService (
        /*[in]*/ BSTR ServiceID,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
};

struct __declspec(uuid("d040daf9-6ce4-4be8-839d-f4538a4301cf"))
SoftEdgeFormat : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetType,put=PutType))
    enum Office::MsoSoftEdgeType Type;

    //
    // Wrapper methods for error-handling
    //

    enum Office::MsoSoftEdgeType GetType ( );
    void PutType (
        enum Office::MsoSoftEdgeType prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoSoftEdgeType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum Office::MsoSoftEdgeType prop ) = 0;
};

struct __declspec(uuid("f01943ff-1985-445e-8602-8fb8f39cca75"))
ReflectionFormat : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetType,put=PutType))
    enum Office::MsoReflectionType Type;

    //
    // Wrapper methods for error-handling
    //

    enum Office::MsoReflectionType GetType ( );
    void PutType (
        enum Office::MsoReflectionType prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoReflectionType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum Office::MsoReflectionType prop ) = 0;
};

enum WdStyleSort
{
    wdStyleSortByName = 0,
    wdStyleSortRecommended = 1,
    wdStyleSortByFont = 2,
    wdStyleSortByBasedOn = 3,
    wdStyleSortByType = 4
};

enum WdRemoveDocInfoType
{
    wdRDIComments = 1,
    wdRDIRevisions = 2,
    wdRDIVersions = 3,
    wdRDIRemovePersonalInformation = 4,
    wdRDIEmailHeader = 5,
    wdRDIRoutingSlip = 6,
    wdRDISendForReview = 7,
    wdRDIDocumentProperties = 8,
    wdRDITemplate = 9,
    wdRDIDocumentWorkspace = 10,
    wdRDIInkAnnotations = 11,
    wdRDIDocumentServerProperties = 14,
    wdRDIDocumentManagementPolicy = 15,
    wdRDIContentType = 16,
    wdRDIAll = 99
};

enum WdCheckInVersionType
{
    wdCheckInMinorVersion = 0,
    wdCheckInMajorVersion = 1,
    wdCheckInOverwriteVersion = 2
};

enum WdMoveToTextMark
{
    wdMoveToTextMarkNone = 0,
    wdMoveToTextMarkBold = 1,
    wdMoveToTextMarkItalic = 2,
    wdMoveToTextMarkUnderline = 3,
    wdMoveToTextMarkDoubleUnderline = 4,
    wdMoveToTextMarkColorOnly = 5,
    wdMoveToTextMarkStrikeThrough = 6,
    wdMoveToTextMarkDoubleStrikeThrough = 7
};

enum WdMoveFromTextMark
{
    wdMoveFromTextMarkHidden = 0,
    wdMoveFromTextMarkDoubleStrikeThrough = 1,
    wdMoveFromTextMarkStrikeThrough = 2,
    wdMoveFromTextMarkCaret = 3,
    wdMoveFromTextMarkPound = 4,
    wdMoveFromTextMarkNone = 5,
    wdMoveFromTextMarkBold = 6,
    wdMoveFromTextMarkItalic = 7,
    wdMoveFromTextMarkUnderline = 8,
    wdMoveFromTextMarkDoubleUnderline = 9,
    wdMoveFromTextMarkColorOnly = 10
};

enum WdOMathFunctionType
{
    wdOMathFunctionAcc = 1,
    wdOMathFunctionBar = 2,
    wdOMathFunctionBox = 3,
    wdOMathFunctionBorderBox = 4,
    wdOMathFunctionDelim = 5,
    wdOMathFunctionEqArray = 6,
    wdOMathFunctionFrac = 7,
    wdOMathFunctionFunc = 8,
    wdOMathFunctionGroupChar = 9,
    wdOMathFunctionLimLow = 10,
    wdOMathFunctionLimUpp = 11,
    wdOMathFunctionMat = 12,
    wdOMathFunctionNary = 13,
    wdOMathFunctionPhantom = 14,
    wdOMathFunctionScrPre = 15,
    wdOMathFunctionRad = 16,
    wdOMathFunctionScrSub = 17,
    wdOMathFunctionScrSubSup = 18,
    wdOMathFunctionScrSup = 19,
    wdOMathFunctionText = 20,
    wdOMathFunctionNormalText = 21,
    wdOMathFunctionLiteralText = 22
};

enum WdOMathHorizAlignType
{
    wdOMathHorizAlignCenter = 0,
    wdOMathHorizAlignLeft = 1,
    wdOMathHorizAlignRight = 2
};

enum WdOMathVertAlignType
{
    wdOMathVertAlignCenter = 0,
    wdOMathVertAlignTop = 1,
    wdOMathVertAlignBottom = 2
};

enum WdOMathFracType
{
    wdOMathFracBar = 0,
    wdOMathFracNoBar = 1,
    wdOMathFracSkw = 2,
    wdOMathFracLin = 3
};

enum WdOMathSpacingRule
{
    wdOMathSpacingSingle = 0,
    wdOMathSpacing1pt5 = 1,
    wdOMathSpacingDouble = 2,
    wdOMathSpacingExactly = 3,
    wdOMathSpacingMultiple = 4
};

enum WdOMathType
{
    wdOMathDisplay = 0,
    wdOMathInline = 1
};

enum WdOMathShapeType
{
    wdOMathShapeCentered = 0,
    wdOMathShapeMatch = 1
};

enum WdOMathJc
{
    wdOMathJcCenterGroup = 1,
    wdOMathJcCenter = 2,
    wdOMathJcLeft = 3,
    wdOMathJcRight = 4,
    wdOMathJcInline = 7
};

enum WdOMathBreakBin
{
    wdOMathBreakBinBefore = 0,
    wdOMathBreakBinAfter = 1,
    wdOMathBreakBinRepeat = 2
};

enum WdOMathBreakSub
{
    wdOMathBreakSubMinusMinus = 0,
    wdOMathBreakSubPlusMinus = 1,
    wdOMathBreakSubMinusPlus = 2
};

enum WdReadingLayoutMargin
{
    wdAutomaticMargin = 0,
    wdSuppressMargin = 1,
    wdFullMargin = 2
};

struct __declspec(uuid("000209a5-0000-0000-c000-000000000046"))
View : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetType,put=PutType))
    enum WdViewType Type;
    __declspec(property(get=GetFullScreen,put=PutFullScreen))
    VARIANT_BOOL FullScreen;
    __declspec(property(get=GetDraft,put=PutDraft))
    VARIANT_BOOL Draft;
    __declspec(property(get=GetShowAll,put=PutShowAll))
    VARIANT_BOOL ShowAll;
    __declspec(property(get=GetShowFieldCodes,put=PutShowFieldCodes))
    VARIANT_BOOL ShowFieldCodes;
    __declspec(property(get=GetMailMergeDataView,put=PutMailMergeDataView))
    VARIANT_BOOL MailMergeDataView;
    __declspec(property(get=GetMagnifier,put=PutMagnifier))
    VARIANT_BOOL Magnifier;
    __declspec(property(get=GetShowFirstLineOnly,put=PutShowFirstLineOnly))
    VARIANT_BOOL ShowFirstLineOnly;
    __declspec(property(get=GetShowFormat,put=PutShowFormat))
    VARIANT_BOOL ShowFormat;
    __declspec(property(get=GetZoom))
    ZoomPtr Zoom;
    __declspec(property(get=GetShowObjectAnchors,put=PutShowObjectAnchors))
    VARIANT_BOOL ShowObjectAnchors;
    __declspec(property(get=GetShowTextBoundaries,put=PutShowTextBoundaries))
    VARIANT_BOOL ShowTextBoundaries;
    __declspec(property(get=GetShowHighlight,put=PutShowHighlight))
    VARIANT_BOOL ShowHighlight;
    __declspec(property(get=GetShowDrawings,put=PutShowDrawings))
    VARIANT_BOOL ShowDrawings;
    __declspec(property(get=GetShowTabs,put=PutShowTabs))
    VARIANT_BOOL ShowTabs;
    __declspec(property(get=GetShowSpaces,put=PutShowSpaces))
    VARIANT_BOOL ShowSpaces;
    __declspec(property(get=GetShowParagraphs,put=PutShowParagraphs))
    VARIANT_BOOL ShowParagraphs;
    __declspec(property(get=GetShowHyphens,put=PutShowHyphens))
    VARIANT_BOOL ShowHyphens;
    __declspec(property(get=GetShowHiddenText,put=PutShowHiddenText))
    VARIANT_BOOL ShowHiddenText;
    __declspec(property(get=GetWrapToWindow,put=PutWrapToWindow))
    VARIANT_BOOL WrapToWindow;
    __declspec(property(get=GetShowPicturePlaceHolders,put=PutShowPicturePlaceHolders))
    VARIANT_BOOL ShowPicturePlaceHolders;
    __declspec(property(get=GetShowBookmarks,put=PutShowBookmarks))
    VARIANT_BOOL ShowBookmarks;
    __declspec(property(get=GetFieldShading,put=PutFieldShading))
    enum WdFieldShading FieldShading;
    __declspec(property(get=GetShowAnimation,put=PutShowAnimation))
    VARIANT_BOOL ShowAnimation;
    __declspec(property(get=GetTableGridlines,put=PutTableGridlines))
    VARIANT_BOOL TableGridlines;
    __declspec(property(get=GetEnlargeFontsLessThan,put=PutEnlargeFontsLessThan))
    long EnlargeFontsLessThan;
    __declspec(property(get=GetShowMainTextLayer,put=PutShowMainTextLayer))
    VARIANT_BOOL ShowMainTextLayer;
    __declspec(property(get=GetSeekView,put=PutSeekView))
    enum WdSeekView SeekView;
    __declspec(property(get=GetSplitSpecial,put=PutSplitSpecial))
    enum WdSpecialPane SplitSpecial;
    __declspec(property(get=GetBrowseToWindow,put=PutBrowseToWindow))
    long BrowseToWindow;
    __declspec(property(get=GetShowOptionalBreaks,put=PutShowOptionalBreaks))
    VARIANT_BOOL ShowOptionalBreaks;
    __declspec(property(get=GetDisplayPageBoundaries,put=PutDisplayPageBoundaries))
    VARIANT_BOOL DisplayPageBoundaries;
    __declspec(property(get=GetDisplaySmartTags,put=PutDisplaySmartTags))
    VARIANT_BOOL DisplaySmartTags;
    __declspec(property(get=GetShowRevisionsAndComments,put=PutShowRevisionsAndComments))
    VARIANT_BOOL ShowRevisionsAndComments;
    __declspec(property(get=GetShowComments,put=PutShowComments))
    VARIANT_BOOL ShowComments;
    __declspec(property(get=GetShowInsertionsAndDeletions,put=PutShowInsertionsAndDeletions))
    VARIANT_BOOL ShowInsertionsAndDeletions;
    __declspec(property(get=GetShowFormatChanges,put=PutShowFormatChanges))
    VARIANT_BOOL ShowFormatChanges;
    __declspec(property(get=GetRevisionsView,put=PutRevisionsView))
    enum WdRevisionsView RevisionsView;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetRevisionsMode,put=PutRevisionsMode))
    enum WdRevisionsMode RevisionsMode;
    __declspec(property(get=GetRevisionsBalloonWidth,put=PutRevisionsBalloonWidth))
    float RevisionsBalloonWidth;
    __declspec(property(get=GetRevisionsBalloonWidthType,put=PutRevisionsBalloonWidthType))
    enum WdRevisionsBalloonWidthType RevisionsBalloonWidthType;
    __declspec(property(get=GetRevisionsBalloonSide,put=PutRevisionsBalloonSide))
    enum WdRevisionsBalloonMargin RevisionsBalloonSide;
    __declspec(property(get=GetReviewers))
    ReviewersPtr Reviewers;
    __declspec(property(get=GetRevisionsBalloonShowConnectingLines,put=PutRevisionsBalloonShowConnectingLines))
    VARIANT_BOOL RevisionsBalloonShowConnectingLines;
    __declspec(property(get=GetReadingLayout,put=PutReadingLayout))
    VARIANT_BOOL ReadingLayout;
    __declspec(property(get=GetShowXMLMarkup,put=PutShowXMLMarkup))
    long ShowXMLMarkup;
    __declspec(property(get=GetShadeEditableRanges,put=PutShadeEditableRanges))
    long ShadeEditableRanges;
    __declspec(property(get=GetShowInkAnnotations,put=PutShowInkAnnotations))
    VARIANT_BOOL ShowInkAnnotations;
    __declspec(property(get=GetDisplayBackgrounds,put=PutDisplayBackgrounds))
    VARIANT_BOOL DisplayBackgrounds;
    __declspec(property(get=GetReadingLayoutActualView,put=PutReadingLayoutActualView))
    VARIANT_BOOL ReadingLayoutActualView;
    __declspec(property(get=GetReadingLayoutAllowMultiplePages,put=PutReadingLayoutAllowMultiplePages))
    VARIANT_BOOL ReadingLayoutAllowMultiplePages;
    __declspec(property(get=GetReadingLayoutAllowEditing,put=PutReadingLayoutAllowEditing))
    VARIANT_BOOL ReadingLayoutAllowEditing;
    __declspec(property(get=GetReadingLayoutTruncateMargins,put=PutReadingLayoutTruncateMargins))
    enum WdReadingLayoutMargin ReadingLayoutTruncateMargins;
    __declspec(property(get=GetShowMarkupAreaHighlight,put=PutShowMarkupAreaHighlight))
    VARIANT_BOOL ShowMarkupAreaHighlight;
    __declspec(property(get=GetPanning,put=PutPanning))
    VARIANT_BOOL Panning;
    __declspec(property(get=GetShowCropMarks,put=PutShowCropMarks))
    VARIANT_BOOL ShowCropMarks;
    __declspec(property(get=GetMarkupMode,put=PutMarkupMode))
    enum WdRevisionsMode MarkupMode;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    enum WdViewType GetType ( );
    void PutType (
        enum WdViewType prop );
    VARIANT_BOOL GetFullScreen ( );
    void PutFullScreen (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetDraft ( );
    void PutDraft (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowAll ( );
    void PutShowAll (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowFieldCodes ( );
    void PutShowFieldCodes (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMailMergeDataView ( );
    void PutMailMergeDataView (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMagnifier ( );
    void PutMagnifier (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowFirstLineOnly ( );
    void PutShowFirstLineOnly (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowFormat ( );
    void PutShowFormat (
        VARIANT_BOOL prop );
    ZoomPtr GetZoom ( );
    VARIANT_BOOL GetShowObjectAnchors ( );
    void PutShowObjectAnchors (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowTextBoundaries ( );
    void PutShowTextBoundaries (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowHighlight ( );
    void PutShowHighlight (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowDrawings ( );
    void PutShowDrawings (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowTabs ( );
    void PutShowTabs (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowSpaces ( );
    void PutShowSpaces (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowParagraphs ( );
    void PutShowParagraphs (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowHyphens ( );
    void PutShowHyphens (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowHiddenText ( );
    void PutShowHiddenText (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetWrapToWindow ( );
    void PutWrapToWindow (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowPicturePlaceHolders ( );
    void PutShowPicturePlaceHolders (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowBookmarks ( );
    void PutShowBookmarks (
        VARIANT_BOOL prop );
    enum WdFieldShading GetFieldShading ( );
    void PutFieldShading (
        enum WdFieldShading prop );
    VARIANT_BOOL GetShowAnimation ( );
    void PutShowAnimation (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetTableGridlines ( );
    void PutTableGridlines (
        VARIANT_BOOL prop );
    long GetEnlargeFontsLessThan ( );
    void PutEnlargeFontsLessThan (
        long prop );
    VARIANT_BOOL GetShowMainTextLayer ( );
    void PutShowMainTextLayer (
        VARIANT_BOOL prop );
    enum WdSeekView GetSeekView ( );
    void PutSeekView (
        enum WdSeekView prop );
    enum WdSpecialPane GetSplitSpecial ( );
    void PutSplitSpecial (
        enum WdSpecialPane prop );
    long GetBrowseToWindow ( );
    void PutBrowseToWindow (
        long prop );
    VARIANT_BOOL GetShowOptionalBreaks ( );
    void PutShowOptionalBreaks (
        VARIANT_BOOL prop );
    HRESULT CollapseOutline (
        VARIANT * Range = &vtMissing );
    HRESULT ExpandOutline (
        VARIANT * Range = &vtMissing );
    HRESULT ShowAllHeadings ( );
    HRESULT ShowHeading (
        long Level );
    HRESULT PreviousHeaderFooter ( );
    HRESULT NextHeaderFooter ( );
    VARIANT_BOOL GetDisplayPageBoundaries ( );
    void PutDisplayPageBoundaries (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetDisplaySmartTags ( );
    void PutDisplaySmartTags (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowRevisionsAndComments ( );
    void PutShowRevisionsAndComments (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowComments ( );
    void PutShowComments (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowInsertionsAndDeletions ( );
    void PutShowInsertionsAndDeletions (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowFormatChanges ( );
    void PutShowFormatChanges (
        VARIANT_BOOL prop );
    enum WdRevisionsView GetRevisionsView ( );
    void PutRevisionsView (
        enum WdRevisionsView prop );
    enum WdRevisionsMode GetRevisionsMode ( );
    void PutRevisionsMode (
        enum WdRevisionsMode prop );
    float GetRevisionsBalloonWidth ( );
    void PutRevisionsBalloonWidth (
        float prop );
    enum WdRevisionsBalloonWidthType GetRevisionsBalloonWidthType ( );
    void PutRevisionsBalloonWidthType (
        enum WdRevisionsBalloonWidthType prop );
    enum WdRevisionsBalloonMargin GetRevisionsBalloonSide ( );
    void PutRevisionsBalloonSide (
        enum WdRevisionsBalloonMargin prop );
    ReviewersPtr GetReviewers ( );
    VARIANT_BOOL GetRevisionsBalloonShowConnectingLines ( );
    void PutRevisionsBalloonShowConnectingLines (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetReadingLayout ( );
    void PutReadingLayout (
        VARIANT_BOOL prop );
    long GetShowXMLMarkup ( );
    void PutShowXMLMarkup (
        long prop );
    long GetShadeEditableRanges ( );
    void PutShadeEditableRanges (
        long prop );
    VARIANT_BOOL GetShowInkAnnotations ( );
    void PutShowInkAnnotations (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetDisplayBackgrounds ( );
    void PutDisplayBackgrounds (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetReadingLayoutActualView ( );
    void PutReadingLayoutActualView (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetReadingLayoutAllowMultiplePages ( );
    void PutReadingLayoutAllowMultiplePages (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetReadingLayoutAllowEditing ( );
    void PutReadingLayoutAllowEditing (
        VARIANT_BOOL prop );
    enum WdReadingLayoutMargin GetReadingLayoutTruncateMargins ( );
    void PutReadingLayoutTruncateMargins (
        enum WdReadingLayoutMargin prop );
    VARIANT_BOOL GetShowMarkupAreaHighlight ( );
    void PutShowMarkupAreaHighlight (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetPanning ( );
    void PutPanning (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowCropMarks ( );
    void PutShowCropMarks (
        VARIANT_BOOL prop );
    enum WdRevisionsMode GetMarkupMode ( );
    void PutMarkupMode (
        enum WdRevisionsMode prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdViewType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum WdViewType prop ) = 0;
      virtual HRESULT __stdcall get_FullScreen (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FullScreen (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Draft (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Draft (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowAll (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowAll (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowFieldCodes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowFieldCodes (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MailMergeDataView (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MailMergeDataView (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Magnifier (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Magnifier (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowFirstLineOnly (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowFirstLineOnly (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowFormat (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowFormat (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Zoom (
        /*[out,retval]*/ struct Zoom * * prop ) = 0;
      virtual HRESULT __stdcall get_ShowObjectAnchors (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowObjectAnchors (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowTextBoundaries (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowTextBoundaries (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowHighlight (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowHighlight (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowDrawings (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowDrawings (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowTabs (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowTabs (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowSpaces (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowSpaces (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowParagraphs (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowParagraphs (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowHyphens (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowHyphens (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowHiddenText (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowHiddenText (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_WrapToWindow (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_WrapToWindow (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowPicturePlaceHolders (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowPicturePlaceHolders (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowBookmarks (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowBookmarks (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FieldShading (
        /*[out,retval]*/ enum WdFieldShading * prop ) = 0;
      virtual HRESULT __stdcall put_FieldShading (
        /*[in]*/ enum WdFieldShading prop ) = 0;
      virtual HRESULT __stdcall get_ShowAnimation (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowAnimation (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_TableGridlines (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_TableGridlines (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_EnlargeFontsLessThan (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_EnlargeFontsLessThan (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ShowMainTextLayer (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowMainTextLayer (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SeekView (
        /*[out,retval]*/ enum WdSeekView * prop ) = 0;
      virtual HRESULT __stdcall put_SeekView (
        /*[in]*/ enum WdSeekView prop ) = 0;
      virtual HRESULT __stdcall get_SplitSpecial (
        /*[out,retval]*/ enum WdSpecialPane * prop ) = 0;
      virtual HRESULT __stdcall put_SplitSpecial (
        /*[in]*/ enum WdSpecialPane prop ) = 0;
      virtual HRESULT __stdcall get_BrowseToWindow (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_BrowseToWindow (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ShowOptionalBreaks (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowOptionalBreaks (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall raw_CollapseOutline (
        /*[in]*/ VARIANT * Range = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_ExpandOutline (
        /*[in]*/ VARIANT * Range = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_ShowAllHeadings ( ) = 0;
      virtual HRESULT __stdcall raw_ShowHeading (
        /*[in]*/ long Level ) = 0;
      virtual HRESULT __stdcall raw_PreviousHeaderFooter ( ) = 0;
      virtual HRESULT __stdcall raw_NextHeaderFooter ( ) = 0;
      virtual HRESULT __stdcall get_DisplayPageBoundaries (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayPageBoundaries (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DisplaySmartTags (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplaySmartTags (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowRevisionsAndComments (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowRevisionsAndComments (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowComments (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowComments (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowInsertionsAndDeletions (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowInsertionsAndDeletions (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowFormatChanges (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowFormatChanges (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RevisionsView (
        /*[out,retval]*/ enum WdRevisionsView * prop ) = 0;
      virtual HRESULT __stdcall put_RevisionsView (
        /*[in]*/ enum WdRevisionsView prop ) = 0;
      virtual HRESULT __stdcall get_RevisionsMode (
        /*[out,retval]*/ enum WdRevisionsMode * prop ) = 0;
      virtual HRESULT __stdcall put_RevisionsMode (
        /*[in]*/ enum WdRevisionsMode prop ) = 0;
      virtual HRESULT __stdcall get_RevisionsBalloonWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RevisionsBalloonWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RevisionsBalloonWidthType (
        /*[out,retval]*/ enum WdRevisionsBalloonWidthType * prop ) = 0;
      virtual HRESULT __stdcall put_RevisionsBalloonWidthType (
        /*[in]*/ enum WdRevisionsBalloonWidthType prop ) = 0;
      virtual HRESULT __stdcall get_RevisionsBalloonSide (
        /*[out,retval]*/ enum WdRevisionsBalloonMargin * prop ) = 0;
      virtual HRESULT __stdcall put_RevisionsBalloonSide (
        /*[in]*/ enum WdRevisionsBalloonMargin prop ) = 0;
      virtual HRESULT __stdcall get_Reviewers (
        /*[out,retval]*/ struct Reviewers * * prop ) = 0;
      virtual HRESULT __stdcall get_RevisionsBalloonShowConnectingLines (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RevisionsBalloonShowConnectingLines (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ReadingLayout (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingLayout (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowXMLMarkup (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ShowXMLMarkup (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ShadeEditableRanges (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ShadeEditableRanges (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ShowInkAnnotations (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowInkAnnotations (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DisplayBackgrounds (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayBackgrounds (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ReadingLayoutActualView (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingLayoutActualView (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ReadingLayoutAllowMultiplePages (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingLayoutAllowMultiplePages (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ReadingLayoutAllowEditing (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingLayoutAllowEditing (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ReadingLayoutTruncateMargins (
        /*[out,retval]*/ enum WdReadingLayoutMargin * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingLayoutTruncateMargins (
        /*[in]*/ enum WdReadingLayoutMargin prop ) = 0;
      virtual HRESULT __stdcall get_ShowMarkupAreaHighlight (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowMarkupAreaHighlight (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Panning (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Panning (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowCropMarks (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowCropMarks (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MarkupMode (
        /*[out,retval]*/ enum WdRevisionsMode * prop ) = 0;
      virtual HRESULT __stdcall put_MarkupMode (
        /*[in]*/ enum WdRevisionsMode prop ) = 0;
};

enum WdContentControlType
{
    wdContentControlRichText = 0,
    wdContentControlText = 1,
    wdContentControlPicture = 2,
    wdContentControlComboBox = 3,
    wdContentControlDropdownList = 4,
    wdContentControlBuildingBlockGallery = 5,
    wdContentControlDate = 6,
    wdContentControlGroup = 7
};

enum WdCompareDestination
{
    wdCompareDestinationOriginal = 0,
    wdCompareDestinationRevised = 1,
    wdCompareDestinationNew = 2
};

enum WdGranularity
{
    wdGranularityCharLevel = 0,
    wdGranularityWordLevel = 1
};

enum WdMergeFormatFrom
{
    wdMergeFormatFromOriginal = 0,
    wdMergeFormatFromRevised = 1,
    wdMergeFormatFromPrompt = 2
};

enum WdShowSourceDocuments
{
    wdShowSourceDocumentsNone = 0,
    wdShowSourceDocumentsOriginal = 1,
    wdShowSourceDocumentsRevised = 2,
    wdShowSourceDocumentsBoth = 3
};

enum WdPasteOptions
{
    wdKeepSourceFormatting = 0,
    wdMatchDestinationFormatting = 1,
    wdKeepTextOnly = 2,
    wdUseDestinationStyles = 3
};

enum WdBuildingBlockTypes
{
    wdTypeQuickParts = 1,
    wdTypeCoverPage = 2,
    wdTypeEquations = 3,
    wdTypeFooters = 4,
    wdTypeHeaders = 5,
    wdTypePageNumber = 6,
    wdTypeTables = 7,
    wdTypeWatermarks = 8,
    wdTypeAutoText = 9,
    wdTypeTextBox = 10,
    wdTypePageNumberTop = 11,
    wdTypePageNumberBottom = 12,
    wdTypePageNumberPage = 13,
    wdTypeTableOfContents = 14,
    wdTypeCustomQuickParts = 15,
    wdTypeCustomCoverPage = 16,
    wdTypeCustomEquations = 17,
    wdTypeCustomFooters = 18,
    wdTypeCustomHeaders = 19,
    wdTypeCustomPageNumber = 20,
    wdTypeCustomTables = 21,
    wdTypeCustomWatermarks = 22,
    wdTypeCustomAutoText = 23,
    wdTypeCustomTextBox = 24,
    wdTypeCustomPageNumberTop = 25,
    wdTypeCustomPageNumberBottom = 26,
    wdTypeCustomPageNumberPage = 27,
    wdTypeCustomTableOfContents = 28,
    wdTypeCustom1 = 29,
    wdTypeCustom2 = 30,
    wdTypeCustom3 = 31,
    wdTypeCustom4 = 32,
    wdTypeCustom5 = 33,
    wdTypeBibliography = 34,
    wdTypeCustomBibliography = 35
};

enum WdAlignmentTabRelative
{
    wdMargin = 0,
    wdIndent = 1
};

enum WdAlignmentTabAlignment
{
    wdLeft = 0,
    wdCenter = 1,
    wdRight = 2
};

enum WdCellColor
{
    wdCellColorByAuthor = -1,
    wdCellColorNoHighlight = 0,
    wdCellColorPink = 1,
    wdCellColorLightBlue = 2,
    wdCellColorLightYellow = 3,
    wdCellColorLightPurple = 4,
    wdCellColorLightOrange = 5,
    wdCellColorLightGreen = 6,
    wdCellColorLightGray = 7
};

enum WdTextboxTightWrap
{
    wdTightNone = 0,
    wdTightAll = 1,
    wdTightFirstAndLastLines = 2,
    wdTightFirstLineOnly = 3,
    wdTightLastLineOnly = 4
};

struct __declspec(uuid("00020953-0000-0000-c000-000000000046"))
_ParagraphFormat : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDuplicate))
    _ParagraphFormatPtr Duplicate;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetAlignment,put=PutAlignment))
    enum WdParagraphAlignment Alignment;
    __declspec(property(get=GetKeepTogether,put=PutKeepTogether))
    long KeepTogether;
    __declspec(property(get=GetKeepWithNext,put=PutKeepWithNext))
    long KeepWithNext;
    __declspec(property(get=GetPageBreakBefore,put=PutPageBreakBefore))
    long PageBreakBefore;
    __declspec(property(get=GetNoLineNumber,put=PutNoLineNumber))
    long NoLineNumber;
    __declspec(property(get=GetRightIndent,put=PutRightIndent))
    float RightIndent;
    __declspec(property(get=GetLeftIndent,put=PutLeftIndent))
    float LeftIndent;
    __declspec(property(get=GetFirstLineIndent,put=PutFirstLineIndent))
    float FirstLineIndent;
    __declspec(property(get=GetLineSpacing,put=PutLineSpacing))
    float LineSpacing;
    __declspec(property(get=GetLineSpacingRule,put=PutLineSpacingRule))
    enum WdLineSpacing LineSpacingRule;
    __declspec(property(get=GetSpaceBefore,put=PutSpaceBefore))
    float SpaceBefore;
    __declspec(property(get=GetSpaceAfter,put=PutSpaceAfter))
    float SpaceAfter;
    __declspec(property(get=GetHyphenation,put=PutHyphenation))
    long Hyphenation;
    __declspec(property(get=GetWidowControl,put=PutWidowControl))
    long WidowControl;
    __declspec(property(get=GetBorders,put=PutBorders))
    BordersPtr Borders;
    __declspec(property(get=GetShading))
    ShadingPtr Shading;
    __declspec(property(get=GetFarEastLineBreakControl,put=PutFarEastLineBreakControl))
    long FarEastLineBreakControl;
    __declspec(property(get=GetTabStops,put=PutTabStops))
    TabStopsPtr TabStops;
    __declspec(property(get=GetHalfWidthPunctuationOnTopOfLine,put=PutHalfWidthPunctuationOnTopOfLine))
    long HalfWidthPunctuationOnTopOfLine;
    __declspec(property(get=GetAddSpaceBetweenFarEastAndAlpha,put=PutAddSpaceBetweenFarEastAndAlpha))
    long AddSpaceBetweenFarEastAndAlpha;
    __declspec(property(get=GetAddSpaceBetweenFarEastAndDigit,put=PutAddSpaceBetweenFarEastAndDigit))
    long AddSpaceBetweenFarEastAndDigit;
    __declspec(property(get=GetBaseLineAlignment,put=PutBaseLineAlignment))
    enum WdBaselineAlignment BaseLineAlignment;
    __declspec(property(get=GetAutoAdjustRightIndent,put=PutAutoAdjustRightIndent))
    long AutoAdjustRightIndent;
    __declspec(property(get=GetDisableLineHeightGrid,put=PutDisableLineHeightGrid))
    long DisableLineHeightGrid;
    __declspec(property(get=GetCharacterUnitRightIndent,put=PutCharacterUnitRightIndent))
    float CharacterUnitRightIndent;
    __declspec(property(get=GetCharacterUnitLeftIndent,put=PutCharacterUnitLeftIndent))
    float CharacterUnitLeftIndent;
    __declspec(property(get=GetCharacterUnitFirstLineIndent,put=PutCharacterUnitFirstLineIndent))
    float CharacterUnitFirstLineIndent;
    __declspec(property(get=GetLineUnitBefore,put=PutLineUnitBefore))
    float LineUnitBefore;
    __declspec(property(get=GetLineUnitAfter,put=PutLineUnitAfter))
    float LineUnitAfter;
    __declspec(property(get=GetReadingOrder,put=PutReadingOrder))
    enum WdReadingOrder ReadingOrder;
    __declspec(property(get=GetSpaceBeforeAuto,put=PutSpaceBeforeAuto))
    long SpaceBeforeAuto;
    __declspec(property(get=GetSpaceAfterAuto,put=PutSpaceAfterAuto))
    long SpaceAfterAuto;
    __declspec(property(get=GetMirrorIndents,put=PutMirrorIndents))
    long MirrorIndents;
    __declspec(property(get=GetOutlineLevel,put=PutOutlineLevel))
    enum WdOutlineLevel OutlineLevel;
    __declspec(property(get=GetWordWrap,put=PutWordWrap))
    long WordWrap;
    __declspec(property(get=GetHangingPunctuation,put=PutHangingPunctuation))
    long HangingPunctuation;
    __declspec(property(get=GetTextboxTightWrap,put=PutTextboxTightWrap))
    enum WdTextboxTightWrap TextboxTightWrap;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _ParagraphFormatPtr GetDuplicate ( );
    _variant_t GetStyle ( );
    void PutStyle (
        VARIANT * prop );
    enum WdParagraphAlignment GetAlignment ( );
    void PutAlignment (
        enum WdParagraphAlignment prop );
    long GetKeepTogether ( );
    void PutKeepTogether (
        long prop );
    long GetKeepWithNext ( );
    void PutKeepWithNext (
        long prop );
    long GetPageBreakBefore ( );
    void PutPageBreakBefore (
        long prop );
    long GetNoLineNumber ( );
    void PutNoLineNumber (
        long prop );
    float GetRightIndent ( );
    void PutRightIndent (
        float prop );
    float GetLeftIndent ( );
    void PutLeftIndent (
        float prop );
    float GetFirstLineIndent ( );
    void PutFirstLineIndent (
        float prop );
    float GetLineSpacing ( );
    void PutLineSpacing (
        float prop );
    enum WdLineSpacing GetLineSpacingRule ( );
    void PutLineSpacingRule (
        enum WdLineSpacing prop );
    float GetSpaceBefore ( );
    void PutSpaceBefore (
        float prop );
    float GetSpaceAfter ( );
    void PutSpaceAfter (
        float prop );
    long GetHyphenation ( );
    void PutHyphenation (
        long prop );
    long GetWidowControl ( );
    void PutWidowControl (
        long prop );
    long GetFarEastLineBreakControl ( );
    void PutFarEastLineBreakControl (
        long prop );
    long GetWordWrap ( );
    void PutWordWrap (
        long prop );
    long GetHangingPunctuation ( );
    void PutHangingPunctuation (
        long prop );
    long GetHalfWidthPunctuationOnTopOfLine ( );
    void PutHalfWidthPunctuationOnTopOfLine (
        long prop );
    long GetAddSpaceBetweenFarEastAndAlpha ( );
    void PutAddSpaceBetweenFarEastAndAlpha (
        long prop );
    long GetAddSpaceBetweenFarEastAndDigit ( );
    void PutAddSpaceBetweenFarEastAndDigit (
        long prop );
    enum WdBaselineAlignment GetBaseLineAlignment ( );
    void PutBaseLineAlignment (
        enum WdBaselineAlignment prop );
    long GetAutoAdjustRightIndent ( );
    void PutAutoAdjustRightIndent (
        long prop );
    long GetDisableLineHeightGrid ( );
    void PutDisableLineHeightGrid (
        long prop );
    TabStopsPtr GetTabStops ( );
    void PutTabStops (
        struct TabStops * prop );
    BordersPtr GetBorders ( );
    void PutBorders (
        struct Borders * prop );
    ShadingPtr GetShading ( );
    enum WdOutlineLevel GetOutlineLevel ( );
    void PutOutlineLevel (
        enum WdOutlineLevel prop );
    HRESULT CloseUp ( );
    HRESULT OpenUp ( );
    HRESULT OpenOrCloseUp ( );
    HRESULT TabHangingIndent (
        short Count );
    HRESULT TabIndent (
        short Count );
    HRESULT Reset ( );
    HRESULT Space1 ( );
    HRESULT Space15 ( );
    HRESULT Space2 ( );
    HRESULT IndentCharWidth (
        short Count );
    HRESULT IndentFirstLineCharWidth (
        short Count );
    float GetCharacterUnitRightIndent ( );
    void PutCharacterUnitRightIndent (
        float prop );
    float GetCharacterUnitLeftIndent ( );
    void PutCharacterUnitLeftIndent (
        float prop );
    float GetCharacterUnitFirstLineIndent ( );
    void PutCharacterUnitFirstLineIndent (
        float prop );
    float GetLineUnitBefore ( );
    void PutLineUnitBefore (
        float prop );
    float GetLineUnitAfter ( );
    void PutLineUnitAfter (
        float prop );
    enum WdReadingOrder GetReadingOrder ( );
    void PutReadingOrder (
        enum WdReadingOrder prop );
    long GetSpaceBeforeAuto ( );
    void PutSpaceBeforeAuto (
        long prop );
    long GetSpaceAfterAuto ( );
    void PutSpaceAfterAuto (
        long prop );
    long GetMirrorIndents ( );
    void PutMirrorIndents (
        long prop );
    enum WdTextboxTightWrap GetTextboxTightWrap ( );
    void PutTextboxTightWrap (
        enum WdTextboxTightWrap prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Duplicate (
        /*[out,retval]*/ struct _ParagraphFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum WdParagraphAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum WdParagraphAlignment prop ) = 0;
      virtual HRESULT __stdcall get_KeepTogether (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_KeepTogether (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_KeepWithNext (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_KeepWithNext (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_PageBreakBefore (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_PageBreakBefore (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_NoLineNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_NoLineNumber (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_RightIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RightIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LeftIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_FirstLineIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_FirstLineIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LineSpacing (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LineSpacing (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LineSpacingRule (
        /*[out,retval]*/ enum WdLineSpacing * prop ) = 0;
      virtual HRESULT __stdcall put_LineSpacingRule (
        /*[in]*/ enum WdLineSpacing prop ) = 0;
      virtual HRESULT __stdcall get_SpaceBefore (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceBefore (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_SpaceAfter (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceAfter (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Hyphenation (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Hyphenation (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_WidowControl (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_WidowControl (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_FarEastLineBreakControl (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_FarEastLineBreakControl (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_WordWrap (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_WordWrap (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_HangingPunctuation (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_HangingPunctuation (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_HalfWidthPunctuationOnTopOfLine (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_HalfWidthPunctuationOnTopOfLine (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_AddSpaceBetweenFarEastAndAlpha (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AddSpaceBetweenFarEastAndAlpha (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_AddSpaceBetweenFarEastAndDigit (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AddSpaceBetweenFarEastAndDigit (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_BaseLineAlignment (
        /*[out,retval]*/ enum WdBaselineAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_BaseLineAlignment (
        /*[in]*/ enum WdBaselineAlignment prop ) = 0;
      virtual HRESULT __stdcall get_AutoAdjustRightIndent (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AutoAdjustRightIndent (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DisableLineHeightGrid (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DisableLineHeightGrid (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_TabStops (
        /*[out,retval]*/ struct TabStops * * prop ) = 0;
      virtual HRESULT __stdcall put_TabStops (
        /*[in]*/ struct TabStops * prop ) = 0;
      virtual HRESULT __stdcall get_Borders (
        /*[out,retval]*/ struct Borders * * prop ) = 0;
      virtual HRESULT __stdcall put_Borders (
        /*[in]*/ struct Borders * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_OutlineLevel (
        /*[out,retval]*/ enum WdOutlineLevel * prop ) = 0;
      virtual HRESULT __stdcall put_OutlineLevel (
        /*[in]*/ enum WdOutlineLevel prop ) = 0;
      virtual HRESULT __stdcall raw_CloseUp ( ) = 0;
      virtual HRESULT __stdcall raw_OpenUp ( ) = 0;
      virtual HRESULT __stdcall raw_OpenOrCloseUp ( ) = 0;
      virtual HRESULT __stdcall raw_TabHangingIndent (
        /*[in]*/ short Count ) = 0;
      virtual HRESULT __stdcall raw_TabIndent (
        /*[in]*/ short Count ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_Space1 ( ) = 0;
      virtual HRESULT __stdcall raw_Space15 ( ) = 0;
      virtual HRESULT __stdcall raw_Space2 ( ) = 0;
      virtual HRESULT __stdcall raw_IndentCharWidth (
        /*[in]*/ short Count ) = 0;
      virtual HRESULT __stdcall raw_IndentFirstLineCharWidth (
        /*[in]*/ short Count ) = 0;
      virtual HRESULT __stdcall get_CharacterUnitRightIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CharacterUnitRightIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_CharacterUnitLeftIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CharacterUnitLeftIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_CharacterUnitFirstLineIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CharacterUnitFirstLineIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LineUnitBefore (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LineUnitBefore (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LineUnitAfter (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LineUnitAfter (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ enum WdReadingOrder * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ enum WdReadingOrder prop ) = 0;
      virtual HRESULT __stdcall get_SpaceBeforeAuto (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceBeforeAuto (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_SpaceAfterAuto (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceAfterAuto (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_MirrorIndents (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_MirrorIndents (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_TextboxTightWrap (
        /*[out,retval]*/ enum WdTextboxTightWrap * prop ) = 0;
      virtual HRESULT __stdcall put_TextboxTightWrap (
        /*[in]*/ enum WdTextboxTightWrap prop ) = 0;
};

enum WdShapePositionRelative
{
    wdShapePositionRelativeNone = -999999
};

enum WdShapeSizeRelative
{
    wdShapeSizeRelativeNone = -999999
};

enum WdRelativeHorizontalSize
{
    wdRelativeHorizontalSizeMargin = 0,
    wdRelativeHorizontalSizePage = 1,
    wdRelativeHorizontalSizeLeftMarginArea = 2,
    wdRelativeHorizontalSizeRightMarginArea = 3,
    wdRelativeHorizontalSizeInnerMarginArea = 4,
    wdRelativeHorizontalSizeOuterMarginArea = 5
};

enum WdRelativeVerticalSize
{
    wdRelativeVerticalSizeMargin = 0,
    wdRelativeVerticalSizePage = 1,
    wdRelativeVerticalSizeTopMarginArea = 2,
    wdRelativeVerticalSizeBottomMarginArea = 3,
    wdRelativeVerticalSizeInnerMarginArea = 4,
    wdRelativeVerticalSizeOuterMarginArea = 5
};

enum WdThemeColorIndex
{
    wdNotThemeColor = -1,
    wdThemeColorMainDark1 = 0,
    wdThemeColorMainLight1 = 1,
    wdThemeColorMainDark2 = 2,
    wdThemeColorMainLight2 = 3,
    wdThemeColorAccent1 = 4,
    wdThemeColorAccent2 = 5,
    wdThemeColorAccent3 = 6,
    wdThemeColorAccent4 = 7,
    wdThemeColorAccent5 = 8,
    wdThemeColorAccent6 = 9,
    wdThemeColorHyperlink = 10,
    wdThemeColorHyperlinkFollowed = 11,
    wdThemeColorBackground1 = 12,
    wdThemeColorText1 = 13,
    wdThemeColorBackground2 = 14,
    wdThemeColorText2 = 15
};

struct __declspec(uuid("000209c6-0000-0000-c000-000000000046"))
ColorFormat : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=Get__RGB,put=Put__RGB))
    long __RGB;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetSchemeColor,put=PutSchemeColor))
    long SchemeColor;
    __declspec(property(get=GetType))
    enum Office::MsoColorType Type;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetTintAndShade,put=PutTintAndShade))
    float TintAndShade;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetOverPrint,put=PutOverPrint))
    enum Office::MsoTriState OverPrint;
    __declspec(property(get=GetInk,put=PutInk))
    float Ink[];
    __declspec(property(get=GetCyan,put=PutCyan))
    long Cyan;
    __declspec(property(get=GetMagenta,put=PutMagenta))
    long Magenta;
    __declspec(property(get=GetYellow,put=PutYellow))
    long Yellow;
    __declspec(property(get=GetBlack,put=PutBlack))
    long Black;
    __declspec(property(get=GetObjectThemeColor,put=PutObjectThemeColor))
    enum WdThemeColorIndex ObjectThemeColor;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long Get__RGB ( );
    void Put__RGB (
        long prop );
    long GetSchemeColor ( );
    void PutSchemeColor (
        long prop );
    enum Office::MsoColorType GetType ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t prop );
    float GetTintAndShade ( );
    void PutTintAndShade (
        float prop );
    enum Office::MsoTriState GetOverPrint ( );
    void PutOverPrint (
        enum Office::MsoTriState prop );
    float GetInk (
        long Index );
    void PutInk (
        long Index,
        float prop );
    long GetCyan ( );
    void PutCyan (
        long prop );
    long GetMagenta ( );
    void PutMagenta (
        long prop );
    long GetYellow ( );
    void PutYellow (
        long prop );
    long GetBlack ( );
    void PutBlack (
        long prop );
    HRESULT SetCMYK (
        long Cyan,
        long Magenta,
        long Yellow,
        long Black );
    enum WdThemeColorIndex GetObjectThemeColor ( );
    void PutObjectThemeColor (
        enum WdThemeColorIndex prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get___RGB (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put___RGB (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_SchemeColor (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SchemeColor (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoColorType * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_TintAndShade (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TintAndShade (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_OverPrint (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_OverPrint (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_Ink (
        /*[in]*/ long Index,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Ink (
        /*[in]*/ long Index,
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Cyan (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Cyan (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Magenta (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Magenta (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Yellow (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Yellow (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Black (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Black (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall raw_SetCMYK (
        /*[in]*/ long Cyan,
        /*[in]*/ long Magenta,
        /*[in]*/ long Yellow,
        /*[in]*/ long Black ) = 0;
      virtual HRESULT __stdcall get_ObjectThemeColor (
        /*[out,retval]*/ enum WdThemeColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_ObjectThemeColor (
        /*[in]*/ enum WdThemeColorIndex prop ) = 0;
};

struct __declspec(uuid("000209c8-0000-0000-c000-000000000046"))
FillFormat : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetBackColor))
    ColorFormatPtr BackColor;
    __declspec(property(get=GetForeColor))
    ColorFormatPtr ForeColor;
    __declspec(property(get=GetGradientColorType))
    enum Office::MsoGradientColorType GradientColorType;
    __declspec(property(get=GetGradientDegree))
    float GradientDegree;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetGradientStyle))
    enum Office::MsoGradientStyle GradientStyle;
    __declspec(property(get=GetGradientVariant))
    long GradientVariant;
    __declspec(property(get=GetPattern))
    enum Office::MsoPatternType Pattern;
    __declspec(property(get=GetPresetGradientType))
    enum Office::MsoPresetGradientType PresetGradientType;
    __declspec(property(get=GetPresetTexture))
    enum Office::MsoPresetTexture PresetTexture;
    __declspec(property(get=GetTextureName))
    _bstr_t TextureName;
    __declspec(property(get=GetTextureType))
    enum Office::MsoTextureType TextureType;
    __declspec(property(get=GetTransparency,put=PutTransparency))
    float Transparency;
    __declspec(property(get=GetType))
    enum Office::MsoFillType Type;
    __declspec(property(get=GetVisible,put=PutVisible))
    enum Office::MsoTriState Visible;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    ColorFormatPtr GetBackColor ( );
    ColorFormatPtr GetForeColor ( );
    enum Office::MsoGradientColorType GetGradientColorType ( );
    float GetGradientDegree ( );
    enum Office::MsoGradientStyle GetGradientStyle ( );
    long GetGradientVariant ( );
    enum Office::MsoPatternType GetPattern ( );
    enum Office::MsoPresetGradientType GetPresetGradientType ( );
    enum Office::MsoPresetTexture GetPresetTexture ( );
    _bstr_t GetTextureName ( );
    enum Office::MsoTextureType GetTextureType ( );
    float GetTransparency ( );
    void PutTransparency (
        float prop );
    enum Office::MsoFillType GetType ( );
    enum Office::MsoTriState GetVisible ( );
    void PutVisible (
        enum Office::MsoTriState prop );
    HRESULT Background ( );
    HRESULT OneColorGradient (
        enum Office::MsoGradientStyle Style,
        long Variant,
        float Degree );
    HRESULT Patterned (
        enum Office::MsoPatternType Pattern );
    HRESULT PresetGradient (
        enum Office::MsoGradientStyle Style,
        long Variant,
        enum Office::MsoPresetGradientType PresetGradientType );
    HRESULT PresetTextured (
        enum Office::MsoPresetTexture PresetTexture );
    HRESULT Solid ( );
    HRESULT TwoColorGradient (
        enum Office::MsoGradientStyle Style,
        long Variant );
    HRESULT UserPicture (
        _bstr_t PictureFile );
    HRESULT UserTextured (
        _bstr_t TextureFile );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_BackColor (
        /*[out,retval]*/ struct ColorFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_ForeColor (
        /*[out,retval]*/ struct ColorFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_GradientColorType (
        /*[out,retval]*/ enum Office::MsoGradientColorType * prop ) = 0;
      virtual HRESULT __stdcall get_GradientDegree (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall get_GradientStyle (
        /*[out,retval]*/ enum Office::MsoGradientStyle * prop ) = 0;
      virtual HRESULT __stdcall get_GradientVariant (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Pattern (
        /*[out,retval]*/ enum Office::MsoPatternType * prop ) = 0;
      virtual HRESULT __stdcall get_PresetGradientType (
        /*[out,retval]*/ enum Office::MsoPresetGradientType * prop ) = 0;
      virtual HRESULT __stdcall get_PresetTexture (
        /*[out,retval]*/ enum Office::MsoPresetTexture * prop ) = 0;
      virtual HRESULT __stdcall get_TextureName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_TextureType (
        /*[out,retval]*/ enum Office::MsoTextureType * prop ) = 0;
      virtual HRESULT __stdcall get_Transparency (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Transparency (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoFillType * prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall raw_Background ( ) = 0;
      virtual HRESULT __stdcall raw_OneColorGradient (
        /*[in]*/ enum Office::MsoGradientStyle Style,
        /*[in]*/ long Variant,
        /*[in]*/ float Degree ) = 0;
      virtual HRESULT __stdcall raw_Patterned (
        /*[in]*/ enum Office::MsoPatternType Pattern ) = 0;
      virtual HRESULT __stdcall raw_PresetGradient (
        /*[in]*/ enum Office::MsoGradientStyle Style,
        /*[in]*/ long Variant,
        /*[in]*/ enum Office::MsoPresetGradientType PresetGradientType ) = 0;
      virtual HRESULT __stdcall raw_PresetTextured (
        /*[in]*/ enum Office::MsoPresetTexture PresetTexture ) = 0;
      virtual HRESULT __stdcall raw_Solid ( ) = 0;
      virtual HRESULT __stdcall raw_TwoColorGradient (
        /*[in]*/ enum Office::MsoGradientStyle Style,
        /*[in]*/ long Variant ) = 0;
      virtual HRESULT __stdcall raw_UserPicture (
        /*[in]*/ BSTR PictureFile ) = 0;
      virtual HRESULT __stdcall raw_UserTextured (
        /*[in]*/ BSTR TextureFile ) = 0;
};

struct __declspec(uuid("000209ca-0000-0000-c000-000000000046"))
LineFormat : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetBackColor))
    ColorFormatPtr BackColor;
    __declspec(property(get=GetBeginArrowheadLength,put=PutBeginArrowheadLength))
    enum Office::MsoArrowheadLength BeginArrowheadLength;
    __declspec(property(get=GetBeginArrowheadStyle,put=PutBeginArrowheadStyle))
    enum Office::MsoArrowheadStyle BeginArrowheadStyle;
    __declspec(property(get=GetBeginArrowheadWidth,put=PutBeginArrowheadWidth))
    enum Office::MsoArrowheadWidth BeginArrowheadWidth;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetDashStyle,put=PutDashStyle))
    enum Office::MsoLineDashStyle DashStyle;
    __declspec(property(get=GetEndArrowheadLength,put=PutEndArrowheadLength))
    enum Office::MsoArrowheadLength EndArrowheadLength;
    __declspec(property(get=GetEndArrowheadStyle,put=PutEndArrowheadStyle))
    enum Office::MsoArrowheadStyle EndArrowheadStyle;
    __declspec(property(get=GetEndArrowheadWidth,put=PutEndArrowheadWidth))
    enum Office::MsoArrowheadWidth EndArrowheadWidth;
    __declspec(property(get=GetForeColor))
    ColorFormatPtr ForeColor;
    __declspec(property(get=GetPattern,put=PutPattern))
    enum Office::MsoPatternType Pattern;
    __declspec(property(get=GetStyle,put=PutStyle))
    enum Office::MsoLineStyle Style;
    __declspec(property(get=GetTransparency,put=PutTransparency))
    float Transparency;
    __declspec(property(get=GetVisible,put=PutVisible))
    enum Office::MsoTriState Visible;
    __declspec(property(get=GetWeight,put=PutWeight))
    float Weight;
    __declspec(property(get=GetInsetPen,put=PutInsetPen))
    enum Office::MsoTriState InsetPen;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    ColorFormatPtr GetBackColor ( );
    enum Office::MsoArrowheadLength GetBeginArrowheadLength ( );
    void PutBeginArrowheadLength (
        enum Office::MsoArrowheadLength prop );
    enum Office::MsoArrowheadStyle GetBeginArrowheadStyle ( );
    void PutBeginArrowheadStyle (
        enum Office::MsoArrowheadStyle prop );
    enum Office::MsoArrowheadWidth GetBeginArrowheadWidth ( );
    void PutBeginArrowheadWidth (
        enum Office::MsoArrowheadWidth prop );
    enum Office::MsoLineDashStyle GetDashStyle ( );
    void PutDashStyle (
        enum Office::MsoLineDashStyle prop );
    enum Office::MsoArrowheadLength GetEndArrowheadLength ( );
    void PutEndArrowheadLength (
        enum Office::MsoArrowheadLength prop );
    enum Office::MsoArrowheadStyle GetEndArrowheadStyle ( );
    void PutEndArrowheadStyle (
        enum Office::MsoArrowheadStyle prop );
    enum Office::MsoArrowheadWidth GetEndArrowheadWidth ( );
    void PutEndArrowheadWidth (
        enum Office::MsoArrowheadWidth prop );
    ColorFormatPtr GetForeColor ( );
    enum Office::MsoPatternType GetPattern ( );
    void PutPattern (
        enum Office::MsoPatternType prop );
    enum Office::MsoLineStyle GetStyle ( );
    void PutStyle (
        enum Office::MsoLineStyle prop );
    float GetTransparency ( );
    void PutTransparency (
        float prop );
    enum Office::MsoTriState GetVisible ( );
    void PutVisible (
        enum Office::MsoTriState prop );
    float GetWeight ( );
    void PutWeight (
        float prop );
    enum Office::MsoTriState GetInsetPen ( );
    void PutInsetPen (
        enum Office::MsoTriState prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_BackColor (
        /*[out,retval]*/ struct ColorFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_BeginArrowheadLength (
        /*[out,retval]*/ enum Office::MsoArrowheadLength * prop ) = 0;
      virtual HRESULT __stdcall put_BeginArrowheadLength (
        /*[in]*/ enum Office::MsoArrowheadLength prop ) = 0;
      virtual HRESULT __stdcall get_BeginArrowheadStyle (
        /*[out,retval]*/ enum Office::MsoArrowheadStyle * prop ) = 0;
      virtual HRESULT __stdcall put_BeginArrowheadStyle (
        /*[in]*/ enum Office::MsoArrowheadStyle prop ) = 0;
      virtual HRESULT __stdcall get_BeginArrowheadWidth (
        /*[out,retval]*/ enum Office::MsoArrowheadWidth * prop ) = 0;
      virtual HRESULT __stdcall put_BeginArrowheadWidth (
        /*[in]*/ enum Office::MsoArrowheadWidth prop ) = 0;
      virtual HRESULT __stdcall get_DashStyle (
        /*[out,retval]*/ enum Office::MsoLineDashStyle * prop ) = 0;
      virtual HRESULT __stdcall put_DashStyle (
        /*[in]*/ enum Office::MsoLineDashStyle prop ) = 0;
      virtual HRESULT __stdcall get_EndArrowheadLength (
        /*[out,retval]*/ enum Office::MsoArrowheadLength * prop ) = 0;
      virtual HRESULT __stdcall put_EndArrowheadLength (
        /*[in]*/ enum Office::MsoArrowheadLength prop ) = 0;
      virtual HRESULT __stdcall get_EndArrowheadStyle (
        /*[out,retval]*/ enum Office::MsoArrowheadStyle * prop ) = 0;
      virtual HRESULT __stdcall put_EndArrowheadStyle (
        /*[in]*/ enum Office::MsoArrowheadStyle prop ) = 0;
      virtual HRESULT __stdcall get_EndArrowheadWidth (
        /*[out,retval]*/ enum Office::MsoArrowheadWidth * prop ) = 0;
      virtual HRESULT __stdcall put_EndArrowheadWidth (
        /*[in]*/ enum Office::MsoArrowheadWidth prop ) = 0;
      virtual HRESULT __stdcall get_ForeColor (
        /*[out,retval]*/ struct ColorFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Pattern (
        /*[out,retval]*/ enum Office::MsoPatternType * prop ) = 0;
      virtual HRESULT __stdcall put_Pattern (
        /*[in]*/ enum Office::MsoPatternType prop ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ enum Office::MsoLineStyle * prop ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ enum Office::MsoLineStyle prop ) = 0;
      virtual HRESULT __stdcall get_Transparency (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Transparency (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_Weight (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Weight (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_InsetPen (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_InsetPen (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
};

struct __declspec(uuid("000209cc-0000-0000-c000-000000000046"))
ShadowFormat : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetForeColor))
    ColorFormatPtr ForeColor;
    __declspec(property(get=GetObscured,put=PutObscured))
    enum Office::MsoTriState Obscured;
    __declspec(property(get=GetOffsetX,put=PutOffsetX))
    float OffsetX;
    __declspec(property(get=GetOffsetY,put=PutOffsetY))
    float OffsetY;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetTransparency,put=PutTransparency))
    float Transparency;
    __declspec(property(get=GetType,put=PutType))
    enum Office::MsoShadowType Type;
    __declspec(property(get=GetVisible,put=PutVisible))
    enum Office::MsoTriState Visible;
    __declspec(property(get=GetStyle,put=PutStyle))
    enum Office::MsoShadowStyle Style;
    __declspec(property(get=GetBlur,put=PutBlur))
    float Blur;
    __declspec(property(get=GetSize,put=PutSize))
    float Size;
    __declspec(property(get=GetRotateWithShape,put=PutRotateWithShape))
    enum Office::MsoTriState RotateWithShape;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    ColorFormatPtr GetForeColor ( );
    enum Office::MsoTriState GetObscured ( );
    void PutObscured (
        enum Office::MsoTriState prop );
    float GetOffsetX ( );
    void PutOffsetX (
        float prop );
    float GetOffsetY ( );
    void PutOffsetY (
        float prop );
    float GetTransparency ( );
    void PutTransparency (
        float prop );
    enum Office::MsoShadowType GetType ( );
    void PutType (
        enum Office::MsoShadowType prop );
    enum Office::MsoTriState GetVisible ( );
    void PutVisible (
        enum Office::MsoTriState prop );
    HRESULT IncrementOffsetX (
        float Increment );
    HRESULT IncrementOffsetY (
        float Increment );
    enum Office::MsoShadowStyle GetStyle ( );
    void PutStyle (
        enum Office::MsoShadowStyle prop );
    float GetBlur ( );
    void PutBlur (
        float prop );
    float GetSize ( );
    void PutSize (
        float prop );
    enum Office::MsoTriState GetRotateWithShape ( );
    void PutRotateWithShape (
        enum Office::MsoTriState prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_ForeColor (
        /*[out,retval]*/ struct ColorFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Obscured (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_Obscured (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_OffsetX (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_OffsetX (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_OffsetY (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_OffsetY (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Transparency (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Transparency (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoShadowType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum Office::MsoShadowType prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall raw_IncrementOffsetX (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall raw_IncrementOffsetY (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ enum Office::MsoShadowStyle * prop ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ enum Office::MsoShadowStyle prop ) = 0;
      virtual HRESULT __stdcall get_Blur (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Blur (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Size (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RotateWithShape (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_RotateWithShape (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
};

struct __declspec(uuid("000209d0-0000-0000-c000-000000000046"))
ThreeDFormat : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetPresetCamera))
    enum Office::MsoPresetCamera PresetCamera;
    __declspec(property(get=GetRotationZ,put=PutRotationZ))
    float RotationZ;
    __declspec(property(get=GetContourWidth,put=PutContourWidth))
    float ContourWidth;
    __declspec(property(get=GetContourColor))
    ColorFormatPtr ContourColor;
    __declspec(property(get=GetFieldOfView,put=PutFieldOfView))
    float FieldOfView;
    __declspec(property(get=GetProjectText,put=PutProjectText))
    enum Office::MsoTriState ProjectText;
    __declspec(property(get=GetLightAngle,put=PutLightAngle))
    float LightAngle;
    __declspec(property(get=GetDepth,put=PutDepth))
    float Depth;
    __declspec(property(get=GetExtrusionColor))
    ColorFormatPtr ExtrusionColor;
    __declspec(property(get=GetExtrusionColorType,put=PutExtrusionColorType))
    enum Office::MsoExtrusionColorType ExtrusionColorType;
    __declspec(property(get=GetPerspective,put=PutPerspective))
    enum Office::MsoTriState Perspective;
    __declspec(property(get=GetPresetExtrusionDirection))
    enum Office::MsoPresetExtrusionDirection PresetExtrusionDirection;
    __declspec(property(get=GetPresetLightingDirection,put=PutPresetLightingDirection))
    enum Office::MsoPresetLightingDirection PresetLightingDirection;
    __declspec(property(get=GetPresetLightingSoftness,put=PutPresetLightingSoftness))
    enum Office::MsoPresetLightingSoftness PresetLightingSoftness;
    __declspec(property(get=GetPresetMaterial,put=PutPresetMaterial))
    enum Office::MsoPresetMaterial PresetMaterial;
    __declspec(property(get=GetPresetThreeDFormat))
    enum Office::MsoPresetThreeDFormat PresetThreeDFormat;
    __declspec(property(get=GetRotationX,put=PutRotationX))
    float RotationX;
    __declspec(property(get=GetRotationY,put=PutRotationY))
    float RotationY;
    __declspec(property(get=GetVisible,put=PutVisible))
    enum Office::MsoTriState Visible;
    __declspec(property(get=GetPresetLighting,put=PutPresetLighting))
    enum Office::MsoLightRigType PresetLighting;
    __declspec(property(get=GetZ,put=PutZ))
    float Z;
    __declspec(property(get=GetBevelTopType,put=PutBevelTopType))
    enum Office::MsoBevelType BevelTopType;
    __declspec(property(get=GetBevelTopInset,put=PutBevelTopInset))
    float BevelTopInset;
    __declspec(property(get=GetBevelTopDepth,put=PutBevelTopDepth))
    float BevelTopDepth;
    __declspec(property(get=GetBevelBottomType,put=PutBevelBottomType))
    enum Office::MsoBevelType BevelBottomType;
    __declspec(property(get=GetBevelBottomInset,put=PutBevelBottomInset))
    float BevelBottomInset;
    __declspec(property(get=GetBevelBottomDepth,put=PutBevelBottomDepth))
    float BevelBottomDepth;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    float GetDepth ( );
    void PutDepth (
        float prop );
    ColorFormatPtr GetExtrusionColor ( );
    enum Office::MsoExtrusionColorType GetExtrusionColorType ( );
    void PutExtrusionColorType (
        enum Office::MsoExtrusionColorType prop );
    enum Office::MsoTriState GetPerspective ( );
    void PutPerspective (
        enum Office::MsoTriState prop );
    enum Office::MsoPresetExtrusionDirection GetPresetExtrusionDirection ( );
    enum Office::MsoPresetLightingDirection GetPresetLightingDirection ( );
    void PutPresetLightingDirection (
        enum Office::MsoPresetLightingDirection prop );
    enum Office::MsoPresetLightingSoftness GetPresetLightingSoftness ( );
    void PutPresetLightingSoftness (
        enum Office::MsoPresetLightingSoftness prop );
    enum Office::MsoPresetMaterial GetPresetMaterial ( );
    void PutPresetMaterial (
        enum Office::MsoPresetMaterial prop );
    enum Office::MsoPresetThreeDFormat GetPresetThreeDFormat ( );
    float GetRotationX ( );
    void PutRotationX (
        float prop );
    float GetRotationY ( );
    void PutRotationY (
        float prop );
    enum Office::MsoTriState GetVisible ( );
    void PutVisible (
        enum Office::MsoTriState prop );
    HRESULT IncrementRotationX (
        float Increment );
    HRESULT IncrementRotationY (
        float Increment );
    HRESULT ResetRotation ( );
    HRESULT SetExtrusionDirection (
        enum Office::MsoPresetExtrusionDirection PresetExtrusionDirection );
    HRESULT SetThreeDFormat (
        enum Office::MsoPresetThreeDFormat PresetThreeDFormat );
    HRESULT SetPresetCamera (
        enum Office::MsoPresetCamera PresetCamera );
    HRESULT IncrementRotationZ (
        float Increment );
    HRESULT IncrementRotationHorizontal (
        float Increment );
    HRESULT IncrementRotationVertical (
        float Increment );
    enum Office::MsoLightRigType GetPresetLighting ( );
    void PutPresetLighting (
        enum Office::MsoLightRigType prop );
    float GetZ ( );
    void PutZ (
        float prop );
    enum Office::MsoBevelType GetBevelTopType ( );
    void PutBevelTopType (
        enum Office::MsoBevelType prop );
    float GetBevelTopInset ( );
    void PutBevelTopInset (
        float prop );
    float GetBevelTopDepth ( );
    void PutBevelTopDepth (
        float prop );
    enum Office::MsoBevelType GetBevelBottomType ( );
    void PutBevelBottomType (
        enum Office::MsoBevelType prop );
    float GetBevelBottomInset ( );
    void PutBevelBottomInset (
        float prop );
    float GetBevelBottomDepth ( );
    void PutBevelBottomDepth (
        float prop );
    enum Office::MsoPresetCamera GetPresetCamera ( );
    float GetRotationZ ( );
    void PutRotationZ (
        float prop );
    float GetContourWidth ( );
    void PutContourWidth (
        float prop );
    ColorFormatPtr GetContourColor ( );
    float GetFieldOfView ( );
    void PutFieldOfView (
        float prop );
    enum Office::MsoTriState GetProjectText ( );
    void PutProjectText (
        enum Office::MsoTriState prop );
    float GetLightAngle ( );
    void PutLightAngle (
        float prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Depth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Depth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ExtrusionColor (
        /*[out,retval]*/ struct ColorFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_ExtrusionColorType (
        /*[out,retval]*/ enum Office::MsoExtrusionColorType * prop ) = 0;
      virtual HRESULT __stdcall put_ExtrusionColorType (
        /*[in]*/ enum Office::MsoExtrusionColorType prop ) = 0;
      virtual HRESULT __stdcall get_Perspective (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_Perspective (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_PresetExtrusionDirection (
        /*[out,retval]*/ enum Office::MsoPresetExtrusionDirection * prop ) = 0;
      virtual HRESULT __stdcall get_PresetLightingDirection (
        /*[out,retval]*/ enum Office::MsoPresetLightingDirection * prop ) = 0;
      virtual HRESULT __stdcall put_PresetLightingDirection (
        /*[in]*/ enum Office::MsoPresetLightingDirection prop ) = 0;
      virtual HRESULT __stdcall get_PresetLightingSoftness (
        /*[out,retval]*/ enum Office::MsoPresetLightingSoftness * prop ) = 0;
      virtual HRESULT __stdcall put_PresetLightingSoftness (
        /*[in]*/ enum Office::MsoPresetLightingSoftness prop ) = 0;
      virtual HRESULT __stdcall get_PresetMaterial (
        /*[out,retval]*/ enum Office::MsoPresetMaterial * prop ) = 0;
      virtual HRESULT __stdcall put_PresetMaterial (
        /*[in]*/ enum Office::MsoPresetMaterial prop ) = 0;
      virtual HRESULT __stdcall get_PresetThreeDFormat (
        /*[out,retval]*/ enum Office::MsoPresetThreeDFormat * prop ) = 0;
      virtual HRESULT __stdcall get_RotationX (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RotationX (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RotationY (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RotationY (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall raw_IncrementRotationX (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall raw_IncrementRotationY (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall raw_ResetRotation ( ) = 0;
      virtual HRESULT __stdcall raw_SetExtrusionDirection (
        /*[in]*/ enum Office::MsoPresetExtrusionDirection PresetExtrusionDirection ) = 0;
      virtual HRESULT __stdcall raw_SetThreeDFormat (
        /*[in]*/ enum Office::MsoPresetThreeDFormat PresetThreeDFormat ) = 0;
      virtual HRESULT __stdcall raw_SetPresetCamera (
        /*[in]*/ enum Office::MsoPresetCamera PresetCamera ) = 0;
      virtual HRESULT __stdcall raw_IncrementRotationZ (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall raw_IncrementRotationHorizontal (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall raw_IncrementRotationVertical (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall get_PresetLighting (
        /*[out,retval]*/ enum Office::MsoLightRigType * prop ) = 0;
      virtual HRESULT __stdcall put_PresetLighting (
        /*[in]*/ enum Office::MsoLightRigType prop ) = 0;
      virtual HRESULT __stdcall get_Z (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Z (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_BevelTopType (
        /*[out,retval]*/ enum Office::MsoBevelType * prop ) = 0;
      virtual HRESULT __stdcall put_BevelTopType (
        /*[in]*/ enum Office::MsoBevelType prop ) = 0;
      virtual HRESULT __stdcall get_BevelTopInset (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_BevelTopInset (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_BevelTopDepth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_BevelTopDepth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_BevelBottomType (
        /*[out,retval]*/ enum Office::MsoBevelType * prop ) = 0;
      virtual HRESULT __stdcall put_BevelBottomType (
        /*[in]*/ enum Office::MsoBevelType prop ) = 0;
      virtual HRESULT __stdcall get_BevelBottomInset (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_BevelBottomInset (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_BevelBottomDepth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_BevelBottomDepth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_PresetCamera (
        /*[out,retval]*/ enum Office::MsoPresetCamera * prop ) = 0;
      virtual HRESULT __stdcall get_RotationZ (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RotationZ (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ContourWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_ContourWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ContourColor (
        /*[out,retval]*/ struct ColorFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_FieldOfView (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_FieldOfView (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ProjectText (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_ProjectText (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_LightAngle (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LightAngle (
        /*[in]*/ float prop ) = 0;
};

struct __declspec(uuid("f1b14f40-5c32-4c8c-b5b2-de537bb6b89d"))
GlowFormat : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRadius,put=PutRadius))
    float Radius;
    __declspec(property(get=GetColor))
    ColorFormatPtr Color;

    //
    // Wrapper methods for error-handling
    //

    float GetRadius ( );
    void PutRadius (
        float prop );
    ColorFormatPtr GetColor ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Radius (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Radius (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ struct ColorFormat * * prop ) = 0;
};

enum WdExportFormat
{
    wdExportFormatPDF = 17,
    wdExportFormatXPS = 18
};

enum WdExportOptimizeFor
{
    wdExportOptimizeForPrint = 0,
    wdExportOptimizeForOnScreen = 1
};

enum WdExportCreateBookmarks
{
    wdExportCreateNoBookmarks = 0,
    wdExportCreateHeadingBookmarks = 1,
    wdExportCreateWordBookmarks = 2
};

enum WdExportItem
{
    wdExportDocumentContent = 0,
    wdExportDocumentWithMarkup = 7
};

enum WdExportRange
{
    wdExportAllDocument = 0,
    wdExportSelection = 1,
    wdExportCurrentPage = 2,
    wdExportFromTo = 3
};

enum WdFrenchSpeller
{
    wdFrenchBoth = 0,
    wdFrenchPreReform = 1,
    wdFrenchPostReform = 2
};

struct __declspec(uuid("000209b7-0000-0000-c000-000000000046"))
Options : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAllowAccentedUppercase,put=PutAllowAccentedUppercase))
    VARIANT_BOOL AllowAccentedUppercase;
    __declspec(property(get=GetWPHelp,put=PutWPHelp))
    VARIANT_BOOL WPHelp;
    __declspec(property(get=GetWPDocNavKeys,put=PutWPDocNavKeys))
    VARIANT_BOOL WPDocNavKeys;
    __declspec(property(get=GetPagination,put=PutPagination))
    VARIANT_BOOL Pagination;
    __declspec(property(get=GetBlueScreen,put=PutBlueScreen))
    VARIANT_BOOL BlueScreen;
    __declspec(property(get=GetEnableSound,put=PutEnableSound))
    VARIANT_BOOL EnableSound;
    __declspec(property(get=GetConfirmConversions,put=PutConfirmConversions))
    VARIANT_BOOL ConfirmConversions;
    __declspec(property(get=GetUpdateLinksAtOpen,put=PutUpdateLinksAtOpen))
    VARIANT_BOOL UpdateLinksAtOpen;
    __declspec(property(get=GetSendMailAttach,put=PutSendMailAttach))
    VARIANT_BOOL SendMailAttach;
    __declspec(property(get=GetMeasurementUnit,put=PutMeasurementUnit))
    enum WdMeasurementUnits MeasurementUnit;
    __declspec(property(get=GetButtonFieldClicks,put=PutButtonFieldClicks))
    long ButtonFieldClicks;
    __declspec(property(get=GetShortMenuNames,put=PutShortMenuNames))
    VARIANT_BOOL ShortMenuNames;
    __declspec(property(get=GetRTFInClipboard,put=PutRTFInClipboard))
    VARIANT_BOOL RTFInClipboard;
    __declspec(property(get=GetUpdateFieldsAtPrint,put=PutUpdateFieldsAtPrint))
    VARIANT_BOOL UpdateFieldsAtPrint;
    __declspec(property(get=GetPrintProperties,put=PutPrintProperties))
    VARIANT_BOOL PrintProperties;
    __declspec(property(get=GetPrintFieldCodes,put=PutPrintFieldCodes))
    VARIANT_BOOL PrintFieldCodes;
    __declspec(property(get=GetPrintComments,put=PutPrintComments))
    VARIANT_BOOL PrintComments;
    __declspec(property(get=GetPrintHiddenText,put=PutPrintHiddenText))
    VARIANT_BOOL PrintHiddenText;
    __declspec(property(get=GetEnvelopeFeederInstalled))
    VARIANT_BOOL EnvelopeFeederInstalled;
    __declspec(property(get=GetUpdateLinksAtPrint,put=PutUpdateLinksAtPrint))
    VARIANT_BOOL UpdateLinksAtPrint;
    __declspec(property(get=GetPrintBackground,put=PutPrintBackground))
    VARIANT_BOOL PrintBackground;
    __declspec(property(get=GetPrintDrawingObjects,put=PutPrintDrawingObjects))
    VARIANT_BOOL PrintDrawingObjects;
    __declspec(property(get=GetDefaultTray,put=PutDefaultTray))
    _bstr_t DefaultTray;
    __declspec(property(get=GetDefaultTrayID,put=PutDefaultTrayID))
    long DefaultTrayID;
    __declspec(property(get=GetCreateBackup,put=PutCreateBackup))
    VARIANT_BOOL CreateBackup;
    __declspec(property(get=GetAllowFastSave,put=PutAllowFastSave))
    VARIANT_BOOL AllowFastSave;
    __declspec(property(get=GetSavePropertiesPrompt,put=PutSavePropertiesPrompt))
    VARIANT_BOOL SavePropertiesPrompt;
    __declspec(property(get=GetSaveNormalPrompt,put=PutSaveNormalPrompt))
    VARIANT_BOOL SaveNormalPrompt;
    __declspec(property(get=GetSaveInterval,put=PutSaveInterval))
    long SaveInterval;
    __declspec(property(get=GetBackgroundSave,put=PutBackgroundSave))
    VARIANT_BOOL BackgroundSave;
    __declspec(property(get=GetAutoKeyboardSwitching,put=PutAutoKeyboardSwitching))
    VARIANT_BOOL AutoKeyboardSwitching;
    __declspec(property(get=GetDocumentViewDirection,put=PutDocumentViewDirection))
    enum WdDocumentViewDirection DocumentViewDirection;
    __declspec(property(get=GetArabicNumeral,put=PutArabicNumeral))
    enum WdArabicNumeral ArabicNumeral;
    __declspec(property(get=GetMonthNames,put=PutMonthNames))
    enum WdMonthNames MonthNames;
    __declspec(property(get=GetCursorMovement,put=PutCursorMovement))
    enum WdCursorMovement CursorMovement;
    __declspec(property(get=GetVisualSelection,put=PutVisualSelection))
    enum WdVisualSelection VisualSelection;
    __declspec(property(get=GetShowDiacritics,put=PutShowDiacritics))
    VARIANT_BOOL ShowDiacritics;
    __declspec(property(get=GetShowControlCharacters,put=PutShowControlCharacters))
    VARIANT_BOOL ShowControlCharacters;
    __declspec(property(get=GetAddControlCharacters,put=PutAddControlCharacters))
    VARIANT_BOOL AddControlCharacters;
    __declspec(property(get=GetAddBiDirectionalMarksWhenSavingTextFile,put=PutAddBiDirectionalMarksWhenSavingTextFile))
    VARIANT_BOOL AddBiDirectionalMarksWhenSavingTextFile;
    __declspec(property(get=GetInsertedTextMark,put=PutInsertedTextMark))
    enum WdInsertedTextMark InsertedTextMark;
    __declspec(property(get=GetDeletedTextMark,put=PutDeletedTextMark))
    enum WdDeletedTextMark DeletedTextMark;
    __declspec(property(get=GetRevisedLinesMark,put=PutRevisedLinesMark))
    enum WdRevisedLinesMark RevisedLinesMark;
    __declspec(property(get=GetInsertedTextColor,put=PutInsertedTextColor))
    enum WdColorIndex InsertedTextColor;
    __declspec(property(get=GetDeletedTextColor,put=PutDeletedTextColor))
    enum WdColorIndex DeletedTextColor;
    __declspec(property(get=GetRevisedLinesColor,put=PutRevisedLinesColor))
    enum WdColorIndex RevisedLinesColor;
    __declspec(property(get=GetStrictInitialAlefHamza,put=PutStrictInitialAlefHamza))
    VARIANT_BOOL StrictInitialAlefHamza;
    __declspec(property(get=GetStrictFinalYaa,put=PutStrictFinalYaa))
    VARIANT_BOOL StrictFinalYaa;
    __declspec(property(get=GetDefaultFilePath,put=PutDefaultFilePath))
    _bstr_t DefaultFilePath[];
    __declspec(property(get=GetOvertype,put=PutOvertype))
    VARIANT_BOOL Overtype;
    __declspec(property(get=GetReplaceSelection,put=PutReplaceSelection))
    VARIANT_BOOL ReplaceSelection;
    __declspec(property(get=GetAllowDragAndDrop,put=PutAllowDragAndDrop))
    VARIANT_BOOL AllowDragAndDrop;
    __declspec(property(get=GetAutoWordSelection,put=PutAutoWordSelection))
    VARIANT_BOOL AutoWordSelection;
    __declspec(property(get=GetINSKeyForPaste,put=PutINSKeyForPaste))
    VARIANT_BOOL INSKeyForPaste;
    __declspec(property(get=GetSmartCutPaste,put=PutSmartCutPaste))
    VARIANT_BOOL SmartCutPaste;
    __declspec(property(get=GetTabIndentKey,put=PutTabIndentKey))
    VARIANT_BOOL TabIndentKey;
    __declspec(property(get=GetPictureEditor,put=PutPictureEditor))
    _bstr_t PictureEditor;
    __declspec(property(get=GetAnimateScreenMovements,put=PutAnimateScreenMovements))
    VARIANT_BOOL AnimateScreenMovements;
    __declspec(property(get=GetVirusProtection,put=PutVirusProtection))
    VARIANT_BOOL VirusProtection;
    __declspec(property(get=GetRevisedPropertiesMark,put=PutRevisedPropertiesMark))
    enum WdRevisedPropertiesMark RevisedPropertiesMark;
    __declspec(property(get=GetRevisedPropertiesColor,put=PutRevisedPropertiesColor))
    enum WdColorIndex RevisedPropertiesColor;
    __declspec(property(get=GetHebrewMode,put=PutHebrewMode))
    enum WdHebSpellStart HebrewMode;
    __declspec(property(get=GetSnapToGrid,put=PutSnapToGrid))
    VARIANT_BOOL SnapToGrid;
    __declspec(property(get=GetSnapToShapes,put=PutSnapToShapes))
    VARIANT_BOOL SnapToShapes;
    __declspec(property(get=GetGridDistanceHorizontal,put=PutGridDistanceHorizontal))
    float GridDistanceHorizontal;
    __declspec(property(get=GetGridDistanceVertical,put=PutGridDistanceVertical))
    float GridDistanceVertical;
    __declspec(property(get=GetGridOriginHorizontal,put=PutGridOriginHorizontal))
    float GridOriginHorizontal;
    __declspec(property(get=GetGridOriginVertical,put=PutGridOriginVertical))
    float GridOriginVertical;
    __declspec(property(get=GetArabicMode,put=PutArabicMode))
    enum WdAraSpeller ArabicMode;
    __declspec(property(get=GetInlineConversion,put=PutInlineConversion))
    VARIANT_BOOL InlineConversion;
    __declspec(property(get=GetIMEAutomaticControl,put=PutIMEAutomaticControl))
    VARIANT_BOOL IMEAutomaticControl;
    __declspec(property(get=GetAllowClickAndTypeMouse,put=PutAllowClickAndTypeMouse))
    VARIANT_BOOL AllowClickAndTypeMouse;
    __declspec(property(get=GetUseGermanSpellingReform,put=PutUseGermanSpellingReform))
    VARIANT_BOOL UseGermanSpellingReform;
    __declspec(property(get=GetInterpretHighAnsi,put=PutInterpretHighAnsi))
    enum WdHighAnsiText InterpretHighAnsi;
    __declspec(property(get=GetAddHebDoubleQuote,put=PutAddHebDoubleQuote))
    VARIANT_BOOL AddHebDoubleQuote;
    __declspec(property(get=GetUseDiffDiacColor,put=PutUseDiffDiacColor))
    VARIANT_BOOL UseDiffDiacColor;
    __declspec(property(get=GetDiacriticColorVal,put=PutDiacriticColorVal))
    enum WdColor DiacriticColorVal;
    __declspec(property(get=GetOptimizeForWord97byDefault,put=PutOptimizeForWord97byDefault))
    VARIANT_BOOL OptimizeForWord97byDefault;
    __declspec(property(get=GetLocalNetworkFile,put=PutLocalNetworkFile))
    VARIANT_BOOL LocalNetworkFile;
    __declspec(property(get=GetTypeNReplace,put=PutTypeNReplace))
    VARIANT_BOOL TypeNReplace;
    __declspec(property(get=GetSequenceCheck,put=PutSequenceCheck))
    VARIANT_BOOL SequenceCheck;
    __declspec(property(get=GetBackgroundOpen,put=PutBackgroundOpen))
    VARIANT_BOOL BackgroundOpen;
    __declspec(property(get=GetDisableFeaturesbyDefault,put=PutDisableFeaturesbyDefault))
    VARIANT_BOOL DisableFeaturesbyDefault;
    __declspec(property(get=GetPasteAdjustWordSpacing,put=PutPasteAdjustWordSpacing))
    VARIANT_BOOL PasteAdjustWordSpacing;
    __declspec(property(get=GetPasteAdjustParagraphSpacing,put=PutPasteAdjustParagraphSpacing))
    VARIANT_BOOL PasteAdjustParagraphSpacing;
    __declspec(property(get=GetPasteAdjustTableFormatting,put=PutPasteAdjustTableFormatting))
    VARIANT_BOOL PasteAdjustTableFormatting;
    __declspec(property(get=GetPasteSmartStyleBehavior,put=PutPasteSmartStyleBehavior))
    VARIANT_BOOL PasteSmartStyleBehavior;
    __declspec(property(get=GetPasteMergeFromPPT,put=PutPasteMergeFromPPT))
    VARIANT_BOOL PasteMergeFromPPT;
    __declspec(property(get=GetPasteMergeFromXL,put=PutPasteMergeFromXL))
    VARIANT_BOOL PasteMergeFromXL;
    __declspec(property(get=GetCtrlClickHyperlinkToOpen,put=PutCtrlClickHyperlinkToOpen))
    VARIANT_BOOL CtrlClickHyperlinkToOpen;
    __declspec(property(get=GetPictureWrapType,put=PutPictureWrapType))
    enum WdWrapTypeMerged PictureWrapType;
    __declspec(property(get=GetDisableFeaturesIntroducedAfterbyDefault,put=PutDisableFeaturesIntroducedAfterbyDefault))
    enum WdDisableFeaturesIntroducedAfter DisableFeaturesIntroducedAfterbyDefault;
    __declspec(property(get=GetPasteSmartCutPaste,put=PutPasteSmartCutPaste))
    VARIANT_BOOL PasteSmartCutPaste;
    __declspec(property(get=GetDisplayPasteOptions,put=PutDisplayPasteOptions))
    VARIANT_BOOL DisplayPasteOptions;
    __declspec(property(get=GetPromptUpdateStyle,put=PutPromptUpdateStyle))
    VARIANT_BOOL PromptUpdateStyle;
    __declspec(property(get=GetDefaultEPostageApp,put=PutDefaultEPostageApp))
    _bstr_t DefaultEPostageApp;
    __declspec(property(get=GetDefaultTextEncoding,put=PutDefaultTextEncoding))
    enum Office::MsoEncoding DefaultTextEncoding;
    __declspec(property(get=GetLabelSmartTags,put=PutLabelSmartTags))
    VARIANT_BOOL LabelSmartTags;
    __declspec(property(get=GetDisplaySmartTagButtons,put=PutDisplaySmartTagButtons))
    VARIANT_BOOL DisplaySmartTagButtons;
    __declspec(property(get=GetWarnBeforeSavingPrintingSendingMarkup,put=PutWarnBeforeSavingPrintingSendingMarkup))
    VARIANT_BOOL WarnBeforeSavingPrintingSendingMarkup;
    __declspec(property(get=GetStoreRSIDOnSave,put=PutStoreRSIDOnSave))
    VARIANT_BOOL StoreRSIDOnSave;
    __declspec(property(get=GetShowFormatError,put=PutShowFormatError))
    VARIANT_BOOL ShowFormatError;
    __declspec(property(get=GetFormatScanning,put=PutFormatScanning))
    VARIANT_BOOL FormatScanning;
    __declspec(property(get=GetPasteMergeLists,put=PutPasteMergeLists))
    VARIANT_BOOL PasteMergeLists;
    __declspec(property(get=GetAutoCreateNewDrawings,put=PutAutoCreateNewDrawings))
    VARIANT_BOOL AutoCreateNewDrawings;
    __declspec(property(get=GetSmartParaSelection,put=PutSmartParaSelection))
    VARIANT_BOOL SmartParaSelection;
    __declspec(property(get=GetRevisionsBalloonPrintOrientation,put=PutRevisionsBalloonPrintOrientation))
    enum WdRevisionsBalloonPrintOrientation RevisionsBalloonPrintOrientation;
    __declspec(property(get=GetCommentsColor,put=PutCommentsColor))
    enum WdColorIndex CommentsColor;
    __declspec(property(get=GetPrintXMLTag,put=PutPrintXMLTag))
    VARIANT_BOOL PrintXMLTag;
    __declspec(property(get=GetPrintBackgrounds,put=PutPrintBackgrounds))
    VARIANT_BOOL PrintBackgrounds;
    __declspec(property(get=GetAllowReadingMode,put=PutAllowReadingMode))
    VARIANT_BOOL AllowReadingMode;
    __declspec(property(get=GetShowMarkupOpenSave,put=PutShowMarkupOpenSave))
    VARIANT_BOOL ShowMarkupOpenSave;
    __declspec(property(get=GetSmartCursoring,put=PutSmartCursoring))
    VARIANT_BOOL SmartCursoring;
    __declspec(property(get=GetMoveToTextMark,put=PutMoveToTextMark))
    enum WdMoveToTextMark MoveToTextMark;
    __declspec(property(get=GetMoveFromTextMark,put=PutMoveFromTextMark))
    enum WdMoveFromTextMark MoveFromTextMark;
    __declspec(property(get=GetBibliographyStyle,put=PutBibliographyStyle))
    _bstr_t BibliographyStyle;
    __declspec(property(get=GetBibliographySort,put=PutBibliographySort))
    _bstr_t BibliographySort;
    __declspec(property(get=GetInsertedCellColor,put=PutInsertedCellColor))
    enum WdCellColor InsertedCellColor;
    __declspec(property(get=GetDeletedCellColor,put=PutDeletedCellColor))
    enum WdCellColor DeletedCellColor;
    __declspec(property(get=GetMergedCellColor,put=PutMergedCellColor))
    enum WdCellColor MergedCellColor;
    __declspec(property(get=GetSplitCellColor,put=PutSplitCellColor))
    enum WdCellColor SplitCellColor;
    __declspec(property(get=GetShowSelectionFloaties,put=PutShowSelectionFloaties))
    VARIANT_BOOL ShowSelectionFloaties;
    __declspec(property(get=GetShowMenuFloaties,put=PutShowMenuFloaties))
    VARIANT_BOOL ShowMenuFloaties;
    __declspec(property(get=GetShowDevTools,put=PutShowDevTools))
    VARIANT_BOOL ShowDevTools;
    __declspec(property(get=GetEnableLivePreview,put=PutEnableLivePreview))
    VARIANT_BOOL EnableLivePreview;
    __declspec(property(get=GetOMathAutoBuildUp,put=PutOMathAutoBuildUp))
    VARIANT_BOOL OMathAutoBuildUp;
    __declspec(property(get=GetAlwaysUseClearType,put=PutAlwaysUseClearType))
    VARIANT_BOOL AlwaysUseClearType;
    __declspec(property(get=GetPasteFormatWithinDocument,put=PutPasteFormatWithinDocument))
    enum WdPasteOptions PasteFormatWithinDocument;
    __declspec(property(get=GetPasteFormatBetweenDocuments,put=PutPasteFormatBetweenDocuments))
    enum WdPasteOptions PasteFormatBetweenDocuments;
    __declspec(property(get=GetPasteFormatBetweenStyledDocuments,put=PutPasteFormatBetweenStyledDocuments))
    enum WdPasteOptions PasteFormatBetweenStyledDocuments;
    __declspec(property(get=GetPasteFormatFromExternalSource,put=PutPasteFormatFromExternalSource))
    enum WdPasteOptions PasteFormatFromExternalSource;
    __declspec(property(get=GetPasteOptionKeepBulletsAndNumbers,put=PutPasteOptionKeepBulletsAndNumbers))
    VARIANT_BOOL PasteOptionKeepBulletsAndNumbers;
    __declspec(property(get=GetINSKeyForOvertype,put=PutINSKeyForOvertype))
    VARIANT_BOOL INSKeyForOvertype;
    __declspec(property(get=GetRepeatWord,put=PutRepeatWord))
    VARIANT_BOOL RepeatWord;
    __declspec(property(get=GetFrenchReform,put=PutFrenchReform))
    enum WdFrenchSpeller FrenchReform;
    __declspec(property(get=GetContextualSpeller,put=PutContextualSpeller))
    VARIANT_BOOL ContextualSpeller;
    __declspec(property(get=GetMoveToTextColor,put=PutMoveToTextColor))
    enum WdColorIndex MoveToTextColor;
    __declspec(property(get=GetMoveFromTextColor,put=PutMoveFromTextColor))
    enum WdColorIndex MoveFromTextColor;
    __declspec(property(get=GetOMathCopyLF,put=PutOMathCopyLF))
    VARIANT_BOOL OMathCopyLF;
    __declspec(property(get=GetUseNormalStyleForList,put=PutUseNormalStyleForList))
    VARIANT_BOOL UseNormalStyleForList;
    __declspec(property(get=GetAllowOpenInDraftView,put=PutAllowOpenInDraftView))
    VARIANT_BOOL AllowOpenInDraftView;
    __declspec(property(get=GetEnableLegacyIMEMode,put=PutEnableLegacyIMEMode))
    VARIANT_BOOL EnableLegacyIMEMode;
    __declspec(property(get=GetDoNotPromptForConvert,put=PutDoNotPromptForConvert))
    VARIANT_BOOL DoNotPromptForConvert;
    __declspec(property(get=GetPrecisePositioning,put=PutPrecisePositioning))
    VARIANT_BOOL PrecisePositioning;
    __declspec(property(get=GetAutoFormatApplyHeadings,put=PutAutoFormatApplyHeadings))
    VARIANT_BOOL AutoFormatApplyHeadings;
    __declspec(property(get=GetAutoFormatApplyLists,put=PutAutoFormatApplyLists))
    VARIANT_BOOL AutoFormatApplyLists;
    __declspec(property(get=GetAutoFormatApplyBulletedLists,put=PutAutoFormatApplyBulletedLists))
    VARIANT_BOOL AutoFormatApplyBulletedLists;
    __declspec(property(get=GetAutoFormatApplyOtherParas,put=PutAutoFormatApplyOtherParas))
    VARIANT_BOOL AutoFormatApplyOtherParas;
    __declspec(property(get=GetAutoFormatReplaceQuotes,put=PutAutoFormatReplaceQuotes))
    VARIANT_BOOL AutoFormatReplaceQuotes;
    __declspec(property(get=GetAutoFormatReplaceSymbols,put=PutAutoFormatReplaceSymbols))
    VARIANT_BOOL AutoFormatReplaceSymbols;
    __declspec(property(get=GetAutoFormatReplaceOrdinals,put=PutAutoFormatReplaceOrdinals))
    VARIANT_BOOL AutoFormatReplaceOrdinals;
    __declspec(property(get=GetAutoFormatReplaceFractions,put=PutAutoFormatReplaceFractions))
    VARIANT_BOOL AutoFormatReplaceFractions;
    __declspec(property(get=GetAutoFormatReplacePlainTextEmphasis,put=PutAutoFormatReplacePlainTextEmphasis))
    VARIANT_BOOL AutoFormatReplacePlainTextEmphasis;
    __declspec(property(get=GetAutoFormatPreserveStyles,put=PutAutoFormatPreserveStyles))
    VARIANT_BOOL AutoFormatPreserveStyles;
    __declspec(property(get=GetAutoFormatAsYouTypeApplyHeadings,put=PutAutoFormatAsYouTypeApplyHeadings))
    VARIANT_BOOL AutoFormatAsYouTypeApplyHeadings;
    __declspec(property(get=GetAutoFormatAsYouTypeApplyBorders,put=PutAutoFormatAsYouTypeApplyBorders))
    VARIANT_BOOL AutoFormatAsYouTypeApplyBorders;
    __declspec(property(get=GetAutoFormatAsYouTypeApplyBulletedLists,put=PutAutoFormatAsYouTypeApplyBulletedLists))
    VARIANT_BOOL AutoFormatAsYouTypeApplyBulletedLists;
    __declspec(property(get=GetAutoFormatAsYouTypeApplyNumberedLists,put=PutAutoFormatAsYouTypeApplyNumberedLists))
    VARIANT_BOOL AutoFormatAsYouTypeApplyNumberedLists;
    __declspec(property(get=GetAutoFormatAsYouTypeReplaceQuotes,put=PutAutoFormatAsYouTypeReplaceQuotes))
    VARIANT_BOOL AutoFormatAsYouTypeReplaceQuotes;
    __declspec(property(get=GetAutoFormatAsYouTypeReplaceSymbols,put=PutAutoFormatAsYouTypeReplaceSymbols))
    VARIANT_BOOL AutoFormatAsYouTypeReplaceSymbols;
    __declspec(property(get=GetAutoFormatAsYouTypeReplaceOrdinals,put=PutAutoFormatAsYouTypeReplaceOrdinals))
    VARIANT_BOOL AutoFormatAsYouTypeReplaceOrdinals;
    __declspec(property(get=GetAutoFormatAsYouTypeReplaceFractions,put=PutAutoFormatAsYouTypeReplaceFractions))
    VARIANT_BOOL AutoFormatAsYouTypeReplaceFractions;
    __declspec(property(get=GetAutoFormatAsYouTypeReplacePlainTextEmphasis,put=PutAutoFormatAsYouTypeReplacePlainTextEmphasis))
    VARIANT_BOOL AutoFormatAsYouTypeReplacePlainTextEmphasis;
    __declspec(property(get=GetAutoFormatAsYouTypeFormatListItemBeginning,put=PutAutoFormatAsYouTypeFormatListItemBeginning))
    VARIANT_BOOL AutoFormatAsYouTypeFormatListItemBeginning;
    __declspec(property(get=GetAutoFormatAsYouTypeDefineStyles,put=PutAutoFormatAsYouTypeDefineStyles))
    VARIANT_BOOL AutoFormatAsYouTypeDefineStyles;
    __declspec(property(get=GetAutoFormatPlainTextWordMail,put=PutAutoFormatPlainTextWordMail))
    VARIANT_BOOL AutoFormatPlainTextWordMail;
    __declspec(property(get=GetAutoFormatAsYouTypeReplaceHyperlinks,put=PutAutoFormatAsYouTypeReplaceHyperlinks))
    VARIANT_BOOL AutoFormatAsYouTypeReplaceHyperlinks;
    __declspec(property(get=GetAutoFormatReplaceHyperlinks,put=PutAutoFormatReplaceHyperlinks))
    VARIANT_BOOL AutoFormatReplaceHyperlinks;
    __declspec(property(get=GetDefaultHighlightColorIndex,put=PutDefaultHighlightColorIndex))
    enum WdColorIndex DefaultHighlightColorIndex;
    __declspec(property(get=GetDefaultBorderLineStyle,put=PutDefaultBorderLineStyle))
    enum WdLineStyle DefaultBorderLineStyle;
    __declspec(property(get=GetCheckSpellingAsYouType,put=PutCheckSpellingAsYouType))
    VARIANT_BOOL CheckSpellingAsYouType;
    __declspec(property(get=GetCheckGrammarAsYouType,put=PutCheckGrammarAsYouType))
    VARIANT_BOOL CheckGrammarAsYouType;
    __declspec(property(get=GetIgnoreInternetAndFileAddresses,put=PutIgnoreInternetAndFileAddresses))
    VARIANT_BOOL IgnoreInternetAndFileAddresses;
    __declspec(property(get=GetShowReadabilityStatistics,put=PutShowReadabilityStatistics))
    VARIANT_BOOL ShowReadabilityStatistics;
    __declspec(property(get=GetIgnoreUppercase,put=PutIgnoreUppercase))
    VARIANT_BOOL IgnoreUppercase;
    __declspec(property(get=GetIgnoreMixedDigits,put=PutIgnoreMixedDigits))
    VARIANT_BOOL IgnoreMixedDigits;
    __declspec(property(get=GetSuggestFromMainDictionaryOnly,put=PutSuggestFromMainDictionaryOnly))
    VARIANT_BOOL SuggestFromMainDictionaryOnly;
    __declspec(property(get=GetSuggestSpellingCorrections,put=PutSuggestSpellingCorrections))
    VARIANT_BOOL SuggestSpellingCorrections;
    __declspec(property(get=GetDefaultBorderLineWidth,put=PutDefaultBorderLineWidth))
    enum WdLineWidth DefaultBorderLineWidth;
    __declspec(property(get=GetCheckGrammarWithSpelling,put=PutCheckGrammarWithSpelling))
    VARIANT_BOOL CheckGrammarWithSpelling;
    __declspec(property(get=GetDefaultOpenFormat,put=PutDefaultOpenFormat))
    enum WdOpenFormat DefaultOpenFormat;
    __declspec(property(get=GetPrintDraft,put=PutPrintDraft))
    VARIANT_BOOL PrintDraft;
    __declspec(property(get=GetPrintReverse,put=PutPrintReverse))
    VARIANT_BOOL PrintReverse;
    __declspec(property(get=GetMapPaperSize,put=PutMapPaperSize))
    VARIANT_BOOL MapPaperSize;
    __declspec(property(get=GetAutoFormatAsYouTypeApplyTables,put=PutAutoFormatAsYouTypeApplyTables))
    VARIANT_BOOL AutoFormatAsYouTypeApplyTables;
    __declspec(property(get=GetAutoFormatApplyFirstIndents,put=PutAutoFormatApplyFirstIndents))
    VARIANT_BOOL AutoFormatApplyFirstIndents;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetAutoFormatMatchParentheses,put=PutAutoFormatMatchParentheses))
    VARIANT_BOOL AutoFormatMatchParentheses;
    __declspec(property(get=GetAutoFormatReplaceFarEastDashes,put=PutAutoFormatReplaceFarEastDashes))
    VARIANT_BOOL AutoFormatReplaceFarEastDashes;
    __declspec(property(get=GetAutoFormatDeleteAutoSpaces,put=PutAutoFormatDeleteAutoSpaces))
    VARIANT_BOOL AutoFormatDeleteAutoSpaces;
    __declspec(property(get=GetAutoFormatAsYouTypeApplyFirstIndents,put=PutAutoFormatAsYouTypeApplyFirstIndents))
    VARIANT_BOOL AutoFormatAsYouTypeApplyFirstIndents;
    __declspec(property(get=GetAutoFormatAsYouTypeApplyDates,put=PutAutoFormatAsYouTypeApplyDates))
    VARIANT_BOOL AutoFormatAsYouTypeApplyDates;
    __declspec(property(get=GetAutoFormatAsYouTypeApplyClosings,put=PutAutoFormatAsYouTypeApplyClosings))
    VARIANT_BOOL AutoFormatAsYouTypeApplyClosings;
    __declspec(property(get=GetAutoFormatAsYouTypeMatchParentheses,put=PutAutoFormatAsYouTypeMatchParentheses))
    VARIANT_BOOL AutoFormatAsYouTypeMatchParentheses;
    __declspec(property(get=GetAutoFormatAsYouTypeReplaceFarEastDashes,put=PutAutoFormatAsYouTypeReplaceFarEastDashes))
    VARIANT_BOOL AutoFormatAsYouTypeReplaceFarEastDashes;
    __declspec(property(get=GetAutoFormatAsYouTypeDeleteAutoSpaces,put=PutAutoFormatAsYouTypeDeleteAutoSpaces))
    VARIANT_BOOL AutoFormatAsYouTypeDeleteAutoSpaces;
    __declspec(property(get=GetAutoFormatAsYouTypeInsertClosings,put=PutAutoFormatAsYouTypeInsertClosings))
    VARIANT_BOOL AutoFormatAsYouTypeInsertClosings;
    __declspec(property(get=GetAutoFormatAsYouTypeAutoLetterWizard,put=PutAutoFormatAsYouTypeAutoLetterWizard))
    VARIANT_BOOL AutoFormatAsYouTypeAutoLetterWizard;
    __declspec(property(get=GetAutoFormatAsYouTypeInsertOvers,put=PutAutoFormatAsYouTypeInsertOvers))
    VARIANT_BOOL AutoFormatAsYouTypeInsertOvers;
    __declspec(property(get=GetDisplayGridLines,put=PutDisplayGridLines))
    VARIANT_BOOL DisplayGridLines;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetMatchFuzzyCase,put=PutMatchFuzzyCase))
    VARIANT_BOOL MatchFuzzyCase;
    __declspec(property(get=GetMatchFuzzyByte,put=PutMatchFuzzyByte))
    VARIANT_BOOL MatchFuzzyByte;
    __declspec(property(get=GetMatchFuzzyHiragana,put=PutMatchFuzzyHiragana))
    VARIANT_BOOL MatchFuzzyHiragana;
    __declspec(property(get=GetMatchFuzzySmallKana,put=PutMatchFuzzySmallKana))
    VARIANT_BOOL MatchFuzzySmallKana;
    __declspec(property(get=GetMatchFuzzyDash,put=PutMatchFuzzyDash))
    VARIANT_BOOL MatchFuzzyDash;
    __declspec(property(get=GetMatchFuzzyIterationMark,put=PutMatchFuzzyIterationMark))
    VARIANT_BOOL MatchFuzzyIterationMark;
    __declspec(property(get=GetMatchFuzzyKanji,put=PutMatchFuzzyKanji))
    VARIANT_BOOL MatchFuzzyKanji;
    __declspec(property(get=GetMatchFuzzyOldKana,put=PutMatchFuzzyOldKana))
    VARIANT_BOOL MatchFuzzyOldKana;
    __declspec(property(get=GetMatchFuzzyProlongedSoundMark,put=PutMatchFuzzyProlongedSoundMark))
    VARIANT_BOOL MatchFuzzyProlongedSoundMark;
    __declspec(property(get=GetMatchFuzzyDZ,put=PutMatchFuzzyDZ))
    VARIANT_BOOL MatchFuzzyDZ;
    __declspec(property(get=GetMatchFuzzyBV,put=PutMatchFuzzyBV))
    VARIANT_BOOL MatchFuzzyBV;
    __declspec(property(get=GetMatchFuzzyTC,put=PutMatchFuzzyTC))
    VARIANT_BOOL MatchFuzzyTC;
    __declspec(property(get=GetMatchFuzzyHF,put=PutMatchFuzzyHF))
    VARIANT_BOOL MatchFuzzyHF;
    __declspec(property(get=GetMatchFuzzyZJ,put=PutMatchFuzzyZJ))
    VARIANT_BOOL MatchFuzzyZJ;
    __declspec(property(get=GetMatchFuzzyAY,put=PutMatchFuzzyAY))
    VARIANT_BOOL MatchFuzzyAY;
    __declspec(property(get=GetMatchFuzzyKiKu,put=PutMatchFuzzyKiKu))
    VARIANT_BOOL MatchFuzzyKiKu;
    __declspec(property(get=GetMatchFuzzyPunctuation,put=PutMatchFuzzyPunctuation))
    VARIANT_BOOL MatchFuzzyPunctuation;
    __declspec(property(get=GetMatchFuzzySpace,put=PutMatchFuzzySpace))
    VARIANT_BOOL MatchFuzzySpace;
    __declspec(property(get=GetApplyFarEastFontsToAscii,put=PutApplyFarEastFontsToAscii))
    VARIANT_BOOL ApplyFarEastFontsToAscii;
    __declspec(property(get=GetConvertHighAnsiToFarEast,put=PutConvertHighAnsiToFarEast))
    VARIANT_BOOL ConvertHighAnsiToFarEast;
    __declspec(property(get=GetPrintOddPagesInAscendingOrder,put=PutPrintOddPagesInAscendingOrder))
    VARIANT_BOOL PrintOddPagesInAscendingOrder;
    __declspec(property(get=GetPrintEvenPagesInAscendingOrder,put=PutPrintEvenPagesInAscendingOrder))
    VARIANT_BOOL PrintEvenPagesInAscendingOrder;
    __declspec(property(get=GetDefaultBorderColorIndex,put=PutDefaultBorderColorIndex))
    enum WdColorIndex DefaultBorderColorIndex;
    __declspec(property(get=GetEnableMisusedWordsDictionary,put=PutEnableMisusedWordsDictionary))
    VARIANT_BOOL EnableMisusedWordsDictionary;
    __declspec(property(get=GetAllowCombinedAuxiliaryForms,put=PutAllowCombinedAuxiliaryForms))
    VARIANT_BOOL AllowCombinedAuxiliaryForms;
    __declspec(property(get=GetHangulHanjaFastConversion,put=PutHangulHanjaFastConversion))
    VARIANT_BOOL HangulHanjaFastConversion;
    __declspec(property(get=GetCheckHangulEndings,put=PutCheckHangulEndings))
    VARIANT_BOOL CheckHangulEndings;
    __declspec(property(get=GetEnableHangulHanjaRecentOrdering,put=PutEnableHangulHanjaRecentOrdering))
    VARIANT_BOOL EnableHangulHanjaRecentOrdering;
    __declspec(property(get=GetMultipleWordConversionsMode,put=PutMultipleWordConversionsMode))
    enum WdMultipleWordConversionsMode MultipleWordConversionsMode;
    __declspec(property(get=GetDefaultBorderColor,put=PutDefaultBorderColor))
    enum WdColor DefaultBorderColor;
    __declspec(property(get=GetAllowPixelUnits,put=PutAllowPixelUnits))
    VARIANT_BOOL AllowPixelUnits;
    __declspec(property(get=GetUseCharacterUnit,put=PutUseCharacterUnit))
    VARIANT_BOOL UseCharacterUnit;
    __declspec(property(get=GetAllowCompoundNounProcessing,put=PutAllowCompoundNounProcessing))
    VARIANT_BOOL AllowCompoundNounProcessing;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetAllowAccentedUppercase ( );
    void PutAllowAccentedUppercase (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetWPHelp ( );
    void PutWPHelp (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetWPDocNavKeys ( );
    void PutWPDocNavKeys (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetPagination ( );
    void PutPagination (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetBlueScreen ( );
    void PutBlueScreen (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetEnableSound ( );
    void PutEnableSound (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetConfirmConversions ( );
    void PutConfirmConversions (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetUpdateLinksAtOpen ( );
    void PutUpdateLinksAtOpen (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetSendMailAttach ( );
    void PutSendMailAttach (
        VARIANT_BOOL prop );
    enum WdMeasurementUnits GetMeasurementUnit ( );
    void PutMeasurementUnit (
        enum WdMeasurementUnits prop );
    long GetButtonFieldClicks ( );
    void PutButtonFieldClicks (
        long prop );
    VARIANT_BOOL GetShortMenuNames ( );
    void PutShortMenuNames (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetRTFInClipboard ( );
    void PutRTFInClipboard (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetUpdateFieldsAtPrint ( );
    void PutUpdateFieldsAtPrint (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetPrintProperties ( );
    void PutPrintProperties (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetPrintFieldCodes ( );
    void PutPrintFieldCodes (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetPrintComments ( );
    void PutPrintComments (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetPrintHiddenText ( );
    void PutPrintHiddenText (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetEnvelopeFeederInstalled ( );
    VARIANT_BOOL GetUpdateLinksAtPrint ( );
    void PutUpdateLinksAtPrint (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetPrintBackground ( );
    void PutPrintBackground (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetPrintDrawingObjects ( );
    void PutPrintDrawingObjects (
        VARIANT_BOOL prop );
    _bstr_t GetDefaultTray ( );
    void PutDefaultTray (
        _bstr_t prop );
    long GetDefaultTrayID ( );
    void PutDefaultTrayID (
        long prop );
    VARIANT_BOOL GetCreateBackup ( );
    void PutCreateBackup (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAllowFastSave ( );
    void PutAllowFastSave (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetSavePropertiesPrompt ( );
    void PutSavePropertiesPrompt (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetSaveNormalPrompt ( );
    void PutSaveNormalPrompt (
        VARIANT_BOOL prop );
    long GetSaveInterval ( );
    void PutSaveInterval (
        long prop );
    VARIANT_BOOL GetBackgroundSave ( );
    void PutBackgroundSave (
        VARIANT_BOOL prop );
    enum WdInsertedTextMark GetInsertedTextMark ( );
    void PutInsertedTextMark (
        enum WdInsertedTextMark prop );
    enum WdDeletedTextMark GetDeletedTextMark ( );
    void PutDeletedTextMark (
        enum WdDeletedTextMark prop );
    enum WdRevisedLinesMark GetRevisedLinesMark ( );
    void PutRevisedLinesMark (
        enum WdRevisedLinesMark prop );
    enum WdColorIndex GetInsertedTextColor ( );
    void PutInsertedTextColor (
        enum WdColorIndex prop );
    enum WdColorIndex GetDeletedTextColor ( );
    void PutDeletedTextColor (
        enum WdColorIndex prop );
    enum WdColorIndex GetRevisedLinesColor ( );
    void PutRevisedLinesColor (
        enum WdColorIndex prop );
    _bstr_t GetDefaultFilePath (
        enum WdDefaultFilePath Path );
    void PutDefaultFilePath (
        enum WdDefaultFilePath Path,
        _bstr_t prop );
    VARIANT_BOOL GetOvertype ( );
    void PutOvertype (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetReplaceSelection ( );
    void PutReplaceSelection (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAllowDragAndDrop ( );
    void PutAllowDragAndDrop (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoWordSelection ( );
    void PutAutoWordSelection (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetINSKeyForPaste ( );
    void PutINSKeyForPaste (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetSmartCutPaste ( );
    void PutSmartCutPaste (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetTabIndentKey ( );
    void PutTabIndentKey (
        VARIANT_BOOL prop );
    _bstr_t GetPictureEditor ( );
    void PutPictureEditor (
        _bstr_t prop );
    VARIANT_BOOL GetAnimateScreenMovements ( );
    void PutAnimateScreenMovements (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetVirusProtection ( );
    void PutVirusProtection (
        VARIANT_BOOL prop );
    enum WdRevisedPropertiesMark GetRevisedPropertiesMark ( );
    void PutRevisedPropertiesMark (
        enum WdRevisedPropertiesMark prop );
    enum WdColorIndex GetRevisedPropertiesColor ( );
    void PutRevisedPropertiesColor (
        enum WdColorIndex prop );
    VARIANT_BOOL GetSnapToGrid ( );
    void PutSnapToGrid (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetSnapToShapes ( );
    void PutSnapToShapes (
        VARIANT_BOOL prop );
    float GetGridDistanceHorizontal ( );
    void PutGridDistanceHorizontal (
        float prop );
    float GetGridDistanceVertical ( );
    void PutGridDistanceVertical (
        float prop );
    float GetGridOriginHorizontal ( );
    void PutGridOriginHorizontal (
        float prop );
    float GetGridOriginVertical ( );
    void PutGridOriginVertical (
        float prop );
    VARIANT_BOOL GetInlineConversion ( );
    void PutInlineConversion (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetIMEAutomaticControl ( );
    void PutIMEAutomaticControl (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatApplyHeadings ( );
    void PutAutoFormatApplyHeadings (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatApplyLists ( );
    void PutAutoFormatApplyLists (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatApplyBulletedLists ( );
    void PutAutoFormatApplyBulletedLists (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatApplyOtherParas ( );
    void PutAutoFormatApplyOtherParas (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatReplaceQuotes ( );
    void PutAutoFormatReplaceQuotes (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatReplaceSymbols ( );
    void PutAutoFormatReplaceSymbols (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatReplaceOrdinals ( );
    void PutAutoFormatReplaceOrdinals (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatReplaceFractions ( );
    void PutAutoFormatReplaceFractions (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatReplacePlainTextEmphasis ( );
    void PutAutoFormatReplacePlainTextEmphasis (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatPreserveStyles ( );
    void PutAutoFormatPreserveStyles (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeApplyHeadings ( );
    void PutAutoFormatAsYouTypeApplyHeadings (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeApplyBorders ( );
    void PutAutoFormatAsYouTypeApplyBorders (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeApplyBulletedLists ( );
    void PutAutoFormatAsYouTypeApplyBulletedLists (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeApplyNumberedLists ( );
    void PutAutoFormatAsYouTypeApplyNumberedLists (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeReplaceQuotes ( );
    void PutAutoFormatAsYouTypeReplaceQuotes (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeReplaceSymbols ( );
    void PutAutoFormatAsYouTypeReplaceSymbols (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeReplaceOrdinals ( );
    void PutAutoFormatAsYouTypeReplaceOrdinals (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeReplaceFractions ( );
    void PutAutoFormatAsYouTypeReplaceFractions (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeReplacePlainTextEmphasis ( );
    void PutAutoFormatAsYouTypeReplacePlainTextEmphasis (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeFormatListItemBeginning ( );
    void PutAutoFormatAsYouTypeFormatListItemBeginning (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeDefineStyles ( );
    void PutAutoFormatAsYouTypeDefineStyles (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatPlainTextWordMail ( );
    void PutAutoFormatPlainTextWordMail (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeReplaceHyperlinks ( );
    void PutAutoFormatAsYouTypeReplaceHyperlinks (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatReplaceHyperlinks ( );
    void PutAutoFormatReplaceHyperlinks (
        VARIANT_BOOL prop );
    enum WdColorIndex GetDefaultHighlightColorIndex ( );
    void PutDefaultHighlightColorIndex (
        enum WdColorIndex prop );
    enum WdLineStyle GetDefaultBorderLineStyle ( );
    void PutDefaultBorderLineStyle (
        enum WdLineStyle prop );
    VARIANT_BOOL GetCheckSpellingAsYouType ( );
    void PutCheckSpellingAsYouType (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetCheckGrammarAsYouType ( );
    void PutCheckGrammarAsYouType (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetIgnoreInternetAndFileAddresses ( );
    void PutIgnoreInternetAndFileAddresses (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowReadabilityStatistics ( );
    void PutShowReadabilityStatistics (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetIgnoreUppercase ( );
    void PutIgnoreUppercase (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetIgnoreMixedDigits ( );
    void PutIgnoreMixedDigits (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetSuggestFromMainDictionaryOnly ( );
    void PutSuggestFromMainDictionaryOnly (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetSuggestSpellingCorrections ( );
    void PutSuggestSpellingCorrections (
        VARIANT_BOOL prop );
    enum WdLineWidth GetDefaultBorderLineWidth ( );
    void PutDefaultBorderLineWidth (
        enum WdLineWidth prop );
    VARIANT_BOOL GetCheckGrammarWithSpelling ( );
    void PutCheckGrammarWithSpelling (
        VARIANT_BOOL prop );
    enum WdOpenFormat GetDefaultOpenFormat ( );
    void PutDefaultOpenFormat (
        enum WdOpenFormat prop );
    VARIANT_BOOL GetPrintDraft ( );
    void PutPrintDraft (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetPrintReverse ( );
    void PutPrintReverse (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMapPaperSize ( );
    void PutMapPaperSize (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeApplyTables ( );
    void PutAutoFormatAsYouTypeApplyTables (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatApplyFirstIndents ( );
    void PutAutoFormatApplyFirstIndents (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatMatchParentheses ( );
    void PutAutoFormatMatchParentheses (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatReplaceFarEastDashes ( );
    void PutAutoFormatReplaceFarEastDashes (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatDeleteAutoSpaces ( );
    void PutAutoFormatDeleteAutoSpaces (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeApplyFirstIndents ( );
    void PutAutoFormatAsYouTypeApplyFirstIndents (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeApplyDates ( );
    void PutAutoFormatAsYouTypeApplyDates (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeApplyClosings ( );
    void PutAutoFormatAsYouTypeApplyClosings (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeMatchParentheses ( );
    void PutAutoFormatAsYouTypeMatchParentheses (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeReplaceFarEastDashes ( );
    void PutAutoFormatAsYouTypeReplaceFarEastDashes (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeDeleteAutoSpaces ( );
    void PutAutoFormatAsYouTypeDeleteAutoSpaces (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeInsertClosings ( );
    void PutAutoFormatAsYouTypeInsertClosings (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeAutoLetterWizard ( );
    void PutAutoFormatAsYouTypeAutoLetterWizard (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeInsertOvers ( );
    void PutAutoFormatAsYouTypeInsertOvers (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetDisplayGridLines ( );
    void PutDisplayGridLines (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchFuzzyCase ( );
    void PutMatchFuzzyCase (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchFuzzyByte ( );
    void PutMatchFuzzyByte (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchFuzzyHiragana ( );
    void PutMatchFuzzyHiragana (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchFuzzySmallKana ( );
    void PutMatchFuzzySmallKana (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchFuzzyDash ( );
    void PutMatchFuzzyDash (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchFuzzyIterationMark ( );
    void PutMatchFuzzyIterationMark (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchFuzzyKanji ( );
    void PutMatchFuzzyKanji (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchFuzzyOldKana ( );
    void PutMatchFuzzyOldKana (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchFuzzyProlongedSoundMark ( );
    void PutMatchFuzzyProlongedSoundMark (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchFuzzyDZ ( );
    void PutMatchFuzzyDZ (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchFuzzyBV ( );
    void PutMatchFuzzyBV (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchFuzzyTC ( );
    void PutMatchFuzzyTC (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchFuzzyHF ( );
    void PutMatchFuzzyHF (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchFuzzyZJ ( );
    void PutMatchFuzzyZJ (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchFuzzyAY ( );
    void PutMatchFuzzyAY (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchFuzzyKiKu ( );
    void PutMatchFuzzyKiKu (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchFuzzyPunctuation ( );
    void PutMatchFuzzyPunctuation (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchFuzzySpace ( );
    void PutMatchFuzzySpace (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetApplyFarEastFontsToAscii ( );
    void PutApplyFarEastFontsToAscii (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetConvertHighAnsiToFarEast ( );
    void PutConvertHighAnsiToFarEast (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetPrintOddPagesInAscendingOrder ( );
    void PutPrintOddPagesInAscendingOrder (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetPrintEvenPagesInAscendingOrder ( );
    void PutPrintEvenPagesInAscendingOrder (
        VARIANT_BOOL prop );
    enum WdColorIndex GetDefaultBorderColorIndex ( );
    void PutDefaultBorderColorIndex (
        enum WdColorIndex prop );
    VARIANT_BOOL GetEnableMisusedWordsDictionary ( );
    void PutEnableMisusedWordsDictionary (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAllowCombinedAuxiliaryForms ( );
    void PutAllowCombinedAuxiliaryForms (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetHangulHanjaFastConversion ( );
    void PutHangulHanjaFastConversion (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetCheckHangulEndings ( );
    void PutCheckHangulEndings (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetEnableHangulHanjaRecentOrdering ( );
    void PutEnableHangulHanjaRecentOrdering (
        VARIANT_BOOL prop );
    enum WdMultipleWordConversionsMode GetMultipleWordConversionsMode ( );
    void PutMultipleWordConversionsMode (
        enum WdMultipleWordConversionsMode prop );
    HRESULT SetWPHelpOptions (
        VARIANT * CommandKeyHelp = &vtMissing,
        VARIANT * DocNavigationKeys = &vtMissing,
        VARIANT * MouseSimulation = &vtMissing,
        VARIANT * DemoGuidance = &vtMissing,
        VARIANT * DemoSpeed = &vtMissing,
        VARIANT * HelpType = &vtMissing );
    enum WdColor GetDefaultBorderColor ( );
    void PutDefaultBorderColor (
        enum WdColor prop );
    VARIANT_BOOL GetAllowPixelUnits ( );
    void PutAllowPixelUnits (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetUseCharacterUnit ( );
    void PutUseCharacterUnit (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAllowCompoundNounProcessing ( );
    void PutAllowCompoundNounProcessing (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoKeyboardSwitching ( );
    void PutAutoKeyboardSwitching (
        VARIANT_BOOL prop );
    enum WdDocumentViewDirection GetDocumentViewDirection ( );
    void PutDocumentViewDirection (
        enum WdDocumentViewDirection prop );
    enum WdArabicNumeral GetArabicNumeral ( );
    void PutArabicNumeral (
        enum WdArabicNumeral prop );
    enum WdMonthNames GetMonthNames ( );
    void PutMonthNames (
        enum WdMonthNames prop );
    enum WdCursorMovement GetCursorMovement ( );
    void PutCursorMovement (
        enum WdCursorMovement prop );
    enum WdVisualSelection GetVisualSelection ( );
    void PutVisualSelection (
        enum WdVisualSelection prop );
    VARIANT_BOOL GetShowDiacritics ( );
    void PutShowDiacritics (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowControlCharacters ( );
    void PutShowControlCharacters (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAddControlCharacters ( );
    void PutAddControlCharacters (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAddBiDirectionalMarksWhenSavingTextFile ( );
    void PutAddBiDirectionalMarksWhenSavingTextFile (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetStrictInitialAlefHamza ( );
    void PutStrictInitialAlefHamza (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetStrictFinalYaa ( );
    void PutStrictFinalYaa (
        VARIANT_BOOL prop );
    enum WdHebSpellStart GetHebrewMode ( );
    void PutHebrewMode (
        enum WdHebSpellStart prop );
    enum WdAraSpeller GetArabicMode ( );
    void PutArabicMode (
        enum WdAraSpeller prop );
    VARIANT_BOOL GetAllowClickAndTypeMouse ( );
    void PutAllowClickAndTypeMouse (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetUseGermanSpellingReform ( );
    void PutUseGermanSpellingReform (
        VARIANT_BOOL prop );
    enum WdHighAnsiText GetInterpretHighAnsi ( );
    void PutInterpretHighAnsi (
        enum WdHighAnsiText prop );
    VARIANT_BOOL GetAddHebDoubleQuote ( );
    void PutAddHebDoubleQuote (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetUseDiffDiacColor ( );
    void PutUseDiffDiacColor (
        VARIANT_BOOL prop );
    enum WdColor GetDiacriticColorVal ( );
    void PutDiacriticColorVal (
        enum WdColor prop );
    VARIANT_BOOL GetOptimizeForWord97byDefault ( );
    void PutOptimizeForWord97byDefault (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetLocalNetworkFile ( );
    void PutLocalNetworkFile (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetTypeNReplace ( );
    void PutTypeNReplace (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetSequenceCheck ( );
    void PutSequenceCheck (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetBackgroundOpen ( );
    void PutBackgroundOpen (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetDisableFeaturesbyDefault ( );
    void PutDisableFeaturesbyDefault (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetPasteAdjustWordSpacing ( );
    void PutPasteAdjustWordSpacing (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetPasteAdjustParagraphSpacing ( );
    void PutPasteAdjustParagraphSpacing (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetPasteAdjustTableFormatting ( );
    void PutPasteAdjustTableFormatting (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetPasteSmartStyleBehavior ( );
    void PutPasteSmartStyleBehavior (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetPasteMergeFromPPT ( );
    void PutPasteMergeFromPPT (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetPasteMergeFromXL ( );
    void PutPasteMergeFromXL (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetCtrlClickHyperlinkToOpen ( );
    void PutCtrlClickHyperlinkToOpen (
        VARIANT_BOOL prop );
    enum WdWrapTypeMerged GetPictureWrapType ( );
    void PutPictureWrapType (
        enum WdWrapTypeMerged prop );
    enum WdDisableFeaturesIntroducedAfter GetDisableFeaturesIntroducedAfterbyDefault ( );
    void PutDisableFeaturesIntroducedAfterbyDefault (
        enum WdDisableFeaturesIntroducedAfter prop );
    VARIANT_BOOL GetPasteSmartCutPaste ( );
    void PutPasteSmartCutPaste (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetDisplayPasteOptions ( );
    void PutDisplayPasteOptions (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetPromptUpdateStyle ( );
    void PutPromptUpdateStyle (
        VARIANT_BOOL prop );
    _bstr_t GetDefaultEPostageApp ( );
    void PutDefaultEPostageApp (
        _bstr_t prop );
    enum Office::MsoEncoding GetDefaultTextEncoding ( );
    void PutDefaultTextEncoding (
        enum Office::MsoEncoding prop );
    VARIANT_BOOL GetLabelSmartTags ( );
    void PutLabelSmartTags (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetDisplaySmartTagButtons ( );
    void PutDisplaySmartTagButtons (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetWarnBeforeSavingPrintingSendingMarkup ( );
    void PutWarnBeforeSavingPrintingSendingMarkup (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetStoreRSIDOnSave ( );
    void PutStoreRSIDOnSave (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowFormatError ( );
    void PutShowFormatError (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetFormatScanning ( );
    void PutFormatScanning (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetPasteMergeLists ( );
    void PutPasteMergeLists (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoCreateNewDrawings ( );
    void PutAutoCreateNewDrawings (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetSmartParaSelection ( );
    void PutSmartParaSelection (
        VARIANT_BOOL prop );
    enum WdRevisionsBalloonPrintOrientation GetRevisionsBalloonPrintOrientation ( );
    void PutRevisionsBalloonPrintOrientation (
        enum WdRevisionsBalloonPrintOrientation prop );
    enum WdColorIndex GetCommentsColor ( );
    void PutCommentsColor (
        enum WdColorIndex prop );
    VARIANT_BOOL GetPrintXMLTag ( );
    void PutPrintXMLTag (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetPrintBackgrounds ( );
    void PutPrintBackgrounds (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAllowReadingMode ( );
    void PutAllowReadingMode (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowMarkupOpenSave ( );
    void PutShowMarkupOpenSave (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetSmartCursoring ( );
    void PutSmartCursoring (
        VARIANT_BOOL prop );
    enum WdMoveToTextMark GetMoveToTextMark ( );
    void PutMoveToTextMark (
        enum WdMoveToTextMark prop );
    enum WdMoveFromTextMark GetMoveFromTextMark ( );
    void PutMoveFromTextMark (
        enum WdMoveFromTextMark prop );
    _bstr_t GetBibliographyStyle ( );
    void PutBibliographyStyle (
        _bstr_t prop );
    _bstr_t GetBibliographySort ( );
    void PutBibliographySort (
        _bstr_t prop );
    enum WdCellColor GetInsertedCellColor ( );
    void PutInsertedCellColor (
        enum WdCellColor prop );
    enum WdCellColor GetDeletedCellColor ( );
    void PutDeletedCellColor (
        enum WdCellColor prop );
    enum WdCellColor GetMergedCellColor ( );
    void PutMergedCellColor (
        enum WdCellColor prop );
    enum WdCellColor GetSplitCellColor ( );
    void PutSplitCellColor (
        enum WdCellColor prop );
    VARIANT_BOOL GetShowSelectionFloaties ( );
    void PutShowSelectionFloaties (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowMenuFloaties ( );
    void PutShowMenuFloaties (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowDevTools ( );
    void PutShowDevTools (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetEnableLivePreview ( );
    void PutEnableLivePreview (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetOMathAutoBuildUp ( );
    void PutOMathAutoBuildUp (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAlwaysUseClearType ( );
    void PutAlwaysUseClearType (
        VARIANT_BOOL prop );
    enum WdPasteOptions GetPasteFormatWithinDocument ( );
    void PutPasteFormatWithinDocument (
        enum WdPasteOptions prop );
    enum WdPasteOptions GetPasteFormatBetweenDocuments ( );
    void PutPasteFormatBetweenDocuments (
        enum WdPasteOptions prop );
    enum WdPasteOptions GetPasteFormatBetweenStyledDocuments ( );
    void PutPasteFormatBetweenStyledDocuments (
        enum WdPasteOptions prop );
    enum WdPasteOptions GetPasteFormatFromExternalSource ( );
    void PutPasteFormatFromExternalSource (
        enum WdPasteOptions prop );
    VARIANT_BOOL GetPasteOptionKeepBulletsAndNumbers ( );
    void PutPasteOptionKeepBulletsAndNumbers (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetINSKeyForOvertype ( );
    void PutINSKeyForOvertype (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetRepeatWord ( );
    void PutRepeatWord (
        VARIANT_BOOL prop );
    enum WdFrenchSpeller GetFrenchReform ( );
    void PutFrenchReform (
        enum WdFrenchSpeller prop );
    VARIANT_BOOL GetContextualSpeller ( );
    void PutContextualSpeller (
        VARIANT_BOOL prop );
    enum WdColorIndex GetMoveToTextColor ( );
    void PutMoveToTextColor (
        enum WdColorIndex prop );
    enum WdColorIndex GetMoveFromTextColor ( );
    void PutMoveFromTextColor (
        enum WdColorIndex prop );
    VARIANT_BOOL GetOMathCopyLF ( );
    void PutOMathCopyLF (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetUseNormalStyleForList ( );
    void PutUseNormalStyleForList (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAllowOpenInDraftView ( );
    void PutAllowOpenInDraftView (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetEnableLegacyIMEMode ( );
    void PutEnableLegacyIMEMode (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetDoNotPromptForConvert ( );
    void PutDoNotPromptForConvert (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetPrecisePositioning ( );
    void PutPrecisePositioning (
        VARIANT_BOOL prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_AllowAccentedUppercase (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowAccentedUppercase (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_WPHelp (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_WPHelp (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_WPDocNavKeys (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_WPDocNavKeys (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Pagination (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Pagination (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_BlueScreen (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_BlueScreen (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_EnableSound (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EnableSound (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ConfirmConversions (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ConfirmConversions (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UpdateLinksAtOpen (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UpdateLinksAtOpen (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SendMailAttach (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SendMailAttach (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MeasurementUnit (
        /*[out,retval]*/ enum WdMeasurementUnits * prop ) = 0;
      virtual HRESULT __stdcall put_MeasurementUnit (
        /*[in]*/ enum WdMeasurementUnits prop ) = 0;
      virtual HRESULT __stdcall get_ButtonFieldClicks (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ButtonFieldClicks (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ShortMenuNames (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShortMenuNames (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RTFInClipboard (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RTFInClipboard (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UpdateFieldsAtPrint (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UpdateFieldsAtPrint (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintProperties (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintProperties (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintFieldCodes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintFieldCodes (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintComments (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintComments (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintHiddenText (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintHiddenText (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_EnvelopeFeederInstalled (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_UpdateLinksAtPrint (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UpdateLinksAtPrint (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintBackground (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintBackground (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintDrawingObjects (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintDrawingObjects (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DefaultTray (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultTray (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_DefaultTrayID (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultTrayID (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_CreateBackup (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CreateBackup (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AllowFastSave (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowFastSave (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SavePropertiesPrompt (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SavePropertiesPrompt (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SaveNormalPrompt (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SaveNormalPrompt (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SaveInterval (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SaveInterval (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_BackgroundSave (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_BackgroundSave (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_InsertedTextMark (
        /*[out,retval]*/ enum WdInsertedTextMark * prop ) = 0;
      virtual HRESULT __stdcall put_InsertedTextMark (
        /*[in]*/ enum WdInsertedTextMark prop ) = 0;
      virtual HRESULT __stdcall get_DeletedTextMark (
        /*[out,retval]*/ enum WdDeletedTextMark * prop ) = 0;
      virtual HRESULT __stdcall put_DeletedTextMark (
        /*[in]*/ enum WdDeletedTextMark prop ) = 0;
      virtual HRESULT __stdcall get_RevisedLinesMark (
        /*[out,retval]*/ enum WdRevisedLinesMark * prop ) = 0;
      virtual HRESULT __stdcall put_RevisedLinesMark (
        /*[in]*/ enum WdRevisedLinesMark prop ) = 0;
      virtual HRESULT __stdcall get_InsertedTextColor (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_InsertedTextColor (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_DeletedTextColor (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_DeletedTextColor (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_RevisedLinesColor (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_RevisedLinesColor (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_DefaultFilePath (
        /*[in]*/ enum WdDefaultFilePath Path,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultFilePath (
        /*[in]*/ enum WdDefaultFilePath Path,
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Overtype (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Overtype (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ReplaceSelection (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ReplaceSelection (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AllowDragAndDrop (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowDragAndDrop (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoWordSelection (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoWordSelection (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_INSKeyForPaste (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_INSKeyForPaste (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SmartCutPaste (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SmartCutPaste (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_TabIndentKey (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_TabIndentKey (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PictureEditor (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_PictureEditor (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_AnimateScreenMovements (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AnimateScreenMovements (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_VirusProtection (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_VirusProtection (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RevisedPropertiesMark (
        /*[out,retval]*/ enum WdRevisedPropertiesMark * prop ) = 0;
      virtual HRESULT __stdcall put_RevisedPropertiesMark (
        /*[in]*/ enum WdRevisedPropertiesMark prop ) = 0;
      virtual HRESULT __stdcall get_RevisedPropertiesColor (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_RevisedPropertiesColor (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_SnapToGrid (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SnapToGrid (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SnapToShapes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SnapToShapes (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_GridDistanceHorizontal (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_GridDistanceHorizontal (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_GridDistanceVertical (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_GridDistanceVertical (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_GridOriginHorizontal (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_GridOriginHorizontal (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_GridOriginVertical (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_GridOriginVertical (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_InlineConversion (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_InlineConversion (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_IMEAutomaticControl (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IMEAutomaticControl (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatApplyHeadings (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatApplyHeadings (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatApplyLists (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatApplyLists (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatApplyBulletedLists (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatApplyBulletedLists (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatApplyOtherParas (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatApplyOtherParas (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatReplaceQuotes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatReplaceQuotes (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatReplaceSymbols (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatReplaceSymbols (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatReplaceOrdinals (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatReplaceOrdinals (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatReplaceFractions (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatReplaceFractions (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatReplacePlainTextEmphasis (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatReplacePlainTextEmphasis (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatPreserveStyles (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatPreserveStyles (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyHeadings (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyHeadings (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyBorders (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyBorders (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyBulletedLists (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyBulletedLists (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyNumberedLists (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyNumberedLists (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplaceQuotes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplaceQuotes (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplaceSymbols (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplaceSymbols (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplaceOrdinals (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplaceOrdinals (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplaceFractions (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplaceFractions (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplacePlainTextEmphasis (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplacePlainTextEmphasis (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeFormatListItemBeginning (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeFormatListItemBeginning (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeDefineStyles (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeDefineStyles (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatPlainTextWordMail (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatPlainTextWordMail (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplaceHyperlinks (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplaceHyperlinks (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatReplaceHyperlinks (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatReplaceHyperlinks (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DefaultHighlightColorIndex (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultHighlightColorIndex (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_DefaultBorderLineStyle (
        /*[out,retval]*/ enum WdLineStyle * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultBorderLineStyle (
        /*[in]*/ enum WdLineStyle prop ) = 0;
      virtual HRESULT __stdcall get_CheckSpellingAsYouType (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CheckSpellingAsYouType (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CheckGrammarAsYouType (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CheckGrammarAsYouType (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_IgnoreInternetAndFileAddresses (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IgnoreInternetAndFileAddresses (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowReadabilityStatistics (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowReadabilityStatistics (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_IgnoreUppercase (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IgnoreUppercase (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_IgnoreMixedDigits (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IgnoreMixedDigits (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SuggestFromMainDictionaryOnly (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SuggestFromMainDictionaryOnly (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SuggestSpellingCorrections (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SuggestSpellingCorrections (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DefaultBorderLineWidth (
        /*[out,retval]*/ enum WdLineWidth * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultBorderLineWidth (
        /*[in]*/ enum WdLineWidth prop ) = 0;
      virtual HRESULT __stdcall get_CheckGrammarWithSpelling (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CheckGrammarWithSpelling (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DefaultOpenFormat (
        /*[out,retval]*/ enum WdOpenFormat * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultOpenFormat (
        /*[in]*/ enum WdOpenFormat prop ) = 0;
      virtual HRESULT __stdcall get_PrintDraft (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintDraft (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintReverse (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintReverse (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MapPaperSize (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MapPaperSize (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyTables (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyTables (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatApplyFirstIndents (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatApplyFirstIndents (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatMatchParentheses (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatMatchParentheses (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatReplaceFarEastDashes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatReplaceFarEastDashes (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatDeleteAutoSpaces (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatDeleteAutoSpaces (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyFirstIndents (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyFirstIndents (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyDates (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyDates (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyClosings (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyClosings (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeMatchParentheses (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeMatchParentheses (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplaceFarEastDashes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplaceFarEastDashes (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeDeleteAutoSpaces (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeDeleteAutoSpaces (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeInsertClosings (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeInsertClosings (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeAutoLetterWizard (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeAutoLetterWizard (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeInsertOvers (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeInsertOvers (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DisplayGridLines (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayGridLines (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyCase (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyCase (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyByte (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyByte (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyHiragana (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyHiragana (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzySmallKana (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzySmallKana (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyDash (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyDash (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyIterationMark (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyIterationMark (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyKanji (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyKanji (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyOldKana (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyOldKana (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyProlongedSoundMark (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyProlongedSoundMark (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyDZ (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyDZ (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyBV (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyBV (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyTC (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyTC (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyHF (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyHF (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyZJ (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyZJ (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyAY (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyAY (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyKiKu (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyKiKu (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzyPunctuation (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzyPunctuation (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzySpace (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzySpace (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ApplyFarEastFontsToAscii (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ApplyFarEastFontsToAscii (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ConvertHighAnsiToFarEast (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ConvertHighAnsiToFarEast (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintOddPagesInAscendingOrder (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintOddPagesInAscendingOrder (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintEvenPagesInAscendingOrder (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintEvenPagesInAscendingOrder (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DefaultBorderColorIndex (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultBorderColorIndex (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_EnableMisusedWordsDictionary (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EnableMisusedWordsDictionary (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AllowCombinedAuxiliaryForms (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowCombinedAuxiliaryForms (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HangulHanjaFastConversion (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HangulHanjaFastConversion (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CheckHangulEndings (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CheckHangulEndings (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_EnableHangulHanjaRecentOrdering (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EnableHangulHanjaRecentOrdering (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MultipleWordConversionsMode (
        /*[out,retval]*/ enum WdMultipleWordConversionsMode * prop ) = 0;
      virtual HRESULT __stdcall put_MultipleWordConversionsMode (
        /*[in]*/ enum WdMultipleWordConversionsMode prop ) = 0;
      virtual HRESULT __stdcall raw_SetWPHelpOptions (
        /*[in]*/ VARIANT * CommandKeyHelp = &vtMissing,
        /*[in]*/ VARIANT * DocNavigationKeys = &vtMissing,
        /*[in]*/ VARIANT * MouseSimulation = &vtMissing,
        /*[in]*/ VARIANT * DemoGuidance = &vtMissing,
        /*[in]*/ VARIANT * DemoSpeed = &vtMissing,
        /*[in]*/ VARIANT * HelpType = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_DefaultBorderColor (
        /*[out,retval]*/ enum WdColor * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultBorderColor (
        /*[in]*/ enum WdColor prop ) = 0;
      virtual HRESULT __stdcall get_AllowPixelUnits (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowPixelUnits (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UseCharacterUnit (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseCharacterUnit (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AllowCompoundNounProcessing (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowCompoundNounProcessing (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoKeyboardSwitching (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoKeyboardSwitching (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DocumentViewDirection (
        /*[out,retval]*/ enum WdDocumentViewDirection * prop ) = 0;
      virtual HRESULT __stdcall put_DocumentViewDirection (
        /*[in]*/ enum WdDocumentViewDirection prop ) = 0;
      virtual HRESULT __stdcall get_ArabicNumeral (
        /*[out,retval]*/ enum WdArabicNumeral * prop ) = 0;
      virtual HRESULT __stdcall put_ArabicNumeral (
        /*[in]*/ enum WdArabicNumeral prop ) = 0;
      virtual HRESULT __stdcall get_MonthNames (
        /*[out,retval]*/ enum WdMonthNames * prop ) = 0;
      virtual HRESULT __stdcall put_MonthNames (
        /*[in]*/ enum WdMonthNames prop ) = 0;
      virtual HRESULT __stdcall get_CursorMovement (
        /*[out,retval]*/ enum WdCursorMovement * prop ) = 0;
      virtual HRESULT __stdcall put_CursorMovement (
        /*[in]*/ enum WdCursorMovement prop ) = 0;
      virtual HRESULT __stdcall get_VisualSelection (
        /*[out,retval]*/ enum WdVisualSelection * prop ) = 0;
      virtual HRESULT __stdcall put_VisualSelection (
        /*[in]*/ enum WdVisualSelection prop ) = 0;
      virtual HRESULT __stdcall get_ShowDiacritics (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowDiacritics (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowControlCharacters (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowControlCharacters (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AddControlCharacters (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AddControlCharacters (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AddBiDirectionalMarksWhenSavingTextFile (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AddBiDirectionalMarksWhenSavingTextFile (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_StrictInitialAlefHamza (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_StrictInitialAlefHamza (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_StrictFinalYaa (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_StrictFinalYaa (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HebrewMode (
        /*[out,retval]*/ enum WdHebSpellStart * prop ) = 0;
      virtual HRESULT __stdcall put_HebrewMode (
        /*[in]*/ enum WdHebSpellStart prop ) = 0;
      virtual HRESULT __stdcall get_ArabicMode (
        /*[out,retval]*/ enum WdAraSpeller * prop ) = 0;
      virtual HRESULT __stdcall put_ArabicMode (
        /*[in]*/ enum WdAraSpeller prop ) = 0;
      virtual HRESULT __stdcall get_AllowClickAndTypeMouse (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowClickAndTypeMouse (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UseGermanSpellingReform (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseGermanSpellingReform (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_InterpretHighAnsi (
        /*[out,retval]*/ enum WdHighAnsiText * prop ) = 0;
      virtual HRESULT __stdcall put_InterpretHighAnsi (
        /*[in]*/ enum WdHighAnsiText prop ) = 0;
      virtual HRESULT __stdcall get_AddHebDoubleQuote (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AddHebDoubleQuote (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UseDiffDiacColor (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseDiffDiacColor (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DiacriticColorVal (
        /*[out,retval]*/ enum WdColor * prop ) = 0;
      virtual HRESULT __stdcall put_DiacriticColorVal (
        /*[in]*/ enum WdColor prop ) = 0;
      virtual HRESULT __stdcall get_OptimizeForWord97byDefault (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OptimizeForWord97byDefault (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_LocalNetworkFile (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_LocalNetworkFile (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_TypeNReplace (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_TypeNReplace (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SequenceCheck (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SequenceCheck (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_BackgroundOpen (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_BackgroundOpen (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DisableFeaturesbyDefault (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisableFeaturesbyDefault (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PasteAdjustWordSpacing (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PasteAdjustWordSpacing (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PasteAdjustParagraphSpacing (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PasteAdjustParagraphSpacing (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PasteAdjustTableFormatting (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PasteAdjustTableFormatting (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PasteSmartStyleBehavior (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PasteSmartStyleBehavior (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PasteMergeFromPPT (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PasteMergeFromPPT (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PasteMergeFromXL (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PasteMergeFromXL (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CtrlClickHyperlinkToOpen (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CtrlClickHyperlinkToOpen (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PictureWrapType (
        /*[out,retval]*/ enum WdWrapTypeMerged * prop ) = 0;
      virtual HRESULT __stdcall put_PictureWrapType (
        /*[in]*/ enum WdWrapTypeMerged prop ) = 0;
      virtual HRESULT __stdcall get_DisableFeaturesIntroducedAfterbyDefault (
        /*[out,retval]*/ enum WdDisableFeaturesIntroducedAfter * prop ) = 0;
      virtual HRESULT __stdcall put_DisableFeaturesIntroducedAfterbyDefault (
        /*[in]*/ enum WdDisableFeaturesIntroducedAfter prop ) = 0;
      virtual HRESULT __stdcall get_PasteSmartCutPaste (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PasteSmartCutPaste (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DisplayPasteOptions (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayPasteOptions (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PromptUpdateStyle (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PromptUpdateStyle (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DefaultEPostageApp (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultEPostageApp (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_DefaultTextEncoding (
        /*[out,retval]*/ enum Office::MsoEncoding * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultTextEncoding (
        /*[in]*/ enum Office::MsoEncoding prop ) = 0;
      virtual HRESULT __stdcall get_LabelSmartTags (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_LabelSmartTags (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DisplaySmartTagButtons (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplaySmartTagButtons (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_WarnBeforeSavingPrintingSendingMarkup (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_WarnBeforeSavingPrintingSendingMarkup (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_StoreRSIDOnSave (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_StoreRSIDOnSave (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowFormatError (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowFormatError (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FormatScanning (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FormatScanning (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PasteMergeLists (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PasteMergeLists (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoCreateNewDrawings (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoCreateNewDrawings (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SmartParaSelection (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SmartParaSelection (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RevisionsBalloonPrintOrientation (
        /*[out,retval]*/ enum WdRevisionsBalloonPrintOrientation * prop ) = 0;
      virtual HRESULT __stdcall put_RevisionsBalloonPrintOrientation (
        /*[in]*/ enum WdRevisionsBalloonPrintOrientation prop ) = 0;
      virtual HRESULT __stdcall get_CommentsColor (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_CommentsColor (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_PrintXMLTag (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintXMLTag (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintBackgrounds (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintBackgrounds (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AllowReadingMode (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowReadingMode (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowMarkupOpenSave (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowMarkupOpenSave (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SmartCursoring (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SmartCursoring (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MoveToTextMark (
        /*[out,retval]*/ enum WdMoveToTextMark * prop ) = 0;
      virtual HRESULT __stdcall put_MoveToTextMark (
        /*[in]*/ enum WdMoveToTextMark prop ) = 0;
      virtual HRESULT __stdcall get_MoveFromTextMark (
        /*[out,retval]*/ enum WdMoveFromTextMark * prop ) = 0;
      virtual HRESULT __stdcall put_MoveFromTextMark (
        /*[in]*/ enum WdMoveFromTextMark prop ) = 0;
      virtual HRESULT __stdcall get_BibliographyStyle (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_BibliographyStyle (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_BibliographySort (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_BibliographySort (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_InsertedCellColor (
        /*[out,retval]*/ enum WdCellColor * prop ) = 0;
      virtual HRESULT __stdcall put_InsertedCellColor (
        /*[in]*/ enum WdCellColor prop ) = 0;
      virtual HRESULT __stdcall get_DeletedCellColor (
        /*[out,retval]*/ enum WdCellColor * prop ) = 0;
      virtual HRESULT __stdcall put_DeletedCellColor (
        /*[in]*/ enum WdCellColor prop ) = 0;
      virtual HRESULT __stdcall get_MergedCellColor (
        /*[out,retval]*/ enum WdCellColor * prop ) = 0;
      virtual HRESULT __stdcall put_MergedCellColor (
        /*[in]*/ enum WdCellColor prop ) = 0;
      virtual HRESULT __stdcall get_SplitCellColor (
        /*[out,retval]*/ enum WdCellColor * prop ) = 0;
      virtual HRESULT __stdcall put_SplitCellColor (
        /*[in]*/ enum WdCellColor prop ) = 0;
      virtual HRESULT __stdcall get_ShowSelectionFloaties (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowSelectionFloaties (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowMenuFloaties (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowMenuFloaties (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowDevTools (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowDevTools (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_EnableLivePreview (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EnableLivePreview (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_OMathAutoBuildUp (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OMathAutoBuildUp (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AlwaysUseClearType (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AlwaysUseClearType (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PasteFormatWithinDocument (
        /*[out,retval]*/ enum WdPasteOptions * prop ) = 0;
      virtual HRESULT __stdcall put_PasteFormatWithinDocument (
        /*[in]*/ enum WdPasteOptions prop ) = 0;
      virtual HRESULT __stdcall get_PasteFormatBetweenDocuments (
        /*[out,retval]*/ enum WdPasteOptions * prop ) = 0;
      virtual HRESULT __stdcall put_PasteFormatBetweenDocuments (
        /*[in]*/ enum WdPasteOptions prop ) = 0;
      virtual HRESULT __stdcall get_PasteFormatBetweenStyledDocuments (
        /*[out,retval]*/ enum WdPasteOptions * prop ) = 0;
      virtual HRESULT __stdcall put_PasteFormatBetweenStyledDocuments (
        /*[in]*/ enum WdPasteOptions prop ) = 0;
      virtual HRESULT __stdcall get_PasteFormatFromExternalSource (
        /*[out,retval]*/ enum WdPasteOptions * prop ) = 0;
      virtual HRESULT __stdcall put_PasteFormatFromExternalSource (
        /*[in]*/ enum WdPasteOptions prop ) = 0;
      virtual HRESULT __stdcall get_PasteOptionKeepBulletsAndNumbers (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PasteOptionKeepBulletsAndNumbers (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_INSKeyForOvertype (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_INSKeyForOvertype (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RepeatWord (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RepeatWord (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FrenchReform (
        /*[out,retval]*/ enum WdFrenchSpeller * prop ) = 0;
      virtual HRESULT __stdcall put_FrenchReform (
        /*[in]*/ enum WdFrenchSpeller prop ) = 0;
      virtual HRESULT __stdcall get_ContextualSpeller (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ContextualSpeller (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MoveToTextColor (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_MoveToTextColor (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_MoveFromTextColor (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_MoveFromTextColor (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_OMathCopyLF (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OMathCopyLF (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UseNormalStyleForList (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseNormalStyleForList (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AllowOpenInDraftView (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowOpenInDraftView (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_EnableLegacyIMEMode (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EnableLegacyIMEMode (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DoNotPromptForConvert (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DoNotPromptForConvert (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrecisePositioning (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrecisePositioning (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

enum WdDocPartInsertOptions
{
    wdInsertContent = 0,
    wdInsertParagraph = 1,
    wdInsertPage = 2
};

enum WdContentControlDateStorageFormat
{
    wdContentControlDateStorageText = 0,
    wdContentControlDateStorageDate = 1,
    wdContentControlDateStorageDateTime = 2
};

struct __declspec(uuid("00020970-0000-0000-c000-000000000046"))
_Application : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetWordBasic))
    IDispatchPtr WordBasic;
    __declspec(property(get=GetWindows))
    WindowsPtr Windows;
    __declspec(property(get=GetActiveDocument))
    _DocumentPtr ActiveDocument;
    __declspec(property(get=GetActiveWindow))
    WindowPtr ActiveWindow;
    __declspec(property(get=GetSelection))
    SelectionPtr Selection;
    __declspec(property(get=GetDocuments))
    DocumentsPtr Documents;
    __declspec(property(get=GetRecentFiles))
    RecentFilesPtr RecentFiles;
    __declspec(property(get=GetNormalTemplate))
    TemplatePtr NormalTemplate;
    __declspec(property(get=GetSystem))
    SystemPtr System;
    __declspec(property(get=GetAutoCorrect))
    AutoCorrectPtr AutoCorrect;
    __declspec(property(get=GetFontNames))
    FontNamesPtr FontNames;
    __declspec(property(get=GetLandscapeFontNames))
    FontNamesPtr LandscapeFontNames;
    __declspec(property(get=GetPortraitFontNames))
    FontNamesPtr PortraitFontNames;
    __declspec(property(get=GetLanguages))
    LanguagesPtr Languages;
    __declspec(property(get=GetAssistant))
    Office::AssistantPtr Assistant;
    __declspec(property(get=GetBrowser))
    BrowserPtr Browser;
    __declspec(property(get=GetFileConverters))
    FileConvertersPtr FileConverters;
    __declspec(property(get=GetMailingLabel))
    MailingLabelPtr MailingLabel;
    __declspec(property(get=GetDialogs))
    DialogsPtr Dialogs;
    __declspec(property(get=GetCaptionLabels))
    CaptionLabelsPtr CaptionLabels;
    __declspec(property(get=GetAutoCaptions))
    AutoCaptionsPtr AutoCaptions;
    __declspec(property(get=GetAddIns))
    AddInsPtr AddIns;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetVersion))
    _bstr_t Version;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetScreenUpdating,put=PutScreenUpdating))
    VARIANT_BOOL ScreenUpdating;
    __declspec(property(get=GetPrintPreview,put=PutPrintPreview))
    VARIANT_BOOL PrintPreview;
    __declspec(property(get=GetTasks))
    TasksPtr Tasks;
    __declspec(property(get=GetDisplayStatusBar,put=PutDisplayStatusBar))
    VARIANT_BOOL DisplayStatusBar;
    __declspec(property(get=GetSpecialMode))
    VARIANT_BOOL SpecialMode;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetUsableWidth))
    long UsableWidth;
    __declspec(property(get=GetUsableHeight))
    long UsableHeight;
    __declspec(property(get=GetLanguageSettings))
    Office::LanguageSettingsPtr LanguageSettings;
    __declspec(property(get=GetMathCoprocessorAvailable))
    VARIANT_BOOL MathCoprocessorAvailable;
    __declspec(property(get=GetMouseAvailable))
    VARIANT_BOOL MouseAvailable;
    __declspec(property(get=GetDummy1))
    VARIANT_BOOL Dummy1;
    __declspec(property(get=GetAnswerWizard))
    Office::AnswerWizardPtr AnswerWizard;
    __declspec(property(get=GetInternational))
    _variant_t International[];
    __declspec(property(get=GetBuild))
    _bstr_t Build;
    __declspec(property(get=GetCapsLock))
    VARIANT_BOOL CapsLock;
    __declspec(property(get=GetNumLock))
    VARIANT_BOOL NumLock;
    __declspec(property(get=GetFeatureInstall,put=PutFeatureInstall))
    enum Office::MsoFeatureInstall FeatureInstall;
    __declspec(property(get=GetUserName,put=PutUserName))
    _bstr_t UserName;
    __declspec(property(get=GetAutomationSecurity,put=PutAutomationSecurity))
    enum Office::MsoAutomationSecurity AutomationSecurity;
    __declspec(property(get=GetFileDialog))
    Office::FileDialogPtr FileDialog[];
    __declspec(property(get=GetEmailTemplate,put=PutEmailTemplate))
    _bstr_t EmailTemplate;
    __declspec(property(get=GetShowWindowsInTaskbar,put=PutShowWindowsInTaskbar))
    VARIANT_BOOL ShowWindowsInTaskbar;
    __declspec(property(get=GetUserInitials,put=PutUserInitials))
    _bstr_t UserInitials;
    __declspec(property(get=GetUserAddress,put=PutUserAddress))
    _bstr_t UserAddress;
    __declspec(property(get=GetMacroContainer))
    IDispatchPtr MacroContainer;
    __declspec(property(get=GetDisplayRecentFiles,put=PutDisplayRecentFiles))
    VARIANT_BOOL DisplayRecentFiles;
    __declspec(property(get=GetCommandBars))
    Office::_CommandBarsPtr CommandBars;
    __declspec(property(get=GetSynonymInfo))
    SynonymInfoPtr SynonymInfo[][];
    __declspec(property(get=GetVBE))
    VBE6::VBEPtr VBE;
    __declspec(property(get=GetDefaultSaveFormat,put=PutDefaultSaveFormat))
    _bstr_t DefaultSaveFormat;
    __declspec(property(get=GetListGalleries))
    ListGalleriesPtr ListGalleries;
    __declspec(property(get=GetActivePrinter,put=PutActivePrinter))
    _bstr_t ActivePrinter;
    __declspec(property(get=GetTemplates))
    TemplatesPtr Templates;
    __declspec(property(get=GetCustomizationContext,put=PutCustomizationContext))
    IDispatchPtr CustomizationContext;
    __declspec(property(get=GetKeyBindings))
    KeyBindingsPtr KeyBindings;
    __declspec(property(get=GetKeysBoundTo))
    KeysBoundToPtr KeysBoundTo[][][];
    __declspec(property(get=GetFindKey))
    KeyBindingPtr FindKey[][];
    __declspec(property(get=GetNewDocument))
    Office::NewFilePtr NewDocument;
    __declspec(property(get=GetShowStartupDialog,put=PutShowStartupDialog))
    VARIANT_BOOL ShowStartupDialog;
    __declspec(property(get=GetAutoCorrectEmail))
    AutoCorrectPtr AutoCorrectEmail;
    __declspec(property(get=GetTaskPanes))
    TaskPanesPtr TaskPanes;
    __declspec(property(get=GetDefaultLegalBlackline,put=PutDefaultLegalBlackline))
    VARIANT_BOOL DefaultLegalBlackline;
    __declspec(property(get=GetSmartTagRecognizers))
    SmartTagRecognizersPtr SmartTagRecognizers;
    __declspec(property(get=GetSmartTagTypes))
    SmartTagTypesPtr SmartTagTypes;
    __declspec(property(get=GetXMLNamespaces))
    XMLNamespacesPtr XMLNamespaces;
    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetPath))
    _bstr_t Path;
    __declspec(property(get=GetDisplayScrollBars,put=PutDisplayScrollBars))
    VARIANT_BOOL DisplayScrollBars;
    __declspec(property(get=GetStartupPath,put=PutStartupPath))
    _bstr_t StartupPath;
    __declspec(property(get=GetArbitraryXMLSupportAvailable))
    VARIANT_BOOL ArbitraryXMLSupportAvailable;
    __declspec(property(get=GetBackgroundSavingStatus))
    long BackgroundSavingStatus;
    __declspec(property(get=GetBackgroundPrintingStatus))
    long BackgroundPrintingStatus;
    __declspec(property(get=GetLeft,put=PutLeft))
    long Left;
    __declspec(property(get=GetTop,put=PutTop))
    long Top;
    __declspec(property(get=GetWidth,put=PutWidth))
    long Width;
    __declspec(property(get=GetHeight,put=PutHeight))
    long Height;
    __declspec(property(get=GetWindowState,put=PutWindowState))
    enum WdWindowState WindowState;
    __declspec(property(get=GetDisplayAutoCompleteTips,put=PutDisplayAutoCompleteTips))
    VARIANT_BOOL DisplayAutoCompleteTips;
    __declspec(property(get=GetOptions))
    OptionsPtr Options;
    __declspec(property(get=GetDisplayAlerts,put=PutDisplayAlerts))
    enum WdAlertLevel DisplayAlerts;
    __declspec(property(get=GetCustomDictionaries))
    DictionariesPtr CustomDictionaries;
    __declspec(property(get=GetPathSeparator))
    _bstr_t PathSeparator;
    __declspec(property(put=PutStatusBar))
    _bstr_t StatusBar;
    __declspec(property(get=GetMAPIAvailable))
    VARIANT_BOOL MAPIAvailable;
    __declspec(property(get=GetDisplayScreenTips,put=PutDisplayScreenTips))
    VARIANT_BOOL DisplayScreenTips;
    __declspec(property(get=GetEnableCancelKey,put=PutEnableCancelKey))
    enum WdEnableCancelKey EnableCancelKey;
    __declspec(property(get=GetUserControl))
    VARIANT_BOOL UserControl;
    __declspec(property(get=GetBuildFull))
    _bstr_t BuildFull;
    __declspec(property(get=GetFileSearch))
    Office::FileSearchPtr FileSearch;
    __declspec(property(get=GetMailSystem))
    enum WdMailSystem MailSystem;
    __declspec(property(get=GetDefaultTableSeparator,put=PutDefaultTableSeparator))
    _bstr_t DefaultTableSeparator;
    __declspec(property(get=GetShowVisualBasicEditor,put=PutShowVisualBasicEditor))
    VARIANT_BOOL ShowVisualBasicEditor;
    __declspec(property(get=GetBuildFeatureCrew))
    _bstr_t BuildFeatureCrew;
    __declspec(property(get=GetBrowseExtraFileTypes,put=PutBrowseExtraFileTypes))
    _bstr_t BrowseExtraFileTypes;
    __declspec(property(get=GetIsObjectValid))
    VARIANT_BOOL IsObjectValid[];
    __declspec(property(get=GetHangulHanjaDictionaries))
    HangulHanjaConversionDictionariesPtr HangulHanjaDictionaries;
    __declspec(property(get=GetCOMAddIns))
    Office::COMAddInsPtr COMAddIns;
    __declspec(property(get=GetCheckLanguage,put=PutCheckLanguage))
    VARIANT_BOOL CheckLanguage;
    __declspec(property(get=GetBibliography))
    BibliographyPtr Bibliography;
    __declspec(property(get=GetShowStylePreviews,put=PutShowStylePreviews))
    VARIANT_BOOL ShowStylePreviews;
    __declspec(property(get=GetRestrictLinkedStyles,put=PutRestrictLinkedStyles))
    VARIANT_BOOL RestrictLinkedStyles;
    __declspec(property(get=GetOMathAutoCorrect))
    OMathAutoCorrectPtr OMathAutoCorrect;
    __declspec(property(get=GetDisplayDocumentInformationPanel,put=PutDisplayDocumentInformationPanel))
    VARIANT_BOOL DisplayDocumentInformationPanel;
    __declspec(property(get=GetAssistance))
    Office::IAssistancePtr Assistance;
    __declspec(property(get=GetOpenAttachmentsInFullScreen,put=PutOpenAttachmentsInFullScreen))
    VARIANT_BOOL OpenAttachmentsInFullScreen;
    __declspec(property(get=GetActiveEncryptionSession))
    long ActiveEncryptionSession;
    __declspec(property(get=GetDontResetInsertionPointProperties,put=PutDontResetInsertionPointProperties))
    VARIANT_BOOL DontResetInsertionPointProperties;
    __declspec(property(get=GetMailMessage))
    MailMessagePtr MailMessage;
    __declspec(property(get=GetFocusInMailHeader))
    VARIANT_BOOL FocusInMailHeader;
    __declspec(property(get=GetEmailOptions))
    EmailOptionsPtr EmailOptions;
    __declspec(property(get=GetLanguage))
    enum Office::MsoLanguageID Language;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    DocumentsPtr GetDocuments ( );
    WindowsPtr GetWindows ( );
    _DocumentPtr GetActiveDocument ( );
    WindowPtr GetActiveWindow ( );
    SelectionPtr GetSelection ( );
    IDispatchPtr GetWordBasic ( );
    RecentFilesPtr GetRecentFiles ( );
    TemplatePtr GetNormalTemplate ( );
    SystemPtr GetSystem ( );
    AutoCorrectPtr GetAutoCorrect ( );
    FontNamesPtr GetFontNames ( );
    FontNamesPtr GetLandscapeFontNames ( );
    FontNamesPtr GetPortraitFontNames ( );
    LanguagesPtr GetLanguages ( );
    Office::AssistantPtr GetAssistant ( );
    BrowserPtr GetBrowser ( );
    FileConvertersPtr GetFileConverters ( );
    MailingLabelPtr GetMailingLabel ( );
    DialogsPtr GetDialogs ( );
    CaptionLabelsPtr GetCaptionLabels ( );
    AutoCaptionsPtr GetAutoCaptions ( );
    AddInsPtr GetAddIns ( );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL prop );
    _bstr_t GetVersion ( );
    VARIANT_BOOL GetScreenUpdating ( );
    void PutScreenUpdating (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetPrintPreview ( );
    void PutPrintPreview (
        VARIANT_BOOL prop );
    TasksPtr GetTasks ( );
    VARIANT_BOOL GetDisplayStatusBar ( );
    void PutDisplayStatusBar (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetSpecialMode ( );
    long GetUsableWidth ( );
    long GetUsableHeight ( );
    VARIANT_BOOL GetMathCoprocessorAvailable ( );
    VARIANT_BOOL GetMouseAvailable ( );
    _variant_t GetInternational (
        enum WdInternationalIndex Index );
    _bstr_t GetBuild ( );
    VARIANT_BOOL GetCapsLock ( );
    VARIANT_BOOL GetNumLock ( );
    _bstr_t GetUserName ( );
    void PutUserName (
        _bstr_t prop );
    _bstr_t GetUserInitials ( );
    void PutUserInitials (
        _bstr_t prop );
    _bstr_t GetUserAddress ( );
    void PutUserAddress (
        _bstr_t prop );
    IDispatchPtr GetMacroContainer ( );
    VARIANT_BOOL GetDisplayRecentFiles ( );
    void PutDisplayRecentFiles (
        VARIANT_BOOL prop );
    Office::_CommandBarsPtr GetCommandBars ( );
    SynonymInfoPtr GetSynonymInfo (
        _bstr_t Word,
        VARIANT * LanguageID = &vtMissing );
    VBE6::VBEPtr GetVBE ( );
    _bstr_t GetDefaultSaveFormat ( );
    void PutDefaultSaveFormat (
        _bstr_t prop );
    ListGalleriesPtr GetListGalleries ( );
    _bstr_t GetActivePrinter ( );
    void PutActivePrinter (
        _bstr_t prop );
    TemplatesPtr GetTemplates ( );
    IDispatchPtr GetCustomizationContext ( );
    void PutCustomizationContext (
        IDispatch * prop );
    KeyBindingsPtr GetKeyBindings ( );
    KeysBoundToPtr GetKeysBoundTo (
        enum WdKeyCategory KeyCategory,
        _bstr_t Command,
        VARIANT * CommandParameter = &vtMissing );
    KeyBindingPtr GetFindKey (
        long KeyCode,
        VARIANT * KeyCode2 = &vtMissing );
    _bstr_t GetCaption ( );
    void PutCaption (
        _bstr_t prop );
    _bstr_t GetPath ( );
    VARIANT_BOOL GetDisplayScrollBars ( );
    void PutDisplayScrollBars (
        VARIANT_BOOL prop );
    _bstr_t GetStartupPath ( );
    void PutStartupPath (
        _bstr_t prop );
    long GetBackgroundSavingStatus ( );
    long GetBackgroundPrintingStatus ( );
    long GetLeft ( );
    void PutLeft (
        long prop );
    long GetTop ( );
    void PutTop (
        long prop );
    long GetWidth ( );
    void PutWidth (
        long prop );
    long GetHeight ( );
    void PutHeight (
        long prop );
    enum WdWindowState GetWindowState ( );
    void PutWindowState (
        enum WdWindowState prop );
    VARIANT_BOOL GetDisplayAutoCompleteTips ( );
    void PutDisplayAutoCompleteTips (
        VARIANT_BOOL prop );
    OptionsPtr GetOptions ( );
    enum WdAlertLevel GetDisplayAlerts ( );
    void PutDisplayAlerts (
        enum WdAlertLevel prop );
    DictionariesPtr GetCustomDictionaries ( );
    _bstr_t GetPathSeparator ( );
    void PutStatusBar (
        _bstr_t _arg1 );
    VARIANT_BOOL GetMAPIAvailable ( );
    VARIANT_BOOL GetDisplayScreenTips ( );
    void PutDisplayScreenTips (
        VARIANT_BOOL prop );
    enum WdEnableCancelKey GetEnableCancelKey ( );
    void PutEnableCancelKey (
        enum WdEnableCancelKey prop );
    VARIANT_BOOL GetUserControl ( );
    Office::FileSearchPtr GetFileSearch ( );
    enum WdMailSystem GetMailSystem ( );
    _bstr_t GetDefaultTableSeparator ( );
    void PutDefaultTableSeparator (
        _bstr_t prop );
    VARIANT_BOOL GetShowVisualBasicEditor ( );
    void PutShowVisualBasicEditor (
        VARIANT_BOOL prop );
    _bstr_t GetBrowseExtraFileTypes ( );
    void PutBrowseExtraFileTypes (
        _bstr_t prop );
    VARIANT_BOOL GetIsObjectValid (
        IDispatch * Object );
    HangulHanjaConversionDictionariesPtr GetHangulHanjaDictionaries ( );
    MailMessagePtr GetMailMessage ( );
    VARIANT_BOOL GetFocusInMailHeader ( );
    HRESULT Quit (
        VARIANT * SaveChanges = &vtMissing,
        VARIANT * OriginalFormat = &vtMissing,
        VARIANT * RouteDocument = &vtMissing );
    HRESULT ScreenRefresh ( );
    HRESULT PrintOutOld (
        VARIANT * Background = &vtMissing,
        VARIANT * Append = &vtMissing,
        VARIANT * Range = &vtMissing,
        VARIANT * OutputFileName = &vtMissing,
        VARIANT * From = &vtMissing,
        VARIANT * To = &vtMissing,
        VARIANT * Item = &vtMissing,
        VARIANT * Copies = &vtMissing,
        VARIANT * Pages = &vtMissing,
        VARIANT * PageType = &vtMissing,
        VARIANT * PrintToFile = &vtMissing,
        VARIANT * Collate = &vtMissing,
        VARIANT * FileName = &vtMissing,
        VARIANT * ActivePrinterMacGX = &vtMissing,
        VARIANT * ManualDuplexPrint = &vtMissing );
    HRESULT LookupNameProperties (
        _bstr_t Name );
    HRESULT SubstituteFont (
        _bstr_t UnavailableFont,
        _bstr_t SubstituteFont );
    VARIANT_BOOL Repeat (
        VARIANT * Times = &vtMissing );
    HRESULT DDEExecute (
        long Channel,
        _bstr_t Command );
    long DDEInitiate (
        _bstr_t App,
        _bstr_t Topic );
    HRESULT DDEPoke (
        long Channel,
        _bstr_t Item,
        _bstr_t Data );
    _bstr_t DDERequest (
        long Channel,
        _bstr_t Item );
    HRESULT DDETerminate (
        long Channel );
    HRESULT DDETerminateAll ( );
    long BuildKeyCode (
        enum WdKey Arg1,
        VARIANT * Arg2 = &vtMissing,
        VARIANT * Arg3 = &vtMissing,
        VARIANT * Arg4 = &vtMissing );
    _bstr_t KeyString (
        long KeyCode,
        VARIANT * KeyCode2 = &vtMissing );
    HRESULT OrganizerCopy (
        _bstr_t Source,
        _bstr_t Destination,
        _bstr_t Name,
        enum WdOrganizerObject Object );
    HRESULT OrganizerDelete (
        _bstr_t Source,
        _bstr_t Name,
        enum WdOrganizerObject Object );
    HRESULT OrganizerRename (
        _bstr_t Source,
        _bstr_t Name,
        _bstr_t NewName,
        enum WdOrganizerObject Object );
    HRESULT AddAddress (
        SAFEARRAY * * TagID,
        SAFEARRAY * * Value );
    _bstr_t GetAddress (
        VARIANT * Name = &vtMissing,
        VARIANT * AddressProperties = &vtMissing,
        VARIANT * UseAutoText = &vtMissing,
        VARIANT * DisplaySelectDialog = &vtMissing,
        VARIANT * SelectDialog = &vtMissing,
        VARIANT * CheckNamesDialog = &vtMissing,
        VARIANT * RecentAddressesChoice = &vtMissing,
        VARIANT * UpdateRecentAddresses = &vtMissing );
    VARIANT_BOOL CheckGrammar (
        _bstr_t String );
    VARIANT_BOOL CheckSpelling (
        _bstr_t Word,
        VARIANT * CustomDictionary = &vtMissing,
        VARIANT * IgnoreUppercase = &vtMissing,
        VARIANT * MainDictionary = &vtMissing,
        VARIANT * CustomDictionary2 = &vtMissing,
        VARIANT * CustomDictionary3 = &vtMissing,
        VARIANT * CustomDictionary4 = &vtMissing,
        VARIANT * CustomDictionary5 = &vtMissing,
        VARIANT * CustomDictionary6 = &vtMissing,
        VARIANT * CustomDictionary7 = &vtMissing,
        VARIANT * CustomDictionary8 = &vtMissing,
        VARIANT * CustomDictionary9 = &vtMissing,
        VARIANT * CustomDictionary10 = &vtMissing );
    HRESULT ResetIgnoreAll ( );
    SpellingSuggestionsPtr GetSpellingSuggestions (
        _bstr_t Word,
        VARIANT * CustomDictionary = &vtMissing,
        VARIANT * IgnoreUppercase = &vtMissing,
        VARIANT * MainDictionary = &vtMissing,
        VARIANT * SuggestionMode = &vtMissing,
        VARIANT * CustomDictionary2 = &vtMissing,
        VARIANT * CustomDictionary3 = &vtMissing,
        VARIANT * CustomDictionary4 = &vtMissing,
        VARIANT * CustomDictionary5 = &vtMissing,
        VARIANT * CustomDictionary6 = &vtMissing,
        VARIANT * CustomDictionary7 = &vtMissing,
        VARIANT * CustomDictionary8 = &vtMissing,
        VARIANT * CustomDictionary9 = &vtMissing,
        VARIANT * CustomDictionary10 = &vtMissing );
    HRESULT GoBack ( );
    HRESULT Help (
        VARIANT * HelpType );
    HRESULT AutomaticChange ( );
    HRESULT ShowMe ( );
    HRESULT HelpTool ( );
    WindowPtr NewWindow ( );
    HRESULT ListCommands (
        VARIANT_BOOL ListAllCommands );
    HRESULT ShowClipboard ( );
    HRESULT OnTime (
        VARIANT * When,
        _bstr_t Name,
        VARIANT * Tolerance = &vtMissing );
    HRESULT NextLetter ( );
    short MountVolume (
        _bstr_t Zone,
        _bstr_t Server,
        _bstr_t Volume,
        VARIANT * User = &vtMissing,
        VARIANT * UserPassword = &vtMissing,
        VARIANT * VolumePassword = &vtMissing );
    _bstr_t CleanString (
        _bstr_t String );
    HRESULT SendFax ( );
    HRESULT ChangeFileOpenDirectory (
        _bstr_t Path );
    HRESULT RunOld (
        _bstr_t MacroName );
    HRESULT GoForward ( );
    HRESULT Move (
        long Left,
        long Top );
    HRESULT Resize (
        long Width,
        long Height );
    float InchesToPoints (
        float Inches );
    float CentimetersToPoints (
        float Centimeters );
    float MillimetersToPoints (
        float Millimeters );
    float PicasToPoints (
        float Picas );
    float LinesToPoints (
        float Lines );
    float PointsToInches (
        float Points );
    float PointsToCentimeters (
        float Points );
    float PointsToMillimeters (
        float Points );
    float PointsToPicas (
        float Points );
    float PointsToLines (
        float Points );
    HRESULT Activate ( );
    float PointsToPixels (
        float Points,
        VARIANT * fVertical = &vtMissing );
    float PixelsToPoints (
        float Pixels,
        VARIANT * fVertical = &vtMissing );
    HRESULT KeyboardLatin ( );
    HRESULT KeyboardBidi ( );
    HRESULT ToggleKeyboard ( );
    long Keyboard (
        long LangId );
    _bstr_t ProductCode ( );
    DefaultWebOptionsPtr DefaultWebOptions ( );
    HRESULT DiscussionSupport (
        VARIANT * Range,
        VARIANT * cid,
        VARIANT * piCSE );
    HRESULT SetDefaultTheme (
        _bstr_t Name,
        enum WdDocumentMedium DocumentType );
    _bstr_t GetDefaultTheme (
        enum WdDocumentMedium DocumentType );
    EmailOptionsPtr GetEmailOptions ( );
    enum Office::MsoLanguageID GetLanguage ( );
    Office::COMAddInsPtr GetCOMAddIns ( );
    VARIANT_BOOL GetCheckLanguage ( );
    void PutCheckLanguage (
        VARIANT_BOOL prop );
    Office::LanguageSettingsPtr GetLanguageSettings ( );
    VARIANT_BOOL GetDummy1 ( );
    Office::AnswerWizardPtr GetAnswerWizard ( );
    enum Office::MsoFeatureInstall GetFeatureInstall ( );
    void PutFeatureInstall (
        enum Office::MsoFeatureInstall prop );
    HRESULT PrintOut2000 (
        VARIANT * Background = &vtMissing,
        VARIANT * Append = &vtMissing,
        VARIANT * Range = &vtMissing,
        VARIANT * OutputFileName = &vtMissing,
        VARIANT * From = &vtMissing,
        VARIANT * To = &vtMissing,
        VARIANT * Item = &vtMissing,
        VARIANT * Copies = &vtMissing,
        VARIANT * Pages = &vtMissing,
        VARIANT * PageType = &vtMissing,
        VARIANT * PrintToFile = &vtMissing,
        VARIANT * Collate = &vtMissing,
        VARIANT * FileName = &vtMissing,
        VARIANT * ActivePrinterMacGX = &vtMissing,
        VARIANT * ManualDuplexPrint = &vtMissing,
        VARIANT * PrintZoomColumn = &vtMissing,
        VARIANT * PrintZoomRow = &vtMissing,
        VARIANT * PrintZoomPaperWidth = &vtMissing,
        VARIANT * PrintZoomPaperHeight = &vtMissing );
    _variant_t Run (
        _bstr_t MacroName,
        VARIANT * varg1 = &vtMissing,
        VARIANT * varg2 = &vtMissing,
        VARIANT * varg3 = &vtMissing,
        VARIANT * varg4 = &vtMissing,
        VARIANT * varg5 = &vtMissing,
        VARIANT * varg6 = &vtMissing,
        VARIANT * varg7 = &vtMissing,
        VARIANT * varg8 = &vtMissing,
        VARIANT * varg9 = &vtMissing,
        VARIANT * varg10 = &vtMissing,
        VARIANT * varg11 = &vtMissing,
        VARIANT * varg12 = &vtMissing,
        VARIANT * varg13 = &vtMissing,
        VARIANT * varg14 = &vtMissing,
        VARIANT * varg15 = &vtMissing,
        VARIANT * varg16 = &vtMissing,
        VARIANT * varg17 = &vtMissing,
        VARIANT * varg18 = &vtMissing,
        VARIANT * varg19 = &vtMissing,
        VARIANT * varg20 = &vtMissing,
        VARIANT * varg21 = &vtMissing,
        VARIANT * varg22 = &vtMissing,
        VARIANT * varg23 = &vtMissing,
        VARIANT * varg24 = &vtMissing,
        VARIANT * varg25 = &vtMissing,
        VARIANT * varg26 = &vtMissing,
        VARIANT * varg27 = &vtMissing,
        VARIANT * varg28 = &vtMissing,
        VARIANT * varg29 = &vtMissing,
        VARIANT * varg30 = &vtMissing );
    HRESULT PrintOut (
        VARIANT * Background = &vtMissing,
        VARIANT * Append = &vtMissing,
        VARIANT * Range = &vtMissing,
        VARIANT * OutputFileName = &vtMissing,
        VARIANT * From = &vtMissing,
        VARIANT * To = &vtMissing,
        VARIANT * Item = &vtMissing,
        VARIANT * Copies = &vtMissing,
        VARIANT * Pages = &vtMissing,
        VARIANT * PageType = &vtMissing,
        VARIANT * PrintToFile = &vtMissing,
        VARIANT * Collate = &vtMissing,
        VARIANT * FileName = &vtMissing,
        VARIANT * ActivePrinterMacGX = &vtMissing,
        VARIANT * ManualDuplexPrint = &vtMissing,
        VARIANT * PrintZoomColumn = &vtMissing,
        VARIANT * PrintZoomRow = &vtMissing,
        VARIANT * PrintZoomPaperWidth = &vtMissing,
        VARIANT * PrintZoomPaperHeight = &vtMissing );
    enum Office::MsoAutomationSecurity GetAutomationSecurity ( );
    void PutAutomationSecurity (
        enum Office::MsoAutomationSecurity prop );
    Office::FileDialogPtr GetFileDialog (
        enum Office::MsoFileDialogType FileDialogType );
    _bstr_t GetEmailTemplate ( );
    void PutEmailTemplate (
        _bstr_t prop );
    VARIANT_BOOL GetShowWindowsInTaskbar ( );
    void PutShowWindowsInTaskbar (
        VARIANT_BOOL prop );
    Office::NewFilePtr GetNewDocument ( );
    VARIANT_BOOL GetShowStartupDialog ( );
    void PutShowStartupDialog (
        VARIANT_BOOL prop );
    AutoCorrectPtr GetAutoCorrectEmail ( );
    TaskPanesPtr GetTaskPanes ( );
    VARIANT_BOOL GetDefaultLegalBlackline ( );
    void PutDefaultLegalBlackline (
        VARIANT_BOOL prop );
    VARIANT_BOOL Dummy2 ( );
    SmartTagRecognizersPtr GetSmartTagRecognizers ( );
    SmartTagTypesPtr GetSmartTagTypes ( );
    XMLNamespacesPtr GetXMLNamespaces ( );
    HRESULT PutFocusInMailHeader ( );
    VARIANT_BOOL GetArbitraryXMLSupportAvailable ( );
    _bstr_t GetBuildFull ( );
    _bstr_t GetBuildFeatureCrew ( );
    HRESULT LoadMasterList (
        _bstr_t FileName );
    _DocumentPtr CompareDocuments (
        struct _Document * OriginalDocument,
        struct _Document * RevisedDocument,
        enum WdCompareDestination Destination,
        enum WdGranularity Granularity,
        VARIANT_BOOL CompareFormatting,
        VARIANT_BOOL CompareCaseChanges,
        VARIANT_BOOL CompareWhitespace,
        VARIANT_BOOL CompareTables,
        VARIANT_BOOL CompareHeaders,
        VARIANT_BOOL CompareFootnotes,
        VARIANT_BOOL CompareTextboxes,
        VARIANT_BOOL CompareFields,
        VARIANT_BOOL CompareComments,
        VARIANT_BOOL CompareMoves,
        _bstr_t RevisedAuthor,
        VARIANT_BOOL IgnoreAllComparisonWarnings );
    _DocumentPtr MergeDocuments (
        struct _Document * OriginalDocument,
        struct _Document * RevisedDocument,
        enum WdCompareDestination Destination,
        enum WdGranularity Granularity,
        VARIANT_BOOL CompareFormatting,
        VARIANT_BOOL CompareCaseChanges,
        VARIANT_BOOL CompareWhitespace,
        VARIANT_BOOL CompareTables,
        VARIANT_BOOL CompareHeaders,
        VARIANT_BOOL CompareFootnotes,
        VARIANT_BOOL CompareTextboxes,
        VARIANT_BOOL CompareFields,
        VARIANT_BOOL CompareComments,
        VARIANT_BOOL CompareMoves,
        _bstr_t OriginalAuthor,
        _bstr_t RevisedAuthor,
        enum WdMergeFormatFrom FormatFrom );
    BibliographyPtr GetBibliography ( );
    VARIANT_BOOL GetShowStylePreviews ( );
    void PutShowStylePreviews (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetRestrictLinkedStyles ( );
    void PutRestrictLinkedStyles (
        VARIANT_BOOL prop );
    OMathAutoCorrectPtr GetOMathAutoCorrect ( );
    VARIANT_BOOL GetDisplayDocumentInformationPanel ( );
    void PutDisplayDocumentInformationPanel (
        VARIANT_BOOL prop );
    Office::IAssistancePtr GetAssistance ( );
    VARIANT_BOOL GetOpenAttachmentsInFullScreen ( );
    void PutOpenAttachmentsInFullScreen (
        VARIANT_BOOL prop );
    long GetActiveEncryptionSession ( );
    VARIANT_BOOL GetDontResetInsertionPointProperties ( );
    void PutDontResetInsertionPointProperties (
        VARIANT_BOOL prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Documents (
        /*[out,retval]*/ struct Documents * * prop ) = 0;
      virtual HRESULT __stdcall get_Windows (
        /*[out,retval]*/ struct Windows * * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveDocument (
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveWindow (
        /*[out,retval]*/ struct Window * * prop ) = 0;
      virtual HRESULT __stdcall get_Selection (
        /*[out,retval]*/ struct Selection * * prop ) = 0;
      virtual HRESULT __stdcall get_WordBasic (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_RecentFiles (
        /*[out,retval]*/ struct RecentFiles * * prop ) = 0;
      virtual HRESULT __stdcall get_NormalTemplate (
        /*[out,retval]*/ struct Template * * prop ) = 0;
      virtual HRESULT __stdcall get_System (
        /*[out,retval]*/ struct System * * prop ) = 0;
      virtual HRESULT __stdcall get_AutoCorrect (
        /*[out,retval]*/ struct AutoCorrect * * prop ) = 0;
      virtual HRESULT __stdcall get_FontNames (
        /*[out,retval]*/ struct FontNames * * prop ) = 0;
      virtual HRESULT __stdcall get_LandscapeFontNames (
        /*[out,retval]*/ struct FontNames * * prop ) = 0;
      virtual HRESULT __stdcall get_PortraitFontNames (
        /*[out,retval]*/ struct FontNames * * prop ) = 0;
      virtual HRESULT __stdcall get_Languages (
        /*[out,retval]*/ struct Languages * * prop ) = 0;
      virtual HRESULT __stdcall get_Assistant (
        /*[out,retval]*/ struct Office::Assistant * * prop ) = 0;
      virtual HRESULT __stdcall get_Browser (
        /*[out,retval]*/ struct Browser * * prop ) = 0;
      virtual HRESULT __stdcall get_FileConverters (
        /*[out,retval]*/ struct FileConverters * * prop ) = 0;
      virtual HRESULT __stdcall get_MailingLabel (
        /*[out,retval]*/ struct MailingLabel * * prop ) = 0;
      virtual HRESULT __stdcall get_Dialogs (
        /*[out,retval]*/ struct Dialogs * * prop ) = 0;
      virtual HRESULT __stdcall get_CaptionLabels (
        /*[out,retval]*/ struct CaptionLabels * * prop ) = 0;
      virtual HRESULT __stdcall get_AutoCaptions (
        /*[out,retval]*/ struct AutoCaptions * * prop ) = 0;
      virtual HRESULT __stdcall get_AddIns (
        /*[out,retval]*/ struct AddIns * * prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Version (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_ScreenUpdating (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ScreenUpdating (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintPreview (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintPreview (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Tasks (
        /*[out,retval]*/ struct Tasks * * prop ) = 0;
      virtual HRESULT __stdcall get_DisplayStatusBar (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayStatusBar (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SpecialMode (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_UsableWidth (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_UsableHeight (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_MathCoprocessorAvailable (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_MouseAvailable (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_International (
        /*[in]*/ enum WdInternationalIndex Index,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Build (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_CapsLock (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_NumLock (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_UserName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_UserName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_UserInitials (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_UserInitials (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_UserAddress (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_UserAddress (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_MacroContainer (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_DisplayRecentFiles (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayRecentFiles (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CommandBars (
        /*[out,retval]*/ struct Office::_CommandBars * * prop ) = 0;
      virtual HRESULT __stdcall get_SynonymInfo (
        /*[in]*/ BSTR Word,
        /*[in]*/ VARIANT * LanguageID,
        /*[out,retval]*/ struct SynonymInfo * * prop ) = 0;
      virtual HRESULT __stdcall get_VBE (
        /*[out,retval]*/ struct VBE6::VBE * * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultSaveFormat (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultSaveFormat (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ListGalleries (
        /*[out,retval]*/ struct ListGalleries * * prop ) = 0;
      virtual HRESULT __stdcall get_ActivePrinter (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ActivePrinter (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Templates (
        /*[out,retval]*/ struct Templates * * prop ) = 0;
      virtual HRESULT __stdcall get_CustomizationContext (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall put_CustomizationContext (
        /*[in]*/ IDispatch * prop ) = 0;
      virtual HRESULT __stdcall get_KeyBindings (
        /*[out,retval]*/ struct KeyBindings * * prop ) = 0;
      virtual HRESULT __stdcall get_KeysBoundTo (
        /*[in]*/ enum WdKeyCategory KeyCategory,
        /*[in]*/ BSTR Command,
        /*[in]*/ VARIANT * CommandParameter,
        /*[out,retval]*/ struct KeysBoundTo * * prop ) = 0;
      virtual HRESULT __stdcall get_FindKey (
        /*[in]*/ long KeyCode,
        /*[in]*/ VARIANT * KeyCode2,
        /*[out,retval]*/ struct KeyBinding * * prop ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_DisplayScrollBars (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayScrollBars (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_StartupPath (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_StartupPath (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_BackgroundSavingStatus (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_BackgroundPrintingStatus (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_WindowState (
        /*[out,retval]*/ enum WdWindowState * prop ) = 0;
      virtual HRESULT __stdcall put_WindowState (
        /*[in]*/ enum WdWindowState prop ) = 0;
      virtual HRESULT __stdcall get_DisplayAutoCompleteTips (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayAutoCompleteTips (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Options (
        /*[out,retval]*/ struct Options * * prop ) = 0;
      virtual HRESULT __stdcall get_DisplayAlerts (
        /*[out,retval]*/ enum WdAlertLevel * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayAlerts (
        /*[in]*/ enum WdAlertLevel prop ) = 0;
      virtual HRESULT __stdcall get_CustomDictionaries (
        /*[out,retval]*/ struct Dictionaries * * prop ) = 0;
      virtual HRESULT __stdcall get_PathSeparator (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_StatusBar (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_MAPIAvailable (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_DisplayScreenTips (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayScreenTips (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_EnableCancelKey (
        /*[out,retval]*/ enum WdEnableCancelKey * prop ) = 0;
      virtual HRESULT __stdcall put_EnableCancelKey (
        /*[in]*/ enum WdEnableCancelKey prop ) = 0;
      virtual HRESULT __stdcall get_UserControl (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_FileSearch (
        /*[out,retval]*/ struct Office::FileSearch * * prop ) = 0;
      virtual HRESULT __stdcall get_MailSystem (
        /*[out,retval]*/ enum WdMailSystem * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultTableSeparator (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultTableSeparator (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ShowVisualBasicEditor (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowVisualBasicEditor (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_BrowseExtraFileTypes (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_BrowseExtraFileTypes (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_IsObjectValid (
        /*[in]*/ IDispatch * Object,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_HangulHanjaDictionaries (
        /*[out,retval]*/ struct HangulHanjaConversionDictionaries * * prop ) = 0;
      virtual HRESULT __stdcall get_MailMessage (
        /*[out,retval]*/ struct MailMessage * * prop ) = 0;
      virtual HRESULT __stdcall get_FocusInMailHeader (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_Quit (
        /*[in]*/ VARIANT * SaveChanges = &vtMissing,
        /*[in]*/ VARIANT * OriginalFormat = &vtMissing,
        /*[in]*/ VARIANT * RouteDocument = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_ScreenRefresh ( ) = 0;
      virtual HRESULT __stdcall raw_PrintOutOld (
        /*[in]*/ VARIANT * Background = &vtMissing,
        /*[in]*/ VARIANT * Append = &vtMissing,
        /*[in]*/ VARIANT * Range = &vtMissing,
        /*[in]*/ VARIANT * OutputFileName = &vtMissing,
        /*[in]*/ VARIANT * From = &vtMissing,
        /*[in]*/ VARIANT * To = &vtMissing,
        /*[in]*/ VARIANT * Item = &vtMissing,
        /*[in]*/ VARIANT * Copies = &vtMissing,
        /*[in]*/ VARIANT * Pages = &vtMissing,
        /*[in]*/ VARIANT * PageType = &vtMissing,
        /*[in]*/ VARIANT * PrintToFile = &vtMissing,
        /*[in]*/ VARIANT * Collate = &vtMissing,
        /*[in]*/ VARIANT * FileName = &vtMissing,
        /*[in]*/ VARIANT * ActivePrinterMacGX = &vtMissing,
        /*[in]*/ VARIANT * ManualDuplexPrint = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_LookupNameProperties (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall raw_SubstituteFont (
        /*[in]*/ BSTR UnavailableFont,
        /*[in]*/ BSTR SubstituteFont ) = 0;
      virtual HRESULT __stdcall raw_Repeat (
        /*[in]*/ VARIANT * Times,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_DDEExecute (
        /*[in]*/ long Channel,
        /*[in]*/ BSTR Command ) = 0;
      virtual HRESULT __stdcall raw_DDEInitiate (
        /*[in]*/ BSTR App,
        /*[in]*/ BSTR Topic,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_DDEPoke (
        /*[in]*/ long Channel,
        /*[in]*/ BSTR Item,
        /*[in]*/ BSTR Data ) = 0;
      virtual HRESULT __stdcall raw_DDERequest (
        /*[in]*/ long Channel,
        /*[in]*/ BSTR Item,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall raw_DDETerminate (
        /*[in]*/ long Channel ) = 0;
      virtual HRESULT __stdcall raw_DDETerminateAll ( ) = 0;
      virtual HRESULT __stdcall raw_BuildKeyCode (
        /*[in]*/ enum WdKey Arg1,
        /*[in]*/ VARIANT * Arg2,
        /*[in]*/ VARIANT * Arg3,
        /*[in]*/ VARIANT * Arg4,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_KeyString (
        /*[in]*/ long KeyCode,
        /*[in]*/ VARIANT * KeyCode2,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall raw_OrganizerCopy (
        /*[in]*/ BSTR Source,
        /*[in]*/ BSTR Destination,
        /*[in]*/ BSTR Name,
        /*[in]*/ enum WdOrganizerObject Object ) = 0;
      virtual HRESULT __stdcall raw_OrganizerDelete (
        /*[in]*/ BSTR Source,
        /*[in]*/ BSTR Name,
        /*[in]*/ enum WdOrganizerObject Object ) = 0;
      virtual HRESULT __stdcall raw_OrganizerRename (
        /*[in]*/ BSTR Source,
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR NewName,
        /*[in]*/ enum WdOrganizerObject Object ) = 0;
      virtual HRESULT __stdcall raw_AddAddress (
        /*[in]*/ SAFEARRAY * * TagID,
        /*[in]*/ SAFEARRAY * * Value ) = 0;
      virtual HRESULT __stdcall raw_GetAddress (
        /*[in]*/ VARIANT * Name,
        /*[in]*/ VARIANT * AddressProperties,
        /*[in]*/ VARIANT * UseAutoText,
        /*[in]*/ VARIANT * DisplaySelectDialog,
        /*[in]*/ VARIANT * SelectDialog,
        /*[in]*/ VARIANT * CheckNamesDialog,
        /*[in]*/ VARIANT * RecentAddressesChoice,
        /*[in]*/ VARIANT * UpdateRecentAddresses,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall raw_CheckGrammar (
        /*[in]*/ BSTR String,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_CheckSpelling (
        /*[in]*/ BSTR Word,
        /*[in]*/ VARIANT * CustomDictionary,
        /*[in]*/ VARIANT * IgnoreUppercase,
        /*[in]*/ VARIANT * MainDictionary,
        /*[in]*/ VARIANT * CustomDictionary2,
        /*[in]*/ VARIANT * CustomDictionary3,
        /*[in]*/ VARIANT * CustomDictionary4,
        /*[in]*/ VARIANT * CustomDictionary5,
        /*[in]*/ VARIANT * CustomDictionary6,
        /*[in]*/ VARIANT * CustomDictionary7,
        /*[in]*/ VARIANT * CustomDictionary8,
        /*[in]*/ VARIANT * CustomDictionary9,
        /*[in]*/ VARIANT * CustomDictionary10,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_ResetIgnoreAll ( ) = 0;
      virtual HRESULT __stdcall raw_GetSpellingSuggestions (
        /*[in]*/ BSTR Word,
        /*[in]*/ VARIANT * CustomDictionary,
        /*[in]*/ VARIANT * IgnoreUppercase,
        /*[in]*/ VARIANT * MainDictionary,
        /*[in]*/ VARIANT * SuggestionMode,
        /*[in]*/ VARIANT * CustomDictionary2,
        /*[in]*/ VARIANT * CustomDictionary3,
        /*[in]*/ VARIANT * CustomDictionary4,
        /*[in]*/ VARIANT * CustomDictionary5,
        /*[in]*/ VARIANT * CustomDictionary6,
        /*[in]*/ VARIANT * CustomDictionary7,
        /*[in]*/ VARIANT * CustomDictionary8,
        /*[in]*/ VARIANT * CustomDictionary9,
        /*[in]*/ VARIANT * CustomDictionary10,
        /*[out,retval]*/ struct SpellingSuggestions * * prop ) = 0;
      virtual HRESULT __stdcall raw_GoBack ( ) = 0;
      virtual HRESULT __stdcall raw_Help (
        /*[in]*/ VARIANT * HelpType ) = 0;
      virtual HRESULT __stdcall raw_AutomaticChange ( ) = 0;
      virtual HRESULT __stdcall raw_ShowMe ( ) = 0;
      virtual HRESULT __stdcall raw_HelpTool ( ) = 0;
      virtual HRESULT __stdcall raw_NewWindow (
        /*[out,retval]*/ struct Window * * prop ) = 0;
      virtual HRESULT __stdcall raw_ListCommands (
        /*[in]*/ VARIANT_BOOL ListAllCommands ) = 0;
      virtual HRESULT __stdcall raw_ShowClipboard ( ) = 0;
      virtual HRESULT __stdcall raw_OnTime (
        /*[in]*/ VARIANT * When,
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * Tolerance = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_NextLetter ( ) = 0;
      virtual HRESULT __stdcall raw_MountVolume (
        /*[in]*/ BSTR Zone,
        /*[in]*/ BSTR Server,
        /*[in]*/ BSTR Volume,
        /*[in]*/ VARIANT * User,
        /*[in]*/ VARIANT * UserPassword,
        /*[in]*/ VARIANT * VolumePassword,
        /*[out,retval]*/ short * prop ) = 0;
      virtual HRESULT __stdcall raw_CleanString (
        /*[in]*/ BSTR String,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall raw_SendFax ( ) = 0;
      virtual HRESULT __stdcall raw_ChangeFileOpenDirectory (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall raw_RunOld (
        /*[in]*/ BSTR MacroName ) = 0;
      virtual HRESULT __stdcall raw_GoForward ( ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ long Left,
        /*[in]*/ long Top ) = 0;
      virtual HRESULT __stdcall raw_Resize (
        /*[in]*/ long Width,
        /*[in]*/ long Height ) = 0;
      virtual HRESULT __stdcall raw_InchesToPoints (
        /*[in]*/ float Inches,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall raw_CentimetersToPoints (
        /*[in]*/ float Centimeters,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall raw_MillimetersToPoints (
        /*[in]*/ float Millimeters,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall raw_PicasToPoints (
        /*[in]*/ float Picas,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall raw_LinesToPoints (
        /*[in]*/ float Lines,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall raw_PointsToInches (
        /*[in]*/ float Points,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall raw_PointsToCentimeters (
        /*[in]*/ float Points,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall raw_PointsToMillimeters (
        /*[in]*/ float Points,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall raw_PointsToPicas (
        /*[in]*/ float Points,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall raw_PointsToLines (
        /*[in]*/ float Points,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall raw_Activate ( ) = 0;
      virtual HRESULT __stdcall raw_PointsToPixels (
        /*[in]*/ float Points,
        /*[in]*/ VARIANT * fVertical,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall raw_PixelsToPoints (
        /*[in]*/ float Pixels,
        /*[in]*/ VARIANT * fVertical,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall raw_KeyboardLatin ( ) = 0;
      virtual HRESULT __stdcall raw_KeyboardBidi ( ) = 0;
      virtual HRESULT __stdcall raw_ToggleKeyboard ( ) = 0;
      virtual HRESULT __stdcall raw_Keyboard (
        /*[in]*/ long LangId,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_ProductCode (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall raw_DefaultWebOptions (
        /*[out,retval]*/ struct DefaultWebOptions * * prop ) = 0;
      virtual HRESULT __stdcall raw_DiscussionSupport (
        /*[in]*/ VARIANT * Range,
        /*[in]*/ VARIANT * cid,
        /*[in]*/ VARIANT * piCSE ) = 0;
      virtual HRESULT __stdcall raw_SetDefaultTheme (
        /*[in]*/ BSTR Name,
        /*[in]*/ enum WdDocumentMedium DocumentType ) = 0;
      virtual HRESULT __stdcall raw_GetDefaultTheme (
        /*[in]*/ enum WdDocumentMedium DocumentType,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_EmailOptions (
        /*[out,retval]*/ struct EmailOptions * * prop ) = 0;
      virtual HRESULT __stdcall get_Language (
        /*[out,retval]*/ enum Office::MsoLanguageID * prop ) = 0;
      virtual HRESULT __stdcall get_COMAddIns (
        /*[out,retval]*/ struct Office::COMAddIns * * prop ) = 0;
      virtual HRESULT __stdcall get_CheckLanguage (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CheckLanguage (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_LanguageSettings (
        /*[out,retval]*/ struct Office::LanguageSettings * * prop ) = 0;
      virtual HRESULT __stdcall get_Dummy1 (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_AnswerWizard (
        /*[out,retval]*/ struct Office::AnswerWizard * * prop ) = 0;
      virtual HRESULT __stdcall get_FeatureInstall (
        /*[out,retval]*/ enum Office::MsoFeatureInstall * prop ) = 0;
      virtual HRESULT __stdcall put_FeatureInstall (
        /*[in]*/ enum Office::MsoFeatureInstall prop ) = 0;
      virtual HRESULT __stdcall raw_PrintOut2000 (
        /*[in]*/ VARIANT * Background = &vtMissing,
        /*[in]*/ VARIANT * Append = &vtMissing,
        /*[in]*/ VARIANT * Range = &vtMissing,
        /*[in]*/ VARIANT * OutputFileName = &vtMissing,
        /*[in]*/ VARIANT * From = &vtMissing,
        /*[in]*/ VARIANT * To = &vtMissing,
        /*[in]*/ VARIANT * Item = &vtMissing,
        /*[in]*/ VARIANT * Copies = &vtMissing,
        /*[in]*/ VARIANT * Pages = &vtMissing,
        /*[in]*/ VARIANT * PageType = &vtMissing,
        /*[in]*/ VARIANT * PrintToFile = &vtMissing,
        /*[in]*/ VARIANT * Collate = &vtMissing,
        /*[in]*/ VARIANT * FileName = &vtMissing,
        /*[in]*/ VARIANT * ActivePrinterMacGX = &vtMissing,
        /*[in]*/ VARIANT * ManualDuplexPrint = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomColumn = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomRow = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomPaperWidth = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomPaperHeight = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Run (
        /*[in]*/ BSTR MacroName,
        /*[in]*/ VARIANT * varg1,
        /*[in]*/ VARIANT * varg2,
        /*[in]*/ VARIANT * varg3,
        /*[in]*/ VARIANT * varg4,
        /*[in]*/ VARIANT * varg5,
        /*[in]*/ VARIANT * varg6,
        /*[in]*/ VARIANT * varg7,
        /*[in]*/ VARIANT * varg8,
        /*[in]*/ VARIANT * varg9,
        /*[in]*/ VARIANT * varg10,
        /*[in]*/ VARIANT * varg11,
        /*[in]*/ VARIANT * varg12,
        /*[in]*/ VARIANT * varg13,
        /*[in]*/ VARIANT * varg14,
        /*[in]*/ VARIANT * varg15,
        /*[in]*/ VARIANT * varg16,
        /*[in]*/ VARIANT * varg17,
        /*[in]*/ VARIANT * varg18,
        /*[in]*/ VARIANT * varg19,
        /*[in]*/ VARIANT * varg20,
        /*[in]*/ VARIANT * varg21,
        /*[in]*/ VARIANT * varg22,
        /*[in]*/ VARIANT * varg23,
        /*[in]*/ VARIANT * varg24,
        /*[in]*/ VARIANT * varg25,
        /*[in]*/ VARIANT * varg26,
        /*[in]*/ VARIANT * varg27,
        /*[in]*/ VARIANT * varg28,
        /*[in]*/ VARIANT * varg29,
        /*[in]*/ VARIANT * varg30,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall raw_PrintOut (
        /*[in]*/ VARIANT * Background = &vtMissing,
        /*[in]*/ VARIANT * Append = &vtMissing,
        /*[in]*/ VARIANT * Range = &vtMissing,
        /*[in]*/ VARIANT * OutputFileName = &vtMissing,
        /*[in]*/ VARIANT * From = &vtMissing,
        /*[in]*/ VARIANT * To = &vtMissing,
        /*[in]*/ VARIANT * Item = &vtMissing,
        /*[in]*/ VARIANT * Copies = &vtMissing,
        /*[in]*/ VARIANT * Pages = &vtMissing,
        /*[in]*/ VARIANT * PageType = &vtMissing,
        /*[in]*/ VARIANT * PrintToFile = &vtMissing,
        /*[in]*/ VARIANT * Collate = &vtMissing,
        /*[in]*/ VARIANT * FileName = &vtMissing,
        /*[in]*/ VARIANT * ActivePrinterMacGX = &vtMissing,
        /*[in]*/ VARIANT * ManualDuplexPrint = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomColumn = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomRow = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomPaperWidth = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomPaperHeight = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_AutomationSecurity (
        /*[out,retval]*/ enum Office::MsoAutomationSecurity * prop ) = 0;
      virtual HRESULT __stdcall put_AutomationSecurity (
        /*[in]*/ enum Office::MsoAutomationSecurity prop ) = 0;
      virtual HRESULT __stdcall get_FileDialog (
        /*[in]*/ enum Office::MsoFileDialogType FileDialogType,
        /*[out,retval]*/ struct Office::FileDialog * * prop ) = 0;
      virtual HRESULT __stdcall get_EmailTemplate (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_EmailTemplate (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ShowWindowsInTaskbar (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowWindowsInTaskbar (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_NewDocument (
        /*[out,retval]*/ struct Office::NewFile * * prop ) = 0;
      virtual HRESULT __stdcall get_ShowStartupDialog (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowStartupDialog (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoCorrectEmail (
        /*[out,retval]*/ struct AutoCorrect * * prop ) = 0;
      virtual HRESULT __stdcall get_TaskPanes (
        /*[out,retval]*/ struct TaskPanes * * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultLegalBlackline (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultLegalBlackline (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall raw_Dummy2 (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_SmartTagRecognizers (
        /*[out,retval]*/ struct SmartTagRecognizers * * prop ) = 0;
      virtual HRESULT __stdcall get_SmartTagTypes (
        /*[out,retval]*/ struct SmartTagTypes * * prop ) = 0;
      virtual HRESULT __stdcall get_XMLNamespaces (
        /*[out,retval]*/ struct XMLNamespaces * * prop ) = 0;
      virtual HRESULT __stdcall raw_PutFocusInMailHeader ( ) = 0;
      virtual HRESULT __stdcall get_ArbitraryXMLSupportAvailable (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_BuildFull (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_BuildFeatureCrew (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall raw_LoadMasterList (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_CompareDocuments (
        /*[in]*/ struct _Document * OriginalDocument,
        /*[in]*/ struct _Document * RevisedDocument,
        /*[in]*/ enum WdCompareDestination Destination,
        /*[in]*/ enum WdGranularity Granularity,
        /*[in]*/ VARIANT_BOOL CompareFormatting,
        /*[in]*/ VARIANT_BOOL CompareCaseChanges,
        /*[in]*/ VARIANT_BOOL CompareWhitespace,
        /*[in]*/ VARIANT_BOOL CompareTables,
        /*[in]*/ VARIANT_BOOL CompareHeaders,
        /*[in]*/ VARIANT_BOOL CompareFootnotes,
        /*[in]*/ VARIANT_BOOL CompareTextboxes,
        /*[in]*/ VARIANT_BOOL CompareFields,
        /*[in]*/ VARIANT_BOOL CompareComments,
        /*[in]*/ VARIANT_BOOL CompareMoves,
        /*[in]*/ BSTR RevisedAuthor,
        /*[in]*/ VARIANT_BOOL IgnoreAllComparisonWarnings,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall raw_MergeDocuments (
        /*[in]*/ struct _Document * OriginalDocument,
        /*[in]*/ struct _Document * RevisedDocument,
        /*[in]*/ enum WdCompareDestination Destination,
        /*[in]*/ enum WdGranularity Granularity,
        /*[in]*/ VARIANT_BOOL CompareFormatting,
        /*[in]*/ VARIANT_BOOL CompareCaseChanges,
        /*[in]*/ VARIANT_BOOL CompareWhitespace,
        /*[in]*/ VARIANT_BOOL CompareTables,
        /*[in]*/ VARIANT_BOOL CompareHeaders,
        /*[in]*/ VARIANT_BOOL CompareFootnotes,
        /*[in]*/ VARIANT_BOOL CompareTextboxes,
        /*[in]*/ VARIANT_BOOL CompareFields,
        /*[in]*/ VARIANT_BOOL CompareComments,
        /*[in]*/ VARIANT_BOOL CompareMoves,
        /*[in]*/ BSTR OriginalAuthor,
        /*[in]*/ BSTR RevisedAuthor,
        /*[in]*/ enum WdMergeFormatFrom FormatFrom,
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall get_Bibliography (
        /*[out,retval]*/ struct Bibliography * * prop ) = 0;
      virtual HRESULT __stdcall get_ShowStylePreviews (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowStylePreviews (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RestrictLinkedStyles (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RestrictLinkedStyles (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_OMathAutoCorrect (
        /*[out,retval]*/ struct OMathAutoCorrect * * prop ) = 0;
      virtual HRESULT __stdcall get_DisplayDocumentInformationPanel (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayDocumentInformationPanel (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Assistance (
        /*[out,retval]*/ struct Office::IAssistance * * prop ) = 0;
      virtual HRESULT __stdcall get_OpenAttachmentsInFullScreen (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OpenAttachmentsInFullScreen (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ActiveEncryptionSession (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_DontResetInsertionPointProperties (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DontResetInsertionPointProperties (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("000209b9-0000-0000-c000-000000000046"))
_Global : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetDocuments))
    DocumentsPtr Documents;
    __declspec(property(get=GetWindows))
    WindowsPtr Windows;
    __declspec(property(get=GetActiveDocument))
    _DocumentPtr ActiveDocument;
    __declspec(property(get=GetActiveWindow))
    WindowPtr ActiveWindow;
    __declspec(property(get=GetSelection))
    SelectionPtr Selection;
    __declspec(property(get=GetWordBasic))
    IDispatchPtr WordBasic;
    __declspec(property(get=GetRecentFiles))
    RecentFilesPtr RecentFiles;
    __declspec(property(get=GetNormalTemplate))
    TemplatePtr NormalTemplate;
    __declspec(property(get=GetSystem))
    SystemPtr System;
    __declspec(property(get=GetAutoCorrect))
    AutoCorrectPtr AutoCorrect;
    __declspec(property(get=GetFontNames))
    FontNamesPtr FontNames;
    __declspec(property(get=GetLandscapeFontNames))
    FontNamesPtr LandscapeFontNames;
    __declspec(property(get=GetPortraitFontNames))
    FontNamesPtr PortraitFontNames;
    __declspec(property(get=GetLanguages))
    LanguagesPtr Languages;
    __declspec(property(get=GetAssistant))
    Office::AssistantPtr Assistant;
    __declspec(property(get=GetOptions))
    OptionsPtr Options;
    __declspec(property(get=GetFileConverters))
    FileConvertersPtr FileConverters;
    __declspec(property(get=GetCustomDictionaries))
    DictionariesPtr CustomDictionaries;
    __declspec(property(get=GetDialogs))
    DialogsPtr Dialogs;
    __declspec(property(get=GetCaptionLabels))
    CaptionLabelsPtr CaptionLabels;
    __declspec(property(get=GetAutoCaptions))
    AutoCaptionsPtr AutoCaptions;
    __declspec(property(get=GetAddIns))
    AddInsPtr AddIns;
    __declspec(property(put=PutStatusBar))
    _bstr_t StatusBar;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetPrintPreview,put=PutPrintPreview))
    VARIANT_BOOL PrintPreview;
    __declspec(property(get=GetTasks))
    TasksPtr Tasks;
    __declspec(property(get=GetShowVisualBasicEditor,put=PutShowVisualBasicEditor))
    VARIANT_BOOL ShowVisualBasicEditor;
    __declspec(property(get=GetIsObjectValid))
    VARIANT_BOOL IsObjectValid[];
    __declspec(property(get=GetHangulHanjaDictionaries))
    HangulHanjaConversionDictionariesPtr HangulHanjaDictionaries;
    __declspec(property(get=GetLanguageSettings))
    Office::LanguageSettingsPtr LanguageSettings;
    __declspec(property(get=GetAnswerWizard))
    Office::AnswerWizardPtr AnswerWizard;
    __declspec(property(get=GetAutoCorrectEmail))
    AutoCorrectPtr AutoCorrectEmail;
    __declspec(property(get=GetMacroContainer))
    IDispatchPtr MacroContainer;
    __declspec(property(get=GetCommandBars))
    Office::_CommandBarsPtr CommandBars;
    __declspec(property(get=GetSynonymInfo))
    SynonymInfoPtr SynonymInfo[][];
    __declspec(property(get=GetVBE))
    VBE6::VBEPtr VBE;
    __declspec(property(get=GetListGalleries))
    ListGalleriesPtr ListGalleries;
    __declspec(property(get=GetActivePrinter,put=PutActivePrinter))
    _bstr_t ActivePrinter;
    __declspec(property(get=GetTemplates))
    TemplatesPtr Templates;
    __declspec(property(get=GetCustomizationContext,put=PutCustomizationContext))
    IDispatchPtr CustomizationContext;
    __declspec(property(get=GetKeyBindings))
    KeyBindingsPtr KeyBindings;
    __declspec(property(get=GetKeysBoundTo))
    KeysBoundToPtr KeysBoundTo[][][];
    __declspec(property(get=GetFindKey))
    KeyBindingPtr FindKey[][];

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    DocumentsPtr GetDocuments ( );
    WindowsPtr GetWindows ( );
    _DocumentPtr GetActiveDocument ( );
    WindowPtr GetActiveWindow ( );
    SelectionPtr GetSelection ( );
    IDispatchPtr GetWordBasic ( );
    VARIANT_BOOL GetPrintPreview ( );
    void PutPrintPreview (
        VARIANT_BOOL prop );
    RecentFilesPtr GetRecentFiles ( );
    TemplatePtr GetNormalTemplate ( );
    SystemPtr GetSystem ( );
    AutoCorrectPtr GetAutoCorrect ( );
    FontNamesPtr GetFontNames ( );
    FontNamesPtr GetLandscapeFontNames ( );
    FontNamesPtr GetPortraitFontNames ( );
    LanguagesPtr GetLanguages ( );
    Office::AssistantPtr GetAssistant ( );
    FileConvertersPtr GetFileConverters ( );
    DialogsPtr GetDialogs ( );
    CaptionLabelsPtr GetCaptionLabels ( );
    AutoCaptionsPtr GetAutoCaptions ( );
    AddInsPtr GetAddIns ( );
    TasksPtr GetTasks ( );
    IDispatchPtr GetMacroContainer ( );
    Office::_CommandBarsPtr GetCommandBars ( );
    SynonymInfoPtr GetSynonymInfo (
        _bstr_t Word,
        VARIANT * LanguageID = &vtMissing );
    VBE6::VBEPtr GetVBE ( );
    ListGalleriesPtr GetListGalleries ( );
    _bstr_t GetActivePrinter ( );
    void PutActivePrinter (
        _bstr_t prop );
    TemplatesPtr GetTemplates ( );
    IDispatchPtr GetCustomizationContext ( );
    void PutCustomizationContext (
        IDispatch * prop );
    KeyBindingsPtr GetKeyBindings ( );
    KeysBoundToPtr GetKeysBoundTo (
        enum WdKeyCategory KeyCategory,
        _bstr_t Command,
        VARIANT * CommandParameter = &vtMissing );
    KeyBindingPtr GetFindKey (
        long KeyCode,
        VARIANT * KeyCode2 = &vtMissing );
    OptionsPtr GetOptions ( );
    DictionariesPtr GetCustomDictionaries ( );
    void PutStatusBar (
        _bstr_t _arg1 );
    VARIANT_BOOL GetShowVisualBasicEditor ( );
    void PutShowVisualBasicEditor (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetIsObjectValid (
        IDispatch * Object );
    HangulHanjaConversionDictionariesPtr GetHangulHanjaDictionaries ( );
    VARIANT_BOOL Repeat (
        VARIANT * Times = &vtMissing );
    HRESULT DDEExecute (
        long Channel,
        _bstr_t Command );
    long DDEInitiate (
        _bstr_t App,
        _bstr_t Topic );
    HRESULT DDEPoke (
        long Channel,
        _bstr_t Item,
        _bstr_t Data );
    _bstr_t DDERequest (
        long Channel,
        _bstr_t Item );
    HRESULT DDETerminate (
        long Channel );
    HRESULT DDETerminateAll ( );
    long BuildKeyCode (
        enum WdKey Arg1,
        VARIANT * Arg2 = &vtMissing,
        VARIANT * Arg3 = &vtMissing,
        VARIANT * Arg4 = &vtMissing );
    _bstr_t KeyString (
        long KeyCode,
        VARIANT * KeyCode2 = &vtMissing );
    VARIANT_BOOL CheckSpelling (
        _bstr_t Word,
        VARIANT * CustomDictionary = &vtMissing,
        VARIANT * IgnoreUppercase = &vtMissing,
        VARIANT * MainDictionary = &vtMissing,
        VARIANT * CustomDictionary2 = &vtMissing,
        VARIANT * CustomDictionary3 = &vtMissing,
        VARIANT * CustomDictionary4 = &vtMissing,
        VARIANT * CustomDictionary5 = &vtMissing,
        VARIANT * CustomDictionary6 = &vtMissing,
        VARIANT * CustomDictionary7 = &vtMissing,
        VARIANT * CustomDictionary8 = &vtMissing,
        VARIANT * CustomDictionary9 = &vtMissing,
        VARIANT * CustomDictionary10 = &vtMissing );
    SpellingSuggestionsPtr GetSpellingSuggestions (
        _bstr_t Word,
        VARIANT * CustomDictionary = &vtMissing,
        VARIANT * IgnoreUppercase = &vtMissing,
        VARIANT * MainDictionary = &vtMissing,
        VARIANT * SuggestionMode = &vtMissing,
        VARIANT * CustomDictionary2 = &vtMissing,
        VARIANT * CustomDictionary3 = &vtMissing,
        VARIANT * CustomDictionary4 = &vtMissing,
        VARIANT * CustomDictionary5 = &vtMissing,
        VARIANT * CustomDictionary6 = &vtMissing,
        VARIANT * CustomDictionary7 = &vtMissing,
        VARIANT * CustomDictionary8 = &vtMissing,
        VARIANT * CustomDictionary9 = &vtMissing,
        VARIANT * CustomDictionary10 = &vtMissing );
    HRESULT Help (
        VARIANT * HelpType );
    WindowPtr NewWindow ( );
    _bstr_t CleanString (
        _bstr_t String );
    HRESULT ChangeFileOpenDirectory (
        _bstr_t Path );
    float InchesToPoints (
        float Inches );
    float CentimetersToPoints (
        float Centimeters );
    float MillimetersToPoints (
        float Millimeters );
    float PicasToPoints (
        float Picas );
    float LinesToPoints (
        float Lines );
    float PointsToInches (
        float Points );
    float PointsToCentimeters (
        float Points );
    float PointsToMillimeters (
        float Points );
    float PointsToPicas (
        float Points );
    float PointsToLines (
        float Points );
    float PointsToPixels (
        float Points,
        VARIANT * fVertical = &vtMissing );
    float PixelsToPoints (
        float Pixels,
        VARIANT * fVertical = &vtMissing );
    Office::LanguageSettingsPtr GetLanguageSettings ( );
    Office::AnswerWizardPtr GetAnswerWizard ( );
    AutoCorrectPtr GetAutoCorrectEmail ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Documents (
        /*[out,retval]*/ struct Documents * * prop ) = 0;
      virtual HRESULT __stdcall get_Windows (
        /*[out,retval]*/ struct Windows * * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveDocument (
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveWindow (
        /*[out,retval]*/ struct Window * * prop ) = 0;
      virtual HRESULT __stdcall get_Selection (
        /*[out,retval]*/ struct Selection * * prop ) = 0;
      virtual HRESULT __stdcall get_WordBasic (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_PrintPreview (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintPreview (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RecentFiles (
        /*[out,retval]*/ struct RecentFiles * * prop ) = 0;
      virtual HRESULT __stdcall get_NormalTemplate (
        /*[out,retval]*/ struct Template * * prop ) = 0;
      virtual HRESULT __stdcall get_System (
        /*[out,retval]*/ struct System * * prop ) = 0;
      virtual HRESULT __stdcall get_AutoCorrect (
        /*[out,retval]*/ struct AutoCorrect * * prop ) = 0;
      virtual HRESULT __stdcall get_FontNames (
        /*[out,retval]*/ struct FontNames * * prop ) = 0;
      virtual HRESULT __stdcall get_LandscapeFontNames (
        /*[out,retval]*/ struct FontNames * * prop ) = 0;
      virtual HRESULT __stdcall get_PortraitFontNames (
        /*[out,retval]*/ struct FontNames * * prop ) = 0;
      virtual HRESULT __stdcall get_Languages (
        /*[out,retval]*/ struct Languages * * prop ) = 0;
      virtual HRESULT __stdcall get_Assistant (
        /*[out,retval]*/ struct Office::Assistant * * prop ) = 0;
      virtual HRESULT __stdcall get_FileConverters (
        /*[out,retval]*/ struct FileConverters * * prop ) = 0;
      virtual HRESULT __stdcall get_Dialogs (
        /*[out,retval]*/ struct Dialogs * * prop ) = 0;
      virtual HRESULT __stdcall get_CaptionLabels (
        /*[out,retval]*/ struct CaptionLabels * * prop ) = 0;
      virtual HRESULT __stdcall get_AutoCaptions (
        /*[out,retval]*/ struct AutoCaptions * * prop ) = 0;
      virtual HRESULT __stdcall get_AddIns (
        /*[out,retval]*/ struct AddIns * * prop ) = 0;
      virtual HRESULT __stdcall get_Tasks (
        /*[out,retval]*/ struct Tasks * * prop ) = 0;
      virtual HRESULT __stdcall get_MacroContainer (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_CommandBars (
        /*[out,retval]*/ struct Office::_CommandBars * * prop ) = 0;
      virtual HRESULT __stdcall get_SynonymInfo (
        /*[in]*/ BSTR Word,
        /*[in]*/ VARIANT * LanguageID,
        /*[out,retval]*/ struct SynonymInfo * * prop ) = 0;
      virtual HRESULT __stdcall get_VBE (
        /*[out,retval]*/ struct VBE6::VBE * * prop ) = 0;
      virtual HRESULT __stdcall get_ListGalleries (
        /*[out,retval]*/ struct ListGalleries * * prop ) = 0;
      virtual HRESULT __stdcall get_ActivePrinter (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ActivePrinter (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Templates (
        /*[out,retval]*/ struct Templates * * prop ) = 0;
      virtual HRESULT __stdcall get_CustomizationContext (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall put_CustomizationContext (
        /*[in]*/ IDispatch * prop ) = 0;
      virtual HRESULT __stdcall get_KeyBindings (
        /*[out,retval]*/ struct KeyBindings * * prop ) = 0;
      virtual HRESULT __stdcall get_KeysBoundTo (
        /*[in]*/ enum WdKeyCategory KeyCategory,
        /*[in]*/ BSTR Command,
        /*[in]*/ VARIANT * CommandParameter,
        /*[out,retval]*/ struct KeysBoundTo * * prop ) = 0;
      virtual HRESULT __stdcall get_FindKey (
        /*[in]*/ long KeyCode,
        /*[in]*/ VARIANT * KeyCode2,
        /*[out,retval]*/ struct KeyBinding * * prop ) = 0;
      virtual HRESULT __stdcall get_Options (
        /*[out,retval]*/ struct Options * * prop ) = 0;
      virtual HRESULT __stdcall get_CustomDictionaries (
        /*[out,retval]*/ struct Dictionaries * * prop ) = 0;
      virtual HRESULT __stdcall put_StatusBar (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_ShowVisualBasicEditor (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowVisualBasicEditor (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_IsObjectValid (
        /*[in]*/ IDispatch * Object,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_HangulHanjaDictionaries (
        /*[out,retval]*/ struct HangulHanjaConversionDictionaries * * prop ) = 0;
      virtual HRESULT __stdcall raw_Repeat (
        /*[in]*/ VARIANT * Times,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_DDEExecute (
        /*[in]*/ long Channel,
        /*[in]*/ BSTR Command ) = 0;
      virtual HRESULT __stdcall raw_DDEInitiate (
        /*[in]*/ BSTR App,
        /*[in]*/ BSTR Topic,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_DDEPoke (
        /*[in]*/ long Channel,
        /*[in]*/ BSTR Item,
        /*[in]*/ BSTR Data ) = 0;
      virtual HRESULT __stdcall raw_DDERequest (
        /*[in]*/ long Channel,
        /*[in]*/ BSTR Item,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall raw_DDETerminate (
        /*[in]*/ long Channel ) = 0;
      virtual HRESULT __stdcall raw_DDETerminateAll ( ) = 0;
      virtual HRESULT __stdcall raw_BuildKeyCode (
        /*[in]*/ enum WdKey Arg1,
        /*[in]*/ VARIANT * Arg2,
        /*[in]*/ VARIANT * Arg3,
        /*[in]*/ VARIANT * Arg4,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_KeyString (
        /*[in]*/ long KeyCode,
        /*[in]*/ VARIANT * KeyCode2,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall raw_CheckSpelling (
        /*[in]*/ BSTR Word,
        /*[in]*/ VARIANT * CustomDictionary,
        /*[in]*/ VARIANT * IgnoreUppercase,
        /*[in]*/ VARIANT * MainDictionary,
        /*[in]*/ VARIANT * CustomDictionary2,
        /*[in]*/ VARIANT * CustomDictionary3,
        /*[in]*/ VARIANT * CustomDictionary4,
        /*[in]*/ VARIANT * CustomDictionary5,
        /*[in]*/ VARIANT * CustomDictionary6,
        /*[in]*/ VARIANT * CustomDictionary7,
        /*[in]*/ VARIANT * CustomDictionary8,
        /*[in]*/ VARIANT * CustomDictionary9,
        /*[in]*/ VARIANT * CustomDictionary10,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_GetSpellingSuggestions (
        /*[in]*/ BSTR Word,
        /*[in]*/ VARIANT * CustomDictionary,
        /*[in]*/ VARIANT * IgnoreUppercase,
        /*[in]*/ VARIANT * MainDictionary,
        /*[in]*/ VARIANT * SuggestionMode,
        /*[in]*/ VARIANT * CustomDictionary2,
        /*[in]*/ VARIANT * CustomDictionary3,
        /*[in]*/ VARIANT * CustomDictionary4,
        /*[in]*/ VARIANT * CustomDictionary5,
        /*[in]*/ VARIANT * CustomDictionary6,
        /*[in]*/ VARIANT * CustomDictionary7,
        /*[in]*/ VARIANT * CustomDictionary8,
        /*[in]*/ VARIANT * CustomDictionary9,
        /*[in]*/ VARIANT * CustomDictionary10,
        /*[out,retval]*/ struct SpellingSuggestions * * prop ) = 0;
      virtual HRESULT __stdcall raw_Help (
        /*[in]*/ VARIANT * HelpType ) = 0;
      virtual HRESULT __stdcall raw_NewWindow (
        /*[out,retval]*/ struct Window * * prop ) = 0;
      virtual HRESULT __stdcall raw_CleanString (
        /*[in]*/ BSTR String,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall raw_ChangeFileOpenDirectory (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall raw_InchesToPoints (
        /*[in]*/ float Inches,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall raw_CentimetersToPoints (
        /*[in]*/ float Centimeters,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall raw_MillimetersToPoints (
        /*[in]*/ float Millimeters,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall raw_PicasToPoints (
        /*[in]*/ float Picas,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall raw_LinesToPoints (
        /*[in]*/ float Lines,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall raw_PointsToInches (
        /*[in]*/ float Points,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall raw_PointsToCentimeters (
        /*[in]*/ float Points,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall raw_PointsToMillimeters (
        /*[in]*/ float Points,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall raw_PointsToPicas (
        /*[in]*/ float Points,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall raw_PointsToLines (
        /*[in]*/ float Points,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall raw_PointsToPixels (
        /*[in]*/ float Points,
        /*[in]*/ VARIANT * fVertical,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall raw_PixelsToPoints (
        /*[in]*/ float Pixels,
        /*[in]*/ VARIANT * fVertical,
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageSettings (
        /*[out,retval]*/ struct Office::LanguageSettings * * prop ) = 0;
      virtual HRESULT __stdcall get_AnswerWizard (
        /*[out,retval]*/ struct Office::AnswerWizard * * prop ) = 0;
      virtual HRESULT __stdcall get_AutoCorrectEmail (
        /*[out,retval]*/ struct AutoCorrect * * prop ) = 0;
};

struct __declspec(uuid("0002096b-0000-0000-c000-000000000046"))
_Document : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCustomDocumentProperties))
    IDispatchPtr CustomDocumentProperties;
    __declspec(property(get=GetPath))
    _bstr_t Path;
    __declspec(property(get=GetBookmarks))
    BookmarksPtr Bookmarks;
    __declspec(property(get=Get_CodeName,put=Put_CodeName))
    _bstr_t _CodeName;
    __declspec(property(get=GetTables))
    TablesPtr Tables;
    __declspec(property(get=GetFootnotes))
    FootnotesPtr Footnotes;
    __declspec(property(get=GetEndnotes))
    EndnotesPtr Endnotes;
    __declspec(property(get=GetComments))
    CommentsPtr Comments;
    __declspec(property(get=GetType))
    enum WdDocumentType Type;
    __declspec(property(get=GetAutoHyphenation,put=PutAutoHyphenation))
    VARIANT_BOOL AutoHyphenation;
    __declspec(property(get=GetHyphenateCaps,put=PutHyphenateCaps))
    VARIANT_BOOL HyphenateCaps;
    __declspec(property(get=GetHyphenationZone,put=PutHyphenationZone))
    long HyphenationZone;
    __declspec(property(get=GetConsecutiveHyphensLimit,put=PutConsecutiveHyphensLimit))
    long ConsecutiveHyphensLimit;
    __declspec(property(get=GetSections))
    SectionsPtr Sections;
    __declspec(property(get=GetParagraphs))
    ParagraphsPtr Paragraphs;
    __declspec(property(get=GetWords))
    WordsPtr Words;
    __declspec(property(get=GetSentences))
    SentencesPtr Sentences;
    __declspec(property(get=GetCharacters))
    CharactersPtr Characters;
    __declspec(property(get=GetFields))
    FieldsPtr Fields;
    __declspec(property(get=GetFormFields))
    FormFieldsPtr FormFields;
    __declspec(property(get=GetStyles))
    StylesPtr Styles;
    __declspec(property(get=GetFrames))
    FramesPtr Frames;
    __declspec(property(get=GetTextEncoding,put=PutTextEncoding))
    enum Office::MsoEncoding TextEncoding;
    __declspec(property(get=GetTablesOfFigures))
    TablesOfFiguresPtr TablesOfFigures;
    __declspec(property(get=GetVariables))
    VariablesPtr Variables;
    __declspec(property(get=GetMailMerge))
    MailMergePtr MailMerge;
    __declspec(property(get=GetEnvelope))
    EnvelopePtr Envelope;
    __declspec(property(get=GetFullName))
    _bstr_t FullName;
    __declspec(property(get=GetRevisions))
    RevisionsPtr Revisions;
    __declspec(property(get=GetTablesOfContents))
    TablesOfContentsPtr TablesOfContents;
    __declspec(property(get=GetTablesOfAuthorities))
    TablesOfAuthoritiesPtr TablesOfAuthorities;
    __declspec(property(get=GetPageSetup,put=PutPageSetup))
    PageSetupPtr PageSetup;
    __declspec(property(get=GetWindows))
    WindowsPtr Windows;
    __declspec(property(get=GetHasRoutingSlip,put=PutHasRoutingSlip))
    VARIANT_BOOL HasRoutingSlip;
    __declspec(property(get=GetRoutingSlip))
    RoutingSlipPtr RoutingSlip;
    __declspec(property(get=GetRouted))
    VARIANT_BOOL Routed;
    __declspec(property(get=GetTablesOfAuthoritiesCategories))
    TablesOfAuthoritiesCategoriesPtr TablesOfAuthoritiesCategories;
    __declspec(property(get=GetIndexes))
    IndexesPtr Indexes;
    __declspec(property(get=GetSaved,put=PutSaved))
    VARIANT_BOOL Saved;
    __declspec(property(get=GetContent))
    RangePtr Content;
    __declspec(property(get=GetActiveWindow))
    WindowPtr ActiveWindow;
    __declspec(property(get=GetKind,put=PutKind))
    enum WdDocumentKind Kind;
    __declspec(property(get=GetReadOnly))
    VARIANT_BOOL ReadOnly;
    __declspec(property(get=GetSubdocuments))
    SubdocumentsPtr Subdocuments;
    __declspec(property(get=GetIsMasterDocument))
    VARIANT_BOOL IsMasterDocument;
    __declspec(property(get=GetTextLineEnding,put=PutTextLineEnding))
    enum WdLineEndingType TextLineEnding;
    __declspec(property(get=GetDefaultTabStop,put=PutDefaultTabStop))
    float DefaultTabStop;
    __declspec(property(get=GetStyleSheets))
    StyleSheetsPtr StyleSheets;
    __declspec(property(get=GetEmbedTrueTypeFonts,put=PutEmbedTrueTypeFonts))
    VARIANT_BOOL EmbedTrueTypeFonts;
    __declspec(property(get=GetSaveFormsData,put=PutSaveFormsData))
    VARIANT_BOOL SaveFormsData;
    __declspec(property(get=GetReadOnlyRecommended,put=PutReadOnlyRecommended))
    VARIANT_BOOL ReadOnlyRecommended;
    __declspec(property(get=GetSaveSubsetFonts,put=PutSaveSubsetFonts))
    VARIANT_BOOL SaveSubsetFonts;
    __declspec(property(get=GetDefaultTableStyle))
    _variant_t DefaultTableStyle;
    __declspec(property(get=GetCompatibility,put=PutCompatibility))
    VARIANT_BOOL Compatibility[];
    __declspec(property(get=GetStoryRanges))
    StoryRangesPtr StoryRanges;
    __declspec(property(get=GetCommandBars))
    Office::_CommandBarsPtr CommandBars;
    __declspec(property(get=GetIsSubdocument))
    VARIANT_BOOL IsSubdocument;
    __declspec(property(get=GetSaveFormat))
    long SaveFormat;
    __declspec(property(get=GetProtectionType))
    enum WdProtectionType ProtectionType;
    __declspec(property(get=GetHyperlinks))
    HyperlinksPtr Hyperlinks;
    __declspec(property(get=GetShapes))
    ShapesPtr Shapes;
    __declspec(property(get=GetListTemplates))
    ListTemplatesPtr ListTemplates;
    __declspec(property(get=GetLists))
    ListsPtr Lists;
    __declspec(property(get=GetPasswordEncryptionProvider))
    _bstr_t PasswordEncryptionProvider;
    __declspec(property(get=GetUpdateStylesOnOpen,put=PutUpdateStylesOnOpen))
    VARIANT_BOOL UpdateStylesOnOpen;
    __declspec(property(get=GetInlineShapes))
    InlineShapesPtr InlineShapes;
    __declspec(property(get=GetBackground,put=PutBackground))
    ShapePtr Background;
    __declspec(property(get=GetGrammarChecked,put=PutGrammarChecked))
    VARIANT_BOOL GrammarChecked;
    __declspec(property(get=GetSpellingChecked,put=PutSpellingChecked))
    VARIANT_BOOL SpellingChecked;
    __declspec(property(get=GetShowGrammaticalErrors,put=PutShowGrammaticalErrors))
    VARIANT_BOOL ShowGrammaticalErrors;
    __declspec(property(get=GetShowSpellingErrors,put=PutShowSpellingErrors))
    VARIANT_BOOL ShowSpellingErrors;
    __declspec(property(get=GetPasswordEncryptionAlgorithm))
    _bstr_t PasswordEncryptionAlgorithm;
    __declspec(property(get=GetVersions))
    VersionsPtr Versions;
    __declspec(property(get=GetShowSummary,put=PutShowSummary))
    VARIANT_BOOL ShowSummary;
    __declspec(property(get=GetSummaryViewMode,put=PutSummaryViewMode))
    enum WdSummaryMode SummaryViewMode;
    __declspec(property(get=GetSummaryLength,put=PutSummaryLength))
    long SummaryLength;
    __declspec(property(get=GetPrintFractionalWidths,put=PutPrintFractionalWidths))
    VARIANT_BOOL PrintFractionalWidths;
    __declspec(property(get=GetPrintPostScriptOverText,put=PutPrintPostScriptOverText))
    VARIANT_BOOL PrintPostScriptOverText;
    __declspec(property(get=GetPasswordEncryptionKeyLength))
    long PasswordEncryptionKeyLength;
    __declspec(property(get=GetContainer))
    IDispatchPtr Container;
    __declspec(property(get=GetPrintFormsData,put=PutPrintFormsData))
    VARIANT_BOOL PrintFormsData;
    __declspec(property(get=GetListParagraphs))
    ListParagraphsPtr ListParagraphs;
    __declspec(property(put=PutPassword))
    _bstr_t Password;
    __declspec(property(put=PutWritePassword))
    _bstr_t WritePassword;
    __declspec(property(get=GetHasPassword))
    VARIANT_BOOL HasPassword;
    __declspec(property(get=GetWriteReserved))
    VARIANT_BOOL WriteReserved;
    __declspec(property(get=GetPasswordEncryptionFileProperties))
    VARIANT_BOOL PasswordEncryptionFileProperties;
    __declspec(property(get=GetActiveWritingStyle,put=PutActiveWritingStyle))
    _bstr_t ActiveWritingStyle[];
    __declspec(property(get=GetEmbedLinguisticData,put=PutEmbedLinguisticData))
    VARIANT_BOOL EmbedLinguisticData;
    __declspec(property(get=GetUserControl,put=PutUserControl))
    VARIANT_BOOL UserControl;
    __declspec(property(get=GetHasMailer,put=PutHasMailer))
    VARIANT_BOOL HasMailer;
    __declspec(property(get=GetMailer))
    MailerPtr Mailer;
    __declspec(property(get=GetFormattingShowFont,put=PutFormattingShowFont))
    VARIANT_BOOL FormattingShowFont;
    __declspec(property(get=GetReadabilityStatistics))
    ReadabilityStatisticsPtr ReadabilityStatistics;
    __declspec(property(get=GetGrammaticalErrors))
    ProofreadingErrorsPtr GrammaticalErrors;
    __declspec(property(get=GetSpellingErrors))
    ProofreadingErrorsPtr SpellingErrors;
    __declspec(property(get=GetVBProject))
    VBE6::_VBProjectPtr VBProject;
    __declspec(property(get=GetFormsDesign))
    VARIANT_BOOL FormsDesign;
    __declspec(property(get=GetFormattingShowClear,put=PutFormattingShowClear))
    VARIANT_BOOL FormattingShowClear;
    __declspec(property(get=GetFormattingShowParagraph,put=PutFormattingShowParagraph))
    VARIANT_BOOL FormattingShowParagraph;
    __declspec(property(get=GetFormattingShowNumbering,put=PutFormattingShowNumbering))
    VARIANT_BOOL FormattingShowNumbering;
    __declspec(property(get=GetFormattingShowFilter,put=PutFormattingShowFilter))
    enum WdShowFilter FormattingShowFilter;
    __declspec(property(get=GetPermission))
    Office::PermissionPtr Permission;
    __declspec(property(get=GetXMLNodes))
    XMLNodesPtr XMLNodes;
    __declspec(property(get=GetXMLSchemaReferences))
    XMLSchemaReferencesPtr XMLSchemaReferences;
    __declspec(property(get=GetSmartDocument))
    Office::SmartDocumentPtr SmartDocument;
    __declspec(property(get=GetSharedWorkspace))
    Office::SharedWorkspacePtr SharedWorkspace;
    __declspec(property(get=GetSync))
    Office::SyncPtr Sync;
    __declspec(property(get=GetEnforceStyle,put=PutEnforceStyle))
    VARIANT_BOOL EnforceStyle;
    __declspec(property(get=GetAutoFormatOverride,put=PutAutoFormatOverride))
    VARIANT_BOOL AutoFormatOverride;
    __declspec(property(get=GetXMLSaveDataOnly,put=PutXMLSaveDataOnly))
    VARIANT_BOOL XMLSaveDataOnly;
    __declspec(property(get=GetXMLUseXSLTWhenSaving,put=PutXMLUseXSLTWhenSaving))
    VARIANT_BOOL XMLUseXSLTWhenSaving;
    __declspec(property(get=GetXMLSaveThroughXSLT,put=PutXMLSaveThroughXSLT))
    _bstr_t XMLSaveThroughXSLT;
    __declspec(property(get=GetDocumentLibraryVersions))
    Office::DocumentLibraryVersionsPtr DocumentLibraryVersions;
    __declspec(property(get=GetXMLHideNamespaces,put=PutXMLHideNamespaces))
    VARIANT_BOOL XMLHideNamespaces;
    __declspec(property(get=GetXMLShowAdvancedErrors,put=PutXMLShowAdvancedErrors))
    VARIANT_BOOL XMLShowAdvancedErrors;
    __declspec(property(get=GetReadingModeLayoutFrozen,put=PutReadingModeLayoutFrozen))
    VARIANT_BOOL ReadingModeLayoutFrozen;
    __declspec(property(get=GetRemoveDateAndTime,put=PutRemoveDateAndTime))
    VARIANT_BOOL RemoveDateAndTime;
    __declspec(property(get=GetChildNodeSuggestions))
    XMLChildNodeSuggestionsPtr ChildNodeSuggestions;
    __declspec(property(get=GetXMLSchemaViolations))
    XMLNodesPtr XMLSchemaViolations;
    __declspec(property(get=GetReadingLayoutSizeX,put=PutReadingLayoutSizeX))
    long ReadingLayoutSizeX;
    __declspec(property(get=GetReadingLayoutSizeY,put=PutReadingLayoutSizeY))
    long ReadingLayoutSizeY;
    __declspec(property(get=GetStyleSortMethod,put=PutStyleSortMethod))
    enum WdStyleSort StyleSortMethod;
    __declspec(property(get=GetContentTypeProperties))
    Office::MetaPropertiesPtr ContentTypeProperties;
    __declspec(property(get=GetTrackMoves,put=PutTrackMoves))
    VARIANT_BOOL TrackMoves;
    __declspec(property(get=GetTrackFormatting,put=PutTrackFormatting))
    VARIANT_BOOL TrackFormatting;
    __declspec(property(get=GetOMaths))
    OMathsPtr OMaths;
    __declspec(property(get=GetServerPolicy))
    Office::ServerPolicyPtr ServerPolicy;
    __declspec(property(get=GetContentControls))
    ContentControlsPtr ContentControls;
    __declspec(property(get=GetDocumentInspectors))
    Office::DocumentInspectorsPtr DocumentInspectors;
    __declspec(property(get=GetBibliography))
    BibliographyPtr Bibliography;
    __declspec(property(get=GetLockTheme,put=PutLockTheme))
    VARIANT_BOOL LockTheme;
    __declspec(property(get=GetLockQuickStyleSet,put=PutLockQuickStyleSet))
    VARIANT_BOOL LockQuickStyleSet;
    __declspec(property(get=GetOriginalDocumentTitle))
    _bstr_t OriginalDocumentTitle;
    __declspec(property(get=GetRevisedDocumentTitle))
    _bstr_t RevisedDocumentTitle;
    __declspec(property(get=GetCustomXMLParts))
    Office::_CustomXMLPartsPtr CustomXMLParts;
    __declspec(property(get=GetFormattingShowNextLevel,put=PutFormattingShowNextLevel))
    VARIANT_BOOL FormattingShowNextLevel;
    __declspec(property(get=GetFormattingShowUserStyleName,put=PutFormattingShowUserStyleName))
    VARIANT_BOOL FormattingShowUserStyleName;
    __declspec(property(get=GetResearch))
    ResearchPtr Research;
    __declspec(property(get=GetFinal,put=PutFinal))
    VARIANT_BOOL Final;
    __declspec(property(get=GetOMathBreakBin,put=PutOMathBreakBin))
    enum WdOMathBreakBin OMathBreakBin;
    __declspec(property(get=GetOMathBreakSub,put=PutOMathBreakSub))
    enum WdOMathBreakSub OMathBreakSub;
    __declspec(property(get=GetOMathJc,put=PutOMathJc))
    enum WdOMathJc OMathJc;
    __declspec(property(get=GetOMathLeftMargin,put=PutOMathLeftMargin))
    float OMathLeftMargin;
    __declspec(property(get=GetOMathRightMargin,put=PutOMathRightMargin))
    float OMathRightMargin;
    __declspec(property(get=GetOMathWrap,put=PutOMathWrap))
    float OMathWrap;
    __declspec(property(get=GetOMathIntSubSupLim,put=PutOMathIntSubSupLim))
    VARIANT_BOOL OMathIntSubSupLim;
    __declspec(property(get=GetOMathNarySupSubLim,put=PutOMathNarySupSubLim))
    VARIANT_BOOL OMathNarySupSubLim;
    __declspec(property(get=GetOMathSmallFrac,put=PutOMathSmallFrac))
    VARIANT_BOOL OMathSmallFrac;
    __declspec(property(get=GetActiveTheme))
    _bstr_t ActiveTheme;
    __declspec(property(get=GetActiveThemeDisplayName))
    _bstr_t ActiveThemeDisplayName;
    __declspec(property(get=GetWordOpenXML))
    _bstr_t WordOpenXML;
    __declspec(property(get=GetDocumentTheme))
    Office::OfficeThemePtr DocumentTheme;
    __declspec(property(get=GetHasVBProject))
    VARIANT_BOOL HasVBProject;
    __declspec(property(get=GetOMathFontName,put=PutOMathFontName))
    _bstr_t OMathFontName;
    __declspec(property(get=GetEncryptionProvider,put=PutEncryptionProvider))
    _bstr_t EncryptionProvider;
    __declspec(property(get=GetUseMathDefaults,put=PutUseMathDefaults))
    VARIANT_BOOL UseMathDefaults;
    __declspec(property(get=GetCurrentRsid))
    long CurrentRsid;
    __declspec(property(get=GetCodeName))
    _bstr_t CodeName;
    __declspec(property(get=GetBuiltInDocumentProperties))
    IDispatchPtr BuiltInDocumentProperties;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetSnapToGrid,put=PutSnapToGrid))
    VARIANT_BOOL SnapToGrid;
    __declspec(property(get=GetSnapToShapes,put=PutSnapToShapes))
    VARIANT_BOOL SnapToShapes;
    __declspec(property(get=GetGridDistanceHorizontal,put=PutGridDistanceHorizontal))
    float GridDistanceHorizontal;
    __declspec(property(get=GetGridDistanceVertical,put=PutGridDistanceVertical))
    float GridDistanceVertical;
    __declspec(property(get=GetGridOriginHorizontal,put=PutGridOriginHorizontal))
    float GridOriginHorizontal;
    __declspec(property(get=GetGridOriginVertical,put=PutGridOriginVertical))
    float GridOriginVertical;
    __declspec(property(get=GetGridSpaceBetweenHorizontalLines,put=PutGridSpaceBetweenHorizontalLines))
    long GridSpaceBetweenHorizontalLines;
    __declspec(property(get=GetGridSpaceBetweenVerticalLines,put=PutGridSpaceBetweenVerticalLines))
    long GridSpaceBetweenVerticalLines;
    __declspec(property(get=GetGridOriginFromMargin,put=PutGridOriginFromMargin))
    VARIANT_BOOL GridOriginFromMargin;
    __declspec(property(get=GetKerningByAlgorithm,put=PutKerningByAlgorithm))
    VARIANT_BOOL KerningByAlgorithm;
    __declspec(property(get=GetJustificationMode,put=PutJustificationMode))
    enum WdJustificationMode JustificationMode;
    __declspec(property(get=GetFarEastLineBreakLevel,put=PutFarEastLineBreakLevel))
    enum WdFarEastLineBreakLevel FarEastLineBreakLevel;
    __declspec(property(get=GetNoLineBreakBefore,put=PutNoLineBreakBefore))
    _bstr_t NoLineBreakBefore;
    __declspec(property(get=GetNoLineBreakAfter,put=PutNoLineBreakAfter))
    _bstr_t NoLineBreakAfter;
    __declspec(property(get=GetTrackRevisions,put=PutTrackRevisions))
    VARIANT_BOOL TrackRevisions;
    __declspec(property(get=GetPrintRevisions,put=PutPrintRevisions))
    VARIANT_BOOL PrintRevisions;
    __declspec(property(get=GetShowRevisions,put=PutShowRevisions))
    VARIANT_BOOL ShowRevisions;
    __declspec(property(get=GetEmail))
    EmailPtr Email;
    __declspec(property(get=GetScripts))
    Office::ScriptsPtr Scripts;
    __declspec(property(get=GetLanguageDetected,put=PutLanguageDetected))
    VARIANT_BOOL LanguageDetected;
    __declspec(property(get=GetFarEastLineBreakLanguage,put=PutFarEastLineBreakLanguage))
    enum WdFarEastLineBreakLanguageID FarEastLineBreakLanguage;
    __declspec(property(get=GetFrameset))
    FramesetPtr Frameset;
    __declspec(property(get=GetHTMLProject))
    Office::HTMLProjectPtr HTMLProject;
    __declspec(property(get=GetWebOptions))
    WebOptionsPtr WebOptions;
    __declspec(property(get=GetOpenEncoding))
    enum Office::MsoEncoding OpenEncoding;
    __declspec(property(get=GetSaveEncoding,put=PutSaveEncoding))
    enum Office::MsoEncoding SaveEncoding;
    __declspec(property(get=GetOptimizeForWord97,put=PutOptimizeForWord97))
    VARIANT_BOOL OptimizeForWord97;
    __declspec(property(get=GetVBASigned))
    VARIANT_BOOL VBASigned;
    __declspec(property(get=GetMailEnvelope))
    Office::IMsoEnvelopeVBPtr MailEnvelope;
    __declspec(property(get=GetDisableFeatures,put=PutDisableFeatures))
    VARIANT_BOOL DisableFeatures;
    __declspec(property(get=GetDoNotEmbedSystemFonts,put=PutDoNotEmbedSystemFonts))
    VARIANT_BOOL DoNotEmbedSystemFonts;
    __declspec(property(get=GetSignatures))
    Office::SignatureSetPtr Signatures;
    __declspec(property(get=GetDefaultTargetFrame,put=PutDefaultTargetFrame))
    _bstr_t DefaultTargetFrame;
    __declspec(property(get=GetHTMLDivisions))
    HTMLDivisionsPtr HTMLDivisions;
    __declspec(property(get=GetDisableFeaturesIntroducedAfter,put=PutDisableFeaturesIntroducedAfter))
    enum WdDisableFeaturesIntroducedAfter DisableFeaturesIntroducedAfter;
    __declspec(property(get=GetRemovePersonalInformation,put=PutRemovePersonalInformation))
    VARIANT_BOOL RemovePersonalInformation;
    __declspec(property(get=GetSmartTags))
    SmartTagsPtr SmartTags;
    __declspec(property(get=GetEmbedSmartTags,put=PutEmbedSmartTags))
    VARIANT_BOOL EmbedSmartTags;
    __declspec(property(get=GetSmartTagsAsXMLProps,put=PutSmartTagsAsXMLProps))
    VARIANT_BOOL SmartTagsAsXMLProps;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetBuiltInDocumentProperties ( );
    IDispatchPtr GetCustomDocumentProperties ( );
    _bstr_t GetPath ( );
    BookmarksPtr GetBookmarks ( );
    TablesPtr GetTables ( );
    FootnotesPtr GetFootnotes ( );
    EndnotesPtr GetEndnotes ( );
    CommentsPtr GetComments ( );
    enum WdDocumentType GetType ( );
    VARIANT_BOOL GetAutoHyphenation ( );
    void PutAutoHyphenation (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetHyphenateCaps ( );
    void PutHyphenateCaps (
        VARIANT_BOOL prop );
    long GetHyphenationZone ( );
    void PutHyphenationZone (
        long prop );
    long GetConsecutiveHyphensLimit ( );
    void PutConsecutiveHyphensLimit (
        long prop );
    SectionsPtr GetSections ( );
    ParagraphsPtr GetParagraphs ( );
    WordsPtr GetWords ( );
    SentencesPtr GetSentences ( );
    CharactersPtr GetCharacters ( );
    FieldsPtr GetFields ( );
    FormFieldsPtr GetFormFields ( );
    StylesPtr GetStyles ( );
    FramesPtr GetFrames ( );
    TablesOfFiguresPtr GetTablesOfFigures ( );
    VariablesPtr GetVariables ( );
    MailMergePtr GetMailMerge ( );
    EnvelopePtr GetEnvelope ( );
    _bstr_t GetFullName ( );
    RevisionsPtr GetRevisions ( );
    TablesOfContentsPtr GetTablesOfContents ( );
    TablesOfAuthoritiesPtr GetTablesOfAuthorities ( );
    PageSetupPtr GetPageSetup ( );
    void PutPageSetup (
        struct PageSetup * prop );
    WindowsPtr GetWindows ( );
    VARIANT_BOOL GetHasRoutingSlip ( );
    void PutHasRoutingSlip (
        VARIANT_BOOL prop );
    RoutingSlipPtr GetRoutingSlip ( );
    VARIANT_BOOL GetRouted ( );
    TablesOfAuthoritiesCategoriesPtr GetTablesOfAuthoritiesCategories ( );
    IndexesPtr GetIndexes ( );
    VARIANT_BOOL GetSaved ( );
    void PutSaved (
        VARIANT_BOOL prop );
    RangePtr GetContent ( );
    WindowPtr GetActiveWindow ( );
    enum WdDocumentKind GetKind ( );
    void PutKind (
        enum WdDocumentKind prop );
    VARIANT_BOOL GetReadOnly ( );
    SubdocumentsPtr GetSubdocuments ( );
    VARIANT_BOOL GetIsMasterDocument ( );
    float GetDefaultTabStop ( );
    void PutDefaultTabStop (
        float prop );
    VARIANT_BOOL GetEmbedTrueTypeFonts ( );
    void PutEmbedTrueTypeFonts (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetSaveFormsData ( );
    void PutSaveFormsData (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetReadOnlyRecommended ( );
    void PutReadOnlyRecommended (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetSaveSubsetFonts ( );
    void PutSaveSubsetFonts (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetCompatibility (
        enum WdCompatibility Type );
    void PutCompatibility (
        enum WdCompatibility Type,
        VARIANT_BOOL prop );
    StoryRangesPtr GetStoryRanges ( );
    Office::_CommandBarsPtr GetCommandBars ( );
    VARIANT_BOOL GetIsSubdocument ( );
    long GetSaveFormat ( );
    enum WdProtectionType GetProtectionType ( );
    HyperlinksPtr GetHyperlinks ( );
    ShapesPtr GetShapes ( );
    ListTemplatesPtr GetListTemplates ( );
    ListsPtr GetLists ( );
    VARIANT_BOOL GetUpdateStylesOnOpen ( );
    void PutUpdateStylesOnOpen (
        VARIANT_BOOL prop );
    _variant_t GetAttachedTemplate ( );
    void PutAttachedTemplate (
        VARIANT * prop );
    InlineShapesPtr GetInlineShapes ( );
    ShapePtr GetBackground ( );
    void PutBackground (
        struct Shape * prop );
    VARIANT_BOOL GetGrammarChecked ( );
    void PutGrammarChecked (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetSpellingChecked ( );
    void PutSpellingChecked (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowGrammaticalErrors ( );
    void PutShowGrammaticalErrors (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowSpellingErrors ( );
    void PutShowSpellingErrors (
        VARIANT_BOOL prop );
    VersionsPtr GetVersions ( );
    VARIANT_BOOL GetShowSummary ( );
    void PutShowSummary (
        VARIANT_BOOL prop );
    enum WdSummaryMode GetSummaryViewMode ( );
    void PutSummaryViewMode (
        enum WdSummaryMode prop );
    long GetSummaryLength ( );
    void PutSummaryLength (
        long prop );
    VARIANT_BOOL GetPrintFractionalWidths ( );
    void PutPrintFractionalWidths (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetPrintPostScriptOverText ( );
    void PutPrintPostScriptOverText (
        VARIANT_BOOL prop );
    IDispatchPtr GetContainer ( );
    VARIANT_BOOL GetPrintFormsData ( );
    void PutPrintFormsData (
        VARIANT_BOOL prop );
    ListParagraphsPtr GetListParagraphs ( );
    void PutPassword (
        _bstr_t _arg1 );
    void PutWritePassword (
        _bstr_t _arg1 );
    VARIANT_BOOL GetHasPassword ( );
    VARIANT_BOOL GetWriteReserved ( );
    _bstr_t GetActiveWritingStyle (
        VARIANT * LanguageID );
    void PutActiveWritingStyle (
        VARIANT * LanguageID,
        _bstr_t prop );
    VARIANT_BOOL GetUserControl ( );
    void PutUserControl (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetHasMailer ( );
    void PutHasMailer (
        VARIANT_BOOL prop );
    MailerPtr GetMailer ( );
    ReadabilityStatisticsPtr GetReadabilityStatistics ( );
    ProofreadingErrorsPtr GetGrammaticalErrors ( );
    ProofreadingErrorsPtr GetSpellingErrors ( );
    VBE6::_VBProjectPtr GetVBProject ( );
    VARIANT_BOOL GetFormsDesign ( );
    _bstr_t Get_CodeName ( );
    void Put_CodeName (
        _bstr_t prop );
    _bstr_t GetCodeName ( );
    VARIANT_BOOL GetSnapToGrid ( );
    void PutSnapToGrid (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetSnapToShapes ( );
    void PutSnapToShapes (
        VARIANT_BOOL prop );
    float GetGridDistanceHorizontal ( );
    void PutGridDistanceHorizontal (
        float prop );
    float GetGridDistanceVertical ( );
    void PutGridDistanceVertical (
        float prop );
    float GetGridOriginHorizontal ( );
    void PutGridOriginHorizontal (
        float prop );
    float GetGridOriginVertical ( );
    void PutGridOriginVertical (
        float prop );
    long GetGridSpaceBetweenHorizontalLines ( );
    void PutGridSpaceBetweenHorizontalLines (
        long prop );
    long GetGridSpaceBetweenVerticalLines ( );
    void PutGridSpaceBetweenVerticalLines (
        long prop );
    VARIANT_BOOL GetGridOriginFromMargin ( );
    void PutGridOriginFromMargin (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetKerningByAlgorithm ( );
    void PutKerningByAlgorithm (
        VARIANT_BOOL prop );
    enum WdJustificationMode GetJustificationMode ( );
    void PutJustificationMode (
        enum WdJustificationMode prop );
    enum WdFarEastLineBreakLevel GetFarEastLineBreakLevel ( );
    void PutFarEastLineBreakLevel (
        enum WdFarEastLineBreakLevel prop );
    _bstr_t GetNoLineBreakBefore ( );
    void PutNoLineBreakBefore (
        _bstr_t prop );
    _bstr_t GetNoLineBreakAfter ( );
    void PutNoLineBreakAfter (
        _bstr_t prop );
    VARIANT_BOOL GetTrackRevisions ( );
    void PutTrackRevisions (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetPrintRevisions ( );
    void PutPrintRevisions (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetShowRevisions ( );
    void PutShowRevisions (
        VARIANT_BOOL prop );
    HRESULT Close (
        VARIANT * SaveChanges = &vtMissing,
        VARIANT * OriginalFormat = &vtMissing,
        VARIANT * RouteDocument = &vtMissing );
    HRESULT SaveAs2000 (
        VARIANT * FileName = &vtMissing,
        VARIANT * FileFormat = &vtMissing,
        VARIANT * LockComments = &vtMissing,
        VARIANT * Password = &vtMissing,
        VARIANT * AddToRecentFiles = &vtMissing,
        VARIANT * WritePassword = &vtMissing,
        VARIANT * ReadOnlyRecommended = &vtMissing,
        VARIANT * EmbedTrueTypeFonts = &vtMissing,
        VARIANT * SaveNativePictureFormat = &vtMissing,
        VARIANT * SaveFormsData = &vtMissing,
        VARIANT * SaveAsAOCELetter = &vtMissing );
    HRESULT Repaginate ( );
    HRESULT FitToPages ( );
    HRESULT ManualHyphenation ( );
    HRESULT Select ( );
    HRESULT DataForm ( );
    HRESULT Route ( );
    HRESULT Save ( );
    HRESULT PrintOutOld (
        VARIANT * Background = &vtMissing,
        VARIANT * Append = &vtMissing,
        VARIANT * Range = &vtMissing,
        VARIANT * OutputFileName = &vtMissing,
        VARIANT * From = &vtMissing,
        VARIANT * To = &vtMissing,
        VARIANT * Item = &vtMissing,
        VARIANT * Copies = &vtMissing,
        VARIANT * Pages = &vtMissing,
        VARIANT * PageType = &vtMissing,
        VARIANT * PrintToFile = &vtMissing,
        VARIANT * Collate = &vtMissing,
        VARIANT * ActivePrinterMacGX = &vtMissing,
        VARIANT * ManualDuplexPrint = &vtMissing );
    HRESULT SendMail ( );
    RangePtr Range (
        VARIANT * Start = &vtMissing,
        VARIANT * End = &vtMissing );
    HRESULT RunAutoMacro (
        enum WdAutoMacros Which );
    HRESULT Activate ( );
    HRESULT PrintPreview ( );
    RangePtr GoTo (
        VARIANT * What = &vtMissing,
        VARIANT * Which = &vtMissing,
        VARIANT * Count = &vtMissing,
        VARIANT * Name = &vtMissing );
    VARIANT_BOOL Undo (
        VARIANT * Times = &vtMissing );
    VARIANT_BOOL Redo (
        VARIANT * Times = &vtMissing );
    long ComputeStatistics (
        enum WdStatistic Statistic,
        VARIANT * IncludeFootnotesAndEndnotes = &vtMissing );
    HRESULT MakeCompatibilityDefault ( );
    HRESULT Protect2002 (
        enum WdProtectionType Type,
        VARIANT * NoReset = &vtMissing,
        VARIANT * Password = &vtMissing );
    HRESULT Unprotect (
        VARIANT * Password = &vtMissing );
    HRESULT EditionOptions (
        enum WdEditionType Type,
        enum WdEditionOption Option,
        _bstr_t Name,
        VARIANT * Format = &vtMissing );
    HRESULT RunLetterWizard (
        VARIANT * LetterContent = &vtMissing,
        VARIANT * WizardMode = &vtMissing );
    _LetterContentPtr GetLetterContent ( );
    HRESULT SetLetterContent (
        VARIANT * LetterContent );
    HRESULT CopyStylesFromTemplate (
        _bstr_t Template );
    HRESULT UpdateStyles ( );
    HRESULT CheckGrammar ( );
    HRESULT CheckSpelling (
        VARIANT * CustomDictionary = &vtMissing,
        VARIANT * IgnoreUppercase = &vtMissing,
        VARIANT * AlwaysSuggest = &vtMissing,
        VARIANT * CustomDictionary2 = &vtMissing,
        VARIANT * CustomDictionary3 = &vtMissing,
        VARIANT * CustomDictionary4 = &vtMissing,
        VARIANT * CustomDictionary5 = &vtMissing,
        VARIANT * CustomDictionary6 = &vtMissing,
        VARIANT * CustomDictionary7 = &vtMissing,
        VARIANT * CustomDictionary8 = &vtMissing,
        VARIANT * CustomDictionary9 = &vtMissing,
        VARIANT * CustomDictionary10 = &vtMissing );
    HRESULT FollowHyperlink (
        VARIANT * Address = &vtMissing,
        VARIANT * SubAddress = &vtMissing,
        VARIANT * NewWindow = &vtMissing,
        VARIANT * AddHistory = &vtMissing,
        VARIANT * ExtraInfo = &vtMissing,
        VARIANT * Method = &vtMissing,
        VARIANT * HeaderInfo = &vtMissing );
    HRESULT AddToFavorites ( );
    HRESULT Reload ( );
    RangePtr AutoSummarize (
        VARIANT * Length = &vtMissing,
        VARIANT * Mode = &vtMissing,
        VARIANT * UpdateProperties = &vtMissing );
    HRESULT RemoveNumbers (
        VARIANT * NumberType = &vtMissing );
    HRESULT ConvertNumbersToText (
        VARIANT * NumberType = &vtMissing );
    long CountNumberedItems (
        VARIANT * NumberType = &vtMissing,
        VARIANT * Level = &vtMissing );
    HRESULT Post ( );
    HRESULT ToggleFormsDesign ( );
    HRESULT Compare2000 (
        _bstr_t Name );
    HRESULT UpdateSummaryProperties ( );
    _variant_t GetCrossReferenceItems (
        VARIANT * ReferenceType );
    HRESULT AutoFormat ( );
    HRESULT ViewCode ( );
    HRESULT ViewPropertyBrowser ( );
    HRESULT ForwardMailer ( );
    HRESULT Reply ( );
    HRESULT ReplyAll ( );
    HRESULT SendMailer (
        VARIANT * FileFormat = &vtMissing,
        VARIANT * Priority = &vtMissing );
    HRESULT UndoClear ( );
    HRESULT PresentIt ( );
    HRESULT SendFax (
        _bstr_t Address,
        VARIANT * Subject = &vtMissing );
    HRESULT Merge2000 (
        _bstr_t FileName );
    HRESULT ClosePrintPreview ( );
    HRESULT CheckConsistency ( );
    _LetterContentPtr CreateLetterContent (
        _bstr_t DateFormat,
        VARIANT_BOOL IncludeHeaderFooter,
        _bstr_t PageDesign,
        enum WdLetterStyle LetterStyle,
        VARIANT_BOOL Letterhead,
        enum WdLetterheadLocation LetterheadLocation,
        float LetterheadSize,
        _bstr_t RecipientName,
        _bstr_t RecipientAddress,
        _bstr_t Salutation,
        enum WdSalutationType SalutationType,
        _bstr_t RecipientReference,
        _bstr_t MailingInstructions,
        _bstr_t AttentionLine,
        _bstr_t Subject,
        _bstr_t CCList,
        _bstr_t ReturnAddress,
        _bstr_t SenderName,
        _bstr_t Closing,
        _bstr_t SenderCompany,
        _bstr_t SenderJobTitle,
        _bstr_t SenderInitials,
        long EnclosureNumber,
        VARIANT * InfoBlock = &vtMissing,
        VARIANT * RecipientCode = &vtMissing,
        VARIANT * RecipientGender = &vtMissing,
        VARIANT * ReturnAddressShortForm = &vtMissing,
        VARIANT * SenderCity = &vtMissing,
        VARIANT * SenderCode = &vtMissing,
        VARIANT * SenderGender = &vtMissing,
        VARIANT * SenderReference = &vtMissing );
    HRESULT AcceptAllRevisions ( );
    HRESULT RejectAllRevisions ( );
    HRESULT DetectLanguage ( );
    HRESULT ApplyTheme (
        _bstr_t Name );
    HRESULT RemoveTheme ( );
    HRESULT WebPagePreview ( );
    HRESULT ReloadAs (
        enum Office::MsoEncoding Encoding );
    _bstr_t GetActiveTheme ( );
    _bstr_t GetActiveThemeDisplayName ( );
    EmailPtr GetEmail ( );
    Office::ScriptsPtr GetScripts ( );
    VARIANT_BOOL GetLanguageDetected ( );
    void PutLanguageDetected (
        VARIANT_BOOL prop );
    enum WdFarEastLineBreakLanguageID GetFarEastLineBreakLanguage ( );
    void PutFarEastLineBreakLanguage (
        enum WdFarEastLineBreakLanguageID prop );
    FramesetPtr GetFrameset ( );
    _variant_t GetClickAndTypeParagraphStyle ( );
    void PutClickAndTypeParagraphStyle (
        VARIANT * prop );
    Office::HTMLProjectPtr GetHTMLProject ( );
    WebOptionsPtr GetWebOptions ( );
    enum Office::MsoEncoding GetOpenEncoding ( );
    enum Office::MsoEncoding GetSaveEncoding ( );
    void PutSaveEncoding (
        enum Office::MsoEncoding prop );
    VARIANT_BOOL GetOptimizeForWord97 ( );
    void PutOptimizeForWord97 (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetVBASigned ( );
    HRESULT PrintOut2000 (
        VARIANT * Background = &vtMissing,
        VARIANT * Append = &vtMissing,
        VARIANT * Range = &vtMissing,
        VARIANT * OutputFileName = &vtMissing,
        VARIANT * From = &vtMissing,
        VARIANT * To = &vtMissing,
        VARIANT * Item = &vtMissing,
        VARIANT * Copies = &vtMissing,
        VARIANT * Pages = &vtMissing,
        VARIANT * PageType = &vtMissing,
        VARIANT * PrintToFile = &vtMissing,
        VARIANT * Collate = &vtMissing,
        VARIANT * ActivePrinterMacGX = &vtMissing,
        VARIANT * ManualDuplexPrint = &vtMissing,
        VARIANT * PrintZoomColumn = &vtMissing,
        VARIANT * PrintZoomRow = &vtMissing,
        VARIANT * PrintZoomPaperWidth = &vtMissing,
        VARIANT * PrintZoomPaperHeight = &vtMissing );
    HRESULT sblt (
        _bstr_t s );
    HRESULT ConvertVietDoc (
        long CodePageOrigin );
    HRESULT PrintOut (
        VARIANT * Background = &vtMissing,
        VARIANT * Append = &vtMissing,
        VARIANT * Range = &vtMissing,
        VARIANT * OutputFileName = &vtMissing,
        VARIANT * From = &vtMissing,
        VARIANT * To = &vtMissing,
        VARIANT * Item = &vtMissing,
        VARIANT * Copies = &vtMissing,
        VARIANT * Pages = &vtMissing,
        VARIANT * PageType = &vtMissing,
        VARIANT * PrintToFile = &vtMissing,
        VARIANT * Collate = &vtMissing,
        VARIANT * ActivePrinterMacGX = &vtMissing,
        VARIANT * ManualDuplexPrint = &vtMissing,
        VARIANT * PrintZoomColumn = &vtMissing,
        VARIANT * PrintZoomRow = &vtMissing,
        VARIANT * PrintZoomPaperWidth = &vtMissing,
        VARIANT * PrintZoomPaperHeight = &vtMissing );
    Office::IMsoEnvelopeVBPtr GetMailEnvelope ( );
    VARIANT_BOOL GetDisableFeatures ( );
    void PutDisableFeatures (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetDoNotEmbedSystemFonts ( );
    void PutDoNotEmbedSystemFonts (
        VARIANT_BOOL prop );
    Office::SignatureSetPtr GetSignatures ( );
    _bstr_t GetDefaultTargetFrame ( );
    void PutDefaultTargetFrame (
        _bstr_t prop );
    HTMLDivisionsPtr GetHTMLDivisions ( );
    enum WdDisableFeaturesIntroducedAfter GetDisableFeaturesIntroducedAfter ( );
    void PutDisableFeaturesIntroducedAfter (
        enum WdDisableFeaturesIntroducedAfter prop );
    VARIANT_BOOL GetRemovePersonalInformation ( );
    void PutRemovePersonalInformation (
        VARIANT_BOOL prop );
    SmartTagsPtr GetSmartTags ( );
    HRESULT Compare2002 (
        _bstr_t Name,
        VARIANT * AuthorName = &vtMissing,
        VARIANT * CompareTarget = &vtMissing,
        VARIANT * DetectFormatChanges = &vtMissing,
        VARIANT * IgnoreAllComparisonWarnings = &vtMissing,
        VARIANT * AddToRecentFiles = &vtMissing );
    HRESULT CheckIn (
        VARIANT_BOOL SaveChanges,
        VARIANT * Comments,
        VARIANT_BOOL MakePublic );
    VARIANT_BOOL CanCheckin ( );
    HRESULT Merge (
        _bstr_t FileName,
        VARIANT * MergeTarget = &vtMissing,
        VARIANT * DetectFormatChanges = &vtMissing,
        VARIANT * UseFormattingFrom = &vtMissing,
        VARIANT * AddToRecentFiles = &vtMissing );
    VARIANT_BOOL GetEmbedSmartTags ( );
    void PutEmbedSmartTags (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetSmartTagsAsXMLProps ( );
    void PutSmartTagsAsXMLProps (
        VARIANT_BOOL prop );
    enum Office::MsoEncoding GetTextEncoding ( );
    void PutTextEncoding (
        enum Office::MsoEncoding prop );
    enum WdLineEndingType GetTextLineEnding ( );
    void PutTextLineEnding (
        enum WdLineEndingType prop );
    HRESULT SendForReview (
        VARIANT * Recipients = &vtMissing,
        VARIANT * Subject = &vtMissing,
        VARIANT * ShowMessage = &vtMissing,
        VARIANT * IncludeAttachment = &vtMissing );
    HRESULT ReplyWithChanges (
        VARIANT * ShowMessage = &vtMissing );
    HRESULT EndReview ( );
    StyleSheetsPtr GetStyleSheets ( );
    _variant_t GetDefaultTableStyle ( );
    _bstr_t GetPasswordEncryptionProvider ( );
    _bstr_t GetPasswordEncryptionAlgorithm ( );
    long GetPasswordEncryptionKeyLength ( );
    VARIANT_BOOL GetPasswordEncryptionFileProperties ( );
    HRESULT SetPasswordEncryptionOptions (
        _bstr_t PasswordEncryptionProvider,
        _bstr_t PasswordEncryptionAlgorithm,
        long PasswordEncryptionKeyLength,
        VARIANT * PasswordEncryptionFileProperties = &vtMissing );
    HRESULT RecheckSmartTags ( );
    HRESULT RemoveSmartTags ( );
    HRESULT SetDefaultTableStyle (
        VARIANT * Style,
        VARIANT_BOOL SetInTemplate );
    HRESULT DeleteAllComments ( );
    HRESULT AcceptAllRevisionsShown ( );
    HRESULT RejectAllRevisionsShown ( );
    HRESULT DeleteAllCommentsShown ( );
    HRESULT ResetFormFields ( );
    HRESULT SaveAs (
        VARIANT * FileName = &vtMissing,
        VARIANT * FileFormat = &vtMissing,
        VARIANT * LockComments = &vtMissing,
        VARIANT * Password = &vtMissing,
        VARIANT * AddToRecentFiles = &vtMissing,
        VARIANT * WritePassword = &vtMissing,
        VARIANT * ReadOnlyRecommended = &vtMissing,
        VARIANT * EmbedTrueTypeFonts = &vtMissing,
        VARIANT * SaveNativePictureFormat = &vtMissing,
        VARIANT * SaveFormsData = &vtMissing,
        VARIANT * SaveAsAOCELetter = &vtMissing,
        VARIANT * Encoding = &vtMissing,
        VARIANT * InsertLineBreaks = &vtMissing,
        VARIANT * AllowSubstitutions = &vtMissing,
        VARIANT * LineEnding = &vtMissing,
        VARIANT * AddBiDiMarks = &vtMissing );
    VARIANT_BOOL GetEmbedLinguisticData ( );
    void PutEmbedLinguisticData (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetFormattingShowFont ( );
    void PutFormattingShowFont (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetFormattingShowClear ( );
    void PutFormattingShowClear (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetFormattingShowParagraph ( );
    void PutFormattingShowParagraph (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetFormattingShowNumbering ( );
    void PutFormattingShowNumbering (
        VARIANT_BOOL prop );
    enum WdShowFilter GetFormattingShowFilter ( );
    void PutFormattingShowFilter (
        enum WdShowFilter prop );
    HRESULT CheckNewSmartTags ( );
    Office::PermissionPtr GetPermission ( );
    XMLNodesPtr GetXMLNodes ( );
    XMLSchemaReferencesPtr GetXMLSchemaReferences ( );
    Office::SmartDocumentPtr GetSmartDocument ( );
    Office::SharedWorkspacePtr GetSharedWorkspace ( );
    Office::SyncPtr GetSync ( );
    VARIANT_BOOL GetEnforceStyle ( );
    void PutEnforceStyle (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatOverride ( );
    void PutAutoFormatOverride (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetXMLSaveDataOnly ( );
    void PutXMLSaveDataOnly (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetXMLHideNamespaces ( );
    void PutXMLHideNamespaces (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetXMLShowAdvancedErrors ( );
    void PutXMLShowAdvancedErrors (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetXMLUseXSLTWhenSaving ( );
    void PutXMLUseXSLTWhenSaving (
        VARIANT_BOOL prop );
    _bstr_t GetXMLSaveThroughXSLT ( );
    void PutXMLSaveThroughXSLT (
        _bstr_t prop );
    Office::DocumentLibraryVersionsPtr GetDocumentLibraryVersions ( );
    VARIANT_BOOL GetReadingModeLayoutFrozen ( );
    void PutReadingModeLayoutFrozen (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetRemoveDateAndTime ( );
    void PutRemoveDateAndTime (
        VARIANT_BOOL prop );
    HRESULT SendFaxOverInternet (
        VARIANT * Recipients = &vtMissing,
        VARIANT * Subject = &vtMissing,
        VARIANT * ShowMessage = &vtMissing );
    HRESULT TransformDocument (
        _bstr_t Path,
        VARIANT_BOOL DataOnly );
    HRESULT Protect (
        enum WdProtectionType Type,
        VARIANT * NoReset = &vtMissing,
        VARIANT * Password = &vtMissing,
        VARIANT * UseIRM = &vtMissing,
        VARIANT * EnforceStyleLock = &vtMissing );
    HRESULT SelectAllEditableRanges (
        VARIANT * EditorID = &vtMissing );
    HRESULT DeleteAllEditableRanges (
        VARIANT * EditorID = &vtMissing );
    HRESULT DeleteAllInkAnnotations ( );
    HRESULT AddDocumentWorkspaceHeader (
        VARIANT_BOOL RichFormat,
        _bstr_t Url,
        _bstr_t Title,
        _bstr_t Description,
        _bstr_t ID );
    HRESULT RemoveDocumentWorkspaceHeader (
        _bstr_t ID );
    HRESULT Compare (
        _bstr_t Name,
        VARIANT * AuthorName = &vtMissing,
        VARIANT * CompareTarget = &vtMissing,
        VARIANT * DetectFormatChanges = &vtMissing,
        VARIANT * IgnoreAllComparisonWarnings = &vtMissing,
        VARIANT * AddToRecentFiles = &vtMissing,
        VARIANT * RemovePersonalInformation = &vtMissing,
        VARIANT * RemoveDateAndTime = &vtMissing );
    HRESULT RemoveLockedStyles ( );
    XMLChildNodeSuggestionsPtr GetChildNodeSuggestions ( );
    XMLNodePtr SelectSingleNode (
        _bstr_t XPath,
        _bstr_t PrefixMapping,
        VARIANT_BOOL FastSearchSkippingTextNodes );
    XMLNodesPtr SelectNodes (
        _bstr_t XPath,
        _bstr_t PrefixMapping,
        VARIANT_BOOL FastSearchSkippingTextNodes );
    XMLNodesPtr GetXMLSchemaViolations ( );
    long GetReadingLayoutSizeX ( );
    void PutReadingLayoutSizeX (
        long prop );
    long GetReadingLayoutSizeY ( );
    void PutReadingLayoutSizeY (
        long prop );
    enum WdStyleSort GetStyleSortMethod ( );
    void PutStyleSortMethod (
        enum WdStyleSort prop );
    Office::MetaPropertiesPtr GetContentTypeProperties ( );
    VARIANT_BOOL GetTrackMoves ( );
    void PutTrackMoves (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetTrackFormatting ( );
    void PutTrackFormatting (
        VARIANT_BOOL prop );
    void GetDummy1 ( );
    OMathsPtr GetOMaths ( );
    HRESULT RemoveDocumentInformation (
        enum WdRemoveDocInfoType RemoveDocInfoType );
    HRESULT CheckInWithVersion (
        VARIANT_BOOL SaveChanges,
        VARIANT * Comments,
        VARIANT_BOOL MakePublic,
        VARIANT * VersionType = &vtMissing );
    HRESULT Dummy2 ( );
    void GetDummy3 ( );
    Office::ServerPolicyPtr GetServerPolicy ( );
    ContentControlsPtr GetContentControls ( );
    Office::DocumentInspectorsPtr GetDocumentInspectors ( );
    HRESULT LockServerFile ( );
    Office::WorkflowTasksPtr GetWorkflowTasks ( );
    Office::WorkflowTemplatesPtr GetWorkflowTemplates ( );
    HRESULT Dummy4 ( );
    HRESULT AddMeetingWorkspaceHeader (
        VARIANT_BOOL SkipIfAbsent,
        _bstr_t Url,
        _bstr_t Title,
        _bstr_t Description,
        _bstr_t ID );
    BibliographyPtr GetBibliography ( );
    VARIANT_BOOL GetLockTheme ( );
    void PutLockTheme (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetLockQuickStyleSet ( );
    void PutLockQuickStyleSet (
        VARIANT_BOOL prop );
    _bstr_t GetOriginalDocumentTitle ( );
    _bstr_t GetRevisedDocumentTitle ( );
    Office::_CustomXMLPartsPtr GetCustomXMLParts ( );
    VARIANT_BOOL GetFormattingShowNextLevel ( );
    void PutFormattingShowNextLevel (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetFormattingShowUserStyleName ( );
    void PutFormattingShowUserStyleName (
        VARIANT_BOOL prop );
    HRESULT SaveAsQuickStyleSet (
        _bstr_t FileName );
    HRESULT ApplyQuickStyleSet (
        _bstr_t Name );
    ResearchPtr GetResearch ( );
    VARIANT_BOOL GetFinal ( );
    void PutFinal (
        VARIANT_BOOL prop );
    enum WdOMathBreakBin GetOMathBreakBin ( );
    void PutOMathBreakBin (
        enum WdOMathBreakBin prop );
    enum WdOMathBreakSub GetOMathBreakSub ( );
    void PutOMathBreakSub (
        enum WdOMathBreakSub prop );
    enum WdOMathJc GetOMathJc ( );
    void PutOMathJc (
        enum WdOMathJc prop );
    float GetOMathLeftMargin ( );
    void PutOMathLeftMargin (
        float prop );
    float GetOMathRightMargin ( );
    void PutOMathRightMargin (
        float prop );
    float GetOMathWrap ( );
    void PutOMathWrap (
        float prop );
    VARIANT_BOOL GetOMathIntSubSupLim ( );
    void PutOMathIntSubSupLim (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetOMathNarySupSubLim ( );
    void PutOMathNarySupSubLim (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetOMathSmallFrac ( );
    void PutOMathSmallFrac (
        VARIANT_BOOL prop );
    _bstr_t GetWordOpenXML ( );
    Office::OfficeThemePtr GetDocumentTheme ( );
    HRESULT ApplyDocumentTheme (
        _bstr_t FileName );
    VARIANT_BOOL GetHasVBProject ( );
    ContentControlsPtr SelectLinkedControls (
        struct Office::CustomXMLNode * Node );
    ContentControlsPtr SelectUnlinkedControls (
        struct Office::_CustomXMLPart * Stream );
    ContentControlsPtr SelectContentControlsByTitle (
        _bstr_t Title );
    HRESULT ExportAsFixedFormat (
        _bstr_t OutputFileName,
        enum WdExportFormat ExportFormat,
        VARIANT_BOOL OpenAfterExport,
        enum WdExportOptimizeFor OptimizeFor,
        enum WdExportRange Range,
        long From,
        long To,
        enum WdExportItem Item,
        VARIANT_BOOL IncludeDocProps,
        VARIANT_BOOL KeepIRM,
        enum WdExportCreateBookmarks CreateBookmarks,
        VARIANT_BOOL DocStructureTags,
        VARIANT_BOOL BitmapMissingFonts,
        VARIANT_BOOL UseISO19005_1,
        VARIANT * FixedFormatExtClassPtr = &vtMissing );
    HRESULT FreezeLayout ( );
    HRESULT UnfreezeLayout ( );
    _bstr_t GetOMathFontName ( );
    void PutOMathFontName (
        _bstr_t prop );
    HRESULT DowngradeDocument ( );
    _bstr_t GetEncryptionProvider ( );
    void PutEncryptionProvider (
        _bstr_t prop );
    VARIANT_BOOL GetUseMathDefaults ( );
    void PutUseMathDefaults (
        VARIANT_BOOL prop );
    long GetCurrentRsid ( );
    HRESULT Convert ( );
    ContentControlsPtr SelectContentControlsByTag (
        _bstr_t Tag );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_BuiltInDocumentProperties (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_CustomDocumentProperties (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Bookmarks (
        /*[out,retval]*/ struct Bookmarks * * prop ) = 0;
      virtual HRESULT __stdcall get_Tables (
        /*[out,retval]*/ struct Tables * * prop ) = 0;
      virtual HRESULT __stdcall get_Footnotes (
        /*[out,retval]*/ struct Footnotes * * prop ) = 0;
      virtual HRESULT __stdcall get_Endnotes (
        /*[out,retval]*/ struct Endnotes * * prop ) = 0;
      virtual HRESULT __stdcall get_Comments (
        /*[out,retval]*/ struct Comments * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdDocumentType * prop ) = 0;
      virtual HRESULT __stdcall get_AutoHyphenation (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoHyphenation (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HyphenateCaps (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HyphenateCaps (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HyphenationZone (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_HyphenationZone (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ConsecutiveHyphensLimit (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ConsecutiveHyphensLimit (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Sections (
        /*[out,retval]*/ struct Sections * * prop ) = 0;
      virtual HRESULT __stdcall get_Paragraphs (
        /*[out,retval]*/ struct Paragraphs * * prop ) = 0;
      virtual HRESULT __stdcall get_Words (
        /*[out,retval]*/ struct Words * * prop ) = 0;
      virtual HRESULT __stdcall get_Sentences (
        /*[out,retval]*/ struct Sentences * * prop ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[out,retval]*/ struct Characters * * prop ) = 0;
      virtual HRESULT __stdcall get_Fields (
        /*[out,retval]*/ struct Fields * * prop ) = 0;
      virtual HRESULT __stdcall get_FormFields (
        /*[out,retval]*/ struct FormFields * * prop ) = 0;
      virtual HRESULT __stdcall get_Styles (
        /*[out,retval]*/ struct Styles * * prop ) = 0;
      virtual HRESULT __stdcall get_Frames (
        /*[out,retval]*/ struct Frames * * prop ) = 0;
      virtual HRESULT __stdcall get_TablesOfFigures (
        /*[out,retval]*/ struct TablesOfFigures * * prop ) = 0;
      virtual HRESULT __stdcall get_Variables (
        /*[out,retval]*/ struct Variables * * prop ) = 0;
      virtual HRESULT __stdcall get_MailMerge (
        /*[out,retval]*/ struct MailMerge * * prop ) = 0;
      virtual HRESULT __stdcall get_Envelope (
        /*[out,retval]*/ struct Envelope * * prop ) = 0;
      virtual HRESULT __stdcall get_FullName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Revisions (
        /*[out,retval]*/ struct Revisions * * prop ) = 0;
      virtual HRESULT __stdcall get_TablesOfContents (
        /*[out,retval]*/ struct TablesOfContents * * prop ) = 0;
      virtual HRESULT __stdcall get_TablesOfAuthorities (
        /*[out,retval]*/ struct TablesOfAuthorities * * prop ) = 0;
      virtual HRESULT __stdcall get_PageSetup (
        /*[out,retval]*/ struct PageSetup * * prop ) = 0;
      virtual HRESULT __stdcall put_PageSetup (
        /*[in]*/ struct PageSetup * prop ) = 0;
      virtual HRESULT __stdcall get_Windows (
        /*[out,retval]*/ struct Windows * * prop ) = 0;
      virtual HRESULT __stdcall get_HasRoutingSlip (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HasRoutingSlip (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RoutingSlip (
        /*[out,retval]*/ struct RoutingSlip * * prop ) = 0;
      virtual HRESULT __stdcall get_Routed (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_TablesOfAuthoritiesCategories (
        /*[out,retval]*/ struct TablesOfAuthoritiesCategories * * prop ) = 0;
      virtual HRESULT __stdcall get_Indexes (
        /*[out,retval]*/ struct Indexes * * prop ) = 0;
      virtual HRESULT __stdcall get_Saved (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Saved (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Content (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveWindow (
        /*[out,retval]*/ struct Window * * prop ) = 0;
      virtual HRESULT __stdcall get_Kind (
        /*[out,retval]*/ enum WdDocumentKind * prop ) = 0;
      virtual HRESULT __stdcall put_Kind (
        /*[in]*/ enum WdDocumentKind prop ) = 0;
      virtual HRESULT __stdcall get_ReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Subdocuments (
        /*[out,retval]*/ struct Subdocuments * * prop ) = 0;
      virtual HRESULT __stdcall get_IsMasterDocument (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultTabStop (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultTabStop (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_EmbedTrueTypeFonts (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EmbedTrueTypeFonts (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SaveFormsData (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SaveFormsData (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ReadOnlyRecommended (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ReadOnlyRecommended (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SaveSubsetFonts (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SaveSubsetFonts (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Compatibility (
        /*[in]*/ enum WdCompatibility Type,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Compatibility (
        /*[in]*/ enum WdCompatibility Type,
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_StoryRanges (
        /*[out,retval]*/ struct StoryRanges * * prop ) = 0;
      virtual HRESULT __stdcall get_CommandBars (
        /*[out,retval]*/ struct Office::_CommandBars * * prop ) = 0;
      virtual HRESULT __stdcall get_IsSubdocument (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_SaveFormat (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_ProtectionType (
        /*[out,retval]*/ enum WdProtectionType * prop ) = 0;
      virtual HRESULT __stdcall get_Hyperlinks (
        /*[out,retval]*/ struct Hyperlinks * * prop ) = 0;
      virtual HRESULT __stdcall get_Shapes (
        /*[out,retval]*/ struct Shapes * * prop ) = 0;
      virtual HRESULT __stdcall get_ListTemplates (
        /*[out,retval]*/ struct ListTemplates * * prop ) = 0;
      virtual HRESULT __stdcall get_Lists (
        /*[out,retval]*/ struct Lists * * prop ) = 0;
      virtual HRESULT __stdcall get_UpdateStylesOnOpen (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UpdateStylesOnOpen (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AttachedTemplate (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_AttachedTemplate (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_InlineShapes (
        /*[out,retval]*/ struct InlineShapes * * prop ) = 0;
      virtual HRESULT __stdcall get_Background (
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall put_Background (
        /*[in]*/ struct Shape * prop ) = 0;
      virtual HRESULT __stdcall get_GrammarChecked (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_GrammarChecked (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SpellingChecked (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SpellingChecked (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowGrammaticalErrors (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowGrammaticalErrors (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowSpellingErrors (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowSpellingErrors (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Versions (
        /*[out,retval]*/ struct Versions * * prop ) = 0;
      virtual HRESULT __stdcall get_ShowSummary (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowSummary (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SummaryViewMode (
        /*[out,retval]*/ enum WdSummaryMode * prop ) = 0;
      virtual HRESULT __stdcall put_SummaryViewMode (
        /*[in]*/ enum WdSummaryMode prop ) = 0;
      virtual HRESULT __stdcall get_SummaryLength (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SummaryLength (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_PrintFractionalWidths (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintFractionalWidths (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintPostScriptOverText (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintPostScriptOverText (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Container (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_PrintFormsData (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintFormsData (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ListParagraphs (
        /*[out,retval]*/ struct ListParagraphs * * prop ) = 0;
      virtual HRESULT __stdcall put_Password (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall put_WritePassword (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_HasPassword (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_WriteReserved (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveWritingStyle (
        /*[in]*/ VARIANT * LanguageID,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ActiveWritingStyle (
        /*[in]*/ VARIANT * LanguageID,
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_UserControl (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UserControl (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HasMailer (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HasMailer (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Mailer (
        /*[out,retval]*/ struct Mailer * * prop ) = 0;
      virtual HRESULT __stdcall get_ReadabilityStatistics (
        /*[out,retval]*/ struct ReadabilityStatistics * * prop ) = 0;
      virtual HRESULT __stdcall get_GrammaticalErrors (
        /*[out,retval]*/ struct ProofreadingErrors * * prop ) = 0;
      virtual HRESULT __stdcall get_SpellingErrors (
        /*[out,retval]*/ struct ProofreadingErrors * * prop ) = 0;
      virtual HRESULT __stdcall get_VBProject (
        /*[out,retval]*/ struct VBE6::_VBProject * * prop ) = 0;
      virtual HRESULT __stdcall get_FormsDesign (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get__CodeName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put__CodeName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_CodeName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_SnapToGrid (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SnapToGrid (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SnapToShapes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SnapToShapes (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_GridDistanceHorizontal (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_GridDistanceHorizontal (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_GridDistanceVertical (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_GridDistanceVertical (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_GridOriginHorizontal (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_GridOriginHorizontal (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_GridOriginVertical (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_GridOriginVertical (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_GridSpaceBetweenHorizontalLines (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_GridSpaceBetweenHorizontalLines (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_GridSpaceBetweenVerticalLines (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_GridSpaceBetweenVerticalLines (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_GridOriginFromMargin (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_GridOriginFromMargin (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_KerningByAlgorithm (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_KerningByAlgorithm (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_JustificationMode (
        /*[out,retval]*/ enum WdJustificationMode * prop ) = 0;
      virtual HRESULT __stdcall put_JustificationMode (
        /*[in]*/ enum WdJustificationMode prop ) = 0;
      virtual HRESULT __stdcall get_FarEastLineBreakLevel (
        /*[out,retval]*/ enum WdFarEastLineBreakLevel * prop ) = 0;
      virtual HRESULT __stdcall put_FarEastLineBreakLevel (
        /*[in]*/ enum WdFarEastLineBreakLevel prop ) = 0;
      virtual HRESULT __stdcall get_NoLineBreakBefore (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NoLineBreakBefore (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_NoLineBreakAfter (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NoLineBreakAfter (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_TrackRevisions (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_TrackRevisions (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PrintRevisions (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PrintRevisions (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowRevisions (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowRevisions (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall raw_Close (
        /*[in]*/ VARIANT * SaveChanges = &vtMissing,
        /*[in]*/ VARIANT * OriginalFormat = &vtMissing,
        /*[in]*/ VARIANT * RouteDocument = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_SaveAs2000 (
        /*[in]*/ VARIANT * FileName = &vtMissing,
        /*[in]*/ VARIANT * FileFormat = &vtMissing,
        /*[in]*/ VARIANT * LockComments = &vtMissing,
        /*[in]*/ VARIANT * Password = &vtMissing,
        /*[in]*/ VARIANT * AddToRecentFiles = &vtMissing,
        /*[in]*/ VARIANT * WritePassword = &vtMissing,
        /*[in]*/ VARIANT * ReadOnlyRecommended = &vtMissing,
        /*[in]*/ VARIANT * EmbedTrueTypeFonts = &vtMissing,
        /*[in]*/ VARIANT * SaveNativePictureFormat = &vtMissing,
        /*[in]*/ VARIANT * SaveFormsData = &vtMissing,
        /*[in]*/ VARIANT * SaveAsAOCELetter = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Repaginate ( ) = 0;
      virtual HRESULT __stdcall raw_FitToPages ( ) = 0;
      virtual HRESULT __stdcall raw_ManualHyphenation ( ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
      virtual HRESULT __stdcall raw_DataForm ( ) = 0;
      virtual HRESULT __stdcall raw_Route ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall raw_PrintOutOld (
        /*[in]*/ VARIANT * Background = &vtMissing,
        /*[in]*/ VARIANT * Append = &vtMissing,
        /*[in]*/ VARIANT * Range = &vtMissing,
        /*[in]*/ VARIANT * OutputFileName = &vtMissing,
        /*[in]*/ VARIANT * From = &vtMissing,
        /*[in]*/ VARIANT * To = &vtMissing,
        /*[in]*/ VARIANT * Item = &vtMissing,
        /*[in]*/ VARIANT * Copies = &vtMissing,
        /*[in]*/ VARIANT * Pages = &vtMissing,
        /*[in]*/ VARIANT * PageType = &vtMissing,
        /*[in]*/ VARIANT * PrintToFile = &vtMissing,
        /*[in]*/ VARIANT * Collate = &vtMissing,
        /*[in]*/ VARIANT * ActivePrinterMacGX = &vtMissing,
        /*[in]*/ VARIANT * ManualDuplexPrint = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_SendMail ( ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[in]*/ VARIANT * Start,
        /*[in]*/ VARIANT * End,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall raw_RunAutoMacro (
        /*[in]*/ enum WdAutoMacros Which ) = 0;
      virtual HRESULT __stdcall raw_Activate ( ) = 0;
      virtual HRESULT __stdcall raw_PrintPreview ( ) = 0;
      virtual HRESULT __stdcall raw_GoTo (
        /*[in]*/ VARIANT * What,
        /*[in]*/ VARIANT * Which,
        /*[in]*/ VARIANT * Count,
        /*[in]*/ VARIANT * Name,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall raw_Undo (
        /*[in]*/ VARIANT * Times,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_Redo (
        /*[in]*/ VARIANT * Times,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_ComputeStatistics (
        /*[in]*/ enum WdStatistic Statistic,
        /*[in]*/ VARIANT * IncludeFootnotesAndEndnotes,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_MakeCompatibilityDefault ( ) = 0;
      virtual HRESULT __stdcall raw_Protect2002 (
        /*[in]*/ enum WdProtectionType Type,
        /*[in]*/ VARIANT * NoReset = &vtMissing,
        /*[in]*/ VARIANT * Password = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Unprotect (
        /*[in]*/ VARIANT * Password = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_EditionOptions (
        /*[in]*/ enum WdEditionType Type,
        /*[in]*/ enum WdEditionOption Option,
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * Format = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_RunLetterWizard (
        /*[in]*/ VARIANT * LetterContent = &vtMissing,
        /*[in]*/ VARIANT * WizardMode = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_GetLetterContent (
        /*[out,retval]*/ struct _LetterContent * * prop ) = 0;
      virtual HRESULT __stdcall raw_SetLetterContent (
        /*[in]*/ VARIANT * LetterContent ) = 0;
      virtual HRESULT __stdcall raw_CopyStylesFromTemplate (
        /*[in]*/ BSTR Template ) = 0;
      virtual HRESULT __stdcall raw_UpdateStyles ( ) = 0;
      virtual HRESULT __stdcall raw_CheckGrammar ( ) = 0;
      virtual HRESULT __stdcall raw_CheckSpelling (
        /*[in]*/ VARIANT * CustomDictionary = &vtMissing,
        /*[in]*/ VARIANT * IgnoreUppercase = &vtMissing,
        /*[in]*/ VARIANT * AlwaysSuggest = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary2 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary3 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary4 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary5 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary6 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary7 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary8 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary9 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary10 = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_FollowHyperlink (
        /*[in]*/ VARIANT * Address = &vtMissing,
        /*[in]*/ VARIANT * SubAddress = &vtMissing,
        /*[in]*/ VARIANT * NewWindow = &vtMissing,
        /*[in]*/ VARIANT * AddHistory = &vtMissing,
        /*[in]*/ VARIANT * ExtraInfo = &vtMissing,
        /*[in]*/ VARIANT * Method = &vtMissing,
        /*[in]*/ VARIANT * HeaderInfo = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_AddToFavorites ( ) = 0;
      virtual HRESULT __stdcall raw_Reload ( ) = 0;
      virtual HRESULT __stdcall raw_AutoSummarize (
        /*[in]*/ VARIANT * Length,
        /*[in]*/ VARIANT * Mode,
        /*[in]*/ VARIANT * UpdateProperties,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall raw_RemoveNumbers (
        /*[in]*/ VARIANT * NumberType = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_ConvertNumbersToText (
        /*[in]*/ VARIANT * NumberType = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_CountNumberedItems (
        /*[in]*/ VARIANT * NumberType,
        /*[in]*/ VARIANT * Level,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Post ( ) = 0;
      virtual HRESULT __stdcall raw_ToggleFormsDesign ( ) = 0;
      virtual HRESULT __stdcall raw_Compare2000 (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall raw_UpdateSummaryProperties ( ) = 0;
      virtual HRESULT __stdcall raw_GetCrossReferenceItems (
        /*[in]*/ VARIANT * ReferenceType,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall raw_AutoFormat ( ) = 0;
      virtual HRESULT __stdcall raw_ViewCode ( ) = 0;
      virtual HRESULT __stdcall raw_ViewPropertyBrowser ( ) = 0;
      virtual HRESULT __stdcall raw_ForwardMailer ( ) = 0;
      virtual HRESULT __stdcall raw_Reply ( ) = 0;
      virtual HRESULT __stdcall raw_ReplyAll ( ) = 0;
      virtual HRESULT __stdcall raw_SendMailer (
        /*[in]*/ VARIANT * FileFormat = &vtMissing,
        /*[in]*/ VARIANT * Priority = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_UndoClear ( ) = 0;
      virtual HRESULT __stdcall raw_PresentIt ( ) = 0;
      virtual HRESULT __stdcall raw_SendFax (
        /*[in]*/ BSTR Address,
        /*[in]*/ VARIANT * Subject = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Merge2000 (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_ClosePrintPreview ( ) = 0;
      virtual HRESULT __stdcall raw_CheckConsistency ( ) = 0;
      virtual HRESULT __stdcall raw_CreateLetterContent (
        /*[in]*/ BSTR DateFormat,
        /*[in]*/ VARIANT_BOOL IncludeHeaderFooter,
        /*[in]*/ BSTR PageDesign,
        /*[in]*/ enum WdLetterStyle LetterStyle,
        /*[in]*/ VARIANT_BOOL Letterhead,
        /*[in]*/ enum WdLetterheadLocation LetterheadLocation,
        /*[in]*/ float LetterheadSize,
        /*[in]*/ BSTR RecipientName,
        /*[in]*/ BSTR RecipientAddress,
        /*[in]*/ BSTR Salutation,
        /*[in]*/ enum WdSalutationType SalutationType,
        /*[in]*/ BSTR RecipientReference,
        /*[in]*/ BSTR MailingInstructions,
        /*[in]*/ BSTR AttentionLine,
        /*[in]*/ BSTR Subject,
        /*[in]*/ BSTR CCList,
        /*[in]*/ BSTR ReturnAddress,
        /*[in]*/ BSTR SenderName,
        /*[in]*/ BSTR Closing,
        /*[in]*/ BSTR SenderCompany,
        /*[in]*/ BSTR SenderJobTitle,
        /*[in]*/ BSTR SenderInitials,
        /*[in]*/ long EnclosureNumber,
        /*[in]*/ VARIANT * InfoBlock,
        /*[in]*/ VARIANT * RecipientCode,
        /*[in]*/ VARIANT * RecipientGender,
        /*[in]*/ VARIANT * ReturnAddressShortForm,
        /*[in]*/ VARIANT * SenderCity,
        /*[in]*/ VARIANT * SenderCode,
        /*[in]*/ VARIANT * SenderGender,
        /*[in]*/ VARIANT * SenderReference,
        /*[out,retval]*/ struct _LetterContent * * prop ) = 0;
      virtual HRESULT __stdcall raw_AcceptAllRevisions ( ) = 0;
      virtual HRESULT __stdcall raw_RejectAllRevisions ( ) = 0;
      virtual HRESULT __stdcall raw_DetectLanguage ( ) = 0;
      virtual HRESULT __stdcall raw_ApplyTheme (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall raw_RemoveTheme ( ) = 0;
      virtual HRESULT __stdcall raw_WebPagePreview ( ) = 0;
      virtual HRESULT __stdcall raw_ReloadAs (
        /*[in]*/ enum Office::MsoEncoding Encoding ) = 0;
      virtual HRESULT __stdcall get_ActiveTheme (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_ActiveThemeDisplayName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Email (
        /*[out,retval]*/ struct Email * * prop ) = 0;
      virtual HRESULT __stdcall get_Scripts (
        /*[out,retval]*/ struct Office::Scripts * * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageDetected (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageDetected (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FarEastLineBreakLanguage (
        /*[out,retval]*/ enum WdFarEastLineBreakLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_FarEastLineBreakLanguage (
        /*[in]*/ enum WdFarEastLineBreakLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_Frameset (
        /*[out,retval]*/ struct Frameset * * prop ) = 0;
      virtual HRESULT __stdcall get_ClickAndTypeParagraphStyle (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_ClickAndTypeParagraphStyle (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_HTMLProject (
        /*[out,retval]*/ struct Office::HTMLProject * * prop ) = 0;
      virtual HRESULT __stdcall get_WebOptions (
        /*[out,retval]*/ struct WebOptions * * prop ) = 0;
      virtual HRESULT __stdcall get_OpenEncoding (
        /*[out,retval]*/ enum Office::MsoEncoding * prop ) = 0;
      virtual HRESULT __stdcall get_SaveEncoding (
        /*[out,retval]*/ enum Office::MsoEncoding * prop ) = 0;
      virtual HRESULT __stdcall put_SaveEncoding (
        /*[in]*/ enum Office::MsoEncoding prop ) = 0;
      virtual HRESULT __stdcall get_OptimizeForWord97 (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OptimizeForWord97 (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_VBASigned (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_PrintOut2000 (
        /*[in]*/ VARIANT * Background = &vtMissing,
        /*[in]*/ VARIANT * Append = &vtMissing,
        /*[in]*/ VARIANT * Range = &vtMissing,
        /*[in]*/ VARIANT * OutputFileName = &vtMissing,
        /*[in]*/ VARIANT * From = &vtMissing,
        /*[in]*/ VARIANT * To = &vtMissing,
        /*[in]*/ VARIANT * Item = &vtMissing,
        /*[in]*/ VARIANT * Copies = &vtMissing,
        /*[in]*/ VARIANT * Pages = &vtMissing,
        /*[in]*/ VARIANT * PageType = &vtMissing,
        /*[in]*/ VARIANT * PrintToFile = &vtMissing,
        /*[in]*/ VARIANT * Collate = &vtMissing,
        /*[in]*/ VARIANT * ActivePrinterMacGX = &vtMissing,
        /*[in]*/ VARIANT * ManualDuplexPrint = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomColumn = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomRow = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomPaperWidth = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomPaperHeight = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_sblt (
        /*[in]*/ BSTR s ) = 0;
      virtual HRESULT __stdcall raw_ConvertVietDoc (
        /*[in]*/ long CodePageOrigin ) = 0;
      virtual HRESULT __stdcall raw_PrintOut (
        /*[in]*/ VARIANT * Background = &vtMissing,
        /*[in]*/ VARIANT * Append = &vtMissing,
        /*[in]*/ VARIANT * Range = &vtMissing,
        /*[in]*/ VARIANT * OutputFileName = &vtMissing,
        /*[in]*/ VARIANT * From = &vtMissing,
        /*[in]*/ VARIANT * To = &vtMissing,
        /*[in]*/ VARIANT * Item = &vtMissing,
        /*[in]*/ VARIANT * Copies = &vtMissing,
        /*[in]*/ VARIANT * Pages = &vtMissing,
        /*[in]*/ VARIANT * PageType = &vtMissing,
        /*[in]*/ VARIANT * PrintToFile = &vtMissing,
        /*[in]*/ VARIANT * Collate = &vtMissing,
        /*[in]*/ VARIANT * ActivePrinterMacGX = &vtMissing,
        /*[in]*/ VARIANT * ManualDuplexPrint = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomColumn = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomRow = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomPaperWidth = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomPaperHeight = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_MailEnvelope (
        /*[out,retval]*/ struct Office::IMsoEnvelopeVB * * prop ) = 0;
      virtual HRESULT __stdcall get_DisableFeatures (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisableFeatures (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DoNotEmbedSystemFonts (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DoNotEmbedSystemFonts (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Signatures (
        /*[out,retval]*/ struct Office::SignatureSet * * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultTargetFrame (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultTargetFrame (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_HTMLDivisions (
        /*[out,retval]*/ struct HTMLDivisions * * prop ) = 0;
      virtual HRESULT __stdcall get_DisableFeaturesIntroducedAfter (
        /*[out,retval]*/ enum WdDisableFeaturesIntroducedAfter * prop ) = 0;
      virtual HRESULT __stdcall put_DisableFeaturesIntroducedAfter (
        /*[in]*/ enum WdDisableFeaturesIntroducedAfter prop ) = 0;
      virtual HRESULT __stdcall get_RemovePersonalInformation (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RemovePersonalInformation (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SmartTags (
        /*[out,retval]*/ struct SmartTags * * prop ) = 0;
      virtual HRESULT __stdcall raw_Compare2002 (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * AuthorName = &vtMissing,
        /*[in]*/ VARIANT * CompareTarget = &vtMissing,
        /*[in]*/ VARIANT * DetectFormatChanges = &vtMissing,
        /*[in]*/ VARIANT * IgnoreAllComparisonWarnings = &vtMissing,
        /*[in]*/ VARIANT * AddToRecentFiles = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_CheckIn (
        /*[in]*/ VARIANT_BOOL SaveChanges,
        /*[in]*/ VARIANT * Comments,
        /*[in]*/ VARIANT_BOOL MakePublic ) = 0;
      virtual HRESULT __stdcall raw_CanCheckin (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_Merge (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT * MergeTarget = &vtMissing,
        /*[in]*/ VARIANT * DetectFormatChanges = &vtMissing,
        /*[in]*/ VARIANT * UseFormattingFrom = &vtMissing,
        /*[in]*/ VARIANT * AddToRecentFiles = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_EmbedSmartTags (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EmbedSmartTags (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SmartTagsAsXMLProps (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SmartTagsAsXMLProps (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_TextEncoding (
        /*[out,retval]*/ enum Office::MsoEncoding * prop ) = 0;
      virtual HRESULT __stdcall put_TextEncoding (
        /*[in]*/ enum Office::MsoEncoding prop ) = 0;
      virtual HRESULT __stdcall get_TextLineEnding (
        /*[out,retval]*/ enum WdLineEndingType * prop ) = 0;
      virtual HRESULT __stdcall put_TextLineEnding (
        /*[in]*/ enum WdLineEndingType prop ) = 0;
      virtual HRESULT __stdcall raw_SendForReview (
        /*[in]*/ VARIANT * Recipients = &vtMissing,
        /*[in]*/ VARIANT * Subject = &vtMissing,
        /*[in]*/ VARIANT * ShowMessage = &vtMissing,
        /*[in]*/ VARIANT * IncludeAttachment = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_ReplyWithChanges (
        /*[in]*/ VARIANT * ShowMessage = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_EndReview ( ) = 0;
      virtual HRESULT __stdcall get_StyleSheets (
        /*[out,retval]*/ struct StyleSheets * * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultTableStyle (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_PasswordEncryptionProvider (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_PasswordEncryptionAlgorithm (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_PasswordEncryptionKeyLength (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_PasswordEncryptionFileProperties (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_SetPasswordEncryptionOptions (
        /*[in]*/ BSTR PasswordEncryptionProvider,
        /*[in]*/ BSTR PasswordEncryptionAlgorithm,
        /*[in]*/ long PasswordEncryptionKeyLength,
        /*[in]*/ VARIANT * PasswordEncryptionFileProperties = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_RecheckSmartTags ( ) = 0;
      virtual HRESULT __stdcall raw_RemoveSmartTags ( ) = 0;
      virtual HRESULT __stdcall raw_SetDefaultTableStyle (
        /*[in]*/ VARIANT * Style,
        /*[in]*/ VARIANT_BOOL SetInTemplate ) = 0;
      virtual HRESULT __stdcall raw_DeleteAllComments ( ) = 0;
      virtual HRESULT __stdcall raw_AcceptAllRevisionsShown ( ) = 0;
      virtual HRESULT __stdcall raw_RejectAllRevisionsShown ( ) = 0;
      virtual HRESULT __stdcall raw_DeleteAllCommentsShown ( ) = 0;
      virtual HRESULT __stdcall raw_ResetFormFields ( ) = 0;
      virtual HRESULT __stdcall raw_SaveAs (
        /*[in]*/ VARIANT * FileName = &vtMissing,
        /*[in]*/ VARIANT * FileFormat = &vtMissing,
        /*[in]*/ VARIANT * LockComments = &vtMissing,
        /*[in]*/ VARIANT * Password = &vtMissing,
        /*[in]*/ VARIANT * AddToRecentFiles = &vtMissing,
        /*[in]*/ VARIANT * WritePassword = &vtMissing,
        /*[in]*/ VARIANT * ReadOnlyRecommended = &vtMissing,
        /*[in]*/ VARIANT * EmbedTrueTypeFonts = &vtMissing,
        /*[in]*/ VARIANT * SaveNativePictureFormat = &vtMissing,
        /*[in]*/ VARIANT * SaveFormsData = &vtMissing,
        /*[in]*/ VARIANT * SaveAsAOCELetter = &vtMissing,
        /*[in]*/ VARIANT * Encoding = &vtMissing,
        /*[in]*/ VARIANT * InsertLineBreaks = &vtMissing,
        /*[in]*/ VARIANT * AllowSubstitutions = &vtMissing,
        /*[in]*/ VARIANT * LineEnding = &vtMissing,
        /*[in]*/ VARIANT * AddBiDiMarks = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_EmbedLinguisticData (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EmbedLinguisticData (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FormattingShowFont (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FormattingShowFont (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FormattingShowClear (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FormattingShowClear (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FormattingShowParagraph (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FormattingShowParagraph (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FormattingShowNumbering (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FormattingShowNumbering (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FormattingShowFilter (
        /*[out,retval]*/ enum WdShowFilter * prop ) = 0;
      virtual HRESULT __stdcall put_FormattingShowFilter (
        /*[in]*/ enum WdShowFilter prop ) = 0;
      virtual HRESULT __stdcall raw_CheckNewSmartTags ( ) = 0;
      virtual HRESULT __stdcall get_Permission (
        /*[out,retval]*/ struct Office::Permission * * prop ) = 0;
      virtual HRESULT __stdcall get_XMLNodes (
        /*[out,retval]*/ struct XMLNodes * * prop ) = 0;
      virtual HRESULT __stdcall get_XMLSchemaReferences (
        /*[out,retval]*/ struct XMLSchemaReferences * * prop ) = 0;
      virtual HRESULT __stdcall get_SmartDocument (
        /*[out,retval]*/ struct Office::SmartDocument * * prop ) = 0;
      virtual HRESULT __stdcall get_SharedWorkspace (
        /*[out,retval]*/ struct Office::SharedWorkspace * * prop ) = 0;
      virtual HRESULT __stdcall get_Sync (
        /*[out,retval]*/ struct Office::Sync * * prop ) = 0;
      virtual HRESULT __stdcall get_EnforceStyle (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EnforceStyle (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatOverride (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatOverride (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_XMLSaveDataOnly (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_XMLSaveDataOnly (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_XMLHideNamespaces (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_XMLHideNamespaces (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_XMLShowAdvancedErrors (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_XMLShowAdvancedErrors (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_XMLUseXSLTWhenSaving (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_XMLUseXSLTWhenSaving (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_XMLSaveThroughXSLT (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_XMLSaveThroughXSLT (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_DocumentLibraryVersions (
        /*[out,retval]*/ struct Office::DocumentLibraryVersions * * prop ) = 0;
      virtual HRESULT __stdcall get_ReadingModeLayoutFrozen (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingModeLayoutFrozen (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RemoveDateAndTime (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RemoveDateAndTime (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall raw_SendFaxOverInternet (
        /*[in]*/ VARIANT * Recipients = &vtMissing,
        /*[in]*/ VARIANT * Subject = &vtMissing,
        /*[in]*/ VARIANT * ShowMessage = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_TransformDocument (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT_BOOL DataOnly ) = 0;
      virtual HRESULT __stdcall raw_Protect (
        /*[in]*/ enum WdProtectionType Type,
        /*[in]*/ VARIANT * NoReset = &vtMissing,
        /*[in]*/ VARIANT * Password = &vtMissing,
        /*[in]*/ VARIANT * UseIRM = &vtMissing,
        /*[in]*/ VARIANT * EnforceStyleLock = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_SelectAllEditableRanges (
        /*[in]*/ VARIANT * EditorID = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_DeleteAllEditableRanges (
        /*[in]*/ VARIANT * EditorID = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_DeleteAllInkAnnotations ( ) = 0;
      virtual HRESULT __stdcall raw_AddDocumentWorkspaceHeader (
        /*[in]*/ VARIANT_BOOL RichFormat,
        /*[in]*/ BSTR Url,
        /*[in]*/ BSTR Title,
        /*[in]*/ BSTR Description,
        /*[in]*/ BSTR ID ) = 0;
      virtual HRESULT __stdcall raw_RemoveDocumentWorkspaceHeader (
        /*[in]*/ BSTR ID ) = 0;
      virtual HRESULT __stdcall raw_Compare (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * AuthorName = &vtMissing,
        /*[in]*/ VARIANT * CompareTarget = &vtMissing,
        /*[in]*/ VARIANT * DetectFormatChanges = &vtMissing,
        /*[in]*/ VARIANT * IgnoreAllComparisonWarnings = &vtMissing,
        /*[in]*/ VARIANT * AddToRecentFiles = &vtMissing,
        /*[in]*/ VARIANT * RemovePersonalInformation = &vtMissing,
        /*[in]*/ VARIANT * RemoveDateAndTime = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_RemoveLockedStyles ( ) = 0;
      virtual HRESULT __stdcall get_ChildNodeSuggestions (
        /*[out,retval]*/ struct XMLChildNodeSuggestions * * prop ) = 0;
      virtual HRESULT __stdcall raw_SelectSingleNode (
        /*[in]*/ BSTR XPath,
        /*[in]*/ BSTR PrefixMapping,
        /*[in]*/ VARIANT_BOOL FastSearchSkippingTextNodes,
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
      virtual HRESULT __stdcall raw_SelectNodes (
        /*[in]*/ BSTR XPath,
        /*[in]*/ BSTR PrefixMapping,
        /*[in]*/ VARIANT_BOOL FastSearchSkippingTextNodes,
        /*[out,retval]*/ struct XMLNodes * * prop ) = 0;
      virtual HRESULT __stdcall get_XMLSchemaViolations (
        /*[out,retval]*/ struct XMLNodes * * prop ) = 0;
      virtual HRESULT __stdcall get_ReadingLayoutSizeX (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingLayoutSizeX (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ReadingLayoutSizeY (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingLayoutSizeY (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_StyleSortMethod (
        /*[out,retval]*/ enum WdStyleSort * prop ) = 0;
      virtual HRESULT __stdcall put_StyleSortMethod (
        /*[in]*/ enum WdStyleSort prop ) = 0;
      virtual HRESULT __stdcall get_ContentTypeProperties (
        /*[out,retval]*/ struct Office::MetaProperties * * prop ) = 0;
      virtual HRESULT __stdcall get_TrackMoves (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_TrackMoves (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_TrackFormatting (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_TrackFormatting (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Dummy1 ( ) = 0;
      virtual HRESULT __stdcall get_OMaths (
        /*[out,retval]*/ struct OMaths * * prop ) = 0;
      virtual HRESULT __stdcall raw_RemoveDocumentInformation (
        /*[in]*/ enum WdRemoveDocInfoType RemoveDocInfoType ) = 0;
      virtual HRESULT __stdcall raw_CheckInWithVersion (
        /*[in]*/ VARIANT_BOOL SaveChanges,
        /*[in]*/ VARIANT * Comments,
        /*[in]*/ VARIANT_BOOL MakePublic,
        /*[in]*/ VARIANT * VersionType = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Dummy2 ( ) = 0;
      virtual HRESULT __stdcall get_Dummy3 ( ) = 0;
      virtual HRESULT __stdcall get_ServerPolicy (
        /*[out,retval]*/ struct Office::ServerPolicy * * prop ) = 0;
      virtual HRESULT __stdcall get_ContentControls (
        /*[out,retval]*/ struct ContentControls * * prop ) = 0;
      virtual HRESULT __stdcall get_DocumentInspectors (
        /*[out,retval]*/ struct Office::DocumentInspectors * * prop ) = 0;
      virtual HRESULT __stdcall raw_LockServerFile ( ) = 0;
      virtual HRESULT __stdcall raw_GetWorkflowTasks (
        /*[out,retval]*/ struct Office::WorkflowTasks * * prop ) = 0;
      virtual HRESULT __stdcall raw_GetWorkflowTemplates (
        /*[out,retval]*/ struct Office::WorkflowTemplates * * prop ) = 0;
      virtual HRESULT __stdcall raw_Dummy4 ( ) = 0;
      virtual HRESULT __stdcall raw_AddMeetingWorkspaceHeader (
        /*[in]*/ VARIANT_BOOL SkipIfAbsent,
        /*[in]*/ BSTR Url,
        /*[in]*/ BSTR Title,
        /*[in]*/ BSTR Description,
        /*[in]*/ BSTR ID ) = 0;
      virtual HRESULT __stdcall get_Bibliography (
        /*[out,retval]*/ struct Bibliography * * prop ) = 0;
      virtual HRESULT __stdcall get_LockTheme (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_LockTheme (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_LockQuickStyleSet (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_LockQuickStyleSet (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_OriginalDocumentTitle (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_RevisedDocumentTitle (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_CustomXMLParts (
        /*[out,retval]*/ struct Office::_CustomXMLParts * * prop ) = 0;
      virtual HRESULT __stdcall get_FormattingShowNextLevel (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FormattingShowNextLevel (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FormattingShowUserStyleName (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FormattingShowUserStyleName (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall raw_SaveAsQuickStyleSet (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_ApplyQuickStyleSet (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Research (
        /*[out,retval]*/ struct Research * * prop ) = 0;
      virtual HRESULT __stdcall get_Final (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Final (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_OMathBreakBin (
        /*[out,retval]*/ enum WdOMathBreakBin * prop ) = 0;
      virtual HRESULT __stdcall put_OMathBreakBin (
        /*[in]*/ enum WdOMathBreakBin prop ) = 0;
      virtual HRESULT __stdcall get_OMathBreakSub (
        /*[out,retval]*/ enum WdOMathBreakSub * prop ) = 0;
      virtual HRESULT __stdcall put_OMathBreakSub (
        /*[in]*/ enum WdOMathBreakSub prop ) = 0;
      virtual HRESULT __stdcall get_OMathJc (
        /*[out,retval]*/ enum WdOMathJc * prop ) = 0;
      virtual HRESULT __stdcall put_OMathJc (
        /*[in]*/ enum WdOMathJc prop ) = 0;
      virtual HRESULT __stdcall get_OMathLeftMargin (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_OMathLeftMargin (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_OMathRightMargin (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_OMathRightMargin (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_OMathWrap (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_OMathWrap (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_OMathIntSubSupLim (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OMathIntSubSupLim (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_OMathNarySupSubLim (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OMathNarySupSubLim (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_OMathSmallFrac (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OMathSmallFrac (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_WordOpenXML (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_DocumentTheme (
        /*[out,retval]*/ struct Office::OfficeTheme * * prop ) = 0;
      virtual HRESULT __stdcall raw_ApplyDocumentTheme (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall get_HasVBProject (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_SelectLinkedControls (
        /*[in]*/ struct Office::CustomXMLNode * Node,
        /*[out,retval]*/ struct ContentControls * * prop ) = 0;
      virtual HRESULT __stdcall raw_SelectUnlinkedControls (
        /*[in]*/ struct Office::_CustomXMLPart * Stream,
        /*[out,retval]*/ struct ContentControls * * prop ) = 0;
      virtual HRESULT __stdcall raw_SelectContentControlsByTitle (
        /*[in]*/ BSTR Title,
        /*[out,retval]*/ struct ContentControls * * prop ) = 0;
      virtual HRESULT __stdcall raw_ExportAsFixedFormat (
        /*[in]*/ BSTR OutputFileName,
        /*[in]*/ enum WdExportFormat ExportFormat,
        /*[in]*/ VARIANT_BOOL OpenAfterExport,
        /*[in]*/ enum WdExportOptimizeFor OptimizeFor,
        /*[in]*/ enum WdExportRange Range,
        /*[in]*/ long From,
        /*[in]*/ long To,
        /*[in]*/ enum WdExportItem Item,
        /*[in]*/ VARIANT_BOOL IncludeDocProps,
        /*[in]*/ VARIANT_BOOL KeepIRM,
        /*[in]*/ enum WdExportCreateBookmarks CreateBookmarks,
        /*[in]*/ VARIANT_BOOL DocStructureTags,
        /*[in]*/ VARIANT_BOOL BitmapMissingFonts,
        /*[in]*/ VARIANT_BOOL UseISO19005_1,
        /*[in]*/ VARIANT * FixedFormatExtClassPtr = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_FreezeLayout ( ) = 0;
      virtual HRESULT __stdcall raw_UnfreezeLayout ( ) = 0;
      virtual HRESULT __stdcall get_OMathFontName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_OMathFontName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall raw_DowngradeDocument ( ) = 0;
      virtual HRESULT __stdcall get_EncryptionProvider (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_EncryptionProvider (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_UseMathDefaults (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseMathDefaults (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CurrentRsid (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Convert ( ) = 0;
      virtual HRESULT __stdcall raw_SelectContentControlsByTag (
        /*[in]*/ BSTR Tag,
        /*[out,retval]*/ struct ContentControls * * prop ) = 0;
};

struct __declspec(uuid("0002096a-0000-0000-c000-000000000046"))
Template : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetPath))
    _bstr_t Path;
    __declspec(property(get=GetAutoTextEntries))
    AutoTextEntriesPtr AutoTextEntries;
    __declspec(property(get=GetLanguageID,put=PutLanguageID))
    enum WdLanguageID LanguageID;
    __declspec(property(get=GetSaved,put=PutSaved))
    VARIANT_BOOL Saved;
    __declspec(property(get=GetType))
    enum WdTemplateType Type;
    __declspec(property(get=GetFullName))
    _bstr_t FullName;
    __declspec(property(get=GetBuiltInDocumentProperties))
    IDispatchPtr BuiltInDocumentProperties;
    __declspec(property(get=GetCustomDocumentProperties))
    IDispatchPtr CustomDocumentProperties;
    __declspec(property(get=GetListTemplates))
    ListTemplatesPtr ListTemplates;
    __declspec(property(get=GetVBProject))
    VBE6::_VBProjectPtr VBProject;
    __declspec(property(get=GetLanguageIDFarEast,put=PutLanguageIDFarEast))
    enum WdLanguageID LanguageIDFarEast;
    __declspec(property(get=GetKerningByAlgorithm,put=PutKerningByAlgorithm))
    VARIANT_BOOL KerningByAlgorithm;
    __declspec(property(get=GetJustificationMode,put=PutJustificationMode))
    enum WdJustificationMode JustificationMode;
    __declspec(property(get=GetFarEastLineBreakLevel,put=PutFarEastLineBreakLevel))
    enum WdFarEastLineBreakLevel FarEastLineBreakLevel;
    __declspec(property(get=GetNoLineBreakBefore,put=PutNoLineBreakBefore))
    _bstr_t NoLineBreakBefore;
    __declspec(property(get=GetNoLineBreakAfter,put=PutNoLineBreakAfter))
    _bstr_t NoLineBreakAfter;
    __declspec(property(get=GetNoProofing,put=PutNoProofing))
    long NoProofing;
    __declspec(property(get=GetFarEastLineBreakLanguage,put=PutFarEastLineBreakLanguage))
    enum WdFarEastLineBreakLanguageID FarEastLineBreakLanguage;
    __declspec(property(get=GetBuildingBlockEntries))
    BuildingBlockEntriesPtr BuildingBlockEntries;
    __declspec(property(get=GetBuildingBlockTypes))
    BuildingBlockTypesPtr BuildingBlockTypes;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetPath ( );
    AutoTextEntriesPtr GetAutoTextEntries ( );
    enum WdLanguageID GetLanguageID ( );
    void PutLanguageID (
        enum WdLanguageID prop );
    VARIANT_BOOL GetSaved ( );
    void PutSaved (
        VARIANT_BOOL prop );
    enum WdTemplateType GetType ( );
    _bstr_t GetFullName ( );
    IDispatchPtr GetBuiltInDocumentProperties ( );
    IDispatchPtr GetCustomDocumentProperties ( );
    ListTemplatesPtr GetListTemplates ( );
    enum WdLanguageID GetLanguageIDFarEast ( );
    void PutLanguageIDFarEast (
        enum WdLanguageID prop );
    VBE6::_VBProjectPtr GetVBProject ( );
    VARIANT_BOOL GetKerningByAlgorithm ( );
    void PutKerningByAlgorithm (
        VARIANT_BOOL prop );
    enum WdJustificationMode GetJustificationMode ( );
    void PutJustificationMode (
        enum WdJustificationMode prop );
    enum WdFarEastLineBreakLevel GetFarEastLineBreakLevel ( );
    void PutFarEastLineBreakLevel (
        enum WdFarEastLineBreakLevel prop );
    _bstr_t GetNoLineBreakBefore ( );
    void PutNoLineBreakBefore (
        _bstr_t prop );
    _bstr_t GetNoLineBreakAfter ( );
    void PutNoLineBreakAfter (
        _bstr_t prop );
    _DocumentPtr OpenAsDocument ( );
    HRESULT Save ( );
    long GetNoProofing ( );
    void PutNoProofing (
        long prop );
    enum WdFarEastLineBreakLanguageID GetFarEastLineBreakLanguage ( );
    void PutFarEastLineBreakLanguage (
        enum WdFarEastLineBreakLanguageID prop );
    BuildingBlockEntriesPtr GetBuildingBlockEntries ( );
    BuildingBlockTypesPtr GetBuildingBlockTypes ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_AutoTextEntries (
        /*[out,retval]*/ struct AutoTextEntries * * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageID (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageID (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_Saved (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Saved (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdTemplateType * prop ) = 0;
      virtual HRESULT __stdcall get_FullName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_BuiltInDocumentProperties (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_CustomDocumentProperties (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_ListTemplates (
        /*[out,retval]*/ struct ListTemplates * * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageIDFarEast (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageIDFarEast (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_VBProject (
        /*[out,retval]*/ struct VBE6::_VBProject * * prop ) = 0;
      virtual HRESULT __stdcall get_KerningByAlgorithm (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_KerningByAlgorithm (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_JustificationMode (
        /*[out,retval]*/ enum WdJustificationMode * prop ) = 0;
      virtual HRESULT __stdcall put_JustificationMode (
        /*[in]*/ enum WdJustificationMode prop ) = 0;
      virtual HRESULT __stdcall get_FarEastLineBreakLevel (
        /*[out,retval]*/ enum WdFarEastLineBreakLevel * prop ) = 0;
      virtual HRESULT __stdcall put_FarEastLineBreakLevel (
        /*[in]*/ enum WdFarEastLineBreakLevel prop ) = 0;
      virtual HRESULT __stdcall get_NoLineBreakBefore (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NoLineBreakBefore (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_NoLineBreakAfter (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NoLineBreakAfter (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall raw_OpenAsDocument (
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall get_NoProofing (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_NoProofing (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_FarEastLineBreakLanguage (
        /*[out,retval]*/ enum WdFarEastLineBreakLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_FarEastLineBreakLanguage (
        /*[in]*/ enum WdFarEastLineBreakLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_BuildingBlockEntries (
        /*[out,retval]*/ struct BuildingBlockEntries * * prop ) = 0;
      virtual HRESULT __stdcall get_BuildingBlockTypes (
        /*[out,retval]*/ struct BuildingBlockTypes * * prop ) = 0;
};

struct __declspec(uuid("000209a2-0000-0000-c000-000000000046"))
Templates : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    TemplatePtr Item (
        VARIANT * Index );
    HRESULT LoadBuildingBlocks ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Template * * prop ) = 0;
      virtual HRESULT __stdcall raw_LoadBuildingBlocks ( ) = 0;
};

struct __declspec(uuid("00020968-0000-0000-c000-000000000046"))
Bookmark : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetEmpty))
    VARIANT_BOOL Empty;
    __declspec(property(get=GetStart,put=PutStart))
    long Start;
    __declspec(property(get=GetEnd,put=PutEnd))
    long End;
    __declspec(property(get=GetColumn))
    VARIANT_BOOL Column;
    __declspec(property(get=GetStoryType))
    enum WdStoryType StoryType;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    RangePtr GetRange ( );
    VARIANT_BOOL GetEmpty ( );
    long GetStart ( );
    void PutStart (
        long prop );
    long GetEnd ( );
    void PutEnd (
        long prop );
    VARIANT_BOOL GetColumn ( );
    enum WdStoryType GetStoryType ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    HRESULT Select ( );
    HRESULT Delete ( );
    BookmarkPtr Copy (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Empty (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Start (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Start (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_End (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_End (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Column (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_StoryType (
        /*[out,retval]*/ enum WdStoryType * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct Bookmark * * prop ) = 0;
};

struct __declspec(uuid("00020967-0000-0000-c000-000000000046"))
Bookmarks : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetDefaultSorting,put=PutDefaultSorting))
    enum WdBookmarkSortBy DefaultSorting;
    __declspec(property(get=GetShowHidden,put=PutShowHidden))
    VARIANT_BOOL ShowHidden;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    enum WdBookmarkSortBy GetDefaultSorting ( );
    void PutDefaultSorting (
        enum WdBookmarkSortBy prop );
    VARIANT_BOOL GetShowHidden ( );
    void PutShowHidden (
        VARIANT_BOOL prop );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    BookmarkPtr Item (
        VARIANT * Index );
    BookmarkPtr Add (
        _bstr_t Name,
        VARIANT * Range = &vtMissing );
    VARIANT_BOOL Exists (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultSorting (
        /*[out,retval]*/ enum WdBookmarkSortBy * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultSorting (
        /*[in]*/ enum WdBookmarkSortBy prop ) = 0;
      virtual HRESULT __stdcall get_ShowHidden (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowHidden (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Bookmark * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct Bookmark * * prop ) = 0;
      virtual HRESULT __stdcall raw_Exists (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
};

struct __declspec(uuid("00020962-0000-0000-c000-000000000046"))
Window : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetActivePane))
    PanePtr ActivePane;
    __declspec(property(get=GetDocument))
    _DocumentPtr Document;
    __declspec(property(get=GetPanes))
    PanesPtr Panes;
    __declspec(property(get=GetSelection))
    SelectionPtr Selection;
    __declspec(property(get=GetLeft,put=PutLeft))
    long Left;
    __declspec(property(get=GetTop,put=PutTop))
    long Top;
    __declspec(property(get=GetWidth,put=PutWidth))
    long Width;
    __declspec(property(get=GetHeight,put=PutHeight))
    long Height;
    __declspec(property(get=GetSplit,put=PutSplit))
    VARIANT_BOOL Split;
    __declspec(property(get=GetSplitVertical,put=PutSplitVertical))
    long SplitVertical;
    __declspec(property(get=GetWindowState,put=PutWindowState))
    enum WdWindowState WindowState;
    __declspec(property(get=GetDisplayRulers,put=PutDisplayRulers))
    VARIANT_BOOL DisplayRulers;
    __declspec(property(get=GetDisplayVerticalRuler,put=PutDisplayVerticalRuler))
    VARIANT_BOOL DisplayVerticalRuler;
    __declspec(property(get=GetView))
    ViewPtr View;
    __declspec(property(get=GetType))
    enum WdWindowType Type;
    __declspec(property(get=GetNext))
    WindowPtr Next;
    __declspec(property(get=GetPrevious))
    WindowPtr Previous;
    __declspec(property(get=GetWindowNumber))
    long WindowNumber;
    __declspec(property(get=GetDisplayVerticalScrollBar,put=PutDisplayVerticalScrollBar))
    VARIANT_BOOL DisplayVerticalScrollBar;
    __declspec(property(get=GetDisplayHorizontalScrollBar,put=PutDisplayHorizontalScrollBar))
    VARIANT_BOOL DisplayHorizontalScrollBar;
    __declspec(property(get=GetStyleAreaWidth,put=PutStyleAreaWidth))
    float StyleAreaWidth;
    __declspec(property(get=GetDisplayScreenTips,put=PutDisplayScreenTips))
    VARIANT_BOOL DisplayScreenTips;
    __declspec(property(get=GetHorizontalPercentScrolled,put=PutHorizontalPercentScrolled))
    long HorizontalPercentScrolled;
    __declspec(property(get=GetVerticalPercentScrolled,put=PutVerticalPercentScrolled))
    long VerticalPercentScrolled;
    __declspec(property(get=GetDocumentMap,put=PutDocumentMap))
    VARIANT_BOOL DocumentMap;
    __declspec(property(get=GetActive))
    VARIANT_BOOL Active;
    __declspec(property(get=GetDocumentMapPercentWidth,put=PutDocumentMapPercentWidth))
    long DocumentMapPercentWidth;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetIMEMode,put=PutIMEMode))
    enum WdIMEMode IMEMode;
    __declspec(property(get=GetUsableWidth))
    long UsableWidth;
    __declspec(property(get=GetUsableHeight))
    long UsableHeight;
    __declspec(property(get=GetEnvelopeVisible,put=PutEnvelopeVisible))
    VARIANT_BOOL EnvelopeVisible;
    __declspec(property(get=GetDisplayLeftScrollBar,put=PutDisplayLeftScrollBar))
    VARIANT_BOOL DisplayLeftScrollBar;
    __declspec(property(get=GetDisplayRightRuler,put=PutDisplayRightRuler))
    VARIANT_BOOL DisplayRightRuler;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetThumbnails,put=PutThumbnails))
    VARIANT_BOOL Thumbnails;
    __declspec(property(get=GetShowSourceDocuments,put=PutShowSourceDocuments))
    enum WdShowSourceDocuments ShowSourceDocuments;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    PanePtr GetActivePane ( );
    _DocumentPtr GetDocument ( );
    PanesPtr GetPanes ( );
    SelectionPtr GetSelection ( );
    long GetLeft ( );
    void PutLeft (
        long prop );
    long GetTop ( );
    void PutTop (
        long prop );
    long GetWidth ( );
    void PutWidth (
        long prop );
    long GetHeight ( );
    void PutHeight (
        long prop );
    VARIANT_BOOL GetSplit ( );
    void PutSplit (
        VARIANT_BOOL prop );
    long GetSplitVertical ( );
    void PutSplitVertical (
        long prop );
    _bstr_t GetCaption ( );
    void PutCaption (
        _bstr_t prop );
    enum WdWindowState GetWindowState ( );
    void PutWindowState (
        enum WdWindowState prop );
    VARIANT_BOOL GetDisplayRulers ( );
    void PutDisplayRulers (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetDisplayVerticalRuler ( );
    void PutDisplayVerticalRuler (
        VARIANT_BOOL prop );
    ViewPtr GetView ( );
    enum WdWindowType GetType ( );
    WindowPtr GetNext ( );
    WindowPtr GetPrevious ( );
    long GetWindowNumber ( );
    VARIANT_BOOL GetDisplayVerticalScrollBar ( );
    void PutDisplayVerticalScrollBar (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetDisplayHorizontalScrollBar ( );
    void PutDisplayHorizontalScrollBar (
        VARIANT_BOOL prop );
    float GetStyleAreaWidth ( );
    void PutStyleAreaWidth (
        float prop );
    VARIANT_BOOL GetDisplayScreenTips ( );
    void PutDisplayScreenTips (
        VARIANT_BOOL prop );
    long GetHorizontalPercentScrolled ( );
    void PutHorizontalPercentScrolled (
        long prop );
    long GetVerticalPercentScrolled ( );
    void PutVerticalPercentScrolled (
        long prop );
    VARIANT_BOOL GetDocumentMap ( );
    void PutDocumentMap (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetActive ( );
    long GetDocumentMapPercentWidth ( );
    void PutDocumentMapPercentWidth (
        long prop );
    long GetIndex ( );
    enum WdIMEMode GetIMEMode ( );
    void PutIMEMode (
        enum WdIMEMode prop );
    HRESULT Activate ( );
    HRESULT Close (
        VARIANT * SaveChanges = &vtMissing,
        VARIANT * RouteDocument = &vtMissing );
    HRESULT LargeScroll (
        VARIANT * Down = &vtMissing,
        VARIANT * Up = &vtMissing,
        VARIANT * ToRight = &vtMissing,
        VARIANT * ToLeft = &vtMissing );
    HRESULT SmallScroll (
        VARIANT * Down = &vtMissing,
        VARIANT * Up = &vtMissing,
        VARIANT * ToRight = &vtMissing,
        VARIANT * ToLeft = &vtMissing );
    WindowPtr NewWindow ( );
    HRESULT PrintOutOld (
        VARIANT * Background = &vtMissing,
        VARIANT * Append = &vtMissing,
        VARIANT * Range = &vtMissing,
        VARIANT * OutputFileName = &vtMissing,
        VARIANT * From = &vtMissing,
        VARIANT * To = &vtMissing,
        VARIANT * Item = &vtMissing,
        VARIANT * Copies = &vtMissing,
        VARIANT * Pages = &vtMissing,
        VARIANT * PageType = &vtMissing,
        VARIANT * PrintToFile = &vtMissing,
        VARIANT * Collate = &vtMissing,
        VARIANT * ActivePrinterMacGX = &vtMissing,
        VARIANT * ManualDuplexPrint = &vtMissing );
    HRESULT PageScroll (
        VARIANT * Down = &vtMissing,
        VARIANT * Up = &vtMissing );
    HRESULT SetFocus ( );
    IDispatchPtr RangeFromPoint (
        long x,
        long y );
    HRESULT ScrollIntoView (
        IDispatch * obj,
        VARIANT * Start = &vtMissing );
    HRESULT GetPoint (
        long * ScreenPixelsLeft,
        long * ScreenPixelsTop,
        long * ScreenPixelsWidth,
        long * ScreenPixelsHeight,
        IDispatch * obj );
    HRESULT PrintOut2000 (
        VARIANT * Background = &vtMissing,
        VARIANT * Append = &vtMissing,
        VARIANT * Range = &vtMissing,
        VARIANT * OutputFileName = &vtMissing,
        VARIANT * From = &vtMissing,
        VARIANT * To = &vtMissing,
        VARIANT * Item = &vtMissing,
        VARIANT * Copies = &vtMissing,
        VARIANT * Pages = &vtMissing,
        VARIANT * PageType = &vtMissing,
        VARIANT * PrintToFile = &vtMissing,
        VARIANT * Collate = &vtMissing,
        VARIANT * ActivePrinterMacGX = &vtMissing,
        VARIANT * ManualDuplexPrint = &vtMissing,
        VARIANT * PrintZoomColumn = &vtMissing,
        VARIANT * PrintZoomRow = &vtMissing,
        VARIANT * PrintZoomPaperWidth = &vtMissing,
        VARIANT * PrintZoomPaperHeight = &vtMissing );
    long GetUsableWidth ( );
    long GetUsableHeight ( );
    VARIANT_BOOL GetEnvelopeVisible ( );
    void PutEnvelopeVisible (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetDisplayRightRuler ( );
    void PutDisplayRightRuler (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetDisplayLeftScrollBar ( );
    void PutDisplayLeftScrollBar (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL prop );
    HRESULT PrintOut (
        VARIANT * Background = &vtMissing,
        VARIANT * Append = &vtMissing,
        VARIANT * Range = &vtMissing,
        VARIANT * OutputFileName = &vtMissing,
        VARIANT * From = &vtMissing,
        VARIANT * To = &vtMissing,
        VARIANT * Item = &vtMissing,
        VARIANT * Copies = &vtMissing,
        VARIANT * Pages = &vtMissing,
        VARIANT * PageType = &vtMissing,
        VARIANT * PrintToFile = &vtMissing,
        VARIANT * Collate = &vtMissing,
        VARIANT * ActivePrinterMacGX = &vtMissing,
        VARIANT * ManualDuplexPrint = &vtMissing,
        VARIANT * PrintZoomColumn = &vtMissing,
        VARIANT * PrintZoomRow = &vtMissing,
        VARIANT * PrintZoomPaperWidth = &vtMissing,
        VARIANT * PrintZoomPaperHeight = &vtMissing );
    HRESULT ToggleShowAllReviewers ( );
    VARIANT_BOOL GetThumbnails ( );
    void PutThumbnails (
        VARIANT_BOOL prop );
    enum WdShowSourceDocuments GetShowSourceDocuments ( );
    void PutShowSourceDocuments (
        enum WdShowSourceDocuments prop );
    HRESULT ToggleRibbon ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_ActivePane (
        /*[out,retval]*/ struct Pane * * prop ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall get_Panes (
        /*[out,retval]*/ struct Panes * * prop ) = 0;
      virtual HRESULT __stdcall get_Selection (
        /*[out,retval]*/ struct Selection * * prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Split (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Split (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SplitVertical (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SplitVertical (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_WindowState (
        /*[out,retval]*/ enum WdWindowState * prop ) = 0;
      virtual HRESULT __stdcall put_WindowState (
        /*[in]*/ enum WdWindowState prop ) = 0;
      virtual HRESULT __stdcall get_DisplayRulers (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayRulers (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DisplayVerticalRuler (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayVerticalRuler (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_View (
        /*[out,retval]*/ struct View * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdWindowType * prop ) = 0;
      virtual HRESULT __stdcall get_Next (
        /*[out,retval]*/ struct Window * * prop ) = 0;
      virtual HRESULT __stdcall get_Previous (
        /*[out,retval]*/ struct Window * * prop ) = 0;
      virtual HRESULT __stdcall get_WindowNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_DisplayVerticalScrollBar (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayVerticalScrollBar (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DisplayHorizontalScrollBar (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayHorizontalScrollBar (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_StyleAreaWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_StyleAreaWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_DisplayScreenTips (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayScreenTips (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalPercentScrolled (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_HorizontalPercentScrolled (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_VerticalPercentScrolled (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_VerticalPercentScrolled (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DocumentMap (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DocumentMap (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Active (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_DocumentMapPercentWidth (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DocumentMapPercentWidth (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_IMEMode (
        /*[out,retval]*/ enum WdIMEMode * prop ) = 0;
      virtual HRESULT __stdcall put_IMEMode (
        /*[in]*/ enum WdIMEMode prop ) = 0;
      virtual HRESULT __stdcall raw_Activate ( ) = 0;
      virtual HRESULT __stdcall raw_Close (
        /*[in]*/ VARIANT * SaveChanges = &vtMissing,
        /*[in]*/ VARIANT * RouteDocument = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_LargeScroll (
        /*[in]*/ VARIANT * Down = &vtMissing,
        /*[in]*/ VARIANT * Up = &vtMissing,
        /*[in]*/ VARIANT * ToRight = &vtMissing,
        /*[in]*/ VARIANT * ToLeft = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_SmallScroll (
        /*[in]*/ VARIANT * Down = &vtMissing,
        /*[in]*/ VARIANT * Up = &vtMissing,
        /*[in]*/ VARIANT * ToRight = &vtMissing,
        /*[in]*/ VARIANT * ToLeft = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_NewWindow (
        /*[out,retval]*/ struct Window * * prop ) = 0;
      virtual HRESULT __stdcall raw_PrintOutOld (
        /*[in]*/ VARIANT * Background = &vtMissing,
        /*[in]*/ VARIANT * Append = &vtMissing,
        /*[in]*/ VARIANT * Range = &vtMissing,
        /*[in]*/ VARIANT * OutputFileName = &vtMissing,
        /*[in]*/ VARIANT * From = &vtMissing,
        /*[in]*/ VARIANT * To = &vtMissing,
        /*[in]*/ VARIANT * Item = &vtMissing,
        /*[in]*/ VARIANT * Copies = &vtMissing,
        /*[in]*/ VARIANT * Pages = &vtMissing,
        /*[in]*/ VARIANT * PageType = &vtMissing,
        /*[in]*/ VARIANT * PrintToFile = &vtMissing,
        /*[in]*/ VARIANT * Collate = &vtMissing,
        /*[in]*/ VARIANT * ActivePrinterMacGX = &vtMissing,
        /*[in]*/ VARIANT * ManualDuplexPrint = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_PageScroll (
        /*[in]*/ VARIANT * Down = &vtMissing,
        /*[in]*/ VARIANT * Up = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_SetFocus ( ) = 0;
      virtual HRESULT __stdcall raw_RangeFromPoint (
        /*[in]*/ long x,
        /*[in]*/ long y,
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_ScrollIntoView (
        /*[in]*/ IDispatch * obj,
        /*[in]*/ VARIANT * Start = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_GetPoint (
        /*[out]*/ long * ScreenPixelsLeft,
        /*[out]*/ long * ScreenPixelsTop,
        /*[out]*/ long * ScreenPixelsWidth,
        /*[out]*/ long * ScreenPixelsHeight,
        /*[in]*/ IDispatch * obj ) = 0;
      virtual HRESULT __stdcall raw_PrintOut2000 (
        /*[in]*/ VARIANT * Background = &vtMissing,
        /*[in]*/ VARIANT * Append = &vtMissing,
        /*[in]*/ VARIANT * Range = &vtMissing,
        /*[in]*/ VARIANT * OutputFileName = &vtMissing,
        /*[in]*/ VARIANT * From = &vtMissing,
        /*[in]*/ VARIANT * To = &vtMissing,
        /*[in]*/ VARIANT * Item = &vtMissing,
        /*[in]*/ VARIANT * Copies = &vtMissing,
        /*[in]*/ VARIANT * Pages = &vtMissing,
        /*[in]*/ VARIANT * PageType = &vtMissing,
        /*[in]*/ VARIANT * PrintToFile = &vtMissing,
        /*[in]*/ VARIANT * Collate = &vtMissing,
        /*[in]*/ VARIANT * ActivePrinterMacGX = &vtMissing,
        /*[in]*/ VARIANT * ManualDuplexPrint = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomColumn = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomRow = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomPaperWidth = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomPaperHeight = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_UsableWidth (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_UsableHeight (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_EnvelopeVisible (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EnvelopeVisible (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DisplayRightRuler (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayRightRuler (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DisplayLeftScrollBar (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayLeftScrollBar (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall raw_PrintOut (
        /*[in]*/ VARIANT * Background = &vtMissing,
        /*[in]*/ VARIANT * Append = &vtMissing,
        /*[in]*/ VARIANT * Range = &vtMissing,
        /*[in]*/ VARIANT * OutputFileName = &vtMissing,
        /*[in]*/ VARIANT * From = &vtMissing,
        /*[in]*/ VARIANT * To = &vtMissing,
        /*[in]*/ VARIANT * Item = &vtMissing,
        /*[in]*/ VARIANT * Copies = &vtMissing,
        /*[in]*/ VARIANT * Pages = &vtMissing,
        /*[in]*/ VARIANT * PageType = &vtMissing,
        /*[in]*/ VARIANT * PrintToFile = &vtMissing,
        /*[in]*/ VARIANT * Collate = &vtMissing,
        /*[in]*/ VARIANT * ActivePrinterMacGX = &vtMissing,
        /*[in]*/ VARIANT * ManualDuplexPrint = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomColumn = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomRow = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomPaperWidth = &vtMissing,
        /*[in]*/ VARIANT * PrintZoomPaperHeight = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_ToggleShowAllReviewers ( ) = 0;
      virtual HRESULT __stdcall get_Thumbnails (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Thumbnails (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ShowSourceDocuments (
        /*[out,retval]*/ enum WdShowSourceDocuments * prop ) = 0;
      virtual HRESULT __stdcall put_ShowSourceDocuments (
        /*[in]*/ enum WdShowSourceDocuments prop ) = 0;
      virtual HRESULT __stdcall raw_ToggleRibbon ( ) = 0;
};

struct __declspec(uuid("00020961-0000-0000-c000-000000000046"))
Windows : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetSyncScrollingSideBySide,put=PutSyncScrollingSideBySide))
    VARIANT_BOOL SyncScrollingSideBySide;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    WindowPtr Item (
        VARIANT * Index );
    WindowPtr Add (
        VARIANT * Window = &vtMissing );
    HRESULT Arrange (
        VARIANT * ArrangeStyle = &vtMissing );
    VARIANT_BOOL CompareSideBySideWith (
        VARIANT * Document );
    VARIANT_BOOL BreakSideBySide ( );
    HRESULT ResetPositionsSideBySide ( );
    VARIANT_BOOL GetSyncScrollingSideBySide ( );
    void PutSyncScrollingSideBySide (
        VARIANT_BOOL prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Window * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT * Window,
        /*[out,retval]*/ struct Window * * prop ) = 0;
      virtual HRESULT __stdcall raw_Arrange (
        /*[in]*/ VARIANT * ArrangeStyle = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_CompareSideBySideWith (
        /*[in]*/ VARIANT * Document,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_BreakSideBySide (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_ResetPositionsSideBySide ( ) = 0;
      virtual HRESULT __stdcall get_SyncScrollingSideBySide (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SyncScrollingSideBySide (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("00020960-0000-0000-c000-000000000046"))
Pane : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDocument))
    _DocumentPtr Document;
    __declspec(property(get=GetSelection))
    SelectionPtr Selection;
    __declspec(property(get=GetDisplayRulers,put=PutDisplayRulers))
    VARIANT_BOOL DisplayRulers;
    __declspec(property(get=GetDisplayVerticalRuler,put=PutDisplayVerticalRuler))
    VARIANT_BOOL DisplayVerticalRuler;
    __declspec(property(get=GetZooms))
    ZoomsPtr Zooms;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetView))
    ViewPtr View;
    __declspec(property(get=GetNext))
    PanePtr Next;
    __declspec(property(get=GetPrevious))
    PanePtr Previous;
    __declspec(property(get=GetHorizontalPercentScrolled,put=PutHorizontalPercentScrolled))
    long HorizontalPercentScrolled;
    __declspec(property(get=GetVerticalPercentScrolled,put=PutVerticalPercentScrolled))
    long VerticalPercentScrolled;
    __declspec(property(get=GetMinimumFontSize,put=PutMinimumFontSize))
    long MinimumFontSize;
    __declspec(property(get=GetBrowseToWindow,put=PutBrowseToWindow))
    VARIANT_BOOL BrowseToWindow;
    __declspec(property(get=GetBrowseWidth))
    long BrowseWidth;
    __declspec(property(get=GetFrameset))
    FramesetPtr Frameset;
    __declspec(property(get=GetPages))
    PagesPtr Pages;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _DocumentPtr GetDocument ( );
    SelectionPtr GetSelection ( );
    VARIANT_BOOL GetDisplayRulers ( );
    void PutDisplayRulers (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetDisplayVerticalRuler ( );
    void PutDisplayVerticalRuler (
        VARIANT_BOOL prop );
    ZoomsPtr GetZooms ( );
    long GetIndex ( );
    ViewPtr GetView ( );
    PanePtr GetNext ( );
    PanePtr GetPrevious ( );
    long GetHorizontalPercentScrolled ( );
    void PutHorizontalPercentScrolled (
        long prop );
    long GetVerticalPercentScrolled ( );
    void PutVerticalPercentScrolled (
        long prop );
    long GetMinimumFontSize ( );
    void PutMinimumFontSize (
        long prop );
    VARIANT_BOOL GetBrowseToWindow ( );
    void PutBrowseToWindow (
        VARIANT_BOOL prop );
    long GetBrowseWidth ( );
    HRESULT Activate ( );
    HRESULT Close ( );
    HRESULT LargeScroll (
        VARIANT * Down = &vtMissing,
        VARIANT * Up = &vtMissing,
        VARIANT * ToRight = &vtMissing,
        VARIANT * ToLeft = &vtMissing );
    HRESULT SmallScroll (
        VARIANT * Down = &vtMissing,
        VARIANT * Up = &vtMissing,
        VARIANT * ToRight = &vtMissing,
        VARIANT * ToLeft = &vtMissing );
    HRESULT AutoScroll (
        long Velocity );
    HRESULT PageScroll (
        VARIANT * Down = &vtMissing,
        VARIANT * Up = &vtMissing );
    HRESULT NewFrameset ( );
    HRESULT TOCInFrameset ( );
    FramesetPtr GetFrameset ( );
    PagesPtr GetPages ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall get_Selection (
        /*[out,retval]*/ struct Selection * * prop ) = 0;
      virtual HRESULT __stdcall get_DisplayRulers (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayRulers (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DisplayVerticalRuler (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayVerticalRuler (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Zooms (
        /*[out,retval]*/ struct Zooms * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_View (
        /*[out,retval]*/ struct View * * prop ) = 0;
      virtual HRESULT __stdcall get_Next (
        /*[out,retval]*/ struct Pane * * prop ) = 0;
      virtual HRESULT __stdcall get_Previous (
        /*[out,retval]*/ struct Pane * * prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalPercentScrolled (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_HorizontalPercentScrolled (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_VerticalPercentScrolled (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_VerticalPercentScrolled (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_MinimumFontSize (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_MinimumFontSize (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_BrowseToWindow (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_BrowseToWindow (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_BrowseWidth (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Activate ( ) = 0;
      virtual HRESULT __stdcall raw_Close ( ) = 0;
      virtual HRESULT __stdcall raw_LargeScroll (
        /*[in]*/ VARIANT * Down = &vtMissing,
        /*[in]*/ VARIANT * Up = &vtMissing,
        /*[in]*/ VARIANT * ToRight = &vtMissing,
        /*[in]*/ VARIANT * ToLeft = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_SmallScroll (
        /*[in]*/ VARIANT * Down = &vtMissing,
        /*[in]*/ VARIANT * Up = &vtMissing,
        /*[in]*/ VARIANT * ToRight = &vtMissing,
        /*[in]*/ VARIANT * ToLeft = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_AutoScroll (
        /*[in]*/ long Velocity ) = 0;
      virtual HRESULT __stdcall raw_PageScroll (
        /*[in]*/ VARIANT * Down = &vtMissing,
        /*[in]*/ VARIANT * Up = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_NewFrameset ( ) = 0;
      virtual HRESULT __stdcall raw_TOCInFrameset ( ) = 0;
      virtual HRESULT __stdcall get_Frameset (
        /*[out,retval]*/ struct Frameset * * prop ) = 0;
      virtual HRESULT __stdcall get_Pages (
        /*[out,retval]*/ struct Pages * * prop ) = 0;
};

struct __declspec(uuid("0002095f-0000-0000-c000-000000000046"))
Panes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    PanePtr Item (
        long Index );
    PanePtr Add (
        VARIANT * SplitVertical = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Pane * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT * SplitVertical,
        /*[out,retval]*/ struct Pane * * prop ) = 0;
};

struct __declspec(uuid("0002095e-0000-0000-c000-000000000046"))
Range : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetText,put=PutText))
    _bstr_t Text;
    __declspec(property(get=GetFormattedText,put=PutFormattedText))
    RangePtr FormattedText;
    __declspec(property(get=GetStart,put=PutStart))
    long Start;
    __declspec(property(get=GetEnd,put=PutEnd))
    long End;
    __declspec(property(get=GetFont,put=PutFont))
    _FontPtr Font;
    __declspec(property(get=GetDuplicate))
    RangePtr Duplicate;
    __declspec(property(get=GetStoryType))
    enum WdStoryType StoryType;
    __declspec(property(get=GetRevisions))
    RevisionsPtr Revisions;
    __declspec(property(get=GetStoryLength))
    long StoryLength;
    __declspec(property(get=GetLanguageID,put=PutLanguageID))
    enum WdLanguageID LanguageID;
    __declspec(property(get=GetSynonymInfo))
    SynonymInfoPtr SynonymInfo;
    __declspec(property(get=GetHyperlinks))
    HyperlinksPtr Hyperlinks;
    __declspec(property(get=GetListParagraphs))
    ListParagraphsPtr ListParagraphs;
    __declspec(property(get=GetSubdocuments))
    SubdocumentsPtr Subdocuments;
    __declspec(property(get=GetHighlightColorIndex,put=PutHighlightColorIndex))
    enum WdColorIndex HighlightColorIndex;
    __declspec(property(get=GetColumns))
    ColumnsPtr Columns;
    __declspec(property(get=GetRows))
    RowsPtr Rows;
    __declspec(property(get=GetCanEdit))
    long CanEdit;
    __declspec(property(get=GetCanPaste))
    long CanPaste;
    __declspec(property(get=GetIsEndOfRowMark))
    VARIANT_BOOL IsEndOfRowMark;
    __declspec(property(get=GetBookmarkID))
    long BookmarkID;
    __declspec(property(get=GetPreviousBookmarkID))
    long PreviousBookmarkID;
    __declspec(property(get=GetShapeRange))
    ShapeRangePtr ShapeRange;
    __declspec(property(get=GetCase,put=PutCase))
    enum WdCharacterCase Case;
    __declspec(property(get=GetInformation))
    _variant_t Information[];
    __declspec(property(get=GetReadabilityStatistics))
    ReadabilityStatisticsPtr ReadabilityStatistics;
    __declspec(property(get=GetGrammaticalErrors))
    ProofreadingErrorsPtr GrammaticalErrors;
    __declspec(property(get=GetSpellingErrors))
    ProofreadingErrorsPtr SpellingErrors;
    __declspec(property(get=GetOrientation,put=PutOrientation))
    enum WdTextOrientation Orientation;
    __declspec(property(get=GetInlineShapes))
    InlineShapesPtr InlineShapes;
    __declspec(property(get=GetNextStoryRange))
    RangePtr NextStoryRange;
    __declspec(property(get=GetLanguageIDFarEast,put=PutLanguageIDFarEast))
    enum WdLanguageID LanguageIDFarEast;
    __declspec(property(get=GetLanguageIDOther,put=PutLanguageIDOther))
    enum WdLanguageID LanguageIDOther;
    __declspec(property(get=GetNoProofing,put=PutNoProofing))
    long NoProofing;
    __declspec(property(get=GetTopLevelTables))
    TablesPtr TopLevelTables;
    __declspec(property(get=GetScripts))
    Office::ScriptsPtr Scripts;
    __declspec(property(get=GetCharacterWidth,put=PutCharacterWidth))
    enum WdCharacterWidth CharacterWidth;
    __declspec(property(get=GetKana,put=PutKana))
    enum WdKana Kana;
    __declspec(property(get=GetXMLNodes))
    XMLNodesPtr XMLNodes;
    __declspec(property(get=GetXMLParentNode))
    XMLNodePtr XMLParentNode;
    __declspec(property(get=GetEditors))
    EditorsPtr Editors;
    __declspec(property(get=GetXML))
    _bstr_t XML[];
    __declspec(property(get=GetEnhMetaFileBits))
    _variant_t EnhMetaFileBits;
    __declspec(property(get=GetTables))
    TablesPtr Tables;
    __declspec(property(get=GetWords))
    WordsPtr Words;
    __declspec(property(get=GetSentences))
    SentencesPtr Sentences;
    __declspec(property(get=GetCharacters))
    CharactersPtr Characters;
    __declspec(property(get=GetFootnotes))
    FootnotesPtr Footnotes;
    __declspec(property(get=GetEndnotes))
    EndnotesPtr Endnotes;
    __declspec(property(get=GetComments))
    CommentsPtr Comments;
    __declspec(property(get=GetCells))
    CellsPtr Cells;
    __declspec(property(get=GetSections))
    SectionsPtr Sections;
    __declspec(property(get=GetParagraphs))
    ParagraphsPtr Paragraphs;
    __declspec(property(get=GetOMaths))
    OMathsPtr OMaths;
    __declspec(property(get=GetShading))
    ShadingPtr Shading;
    __declspec(property(get=GetTextRetrievalMode,put=PutTextRetrievalMode))
    TextRetrievalModePtr TextRetrievalMode;
    __declspec(property(get=GetParentContentControl))
    ContentControlPtr ParentContentControl;
    __declspec(property(get=GetBorders,put=PutBorders))
    BordersPtr Borders;
    __declspec(property(get=GetPageSetup,put=PutPageSetup))
    PageSetupPtr PageSetup;
    __declspec(property(get=GetParagraphFormat,put=PutParagraphFormat))
    _ParagraphFormatPtr ParagraphFormat;
    __declspec(property(get=GetFields))
    FieldsPtr Fields;
    __declspec(property(get=GetFormFields))
    FormFieldsPtr FormFields;
    __declspec(property(get=GetFrames))
    FramesPtr Frames;
    __declspec(property(get=GetListFormat))
    ListFormatPtr ListFormat;
    __declspec(property(get=GetBookmarks))
    BookmarksPtr Bookmarks;
    __declspec(property(get=GetBoldBi,put=PutBoldBi))
    long BoldBi;
    __declspec(property(get=GetItalicBi,put=PutItalicBi))
    long ItalicBi;
    __declspec(property(get=GetID,put=PutID))
    _bstr_t ID;
    __declspec(property(get=GetHTMLDivisions))
    HTMLDivisionsPtr HTMLDivisions;
    __declspec(property(get=GetSmartTags))
    SmartTagsPtr SmartTags;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetGrammarChecked,put=PutGrammarChecked))
    VARIANT_BOOL GrammarChecked;
    __declspec(property(get=GetSpellingChecked,put=PutSpellingChecked))
    VARIANT_BOOL SpellingChecked;
    __declspec(property(get=GetFind))
    FindPtr Find;
    __declspec(property(get=GetLanguageDetected,put=PutLanguageDetected))
    VARIANT_BOOL LanguageDetected;
    __declspec(property(get=GetFitTextWidth,put=PutFitTextWidth))
    float FitTextWidth;
    __declspec(property(get=GetHorizontalInVertical,put=PutHorizontalInVertical))
    enum WdHorizontalInVerticalType HorizontalInVertical;
    __declspec(property(get=GetTwoLinesInOne,put=PutTwoLinesInOne))
    enum WdTwoLinesInOneType TwoLinesInOne;
    __declspec(property(get=GetCombineCharacters,put=PutCombineCharacters))
    VARIANT_BOOL CombineCharacters;
    __declspec(property(get=GetShowAll,put=PutShowAll))
    VARIANT_BOOL ShowAll;
    __declspec(property(get=GetDocument))
    _DocumentPtr Document;
    __declspec(property(get=GetFootnoteOptions))
    FootnoteOptionsPtr FootnoteOptions;
    __declspec(property(get=GetEndnoteOptions))
    EndnoteOptionsPtr EndnoteOptions;
    __declspec(property(get=GetCharacterStyle))
    _variant_t CharacterStyle;
    __declspec(property(get=GetParagraphStyle))
    _variant_t ParagraphStyle;
    __declspec(property(get=GetListStyle))
    _variant_t ListStyle;
    __declspec(property(get=GetBold,put=PutBold))
    long Bold;
    __declspec(property(get=GetItalic,put=PutItalic))
    long Italic;
    __declspec(property(get=GetTableStyle))
    _variant_t TableStyle;
    __declspec(property(get=GetContentControls))
    ContentControlsPtr ContentControls;
    __declspec(property(get=GetWordOpenXML))
    _bstr_t WordOpenXML;
    __declspec(property(get=GetUnderline,put=PutUnderline))
    enum WdUnderline Underline;
    __declspec(property(get=GetEmphasisMark,put=PutEmphasisMark))
    enum WdEmphasisMark EmphasisMark;
    __declspec(property(get=GetDisableCharacterSpaceGrid,put=PutDisableCharacterSpaceGrid))
    VARIANT_BOOL DisableCharacterSpaceGrid;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetText ( );
    void PutText (
        _bstr_t prop );
    RangePtr GetFormattedText ( );
    void PutFormattedText (
        struct Range * prop );
    long GetStart ( );
    void PutStart (
        long prop );
    long GetEnd ( );
    void PutEnd (
        long prop );
    _FontPtr GetFont ( );
    void PutFont (
        struct _Font * prop );
    RangePtr GetDuplicate ( );
    enum WdStoryType GetStoryType ( );
    TablesPtr GetTables ( );
    WordsPtr GetWords ( );
    SentencesPtr GetSentences ( );
    CharactersPtr GetCharacters ( );
    FootnotesPtr GetFootnotes ( );
    EndnotesPtr GetEndnotes ( );
    CommentsPtr GetComments ( );
    CellsPtr GetCells ( );
    SectionsPtr GetSections ( );
    ParagraphsPtr GetParagraphs ( );
    BordersPtr GetBorders ( );
    void PutBorders (
        struct Borders * prop );
    ShadingPtr GetShading ( );
    TextRetrievalModePtr GetTextRetrievalMode ( );
    void PutTextRetrievalMode (
        struct TextRetrievalMode * prop );
    FieldsPtr GetFields ( );
    FormFieldsPtr GetFormFields ( );
    FramesPtr GetFrames ( );
    _ParagraphFormatPtr GetParagraphFormat ( );
    void PutParagraphFormat (
        struct _ParagraphFormat * prop );
    ListFormatPtr GetListFormat ( );
    BookmarksPtr GetBookmarks ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetBold ( );
    void PutBold (
        long prop );
    long GetItalic ( );
    void PutItalic (
        long prop );
    enum WdUnderline GetUnderline ( );
    void PutUnderline (
        enum WdUnderline prop );
    enum WdEmphasisMark GetEmphasisMark ( );
    void PutEmphasisMark (
        enum WdEmphasisMark prop );
    VARIANT_BOOL GetDisableCharacterSpaceGrid ( );
    void PutDisableCharacterSpaceGrid (
        VARIANT_BOOL prop );
    RevisionsPtr GetRevisions ( );
    _variant_t GetStyle ( );
    void PutStyle (
        VARIANT * prop );
    long GetStoryLength ( );
    enum WdLanguageID GetLanguageID ( );
    void PutLanguageID (
        enum WdLanguageID prop );
    SynonymInfoPtr GetSynonymInfo ( );
    HyperlinksPtr GetHyperlinks ( );
    ListParagraphsPtr GetListParagraphs ( );
    SubdocumentsPtr GetSubdocuments ( );
    VARIANT_BOOL GetGrammarChecked ( );
    void PutGrammarChecked (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetSpellingChecked ( );
    void PutSpellingChecked (
        VARIANT_BOOL prop );
    enum WdColorIndex GetHighlightColorIndex ( );
    void PutHighlightColorIndex (
        enum WdColorIndex prop );
    ColumnsPtr GetColumns ( );
    RowsPtr GetRows ( );
    long GetCanEdit ( );
    long GetCanPaste ( );
    VARIANT_BOOL GetIsEndOfRowMark ( );
    long GetBookmarkID ( );
    long GetPreviousBookmarkID ( );
    FindPtr GetFind ( );
    PageSetupPtr GetPageSetup ( );
    void PutPageSetup (
        struct PageSetup * prop );
    ShapeRangePtr GetShapeRange ( );
    enum WdCharacterCase GetCase ( );
    void PutCase (
        enum WdCharacterCase prop );
    _variant_t GetInformation (
        enum WdInformation Type );
    ReadabilityStatisticsPtr GetReadabilityStatistics ( );
    ProofreadingErrorsPtr GetGrammaticalErrors ( );
    ProofreadingErrorsPtr GetSpellingErrors ( );
    enum WdTextOrientation GetOrientation ( );
    void PutOrientation (
        enum WdTextOrientation prop );
    InlineShapesPtr GetInlineShapes ( );
    RangePtr GetNextStoryRange ( );
    enum WdLanguageID GetLanguageIDFarEast ( );
    void PutLanguageIDFarEast (
        enum WdLanguageID prop );
    enum WdLanguageID GetLanguageIDOther ( );
    void PutLanguageIDOther (
        enum WdLanguageID prop );
    HRESULT Select ( );
    HRESULT SetRange (
        long Start,
        long End );
    HRESULT Collapse (
        VARIANT * Direction = &vtMissing );
    HRESULT InsertBefore (
        _bstr_t Text );
    HRESULT InsertAfter (
        _bstr_t Text );
    RangePtr Next (
        VARIANT * Unit = &vtMissing,
        VARIANT * Count = &vtMissing );
    RangePtr Previous (
        VARIANT * Unit = &vtMissing,
        VARIANT * Count = &vtMissing );
    long StartOf (
        VARIANT * Unit = &vtMissing,
        VARIANT * Extend = &vtMissing );
    long EndOf (
        VARIANT * Unit = &vtMissing,
        VARIANT * Extend = &vtMissing );
    long Move (
        VARIANT * Unit = &vtMissing,
        VARIANT * Count = &vtMissing );
    long MoveStart (
        VARIANT * Unit = &vtMissing,
        VARIANT * Count = &vtMissing );
    long MoveEnd (
        VARIANT * Unit = &vtMissing,
        VARIANT * Count = &vtMissing );
    long MoveWhile (
        VARIANT * Cset,
        VARIANT * Count = &vtMissing );
    long MoveStartWhile (
        VARIANT * Cset,
        VARIANT * Count = &vtMissing );
    long MoveEndWhile (
        VARIANT * Cset,
        VARIANT * Count = &vtMissing );
    long MoveUntil (
        VARIANT * Cset,
        VARIANT * Count = &vtMissing );
    long MoveStartUntil (
        VARIANT * Cset,
        VARIANT * Count = &vtMissing );
    long MoveEndUntil (
        VARIANT * Cset,
        VARIANT * Count = &vtMissing );
    HRESULT Cut ( );
    HRESULT Copy ( );
    HRESULT Paste ( );
    HRESULT InsertBreak (
        VARIANT * Type = &vtMissing );
    HRESULT InsertFile (
        _bstr_t FileName,
        VARIANT * Range = &vtMissing,
        VARIANT * ConfirmConversions = &vtMissing,
        VARIANT * Link = &vtMissing,
        VARIANT * Attachment = &vtMissing );
    VARIANT_BOOL InStory (
        struct Range * Range );
    VARIANT_BOOL InRange (
        struct Range * Range );
    long Delete (
        VARIANT * Unit = &vtMissing,
        VARIANT * Count = &vtMissing );
    HRESULT WholeStory ( );
    long Expand (
        VARIANT * Unit = &vtMissing );
    HRESULT InsertParagraph ( );
    HRESULT InsertParagraphAfter ( );
    TablePtr ConvertToTableOld (
        VARIANT * Separator = &vtMissing,
        VARIANT * NumRows = &vtMissing,
        VARIANT * NumColumns = &vtMissing,
        VARIANT * InitialColumnWidth = &vtMissing,
        VARIANT * Format = &vtMissing,
        VARIANT * ApplyBorders = &vtMissing,
        VARIANT * ApplyShading = &vtMissing,
        VARIANT * ApplyFont = &vtMissing,
        VARIANT * ApplyColor = &vtMissing,
        VARIANT * ApplyHeadingRows = &vtMissing,
        VARIANT * ApplyLastRow = &vtMissing,
        VARIANT * ApplyFirstColumn = &vtMissing,
        VARIANT * ApplyLastColumn = &vtMissing,
        VARIANT * AutoFit = &vtMissing );
    HRESULT InsertDateTimeOld (
        VARIANT * DateTimeFormat = &vtMissing,
        VARIANT * InsertAsField = &vtMissing,
        VARIANT * InsertAsFullWidth = &vtMissing );
    HRESULT InsertSymbol (
        long CharacterNumber,
        VARIANT * Font = &vtMissing,
        VARIANT * Unicode = &vtMissing,
        VARIANT * Bias = &vtMissing );
    HRESULT InsertCrossReference_2002 (
        VARIANT * ReferenceType,
        enum WdReferenceKind ReferenceKind,
        VARIANT * ReferenceItem,
        VARIANT * InsertAsHyperlink = &vtMissing,
        VARIANT * IncludePosition = &vtMissing );
    HRESULT InsertCaptionXP (
        VARIANT * Label,
        VARIANT * Title = &vtMissing,
        VARIANT * TitleAutoText = &vtMissing,
        VARIANT * Position = &vtMissing );
    HRESULT CopyAsPicture ( );
    HRESULT SortOld (
        VARIANT * ExcludeHeader = &vtMissing,
        VARIANT * FieldNumber = &vtMissing,
        VARIANT * SortFieldType = &vtMissing,
        VARIANT * SortOrder = &vtMissing,
        VARIANT * FieldNumber2 = &vtMissing,
        VARIANT * SortFieldType2 = &vtMissing,
        VARIANT * SortOrder2 = &vtMissing,
        VARIANT * FieldNumber3 = &vtMissing,
        VARIANT * SortFieldType3 = &vtMissing,
        VARIANT * SortOrder3 = &vtMissing,
        VARIANT * SortColumn = &vtMissing,
        VARIANT * Separator = &vtMissing,
        VARIANT * CaseSensitive = &vtMissing,
        VARIANT * LanguageID = &vtMissing );
    HRESULT SortAscending ( );
    HRESULT SortDescending ( );
    VARIANT_BOOL IsEqual (
        struct Range * Range );
    float Calculate ( );
    RangePtr GoTo (
        VARIANT * What = &vtMissing,
        VARIANT * Which = &vtMissing,
        VARIANT * Count = &vtMissing,
        VARIANT * Name = &vtMissing );
    RangePtr GoToNext (
        enum WdGoToItem What );
    RangePtr GoToPrevious (
        enum WdGoToItem What );
    HRESULT PasteSpecial (
        VARIANT * IconIndex = &vtMissing,
        VARIANT * Link = &vtMissing,
        VARIANT * Placement = &vtMissing,
        VARIANT * DisplayAsIcon = &vtMissing,
        VARIANT * DataType = &vtMissing,
        VARIANT * IconFileName = &vtMissing,
        VARIANT * IconLabel = &vtMissing );
    HRESULT LookupNameProperties ( );
    long ComputeStatistics (
        enum WdStatistic Statistic );
    HRESULT Relocate (
        long Direction );
    HRESULT CheckSynonyms ( );
    HRESULT SubscribeTo (
        _bstr_t Edition,
        VARIANT * Format = &vtMissing );
    HRESULT CreatePublisher (
        VARIANT * Edition = &vtMissing,
        VARIANT * ContainsPICT = &vtMissing,
        VARIANT * ContainsRTF = &vtMissing,
        VARIANT * ContainsText = &vtMissing );
    HRESULT InsertAutoText ( );
    HRESULT InsertDatabase (
        VARIANT * Format = &vtMissing,
        VARIANT * Style = &vtMissing,
        VARIANT * LinkToSource = &vtMissing,
        VARIANT * Connection = &vtMissing,
        VARIANT * SQLStatement = &vtMissing,
        VARIANT * SQLStatement1 = &vtMissing,
        VARIANT * PasswordDocument = &vtMissing,
        VARIANT * PasswordTemplate = &vtMissing,
        VARIANT * WritePasswordDocument = &vtMissing,
        VARIANT * WritePasswordTemplate = &vtMissing,
        VARIANT * DataSource = &vtMissing,
        VARIANT * From = &vtMissing,
        VARIANT * To = &vtMissing,
        VARIANT * IncludeFields = &vtMissing );
    HRESULT AutoFormat ( );
    HRESULT CheckGrammar ( );
    HRESULT CheckSpelling (
        VARIANT * CustomDictionary = &vtMissing,
        VARIANT * IgnoreUppercase = &vtMissing,
        VARIANT * AlwaysSuggest = &vtMissing,
        VARIANT * CustomDictionary2 = &vtMissing,
        VARIANT * CustomDictionary3 = &vtMissing,
        VARIANT * CustomDictionary4 = &vtMissing,
        VARIANT * CustomDictionary5 = &vtMissing,
        VARIANT * CustomDictionary6 = &vtMissing,
        VARIANT * CustomDictionary7 = &vtMissing,
        VARIANT * CustomDictionary8 = &vtMissing,
        VARIANT * CustomDictionary9 = &vtMissing,
        VARIANT * CustomDictionary10 = &vtMissing );
    SpellingSuggestionsPtr GetSpellingSuggestions (
        VARIANT * CustomDictionary = &vtMissing,
        VARIANT * IgnoreUppercase = &vtMissing,
        VARIANT * MainDictionary = &vtMissing,
        VARIANT * SuggestionMode = &vtMissing,
        VARIANT * CustomDictionary2 = &vtMissing,
        VARIANT * CustomDictionary3 = &vtMissing,
        VARIANT * CustomDictionary4 = &vtMissing,
        VARIANT * CustomDictionary5 = &vtMissing,
        VARIANT * CustomDictionary6 = &vtMissing,
        VARIANT * CustomDictionary7 = &vtMissing,
        VARIANT * CustomDictionary8 = &vtMissing,
        VARIANT * CustomDictionary9 = &vtMissing,
        VARIANT * CustomDictionary10 = &vtMissing );
    HRESULT InsertParagraphBefore ( );
    HRESULT NextSubdocument ( );
    HRESULT PreviousSubdocument ( );
    HRESULT ConvertHangulAndHanja (
        VARIANT * ConversionsMode = &vtMissing,
        VARIANT * FastConversion = &vtMissing,
        VARIANT * CheckHangulEnding = &vtMissing,
        VARIANT * EnableRecentOrdering = &vtMissing,
        VARIANT * CustomDictionary = &vtMissing );
    HRESULT PasteAsNestedTable ( );
    HRESULT ModifyEnclosure (
        VARIANT * Style,
        VARIANT * Symbol = &vtMissing,
        VARIANT * EnclosedText = &vtMissing );
    HRESULT PhoneticGuide (
        _bstr_t Text,
        enum WdPhoneticGuideAlignmentType Alignment,
        long Raise,
        long FontSize,
        _bstr_t FontName );
    HRESULT InsertDateTime (
        VARIANT * DateTimeFormat = &vtMissing,
        VARIANT * InsertAsField = &vtMissing,
        VARIANT * InsertAsFullWidth = &vtMissing,
        VARIANT * DateLanguage = &vtMissing,
        VARIANT * CalendarType = &vtMissing );
    HRESULT Sort (
        VARIANT * ExcludeHeader = &vtMissing,
        VARIANT * FieldNumber = &vtMissing,
        VARIANT * SortFieldType = &vtMissing,
        VARIANT * SortOrder = &vtMissing,
        VARIANT * FieldNumber2 = &vtMissing,
        VARIANT * SortFieldType2 = &vtMissing,
        VARIANT * SortOrder2 = &vtMissing,
        VARIANT * FieldNumber3 = &vtMissing,
        VARIANT * SortFieldType3 = &vtMissing,
        VARIANT * SortOrder3 = &vtMissing,
        VARIANT * SortColumn = &vtMissing,
        VARIANT * Separator = &vtMissing,
        VARIANT * CaseSensitive = &vtMissing,
        VARIANT * BidiSort = &vtMissing,
        VARIANT * IgnoreThe = &vtMissing,
        VARIANT * IgnoreKashida = &vtMissing,
        VARIANT * IgnoreDiacritics = &vtMissing,
        VARIANT * IgnoreHe = &vtMissing,
        VARIANT * LanguageID = &vtMissing );
    HRESULT DetectLanguage ( );
    TablePtr ConvertToTable (
        VARIANT * Separator = &vtMissing,
        VARIANT * NumRows = &vtMissing,
        VARIANT * NumColumns = &vtMissing,
        VARIANT * InitialColumnWidth = &vtMissing,
        VARIANT * Format = &vtMissing,
        VARIANT * ApplyBorders = &vtMissing,
        VARIANT * ApplyShading = &vtMissing,
        VARIANT * ApplyFont = &vtMissing,
        VARIANT * ApplyColor = &vtMissing,
        VARIANT * ApplyHeadingRows = &vtMissing,
        VARIANT * ApplyLastRow = &vtMissing,
        VARIANT * ApplyFirstColumn = &vtMissing,
        VARIANT * ApplyLastColumn = &vtMissing,
        VARIANT * AutoFit = &vtMissing,
        VARIANT * AutoFitBehavior = &vtMissing,
        VARIANT * DefaultTableBehavior = &vtMissing );
    HRESULT TCSCConverter (
        enum WdTCSCConverterDirection WdTCSCConverterDirection,
        VARIANT_BOOL CommonTerms,
        VARIANT_BOOL UseVariants );
    VARIANT_BOOL GetLanguageDetected ( );
    void PutLanguageDetected (
        VARIANT_BOOL prop );
    float GetFitTextWidth ( );
    void PutFitTextWidth (
        float prop );
    enum WdHorizontalInVerticalType GetHorizontalInVertical ( );
    void PutHorizontalInVertical (
        enum WdHorizontalInVerticalType prop );
    enum WdTwoLinesInOneType GetTwoLinesInOne ( );
    void PutTwoLinesInOne (
        enum WdTwoLinesInOneType prop );
    VARIANT_BOOL GetCombineCharacters ( );
    void PutCombineCharacters (
        VARIANT_BOOL prop );
    long GetNoProofing ( );
    void PutNoProofing (
        long prop );
    TablesPtr GetTopLevelTables ( );
    Office::ScriptsPtr GetScripts ( );
    enum WdCharacterWidth GetCharacterWidth ( );
    void PutCharacterWidth (
        enum WdCharacterWidth prop );
    enum WdKana GetKana ( );
    void PutKana (
        enum WdKana prop );
    long GetBoldBi ( );
    void PutBoldBi (
        long prop );
    long GetItalicBi ( );
    void PutItalicBi (
        long prop );
    _bstr_t GetID ( );
    void PutID (
        _bstr_t prop );
    HTMLDivisionsPtr GetHTMLDivisions ( );
    SmartTagsPtr GetSmartTags ( );
    VARIANT_BOOL GetShowAll ( );
    void PutShowAll (
        VARIANT_BOOL prop );
    _DocumentPtr GetDocument ( );
    FootnoteOptionsPtr GetFootnoteOptions ( );
    EndnoteOptionsPtr GetEndnoteOptions ( );
    HRESULT PasteAndFormat (
        enum WdRecoveryType Type );
    HRESULT PasteExcelTable (
        VARIANT_BOOL LinkedToExcel,
        VARIANT_BOOL WordFormatting,
        VARIANT_BOOL RTF );
    HRESULT PasteAppendTable ( );
    XMLNodesPtr GetXMLNodes ( );
    XMLNodePtr GetXMLParentNode ( );
    EditorsPtr GetEditors ( );
    _bstr_t GetXML (
        VARIANT_BOOL DataOnly );
    _variant_t GetEnhMetaFileBits ( );
    RangePtr GoToEditableRange (
        VARIANT * EditorID = &vtMissing );
    HRESULT InsertXML (
        _bstr_t XML,
        VARIANT * Transform = &vtMissing );
    HRESULT InsertCaption (
        VARIANT * Label,
        VARIANT * Title = &vtMissing,
        VARIANT * TitleAutoText = &vtMissing,
        VARIANT * Position = &vtMissing,
        VARIANT * ExcludeLabel = &vtMissing );
    HRESULT InsertCrossReference (
        VARIANT * ReferenceType,
        enum WdReferenceKind ReferenceKind,
        VARIANT * ReferenceItem,
        VARIANT * InsertAsHyperlink = &vtMissing,
        VARIANT * IncludePosition = &vtMissing,
        VARIANT * SeparateNumbers = &vtMissing,
        VARIANT * SeparatorString = &vtMissing );
    OMathsPtr GetOMaths ( );
    _variant_t GetCharacterStyle ( );
    _variant_t GetParagraphStyle ( );
    _variant_t GetListStyle ( );
    _variant_t GetTableStyle ( );
    ContentControlsPtr GetContentControls ( );
    HRESULT ExportFragment (
        _bstr_t FileName,
        enum WdSaveFormat Format );
    _bstr_t GetWordOpenXML ( );
    HRESULT SetListLevel (
        short Level );
    HRESULT InsertAlignmentTab (
        long Alignment,
        long RelativeTo );
    ContentControlPtr GetParentContentControl ( );
    HRESULT ImportFragment (
        _bstr_t FileName,
        VARIANT_BOOL MatchDestination );
    HRESULT ExportAsFixedFormat (
        _bstr_t OutputFileName,
        enum WdExportFormat ExportFormat,
        VARIANT_BOOL OpenAfterExport,
        enum WdExportOptimizeFor OptimizeFor,
        VARIANT_BOOL ExportCurrentPage,
        enum WdExportItem Item,
        VARIANT_BOOL IncludeDocProps,
        VARIANT_BOOL KeepIRM,
        enum WdExportCreateBookmarks CreateBookmarks,
        VARIANT_BOOL DocStructureTags,
        VARIANT_BOOL BitmapMissingFonts,
        VARIANT_BOOL UseISO19005_1,
        VARIANT * FixedFormatExtClassPtr = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_FormattedText (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall put_FormattedText (
        /*[in]*/ struct Range * prop ) = 0;
      virtual HRESULT __stdcall get_Start (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Start (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_End (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_End (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Font (
        /*[out,retval]*/ struct _Font * * prop ) = 0;
      virtual HRESULT __stdcall put_Font (
        /*[in]*/ struct _Font * prop ) = 0;
      virtual HRESULT __stdcall get_Duplicate (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_StoryType (
        /*[out,retval]*/ enum WdStoryType * prop ) = 0;
      virtual HRESULT __stdcall get_Tables (
        /*[out,retval]*/ struct Tables * * prop ) = 0;
      virtual HRESULT __stdcall get_Words (
        /*[out,retval]*/ struct Words * * prop ) = 0;
      virtual HRESULT __stdcall get_Sentences (
        /*[out,retval]*/ struct Sentences * * prop ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[out,retval]*/ struct Characters * * prop ) = 0;
      virtual HRESULT __stdcall get_Footnotes (
        /*[out,retval]*/ struct Footnotes * * prop ) = 0;
      virtual HRESULT __stdcall get_Endnotes (
        /*[out,retval]*/ struct Endnotes * * prop ) = 0;
      virtual HRESULT __stdcall get_Comments (
        /*[out,retval]*/ struct Comments * * prop ) = 0;
      virtual HRESULT __stdcall get_Cells (
        /*[out,retval]*/ struct Cells * * prop ) = 0;
      virtual HRESULT __stdcall get_Sections (
        /*[out,retval]*/ struct Sections * * prop ) = 0;
      virtual HRESULT __stdcall get_Paragraphs (
        /*[out,retval]*/ struct Paragraphs * * prop ) = 0;
      virtual HRESULT __stdcall get_Borders (
        /*[out,retval]*/ struct Borders * * prop ) = 0;
      virtual HRESULT __stdcall put_Borders (
        /*[in]*/ struct Borders * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_TextRetrievalMode (
        /*[out,retval]*/ struct TextRetrievalMode * * prop ) = 0;
      virtual HRESULT __stdcall put_TextRetrievalMode (
        /*[in]*/ struct TextRetrievalMode * prop ) = 0;
      virtual HRESULT __stdcall get_Fields (
        /*[out,retval]*/ struct Fields * * prop ) = 0;
      virtual HRESULT __stdcall get_FormFields (
        /*[out,retval]*/ struct FormFields * * prop ) = 0;
      virtual HRESULT __stdcall get_Frames (
        /*[out,retval]*/ struct Frames * * prop ) = 0;
      virtual HRESULT __stdcall get_ParagraphFormat (
        /*[out,retval]*/ struct _ParagraphFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_ParagraphFormat (
        /*[in]*/ struct _ParagraphFormat * prop ) = 0;
      virtual HRESULT __stdcall get_ListFormat (
        /*[out,retval]*/ struct ListFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Bookmarks (
        /*[out,retval]*/ struct Bookmarks * * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Bold (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Bold (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Italic (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Italic (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Underline (
        /*[out,retval]*/ enum WdUnderline * prop ) = 0;
      virtual HRESULT __stdcall put_Underline (
        /*[in]*/ enum WdUnderline prop ) = 0;
      virtual HRESULT __stdcall get_EmphasisMark (
        /*[out,retval]*/ enum WdEmphasisMark * prop ) = 0;
      virtual HRESULT __stdcall put_EmphasisMark (
        /*[in]*/ enum WdEmphasisMark prop ) = 0;
      virtual HRESULT __stdcall get_DisableCharacterSpaceGrid (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisableCharacterSpaceGrid (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Revisions (
        /*[out,retval]*/ struct Revisions * * prop ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_StoryLength (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageID (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageID (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_SynonymInfo (
        /*[out,retval]*/ struct SynonymInfo * * prop ) = 0;
      virtual HRESULT __stdcall get_Hyperlinks (
        /*[out,retval]*/ struct Hyperlinks * * prop ) = 0;
      virtual HRESULT __stdcall get_ListParagraphs (
        /*[out,retval]*/ struct ListParagraphs * * prop ) = 0;
      virtual HRESULT __stdcall get_Subdocuments (
        /*[out,retval]*/ struct Subdocuments * * prop ) = 0;
      virtual HRESULT __stdcall get_GrammarChecked (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_GrammarChecked (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SpellingChecked (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SpellingChecked (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HighlightColorIndex (
        /*[out,retval]*/ enum WdColorIndex * prop ) = 0;
      virtual HRESULT __stdcall put_HighlightColorIndex (
        /*[in]*/ enum WdColorIndex prop ) = 0;
      virtual HRESULT __stdcall get_Columns (
        /*[out,retval]*/ struct Columns * * prop ) = 0;
      virtual HRESULT __stdcall get_Rows (
        /*[out,retval]*/ struct Rows * * prop ) = 0;
      virtual HRESULT __stdcall get_CanEdit (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_CanPaste (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_IsEndOfRowMark (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_BookmarkID (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_PreviousBookmarkID (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Find (
        /*[out,retval]*/ struct Find * * prop ) = 0;
      virtual HRESULT __stdcall get_PageSetup (
        /*[out,retval]*/ struct PageSetup * * prop ) = 0;
      virtual HRESULT __stdcall put_PageSetup (
        /*[in]*/ struct PageSetup * prop ) = 0;
      virtual HRESULT __stdcall get_ShapeRange (
        /*[out,retval]*/ struct ShapeRange * * prop ) = 0;
      virtual HRESULT __stdcall get_Case (
        /*[out,retval]*/ enum WdCharacterCase * prop ) = 0;
      virtual HRESULT __stdcall put_Case (
        /*[in]*/ enum WdCharacterCase prop ) = 0;
      virtual HRESULT __stdcall get_Information (
        /*[in]*/ enum WdInformation Type,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_ReadabilityStatistics (
        /*[out,retval]*/ struct ReadabilityStatistics * * prop ) = 0;
      virtual HRESULT __stdcall get_GrammaticalErrors (
        /*[out,retval]*/ struct ProofreadingErrors * * prop ) = 0;
      virtual HRESULT __stdcall get_SpellingErrors (
        /*[out,retval]*/ struct ProofreadingErrors * * prop ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ enum WdTextOrientation * prop ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ enum WdTextOrientation prop ) = 0;
      virtual HRESULT __stdcall get_InlineShapes (
        /*[out,retval]*/ struct InlineShapes * * prop ) = 0;
      virtual HRESULT __stdcall get_NextStoryRange (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageIDFarEast (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageIDFarEast (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_LanguageIDOther (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageIDOther (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
      virtual HRESULT __stdcall raw_SetRange (
        /*[in]*/ long Start,
        /*[in]*/ long End ) = 0;
      virtual HRESULT __stdcall raw_Collapse (
        /*[in]*/ VARIANT * Direction = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_InsertBefore (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall raw_InsertAfter (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall raw_Next (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall raw_Previous (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall raw_StartOf (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Extend,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_EndOf (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Extend,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_MoveStart (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_MoveEnd (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_MoveWhile (
        /*[in]*/ VARIANT * Cset,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_MoveStartWhile (
        /*[in]*/ VARIANT * Cset,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_MoveEndWhile (
        /*[in]*/ VARIANT * Cset,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_MoveUntil (
        /*[in]*/ VARIANT * Cset,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_MoveStartUntil (
        /*[in]*/ VARIANT * Cset,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_MoveEndUntil (
        /*[in]*/ VARIANT * Cset,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Cut ( ) = 0;
      virtual HRESULT __stdcall raw_Copy ( ) = 0;
      virtual HRESULT __stdcall raw_Paste ( ) = 0;
      virtual HRESULT __stdcall raw_InsertBreak (
        /*[in]*/ VARIANT * Type = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_InsertFile (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT * Range = &vtMissing,
        /*[in]*/ VARIANT * ConfirmConversions = &vtMissing,
        /*[in]*/ VARIANT * Link = &vtMissing,
        /*[in]*/ VARIANT * Attachment = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_InStory (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_InRange (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_WholeStory ( ) = 0;
      virtual HRESULT __stdcall raw_Expand (
        /*[in]*/ VARIANT * Unit,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_InsertParagraph ( ) = 0;
      virtual HRESULT __stdcall raw_InsertParagraphAfter ( ) = 0;
      virtual HRESULT __stdcall raw_ConvertToTableOld (
        /*[in]*/ VARIANT * Separator,
        /*[in]*/ VARIANT * NumRows,
        /*[in]*/ VARIANT * NumColumns,
        /*[in]*/ VARIANT * InitialColumnWidth,
        /*[in]*/ VARIANT * Format,
        /*[in]*/ VARIANT * ApplyBorders,
        /*[in]*/ VARIANT * ApplyShading,
        /*[in]*/ VARIANT * ApplyFont,
        /*[in]*/ VARIANT * ApplyColor,
        /*[in]*/ VARIANT * ApplyHeadingRows,
        /*[in]*/ VARIANT * ApplyLastRow,
        /*[in]*/ VARIANT * ApplyFirstColumn,
        /*[in]*/ VARIANT * ApplyLastColumn,
        /*[in]*/ VARIANT * AutoFit,
        /*[out,retval]*/ struct Table * * prop ) = 0;
      virtual HRESULT __stdcall raw_InsertDateTimeOld (
        /*[in]*/ VARIANT * DateTimeFormat = &vtMissing,
        /*[in]*/ VARIANT * InsertAsField = &vtMissing,
        /*[in]*/ VARIANT * InsertAsFullWidth = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_InsertSymbol (
        /*[in]*/ long CharacterNumber,
        /*[in]*/ VARIANT * Font = &vtMissing,
        /*[in]*/ VARIANT * Unicode = &vtMissing,
        /*[in]*/ VARIANT * Bias = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_InsertCrossReference_2002 (
        /*[in]*/ VARIANT * ReferenceType,
        /*[in]*/ enum WdReferenceKind ReferenceKind,
        /*[in]*/ VARIANT * ReferenceItem,
        /*[in]*/ VARIANT * InsertAsHyperlink = &vtMissing,
        /*[in]*/ VARIANT * IncludePosition = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_InsertCaptionXP (
        /*[in]*/ VARIANT * Label,
        /*[in]*/ VARIANT * Title = &vtMissing,
        /*[in]*/ VARIANT * TitleAutoText = &vtMissing,
        /*[in]*/ VARIANT * Position = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_CopyAsPicture ( ) = 0;
      virtual HRESULT __stdcall raw_SortOld (
        /*[in]*/ VARIANT * ExcludeHeader = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType = &vtMissing,
        /*[in]*/ VARIANT * SortOrder = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber2 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType2 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder2 = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber3 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType3 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder3 = &vtMissing,
        /*[in]*/ VARIANT * SortColumn = &vtMissing,
        /*[in]*/ VARIANT * Separator = &vtMissing,
        /*[in]*/ VARIANT * CaseSensitive = &vtMissing,
        /*[in]*/ VARIANT * LanguageID = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_SortAscending ( ) = 0;
      virtual HRESULT __stdcall raw_SortDescending ( ) = 0;
      virtual HRESULT __stdcall raw_IsEqual (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_Calculate (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall raw_GoTo (
        /*[in]*/ VARIANT * What,
        /*[in]*/ VARIANT * Which,
        /*[in]*/ VARIANT * Count,
        /*[in]*/ VARIANT * Name,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall raw_GoToNext (
        /*[in]*/ enum WdGoToItem What,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall raw_GoToPrevious (
        /*[in]*/ enum WdGoToItem What,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall raw_PasteSpecial (
        /*[in]*/ VARIANT * IconIndex = &vtMissing,
        /*[in]*/ VARIANT * Link = &vtMissing,
        /*[in]*/ VARIANT * Placement = &vtMissing,
        /*[in]*/ VARIANT * DisplayAsIcon = &vtMissing,
        /*[in]*/ VARIANT * DataType = &vtMissing,
        /*[in]*/ VARIANT * IconFileName = &vtMissing,
        /*[in]*/ VARIANT * IconLabel = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_LookupNameProperties ( ) = 0;
      virtual HRESULT __stdcall raw_ComputeStatistics (
        /*[in]*/ enum WdStatistic Statistic,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Relocate (
        /*[in]*/ long Direction ) = 0;
      virtual HRESULT __stdcall raw_CheckSynonyms ( ) = 0;
      virtual HRESULT __stdcall raw_SubscribeTo (
        /*[in]*/ BSTR Edition,
        /*[in]*/ VARIANT * Format = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_CreatePublisher (
        /*[in]*/ VARIANT * Edition = &vtMissing,
        /*[in]*/ VARIANT * ContainsPICT = &vtMissing,
        /*[in]*/ VARIANT * ContainsRTF = &vtMissing,
        /*[in]*/ VARIANT * ContainsText = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_InsertAutoText ( ) = 0;
      virtual HRESULT __stdcall raw_InsertDatabase (
        /*[in]*/ VARIANT * Format = &vtMissing,
        /*[in]*/ VARIANT * Style = &vtMissing,
        /*[in]*/ VARIANT * LinkToSource = &vtMissing,
        /*[in]*/ VARIANT * Connection = &vtMissing,
        /*[in]*/ VARIANT * SQLStatement = &vtMissing,
        /*[in]*/ VARIANT * SQLStatement1 = &vtMissing,
        /*[in]*/ VARIANT * PasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * PasswordTemplate = &vtMissing,
        /*[in]*/ VARIANT * WritePasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * WritePasswordTemplate = &vtMissing,
        /*[in]*/ VARIANT * DataSource = &vtMissing,
        /*[in]*/ VARIANT * From = &vtMissing,
        /*[in]*/ VARIANT * To = &vtMissing,
        /*[in]*/ VARIANT * IncludeFields = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_AutoFormat ( ) = 0;
      virtual HRESULT __stdcall raw_CheckGrammar ( ) = 0;
      virtual HRESULT __stdcall raw_CheckSpelling (
        /*[in]*/ VARIANT * CustomDictionary = &vtMissing,
        /*[in]*/ VARIANT * IgnoreUppercase = &vtMissing,
        /*[in]*/ VARIANT * AlwaysSuggest = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary2 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary3 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary4 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary5 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary6 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary7 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary8 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary9 = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary10 = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_GetSpellingSuggestions (
        /*[in]*/ VARIANT * CustomDictionary,
        /*[in]*/ VARIANT * IgnoreUppercase,
        /*[in]*/ VARIANT * MainDictionary,
        /*[in]*/ VARIANT * SuggestionMode,
        /*[in]*/ VARIANT * CustomDictionary2,
        /*[in]*/ VARIANT * CustomDictionary3,
        /*[in]*/ VARIANT * CustomDictionary4,
        /*[in]*/ VARIANT * CustomDictionary5,
        /*[in]*/ VARIANT * CustomDictionary6,
        /*[in]*/ VARIANT * CustomDictionary7,
        /*[in]*/ VARIANT * CustomDictionary8,
        /*[in]*/ VARIANT * CustomDictionary9,
        /*[in]*/ VARIANT * CustomDictionary10,
        /*[out,retval]*/ struct SpellingSuggestions * * prop ) = 0;
      virtual HRESULT __stdcall raw_InsertParagraphBefore ( ) = 0;
      virtual HRESULT __stdcall raw_NextSubdocument ( ) = 0;
      virtual HRESULT __stdcall raw_PreviousSubdocument ( ) = 0;
      virtual HRESULT __stdcall raw_ConvertHangulAndHanja (
        /*[in]*/ VARIANT * ConversionsMode = &vtMissing,
        /*[in]*/ VARIANT * FastConversion = &vtMissing,
        /*[in]*/ VARIANT * CheckHangulEnding = &vtMissing,
        /*[in]*/ VARIANT * EnableRecentOrdering = &vtMissing,
        /*[in]*/ VARIANT * CustomDictionary = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_PasteAsNestedTable ( ) = 0;
      virtual HRESULT __stdcall raw_ModifyEnclosure (
        /*[in]*/ VARIANT * Style,
        /*[in]*/ VARIANT * Symbol = &vtMissing,
        /*[in]*/ VARIANT * EnclosedText = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_PhoneticGuide (
        /*[in]*/ BSTR Text,
        /*[in]*/ enum WdPhoneticGuideAlignmentType Alignment,
        /*[in]*/ long Raise,
        /*[in]*/ long FontSize,
        /*[in]*/ BSTR FontName ) = 0;
      virtual HRESULT __stdcall raw_InsertDateTime (
        /*[in]*/ VARIANT * DateTimeFormat = &vtMissing,
        /*[in]*/ VARIANT * InsertAsField = &vtMissing,
        /*[in]*/ VARIANT * InsertAsFullWidth = &vtMissing,
        /*[in]*/ VARIANT * DateLanguage = &vtMissing,
        /*[in]*/ VARIANT * CalendarType = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Sort (
        /*[in]*/ VARIANT * ExcludeHeader = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType = &vtMissing,
        /*[in]*/ VARIANT * SortOrder = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber2 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType2 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder2 = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber3 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType3 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder3 = &vtMissing,
        /*[in]*/ VARIANT * SortColumn = &vtMissing,
        /*[in]*/ VARIANT * Separator = &vtMissing,
        /*[in]*/ VARIANT * CaseSensitive = &vtMissing,
        /*[in]*/ VARIANT * BidiSort = &vtMissing,
        /*[in]*/ VARIANT * IgnoreThe = &vtMissing,
        /*[in]*/ VARIANT * IgnoreKashida = &vtMissing,
        /*[in]*/ VARIANT * IgnoreDiacritics = &vtMissing,
        /*[in]*/ VARIANT * IgnoreHe = &vtMissing,
        /*[in]*/ VARIANT * LanguageID = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_DetectLanguage ( ) = 0;
      virtual HRESULT __stdcall raw_ConvertToTable (
        /*[in]*/ VARIANT * Separator,
        /*[in]*/ VARIANT * NumRows,
        /*[in]*/ VARIANT * NumColumns,
        /*[in]*/ VARIANT * InitialColumnWidth,
        /*[in]*/ VARIANT * Format,
        /*[in]*/ VARIANT * ApplyBorders,
        /*[in]*/ VARIANT * ApplyShading,
        /*[in]*/ VARIANT * ApplyFont,
        /*[in]*/ VARIANT * ApplyColor,
        /*[in]*/ VARIANT * ApplyHeadingRows,
        /*[in]*/ VARIANT * ApplyLastRow,
        /*[in]*/ VARIANT * ApplyFirstColumn,
        /*[in]*/ VARIANT * ApplyLastColumn,
        /*[in]*/ VARIANT * AutoFit,
        /*[in]*/ VARIANT * AutoFitBehavior,
        /*[in]*/ VARIANT * DefaultTableBehavior,
        /*[out,retval]*/ struct Table * * prop ) = 0;
      virtual HRESULT __stdcall raw_TCSCConverter (
        /*[in]*/ enum WdTCSCConverterDirection WdTCSCConverterDirection,
        /*[in]*/ VARIANT_BOOL CommonTerms,
        /*[in]*/ VARIANT_BOOL UseVariants ) = 0;
      virtual HRESULT __stdcall get_LanguageDetected (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageDetected (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FitTextWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_FitTextWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalInVertical (
        /*[out,retval]*/ enum WdHorizontalInVerticalType * prop ) = 0;
      virtual HRESULT __stdcall put_HorizontalInVertical (
        /*[in]*/ enum WdHorizontalInVerticalType prop ) = 0;
      virtual HRESULT __stdcall get_TwoLinesInOne (
        /*[out,retval]*/ enum WdTwoLinesInOneType * prop ) = 0;
      virtual HRESULT __stdcall put_TwoLinesInOne (
        /*[in]*/ enum WdTwoLinesInOneType prop ) = 0;
      virtual HRESULT __stdcall get_CombineCharacters (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CombineCharacters (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_NoProofing (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_NoProofing (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_TopLevelTables (
        /*[out,retval]*/ struct Tables * * prop ) = 0;
      virtual HRESULT __stdcall get_Scripts (
        /*[out,retval]*/ struct Office::Scripts * * prop ) = 0;
      virtual HRESULT __stdcall get_CharacterWidth (
        /*[out,retval]*/ enum WdCharacterWidth * prop ) = 0;
      virtual HRESULT __stdcall put_CharacterWidth (
        /*[in]*/ enum WdCharacterWidth prop ) = 0;
      virtual HRESULT __stdcall get_Kana (
        /*[out,retval]*/ enum WdKana * prop ) = 0;
      virtual HRESULT __stdcall put_Kana (
        /*[in]*/ enum WdKana prop ) = 0;
      virtual HRESULT __stdcall get_BoldBi (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_BoldBi (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ItalicBi (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ItalicBi (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ID (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_HTMLDivisions (
        /*[out,retval]*/ struct HTMLDivisions * * prop ) = 0;
      virtual HRESULT __stdcall get_SmartTags (
        /*[out,retval]*/ struct SmartTags * * prop ) = 0;
      virtual HRESULT __stdcall get_ShowAll (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowAll (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall get_FootnoteOptions (
        /*[out,retval]*/ struct FootnoteOptions * * prop ) = 0;
      virtual HRESULT __stdcall get_EndnoteOptions (
        /*[out,retval]*/ struct EndnoteOptions * * prop ) = 0;
      virtual HRESULT __stdcall raw_PasteAndFormat (
        /*[in]*/ enum WdRecoveryType Type ) = 0;
      virtual HRESULT __stdcall raw_PasteExcelTable (
        /*[in]*/ VARIANT_BOOL LinkedToExcel,
        /*[in]*/ VARIANT_BOOL WordFormatting,
        /*[in]*/ VARIANT_BOOL RTF ) = 0;
      virtual HRESULT __stdcall raw_PasteAppendTable ( ) = 0;
      virtual HRESULT __stdcall get_XMLNodes (
        /*[out,retval]*/ struct XMLNodes * * prop ) = 0;
      virtual HRESULT __stdcall get_XMLParentNode (
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
      virtual HRESULT __stdcall get_Editors (
        /*[out,retval]*/ struct Editors * * prop ) = 0;
      virtual HRESULT __stdcall get_XML (
        /*[in]*/ VARIANT_BOOL DataOnly,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_EnhMetaFileBits (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall raw_GoToEditableRange (
        /*[in]*/ VARIANT * EditorID,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall raw_InsertXML (
        /*[in]*/ BSTR XML,
        /*[in]*/ VARIANT * Transform = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_InsertCaption (
        /*[in]*/ VARIANT * Label,
        /*[in]*/ VARIANT * Title = &vtMissing,
        /*[in]*/ VARIANT * TitleAutoText = &vtMissing,
        /*[in]*/ VARIANT * Position = &vtMissing,
        /*[in]*/ VARIANT * ExcludeLabel = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_InsertCrossReference (
        /*[in]*/ VARIANT * ReferenceType,
        /*[in]*/ enum WdReferenceKind ReferenceKind,
        /*[in]*/ VARIANT * ReferenceItem,
        /*[in]*/ VARIANT * InsertAsHyperlink = &vtMissing,
        /*[in]*/ VARIANT * IncludePosition = &vtMissing,
        /*[in]*/ VARIANT * SeparateNumbers = &vtMissing,
        /*[in]*/ VARIANT * SeparatorString = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_OMaths (
        /*[out,retval]*/ struct OMaths * * prop ) = 0;
      virtual HRESULT __stdcall get_CharacterStyle (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_ParagraphStyle (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_ListStyle (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_TableStyle (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_ContentControls (
        /*[out,retval]*/ struct ContentControls * * prop ) = 0;
      virtual HRESULT __stdcall raw_ExportFragment (
        /*[in]*/ BSTR FileName,
        /*[in]*/ enum WdSaveFormat Format ) = 0;
      virtual HRESULT __stdcall get_WordOpenXML (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall raw_SetListLevel (
        /*[in]*/ short Level ) = 0;
      virtual HRESULT __stdcall raw_InsertAlignmentTab (
        /*[in]*/ long Alignment,
        /*[in]*/ long RelativeTo ) = 0;
      virtual HRESULT __stdcall get_ParentContentControl (
        /*[out,retval]*/ struct ContentControl * * prop ) = 0;
      virtual HRESULT __stdcall raw_ImportFragment (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT_BOOL MatchDestination ) = 0;
      virtual HRESULT __stdcall raw_ExportAsFixedFormat (
        /*[in]*/ BSTR OutputFileName,
        /*[in]*/ enum WdExportFormat ExportFormat,
        /*[in]*/ VARIANT_BOOL OpenAfterExport,
        /*[in]*/ enum WdExportOptimizeFor OptimizeFor,
        /*[in]*/ VARIANT_BOOL ExportCurrentPage,
        /*[in]*/ enum WdExportItem Item,
        /*[in]*/ VARIANT_BOOL IncludeDocProps,
        /*[in]*/ VARIANT_BOOL KeepIRM,
        /*[in]*/ enum WdExportCreateBookmarks CreateBookmarks,
        /*[in]*/ VARIANT_BOOL DocStructureTags,
        /*[in]*/ VARIANT_BOOL BitmapMissingFonts,
        /*[in]*/ VARIANT_BOOL UseISO19005_1,
        /*[in]*/ VARIANT * FixedFormatExtClassPtr = &vtMissing ) = 0;
};

struct __declspec(uuid("0002095d-0000-0000-c000-000000000046"))
Characters : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetFirst))
    RangePtr First;
    __declspec(property(get=GetLast))
    RangePtr Last;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    RangePtr GetFirst ( );
    RangePtr GetLast ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    RangePtr Item (
        long Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_First (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Last (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Range * * prop ) = 0;
};

struct __declspec(uuid("0002095c-0000-0000-c000-000000000046"))
Words : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetFirst))
    RangePtr First;
    __declspec(property(get=GetLast))
    RangePtr Last;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    RangePtr GetFirst ( );
    RangePtr GetLast ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    RangePtr Item (
        long Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_First (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Last (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Range * * prop ) = 0;
};

struct __declspec(uuid("0002095b-0000-0000-c000-000000000046"))
Sentences : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetFirst))
    RangePtr First;
    __declspec(property(get=GetLast))
    RangePtr Last;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    RangePtr GetFirst ( );
    RangePtr GetLast ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    RangePtr Item (
        long Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_First (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Last (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Range * * prop ) = 0;
};

struct __declspec(uuid("00020957-0000-0000-c000-000000000046"))
Paragraph : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetDropCap))
    DropCapPtr DropCap;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetAlignment,put=PutAlignment))
    enum WdParagraphAlignment Alignment;
    __declspec(property(get=GetKeepTogether,put=PutKeepTogether))
    long KeepTogether;
    __declspec(property(get=GetKeepWithNext,put=PutKeepWithNext))
    long KeepWithNext;
    __declspec(property(get=GetPageBreakBefore,put=PutPageBreakBefore))
    long PageBreakBefore;
    __declspec(property(get=GetNoLineNumber,put=PutNoLineNumber))
    long NoLineNumber;
    __declspec(property(get=GetRightIndent,put=PutRightIndent))
    float RightIndent;
    __declspec(property(get=GetLeftIndent,put=PutLeftIndent))
    float LeftIndent;
    __declspec(property(get=GetFirstLineIndent,put=PutFirstLineIndent))
    float FirstLineIndent;
    __declspec(property(get=GetLineSpacing,put=PutLineSpacing))
    float LineSpacing;
    __declspec(property(get=GetLineSpacingRule,put=PutLineSpacingRule))
    enum WdLineSpacing LineSpacingRule;
    __declspec(property(get=GetSpaceBefore,put=PutSpaceBefore))
    float SpaceBefore;
    __declspec(property(get=GetSpaceAfter,put=PutSpaceAfter))
    float SpaceAfter;
    __declspec(property(get=GetHyphenation,put=PutHyphenation))
    long Hyphenation;
    __declspec(property(get=GetWidowControl,put=PutWidowControl))
    long WidowControl;
    __declspec(property(get=GetBorders,put=PutBorders))
    BordersPtr Borders;
    __declspec(property(get=GetShading))
    ShadingPtr Shading;
    __declspec(property(get=GetFormat,put=PutFormat))
    _ParagraphFormatPtr Format;
    __declspec(property(get=GetTabStops,put=PutTabStops))
    TabStopsPtr TabStops;
    __declspec(property(get=GetHalfWidthPunctuationOnTopOfLine,put=PutHalfWidthPunctuationOnTopOfLine))
    long HalfWidthPunctuationOnTopOfLine;
    __declspec(property(get=GetAddSpaceBetweenFarEastAndAlpha,put=PutAddSpaceBetweenFarEastAndAlpha))
    long AddSpaceBetweenFarEastAndAlpha;
    __declspec(property(get=GetAddSpaceBetweenFarEastAndDigit,put=PutAddSpaceBetweenFarEastAndDigit))
    long AddSpaceBetweenFarEastAndDigit;
    __declspec(property(get=GetBaseLineAlignment,put=PutBaseLineAlignment))
    enum WdBaselineAlignment BaseLineAlignment;
    __declspec(property(get=GetAutoAdjustRightIndent,put=PutAutoAdjustRightIndent))
    long AutoAdjustRightIndent;
    __declspec(property(get=GetDisableLineHeightGrid,put=PutDisableLineHeightGrid))
    long DisableLineHeightGrid;
    __declspec(property(get=GetCharacterUnitRightIndent,put=PutCharacterUnitRightIndent))
    float CharacterUnitRightIndent;
    __declspec(property(get=GetCharacterUnitLeftIndent,put=PutCharacterUnitLeftIndent))
    float CharacterUnitLeftIndent;
    __declspec(property(get=GetCharacterUnitFirstLineIndent,put=PutCharacterUnitFirstLineIndent))
    float CharacterUnitFirstLineIndent;
    __declspec(property(get=GetLineUnitBefore,put=PutLineUnitBefore))
    float LineUnitBefore;
    __declspec(property(get=GetLineUnitAfter,put=PutLineUnitAfter))
    float LineUnitAfter;
    __declspec(property(get=GetOutlineLevel,put=PutOutlineLevel))
    enum WdOutlineLevel OutlineLevel;
    __declspec(property(get=GetReadingOrder,put=PutReadingOrder))
    enum WdReadingOrder ReadingOrder;
    __declspec(property(get=GetID,put=PutID))
    _bstr_t ID;
    __declspec(property(get=GetFarEastLineBreakControl,put=PutFarEastLineBreakControl))
    long FarEastLineBreakControl;
    __declspec(property(get=GetWordWrap,put=PutWordWrap))
    long WordWrap;
    __declspec(property(get=GetHangingPunctuation,put=PutHangingPunctuation))
    long HangingPunctuation;
    __declspec(property(get=GetSpaceBeforeAuto,put=PutSpaceBeforeAuto))
    long SpaceBeforeAuto;
    __declspec(property(get=GetSpaceAfterAuto,put=PutSpaceAfterAuto))
    long SpaceAfterAuto;
    __declspec(property(get=GetIsStyleSeparator))
    VARIANT_BOOL IsStyleSeparator;
    __declspec(property(get=GetMirrorIndents,put=PutMirrorIndents))
    long MirrorIndents;
    __declspec(property(get=GetTextboxTightWrap,put=PutTextboxTightWrap))
    enum WdTextboxTightWrap TextboxTightWrap;
    __declspec(property(get=GetListNumberOriginal))
    short ListNumberOriginal[];

    //
    // Wrapper methods for error-handling
    //

    RangePtr GetRange ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _ParagraphFormatPtr GetFormat ( );
    void PutFormat (
        struct _ParagraphFormat * prop );
    TabStopsPtr GetTabStops ( );
    void PutTabStops (
        struct TabStops * prop );
    BordersPtr GetBorders ( );
    void PutBorders (
        struct Borders * prop );
    DropCapPtr GetDropCap ( );
    _variant_t GetStyle ( );
    void PutStyle (
        VARIANT * prop );
    enum WdParagraphAlignment GetAlignment ( );
    void PutAlignment (
        enum WdParagraphAlignment prop );
    long GetKeepTogether ( );
    void PutKeepTogether (
        long prop );
    long GetKeepWithNext ( );
    void PutKeepWithNext (
        long prop );
    long GetPageBreakBefore ( );
    void PutPageBreakBefore (
        long prop );
    long GetNoLineNumber ( );
    void PutNoLineNumber (
        long prop );
    float GetRightIndent ( );
    void PutRightIndent (
        float prop );
    float GetLeftIndent ( );
    void PutLeftIndent (
        float prop );
    float GetFirstLineIndent ( );
    void PutFirstLineIndent (
        float prop );
    float GetLineSpacing ( );
    void PutLineSpacing (
        float prop );
    enum WdLineSpacing GetLineSpacingRule ( );
    void PutLineSpacingRule (
        enum WdLineSpacing prop );
    float GetSpaceBefore ( );
    void PutSpaceBefore (
        float prop );
    float GetSpaceAfter ( );
    void PutSpaceAfter (
        float prop );
    long GetHyphenation ( );
    void PutHyphenation (
        long prop );
    long GetWidowControl ( );
    void PutWidowControl (
        long prop );
    ShadingPtr GetShading ( );
    long GetFarEastLineBreakControl ( );
    void PutFarEastLineBreakControl (
        long prop );
    long GetWordWrap ( );
    void PutWordWrap (
        long prop );
    long GetHangingPunctuation ( );
    void PutHangingPunctuation (
        long prop );
    long GetHalfWidthPunctuationOnTopOfLine ( );
    void PutHalfWidthPunctuationOnTopOfLine (
        long prop );
    long GetAddSpaceBetweenFarEastAndAlpha ( );
    void PutAddSpaceBetweenFarEastAndAlpha (
        long prop );
    long GetAddSpaceBetweenFarEastAndDigit ( );
    void PutAddSpaceBetweenFarEastAndDigit (
        long prop );
    enum WdBaselineAlignment GetBaseLineAlignment ( );
    void PutBaseLineAlignment (
        enum WdBaselineAlignment prop );
    long GetAutoAdjustRightIndent ( );
    void PutAutoAdjustRightIndent (
        long prop );
    long GetDisableLineHeightGrid ( );
    void PutDisableLineHeightGrid (
        long prop );
    enum WdOutlineLevel GetOutlineLevel ( );
    void PutOutlineLevel (
        enum WdOutlineLevel prop );
    HRESULT CloseUp ( );
    HRESULT OpenUp ( );
    HRESULT OpenOrCloseUp ( );
    HRESULT TabHangingIndent (
        short Count );
    HRESULT TabIndent (
        short Count );
    HRESULT Reset ( );
    HRESULT Space1 ( );
    HRESULT Space15 ( );
    HRESULT Space2 ( );
    HRESULT IndentCharWidth (
        short Count );
    HRESULT IndentFirstLineCharWidth (
        short Count );
    ParagraphPtr Next (
        VARIANT * Count = &vtMissing );
    ParagraphPtr Previous (
        VARIANT * Count = &vtMissing );
    HRESULT OutlinePromote ( );
    HRESULT OutlineDemote ( );
    HRESULT OutlineDemoteToBody ( );
    HRESULT Indent ( );
    HRESULT Outdent ( );
    float GetCharacterUnitRightIndent ( );
    void PutCharacterUnitRightIndent (
        float prop );
    float GetCharacterUnitLeftIndent ( );
    void PutCharacterUnitLeftIndent (
        float prop );
    float GetCharacterUnitFirstLineIndent ( );
    void PutCharacterUnitFirstLineIndent (
        float prop );
    float GetLineUnitBefore ( );
    void PutLineUnitBefore (
        float prop );
    float GetLineUnitAfter ( );
    void PutLineUnitAfter (
        float prop );
    enum WdReadingOrder GetReadingOrder ( );
    void PutReadingOrder (
        enum WdReadingOrder prop );
    _bstr_t GetID ( );
    void PutID (
        _bstr_t prop );
    long GetSpaceBeforeAuto ( );
    void PutSpaceBeforeAuto (
        long prop );
    long GetSpaceAfterAuto ( );
    void PutSpaceAfterAuto (
        long prop );
    VARIANT_BOOL GetIsStyleSeparator ( );
    HRESULT SelectNumber ( );
    HRESULT ListAdvanceTo (
        short Level1,
        short Level2,
        short Level3,
        short Level4,
        short Level5,
        short Level6,
        short Level7,
        short Level8,
        short Level9 );
    HRESULT ResetAdvanceTo ( );
    HRESULT SeparateList ( );
    HRESULT JoinList ( );
    long GetMirrorIndents ( );
    void PutMirrorIndents (
        long prop );
    enum WdTextboxTightWrap GetTextboxTightWrap ( );
    void PutTextboxTightWrap (
        enum WdTextboxTightWrap prop );
    short GetListNumberOriginal (
        short Level );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct _ParagraphFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_Format (
        /*[in]*/ struct _ParagraphFormat * prop ) = 0;
      virtual HRESULT __stdcall get_TabStops (
        /*[out,retval]*/ struct TabStops * * prop ) = 0;
      virtual HRESULT __stdcall put_TabStops (
        /*[in]*/ struct TabStops * prop ) = 0;
      virtual HRESULT __stdcall get_Borders (
        /*[out,retval]*/ struct Borders * * prop ) = 0;
      virtual HRESULT __stdcall put_Borders (
        /*[in]*/ struct Borders * prop ) = 0;
      virtual HRESULT __stdcall get_DropCap (
        /*[out,retval]*/ struct DropCap * * prop ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum WdParagraphAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum WdParagraphAlignment prop ) = 0;
      virtual HRESULT __stdcall get_KeepTogether (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_KeepTogether (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_KeepWithNext (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_KeepWithNext (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_PageBreakBefore (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_PageBreakBefore (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_NoLineNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_NoLineNumber (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_RightIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RightIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LeftIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_FirstLineIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_FirstLineIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LineSpacing (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LineSpacing (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LineSpacingRule (
        /*[out,retval]*/ enum WdLineSpacing * prop ) = 0;
      virtual HRESULT __stdcall put_LineSpacingRule (
        /*[in]*/ enum WdLineSpacing prop ) = 0;
      virtual HRESULT __stdcall get_SpaceBefore (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceBefore (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_SpaceAfter (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceAfter (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Hyphenation (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Hyphenation (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_WidowControl (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_WidowControl (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_FarEastLineBreakControl (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_FarEastLineBreakControl (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_WordWrap (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_WordWrap (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_HangingPunctuation (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_HangingPunctuation (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_HalfWidthPunctuationOnTopOfLine (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_HalfWidthPunctuationOnTopOfLine (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_AddSpaceBetweenFarEastAndAlpha (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AddSpaceBetweenFarEastAndAlpha (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_AddSpaceBetweenFarEastAndDigit (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AddSpaceBetweenFarEastAndDigit (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_BaseLineAlignment (
        /*[out,retval]*/ enum WdBaselineAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_BaseLineAlignment (
        /*[in]*/ enum WdBaselineAlignment prop ) = 0;
      virtual HRESULT __stdcall get_AutoAdjustRightIndent (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AutoAdjustRightIndent (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DisableLineHeightGrid (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DisableLineHeightGrid (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_OutlineLevel (
        /*[out,retval]*/ enum WdOutlineLevel * prop ) = 0;
      virtual HRESULT __stdcall put_OutlineLevel (
        /*[in]*/ enum WdOutlineLevel prop ) = 0;
      virtual HRESULT __stdcall raw_CloseUp ( ) = 0;
      virtual HRESULT __stdcall raw_OpenUp ( ) = 0;
      virtual HRESULT __stdcall raw_OpenOrCloseUp ( ) = 0;
      virtual HRESULT __stdcall raw_TabHangingIndent (
        /*[in]*/ short Count ) = 0;
      virtual HRESULT __stdcall raw_TabIndent (
        /*[in]*/ short Count ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_Space1 ( ) = 0;
      virtual HRESULT __stdcall raw_Space15 ( ) = 0;
      virtual HRESULT __stdcall raw_Space2 ( ) = 0;
      virtual HRESULT __stdcall raw_IndentCharWidth (
        /*[in]*/ short Count ) = 0;
      virtual HRESULT __stdcall raw_IndentFirstLineCharWidth (
        /*[in]*/ short Count ) = 0;
      virtual HRESULT __stdcall raw_Next (
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ struct Paragraph * * prop ) = 0;
      virtual HRESULT __stdcall raw_Previous (
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ struct Paragraph * * prop ) = 0;
      virtual HRESULT __stdcall raw_OutlinePromote ( ) = 0;
      virtual HRESULT __stdcall raw_OutlineDemote ( ) = 0;
      virtual HRESULT __stdcall raw_OutlineDemoteToBody ( ) = 0;
      virtual HRESULT __stdcall raw_Indent ( ) = 0;
      virtual HRESULT __stdcall raw_Outdent ( ) = 0;
      virtual HRESULT __stdcall get_CharacterUnitRightIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CharacterUnitRightIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_CharacterUnitLeftIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CharacterUnitLeftIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_CharacterUnitFirstLineIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CharacterUnitFirstLineIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LineUnitBefore (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LineUnitBefore (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LineUnitAfter (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LineUnitAfter (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ enum WdReadingOrder * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ enum WdReadingOrder prop ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ID (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_SpaceBeforeAuto (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceBeforeAuto (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_SpaceAfterAuto (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceAfterAuto (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_IsStyleSeparator (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_SelectNumber ( ) = 0;
      virtual HRESULT __stdcall raw_ListAdvanceTo (
        /*[in]*/ short Level1,
        /*[in]*/ short Level2,
        /*[in]*/ short Level3,
        /*[in]*/ short Level4,
        /*[in]*/ short Level5,
        /*[in]*/ short Level6,
        /*[in]*/ short Level7,
        /*[in]*/ short Level8,
        /*[in]*/ short Level9 ) = 0;
      virtual HRESULT __stdcall raw_ResetAdvanceTo ( ) = 0;
      virtual HRESULT __stdcall raw_SeparateList ( ) = 0;
      virtual HRESULT __stdcall raw_JoinList ( ) = 0;
      virtual HRESULT __stdcall get_MirrorIndents (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_MirrorIndents (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_TextboxTightWrap (
        /*[out,retval]*/ enum WdTextboxTightWrap * prop ) = 0;
      virtual HRESULT __stdcall put_TextboxTightWrap (
        /*[in]*/ enum WdTextboxTightWrap prop ) = 0;
      virtual HRESULT __stdcall get_ListNumberOriginal (
        /*[in]*/ short Level,
        /*[out,retval]*/ short * prop ) = 0;
};

struct __declspec(uuid("00020958-0000-0000-c000-000000000046"))
Paragraphs : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetFirst))
    ParagraphPtr First;
    __declspec(property(get=GetLast))
    ParagraphPtr Last;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetAlignment,put=PutAlignment))
    enum WdParagraphAlignment Alignment;
    __declspec(property(get=GetKeepTogether,put=PutKeepTogether))
    long KeepTogether;
    __declspec(property(get=GetKeepWithNext,put=PutKeepWithNext))
    long KeepWithNext;
    __declspec(property(get=GetPageBreakBefore,put=PutPageBreakBefore))
    long PageBreakBefore;
    __declspec(property(get=GetNoLineNumber,put=PutNoLineNumber))
    long NoLineNumber;
    __declspec(property(get=GetRightIndent,put=PutRightIndent))
    float RightIndent;
    __declspec(property(get=GetLeftIndent,put=PutLeftIndent))
    float LeftIndent;
    __declspec(property(get=GetFirstLineIndent,put=PutFirstLineIndent))
    float FirstLineIndent;
    __declspec(property(get=GetLineSpacing,put=PutLineSpacing))
    float LineSpacing;
    __declspec(property(get=GetLineSpacingRule,put=PutLineSpacingRule))
    enum WdLineSpacing LineSpacingRule;
    __declspec(property(get=GetSpaceBefore,put=PutSpaceBefore))
    float SpaceBefore;
    __declspec(property(get=GetSpaceAfter,put=PutSpaceAfter))
    float SpaceAfter;
    __declspec(property(get=GetHyphenation,put=PutHyphenation))
    long Hyphenation;
    __declspec(property(get=GetWidowControl,put=PutWidowControl))
    long WidowControl;
    __declspec(property(get=GetBorders,put=PutBorders))
    BordersPtr Borders;
    __declspec(property(get=GetShading))
    ShadingPtr Shading;
    __declspec(property(get=GetFormat,put=PutFormat))
    _ParagraphFormatPtr Format;
    __declspec(property(get=GetTabStops,put=PutTabStops))
    TabStopsPtr TabStops;
    __declspec(property(get=GetHalfWidthPunctuationOnTopOfLine,put=PutHalfWidthPunctuationOnTopOfLine))
    long HalfWidthPunctuationOnTopOfLine;
    __declspec(property(get=GetAddSpaceBetweenFarEastAndAlpha,put=PutAddSpaceBetweenFarEastAndAlpha))
    long AddSpaceBetweenFarEastAndAlpha;
    __declspec(property(get=GetAddSpaceBetweenFarEastAndDigit,put=PutAddSpaceBetweenFarEastAndDigit))
    long AddSpaceBetweenFarEastAndDigit;
    __declspec(property(get=GetBaseLineAlignment,put=PutBaseLineAlignment))
    enum WdBaselineAlignment BaseLineAlignment;
    __declspec(property(get=GetAutoAdjustRightIndent,put=PutAutoAdjustRightIndent))
    long AutoAdjustRightIndent;
    __declspec(property(get=GetDisableLineHeightGrid,put=PutDisableLineHeightGrid))
    long DisableLineHeightGrid;
    __declspec(property(get=GetCharacterUnitRightIndent,put=PutCharacterUnitRightIndent))
    float CharacterUnitRightIndent;
    __declspec(property(get=GetCharacterUnitLeftIndent,put=PutCharacterUnitLeftIndent))
    float CharacterUnitLeftIndent;
    __declspec(property(get=GetCharacterUnitFirstLineIndent,put=PutCharacterUnitFirstLineIndent))
    float CharacterUnitFirstLineIndent;
    __declspec(property(get=GetLineUnitBefore,put=PutLineUnitBefore))
    float LineUnitBefore;
    __declspec(property(get=GetLineUnitAfter,put=PutLineUnitAfter))
    float LineUnitAfter;
    __declspec(property(get=GetOutlineLevel,put=PutOutlineLevel))
    enum WdOutlineLevel OutlineLevel;
    __declspec(property(get=GetFarEastLineBreakControl,put=PutFarEastLineBreakControl))
    long FarEastLineBreakControl;
    __declspec(property(get=GetWordWrap,put=PutWordWrap))
    long WordWrap;
    __declspec(property(get=GetHangingPunctuation,put=PutHangingPunctuation))
    long HangingPunctuation;
    __declspec(property(get=GetReadingOrder,put=PutReadingOrder))
    enum WdReadingOrder ReadingOrder;
    __declspec(property(get=GetSpaceBeforeAuto,put=PutSpaceBeforeAuto))
    long SpaceBeforeAuto;
    __declspec(property(get=GetSpaceAfterAuto,put=PutSpaceAfterAuto))
    long SpaceAfterAuto;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    ParagraphPtr GetFirst ( );
    ParagraphPtr GetLast ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _ParagraphFormatPtr GetFormat ( );
    void PutFormat (
        struct _ParagraphFormat * prop );
    TabStopsPtr GetTabStops ( );
    void PutTabStops (
        struct TabStops * prop );
    BordersPtr GetBorders ( );
    void PutBorders (
        struct Borders * prop );
    _variant_t GetStyle ( );
    void PutStyle (
        VARIANT * prop );
    enum WdParagraphAlignment GetAlignment ( );
    void PutAlignment (
        enum WdParagraphAlignment prop );
    long GetKeepTogether ( );
    void PutKeepTogether (
        long prop );
    long GetKeepWithNext ( );
    void PutKeepWithNext (
        long prop );
    long GetPageBreakBefore ( );
    void PutPageBreakBefore (
        long prop );
    long GetNoLineNumber ( );
    void PutNoLineNumber (
        long prop );
    float GetRightIndent ( );
    void PutRightIndent (
        float prop );
    float GetLeftIndent ( );
    void PutLeftIndent (
        float prop );
    float GetFirstLineIndent ( );
    void PutFirstLineIndent (
        float prop );
    float GetLineSpacing ( );
    void PutLineSpacing (
        float prop );
    enum WdLineSpacing GetLineSpacingRule ( );
    void PutLineSpacingRule (
        enum WdLineSpacing prop );
    float GetSpaceBefore ( );
    void PutSpaceBefore (
        float prop );
    float GetSpaceAfter ( );
    void PutSpaceAfter (
        float prop );
    long GetHyphenation ( );
    void PutHyphenation (
        long prop );
    long GetWidowControl ( );
    void PutWidowControl (
        long prop );
    ShadingPtr GetShading ( );
    long GetFarEastLineBreakControl ( );
    void PutFarEastLineBreakControl (
        long prop );
    long GetWordWrap ( );
    void PutWordWrap (
        long prop );
    long GetHangingPunctuation ( );
    void PutHangingPunctuation (
        long prop );
    long GetHalfWidthPunctuationOnTopOfLine ( );
    void PutHalfWidthPunctuationOnTopOfLine (
        long prop );
    long GetAddSpaceBetweenFarEastAndAlpha ( );
    void PutAddSpaceBetweenFarEastAndAlpha (
        long prop );
    long GetAddSpaceBetweenFarEastAndDigit ( );
    void PutAddSpaceBetweenFarEastAndDigit (
        long prop );
    enum WdBaselineAlignment GetBaseLineAlignment ( );
    void PutBaseLineAlignment (
        enum WdBaselineAlignment prop );
    long GetAutoAdjustRightIndent ( );
    void PutAutoAdjustRightIndent (
        long prop );
    long GetDisableLineHeightGrid ( );
    void PutDisableLineHeightGrid (
        long prop );
    enum WdOutlineLevel GetOutlineLevel ( );
    void PutOutlineLevel (
        enum WdOutlineLevel prop );
    ParagraphPtr Item (
        long Index );
    ParagraphPtr Add (
        VARIANT * Range = &vtMissing );
    HRESULT CloseUp ( );
    HRESULT OpenUp ( );
    HRESULT OpenOrCloseUp ( );
    HRESULT TabHangingIndent (
        short Count );
    HRESULT TabIndent (
        short Count );
    HRESULT Reset ( );
    HRESULT Space1 ( );
    HRESULT Space15 ( );
    HRESULT Space2 ( );
    HRESULT IndentCharWidth (
        short Count );
    HRESULT IndentFirstLineCharWidth (
        short Count );
    HRESULT OutlinePromote ( );
    HRESULT OutlineDemote ( );
    HRESULT OutlineDemoteToBody ( );
    HRESULT Indent ( );
    HRESULT Outdent ( );
    float GetCharacterUnitRightIndent ( );
    void PutCharacterUnitRightIndent (
        float prop );
    float GetCharacterUnitLeftIndent ( );
    void PutCharacterUnitLeftIndent (
        float prop );
    float GetCharacterUnitFirstLineIndent ( );
    void PutCharacterUnitFirstLineIndent (
        float prop );
    float GetLineUnitBefore ( );
    void PutLineUnitBefore (
        float prop );
    float GetLineUnitAfter ( );
    void PutLineUnitAfter (
        float prop );
    enum WdReadingOrder GetReadingOrder ( );
    void PutReadingOrder (
        enum WdReadingOrder prop );
    long GetSpaceBeforeAuto ( );
    void PutSpaceBeforeAuto (
        long prop );
    long GetSpaceAfterAuto ( );
    void PutSpaceAfterAuto (
        long prop );
    HRESULT IncreaseSpacing ( );
    HRESULT DecreaseSpacing ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_First (
        /*[out,retval]*/ struct Paragraph * * prop ) = 0;
      virtual HRESULT __stdcall get_Last (
        /*[out,retval]*/ struct Paragraph * * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ struct _ParagraphFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_Format (
        /*[in]*/ struct _ParagraphFormat * prop ) = 0;
      virtual HRESULT __stdcall get_TabStops (
        /*[out,retval]*/ struct TabStops * * prop ) = 0;
      virtual HRESULT __stdcall put_TabStops (
        /*[in]*/ struct TabStops * prop ) = 0;
      virtual HRESULT __stdcall get_Borders (
        /*[out,retval]*/ struct Borders * * prop ) = 0;
      virtual HRESULT __stdcall put_Borders (
        /*[in]*/ struct Borders * prop ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum WdParagraphAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum WdParagraphAlignment prop ) = 0;
      virtual HRESULT __stdcall get_KeepTogether (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_KeepTogether (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_KeepWithNext (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_KeepWithNext (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_PageBreakBefore (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_PageBreakBefore (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_NoLineNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_NoLineNumber (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_RightIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RightIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LeftIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_FirstLineIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_FirstLineIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LineSpacing (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LineSpacing (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LineSpacingRule (
        /*[out,retval]*/ enum WdLineSpacing * prop ) = 0;
      virtual HRESULT __stdcall put_LineSpacingRule (
        /*[in]*/ enum WdLineSpacing prop ) = 0;
      virtual HRESULT __stdcall get_SpaceBefore (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceBefore (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_SpaceAfter (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceAfter (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Hyphenation (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Hyphenation (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_WidowControl (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_WidowControl (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_FarEastLineBreakControl (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_FarEastLineBreakControl (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_WordWrap (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_WordWrap (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_HangingPunctuation (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_HangingPunctuation (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_HalfWidthPunctuationOnTopOfLine (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_HalfWidthPunctuationOnTopOfLine (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_AddSpaceBetweenFarEastAndAlpha (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AddSpaceBetweenFarEastAndAlpha (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_AddSpaceBetweenFarEastAndDigit (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AddSpaceBetweenFarEastAndDigit (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_BaseLineAlignment (
        /*[out,retval]*/ enum WdBaselineAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_BaseLineAlignment (
        /*[in]*/ enum WdBaselineAlignment prop ) = 0;
      virtual HRESULT __stdcall get_AutoAdjustRightIndent (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AutoAdjustRightIndent (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DisableLineHeightGrid (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_DisableLineHeightGrid (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_OutlineLevel (
        /*[out,retval]*/ enum WdOutlineLevel * prop ) = 0;
      virtual HRESULT __stdcall put_OutlineLevel (
        /*[in]*/ enum WdOutlineLevel prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Paragraph * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct Paragraph * * prop ) = 0;
      virtual HRESULT __stdcall raw_CloseUp ( ) = 0;
      virtual HRESULT __stdcall raw_OpenUp ( ) = 0;
      virtual HRESULT __stdcall raw_OpenOrCloseUp ( ) = 0;
      virtual HRESULT __stdcall raw_TabHangingIndent (
        /*[in]*/ short Count ) = 0;
      virtual HRESULT __stdcall raw_TabIndent (
        /*[in]*/ short Count ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_Space1 ( ) = 0;
      virtual HRESULT __stdcall raw_Space15 ( ) = 0;
      virtual HRESULT __stdcall raw_Space2 ( ) = 0;
      virtual HRESULT __stdcall raw_IndentCharWidth (
        /*[in]*/ short Count ) = 0;
      virtual HRESULT __stdcall raw_IndentFirstLineCharWidth (
        /*[in]*/ short Count ) = 0;
      virtual HRESULT __stdcall raw_OutlinePromote ( ) = 0;
      virtual HRESULT __stdcall raw_OutlineDemote ( ) = 0;
      virtual HRESULT __stdcall raw_OutlineDemoteToBody ( ) = 0;
      virtual HRESULT __stdcall raw_Indent ( ) = 0;
      virtual HRESULT __stdcall raw_Outdent ( ) = 0;
      virtual HRESULT __stdcall get_CharacterUnitRightIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CharacterUnitRightIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_CharacterUnitLeftIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CharacterUnitLeftIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_CharacterUnitFirstLineIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_CharacterUnitFirstLineIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LineUnitBefore (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LineUnitBefore (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LineUnitAfter (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LineUnitAfter (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ReadingOrder (
        /*[out,retval]*/ enum WdReadingOrder * prop ) = 0;
      virtual HRESULT __stdcall put_ReadingOrder (
        /*[in]*/ enum WdReadingOrder prop ) = 0;
      virtual HRESULT __stdcall get_SpaceBeforeAuto (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceBeforeAuto (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_SpaceAfterAuto (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceAfterAuto (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall raw_IncreaseSpacing ( ) = 0;
      virtual HRESULT __stdcall raw_DecreaseSpacing ( ) = 0;
};

struct __declspec(uuid("00020947-0000-0000-c000-000000000046"))
AutoCorrectEntry : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetValue,put=PutValue))
    _bstr_t Value;
    __declspec(property(get=GetRichText))
    VARIANT_BOOL RichText;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetIndex ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t prop );
    _bstr_t GetValue ( );
    void PutValue (
        _bstr_t prop );
    VARIANT_BOOL GetRichText ( );
    HRESULT Delete ( );
    HRESULT Apply (
        struct Range * Range );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_RichText (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Apply (
        /*[in]*/ struct Range * Range ) = 0;
};

struct __declspec(uuid("00020948-0000-0000-c000-000000000046"))
AutoCorrectEntries : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    AutoCorrectEntryPtr Item (
        VARIANT * Index );
    AutoCorrectEntryPtr Add (
        _bstr_t Name,
        _bstr_t Value );
    AutoCorrectEntryPtr AddRichText (
        _bstr_t Name,
        struct Range * Range );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct AutoCorrectEntry * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Value,
        /*[out,retval]*/ struct AutoCorrectEntry * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddRichText (
        /*[in]*/ BSTR Name,
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ struct AutoCorrectEntry * * prop ) = 0;
};

struct __declspec(uuid("00020949-0000-0000-c000-000000000046"))
AutoCorrect : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCorrectDays,put=PutCorrectDays))
    VARIANT_BOOL CorrectDays;
    __declspec(property(get=GetCorrectInitialCaps,put=PutCorrectInitialCaps))
    VARIANT_BOOL CorrectInitialCaps;
    __declspec(property(get=GetCorrectSentenceCaps,put=PutCorrectSentenceCaps))
    VARIANT_BOOL CorrectSentenceCaps;
    __declspec(property(get=Get__ReplaceText,put=Put__ReplaceText))
    VARIANT_BOOL __ReplaceText;
    __declspec(property(get=GetEntries))
    AutoCorrectEntriesPtr Entries;
    __declspec(property(get=GetFirstLetterExceptions))
    FirstLetterExceptionsPtr FirstLetterExceptions;
    __declspec(property(get=GetFirstLetterAutoAdd,put=PutFirstLetterAutoAdd))
    VARIANT_BOOL FirstLetterAutoAdd;
    __declspec(property(get=GetTwoInitialCapsExceptions))
    TwoInitialCapsExceptionsPtr TwoInitialCapsExceptions;
    __declspec(property(get=GetTwoInitialCapsAutoAdd,put=PutTwoInitialCapsAutoAdd))
    VARIANT_BOOL TwoInitialCapsAutoAdd;
    __declspec(property(get=GetCorrectCapsLock,put=PutCorrectCapsLock))
    VARIANT_BOOL CorrectCapsLock;
    __declspec(property(get=GetCorrectHangulAndAlphabet,put=PutCorrectHangulAndAlphabet))
    VARIANT_BOOL CorrectHangulAndAlphabet;
    __declspec(property(get=GetHangulAndAlphabetExceptions))
    HangulAndAlphabetExceptionsPtr HangulAndAlphabetExceptions;
    __declspec(property(get=GetHangulAndAlphabetAutoAdd,put=PutHangulAndAlphabetAutoAdd))
    VARIANT_BOOL HangulAndAlphabetAutoAdd;
    __declspec(property(get=GetReplaceTextFromSpellingChecker,put=PutReplaceTextFromSpellingChecker))
    VARIANT_BOOL ReplaceTextFromSpellingChecker;
    __declspec(property(get=GetOtherCorrectionsAutoAdd,put=PutOtherCorrectionsAutoAdd))
    VARIANT_BOOL OtherCorrectionsAutoAdd;
    __declspec(property(get=GetOtherCorrectionsExceptions))
    OtherCorrectionsExceptionsPtr OtherCorrectionsExceptions;
    __declspec(property(get=GetCorrectKeyboardSetting,put=PutCorrectKeyboardSetting))
    VARIANT_BOOL CorrectKeyboardSetting;
    __declspec(property(get=GetCorrectTableCells,put=PutCorrectTableCells))
    VARIANT_BOOL CorrectTableCells;
    __declspec(property(get=GetDisplayAutoCorrectOptions,put=PutDisplayAutoCorrectOptions))
    VARIANT_BOOL DisplayAutoCorrectOptions;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetCorrectDays ( );
    void PutCorrectDays (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetCorrectInitialCaps ( );
    void PutCorrectInitialCaps (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetCorrectSentenceCaps ( );
    void PutCorrectSentenceCaps (
        VARIANT_BOOL prop );
    VARIANT_BOOL Get__ReplaceText ( );
    void Put__ReplaceText (
        VARIANT_BOOL prop );
    AutoCorrectEntriesPtr GetEntries ( );
    FirstLetterExceptionsPtr GetFirstLetterExceptions ( );
    VARIANT_BOOL GetFirstLetterAutoAdd ( );
    void PutFirstLetterAutoAdd (
        VARIANT_BOOL prop );
    TwoInitialCapsExceptionsPtr GetTwoInitialCapsExceptions ( );
    VARIANT_BOOL GetTwoInitialCapsAutoAdd ( );
    void PutTwoInitialCapsAutoAdd (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetCorrectCapsLock ( );
    void PutCorrectCapsLock (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetCorrectHangulAndAlphabet ( );
    void PutCorrectHangulAndAlphabet (
        VARIANT_BOOL prop );
    HangulAndAlphabetExceptionsPtr GetHangulAndAlphabetExceptions ( );
    VARIANT_BOOL GetHangulAndAlphabetAutoAdd ( );
    void PutHangulAndAlphabetAutoAdd (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetReplaceTextFromSpellingChecker ( );
    void PutReplaceTextFromSpellingChecker (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetOtherCorrectionsAutoAdd ( );
    void PutOtherCorrectionsAutoAdd (
        VARIANT_BOOL prop );
    OtherCorrectionsExceptionsPtr GetOtherCorrectionsExceptions ( );
    VARIANT_BOOL GetCorrectKeyboardSetting ( );
    void PutCorrectKeyboardSetting (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetCorrectTableCells ( );
    void PutCorrectTableCells (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetDisplayAutoCorrectOptions ( );
    void PutDisplayAutoCorrectOptions (
        VARIANT_BOOL prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_CorrectDays (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CorrectDays (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CorrectInitialCaps (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CorrectInitialCaps (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CorrectSentenceCaps (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CorrectSentenceCaps (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get___ReplaceText (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put___ReplaceText (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Entries (
        /*[out,retval]*/ struct AutoCorrectEntries * * prop ) = 0;
      virtual HRESULT __stdcall get_FirstLetterExceptions (
        /*[out,retval]*/ struct FirstLetterExceptions * * prop ) = 0;
      virtual HRESULT __stdcall get_FirstLetterAutoAdd (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FirstLetterAutoAdd (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_TwoInitialCapsExceptions (
        /*[out,retval]*/ struct TwoInitialCapsExceptions * * prop ) = 0;
      virtual HRESULT __stdcall get_TwoInitialCapsAutoAdd (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_TwoInitialCapsAutoAdd (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CorrectCapsLock (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CorrectCapsLock (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CorrectHangulAndAlphabet (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CorrectHangulAndAlphabet (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HangulAndAlphabetExceptions (
        /*[out,retval]*/ struct HangulAndAlphabetExceptions * * prop ) = 0;
      virtual HRESULT __stdcall get_HangulAndAlphabetAutoAdd (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HangulAndAlphabetAutoAdd (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ReplaceTextFromSpellingChecker (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ReplaceTextFromSpellingChecker (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_OtherCorrectionsAutoAdd (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OtherCorrectionsAutoAdd (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_OtherCorrectionsExceptions (
        /*[out,retval]*/ struct OtherCorrectionsExceptions * * prop ) = 0;
      virtual HRESULT __stdcall get_CorrectKeyboardSetting (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CorrectKeyboardSetting (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_CorrectTableCells (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CorrectTableCells (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DisplayAutoCorrectOptions (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DisplayAutoCorrectOptions (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("0002093f-0000-0000-c000-000000000046"))
Footnote : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetReference))
    RangePtr Reference;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    RangePtr GetRange ( );
    RangePtr GetReference ( );
    long GetIndex ( );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("00020942-0000-0000-c000-000000000046"))
Footnotes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetLocation,put=PutLocation))
    enum WdFootnoteLocation Location;
    __declspec(property(get=GetNumberStyle,put=PutNumberStyle))
    enum WdNoteNumberStyle NumberStyle;
    __declspec(property(get=GetStartingNumber,put=PutStartingNumber))
    long StartingNumber;
    __declspec(property(get=GetNumberingRule,put=PutNumberingRule))
    enum WdNumberingRule NumberingRule;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetSeparator))
    RangePtr Separator;
    __declspec(property(get=GetContinuationSeparator))
    RangePtr ContinuationSeparator;
    __declspec(property(get=GetContinuationNotice))
    RangePtr ContinuationNotice;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    enum WdFootnoteLocation GetLocation ( );
    void PutLocation (
        enum WdFootnoteLocation prop );
    enum WdNoteNumberStyle GetNumberStyle ( );
    void PutNumberStyle (
        enum WdNoteNumberStyle prop );
    long GetStartingNumber ( );
    void PutStartingNumber (
        long prop );
    enum WdNumberingRule GetNumberingRule ( );
    void PutNumberingRule (
        enum WdNumberingRule prop );
    RangePtr GetSeparator ( );
    RangePtr GetContinuationSeparator ( );
    RangePtr GetContinuationNotice ( );
    FootnotePtr Item (
        long Index );
    FootnotePtr Add (
        struct Range * Range,
        VARIANT * Reference = &vtMissing,
        VARIANT * Text = &vtMissing );
    HRESULT Convert ( );
    HRESULT SwapWithEndnotes ( );
    HRESULT ResetSeparator ( );
    HRESULT ResetContinuationSeparator ( );
    HRESULT ResetContinuationNotice ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Location (
        /*[out,retval]*/ enum WdFootnoteLocation * prop ) = 0;
      virtual HRESULT __stdcall put_Location (
        /*[in]*/ enum WdFootnoteLocation prop ) = 0;
      virtual HRESULT __stdcall get_NumberStyle (
        /*[out,retval]*/ enum WdNoteNumberStyle * prop ) = 0;
      virtual HRESULT __stdcall put_NumberStyle (
        /*[in]*/ enum WdNoteNumberStyle prop ) = 0;
      virtual HRESULT __stdcall get_StartingNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_StartingNumber (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_NumberingRule (
        /*[out,retval]*/ enum WdNumberingRule * prop ) = 0;
      virtual HRESULT __stdcall put_NumberingRule (
        /*[in]*/ enum WdNumberingRule prop ) = 0;
      virtual HRESULT __stdcall get_Separator (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_ContinuationSeparator (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_ContinuationNotice (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Footnote * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Reference,
        /*[in]*/ VARIANT * Text,
        /*[out,retval]*/ struct Footnote * * prop ) = 0;
      virtual HRESULT __stdcall raw_Convert ( ) = 0;
      virtual HRESULT __stdcall raw_SwapWithEndnotes ( ) = 0;
      virtual HRESULT __stdcall raw_ResetSeparator ( ) = 0;
      virtual HRESULT __stdcall raw_ResetContinuationSeparator ( ) = 0;
      virtual HRESULT __stdcall raw_ResetContinuationNotice ( ) = 0;
};

struct __declspec(uuid("0002093e-0000-0000-c000-000000000046"))
Endnote : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetReference))
    RangePtr Reference;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    RangePtr GetRange ( );
    RangePtr GetReference ( );
    long GetIndex ( );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("00020941-0000-0000-c000-000000000046"))
Endnotes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetLocation,put=PutLocation))
    enum WdEndnoteLocation Location;
    __declspec(property(get=GetNumberStyle,put=PutNumberStyle))
    enum WdNoteNumberStyle NumberStyle;
    __declspec(property(get=GetStartingNumber,put=PutStartingNumber))
    long StartingNumber;
    __declspec(property(get=GetNumberingRule,put=PutNumberingRule))
    enum WdNumberingRule NumberingRule;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetSeparator))
    RangePtr Separator;
    __declspec(property(get=GetContinuationSeparator))
    RangePtr ContinuationSeparator;
    __declspec(property(get=GetContinuationNotice))
    RangePtr ContinuationNotice;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    enum WdEndnoteLocation GetLocation ( );
    void PutLocation (
        enum WdEndnoteLocation prop );
    enum WdNoteNumberStyle GetNumberStyle ( );
    void PutNumberStyle (
        enum WdNoteNumberStyle prop );
    long GetStartingNumber ( );
    void PutStartingNumber (
        long prop );
    enum WdNumberingRule GetNumberingRule ( );
    void PutNumberingRule (
        enum WdNumberingRule prop );
    RangePtr GetSeparator ( );
    RangePtr GetContinuationSeparator ( );
    RangePtr GetContinuationNotice ( );
    EndnotePtr Item (
        long Index );
    EndnotePtr Add (
        struct Range * Range,
        VARIANT * Reference = &vtMissing,
        VARIANT * Text = &vtMissing );
    HRESULT Convert ( );
    HRESULT SwapWithFootnotes ( );
    HRESULT ResetSeparator ( );
    HRESULT ResetContinuationSeparator ( );
    HRESULT ResetContinuationNotice ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Location (
        /*[out,retval]*/ enum WdEndnoteLocation * prop ) = 0;
      virtual HRESULT __stdcall put_Location (
        /*[in]*/ enum WdEndnoteLocation prop ) = 0;
      virtual HRESULT __stdcall get_NumberStyle (
        /*[out,retval]*/ enum WdNoteNumberStyle * prop ) = 0;
      virtual HRESULT __stdcall put_NumberStyle (
        /*[in]*/ enum WdNoteNumberStyle prop ) = 0;
      virtual HRESULT __stdcall get_StartingNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_StartingNumber (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_NumberingRule (
        /*[out,retval]*/ enum WdNumberingRule * prop ) = 0;
      virtual HRESULT __stdcall put_NumberingRule (
        /*[in]*/ enum WdNumberingRule prop ) = 0;
      virtual HRESULT __stdcall get_Separator (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_ContinuationSeparator (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_ContinuationNotice (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Endnote * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Reference,
        /*[in]*/ VARIANT * Text,
        /*[out,retval]*/ struct Endnote * * prop ) = 0;
      virtual HRESULT __stdcall raw_Convert ( ) = 0;
      virtual HRESULT __stdcall raw_SwapWithFootnotes ( ) = 0;
      virtual HRESULT __stdcall raw_ResetSeparator ( ) = 0;
      virtual HRESULT __stdcall raw_ResetContinuationSeparator ( ) = 0;
      virtual HRESULT __stdcall raw_ResetContinuationNotice ( ) = 0;
};

struct __declspec(uuid("0002093d-0000-0000-c000-000000000046"))
Comment : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetReference))
    RangePtr Reference;
    __declspec(property(get=GetScope))
    RangePtr Scope;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetAuthor,put=PutAuthor))
    _bstr_t Author;
    __declspec(property(get=GetInitial,put=PutInitial))
    _bstr_t Initial;
    __declspec(property(get=GetShowTip,put=PutShowTip))
    VARIANT_BOOL ShowTip;
    __declspec(property(get=GetDate))
    DATE Date;
    __declspec(property(get=GetIsInk))
    VARIANT_BOOL IsInk;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    RangePtr GetRange ( );
    RangePtr GetReference ( );
    RangePtr GetScope ( );
    long GetIndex ( );
    _bstr_t GetAuthor ( );
    void PutAuthor (
        _bstr_t prop );
    _bstr_t GetInitial ( );
    void PutInitial (
        _bstr_t prop );
    VARIANT_BOOL GetShowTip ( );
    void PutShowTip (
        VARIANT_BOOL prop );
    HRESULT Delete ( );
    HRESULT Edit ( );
    DATE GetDate ( );
    VARIANT_BOOL GetIsInk ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Scope (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Author (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Author (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Initial (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Initial (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ShowTip (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowTip (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Edit ( ) = 0;
      virtual HRESULT __stdcall get_Date (
        /*[out,retval]*/ DATE * prop ) = 0;
      virtual HRESULT __stdcall get_IsInk (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
};

struct __declspec(uuid("00020940-0000-0000-c000-000000000046"))
Comments : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetShowBy,put=PutShowBy))
    _bstr_t ShowBy;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetShowBy ( );
    void PutShowBy (
        _bstr_t prop );
    CommentPtr Item (
        long Index );
    CommentPtr Add (
        struct Range * Range,
        VARIANT * Text = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_ShowBy (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ShowBy (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Comment * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Text,
        /*[out,retval]*/ struct Comment * * prop ) = 0;
};

struct __declspec(uuid("00020936-0000-0000-c000-000000000046"))
AutoTextEntry : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetValue,put=PutValue))
    _bstr_t Value;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetStyleName))
    _bstr_t StyleName;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetIndex ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t prop );
    _bstr_t GetStyleName ( );
    _bstr_t GetValue ( );
    void PutValue (
        _bstr_t prop );
    HRESULT Delete ( );
    RangePtr Insert (
        struct Range * Where,
        VARIANT * RichText = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_StyleName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Insert (
        /*[in]*/ struct Range * Where,
        /*[in]*/ VARIANT * RichText,
        /*[out,retval]*/ struct Range * * prop ) = 0;
};

struct __declspec(uuid("00020937-0000-0000-c000-000000000046"))
AutoTextEntries : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    AutoTextEntryPtr Item (
        VARIANT * Index );
    AutoTextEntryPtr Add (
        _bstr_t Name,
        struct Range * Range );
    AutoTextEntryPtr AppendToSpike (
        struct Range * Range );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct AutoTextEntry * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ struct AutoTextEntry * * prop ) = 0;
      virtual HRESULT __stdcall raw_AppendToSpike (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ struct AutoTextEntry * * prop ) = 0;
};

struct __declspec(uuid("0002092a-0000-0000-c000-000000000046"))
Frame : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetHeightRule,put=PutHeightRule))
    enum WdFrameSizeRule HeightRule;
    __declspec(property(get=GetWidthRule,put=PutWidthRule))
    enum WdFrameSizeRule WidthRule;
    __declspec(property(get=GetHorizontalDistanceFromText,put=PutHorizontalDistanceFromText))
    float HorizontalDistanceFromText;
    __declspec(property(get=GetHeight,put=PutHeight))
    float Height;
    __declspec(property(get=GetHorizontalPosition,put=PutHorizontalPosition))
    float HorizontalPosition;
    __declspec(property(get=GetLockAnchor,put=PutLockAnchor))
    VARIANT_BOOL LockAnchor;
    __declspec(property(get=GetRelativeHorizontalPosition,put=PutRelativeHorizontalPosition))
    enum WdRelativeHorizontalPosition RelativeHorizontalPosition;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetRelativeVerticalPosition,put=PutRelativeVerticalPosition))
    enum WdRelativeVerticalPosition RelativeVerticalPosition;
    __declspec(property(get=GetVerticalDistanceFromText,put=PutVerticalDistanceFromText))
    float VerticalDistanceFromText;
    __declspec(property(get=GetVerticalPosition,put=PutVerticalPosition))
    float VerticalPosition;
    __declspec(property(get=GetWidth,put=PutWidth))
    float Width;
    __declspec(property(get=GetTextWrap,put=PutTextWrap))
    VARIANT_BOOL TextWrap;
    __declspec(property(get=GetShading))
    ShadingPtr Shading;
    __declspec(property(get=GetBorders,put=PutBorders))
    BordersPtr Borders;
    __declspec(property(get=GetRange))
    RangePtr Range;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    enum WdFrameSizeRule GetHeightRule ( );
    void PutHeightRule (
        enum WdFrameSizeRule prop );
    enum WdFrameSizeRule GetWidthRule ( );
    void PutWidthRule (
        enum WdFrameSizeRule prop );
    float GetHorizontalDistanceFromText ( );
    void PutHorizontalDistanceFromText (
        float prop );
    float GetHeight ( );
    void PutHeight (
        float prop );
    float GetHorizontalPosition ( );
    void PutHorizontalPosition (
        float prop );
    VARIANT_BOOL GetLockAnchor ( );
    void PutLockAnchor (
        VARIANT_BOOL prop );
    enum WdRelativeHorizontalPosition GetRelativeHorizontalPosition ( );
    void PutRelativeHorizontalPosition (
        enum WdRelativeHorizontalPosition prop );
    enum WdRelativeVerticalPosition GetRelativeVerticalPosition ( );
    void PutRelativeVerticalPosition (
        enum WdRelativeVerticalPosition prop );
    float GetVerticalDistanceFromText ( );
    void PutVerticalDistanceFromText (
        float prop );
    float GetVerticalPosition ( );
    void PutVerticalPosition (
        float prop );
    float GetWidth ( );
    void PutWidth (
        float prop );
    VARIANT_BOOL GetTextWrap ( );
    void PutTextWrap (
        VARIANT_BOOL prop );
    ShadingPtr GetShading ( );
    BordersPtr GetBorders ( );
    void PutBorders (
        struct Borders * prop );
    RangePtr GetRange ( );
    HRESULT Delete ( );
    HRESULT Select ( );
    HRESULT Copy ( );
    HRESULT Cut ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_HeightRule (
        /*[out,retval]*/ enum WdFrameSizeRule * prop ) = 0;
      virtual HRESULT __stdcall put_HeightRule (
        /*[in]*/ enum WdFrameSizeRule prop ) = 0;
      virtual HRESULT __stdcall get_WidthRule (
        /*[out,retval]*/ enum WdFrameSizeRule * prop ) = 0;
      virtual HRESULT __stdcall put_WidthRule (
        /*[in]*/ enum WdFrameSizeRule prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalDistanceFromText (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_HorizontalDistanceFromText (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalPosition (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_HorizontalPosition (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LockAnchor (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_LockAnchor (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RelativeHorizontalPosition (
        /*[out,retval]*/ enum WdRelativeHorizontalPosition * prop ) = 0;
      virtual HRESULT __stdcall put_RelativeHorizontalPosition (
        /*[in]*/ enum WdRelativeHorizontalPosition prop ) = 0;
      virtual HRESULT __stdcall get_RelativeVerticalPosition (
        /*[out,retval]*/ enum WdRelativeVerticalPosition * prop ) = 0;
      virtual HRESULT __stdcall put_RelativeVerticalPosition (
        /*[in]*/ enum WdRelativeVerticalPosition prop ) = 0;
      virtual HRESULT __stdcall get_VerticalDistanceFromText (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_VerticalDistanceFromText (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_VerticalPosition (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_VerticalPosition (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_TextWrap (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_TextWrap (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_Borders (
        /*[out,retval]*/ struct Borders * * prop ) = 0;
      virtual HRESULT __stdcall put_Borders (
        /*[in]*/ struct Borders * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
      virtual HRESULT __stdcall raw_Copy ( ) = 0;
      virtual HRESULT __stdcall raw_Cut ( ) = 0;
};

struct __declspec(uuid("000209b1-0000-0000-c000-000000000046"))
Replacement : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetFont,put=PutFont))
    _FontPtr Font;
    __declspec(property(get=GetParagraphFormat,put=PutParagraphFormat))
    _ParagraphFormatPtr ParagraphFormat;
    __declspec(property(get=GetText,put=PutText))
    _bstr_t Text;
    __declspec(property(get=GetLanguageID,put=PutLanguageID))
    enum WdLanguageID LanguageID;
    __declspec(property(get=GetHighlight,put=PutHighlight))
    long Highlight;
    __declspec(property(get=GetFrame))
    FramePtr Frame;
    __declspec(property(get=GetLanguageIDFarEast,put=PutLanguageIDFarEast))
    enum WdLanguageID LanguageIDFarEast;
    __declspec(property(get=GetNoProofing,put=PutNoProofing))
    long NoProofing;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _FontPtr GetFont ( );
    void PutFont (
        struct _Font * prop );
    _ParagraphFormatPtr GetParagraphFormat ( );
    void PutParagraphFormat (
        struct _ParagraphFormat * prop );
    _variant_t GetStyle ( );
    void PutStyle (
        VARIANT * prop );
    _bstr_t GetText ( );
    void PutText (
        _bstr_t prop );
    enum WdLanguageID GetLanguageID ( );
    void PutLanguageID (
        enum WdLanguageID prop );
    long GetHighlight ( );
    void PutHighlight (
        long prop );
    FramePtr GetFrame ( );
    enum WdLanguageID GetLanguageIDFarEast ( );
    void PutLanguageIDFarEast (
        enum WdLanguageID prop );
    HRESULT ClearFormatting ( );
    long GetNoProofing ( );
    void PutNoProofing (
        long prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Font (
        /*[out,retval]*/ struct _Font * * prop ) = 0;
      virtual HRESULT __stdcall put_Font (
        /*[in]*/ struct _Font * prop ) = 0;
      virtual HRESULT __stdcall get_ParagraphFormat (
        /*[out,retval]*/ struct _ParagraphFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_ParagraphFormat (
        /*[in]*/ struct _ParagraphFormat * prop ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_LanguageID (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageID (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_Highlight (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Highlight (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Frame (
        /*[out,retval]*/ struct Frame * * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageIDFarEast (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageIDFarEast (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall raw_ClearFormatting ( ) = 0;
      virtual HRESULT __stdcall get_NoProofing (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_NoProofing (
        /*[in]*/ long prop ) = 0;
};

struct __declspec(uuid("000209b0-0000-0000-c000-000000000046"))
Find : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetLanguageIDOther,put=PutLanguageIDOther))
    enum WdLanguageID LanguageIDOther;
    __declspec(property(get=GetCorrectHangulEndings,put=PutCorrectHangulEndings))
    VARIANT_BOOL CorrectHangulEndings;
    __declspec(property(get=GetForward,put=PutForward))
    VARIANT_BOOL Forward;
    __declspec(property(get=GetFont,put=PutFont))
    _FontPtr Font;
    __declspec(property(get=GetFound))
    VARIANT_BOOL Found;
    __declspec(property(get=GetMatchAllWordForms,put=PutMatchAllWordForms))
    VARIANT_BOOL MatchAllWordForms;
    __declspec(property(get=GetMatchCase,put=PutMatchCase))
    VARIANT_BOOL MatchCase;
    __declspec(property(get=GetMatchWildcards,put=PutMatchWildcards))
    VARIANT_BOOL MatchWildcards;
    __declspec(property(get=GetMatchSoundsLike,put=PutMatchSoundsLike))
    VARIANT_BOOL MatchSoundsLike;
    __declspec(property(get=GetMatchWholeWord,put=PutMatchWholeWord))
    VARIANT_BOOL MatchWholeWord;
    __declspec(property(get=GetParagraphFormat,put=PutParagraphFormat))
    _ParagraphFormatPtr ParagraphFormat;
    __declspec(property(get=GetText,put=PutText))
    _bstr_t Text;
    __declspec(property(get=GetLanguageID,put=PutLanguageID))
    enum WdLanguageID LanguageID;
    __declspec(property(get=GetHighlight,put=PutHighlight))
    long Highlight;
    __declspec(property(get=GetReplacement))
    ReplacementPtr Replacement;
    __declspec(property(get=GetFrame))
    FramePtr Frame;
    __declspec(property(get=GetWrap,put=PutWrap))
    enum WdFindWrap Wrap;
    __declspec(property(get=GetFormat,put=PutFormat))
    VARIANT_BOOL Format;
    __declspec(property(get=GetLanguageIDFarEast,put=PutLanguageIDFarEast))
    enum WdLanguageID LanguageIDFarEast;
    __declspec(property(get=GetNoProofing,put=PutNoProofing))
    long NoProofing;
    __declspec(property(get=GetMatchKashida,put=PutMatchKashida))
    VARIANT_BOOL MatchKashida;
    __declspec(property(get=GetMatchDiacritics,put=PutMatchDiacritics))
    VARIANT_BOOL MatchDiacritics;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetMatchAlefHamza,put=PutMatchAlefHamza))
    VARIANT_BOOL MatchAlefHamza;
    __declspec(property(get=GetMatchControl,put=PutMatchControl))
    VARIANT_BOOL MatchControl;
    __declspec(property(get=GetMatchFuzzy,put=PutMatchFuzzy))
    VARIANT_BOOL MatchFuzzy;
    __declspec(property(get=GetMatchByte,put=PutMatchByte))
    VARIANT_BOOL MatchByte;
    __declspec(property(get=GetMatchPhrase,put=PutMatchPhrase))
    VARIANT_BOOL MatchPhrase;
    __declspec(property(get=GetMatchPrefix,put=PutMatchPrefix))
    VARIANT_BOOL MatchPrefix;
    __declspec(property(get=GetMatchSuffix,put=PutMatchSuffix))
    VARIANT_BOOL MatchSuffix;
    __declspec(property(get=GetIgnoreSpace,put=PutIgnoreSpace))
    VARIANT_BOOL IgnoreSpace;
    __declspec(property(get=GetIgnorePunct,put=PutIgnorePunct))
    VARIANT_BOOL IgnorePunct;
    __declspec(property(get=GetHanjaPhoneticHangul,put=PutHanjaPhoneticHangul))
    VARIANT_BOOL HanjaPhoneticHangul;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetForward ( );
    void PutForward (
        VARIANT_BOOL prop );
    _FontPtr GetFont ( );
    void PutFont (
        struct _Font * prop );
    VARIANT_BOOL GetFound ( );
    VARIANT_BOOL GetMatchAllWordForms ( );
    void PutMatchAllWordForms (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchCase ( );
    void PutMatchCase (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchWildcards ( );
    void PutMatchWildcards (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchSoundsLike ( );
    void PutMatchSoundsLike (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchWholeWord ( );
    void PutMatchWholeWord (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchFuzzy ( );
    void PutMatchFuzzy (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchByte ( );
    void PutMatchByte (
        VARIANT_BOOL prop );
    _ParagraphFormatPtr GetParagraphFormat ( );
    void PutParagraphFormat (
        struct _ParagraphFormat * prop );
    _variant_t GetStyle ( );
    void PutStyle (
        VARIANT * prop );
    _bstr_t GetText ( );
    void PutText (
        _bstr_t prop );
    enum WdLanguageID GetLanguageID ( );
    void PutLanguageID (
        enum WdLanguageID prop );
    long GetHighlight ( );
    void PutHighlight (
        long prop );
    ReplacementPtr GetReplacement ( );
    FramePtr GetFrame ( );
    enum WdFindWrap GetWrap ( );
    void PutWrap (
        enum WdFindWrap prop );
    VARIANT_BOOL GetFormat ( );
    void PutFormat (
        VARIANT_BOOL prop );
    enum WdLanguageID GetLanguageIDFarEast ( );
    void PutLanguageIDFarEast (
        enum WdLanguageID prop );
    enum WdLanguageID GetLanguageIDOther ( );
    void PutLanguageIDOther (
        enum WdLanguageID prop );
    VARIANT_BOOL GetCorrectHangulEndings ( );
    void PutCorrectHangulEndings (
        VARIANT_BOOL prop );
    VARIANT_BOOL ExecuteOld (
        VARIANT * WORDFindText = &vtMissing,
        VARIANT * MatchCase = &vtMissing,
        VARIANT * MatchWholeWord = &vtMissing,
        VARIANT * MatchWildcards = &vtMissing,
        VARIANT * MatchSoundsLike = &vtMissing,
        VARIANT * MatchAllWordForms = &vtMissing,
        VARIANT * Forward = &vtMissing,
        VARIANT * Wrap = &vtMissing,
        VARIANT * Format = &vtMissing,
        VARIANT * ReplaceWith = &vtMissing,
        VARIANT * Replace = &vtMissing );
    HRESULT ClearFormatting ( );
    HRESULT SetAllFuzzyOptions ( );
    HRESULT ClearAllFuzzyOptions ( );
    VARIANT_BOOL Execute (
        VARIANT * WORDFindText = &vtMissing,
        VARIANT * MatchCase = &vtMissing,
        VARIANT * MatchWholeWord = &vtMissing,
        VARIANT * MatchWildcards = &vtMissing,
        VARIANT * MatchSoundsLike = &vtMissing,
        VARIANT * MatchAllWordForms = &vtMissing,
        VARIANT * Forward = &vtMissing,
        VARIANT * Wrap = &vtMissing,
        VARIANT * Format = &vtMissing,
        VARIANT * ReplaceWith = &vtMissing,
        VARIANT * Replace = &vtMissing,
        VARIANT * MatchKashida = &vtMissing,
        VARIANT * MatchDiacritics = &vtMissing,
        VARIANT * MatchAlefHamza = &vtMissing,
        VARIANT * MatchControl = &vtMissing );
    long GetNoProofing ( );
    void PutNoProofing (
        long prop );
    VARIANT_BOOL GetMatchKashida ( );
    void PutMatchKashida (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchDiacritics ( );
    void PutMatchDiacritics (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchAlefHamza ( );
    void PutMatchAlefHamza (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchControl ( );
    void PutMatchControl (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchPhrase ( );
    void PutMatchPhrase (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchPrefix ( );
    void PutMatchPrefix (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMatchSuffix ( );
    void PutMatchSuffix (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetIgnoreSpace ( );
    void PutIgnoreSpace (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetIgnorePunct ( );
    void PutIgnorePunct (
        VARIANT_BOOL prop );
    VARIANT_BOOL HitHighlight (
        VARIANT * WORDFindText,
        VARIANT * HighlightColor = &vtMissing,
        VARIANT * TextColor = &vtMissing,
        VARIANT * MatchCase = &vtMissing,
        VARIANT * MatchWholeWord = &vtMissing,
        VARIANT * MatchPrefix = &vtMissing,
        VARIANT * MatchSuffix = &vtMissing,
        VARIANT * MatchPhrase = &vtMissing,
        VARIANT * MatchWildcards = &vtMissing,
        VARIANT * MatchSoundsLike = &vtMissing,
        VARIANT * MatchAllWordForms = &vtMissing,
        VARIANT * MatchByte = &vtMissing,
        VARIANT * MatchFuzzy = &vtMissing,
        VARIANT * MatchKashida = &vtMissing,
        VARIANT * MatchDiacritics = &vtMissing,
        VARIANT * MatchAlefHamza = &vtMissing,
        VARIANT * MatchControl = &vtMissing,
        VARIANT * IgnoreSpace = &vtMissing,
        VARIANT * IgnorePunct = &vtMissing,
        VARIANT * HanjaPhoneticHangul = &vtMissing );
    VARIANT_BOOL ClearHitHighlight ( );
    VARIANT_BOOL Execute2007 (
        VARIANT * WORDFindText = &vtMissing,
        VARIANT * MatchCase = &vtMissing,
        VARIANT * MatchWholeWord = &vtMissing,
        VARIANT * MatchWildcards = &vtMissing,
        VARIANT * MatchSoundsLike = &vtMissing,
        VARIANT * MatchAllWordForms = &vtMissing,
        VARIANT * Forward = &vtMissing,
        VARIANT * Wrap = &vtMissing,
        VARIANT * Format = &vtMissing,
        VARIANT * ReplaceWith = &vtMissing,
        VARIANT * Replace = &vtMissing,
        VARIANT * MatchKashida = &vtMissing,
        VARIANT * MatchDiacritics = &vtMissing,
        VARIANT * MatchAlefHamza = &vtMissing,
        VARIANT * MatchControl = &vtMissing,
        VARIANT * MatchPrefix = &vtMissing,
        VARIANT * MatchSuffix = &vtMissing,
        VARIANT * MatchPhrase = &vtMissing,
        VARIANT * IgnoreSpace = &vtMissing,
        VARIANT * IgnorePunct = &vtMissing );
    VARIANT_BOOL GetHanjaPhoneticHangul ( );
    void PutHanjaPhoneticHangul (
        VARIANT_BOOL prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Forward (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Forward (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Font (
        /*[out,retval]*/ struct _Font * * prop ) = 0;
      virtual HRESULT __stdcall put_Font (
        /*[in]*/ struct _Font * prop ) = 0;
      virtual HRESULT __stdcall get_Found (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_MatchAllWordForms (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchAllWordForms (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchCase (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchCase (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchWildcards (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchWildcards (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchSoundsLike (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchSoundsLike (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchWholeWord (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchWholeWord (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchFuzzy (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchFuzzy (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchByte (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchByte (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ParagraphFormat (
        /*[out,retval]*/ struct _ParagraphFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_ParagraphFormat (
        /*[in]*/ struct _ParagraphFormat * prop ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_LanguageID (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageID (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_Highlight (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Highlight (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Replacement (
        /*[out,retval]*/ struct Replacement * * prop ) = 0;
      virtual HRESULT __stdcall get_Frame (
        /*[out,retval]*/ struct Frame * * prop ) = 0;
      virtual HRESULT __stdcall get_Wrap (
        /*[out,retval]*/ enum WdFindWrap * prop ) = 0;
      virtual HRESULT __stdcall put_Wrap (
        /*[in]*/ enum WdFindWrap prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Format (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_LanguageIDFarEast (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageIDFarEast (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_LanguageIDOther (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageIDOther (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_CorrectHangulEndings (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CorrectHangulEndings (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall raw_ExecuteOld (
        /*[in]*/ VARIANT * WORDFindText,
        /*[in]*/ VARIANT * MatchCase,
        /*[in]*/ VARIANT * MatchWholeWord,
        /*[in]*/ VARIANT * MatchWildcards,
        /*[in]*/ VARIANT * MatchSoundsLike,
        /*[in]*/ VARIANT * MatchAllWordForms,
        /*[in]*/ VARIANT * Forward,
        /*[in]*/ VARIANT * Wrap,
        /*[in]*/ VARIANT * Format,
        /*[in]*/ VARIANT * ReplaceWith,
        /*[in]*/ VARIANT * Replace,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_ClearFormatting ( ) = 0;
      virtual HRESULT __stdcall raw_SetAllFuzzyOptions ( ) = 0;
      virtual HRESULT __stdcall raw_ClearAllFuzzyOptions ( ) = 0;
      virtual HRESULT __stdcall raw_Execute (
        /*[in]*/ VARIANT * WORDFindText,
        /*[in]*/ VARIANT * MatchCase,
        /*[in]*/ VARIANT * MatchWholeWord,
        /*[in]*/ VARIANT * MatchWildcards,
        /*[in]*/ VARIANT * MatchSoundsLike,
        /*[in]*/ VARIANT * MatchAllWordForms,
        /*[in]*/ VARIANT * Forward,
        /*[in]*/ VARIANT * Wrap,
        /*[in]*/ VARIANT * Format,
        /*[in]*/ VARIANT * ReplaceWith,
        /*[in]*/ VARIANT * Replace,
        /*[in]*/ VARIANT * MatchKashida,
        /*[in]*/ VARIANT * MatchDiacritics,
        /*[in]*/ VARIANT * MatchAlefHamza,
        /*[in]*/ VARIANT * MatchControl,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_NoProofing (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_NoProofing (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_MatchKashida (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchKashida (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchDiacritics (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchDiacritics (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchAlefHamza (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchAlefHamza (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchControl (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchControl (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchPhrase (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchPhrase (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchPrefix (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchPrefix (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MatchSuffix (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MatchSuffix (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_IgnoreSpace (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IgnoreSpace (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_IgnorePunct (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IgnorePunct (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall raw_HitHighlight (
        /*[in]*/ VARIANT * WORDFindText,
        /*[in]*/ VARIANT * HighlightColor,
        /*[in]*/ VARIANT * TextColor,
        /*[in]*/ VARIANT * MatchCase,
        /*[in]*/ VARIANT * MatchWholeWord,
        /*[in]*/ VARIANT * MatchPrefix,
        /*[in]*/ VARIANT * MatchSuffix,
        /*[in]*/ VARIANT * MatchPhrase,
        /*[in]*/ VARIANT * MatchWildcards,
        /*[in]*/ VARIANT * MatchSoundsLike,
        /*[in]*/ VARIANT * MatchAllWordForms,
        /*[in]*/ VARIANT * MatchByte,
        /*[in]*/ VARIANT * MatchFuzzy,
        /*[in]*/ VARIANT * MatchKashida,
        /*[in]*/ VARIANT * MatchDiacritics,
        /*[in]*/ VARIANT * MatchAlefHamza,
        /*[in]*/ VARIANT * MatchControl,
        /*[in]*/ VARIANT * IgnoreSpace,
        /*[in]*/ VARIANT * IgnorePunct,
        /*[in]*/ VARIANT * HanjaPhoneticHangul,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_ClearHitHighlight (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_Execute2007 (
        /*[in]*/ VARIANT * WORDFindText,
        /*[in]*/ VARIANT * MatchCase,
        /*[in]*/ VARIANT * MatchWholeWord,
        /*[in]*/ VARIANT * MatchWildcards,
        /*[in]*/ VARIANT * MatchSoundsLike,
        /*[in]*/ VARIANT * MatchAllWordForms,
        /*[in]*/ VARIANT * Forward,
        /*[in]*/ VARIANT * Wrap,
        /*[in]*/ VARIANT * Format,
        /*[in]*/ VARIANT * ReplaceWith,
        /*[in]*/ VARIANT * Replace,
        /*[in]*/ VARIANT * MatchKashida,
        /*[in]*/ VARIANT * MatchDiacritics,
        /*[in]*/ VARIANT * MatchAlefHamza,
        /*[in]*/ VARIANT * MatchControl,
        /*[in]*/ VARIANT * MatchPrefix,
        /*[in]*/ VARIANT * MatchSuffix,
        /*[in]*/ VARIANT * MatchPhrase,
        /*[in]*/ VARIANT * IgnoreSpace,
        /*[in]*/ VARIANT * IgnorePunct,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_HanjaPhoneticHangul (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HanjaPhoneticHangul (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("0002092b-0000-0000-c000-000000000046"))
Frames : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    FramePtr Item (
        long Index );
    FramePtr Add (
        struct Range * Range );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Frame * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ struct Frame * * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("00020928-0000-0000-c000-000000000046"))
FormField : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum WdFieldType Type;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEntryMacro,put=PutEntryMacro))
    _bstr_t EntryMacro;
    __declspec(property(get=GetExitMacro,put=PutExitMacro))
    _bstr_t ExitMacro;
    __declspec(property(get=GetOwnHelp,put=PutOwnHelp))
    VARIANT_BOOL OwnHelp;
    __declspec(property(get=GetOwnStatus,put=PutOwnStatus))
    VARIANT_BOOL OwnStatus;
    __declspec(property(get=GetHelpText,put=PutHelpText))
    _bstr_t HelpText;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetStatusText,put=PutStatusText))
    _bstr_t StatusText;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetResult,put=PutResult))
    _bstr_t Result;
    __declspec(property(get=GetTextInput))
    TextInputPtr TextInput;
    __declspec(property(get=GetCheckBox))
    CheckBoxPtr CheckBox;
    __declspec(property(get=GetDropDown))
    DropDownPtr DropDown;
    __declspec(property(get=GetNext))
    FormFieldPtr Next;
    __declspec(property(get=GetPrevious))
    FormFieldPtr Previous;
    __declspec(property(get=GetCalculateOnExit,put=PutCalculateOnExit))
    VARIANT_BOOL CalculateOnExit;
    __declspec(property(get=GetRange))
    RangePtr Range;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    enum WdFieldType GetType ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t prop );
    _bstr_t GetEntryMacro ( );
    void PutEntryMacro (
        _bstr_t prop );
    _bstr_t GetExitMacro ( );
    void PutExitMacro (
        _bstr_t prop );
    VARIANT_BOOL GetOwnHelp ( );
    void PutOwnHelp (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetOwnStatus ( );
    void PutOwnStatus (
        VARIANT_BOOL prop );
    _bstr_t GetHelpText ( );
    void PutHelpText (
        _bstr_t prop );
    _bstr_t GetStatusText ( );
    void PutStatusText (
        _bstr_t prop );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL prop );
    _bstr_t GetResult ( );
    void PutResult (
        _bstr_t prop );
    TextInputPtr GetTextInput ( );
    CheckBoxPtr GetCheckBox ( );
    DropDownPtr GetDropDown ( );
    FormFieldPtr GetNext ( );
    FormFieldPtr GetPrevious ( );
    VARIANT_BOOL GetCalculateOnExit ( );
    void PutCalculateOnExit (
        VARIANT_BOOL prop );
    RangePtr GetRange ( );
    HRESULT Select ( );
    HRESULT Copy ( );
    HRESULT Cut ( );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdFieldType * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_EntryMacro (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_EntryMacro (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ExitMacro (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ExitMacro (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_OwnHelp (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OwnHelp (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_OwnStatus (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OwnStatus (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HelpText (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_HelpText (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_StatusText (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_StatusText (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Result (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Result (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_TextInput (
        /*[out,retval]*/ struct TextInput * * prop ) = 0;
      virtual HRESULT __stdcall get_CheckBox (
        /*[out,retval]*/ struct CheckBox * * prop ) = 0;
      virtual HRESULT __stdcall get_DropDown (
        /*[out,retval]*/ struct DropDown * * prop ) = 0;
      virtual HRESULT __stdcall get_Next (
        /*[out,retval]*/ struct FormField * * prop ) = 0;
      virtual HRESULT __stdcall get_Previous (
        /*[out,retval]*/ struct FormField * * prop ) = 0;
      virtual HRESULT __stdcall get_CalculateOnExit (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CalculateOnExit (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
      virtual HRESULT __stdcall raw_Copy ( ) = 0;
      virtual HRESULT __stdcall raw_Cut ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("00020929-0000-0000-c000-000000000046"))
FormFields : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetShaded,put=PutShaded))
    VARIANT_BOOL Shaded;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    VARIANT_BOOL GetShaded ( );
    void PutShaded (
        VARIANT_BOOL prop );
    IUnknownPtr Get_NewEnum ( );
    FormFieldPtr Item (
        VARIANT * Index );
    FormFieldPtr Add (
        struct Range * Range,
        enum WdFieldType Type );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Shaded (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Shaded (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct FormField * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct Range * Range,
        /*[in]*/ enum WdFieldType Type,
        /*[out,retval]*/ struct FormField * * prop ) = 0;
};

struct __declspec(uuid("00020921-0000-0000-c000-000000000046"))
TableOfFigures : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetIncludeLabel,put=PutIncludeLabel))
    VARIANT_BOOL IncludeLabel;
    __declspec(property(get=GetRightAlignPageNumbers,put=PutRightAlignPageNumbers))
    VARIANT_BOOL RightAlignPageNumbers;
    __declspec(property(get=GetUseHeadingStyles,put=PutUseHeadingStyles))
    VARIANT_BOOL UseHeadingStyles;
    __declspec(property(get=GetLowerHeadingLevel,put=PutLowerHeadingLevel))
    long LowerHeadingLevel;
    __declspec(property(get=GetUpperHeadingLevel,put=PutUpperHeadingLevel))
    long UpperHeadingLevel;
    __declspec(property(get=GetIncludePageNumbers,put=PutIncludePageNumbers))
    VARIANT_BOOL IncludePageNumbers;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetUseFields,put=PutUseFields))
    VARIANT_BOOL UseFields;
    __declspec(property(get=GetTableID,put=PutTableID))
    _bstr_t TableID;
    __declspec(property(get=GetHeadingStyles))
    HeadingStylesPtr HeadingStyles;
    __declspec(property(get=GetTabLeader,put=PutTabLeader))
    enum WdTabLeader TabLeader;
    __declspec(property(get=GetUseHyperlinks,put=PutUseHyperlinks))
    VARIANT_BOOL UseHyperlinks;
    __declspec(property(get=GetHidePageNumbersInWeb,put=PutHidePageNumbersInWeb))
    VARIANT_BOOL HidePageNumbersInWeb;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetCaption ( );
    void PutCaption (
        _bstr_t prop );
    VARIANT_BOOL GetIncludeLabel ( );
    void PutIncludeLabel (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetRightAlignPageNumbers ( );
    void PutRightAlignPageNumbers (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetUseHeadingStyles ( );
    void PutUseHeadingStyles (
        VARIANT_BOOL prop );
    long GetLowerHeadingLevel ( );
    void PutLowerHeadingLevel (
        long prop );
    long GetUpperHeadingLevel ( );
    void PutUpperHeadingLevel (
        long prop );
    VARIANT_BOOL GetIncludePageNumbers ( );
    void PutIncludePageNumbers (
        VARIANT_BOOL prop );
    RangePtr GetRange ( );
    VARIANT_BOOL GetUseFields ( );
    void PutUseFields (
        VARIANT_BOOL prop );
    _bstr_t GetTableID ( );
    void PutTableID (
        _bstr_t prop );
    HeadingStylesPtr GetHeadingStyles ( );
    enum WdTabLeader GetTabLeader ( );
    void PutTabLeader (
        enum WdTabLeader prop );
    HRESULT Delete ( );
    HRESULT UpdatePageNumbers ( );
    HRESULT Update ( );
    VARIANT_BOOL GetUseHyperlinks ( );
    void PutUseHyperlinks (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetHidePageNumbersInWeb ( );
    void PutHidePageNumbersInWeb (
        VARIANT_BOOL prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_IncludeLabel (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IncludeLabel (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RightAlignPageNumbers (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RightAlignPageNumbers (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UseHeadingStyles (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseHeadingStyles (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_LowerHeadingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_LowerHeadingLevel (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_UpperHeadingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_UpperHeadingLevel (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_IncludePageNumbers (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IncludePageNumbers (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_UseFields (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseFields (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_TableID (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_TableID (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_HeadingStyles (
        /*[out,retval]*/ struct HeadingStyles * * prop ) = 0;
      virtual HRESULT __stdcall get_TabLeader (
        /*[out,retval]*/ enum WdTabLeader * prop ) = 0;
      virtual HRESULT __stdcall put_TabLeader (
        /*[in]*/ enum WdTabLeader prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_UpdatePageNumbers ( ) = 0;
      virtual HRESULT __stdcall raw_Update ( ) = 0;
      virtual HRESULT __stdcall get_UseHyperlinks (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseHyperlinks (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HidePageNumbersInWeb (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HidePageNumbersInWeb (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("0002091e-0000-0000-c000-000000000046"))
MailMergeField : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum WdFieldType Type;
    __declspec(property(get=GetLocked,put=PutLocked))
    VARIANT_BOOL Locked;
    __declspec(property(get=GetCode,put=PutCode))
    RangePtr Code;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetNext))
    MailMergeFieldPtr Next;
    __declspec(property(get=GetPrevious))
    MailMergeFieldPtr Previous;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    enum WdFieldType GetType ( );
    VARIANT_BOOL GetLocked ( );
    void PutLocked (
        VARIANT_BOOL prop );
    RangePtr GetCode ( );
    void PutCode (
        struct Range * prop );
    MailMergeFieldPtr GetNext ( );
    MailMergeFieldPtr GetPrevious ( );
    HRESULT Select ( );
    HRESULT Copy ( );
    HRESULT Cut ( );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdFieldType * prop ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Code (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall put_Code (
        /*[in]*/ struct Range * prop ) = 0;
      virtual HRESULT __stdcall get_Next (
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
      virtual HRESULT __stdcall get_Previous (
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
      virtual HRESULT __stdcall raw_Copy ( ) = 0;
      virtual HRESULT __stdcall raw_Cut ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("0002091f-0000-0000-c000-000000000046"))
MailMergeFields : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    MailMergeFieldPtr Item (
        long Index );
    MailMergeFieldPtr Add (
        struct Range * Range,
        _bstr_t Name );
    MailMergeFieldPtr AddAsk (
        struct Range * Range,
        _bstr_t Name,
        VARIANT * Prompt = &vtMissing,
        VARIANT * DefaultAskText = &vtMissing,
        VARIANT * AskOnce = &vtMissing );
    MailMergeFieldPtr AddFillIn (
        struct Range * Range,
        VARIANT * Prompt = &vtMissing,
        VARIANT * DefaultFillInText = &vtMissing,
        VARIANT * AskOnce = &vtMissing );
    MailMergeFieldPtr AddIf (
        struct Range * Range,
        _bstr_t MergeField,
        enum WdMailMergeComparison Comparison,
        VARIANT * CompareTo = &vtMissing,
        VARIANT * TrueAutoText = &vtMissing,
        VARIANT * TrueText = &vtMissing,
        VARIANT * FalseAutoText = &vtMissing,
        VARIANT * FalseText = &vtMissing );
    MailMergeFieldPtr AddMergeRec (
        struct Range * Range );
    MailMergeFieldPtr AddMergeSeq (
        struct Range * Range );
    MailMergeFieldPtr AddNext (
        struct Range * Range );
    MailMergeFieldPtr AddNextIf (
        struct Range * Range,
        _bstr_t MergeField,
        enum WdMailMergeComparison Comparison,
        VARIANT * CompareTo = &vtMissing );
    MailMergeFieldPtr AddSet (
        struct Range * Range,
        _bstr_t Name,
        VARIANT * ValueText = &vtMissing,
        VARIANT * ValueAutoText = &vtMissing );
    MailMergeFieldPtr AddSkipIf (
        struct Range * Range,
        _bstr_t MergeField,
        enum WdMailMergeComparison Comparison,
        VARIANT * CompareTo = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct Range * Range,
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddAsk (
        /*[in]*/ struct Range * Range,
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * Prompt,
        /*[in]*/ VARIANT * DefaultAskText,
        /*[in]*/ VARIANT * AskOnce,
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddFillIn (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Prompt,
        /*[in]*/ VARIANT * DefaultFillInText,
        /*[in]*/ VARIANT * AskOnce,
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddIf (
        /*[in]*/ struct Range * Range,
        /*[in]*/ BSTR MergeField,
        /*[in]*/ enum WdMailMergeComparison Comparison,
        /*[in]*/ VARIANT * CompareTo,
        /*[in]*/ VARIANT * TrueAutoText,
        /*[in]*/ VARIANT * TrueText,
        /*[in]*/ VARIANT * FalseAutoText,
        /*[in]*/ VARIANT * FalseText,
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddMergeRec (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddMergeSeq (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddNext (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddNextIf (
        /*[in]*/ struct Range * Range,
        /*[in]*/ BSTR MergeField,
        /*[in]*/ enum WdMailMergeComparison Comparison,
        /*[in]*/ VARIANT * CompareTo,
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddSet (
        /*[in]*/ struct Range * Range,
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * ValueText,
        /*[in]*/ VARIANT * ValueAutoText,
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddSkipIf (
        /*[in]*/ struct Range * Range,
        /*[in]*/ BSTR MergeField,
        /*[in]*/ enum WdMailMergeComparison Comparison,
        /*[in]*/ VARIANT * CompareTo,
        /*[out,retval]*/ struct MailMergeField * * prop ) = 0;
};

struct __declspec(uuid("00020920-0000-0000-c000-000000000046"))
MailMerge : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetMainDocumentType,put=PutMainDocumentType))
    enum WdMailMergeMainDocType MainDocumentType;
    __declspec(property(get=GetState))
    enum WdMailMergeState State;
    __declspec(property(get=GetDestination,put=PutDestination))
    enum WdMailMergeDestination Destination;
    __declspec(property(get=GetDataSource))
    MailMergeDataSourcePtr DataSource;
    __declspec(property(get=GetFields))
    MailMergeFieldsPtr Fields;
    __declspec(property(get=GetViewMailMergeFieldCodes,put=PutViewMailMergeFieldCodes))
    long ViewMailMergeFieldCodes;
    __declspec(property(get=GetSuppressBlankLines,put=PutSuppressBlankLines))
    VARIANT_BOOL SuppressBlankLines;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetMailAsAttachment,put=PutMailAsAttachment))
    VARIANT_BOOL MailAsAttachment;
    __declspec(property(get=GetMailAddressFieldName,put=PutMailAddressFieldName))
    _bstr_t MailAddressFieldName;
    __declspec(property(get=GetMailSubject,put=PutMailSubject))
    _bstr_t MailSubject;
    __declspec(property(get=GetHighlightMergeFields,put=PutHighlightMergeFields))
    VARIANT_BOOL HighlightMergeFields;
    __declspec(property(get=GetMailFormat,put=PutMailFormat))
    enum WdMailMergeMailFormat MailFormat;
    __declspec(property(get=GetShowSendToCustom,put=PutShowSendToCustom))
    _bstr_t ShowSendToCustom;
    __declspec(property(get=GetWizardState,put=PutWizardState))
    long WizardState;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    enum WdMailMergeMainDocType GetMainDocumentType ( );
    void PutMainDocumentType (
        enum WdMailMergeMainDocType prop );
    enum WdMailMergeState GetState ( );
    enum WdMailMergeDestination GetDestination ( );
    void PutDestination (
        enum WdMailMergeDestination prop );
    MailMergeDataSourcePtr GetDataSource ( );
    MailMergeFieldsPtr GetFields ( );
    long GetViewMailMergeFieldCodes ( );
    void PutViewMailMergeFieldCodes (
        long prop );
    VARIANT_BOOL GetSuppressBlankLines ( );
    void PutSuppressBlankLines (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetMailAsAttachment ( );
    void PutMailAsAttachment (
        VARIANT_BOOL prop );
    _bstr_t GetMailAddressFieldName ( );
    void PutMailAddressFieldName (
        _bstr_t prop );
    _bstr_t GetMailSubject ( );
    void PutMailSubject (
        _bstr_t prop );
    HRESULT CreateDataSource (
        VARIANT * Name = &vtMissing,
        VARIANT * PasswordDocument = &vtMissing,
        VARIANT * WritePasswordDocument = &vtMissing,
        VARIANT * HeaderRecord = &vtMissing,
        VARIANT * MSQuery = &vtMissing,
        VARIANT * SQLStatement = &vtMissing,
        VARIANT * SQLStatement1 = &vtMissing,
        VARIANT * Connection = &vtMissing,
        VARIANT * LinkToSource = &vtMissing );
    HRESULT CreateHeaderSource (
        _bstr_t Name,
        VARIANT * PasswordDocument = &vtMissing,
        VARIANT * WritePasswordDocument = &vtMissing,
        VARIANT * HeaderRecord = &vtMissing );
    HRESULT OpenDataSource2000 (
        _bstr_t Name,
        VARIANT * Format = &vtMissing,
        VARIANT * ConfirmConversions = &vtMissing,
        VARIANT * ReadOnly = &vtMissing,
        VARIANT * LinkToSource = &vtMissing,
        VARIANT * AddToRecentFiles = &vtMissing,
        VARIANT * PasswordDocument = &vtMissing,
        VARIANT * PasswordTemplate = &vtMissing,
        VARIANT * Revert = &vtMissing,
        VARIANT * WritePasswordDocument = &vtMissing,
        VARIANT * WritePasswordTemplate = &vtMissing,
        VARIANT * Connection = &vtMissing,
        VARIANT * SQLStatement = &vtMissing,
        VARIANT * SQLStatement1 = &vtMissing );
    HRESULT OpenHeaderSource2000 (
        _bstr_t Name,
        VARIANT * Format = &vtMissing,
        VARIANT * ConfirmConversions = &vtMissing,
        VARIANT * ReadOnly = &vtMissing,
        VARIANT * AddToRecentFiles = &vtMissing,
        VARIANT * PasswordDocument = &vtMissing,
        VARIANT * PasswordTemplate = &vtMissing,
        VARIANT * Revert = &vtMissing,
        VARIANT * WritePasswordDocument = &vtMissing,
        VARIANT * WritePasswordTemplate = &vtMissing );
    HRESULT Execute (
        VARIANT * Pause = &vtMissing );
    HRESULT Check ( );
    HRESULT EditDataSource ( );
    HRESULT EditHeaderSource ( );
    HRESULT EditMainDocument ( );
    HRESULT UseAddressBook (
        _bstr_t Type );
    VARIANT_BOOL GetHighlightMergeFields ( );
    void PutHighlightMergeFields (
        VARIANT_BOOL prop );
    enum WdMailMergeMailFormat GetMailFormat ( );
    void PutMailFormat (
        enum WdMailMergeMailFormat prop );
    _bstr_t GetShowSendToCustom ( );
    void PutShowSendToCustom (
        _bstr_t prop );
    long GetWizardState ( );
    void PutWizardState (
        long prop );
    HRESULT OpenDataSource (
        _bstr_t Name,
        VARIANT * Format = &vtMissing,
        VARIANT * ConfirmConversions = &vtMissing,
        VARIANT * ReadOnly = &vtMissing,
        VARIANT * LinkToSource = &vtMissing,
        VARIANT * AddToRecentFiles = &vtMissing,
        VARIANT * PasswordDocument = &vtMissing,
        VARIANT * PasswordTemplate = &vtMissing,
        VARIANT * Revert = &vtMissing,
        VARIANT * WritePasswordDocument = &vtMissing,
        VARIANT * WritePasswordTemplate = &vtMissing,
        VARIANT * Connection = &vtMissing,
        VARIANT * SQLStatement = &vtMissing,
        VARIANT * SQLStatement1 = &vtMissing,
        VARIANT * OpenExclusive = &vtMissing,
        VARIANT * SubType = &vtMissing );
    HRESULT OpenHeaderSource (
        _bstr_t Name,
        VARIANT * Format = &vtMissing,
        VARIANT * ConfirmConversions = &vtMissing,
        VARIANT * ReadOnly = &vtMissing,
        VARIANT * AddToRecentFiles = &vtMissing,
        VARIANT * PasswordDocument = &vtMissing,
        VARIANT * PasswordTemplate = &vtMissing,
        VARIANT * Revert = &vtMissing,
        VARIANT * WritePasswordDocument = &vtMissing,
        VARIANT * WritePasswordTemplate = &vtMissing,
        VARIANT * OpenExclusive = &vtMissing );
    HRESULT ShowWizard (
        VARIANT * InitialState,
        VARIANT * ShowDocumentStep = &vtMissing,
        VARIANT * ShowTemplateStep = &vtMissing,
        VARIANT * ShowDataStep = &vtMissing,
        VARIANT * ShowWriteStep = &vtMissing,
        VARIANT * ShowPreviewStep = &vtMissing,
        VARIANT * ShowMergeStep = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_MainDocumentType (
        /*[out,retval]*/ enum WdMailMergeMainDocType * prop ) = 0;
      virtual HRESULT __stdcall put_MainDocumentType (
        /*[in]*/ enum WdMailMergeMainDocType prop ) = 0;
      virtual HRESULT __stdcall get_State (
        /*[out,retval]*/ enum WdMailMergeState * prop ) = 0;
      virtual HRESULT __stdcall get_Destination (
        /*[out,retval]*/ enum WdMailMergeDestination * prop ) = 0;
      virtual HRESULT __stdcall put_Destination (
        /*[in]*/ enum WdMailMergeDestination prop ) = 0;
      virtual HRESULT __stdcall get_DataSource (
        /*[out,retval]*/ struct MailMergeDataSource * * prop ) = 0;
      virtual HRESULT __stdcall get_Fields (
        /*[out,retval]*/ struct MailMergeFields * * prop ) = 0;
      virtual HRESULT __stdcall get_ViewMailMergeFieldCodes (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ViewMailMergeFieldCodes (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_SuppressBlankLines (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SuppressBlankLines (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MailAsAttachment (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MailAsAttachment (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MailAddressFieldName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_MailAddressFieldName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_MailSubject (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_MailSubject (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall raw_CreateDataSource (
        /*[in]*/ VARIANT * Name = &vtMissing,
        /*[in]*/ VARIANT * PasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * WritePasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * HeaderRecord = &vtMissing,
        /*[in]*/ VARIANT * MSQuery = &vtMissing,
        /*[in]*/ VARIANT * SQLStatement = &vtMissing,
        /*[in]*/ VARIANT * SQLStatement1 = &vtMissing,
        /*[in]*/ VARIANT * Connection = &vtMissing,
        /*[in]*/ VARIANT * LinkToSource = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_CreateHeaderSource (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * PasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * WritePasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * HeaderRecord = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_OpenDataSource2000 (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * Format = &vtMissing,
        /*[in]*/ VARIANT * ConfirmConversions = &vtMissing,
        /*[in]*/ VARIANT * ReadOnly = &vtMissing,
        /*[in]*/ VARIANT * LinkToSource = &vtMissing,
        /*[in]*/ VARIANT * AddToRecentFiles = &vtMissing,
        /*[in]*/ VARIANT * PasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * PasswordTemplate = &vtMissing,
        /*[in]*/ VARIANT * Revert = &vtMissing,
        /*[in]*/ VARIANT * WritePasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * WritePasswordTemplate = &vtMissing,
        /*[in]*/ VARIANT * Connection = &vtMissing,
        /*[in]*/ VARIANT * SQLStatement = &vtMissing,
        /*[in]*/ VARIANT * SQLStatement1 = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_OpenHeaderSource2000 (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * Format = &vtMissing,
        /*[in]*/ VARIANT * ConfirmConversions = &vtMissing,
        /*[in]*/ VARIANT * ReadOnly = &vtMissing,
        /*[in]*/ VARIANT * AddToRecentFiles = &vtMissing,
        /*[in]*/ VARIANT * PasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * PasswordTemplate = &vtMissing,
        /*[in]*/ VARIANT * Revert = &vtMissing,
        /*[in]*/ VARIANT * WritePasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * WritePasswordTemplate = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Execute (
        /*[in]*/ VARIANT * Pause = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Check ( ) = 0;
      virtual HRESULT __stdcall raw_EditDataSource ( ) = 0;
      virtual HRESULT __stdcall raw_EditHeaderSource ( ) = 0;
      virtual HRESULT __stdcall raw_EditMainDocument ( ) = 0;
      virtual HRESULT __stdcall raw_UseAddressBook (
        /*[in]*/ BSTR Type ) = 0;
      virtual HRESULT __stdcall get_HighlightMergeFields (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HighlightMergeFields (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MailFormat (
        /*[out,retval]*/ enum WdMailMergeMailFormat * prop ) = 0;
      virtual HRESULT __stdcall put_MailFormat (
        /*[in]*/ enum WdMailMergeMailFormat prop ) = 0;
      virtual HRESULT __stdcall get_ShowSendToCustom (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ShowSendToCustom (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_WizardState (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_WizardState (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall raw_OpenDataSource (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * Format = &vtMissing,
        /*[in]*/ VARIANT * ConfirmConversions = &vtMissing,
        /*[in]*/ VARIANT * ReadOnly = &vtMissing,
        /*[in]*/ VARIANT * LinkToSource = &vtMissing,
        /*[in]*/ VARIANT * AddToRecentFiles = &vtMissing,
        /*[in]*/ VARIANT * PasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * PasswordTemplate = &vtMissing,
        /*[in]*/ VARIANT * Revert = &vtMissing,
        /*[in]*/ VARIANT * WritePasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * WritePasswordTemplate = &vtMissing,
        /*[in]*/ VARIANT * Connection = &vtMissing,
        /*[in]*/ VARIANT * SQLStatement = &vtMissing,
        /*[in]*/ VARIANT * SQLStatement1 = &vtMissing,
        /*[in]*/ VARIANT * OpenExclusive = &vtMissing,
        /*[in]*/ VARIANT * SubType = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_OpenHeaderSource (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * Format = &vtMissing,
        /*[in]*/ VARIANT * ConfirmConversions = &vtMissing,
        /*[in]*/ VARIANT * ReadOnly = &vtMissing,
        /*[in]*/ VARIANT * AddToRecentFiles = &vtMissing,
        /*[in]*/ VARIANT * PasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * PasswordTemplate = &vtMissing,
        /*[in]*/ VARIANT * Revert = &vtMissing,
        /*[in]*/ VARIANT * WritePasswordDocument = &vtMissing,
        /*[in]*/ VARIANT * WritePasswordTemplate = &vtMissing,
        /*[in]*/ VARIANT * OpenExclusive = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_ShowWizard (
        /*[in]*/ VARIANT * InitialState,
        /*[in]*/ VARIANT * ShowDocumentStep = &vtMissing,
        /*[in]*/ VARIANT * ShowTemplateStep = &vtMissing,
        /*[in]*/ VARIANT * ShowDataStep = &vtMissing,
        /*[in]*/ VARIANT * ShowWriteStep = &vtMissing,
        /*[in]*/ VARIANT * ShowPreviewStep = &vtMissing,
        /*[in]*/ VARIANT * ShowMergeStep = &vtMissing ) = 0;
};

struct __declspec(uuid("00020913-0000-0000-c000-000000000046"))
TableOfContents : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUseHeadingStyles,put=PutUseHeadingStyles))
    VARIANT_BOOL UseHeadingStyles;
    __declspec(property(get=GetUseFields,put=PutUseFields))
    VARIANT_BOOL UseFields;
    __declspec(property(get=GetUpperHeadingLevel,put=PutUpperHeadingLevel))
    long UpperHeadingLevel;
    __declspec(property(get=GetLowerHeadingLevel,put=PutLowerHeadingLevel))
    long LowerHeadingLevel;
    __declspec(property(get=GetTableID,put=PutTableID))
    _bstr_t TableID;
    __declspec(property(get=GetHeadingStyles))
    HeadingStylesPtr HeadingStyles;
    __declspec(property(get=GetRightAlignPageNumbers,put=PutRightAlignPageNumbers))
    VARIANT_BOOL RightAlignPageNumbers;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIncludePageNumbers,put=PutIncludePageNumbers))
    VARIANT_BOOL IncludePageNumbers;
    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetTabLeader,put=PutTabLeader))
    enum WdTabLeader TabLeader;
    __declspec(property(get=GetUseHyperlinks,put=PutUseHyperlinks))
    VARIANT_BOOL UseHyperlinks;
    __declspec(property(get=GetHidePageNumbersInWeb,put=PutHidePageNumbersInWeb))
    VARIANT_BOOL HidePageNumbersInWeb;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetUseHeadingStyles ( );
    void PutUseHeadingStyles (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetUseFields ( );
    void PutUseFields (
        VARIANT_BOOL prop );
    long GetUpperHeadingLevel ( );
    void PutUpperHeadingLevel (
        long prop );
    long GetLowerHeadingLevel ( );
    void PutLowerHeadingLevel (
        long prop );
    _bstr_t GetTableID ( );
    void PutTableID (
        _bstr_t prop );
    HeadingStylesPtr GetHeadingStyles ( );
    VARIANT_BOOL GetRightAlignPageNumbers ( );
    void PutRightAlignPageNumbers (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetIncludePageNumbers ( );
    void PutIncludePageNumbers (
        VARIANT_BOOL prop );
    RangePtr GetRange ( );
    enum WdTabLeader GetTabLeader ( );
    void PutTabLeader (
        enum WdTabLeader prop );
    HRESULT Delete ( );
    HRESULT UpdatePageNumbers ( );
    HRESULT Update ( );
    VARIANT_BOOL GetUseHyperlinks ( );
    void PutUseHyperlinks (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetHidePageNumbersInWeb ( );
    void PutHidePageNumbersInWeb (
        VARIANT_BOOL prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_UseHeadingStyles (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseHeadingStyles (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UseFields (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseFields (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_UpperHeadingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_UpperHeadingLevel (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_LowerHeadingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_LowerHeadingLevel (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_TableID (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_TableID (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_HeadingStyles (
        /*[out,retval]*/ struct HeadingStyles * * prop ) = 0;
      virtual HRESULT __stdcall get_RightAlignPageNumbers (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RightAlignPageNumbers (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_IncludePageNumbers (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IncludePageNumbers (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_TabLeader (
        /*[out,retval]*/ enum WdTabLeader * prop ) = 0;
      virtual HRESULT __stdcall put_TabLeader (
        /*[in]*/ enum WdTabLeader prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_UpdatePageNumbers ( ) = 0;
      virtual HRESULT __stdcall raw_Update ( ) = 0;
      virtual HRESULT __stdcall get_UseHyperlinks (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseHyperlinks (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HidePageNumbersInWeb (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HidePageNumbersInWeb (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("00020911-0000-0000-c000-000000000046"))
TableOfAuthorities : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetPassim,put=PutPassim))
    VARIANT_BOOL Passim;
    __declspec(property(get=GetKeepEntryFormatting,put=PutKeepEntryFormatting))
    VARIANT_BOOL KeepEntryFormatting;
    __declspec(property(get=GetCategory,put=PutCategory))
    long Category;
    __declspec(property(get=GetBookmark,put=PutBookmark))
    _bstr_t Bookmark;
    __declspec(property(get=GetSeparator,put=PutSeparator))
    _bstr_t Separator;
    __declspec(property(get=GetIncludeSequenceName,put=PutIncludeSequenceName))
    _bstr_t IncludeSequenceName;
    __declspec(property(get=GetEntrySeparator,put=PutEntrySeparator))
    _bstr_t EntrySeparator;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetPageRangeSeparator,put=PutPageRangeSeparator))
    _bstr_t PageRangeSeparator;
    __declspec(property(get=GetIncludeCategoryHeader,put=PutIncludeCategoryHeader))
    VARIANT_BOOL IncludeCategoryHeader;
    __declspec(property(get=GetPageNumberSeparator,put=PutPageNumberSeparator))
    _bstr_t PageNumberSeparator;
    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetTabLeader,put=PutTabLeader))
    enum WdTabLeader TabLeader;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetPassim ( );
    void PutPassim (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetKeepEntryFormatting ( );
    void PutKeepEntryFormatting (
        VARIANT_BOOL prop );
    long GetCategory ( );
    void PutCategory (
        long prop );
    _bstr_t GetBookmark ( );
    void PutBookmark (
        _bstr_t prop );
    _bstr_t GetSeparator ( );
    void PutSeparator (
        _bstr_t prop );
    _bstr_t GetIncludeSequenceName ( );
    void PutIncludeSequenceName (
        _bstr_t prop );
    _bstr_t GetEntrySeparator ( );
    void PutEntrySeparator (
        _bstr_t prop );
    _bstr_t GetPageRangeSeparator ( );
    void PutPageRangeSeparator (
        _bstr_t prop );
    VARIANT_BOOL GetIncludeCategoryHeader ( );
    void PutIncludeCategoryHeader (
        VARIANT_BOOL prop );
    _bstr_t GetPageNumberSeparator ( );
    void PutPageNumberSeparator (
        _bstr_t prop );
    RangePtr GetRange ( );
    enum WdTabLeader GetTabLeader ( );
    void PutTabLeader (
        enum WdTabLeader prop );
    HRESULT Delete ( );
    HRESULT Update ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Passim (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Passim (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_KeepEntryFormatting (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_KeepEntryFormatting (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Category (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Category (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Bookmark (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Bookmark (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Separator (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Separator (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_IncludeSequenceName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_IncludeSequenceName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_EntrySeparator (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_EntrySeparator (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_PageRangeSeparator (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_PageRangeSeparator (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_IncludeCategoryHeader (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_IncludeCategoryHeader (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PageNumberSeparator (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_PageNumberSeparator (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_TabLeader (
        /*[out,retval]*/ enum WdTabLeader * prop ) = 0;
      virtual HRESULT __stdcall put_TabLeader (
        /*[in]*/ enum WdTabLeader prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Update ( ) = 0;
};

struct __declspec(uuid("0002097d-0000-0000-c000-000000000046"))
Index : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetHeadingSeparator,put=PutHeadingSeparator))
    enum WdHeadingSeparator HeadingSeparator;
    __declspec(property(get=GetRightAlignPageNumbers,put=PutRightAlignPageNumbers))
    VARIANT_BOOL RightAlignPageNumbers;
    __declspec(property(get=GetType,put=PutType))
    enum WdIndexType Type;
    __declspec(property(get=GetNumberOfColumns,put=PutNumberOfColumns))
    long NumberOfColumns;
    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetTabLeader,put=PutTabLeader))
    enum WdTabLeader TabLeader;
    __declspec(property(get=GetAccentedLetters,put=PutAccentedLetters))
    VARIANT_BOOL AccentedLetters;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetSortBy,put=PutSortBy))
    enum WdIndexSortBy SortBy;
    __declspec(property(get=GetFilter,put=PutFilter))
    enum WdIndexFilter Filter;
    __declspec(property(get=GetIndexLanguage,put=PutIndexLanguage))
    enum WdLanguageID IndexLanguage;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    enum WdHeadingSeparator GetHeadingSeparator ( );
    void PutHeadingSeparator (
        enum WdHeadingSeparator prop );
    VARIANT_BOOL GetRightAlignPageNumbers ( );
    void PutRightAlignPageNumbers (
        VARIANT_BOOL prop );
    enum WdIndexType GetType ( );
    void PutType (
        enum WdIndexType prop );
    long GetNumberOfColumns ( );
    void PutNumberOfColumns (
        long prop );
    RangePtr GetRange ( );
    enum WdTabLeader GetTabLeader ( );
    void PutTabLeader (
        enum WdTabLeader prop );
    VARIANT_BOOL GetAccentedLetters ( );
    void PutAccentedLetters (
        VARIANT_BOOL prop );
    enum WdIndexSortBy GetSortBy ( );
    void PutSortBy (
        enum WdIndexSortBy prop );
    enum WdIndexFilter GetFilter ( );
    void PutFilter (
        enum WdIndexFilter prop );
    HRESULT Delete ( );
    HRESULT Update ( );
    enum WdLanguageID GetIndexLanguage ( );
    void PutIndexLanguage (
        enum WdLanguageID prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_HeadingSeparator (
        /*[out,retval]*/ enum WdHeadingSeparator * prop ) = 0;
      virtual HRESULT __stdcall put_HeadingSeparator (
        /*[in]*/ enum WdHeadingSeparator prop ) = 0;
      virtual HRESULT __stdcall get_RightAlignPageNumbers (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RightAlignPageNumbers (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdIndexType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum WdIndexType prop ) = 0;
      virtual HRESULT __stdcall get_NumberOfColumns (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_NumberOfColumns (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_TabLeader (
        /*[out,retval]*/ enum WdTabLeader * prop ) = 0;
      virtual HRESULT __stdcall put_TabLeader (
        /*[in]*/ enum WdTabLeader prop ) = 0;
      virtual HRESULT __stdcall get_AccentedLetters (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AccentedLetters (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SortBy (
        /*[out,retval]*/ enum WdIndexSortBy * prop ) = 0;
      virtual HRESULT __stdcall put_SortBy (
        /*[in]*/ enum WdIndexSortBy prop ) = 0;
      virtual HRESULT __stdcall get_Filter (
        /*[out,retval]*/ enum WdIndexFilter * prop ) = 0;
      virtual HRESULT __stdcall put_Filter (
        /*[in]*/ enum WdIndexFilter prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Update ( ) = 0;
      virtual HRESULT __stdcall get_IndexLanguage (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_IndexLanguage (
        /*[in]*/ enum WdLanguageID prop ) = 0;
};

struct __declspec(uuid("00020989-0000-0000-c000-000000000046"))
Subdocument : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetLocked,put=PutLocked))
    VARIANT_BOOL Locked;
    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetPath))
    _bstr_t Path;
    __declspec(property(get=GetHasFile))
    VARIANT_BOOL HasFile;
    __declspec(property(get=GetLevel))
    long Level;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetLocked ( );
    void PutLocked (
        VARIANT_BOOL prop );
    RangePtr GetRange ( );
    _bstr_t GetName ( );
    _bstr_t GetPath ( );
    VARIANT_BOOL GetHasFile ( );
    long GetLevel ( );
    HRESULT Delete ( );
    HRESULT Split (
        struct Range * Range );
    _DocumentPtr Open ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_HasFile (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Level (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Split (
        /*[in]*/ struct Range * Range ) = 0;
      virtual HRESULT __stdcall raw_Open (
        /*[out,retval]*/ struct _Document * * prop ) = 0;
};

struct __declspec(uuid("00020988-0000-0000-c000-000000000046"))
Subdocuments : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetExpanded,put=PutExpanded))
    VARIANT_BOOL Expanded;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    VARIANT_BOOL GetExpanded ( );
    void PutExpanded (
        VARIANT_BOOL prop );
    SubdocumentPtr Item (
        long Index );
    SubdocumentPtr AddFromFile (
        VARIANT * Name,
        VARIANT * ConfirmConversions = &vtMissing,
        VARIANT * ReadOnly = &vtMissing,
        VARIANT * PasswordDocument = &vtMissing,
        VARIANT * PasswordTemplate = &vtMissing,
        VARIANT * Revert = &vtMissing,
        VARIANT * WritePasswordDocument = &vtMissing,
        VARIANT * WritePasswordTemplate = &vtMissing );
    SubdocumentPtr AddFromRange (
        struct Range * Range );
    HRESULT Merge (
        VARIANT * FirstSubdocument = &vtMissing,
        VARIANT * LastSubdocument = &vtMissing );
    HRESULT Delete ( );
    HRESULT Select ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Expanded (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Expanded (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Subdocument * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddFromFile (
        /*[in]*/ VARIANT * Name,
        /*[in]*/ VARIANT * ConfirmConversions,
        /*[in]*/ VARIANT * ReadOnly,
        /*[in]*/ VARIANT * PasswordDocument,
        /*[in]*/ VARIANT * PasswordTemplate,
        /*[in]*/ VARIANT * Revert,
        /*[in]*/ VARIANT * WritePasswordDocument,
        /*[in]*/ VARIANT * WritePasswordTemplate,
        /*[out,retval]*/ struct Subdocument * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddFromRange (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ struct Subdocument * * prop ) = 0;
      virtual HRESULT __stdcall raw_Merge (
        /*[in]*/ VARIANT * FirstSubdocument = &vtMissing,
        /*[in]*/ VARIANT * LastSubdocument = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
};

struct __declspec(uuid("0002098c-0000-0000-c000-000000000046"))
StoryRanges : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    RangePtr Item (
        enum WdStoryType Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ enum WdStoryType Index,
        /*[out,retval]*/ struct Range * * prop ) = 0;
};

struct __declspec(uuid("00020991-0000-0000-c000-000000000046"))
ListParagraphs : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    ParagraphPtr Item (
        long Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Paragraph * * prop ) = 0;
};

struct __declspec(uuid("000209bb-0000-0000-c000-000000000046"))
ProofreadingErrors : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetType))
    enum WdProofreadingErrorType Type;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    enum WdProofreadingErrorType GetType ( );
    RangePtr Item (
        long Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdProofreadingErrorType * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Range * * prop ) = 0;
};

struct __declspec(uuid("000209e5-0000-0000-c000-000000000046"))
EmailSignatureEntries : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    EmailSignatureEntryPtr Item (
        VARIANT * Index );
    EmailSignatureEntryPtr Add (
        _bstr_t Name,
        struct Range * Range );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct EmailSignatureEntry * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ struct EmailSignatureEntry * * prop ) = 0;
};

struct __declspec(uuid("000209dc-0000-0000-c000-000000000046"))
EmailSignature : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetNewMessageSignature,put=PutNewMessageSignature))
    _bstr_t NewMessageSignature;
    __declspec(property(get=GetReplyMessageSignature,put=PutReplyMessageSignature))
    _bstr_t ReplyMessageSignature;
    __declspec(property(get=GetEmailSignatureEntries))
    EmailSignatureEntriesPtr EmailSignatureEntries;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetNewMessageSignature ( );
    void PutNewMessageSignature (
        _bstr_t prop );
    _bstr_t GetReplyMessageSignature ( );
    void PutReplyMessageSignature (
        _bstr_t prop );
    EmailSignatureEntriesPtr GetEmailSignatureEntries ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_NewMessageSignature (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NewMessageSignature (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ReplyMessageSignature (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ReplyMessageSignature (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_EmailSignatureEntries (
        /*[out,retval]*/ struct EmailSignatureEntries * * prop ) = 0;
};

struct __declspec(uuid("79635bf1-bd1d-4b3f-a520-c1106f1aaad8"))
Break : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetPageIndex))
    long PageIndex;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    RangePtr GetRange ( );
    long GetPageIndex ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_PageIndex (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("16be9309-d708-4322-bb1a-b056f58d17ea"))
Breaks : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    BreakPtr Item (
        long Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Break * * prop ) = 0;
};

struct __declspec(uuid("dd947d72-f33c-4198-9bdf-f86181d05e41"))
Editor : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetID))
    _bstr_t ID;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetNextRange))
    RangePtr NextRange;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetID ( );
    _bstr_t GetName ( );
    RangePtr GetRange ( );
    RangePtr GetNextRange ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    HRESULT DeleteAll ( );
    HRESULT SelectAll ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_NextRange (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_DeleteAll ( ) = 0;
      virtual HRESULT __stdcall raw_SelectAll ( ) = 0;
};

struct __declspec(uuid("aed7e08c-14f0-4f33-921d-4c5353137bf6"))
Editors : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    EditorPtr Item (
        VARIANT * Index );
    EditorPtr Add (
        VARIANT * EditorID );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Editor * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT * EditorID,
        /*[out,retval]*/ struct Editor * * prop ) = 0;
};

struct __declspec(uuid("65e515d5-f50b-4951-8f38-fa6ac8707387"))
OMathBreak : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetAlignAt,put=PutAlignAt))
    long AlignAt;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    RangePtr GetRange ( );
    long GetAlignAt ( );
    void PutAlignAt (
        long prop );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_AlignAt (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AlignAt (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("e2e0f3a7-204c-40c5-baa5-290f374fdf5a"))
OMathBreaks : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    OMathBreakPtr Item (
        long Index );
    OMathBreakPtr Add (
        struct Range * Range );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct OMathBreak * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ struct OMathBreak * * prop ) = 0;
};

struct __declspec(uuid("000209c0-0000-0000-c000-000000000046"))
ListFormat : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetListLevelNumber,put=PutListLevelNumber))
    long ListLevelNumber;
    __declspec(property(get=GetList))
    ListPtr List;
    __declspec(property(get=GetListTemplate))
    ListTemplatePtr ListTemplate;
    __declspec(property(get=GetListValue))
    long ListValue;
    __declspec(property(get=GetSingleList))
    VARIANT_BOOL SingleList;
    __declspec(property(get=GetSingleListTemplate))
    VARIANT_BOOL SingleListTemplate;
    __declspec(property(get=GetListType))
    enum WdListType ListType;
    __declspec(property(get=GetListString))
    _bstr_t ListString;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetListPictureBullet))
    InlineShapePtr ListPictureBullet;

    //
    // Wrapper methods for error-handling
    //

    long GetListLevelNumber ( );
    void PutListLevelNumber (
        long prop );
    ListPtr GetList ( );
    ListTemplatePtr GetListTemplate ( );
    long GetListValue ( );
    VARIANT_BOOL GetSingleList ( );
    VARIANT_BOOL GetSingleListTemplate ( );
    enum WdListType GetListType ( );
    _bstr_t GetListString ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    enum WdContinue CanContinuePreviousList (
        struct ListTemplate * ListTemplate );
    HRESULT RemoveNumbers (
        VARIANT * NumberType = &vtMissing );
    HRESULT ConvertNumbersToText (
        VARIANT * NumberType = &vtMissing );
    long CountNumberedItems (
        VARIANT * NumberType = &vtMissing,
        VARIANT * Level = &vtMissing );
    HRESULT ApplyBulletDefaultOld ( );
    HRESULT ApplyNumberDefaultOld ( );
    HRESULT ApplyOutlineNumberDefaultOld ( );
    HRESULT ApplyListTemplateOld (
        struct ListTemplate * ListTemplate,
        VARIANT * ContinuePreviousList = &vtMissing,
        VARIANT * ApplyTo = &vtMissing );
    HRESULT ListOutdent ( );
    HRESULT ListIndent ( );
    HRESULT ApplyBulletDefault (
        VARIANT * DefaultListBehavior = &vtMissing );
    HRESULT ApplyNumberDefault (
        VARIANT * DefaultListBehavior = &vtMissing );
    HRESULT ApplyOutlineNumberDefault (
        VARIANT * DefaultListBehavior = &vtMissing );
    HRESULT ApplyListTemplate (
        struct ListTemplate * ListTemplate,
        VARIANT * ContinuePreviousList = &vtMissing,
        VARIANT * ApplyTo = &vtMissing,
        VARIANT * DefaultListBehavior = &vtMissing );
    InlineShapePtr GetListPictureBullet ( );
    HRESULT ApplyListTemplateWithLevel (
        struct ListTemplate * ListTemplate,
        VARIANT * ContinuePreviousList = &vtMissing,
        VARIANT * ApplyTo = &vtMissing,
        VARIANT * DefaultListBehavior = &vtMissing,
        VARIANT * ApplyLevel = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ListLevelNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ListLevelNumber (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_List (
        /*[out,retval]*/ struct List * * prop ) = 0;
      virtual HRESULT __stdcall get_ListTemplate (
        /*[out,retval]*/ struct ListTemplate * * prop ) = 0;
      virtual HRESULT __stdcall get_ListValue (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_SingleList (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_SingleListTemplate (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_ListType (
        /*[out,retval]*/ enum WdListType * prop ) = 0;
      virtual HRESULT __stdcall get_ListString (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_CanContinuePreviousList (
        /*[in]*/ struct ListTemplate * ListTemplate,
        /*[out,retval]*/ enum WdContinue * prop ) = 0;
      virtual HRESULT __stdcall raw_RemoveNumbers (
        /*[in]*/ VARIANT * NumberType = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_ConvertNumbersToText (
        /*[in]*/ VARIANT * NumberType = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_CountNumberedItems (
        /*[in]*/ VARIANT * NumberType,
        /*[in]*/ VARIANT * Level,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_ApplyBulletDefaultOld ( ) = 0;
      virtual HRESULT __stdcall raw_ApplyNumberDefaultOld ( ) = 0;
      virtual HRESULT __stdcall raw_ApplyOutlineNumberDefaultOld ( ) = 0;
      virtual HRESULT __stdcall raw_ApplyListTemplateOld (
        /*[in]*/ struct ListTemplate * ListTemplate,
        /*[in]*/ VARIANT * ContinuePreviousList = &vtMissing,
        /*[in]*/ VARIANT * ApplyTo = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_ListOutdent ( ) = 0;
      virtual HRESULT __stdcall raw_ListIndent ( ) = 0;
      virtual HRESULT __stdcall raw_ApplyBulletDefault (
        /*[in]*/ VARIANT * DefaultListBehavior = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_ApplyNumberDefault (
        /*[in]*/ VARIANT * DefaultListBehavior = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_ApplyOutlineNumberDefault (
        /*[in]*/ VARIANT * DefaultListBehavior = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_ApplyListTemplate (
        /*[in]*/ struct ListTemplate * ListTemplate,
        /*[in]*/ VARIANT * ContinuePreviousList = &vtMissing,
        /*[in]*/ VARIANT * ApplyTo = &vtMissing,
        /*[in]*/ VARIANT * DefaultListBehavior = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_ListPictureBullet (
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall raw_ApplyListTemplateWithLevel (
        /*[in]*/ struct ListTemplate * ListTemplate,
        /*[in]*/ VARIANT * ContinuePreviousList = &vtMissing,
        /*[in]*/ VARIANT * ApplyTo = &vtMissing,
        /*[in]*/ VARIANT * DefaultListBehavior = &vtMissing,
        /*[in]*/ VARIANT * ApplyLevel = &vtMissing ) = 0;
};

struct __declspec(uuid("0002095a-0000-0000-c000-000000000046"))
Sections : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetFirst))
    SectionPtr First;
    __declspec(property(get=GetLast))
    SectionPtr Last;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetPageSetup,put=PutPageSetup))
    PageSetupPtr PageSetup;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    SectionPtr GetFirst ( );
    SectionPtr GetLast ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    PageSetupPtr GetPageSetup ( );
    void PutPageSetup (
        struct PageSetup * prop );
    SectionPtr Item (
        long Index );
    SectionPtr Add (
        VARIANT * Range = &vtMissing,
        VARIANT * Start = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_First (
        /*[out,retval]*/ struct Section * * prop ) = 0;
      virtual HRESULT __stdcall get_Last (
        /*[out,retval]*/ struct Section * * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_PageSetup (
        /*[out,retval]*/ struct PageSetup * * prop ) = 0;
      virtual HRESULT __stdcall put_PageSetup (
        /*[in]*/ struct PageSetup * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Section * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT * Range,
        /*[in]*/ VARIANT * Start,
        /*[out,retval]*/ struct Section * * prop ) = 0;
};

struct __declspec(uuid("00020959-0000-0000-c000-000000000046"))
Section : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetBorders,put=PutBorders))
    BordersPtr Borders;
    __declspec(property(get=GetPageSetup,put=PutPageSetup))
    PageSetupPtr PageSetup;
    __declspec(property(get=GetHeaders))
    HeadersFootersPtr Headers;
    __declspec(property(get=GetFooters))
    HeadersFootersPtr Footers;
    __declspec(property(get=GetProtectedForForms,put=PutProtectedForForms))
    VARIANT_BOOL ProtectedForForms;
    __declspec(property(get=GetIndex))
    long Index;

    //
    // Wrapper methods for error-handling
    //

    RangePtr GetRange ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    PageSetupPtr GetPageSetup ( );
    void PutPageSetup (
        struct PageSetup * prop );
    HeadersFootersPtr GetHeaders ( );
    HeadersFootersPtr GetFooters ( );
    VARIANT_BOOL GetProtectedForForms ( );
    void PutProtectedForForms (
        VARIANT_BOOL prop );
    long GetIndex ( );
    BordersPtr GetBorders ( );
    void PutBorders (
        struct Borders * prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_PageSetup (
        /*[out,retval]*/ struct PageSetup * * prop ) = 0;
      virtual HRESULT __stdcall put_PageSetup (
        /*[in]*/ struct PageSetup * prop ) = 0;
      virtual HRESULT __stdcall get_Headers (
        /*[out,retval]*/ struct HeadersFooters * * prop ) = 0;
      virtual HRESULT __stdcall get_Footers (
        /*[out,retval]*/ struct HeadersFooters * * prop ) = 0;
      virtual HRESULT __stdcall get_ProtectedForForms (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ProtectedForForms (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Borders (
        /*[out,retval]*/ struct Borders * * prop ) = 0;
      virtual HRESULT __stdcall put_Borders (
        /*[in]*/ struct Borders * prop ) = 0;
};

struct __declspec(uuid("00020951-0000-0000-c000-000000000046"))
Table : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetBorders,put=PutBorders))
    BordersPtr Borders;
    __declspec(property(get=GetApplyStyleHeadingRows,put=PutApplyStyleHeadingRows))
    VARIANT_BOOL ApplyStyleHeadingRows;
    __declspec(property(get=GetApplyStyleLastRow,put=PutApplyStyleLastRow))
    VARIANT_BOOL ApplyStyleLastRow;
    __declspec(property(get=GetApplyStyleFirstColumn,put=PutApplyStyleFirstColumn))
    VARIANT_BOOL ApplyStyleFirstColumn;
    __declspec(property(get=GetApplyStyleLastColumn,put=PutApplyStyleLastColumn))
    VARIANT_BOOL ApplyStyleLastColumn;
    __declspec(property(get=GetApplyStyleRowBands,put=PutApplyStyleRowBands))
    VARIANT_BOOL ApplyStyleRowBands;
    __declspec(property(get=GetApplyStyleColumnBands,put=PutApplyStyleColumnBands))
    VARIANT_BOOL ApplyStyleColumnBands;
    __declspec(property(get=GetColumns))
    ColumnsPtr Columns;
    __declspec(property(get=GetRows))
    RowsPtr Rows;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetShading))
    ShadingPtr Shading;
    __declspec(property(get=GetUniform))
    VARIANT_BOOL Uniform;
    __declspec(property(get=GetAutoFormatType))
    long AutoFormatType;
    __declspec(property(get=GetTables))
    TablesPtr Tables;
    __declspec(property(get=GetNestingLevel))
    long NestingLevel;
    __declspec(property(get=GetAllowPageBreaks,put=PutAllowPageBreaks))
    VARIANT_BOOL AllowPageBreaks;
    __declspec(property(get=GetAllowAutoFit,put=PutAllowAutoFit))
    VARIANT_BOOL AllowAutoFit;
    __declspec(property(get=GetPreferredWidth,put=PutPreferredWidth))
    float PreferredWidth;
    __declspec(property(get=GetPreferredWidthType,put=PutPreferredWidthType))
    enum WdPreferredWidthType PreferredWidthType;
    __declspec(property(get=GetTopPadding,put=PutTopPadding))
    float TopPadding;
    __declspec(property(get=GetBottomPadding,put=PutBottomPadding))
    float BottomPadding;
    __declspec(property(get=GetLeftPadding,put=PutLeftPadding))
    float LeftPadding;
    __declspec(property(get=GetRightPadding,put=PutRightPadding))
    float RightPadding;
    __declspec(property(get=GetSpacing,put=PutSpacing))
    float Spacing;
    __declspec(property(get=GetTableDirection,put=PutTableDirection))
    enum WdTableDirection TableDirection;
    __declspec(property(get=GetID,put=PutID))
    _bstr_t ID;

    //
    // Wrapper methods for error-handling
    //

    RangePtr GetRange ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    ColumnsPtr GetColumns ( );
    RowsPtr GetRows ( );
    BordersPtr GetBorders ( );
    void PutBorders (
        struct Borders * prop );
    ShadingPtr GetShading ( );
    VARIANT_BOOL GetUniform ( );
    long GetAutoFormatType ( );
    HRESULT Select ( );
    HRESULT Delete ( );
    HRESULT SortOld (
        VARIANT * ExcludeHeader = &vtMissing,
        VARIANT * FieldNumber = &vtMissing,
        VARIANT * SortFieldType = &vtMissing,
        VARIANT * SortOrder = &vtMissing,
        VARIANT * FieldNumber2 = &vtMissing,
        VARIANT * SortFieldType2 = &vtMissing,
        VARIANT * SortOrder2 = &vtMissing,
        VARIANT * FieldNumber3 = &vtMissing,
        VARIANT * SortFieldType3 = &vtMissing,
        VARIANT * SortOrder3 = &vtMissing,
        VARIANT * CaseSensitive = &vtMissing,
        VARIANT * LanguageID = &vtMissing );
    HRESULT SortAscending ( );
    HRESULT SortDescending ( );
    HRESULT AutoFormat (
        VARIANT * Format = &vtMissing,
        VARIANT * ApplyBorders = &vtMissing,
        VARIANT * ApplyShading = &vtMissing,
        VARIANT * ApplyFont = &vtMissing,
        VARIANT * ApplyColor = &vtMissing,
        VARIANT * ApplyHeadingRows = &vtMissing,
        VARIANT * ApplyLastRow = &vtMissing,
        VARIANT * ApplyFirstColumn = &vtMissing,
        VARIANT * ApplyLastColumn = &vtMissing,
        VARIANT * AutoFit = &vtMissing );
    HRESULT UpdateAutoFormat ( );
    RangePtr ConvertToTextOld (
        VARIANT * Separator = &vtMissing );
    CellPtr Cell (
        long Row,
        long Column );
    TablePtr Split (
        VARIANT * BeforeRow );
    RangePtr ConvertToText (
        VARIANT * Separator = &vtMissing,
        VARIANT * NestedTables = &vtMissing );
    HRESULT AutoFitBehavior (
        enum WdAutoFitBehavior Behavior );
    HRESULT Sort (
        VARIANT * ExcludeHeader = &vtMissing,
        VARIANT * FieldNumber = &vtMissing,
        VARIANT * SortFieldType = &vtMissing,
        VARIANT * SortOrder = &vtMissing,
        VARIANT * FieldNumber2 = &vtMissing,
        VARIANT * SortFieldType2 = &vtMissing,
        VARIANT * SortOrder2 = &vtMissing,
        VARIANT * FieldNumber3 = &vtMissing,
        VARIANT * SortFieldType3 = &vtMissing,
        VARIANT * SortOrder3 = &vtMissing,
        VARIANT * CaseSensitive = &vtMissing,
        VARIANT * BidiSort = &vtMissing,
        VARIANT * IgnoreThe = &vtMissing,
        VARIANT * IgnoreKashida = &vtMissing,
        VARIANT * IgnoreDiacritics = &vtMissing,
        VARIANT * IgnoreHe = &vtMissing,
        VARIANT * LanguageID = &vtMissing );
    TablesPtr GetTables ( );
    long GetNestingLevel ( );
    VARIANT_BOOL GetAllowPageBreaks ( );
    void PutAllowPageBreaks (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAllowAutoFit ( );
    void PutAllowAutoFit (
        VARIANT_BOOL prop );
    float GetPreferredWidth ( );
    void PutPreferredWidth (
        float prop );
    enum WdPreferredWidthType GetPreferredWidthType ( );
    void PutPreferredWidthType (
        enum WdPreferredWidthType prop );
    float GetTopPadding ( );
    void PutTopPadding (
        float prop );
    float GetBottomPadding ( );
    void PutBottomPadding (
        float prop );
    float GetLeftPadding ( );
    void PutLeftPadding (
        float prop );
    float GetRightPadding ( );
    void PutRightPadding (
        float prop );
    float GetSpacing ( );
    void PutSpacing (
        float prop );
    enum WdTableDirection GetTableDirection ( );
    void PutTableDirection (
        enum WdTableDirection prop );
    _bstr_t GetID ( );
    void PutID (
        _bstr_t prop );
    _variant_t GetStyle ( );
    void PutStyle (
        VARIANT * prop );
    VARIANT_BOOL GetApplyStyleHeadingRows ( );
    void PutApplyStyleHeadingRows (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetApplyStyleLastRow ( );
    void PutApplyStyleLastRow (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetApplyStyleFirstColumn ( );
    void PutApplyStyleFirstColumn (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetApplyStyleLastColumn ( );
    void PutApplyStyleLastColumn (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetApplyStyleRowBands ( );
    void PutApplyStyleRowBands (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetApplyStyleColumnBands ( );
    void PutApplyStyleColumnBands (
        VARIANT_BOOL prop );
    HRESULT ApplyStyleDirectFormatting (
        _bstr_t StyleName );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Columns (
        /*[out,retval]*/ struct Columns * * prop ) = 0;
      virtual HRESULT __stdcall get_Rows (
        /*[out,retval]*/ struct Rows * * prop ) = 0;
      virtual HRESULT __stdcall get_Borders (
        /*[out,retval]*/ struct Borders * * prop ) = 0;
      virtual HRESULT __stdcall put_Borders (
        /*[in]*/ struct Borders * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_Uniform (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatType (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_SortOld (
        /*[in]*/ VARIANT * ExcludeHeader = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType = &vtMissing,
        /*[in]*/ VARIANT * SortOrder = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber2 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType2 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder2 = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber3 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType3 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder3 = &vtMissing,
        /*[in]*/ VARIANT * CaseSensitive = &vtMissing,
        /*[in]*/ VARIANT * LanguageID = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_SortAscending ( ) = 0;
      virtual HRESULT __stdcall raw_SortDescending ( ) = 0;
      virtual HRESULT __stdcall raw_AutoFormat (
        /*[in]*/ VARIANT * Format = &vtMissing,
        /*[in]*/ VARIANT * ApplyBorders = &vtMissing,
        /*[in]*/ VARIANT * ApplyShading = &vtMissing,
        /*[in]*/ VARIANT * ApplyFont = &vtMissing,
        /*[in]*/ VARIANT * ApplyColor = &vtMissing,
        /*[in]*/ VARIANT * ApplyHeadingRows = &vtMissing,
        /*[in]*/ VARIANT * ApplyLastRow = &vtMissing,
        /*[in]*/ VARIANT * ApplyFirstColumn = &vtMissing,
        /*[in]*/ VARIANT * ApplyLastColumn = &vtMissing,
        /*[in]*/ VARIANT * AutoFit = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_UpdateAutoFormat ( ) = 0;
      virtual HRESULT __stdcall raw_ConvertToTextOld (
        /*[in]*/ VARIANT * Separator,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall raw_Cell (
        /*[in]*/ long Row,
        /*[in]*/ long Column,
        /*[out,retval]*/ struct Cell * * prop ) = 0;
      virtual HRESULT __stdcall raw_Split (
        /*[in]*/ VARIANT * BeforeRow,
        /*[out,retval]*/ struct Table * * prop ) = 0;
      virtual HRESULT __stdcall raw_ConvertToText (
        /*[in]*/ VARIANT * Separator,
        /*[in]*/ VARIANT * NestedTables,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall raw_AutoFitBehavior (
        /*[in]*/ enum WdAutoFitBehavior Behavior ) = 0;
      virtual HRESULT __stdcall raw_Sort (
        /*[in]*/ VARIANT * ExcludeHeader = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType = &vtMissing,
        /*[in]*/ VARIANT * SortOrder = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber2 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType2 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder2 = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber3 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType3 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder3 = &vtMissing,
        /*[in]*/ VARIANT * CaseSensitive = &vtMissing,
        /*[in]*/ VARIANT * BidiSort = &vtMissing,
        /*[in]*/ VARIANT * IgnoreThe = &vtMissing,
        /*[in]*/ VARIANT * IgnoreKashida = &vtMissing,
        /*[in]*/ VARIANT * IgnoreDiacritics = &vtMissing,
        /*[in]*/ VARIANT * IgnoreHe = &vtMissing,
        /*[in]*/ VARIANT * LanguageID = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_Tables (
        /*[out,retval]*/ struct Tables * * prop ) = 0;
      virtual HRESULT __stdcall get_NestingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_AllowPageBreaks (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowPageBreaks (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AllowAutoFit (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AllowAutoFit (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PreferredWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_PreferredWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_PreferredWidthType (
        /*[out,retval]*/ enum WdPreferredWidthType * prop ) = 0;
      virtual HRESULT __stdcall put_PreferredWidthType (
        /*[in]*/ enum WdPreferredWidthType prop ) = 0;
      virtual HRESULT __stdcall get_TopPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TopPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_BottomPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_BottomPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LeftPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RightPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RightPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Spacing (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Spacing (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_TableDirection (
        /*[out,retval]*/ enum WdTableDirection * prop ) = 0;
      virtual HRESULT __stdcall put_TableDirection (
        /*[in]*/ enum WdTableDirection prop ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ID (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_ApplyStyleHeadingRows (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ApplyStyleHeadingRows (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ApplyStyleLastRow (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ApplyStyleLastRow (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ApplyStyleFirstColumn (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ApplyStyleFirstColumn (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ApplyStyleLastColumn (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ApplyStyleLastColumn (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ApplyStyleRowBands (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ApplyStyleRowBands (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ApplyStyleColumnBands (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ApplyStyleColumnBands (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall raw_ApplyStyleDirectFormatting (
        /*[in]*/ BSTR StyleName ) = 0;
};

struct __declspec(uuid("0002094d-0000-0000-c000-000000000046"))
Tables : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetNestingLevel))
    long NestingLevel;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    TablePtr Item (
        long Index );
    TablePtr AddOld (
        struct Range * Range,
        long NumRows,
        long NumColumns );
    TablePtr Add (
        struct Range * Range,
        long NumRows,
        long NumColumns,
        VARIANT * DefaultTableBehavior = &vtMissing,
        VARIANT * AutoFitBehavior = &vtMissing );
    long GetNestingLevel ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Table * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddOld (
        /*[in]*/ struct Range * Range,
        /*[in]*/ long NumRows,
        /*[in]*/ long NumColumns,
        /*[out,retval]*/ struct Table * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct Range * Range,
        /*[in]*/ long NumRows,
        /*[in]*/ long NumColumns,
        /*[in]*/ VARIANT * DefaultTableBehavior,
        /*[in]*/ VARIANT * AutoFitBehavior,
        /*[out,retval]*/ struct Table * * prop ) = 0;
      virtual HRESULT __stdcall get_NestingLevel (
        /*[out,retval]*/ long * prop ) = 0;
};

struct __declspec(uuid("00020950-0000-0000-c000-000000000046"))
Row : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetAllowBreakAcrossPages,put=PutAllowBreakAcrossPages))
    long AllowBreakAcrossPages;
    __declspec(property(get=GetAlignment,put=PutAlignment))
    enum WdRowAlignment Alignment;
    __declspec(property(get=GetHeadingFormat,put=PutHeadingFormat))
    long HeadingFormat;
    __declspec(property(get=GetSpaceBetweenColumns,put=PutSpaceBetweenColumns))
    float SpaceBetweenColumns;
    __declspec(property(get=GetHeight,put=PutHeight))
    float Height;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetHeightRule,put=PutHeightRule))
    enum WdRowHeightRule HeightRule;
    __declspec(property(get=GetLeftIndent,put=PutLeftIndent))
    float LeftIndent;
    __declspec(property(get=GetIsLast))
    VARIANT_BOOL IsLast;
    __declspec(property(get=GetIsFirst))
    VARIANT_BOOL IsFirst;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetCells))
    CellsPtr Cells;
    __declspec(property(get=GetBorders,put=PutBorders))
    BordersPtr Borders;
    __declspec(property(get=GetShading))
    ShadingPtr Shading;
    __declspec(property(get=GetNext))
    RowPtr Next;
    __declspec(property(get=GetPrevious))
    RowPtr Previous;
    __declspec(property(get=GetNestingLevel))
    long NestingLevel;
    __declspec(property(get=GetID,put=PutID))
    _bstr_t ID;

    //
    // Wrapper methods for error-handling
    //

    RangePtr GetRange ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetAllowBreakAcrossPages ( );
    void PutAllowBreakAcrossPages (
        long prop );
    enum WdRowAlignment GetAlignment ( );
    void PutAlignment (
        enum WdRowAlignment prop );
    long GetHeadingFormat ( );
    void PutHeadingFormat (
        long prop );
    float GetSpaceBetweenColumns ( );
    void PutSpaceBetweenColumns (
        float prop );
    float GetHeight ( );
    void PutHeight (
        float prop );
    enum WdRowHeightRule GetHeightRule ( );
    void PutHeightRule (
        enum WdRowHeightRule prop );
    float GetLeftIndent ( );
    void PutLeftIndent (
        float prop );
    VARIANT_BOOL GetIsLast ( );
    VARIANT_BOOL GetIsFirst ( );
    long GetIndex ( );
    CellsPtr GetCells ( );
    BordersPtr GetBorders ( );
    void PutBorders (
        struct Borders * prop );
    ShadingPtr GetShading ( );
    RowPtr GetNext ( );
    RowPtr GetPrevious ( );
    HRESULT Select ( );
    HRESULT Delete ( );
    HRESULT SetLeftIndent (
        float LeftIndent,
        enum WdRulerStyle RulerStyle );
    HRESULT SetHeight (
        float RowHeight,
        enum WdRowHeightRule HeightRule );
    RangePtr ConvertToTextOld (
        VARIANT * Separator = &vtMissing );
    RangePtr ConvertToText (
        VARIANT * Separator = &vtMissing,
        VARIANT * NestedTables = &vtMissing );
    long GetNestingLevel ( );
    _bstr_t GetID ( );
    void PutID (
        _bstr_t prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_AllowBreakAcrossPages (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AllowBreakAcrossPages (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum WdRowAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum WdRowAlignment prop ) = 0;
      virtual HRESULT __stdcall get_HeadingFormat (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_HeadingFormat (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_SpaceBetweenColumns (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceBetweenColumns (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HeightRule (
        /*[out,retval]*/ enum WdRowHeightRule * prop ) = 0;
      virtual HRESULT __stdcall put_HeightRule (
        /*[in]*/ enum WdRowHeightRule prop ) = 0;
      virtual HRESULT __stdcall get_LeftIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_IsLast (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_IsFirst (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Cells (
        /*[out,retval]*/ struct Cells * * prop ) = 0;
      virtual HRESULT __stdcall get_Borders (
        /*[out,retval]*/ struct Borders * * prop ) = 0;
      virtual HRESULT __stdcall put_Borders (
        /*[in]*/ struct Borders * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_Next (
        /*[out,retval]*/ struct Row * * prop ) = 0;
      virtual HRESULT __stdcall get_Previous (
        /*[out,retval]*/ struct Row * * prop ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_SetLeftIndent (
        /*[in]*/ float LeftIndent,
        /*[in]*/ enum WdRulerStyle RulerStyle ) = 0;
      virtual HRESULT __stdcall raw_SetHeight (
        /*[in]*/ float RowHeight,
        /*[in]*/ enum WdRowHeightRule HeightRule ) = 0;
      virtual HRESULT __stdcall raw_ConvertToTextOld (
        /*[in]*/ VARIANT * Separator,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall raw_ConvertToText (
        /*[in]*/ VARIANT * Separator,
        /*[in]*/ VARIANT * NestedTables,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_NestingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ID (
        /*[in]*/ BSTR prop ) = 0;
};

struct __declspec(uuid("0002094c-0000-0000-c000-000000000046"))
Rows : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorders,put=PutBorders))
    BordersPtr Borders;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetAllowBreakAcrossPages,put=PutAllowBreakAcrossPages))
    long AllowBreakAcrossPages;
    __declspec(property(get=GetAlignment,put=PutAlignment))
    enum WdRowAlignment Alignment;
    __declspec(property(get=GetHeadingFormat,put=PutHeadingFormat))
    long HeadingFormat;
    __declspec(property(get=GetSpaceBetweenColumns,put=PutSpaceBetweenColumns))
    float SpaceBetweenColumns;
    __declspec(property(get=GetHeight,put=PutHeight))
    float Height;
    __declspec(property(get=GetHeightRule,put=PutHeightRule))
    enum WdRowHeightRule HeightRule;
    __declspec(property(get=GetLeftIndent,put=PutLeftIndent))
    float LeftIndent;
    __declspec(property(get=GetFirst))
    RowPtr First;
    __declspec(property(get=GetLast))
    RowPtr Last;
    __declspec(property(get=GetWrapAroundText,put=PutWrapAroundText))
    long WrapAroundText;
    __declspec(property(get=GetDistanceTop,put=PutDistanceTop))
    float DistanceTop;
    __declspec(property(get=GetShading))
    ShadingPtr Shading;
    __declspec(property(get=GetDistanceBottom,put=PutDistanceBottom))
    float DistanceBottom;
    __declspec(property(get=GetHorizontalPosition,put=PutHorizontalPosition))
    float HorizontalPosition;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;
    __declspec(property(get=GetVerticalPosition,put=PutVerticalPosition))
    float VerticalPosition;
    __declspec(property(get=GetRelativeHorizontalPosition,put=PutRelativeHorizontalPosition))
    enum WdRelativeHorizontalPosition RelativeHorizontalPosition;
    __declspec(property(get=GetDistanceLeft,put=PutDistanceLeft))
    float DistanceLeft;
    __declspec(property(get=GetDistanceRight,put=PutDistanceRight))
    float DistanceRight;
    __declspec(property(get=GetRelativeVerticalPosition,put=PutRelativeVerticalPosition))
    enum WdRelativeVerticalPosition RelativeVerticalPosition;
    __declspec(property(get=GetAllowOverlap,put=PutAllowOverlap))
    long AllowOverlap;
    __declspec(property(get=GetNestingLevel))
    long NestingLevel;
    __declspec(property(get=GetTableDirection,put=PutTableDirection))
    enum WdTableDirection TableDirection;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    long GetAllowBreakAcrossPages ( );
    void PutAllowBreakAcrossPages (
        long prop );
    enum WdRowAlignment GetAlignment ( );
    void PutAlignment (
        enum WdRowAlignment prop );
    long GetHeadingFormat ( );
    void PutHeadingFormat (
        long prop );
    float GetSpaceBetweenColumns ( );
    void PutSpaceBetweenColumns (
        float prop );
    float GetHeight ( );
    void PutHeight (
        float prop );
    enum WdRowHeightRule GetHeightRule ( );
    void PutHeightRule (
        enum WdRowHeightRule prop );
    float GetLeftIndent ( );
    void PutLeftIndent (
        float prop );
    RowPtr GetFirst ( );
    RowPtr GetLast ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    BordersPtr GetBorders ( );
    void PutBorders (
        struct Borders * prop );
    ShadingPtr GetShading ( );
    RowPtr Item (
        long Index );
    RowPtr Add (
        VARIANT * BeforeRow = &vtMissing );
    HRESULT Select ( );
    HRESULT Delete ( );
    HRESULT SetLeftIndent (
        float LeftIndent,
        enum WdRulerStyle RulerStyle );
    HRESULT SetHeight (
        float RowHeight,
        enum WdRowHeightRule HeightRule );
    RangePtr ConvertToTextOld (
        VARIANT * Separator = &vtMissing );
    HRESULT DistributeHeight ( );
    RangePtr ConvertToText (
        VARIANT * Separator = &vtMissing,
        VARIANT * NestedTables = &vtMissing );
    long GetWrapAroundText ( );
    void PutWrapAroundText (
        long prop );
    float GetDistanceTop ( );
    void PutDistanceTop (
        float prop );
    float GetDistanceBottom ( );
    void PutDistanceBottom (
        float prop );
    float GetDistanceLeft ( );
    void PutDistanceLeft (
        float prop );
    float GetDistanceRight ( );
    void PutDistanceRight (
        float prop );
    float GetHorizontalPosition ( );
    void PutHorizontalPosition (
        float prop );
    float GetVerticalPosition ( );
    void PutVerticalPosition (
        float prop );
    enum WdRelativeHorizontalPosition GetRelativeHorizontalPosition ( );
    void PutRelativeHorizontalPosition (
        enum WdRelativeHorizontalPosition prop );
    enum WdRelativeVerticalPosition GetRelativeVerticalPosition ( );
    void PutRelativeVerticalPosition (
        enum WdRelativeVerticalPosition prop );
    long GetAllowOverlap ( );
    void PutAllowOverlap (
        long prop );
    long GetNestingLevel ( );
    enum WdTableDirection GetTableDirection ( );
    void PutTableDirection (
        enum WdTableDirection prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_AllowBreakAcrossPages (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AllowBreakAcrossPages (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum WdRowAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum WdRowAlignment prop ) = 0;
      virtual HRESULT __stdcall get_HeadingFormat (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_HeadingFormat (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_SpaceBetweenColumns (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceBetweenColumns (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HeightRule (
        /*[out,retval]*/ enum WdRowHeightRule * prop ) = 0;
      virtual HRESULT __stdcall put_HeightRule (
        /*[in]*/ enum WdRowHeightRule prop ) = 0;
      virtual HRESULT __stdcall get_LeftIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_First (
        /*[out,retval]*/ struct Row * * prop ) = 0;
      virtual HRESULT __stdcall get_Last (
        /*[out,retval]*/ struct Row * * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Borders (
        /*[out,retval]*/ struct Borders * * prop ) = 0;
      virtual HRESULT __stdcall put_Borders (
        /*[in]*/ struct Borders * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Row * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT * BeforeRow,
        /*[out,retval]*/ struct Row * * prop ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_SetLeftIndent (
        /*[in]*/ float LeftIndent,
        /*[in]*/ enum WdRulerStyle RulerStyle ) = 0;
      virtual HRESULT __stdcall raw_SetHeight (
        /*[in]*/ float RowHeight,
        /*[in]*/ enum WdRowHeightRule HeightRule ) = 0;
      virtual HRESULT __stdcall raw_ConvertToTextOld (
        /*[in]*/ VARIANT * Separator,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall raw_DistributeHeight ( ) = 0;
      virtual HRESULT __stdcall raw_ConvertToText (
        /*[in]*/ VARIANT * Separator,
        /*[in]*/ VARIANT * NestedTables,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_WrapAroundText (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_WrapAroundText (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_DistanceTop (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceTop (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_DistanceBottom (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceBottom (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_DistanceLeft (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceLeft (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_DistanceRight (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DistanceRight (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalPosition (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_HorizontalPosition (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_VerticalPosition (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_VerticalPosition (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RelativeHorizontalPosition (
        /*[out,retval]*/ enum WdRelativeHorizontalPosition * prop ) = 0;
      virtual HRESULT __stdcall put_RelativeHorizontalPosition (
        /*[in]*/ enum WdRelativeHorizontalPosition prop ) = 0;
      virtual HRESULT __stdcall get_RelativeVerticalPosition (
        /*[out,retval]*/ enum WdRelativeVerticalPosition * prop ) = 0;
      virtual HRESULT __stdcall put_RelativeVerticalPosition (
        /*[in]*/ enum WdRelativeVerticalPosition prop ) = 0;
      virtual HRESULT __stdcall get_AllowOverlap (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AllowOverlap (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_NestingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_TableDirection (
        /*[out,retval]*/ enum WdTableDirection * prop ) = 0;
      virtual HRESULT __stdcall put_TableDirection (
        /*[in]*/ enum WdTableDirection prop ) = 0;
};

struct __declspec(uuid("0002094f-0000-0000-c000-000000000046"))
Column : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetWidth,put=PutWidth))
    float Width;
    __declspec(property(get=GetIsFirst))
    VARIANT_BOOL IsFirst;
    __declspec(property(get=GetIsLast))
    VARIANT_BOOL IsLast;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetCells))
    CellsPtr Cells;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetShading))
    ShadingPtr Shading;
    __declspec(property(get=GetBorders,put=PutBorders))
    BordersPtr Borders;
    __declspec(property(get=GetNext))
    ColumnPtr Next;
    __declspec(property(get=GetPrevious))
    ColumnPtr Previous;
    __declspec(property(get=GetNestingLevel))
    long NestingLevel;
    __declspec(property(get=GetPreferredWidth,put=PutPreferredWidth))
    float PreferredWidth;
    __declspec(property(get=GetPreferredWidthType,put=PutPreferredWidthType))
    enum WdPreferredWidthType PreferredWidthType;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    float GetWidth ( );
    void PutWidth (
        float prop );
    VARIANT_BOOL GetIsFirst ( );
    VARIANT_BOOL GetIsLast ( );
    long GetIndex ( );
    CellsPtr GetCells ( );
    BordersPtr GetBorders ( );
    void PutBorders (
        struct Borders * prop );
    ShadingPtr GetShading ( );
    ColumnPtr GetNext ( );
    ColumnPtr GetPrevious ( );
    HRESULT Select ( );
    HRESULT Delete ( );
    HRESULT SetWidth (
        float ColumnWidth,
        enum WdRulerStyle RulerStyle );
    HRESULT AutoFit ( );
    HRESULT SortOld (
        VARIANT * ExcludeHeader = &vtMissing,
        VARIANT * SortFieldType = &vtMissing,
        VARIANT * SortOrder = &vtMissing,
        VARIANT * CaseSensitive = &vtMissing,
        VARIANT * LanguageID = &vtMissing );
    HRESULT Sort (
        VARIANT * ExcludeHeader = &vtMissing,
        VARIANT * SortFieldType = &vtMissing,
        VARIANT * SortOrder = &vtMissing,
        VARIANT * CaseSensitive = &vtMissing,
        VARIANT * BidiSort = &vtMissing,
        VARIANT * IgnoreThe = &vtMissing,
        VARIANT * IgnoreKashida = &vtMissing,
        VARIANT * IgnoreDiacritics = &vtMissing,
        VARIANT * IgnoreHe = &vtMissing,
        VARIANT * LanguageID = &vtMissing );
    long GetNestingLevel ( );
    float GetPreferredWidth ( );
    void PutPreferredWidth (
        float prop );
    enum WdPreferredWidthType GetPreferredWidthType ( );
    void PutPreferredWidthType (
        enum WdPreferredWidthType prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_IsFirst (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_IsLast (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Cells (
        /*[out,retval]*/ struct Cells * * prop ) = 0;
      virtual HRESULT __stdcall get_Borders (
        /*[out,retval]*/ struct Borders * * prop ) = 0;
      virtual HRESULT __stdcall put_Borders (
        /*[in]*/ struct Borders * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_Next (
        /*[out,retval]*/ struct Column * * prop ) = 0;
      virtual HRESULT __stdcall get_Previous (
        /*[out,retval]*/ struct Column * * prop ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_SetWidth (
        /*[in]*/ float ColumnWidth,
        /*[in]*/ enum WdRulerStyle RulerStyle ) = 0;
      virtual HRESULT __stdcall raw_AutoFit ( ) = 0;
      virtual HRESULT __stdcall raw_SortOld (
        /*[in]*/ VARIANT * ExcludeHeader = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType = &vtMissing,
        /*[in]*/ VARIANT * SortOrder = &vtMissing,
        /*[in]*/ VARIANT * CaseSensitive = &vtMissing,
        /*[in]*/ VARIANT * LanguageID = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Sort (
        /*[in]*/ VARIANT * ExcludeHeader = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType = &vtMissing,
        /*[in]*/ VARIANT * SortOrder = &vtMissing,
        /*[in]*/ VARIANT * CaseSensitive = &vtMissing,
        /*[in]*/ VARIANT * BidiSort = &vtMissing,
        /*[in]*/ VARIANT * IgnoreThe = &vtMissing,
        /*[in]*/ VARIANT * IgnoreKashida = &vtMissing,
        /*[in]*/ VARIANT * IgnoreDiacritics = &vtMissing,
        /*[in]*/ VARIANT * IgnoreHe = &vtMissing,
        /*[in]*/ VARIANT * LanguageID = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_NestingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_PreferredWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_PreferredWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_PreferredWidthType (
        /*[out,retval]*/ enum WdPreferredWidthType * prop ) = 0;
      virtual HRESULT __stdcall put_PreferredWidthType (
        /*[in]*/ enum WdPreferredWidthType prop ) = 0;
};

struct __declspec(uuid("0002094e-0000-0000-c000-000000000046"))
Cell : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetBorders,put=PutBorders))
    BordersPtr Borders;
    __declspec(property(get=GetRowIndex))
    long RowIndex;
    __declspec(property(get=GetColumnIndex))
    long ColumnIndex;
    __declspec(property(get=GetWidth,put=PutWidth))
    float Width;
    __declspec(property(get=GetHeight,put=PutHeight))
    float Height;
    __declspec(property(get=GetHeightRule,put=PutHeightRule))
    enum WdRowHeightRule HeightRule;
    __declspec(property(get=GetVerticalAlignment,put=PutVerticalAlignment))
    enum WdCellVerticalAlignment VerticalAlignment;
    __declspec(property(get=GetColumn))
    ColumnPtr Column;
    __declspec(property(get=GetRow))
    RowPtr Row;
    __declspec(property(get=GetNext))
    CellPtr Next;
    __declspec(property(get=GetPrevious))
    CellPtr Previous;
    __declspec(property(get=GetShading))
    ShadingPtr Shading;
    __declspec(property(get=GetTables))
    TablesPtr Tables;
    __declspec(property(get=GetNestingLevel))
    long NestingLevel;
    __declspec(property(get=GetWordWrap,put=PutWordWrap))
    VARIANT_BOOL WordWrap;
    __declspec(property(get=GetPreferredWidth,put=PutPreferredWidth))
    float PreferredWidth;
    __declspec(property(get=GetFitText,put=PutFitText))
    VARIANT_BOOL FitText;
    __declspec(property(get=GetTopPadding,put=PutTopPadding))
    float TopPadding;
    __declspec(property(get=GetBottomPadding,put=PutBottomPadding))
    float BottomPadding;
    __declspec(property(get=GetLeftPadding,put=PutLeftPadding))
    float LeftPadding;
    __declspec(property(get=GetRightPadding,put=PutRightPadding))
    float RightPadding;
    __declspec(property(get=GetID,put=PutID))
    _bstr_t ID;
    __declspec(property(get=GetPreferredWidthType,put=PutPreferredWidthType))
    enum WdPreferredWidthType PreferredWidthType;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    RangePtr GetRange ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetRowIndex ( );
    long GetColumnIndex ( );
    float GetWidth ( );
    void PutWidth (
        float prop );
    float GetHeight ( );
    void PutHeight (
        float prop );
    enum WdRowHeightRule GetHeightRule ( );
    void PutHeightRule (
        enum WdRowHeightRule prop );
    enum WdCellVerticalAlignment GetVerticalAlignment ( );
    void PutVerticalAlignment (
        enum WdCellVerticalAlignment prop );
    ColumnPtr GetColumn ( );
    RowPtr GetRow ( );
    CellPtr GetNext ( );
    CellPtr GetPrevious ( );
    ShadingPtr GetShading ( );
    BordersPtr GetBorders ( );
    void PutBorders (
        struct Borders * prop );
    HRESULT Select ( );
    HRESULT Delete (
        VARIANT * ShiftCells = &vtMissing );
    HRESULT Formula (
        VARIANT * Formula = &vtMissing,
        VARIANT * NumFormat = &vtMissing );
    HRESULT SetWidth (
        float ColumnWidth,
        enum WdRulerStyle RulerStyle );
    HRESULT SetHeight (
        VARIANT * RowHeight,
        enum WdRowHeightRule HeightRule );
    HRESULT Merge (
        struct Cell * MergeTo );
    HRESULT Split (
        VARIANT * NumRows = &vtMissing,
        VARIANT * NumColumns = &vtMissing );
    HRESULT AutoSum ( );
    TablesPtr GetTables ( );
    long GetNestingLevel ( );
    VARIANT_BOOL GetWordWrap ( );
    void PutWordWrap (
        VARIANT_BOOL prop );
    float GetPreferredWidth ( );
    void PutPreferredWidth (
        float prop );
    VARIANT_BOOL GetFitText ( );
    void PutFitText (
        VARIANT_BOOL prop );
    float GetTopPadding ( );
    void PutTopPadding (
        float prop );
    float GetBottomPadding ( );
    void PutBottomPadding (
        float prop );
    float GetLeftPadding ( );
    void PutLeftPadding (
        float prop );
    float GetRightPadding ( );
    void PutRightPadding (
        float prop );
    _bstr_t GetID ( );
    void PutID (
        _bstr_t prop );
    enum WdPreferredWidthType GetPreferredWidthType ( );
    void PutPreferredWidthType (
        enum WdPreferredWidthType prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_RowIndex (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_ColumnIndex (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HeightRule (
        /*[out,retval]*/ enum WdRowHeightRule * prop ) = 0;
      virtual HRESULT __stdcall put_HeightRule (
        /*[in]*/ enum WdRowHeightRule prop ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ enum WdCellVerticalAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ enum WdCellVerticalAlignment prop ) = 0;
      virtual HRESULT __stdcall get_Column (
        /*[out,retval]*/ struct Column * * prop ) = 0;
      virtual HRESULT __stdcall get_Row (
        /*[out,retval]*/ struct Row * * prop ) = 0;
      virtual HRESULT __stdcall get_Next (
        /*[out,retval]*/ struct Cell * * prop ) = 0;
      virtual HRESULT __stdcall get_Previous (
        /*[out,retval]*/ struct Cell * * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_Borders (
        /*[out,retval]*/ struct Borders * * prop ) = 0;
      virtual HRESULT __stdcall put_Borders (
        /*[in]*/ struct Borders * prop ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
      virtual HRESULT __stdcall raw_Delete (
        /*[in]*/ VARIANT * ShiftCells = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Formula (
        /*[in]*/ VARIANT * Formula = &vtMissing,
        /*[in]*/ VARIANT * NumFormat = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_SetWidth (
        /*[in]*/ float ColumnWidth,
        /*[in]*/ enum WdRulerStyle RulerStyle ) = 0;
      virtual HRESULT __stdcall raw_SetHeight (
        /*[in]*/ VARIANT * RowHeight,
        /*[in]*/ enum WdRowHeightRule HeightRule ) = 0;
      virtual HRESULT __stdcall raw_Merge (
        /*[in]*/ struct Cell * MergeTo ) = 0;
      virtual HRESULT __stdcall raw_Split (
        /*[in]*/ VARIANT * NumRows = &vtMissing,
        /*[in]*/ VARIANT * NumColumns = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_AutoSum ( ) = 0;
      virtual HRESULT __stdcall get_Tables (
        /*[out,retval]*/ struct Tables * * prop ) = 0;
      virtual HRESULT __stdcall get_NestingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_WordWrap (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_WordWrap (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PreferredWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_PreferredWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_FitText (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_FitText (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_TopPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TopPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_BottomPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_BottomPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LeftPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RightPadding (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RightPadding (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ID (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_PreferredWidthType (
        /*[out,retval]*/ enum WdPreferredWidthType * prop ) = 0;
      virtual HRESULT __stdcall put_PreferredWidthType (
        /*[in]*/ enum WdPreferredWidthType prop ) = 0;
};

struct __declspec(uuid("0002094b-0000-0000-c000-000000000046"))
Columns : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetWidth,put=PutWidth))
    float Width;
    __declspec(property(get=GetFirst))
    ColumnPtr First;
    __declspec(property(get=GetLast))
    ColumnPtr Last;
    __declspec(property(get=GetShading))
    ShadingPtr Shading;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetNestingLevel))
    long NestingLevel;
    __declspec(property(get=GetBorders,put=PutBorders))
    BordersPtr Borders;
    __declspec(property(get=GetPreferredWidth,put=PutPreferredWidth))
    float PreferredWidth;
    __declspec(property(get=GetPreferredWidthType,put=PutPreferredWidthType))
    enum WdPreferredWidthType PreferredWidthType;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    ColumnPtr GetFirst ( );
    ColumnPtr GetLast ( );
    float GetWidth ( );
    void PutWidth (
        float prop );
    BordersPtr GetBorders ( );
    void PutBorders (
        struct Borders * prop );
    ShadingPtr GetShading ( );
    ColumnPtr Item (
        long Index );
    ColumnPtr Add (
        VARIANT * BeforeColumn = &vtMissing );
    HRESULT Select ( );
    HRESULT Delete ( );
    HRESULT SetWidth (
        float ColumnWidth,
        enum WdRulerStyle RulerStyle );
    HRESULT AutoFit ( );
    HRESULT DistributeWidth ( );
    long GetNestingLevel ( );
    float GetPreferredWidth ( );
    void PutPreferredWidth (
        float prop );
    enum WdPreferredWidthType GetPreferredWidthType ( );
    void PutPreferredWidthType (
        enum WdPreferredWidthType prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_First (
        /*[out,retval]*/ struct Column * * prop ) = 0;
      virtual HRESULT __stdcall get_Last (
        /*[out,retval]*/ struct Column * * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Borders (
        /*[out,retval]*/ struct Borders * * prop ) = 0;
      virtual HRESULT __stdcall put_Borders (
        /*[in]*/ struct Borders * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Column * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT * BeforeColumn,
        /*[out,retval]*/ struct Column * * prop ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_SetWidth (
        /*[in]*/ float ColumnWidth,
        /*[in]*/ enum WdRulerStyle RulerStyle ) = 0;
      virtual HRESULT __stdcall raw_AutoFit ( ) = 0;
      virtual HRESULT __stdcall raw_DistributeWidth ( ) = 0;
      virtual HRESULT __stdcall get_NestingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_PreferredWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_PreferredWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_PreferredWidthType (
        /*[out,retval]*/ enum WdPreferredWidthType * prop ) = 0;
      virtual HRESULT __stdcall put_PreferredWidthType (
        /*[in]*/ enum WdPreferredWidthType prop ) = 0;
};

struct __declspec(uuid("0002094a-0000-0000-c000-000000000046"))
Cells : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetShading))
    ShadingPtr Shading;
    __declspec(property(get=GetWidth,put=PutWidth))
    float Width;
    __declspec(property(get=GetHeight,put=PutHeight))
    float Height;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetHeightRule,put=PutHeightRule))
    enum WdRowHeightRule HeightRule;
    __declspec(property(get=GetBorders,put=PutBorders))
    BordersPtr Borders;
    __declspec(property(get=GetNestingLevel))
    long NestingLevel;
    __declspec(property(get=GetPreferredWidth,put=PutPreferredWidth))
    float PreferredWidth;
    __declspec(property(get=GetPreferredWidthType,put=PutPreferredWidthType))
    enum WdPreferredWidthType PreferredWidthType;
    __declspec(property(get=GetVerticalAlignment,put=PutVerticalAlignment))
    enum WdCellVerticalAlignment VerticalAlignment;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    float GetWidth ( );
    void PutWidth (
        float prop );
    float GetHeight ( );
    void PutHeight (
        float prop );
    enum WdRowHeightRule GetHeightRule ( );
    void PutHeightRule (
        enum WdRowHeightRule prop );
    enum WdCellVerticalAlignment GetVerticalAlignment ( );
    void PutVerticalAlignment (
        enum WdCellVerticalAlignment prop );
    BordersPtr GetBorders ( );
    void PutBorders (
        struct Borders * prop );
    ShadingPtr GetShading ( );
    CellPtr Item (
        long Index );
    CellPtr Add (
        VARIANT * BeforeCell = &vtMissing );
    HRESULT Delete (
        VARIANT * ShiftCells = &vtMissing );
    HRESULT SetWidth (
        float ColumnWidth,
        enum WdRulerStyle RulerStyle );
    HRESULT SetHeight (
        VARIANT * RowHeight,
        enum WdRowHeightRule HeightRule );
    HRESULT Merge ( );
    HRESULT Split (
        VARIANT * NumRows = &vtMissing,
        VARIANT * NumColumns = &vtMissing,
        VARIANT * MergeBeforeSplit = &vtMissing );
    HRESULT DistributeHeight ( );
    HRESULT DistributeWidth ( );
    HRESULT AutoFit ( );
    long GetNestingLevel ( );
    float GetPreferredWidth ( );
    void PutPreferredWidth (
        float prop );
    enum WdPreferredWidthType GetPreferredWidthType ( );
    void PutPreferredWidthType (
        enum WdPreferredWidthType prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HeightRule (
        /*[out,retval]*/ enum WdRowHeightRule * prop ) = 0;
      virtual HRESULT __stdcall put_HeightRule (
        /*[in]*/ enum WdRowHeightRule prop ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ enum WdCellVerticalAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ enum WdCellVerticalAlignment prop ) = 0;
      virtual HRESULT __stdcall get_Borders (
        /*[out,retval]*/ struct Borders * * prop ) = 0;
      virtual HRESULT __stdcall put_Borders (
        /*[in]*/ struct Borders * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Cell * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT * BeforeCell,
        /*[out,retval]*/ struct Cell * * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete (
        /*[in]*/ VARIANT * ShiftCells = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_SetWidth (
        /*[in]*/ float ColumnWidth,
        /*[in]*/ enum WdRulerStyle RulerStyle ) = 0;
      virtual HRESULT __stdcall raw_SetHeight (
        /*[in]*/ VARIANT * RowHeight,
        /*[in]*/ enum WdRowHeightRule HeightRule ) = 0;
      virtual HRESULT __stdcall raw_Merge ( ) = 0;
      virtual HRESULT __stdcall raw_Split (
        /*[in]*/ VARIANT * NumRows = &vtMissing,
        /*[in]*/ VARIANT * NumColumns = &vtMissing,
        /*[in]*/ VARIANT * MergeBeforeSplit = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_DistributeHeight ( ) = 0;
      virtual HRESULT __stdcall raw_DistributeWidth ( ) = 0;
      virtual HRESULT __stdcall raw_AutoFit ( ) = 0;
      virtual HRESULT __stdcall get_NestingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_PreferredWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_PreferredWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_PreferredWidthType (
        /*[out,retval]*/ enum WdPreferredWidthType * prop ) = 0;
      virtual HRESULT __stdcall put_PreferredWidthType (
        /*[in]*/ enum WdPreferredWidthType prop ) = 0;
};

struct __declspec(uuid("00020930-0000-0000-c000-000000000046"))
Fields : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetLocked,put=PutLocked))
    long Locked;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    long GetLocked ( );
    void PutLocked (
        long prop );
    IUnknownPtr Get_NewEnum ( );
    FieldPtr Item (
        long Index );
    HRESULT ToggleShowCodes ( );
    long Update ( );
    HRESULT Unlink ( );
    HRESULT UpdateSource ( );
    FieldPtr Add (
        struct Range * Range,
        VARIANT * Type = &vtMissing,
        VARIANT * Text = &vtMissing,
        VARIANT * PreserveFormatting = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Field * * prop ) = 0;
      virtual HRESULT __stdcall raw_ToggleShowCodes ( ) = 0;
      virtual HRESULT __stdcall raw_Update (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Unlink ( ) = 0;
      virtual HRESULT __stdcall raw_UpdateSource ( ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Type,
        /*[in]*/ VARIANT * Text,
        /*[in]*/ VARIANT * PreserveFormatting,
        /*[out,retval]*/ struct Field * * prop ) = 0;
};

struct __declspec(uuid("0002092f-0000-0000-c000-000000000046"))
Field : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCode,put=PutCode))
    RangePtr Code;
    __declspec(property(get=GetType))
    enum WdFieldType Type;
    __declspec(property(get=GetLocked,put=PutLocked))
    VARIANT_BOOL Locked;
    __declspec(property(get=GetKind))
    enum WdFieldKind Kind;
    __declspec(property(get=GetResult,put=PutResult))
    RangePtr Result;
    __declspec(property(get=GetData,put=PutData))
    _bstr_t Data;
    __declspec(property(get=GetNext))
    FieldPtr Next;
    __declspec(property(get=GetPrevious))
    FieldPtr Previous;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetShowCodes,put=PutShowCodes))
    VARIANT_BOOL ShowCodes;
    __declspec(property(get=GetLinkFormat))
    LinkFormatPtr LinkFormat;
    __declspec(property(get=GetOLEFormat))
    OLEFormatPtr OLEFormat;
    __declspec(property(get=GetInlineShape))
    InlineShapePtr InlineShape;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    RangePtr GetCode ( );
    void PutCode (
        struct Range * prop );
    enum WdFieldType GetType ( );
    VARIANT_BOOL GetLocked ( );
    void PutLocked (
        VARIANT_BOOL prop );
    enum WdFieldKind GetKind ( );
    RangePtr GetResult ( );
    void PutResult (
        struct Range * prop );
    _bstr_t GetData ( );
    void PutData (
        _bstr_t prop );
    FieldPtr GetNext ( );
    FieldPtr GetPrevious ( );
    long GetIndex ( );
    VARIANT_BOOL GetShowCodes ( );
    void PutShowCodes (
        VARIANT_BOOL prop );
    LinkFormatPtr GetLinkFormat ( );
    OLEFormatPtr GetOLEFormat ( );
    InlineShapePtr GetInlineShape ( );
    HRESULT Select ( );
    VARIANT_BOOL Update ( );
    HRESULT Unlink ( );
    HRESULT UpdateSource ( );
    HRESULT DoClick ( );
    HRESULT Copy ( );
    HRESULT Cut ( );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Code (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall put_Code (
        /*[in]*/ struct Range * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdFieldType * prop ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Kind (
        /*[out,retval]*/ enum WdFieldKind * prop ) = 0;
      virtual HRESULT __stdcall get_Result (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall put_Result (
        /*[in]*/ struct Range * prop ) = 0;
      virtual HRESULT __stdcall get_Data (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Data (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Next (
        /*[out,retval]*/ struct Field * * prop ) = 0;
      virtual HRESULT __stdcall get_Previous (
        /*[out,retval]*/ struct Field * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_ShowCodes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ShowCodes (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_LinkFormat (
        /*[out,retval]*/ struct LinkFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_OLEFormat (
        /*[out,retval]*/ struct OLEFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_InlineShape (
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
      virtual HRESULT __stdcall raw_Update (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_Unlink ( ) = 0;
      virtual HRESULT __stdcall raw_UpdateSource ( ) = 0;
      virtual HRESULT __stdcall raw_DoClick ( ) = 0;
      virtual HRESULT __stdcall raw_Copy ( ) = 0;
      virtual HRESULT __stdcall raw_Cut ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("00020922-0000-0000-c000-000000000046"))
TablesOfFigures : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetFormat,put=PutFormat))
    enum WdTofFormat Format;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    enum WdTofFormat GetFormat ( );
    void PutFormat (
        enum WdTofFormat prop );
    TableOfFiguresPtr Item (
        long Index );
    TableOfFiguresPtr AddOld (
        struct Range * Range,
        VARIANT * Caption = &vtMissing,
        VARIANT * IncludeLabel = &vtMissing,
        VARIANT * UseHeadingStyles = &vtMissing,
        VARIANT * UpperHeadingLevel = &vtMissing,
        VARIANT * LowerHeadingLevel = &vtMissing,
        VARIANT * UseFields = &vtMissing,
        VARIANT * TableID = &vtMissing,
        VARIANT * RightAlignPageNumbers = &vtMissing,
        VARIANT * IncludePageNumbers = &vtMissing,
        VARIANT * AddedStyles = &vtMissing );
    FieldPtr MarkEntry (
        struct Range * Range,
        VARIANT * Entry = &vtMissing,
        VARIANT * EntryAutoText = &vtMissing,
        VARIANT * TableID = &vtMissing,
        VARIANT * Level = &vtMissing );
    TableOfFiguresPtr Add (
        struct Range * Range,
        VARIANT * Caption = &vtMissing,
        VARIANT * IncludeLabel = &vtMissing,
        VARIANT * UseHeadingStyles = &vtMissing,
        VARIANT * UpperHeadingLevel = &vtMissing,
        VARIANT * LowerHeadingLevel = &vtMissing,
        VARIANT * UseFields = &vtMissing,
        VARIANT * TableID = &vtMissing,
        VARIANT * RightAlignPageNumbers = &vtMissing,
        VARIANT * IncludePageNumbers = &vtMissing,
        VARIANT * AddedStyles = &vtMissing,
        VARIANT * UseHyperlinks = &vtMissing,
        VARIANT * HidePageNumbersInWeb = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ enum WdTofFormat * prop ) = 0;
      virtual HRESULT __stdcall put_Format (
        /*[in]*/ enum WdTofFormat prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct TableOfFigures * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddOld (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Caption,
        /*[in]*/ VARIANT * IncludeLabel,
        /*[in]*/ VARIANT * UseHeadingStyles,
        /*[in]*/ VARIANT * UpperHeadingLevel,
        /*[in]*/ VARIANT * LowerHeadingLevel,
        /*[in]*/ VARIANT * UseFields,
        /*[in]*/ VARIANT * TableID,
        /*[in]*/ VARIANT * RightAlignPageNumbers,
        /*[in]*/ VARIANT * IncludePageNumbers,
        /*[in]*/ VARIANT * AddedStyles,
        /*[out,retval]*/ struct TableOfFigures * * prop ) = 0;
      virtual HRESULT __stdcall raw_MarkEntry (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Entry,
        /*[in]*/ VARIANT * EntryAutoText,
        /*[in]*/ VARIANT * TableID,
        /*[in]*/ VARIANT * Level,
        /*[out,retval]*/ struct Field * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Caption,
        /*[in]*/ VARIANT * IncludeLabel,
        /*[in]*/ VARIANT * UseHeadingStyles,
        /*[in]*/ VARIANT * UpperHeadingLevel,
        /*[in]*/ VARIANT * LowerHeadingLevel,
        /*[in]*/ VARIANT * UseFields,
        /*[in]*/ VARIANT * TableID,
        /*[in]*/ VARIANT * RightAlignPageNumbers,
        /*[in]*/ VARIANT * IncludePageNumbers,
        /*[in]*/ VARIANT * AddedStyles,
        /*[in]*/ VARIANT * UseHyperlinks,
        /*[in]*/ VARIANT * HidePageNumbersInWeb,
        /*[out,retval]*/ struct TableOfFigures * * prop ) = 0;
};

struct __declspec(uuid("00020914-0000-0000-c000-000000000046"))
TablesOfContents : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetFormat,put=PutFormat))
    enum WdTocFormat Format;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    enum WdTocFormat GetFormat ( );
    void PutFormat (
        enum WdTocFormat prop );
    TableOfContentsPtr Item (
        long Index );
    TableOfContentsPtr AddOld (
        struct Range * Range,
        VARIANT * UseHeadingStyles = &vtMissing,
        VARIANT * UpperHeadingLevel = &vtMissing,
        VARIANT * LowerHeadingLevel = &vtMissing,
        VARIANT * UseFields = &vtMissing,
        VARIANT * TableID = &vtMissing,
        VARIANT * RightAlignPageNumbers = &vtMissing,
        VARIANT * IncludePageNumbers = &vtMissing,
        VARIANT * AddedStyles = &vtMissing );
    FieldPtr MarkEntry (
        struct Range * Range,
        VARIANT * Entry = &vtMissing,
        VARIANT * EntryAutoText = &vtMissing,
        VARIANT * TableID = &vtMissing,
        VARIANT * Level = &vtMissing );
    TableOfContentsPtr Add2000 (
        struct Range * Range,
        VARIANT * UseHeadingStyles = &vtMissing,
        VARIANT * UpperHeadingLevel = &vtMissing,
        VARIANT * LowerHeadingLevel = &vtMissing,
        VARIANT * UseFields = &vtMissing,
        VARIANT * TableID = &vtMissing,
        VARIANT * RightAlignPageNumbers = &vtMissing,
        VARIANT * IncludePageNumbers = &vtMissing,
        VARIANT * AddedStyles = &vtMissing,
        VARIANT * UseHyperlinks = &vtMissing,
        VARIANT * HidePageNumbersInWeb = &vtMissing );
    TableOfContentsPtr Add (
        struct Range * Range,
        VARIANT * UseHeadingStyles = &vtMissing,
        VARIANT * UpperHeadingLevel = &vtMissing,
        VARIANT * LowerHeadingLevel = &vtMissing,
        VARIANT * UseFields = &vtMissing,
        VARIANT * TableID = &vtMissing,
        VARIANT * RightAlignPageNumbers = &vtMissing,
        VARIANT * IncludePageNumbers = &vtMissing,
        VARIANT * AddedStyles = &vtMissing,
        VARIANT * UseHyperlinks = &vtMissing,
        VARIANT * HidePageNumbersInWeb = &vtMissing,
        VARIANT * UseOutlineLevels = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ enum WdTocFormat * prop ) = 0;
      virtual HRESULT __stdcall put_Format (
        /*[in]*/ enum WdTocFormat prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct TableOfContents * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddOld (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * UseHeadingStyles,
        /*[in]*/ VARIANT * UpperHeadingLevel,
        /*[in]*/ VARIANT * LowerHeadingLevel,
        /*[in]*/ VARIANT * UseFields,
        /*[in]*/ VARIANT * TableID,
        /*[in]*/ VARIANT * RightAlignPageNumbers,
        /*[in]*/ VARIANT * IncludePageNumbers,
        /*[in]*/ VARIANT * AddedStyles,
        /*[out,retval]*/ struct TableOfContents * * prop ) = 0;
      virtual HRESULT __stdcall raw_MarkEntry (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Entry,
        /*[in]*/ VARIANT * EntryAutoText,
        /*[in]*/ VARIANT * TableID,
        /*[in]*/ VARIANT * Level,
        /*[out,retval]*/ struct Field * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add2000 (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * UseHeadingStyles,
        /*[in]*/ VARIANT * UpperHeadingLevel,
        /*[in]*/ VARIANT * LowerHeadingLevel,
        /*[in]*/ VARIANT * UseFields,
        /*[in]*/ VARIANT * TableID,
        /*[in]*/ VARIANT * RightAlignPageNumbers,
        /*[in]*/ VARIANT * IncludePageNumbers,
        /*[in]*/ VARIANT * AddedStyles,
        /*[in]*/ VARIANT * UseHyperlinks,
        /*[in]*/ VARIANT * HidePageNumbersInWeb,
        /*[out,retval]*/ struct TableOfContents * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * UseHeadingStyles,
        /*[in]*/ VARIANT * UpperHeadingLevel,
        /*[in]*/ VARIANT * LowerHeadingLevel,
        /*[in]*/ VARIANT * UseFields,
        /*[in]*/ VARIANT * TableID,
        /*[in]*/ VARIANT * RightAlignPageNumbers,
        /*[in]*/ VARIANT * IncludePageNumbers,
        /*[in]*/ VARIANT * AddedStyles,
        /*[in]*/ VARIANT * UseHyperlinks,
        /*[in]*/ VARIANT * HidePageNumbersInWeb,
        /*[in]*/ VARIANT * UseOutlineLevels,
        /*[out,retval]*/ struct TableOfContents * * prop ) = 0;
};

struct __declspec(uuid("00020912-0000-0000-c000-000000000046"))
TablesOfAuthorities : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetFormat,put=PutFormat))
    enum WdToaFormat Format;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    enum WdToaFormat GetFormat ( );
    void PutFormat (
        enum WdToaFormat prop );
    TableOfAuthoritiesPtr Item (
        long Index );
    TableOfAuthoritiesPtr Add (
        struct Range * Range,
        VARIANT * Category = &vtMissing,
        VARIANT * Bookmark = &vtMissing,
        VARIANT * Passim = &vtMissing,
        VARIANT * KeepEntryFormatting = &vtMissing,
        VARIANT * Separator = &vtMissing,
        VARIANT * IncludeSequenceName = &vtMissing,
        VARIANT * EntrySeparator = &vtMissing,
        VARIANT * PageRangeSeparator = &vtMissing,
        VARIANT * IncludeCategoryHeader = &vtMissing,
        VARIANT * PageNumberSeparator = &vtMissing );
    HRESULT NextCitation (
        _bstr_t ShortCitation );
    FieldPtr MarkCitation (
        struct Range * Range,
        _bstr_t ShortCitation,
        VARIANT * LongCitation = &vtMissing,
        VARIANT * LongCitationAutoText = &vtMissing,
        VARIANT * Category = &vtMissing );
    HRESULT MarkAllCitations (
        _bstr_t ShortCitation,
        VARIANT * LongCitation = &vtMissing,
        VARIANT * LongCitationAutoText = &vtMissing,
        VARIANT * Category = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ enum WdToaFormat * prop ) = 0;
      virtual HRESULT __stdcall put_Format (
        /*[in]*/ enum WdToaFormat prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct TableOfAuthorities * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Category,
        /*[in]*/ VARIANT * Bookmark,
        /*[in]*/ VARIANT * Passim,
        /*[in]*/ VARIANT * KeepEntryFormatting,
        /*[in]*/ VARIANT * Separator,
        /*[in]*/ VARIANT * IncludeSequenceName,
        /*[in]*/ VARIANT * EntrySeparator,
        /*[in]*/ VARIANT * PageRangeSeparator,
        /*[in]*/ VARIANT * IncludeCategoryHeader,
        /*[in]*/ VARIANT * PageNumberSeparator,
        /*[out,retval]*/ struct TableOfAuthorities * * prop ) = 0;
      virtual HRESULT __stdcall raw_NextCitation (
        /*[in]*/ BSTR ShortCitation ) = 0;
      virtual HRESULT __stdcall raw_MarkCitation (
        /*[in]*/ struct Range * Range,
        /*[in]*/ BSTR ShortCitation,
        /*[in]*/ VARIANT * LongCitation,
        /*[in]*/ VARIANT * LongCitationAutoText,
        /*[in]*/ VARIANT * Category,
        /*[out,retval]*/ struct Field * * prop ) = 0;
      virtual HRESULT __stdcall raw_MarkAllCitations (
        /*[in]*/ BSTR ShortCitation,
        /*[in]*/ VARIANT * LongCitation = &vtMissing,
        /*[in]*/ VARIANT * LongCitationAutoText = &vtMissing,
        /*[in]*/ VARIANT * Category = &vtMissing ) = 0;
};

struct __declspec(uuid("0002097c-0000-0000-c000-000000000046"))
Indexes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetFormat,put=PutFormat))
    enum WdIndexFormat Format;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    enum WdIndexFormat GetFormat ( );
    void PutFormat (
        enum WdIndexFormat prop );
    IndexPtr Item (
        long Index );
    IndexPtr AddOld (
        struct Range * Range,
        VARIANT * HeadingSeparator = &vtMissing,
        VARIANT * RightAlignPageNumbers = &vtMissing,
        VARIANT * Type = &vtMissing,
        VARIANT * NumberOfColumns = &vtMissing,
        VARIANT * AccentedLetters = &vtMissing );
    FieldPtr MarkEntry (
        struct Range * Range,
        VARIANT * Entry = &vtMissing,
        VARIANT * EntryAutoText = &vtMissing,
        VARIANT * CrossReference = &vtMissing,
        VARIANT * CrossReferenceAutoText = &vtMissing,
        VARIANT * BookmarkName = &vtMissing,
        VARIANT * Bold = &vtMissing,
        VARIANT * Italic = &vtMissing,
        VARIANT * Reading = &vtMissing );
    HRESULT MarkAllEntries (
        struct Range * Range,
        VARIANT * Entry = &vtMissing,
        VARIANT * EntryAutoText = &vtMissing,
        VARIANT * CrossReference = &vtMissing,
        VARIANT * CrossReferenceAutoText = &vtMissing,
        VARIANT * BookmarkName = &vtMissing,
        VARIANT * Bold = &vtMissing,
        VARIANT * Italic = &vtMissing );
    HRESULT AutoMarkEntries (
        _bstr_t ConcordanceFileName );
    IndexPtr Add (
        struct Range * Range,
        VARIANT * HeadingSeparator = &vtMissing,
        VARIANT * RightAlignPageNumbers = &vtMissing,
        VARIANT * Type = &vtMissing,
        VARIANT * NumberOfColumns = &vtMissing,
        VARIANT * AccentedLetters = &vtMissing,
        VARIANT * SortBy = &vtMissing,
        VARIANT * IndexLanguage = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ enum WdIndexFormat * prop ) = 0;
      virtual HRESULT __stdcall put_Format (
        /*[in]*/ enum WdIndexFormat prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Index * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddOld (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * HeadingSeparator,
        /*[in]*/ VARIANT * RightAlignPageNumbers,
        /*[in]*/ VARIANT * Type,
        /*[in]*/ VARIANT * NumberOfColumns,
        /*[in]*/ VARIANT * AccentedLetters,
        /*[out,retval]*/ struct Index * * prop ) = 0;
      virtual HRESULT __stdcall raw_MarkEntry (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Entry,
        /*[in]*/ VARIANT * EntryAutoText,
        /*[in]*/ VARIANT * CrossReference,
        /*[in]*/ VARIANT * CrossReferenceAutoText,
        /*[in]*/ VARIANT * BookmarkName,
        /*[in]*/ VARIANT * Bold,
        /*[in]*/ VARIANT * Italic,
        /*[in]*/ VARIANT * Reading,
        /*[out,retval]*/ struct Field * * prop ) = 0;
      virtual HRESULT __stdcall raw_MarkAllEntries (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Entry = &vtMissing,
        /*[in]*/ VARIANT * EntryAutoText = &vtMissing,
        /*[in]*/ VARIANT * CrossReference = &vtMissing,
        /*[in]*/ VARIANT * CrossReferenceAutoText = &vtMissing,
        /*[in]*/ VARIANT * BookmarkName = &vtMissing,
        /*[in]*/ VARIANT * Bold = &vtMissing,
        /*[in]*/ VARIANT * Italic = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_AutoMarkEntries (
        /*[in]*/ BSTR ConcordanceFileName ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * HeadingSeparator,
        /*[in]*/ VARIANT * RightAlignPageNumbers,
        /*[in]*/ VARIANT * Type,
        /*[in]*/ VARIANT * NumberOfColumns,
        /*[in]*/ VARIANT * AccentedLetters,
        /*[in]*/ VARIANT * SortBy,
        /*[in]*/ VARIANT * IndexLanguage,
        /*[out,retval]*/ struct Index * * prop ) = 0;
};

struct __declspec(uuid("0002092d-0000-0000-c000-000000000046"))
Styles : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    StylePtr Item (
        VARIANT * Index );
    StylePtr Add (
        _bstr_t Name,
        VARIANT * Type = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Style * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * Type,
        /*[out,retval]*/ struct Style * * prop ) = 0;
};

struct __declspec(uuid("0002092c-0000-0000-c000-000000000046"))
Style : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetNameLocal,put=PutNameLocal))
    _bstr_t NameLocal;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetType))
    enum WdStyleType Type;
    __declspec(property(get=GetBuiltIn))
    VARIANT_BOOL BuiltIn;
    __declspec(property(get=GetInUse))
    VARIANT_BOOL InUse;
    __declspec(property(get=GetShading))
    ShadingPtr Shading;
    __declspec(property(get=GetBorders,put=PutBorders))
    BordersPtr Borders;
    __declspec(property(get=GetParagraphFormat,put=PutParagraphFormat))
    _ParagraphFormatPtr ParagraphFormat;
    __declspec(property(get=GetFont,put=PutFont))
    _FontPtr Font;
    __declspec(property(get=GetFrame))
    FramePtr Frame;
    __declspec(property(get=GetLanguageID,put=PutLanguageID))
    enum WdLanguageID LanguageID;
    __declspec(property(get=GetAutomaticallyUpdate,put=PutAutomaticallyUpdate))
    VARIANT_BOOL AutomaticallyUpdate;
    __declspec(property(get=GetListTemplate))
    ListTemplatePtr ListTemplate;
    __declspec(property(get=GetListLevelNumber))
    long ListLevelNumber;
    __declspec(property(get=GetLanguageIDFarEast,put=PutLanguageIDFarEast))
    enum WdLanguageID LanguageIDFarEast;
    __declspec(property(get=GetHidden,put=PutHidden))
    VARIANT_BOOL Hidden;
    __declspec(property(get=GetNoProofing,put=PutNoProofing))
    long NoProofing;
    __declspec(property(get=GetVisibility,put=PutVisibility))
    VARIANT_BOOL Visibility;
    __declspec(property(get=GetNoSpaceBetweenParagraphsOfSameStyle,put=PutNoSpaceBetweenParagraphsOfSameStyle))
    VARIANT_BOOL NoSpaceBetweenParagraphsOfSameStyle;
    __declspec(property(get=GetTable))
    TableStylePtr Table;
    __declspec(property(get=GetLocked,put=PutLocked))
    VARIANT_BOOL Locked;
    __declspec(property(get=GetPriority,put=PutPriority))
    long Priority;
    __declspec(property(get=GetUnhideWhenUsed,put=PutUnhideWhenUsed))
    VARIANT_BOOL UnhideWhenUsed;
    __declspec(property(get=GetQuickStyle,put=PutQuickStyle))
    VARIANT_BOOL QuickStyle;
    __declspec(property(get=GetLinked))
    VARIANT_BOOL Linked;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetNameLocal ( );
    void PutNameLocal (
        _bstr_t prop );
    _variant_t GetBaseStyle ( );
    void PutBaseStyle (
        VARIANT * prop );
    _bstr_t GetDescription ( );
    enum WdStyleType GetType ( );
    VARIANT_BOOL GetBuiltIn ( );
    _variant_t GetNextParagraphStyle ( );
    void PutNextParagraphStyle (
        VARIANT * prop );
    VARIANT_BOOL GetInUse ( );
    ShadingPtr GetShading ( );
    BordersPtr GetBorders ( );
    void PutBorders (
        struct Borders * prop );
    _ParagraphFormatPtr GetParagraphFormat ( );
    void PutParagraphFormat (
        struct _ParagraphFormat * prop );
    _FontPtr GetFont ( );
    void PutFont (
        struct _Font * prop );
    FramePtr GetFrame ( );
    enum WdLanguageID GetLanguageID ( );
    void PutLanguageID (
        enum WdLanguageID prop );
    VARIANT_BOOL GetAutomaticallyUpdate ( );
    void PutAutomaticallyUpdate (
        VARIANT_BOOL prop );
    ListTemplatePtr GetListTemplate ( );
    long GetListLevelNumber ( );
    enum WdLanguageID GetLanguageIDFarEast ( );
    void PutLanguageIDFarEast (
        enum WdLanguageID prop );
    VARIANT_BOOL GetHidden ( );
    void PutHidden (
        VARIANT_BOOL prop );
    HRESULT Delete ( );
    HRESULT LinkToListTemplate (
        struct ListTemplate * ListTemplate,
        VARIANT * ListLevelNumber = &vtMissing );
    long GetNoProofing ( );
    void PutNoProofing (
        long prop );
    _variant_t GetLinkStyle ( );
    void PutLinkStyle (
        VARIANT * prop );
    VARIANT_BOOL GetVisibility ( );
    void PutVisibility (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetNoSpaceBetweenParagraphsOfSameStyle ( );
    void PutNoSpaceBetweenParagraphsOfSameStyle (
        VARIANT_BOOL prop );
    TableStylePtr GetTable ( );
    VARIANT_BOOL GetLocked ( );
    void PutLocked (
        VARIANT_BOOL prop );
    long GetPriority ( );
    void PutPriority (
        long prop );
    VARIANT_BOOL GetUnhideWhenUsed ( );
    void PutUnhideWhenUsed (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetQuickStyle ( );
    void PutQuickStyle (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetLinked ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_NameLocal (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NameLocal (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_BaseStyle (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_BaseStyle (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdStyleType * prop ) = 0;
      virtual HRESULT __stdcall get_BuiltIn (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_NextParagraphStyle (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_NextParagraphStyle (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_InUse (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_Borders (
        /*[out,retval]*/ struct Borders * * prop ) = 0;
      virtual HRESULT __stdcall put_Borders (
        /*[in]*/ struct Borders * prop ) = 0;
      virtual HRESULT __stdcall get_ParagraphFormat (
        /*[out,retval]*/ struct _ParagraphFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_ParagraphFormat (
        /*[in]*/ struct _ParagraphFormat * prop ) = 0;
      virtual HRESULT __stdcall get_Font (
        /*[out,retval]*/ struct _Font * * prop ) = 0;
      virtual HRESULT __stdcall put_Font (
        /*[in]*/ struct _Font * prop ) = 0;
      virtual HRESULT __stdcall get_Frame (
        /*[out,retval]*/ struct Frame * * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageID (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageID (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_AutomaticallyUpdate (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutomaticallyUpdate (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ListTemplate (
        /*[out,retval]*/ struct ListTemplate * * prop ) = 0;
      virtual HRESULT __stdcall get_ListLevelNumber (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageIDFarEast (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageIDFarEast (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_Hidden (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Hidden (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_LinkToListTemplate (
        /*[in]*/ struct ListTemplate * ListTemplate,
        /*[in]*/ VARIANT * ListLevelNumber = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_NoProofing (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_NoProofing (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_LinkStyle (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_LinkStyle (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Visibility (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Visibility (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_NoSpaceBetweenParagraphsOfSameStyle (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_NoSpaceBetweenParagraphsOfSameStyle (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Table (
        /*[out,retval]*/ struct TableStyle * * prop ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Priority (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Priority (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_UnhideWhenUsed (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UnhideWhenUsed (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_QuickStyle (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_QuickStyle (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Linked (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
};

struct __declspec(uuid("00020918-0000-0000-c000-000000000046"))
Envelope : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDefaultSize,put=PutDefaultSize))
    _bstr_t DefaultSize;
    __declspec(property(get=GetAddress))
    RangePtr Address;
    __declspec(property(get=GetReturnAddress))
    RangePtr ReturnAddress;
    __declspec(property(get=GetDefaultPrintBarCode,put=PutDefaultPrintBarCode))
    VARIANT_BOOL DefaultPrintBarCode;
    __declspec(property(get=GetDefaultPrintFIMA,put=PutDefaultPrintFIMA))
    VARIANT_BOOL DefaultPrintFIMA;
    __declspec(property(get=GetDefaultHeight,put=PutDefaultHeight))
    float DefaultHeight;
    __declspec(property(get=GetDefaultWidth,put=PutDefaultWidth))
    float DefaultWidth;
    __declspec(property(get=GetDefaultOmitReturnAddress,put=PutDefaultOmitReturnAddress))
    VARIANT_BOOL DefaultOmitReturnAddress;
    __declspec(property(get=GetFeedSource,put=PutFeedSource))
    enum WdPaperTray FeedSource;
    __declspec(property(get=GetAddressFromLeft,put=PutAddressFromLeft))
    float AddressFromLeft;
    __declspec(property(get=GetAddressFromTop,put=PutAddressFromTop))
    float AddressFromTop;
    __declspec(property(get=GetReturnAddressFromLeft,put=PutReturnAddressFromLeft))
    float ReturnAddressFromLeft;
    __declspec(property(get=GetReturnAddressFromTop,put=PutReturnAddressFromTop))
    float ReturnAddressFromTop;
    __declspec(property(get=GetAddressStyle))
    StylePtr AddressStyle;
    __declspec(property(get=GetReturnAddressStyle))
    StylePtr ReturnAddressStyle;
    __declspec(property(get=GetDefaultOrientation,put=PutDefaultOrientation))
    enum WdEnvelopeOrientation DefaultOrientation;
    __declspec(property(get=GetDefaultFaceUp,put=PutDefaultFaceUp))
    VARIANT_BOOL DefaultFaceUp;
    __declspec(property(get=GetVertical,put=PutVertical))
    VARIANT_BOOL Vertical;
    __declspec(property(get=GetRecipientNamefromLeft,put=PutRecipientNamefromLeft))
    float RecipientNamefromLeft;
    __declspec(property(get=GetRecipientNamefromTop,put=PutRecipientNamefromTop))
    float RecipientNamefromTop;
    __declspec(property(get=GetRecipientPostalfromLeft,put=PutRecipientPostalfromLeft))
    float RecipientPostalfromLeft;
    __declspec(property(get=GetRecipientPostalfromTop,put=PutRecipientPostalfromTop))
    float RecipientPostalfromTop;
    __declspec(property(get=GetSenderNamefromLeft,put=PutSenderNamefromLeft))
    float SenderNamefromLeft;
    __declspec(property(get=GetSenderNamefromTop,put=PutSenderNamefromTop))
    float SenderNamefromTop;
    __declspec(property(get=GetSenderPostalfromLeft,put=PutSenderPostalfromLeft))
    float SenderPostalfromLeft;
    __declspec(property(get=GetSenderPostalfromTop,put=PutSenderPostalfromTop))
    float SenderPostalfromTop;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    RangePtr GetAddress ( );
    RangePtr GetReturnAddress ( );
    VARIANT_BOOL GetDefaultPrintBarCode ( );
    void PutDefaultPrintBarCode (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetDefaultPrintFIMA ( );
    void PutDefaultPrintFIMA (
        VARIANT_BOOL prop );
    float GetDefaultHeight ( );
    void PutDefaultHeight (
        float prop );
    float GetDefaultWidth ( );
    void PutDefaultWidth (
        float prop );
    _bstr_t GetDefaultSize ( );
    void PutDefaultSize (
        _bstr_t prop );
    VARIANT_BOOL GetDefaultOmitReturnAddress ( );
    void PutDefaultOmitReturnAddress (
        VARIANT_BOOL prop );
    enum WdPaperTray GetFeedSource ( );
    void PutFeedSource (
        enum WdPaperTray prop );
    float GetAddressFromLeft ( );
    void PutAddressFromLeft (
        float prop );
    float GetAddressFromTop ( );
    void PutAddressFromTop (
        float prop );
    float GetReturnAddressFromLeft ( );
    void PutReturnAddressFromLeft (
        float prop );
    float GetReturnAddressFromTop ( );
    void PutReturnAddressFromTop (
        float prop );
    StylePtr GetAddressStyle ( );
    StylePtr GetReturnAddressStyle ( );
    enum WdEnvelopeOrientation GetDefaultOrientation ( );
    void PutDefaultOrientation (
        enum WdEnvelopeOrientation prop );
    VARIANT_BOOL GetDefaultFaceUp ( );
    void PutDefaultFaceUp (
        VARIANT_BOOL prop );
    HRESULT Insert2000 (
        VARIANT * ExtractAddress = &vtMissing,
        VARIANT * Address = &vtMissing,
        VARIANT * AutoText = &vtMissing,
        VARIANT * OmitReturnAddress = &vtMissing,
        VARIANT * ReturnAddress = &vtMissing,
        VARIANT * ReturnAutoText = &vtMissing,
        VARIANT * PrintBarCode = &vtMissing,
        VARIANT * PrintFIMA = &vtMissing,
        VARIANT * Size = &vtMissing,
        VARIANT * Height = &vtMissing,
        VARIANT * Width = &vtMissing,
        VARIANT * FeedSource = &vtMissing,
        VARIANT * AddressFromLeft = &vtMissing,
        VARIANT * AddressFromTop = &vtMissing,
        VARIANT * ReturnAddressFromLeft = &vtMissing,
        VARIANT * ReturnAddressFromTop = &vtMissing,
        VARIANT * DefaultFaceUp = &vtMissing,
        VARIANT * DefaultOrientation = &vtMissing );
    HRESULT PrintOut2000 (
        VARIANT * ExtractAddress = &vtMissing,
        VARIANT * Address = &vtMissing,
        VARIANT * AutoText = &vtMissing,
        VARIANT * OmitReturnAddress = &vtMissing,
        VARIANT * ReturnAddress = &vtMissing,
        VARIANT * ReturnAutoText = &vtMissing,
        VARIANT * PrintBarCode = &vtMissing,
        VARIANT * PrintFIMA = &vtMissing,
        VARIANT * Size = &vtMissing,
        VARIANT * Height = &vtMissing,
        VARIANT * Width = &vtMissing,
        VARIANT * FeedSource = &vtMissing,
        VARIANT * AddressFromLeft = &vtMissing,
        VARIANT * AddressFromTop = &vtMissing,
        VARIANT * ReturnAddressFromLeft = &vtMissing,
        VARIANT * ReturnAddressFromTop = &vtMissing,
        VARIANT * DefaultFaceUp = &vtMissing,
        VARIANT * DefaultOrientation = &vtMissing );
    HRESULT UpdateDocument ( );
    HRESULT Options ( );
    VARIANT_BOOL GetVertical ( );
    void PutVertical (
        VARIANT_BOOL prop );
    float GetRecipientNamefromLeft ( );
    void PutRecipientNamefromLeft (
        float prop );
    float GetRecipientNamefromTop ( );
    void PutRecipientNamefromTop (
        float prop );
    float GetRecipientPostalfromLeft ( );
    void PutRecipientPostalfromLeft (
        float prop );
    float GetRecipientPostalfromTop ( );
    void PutRecipientPostalfromTop (
        float prop );
    float GetSenderNamefromLeft ( );
    void PutSenderNamefromLeft (
        float prop );
    float GetSenderNamefromTop ( );
    void PutSenderNamefromTop (
        float prop );
    float GetSenderPostalfromLeft ( );
    void PutSenderPostalfromLeft (
        float prop );
    float GetSenderPostalfromTop ( );
    void PutSenderPostalfromTop (
        float prop );
    HRESULT Insert (
        VARIANT * ExtractAddress = &vtMissing,
        VARIANT * Address = &vtMissing,
        VARIANT * AutoText = &vtMissing,
        VARIANT * OmitReturnAddress = &vtMissing,
        VARIANT * ReturnAddress = &vtMissing,
        VARIANT * ReturnAutoText = &vtMissing,
        VARIANT * PrintBarCode = &vtMissing,
        VARIANT * PrintFIMA = &vtMissing,
        VARIANT * Size = &vtMissing,
        VARIANT * Height = &vtMissing,
        VARIANT * Width = &vtMissing,
        VARIANT * FeedSource = &vtMissing,
        VARIANT * AddressFromLeft = &vtMissing,
        VARIANT * AddressFromTop = &vtMissing,
        VARIANT * ReturnAddressFromLeft = &vtMissing,
        VARIANT * ReturnAddressFromTop = &vtMissing,
        VARIANT * DefaultFaceUp = &vtMissing,
        VARIANT * DefaultOrientation = &vtMissing,
        VARIANT * PrintEPostage = &vtMissing,
        VARIANT * Vertical = &vtMissing,
        VARIANT * RecipientNamefromLeft = &vtMissing,
        VARIANT * RecipientNamefromTop = &vtMissing,
        VARIANT * RecipientPostalfromLeft = &vtMissing,
        VARIANT * RecipientPostalfromTop = &vtMissing,
        VARIANT * SenderNamefromLeft = &vtMissing,
        VARIANT * SenderNamefromTop = &vtMissing,
        VARIANT * SenderPostalfromLeft = &vtMissing,
        VARIANT * SenderPostalfromTop = &vtMissing );
    HRESULT PrintOut (
        VARIANT * ExtractAddress = &vtMissing,
        VARIANT * Address = &vtMissing,
        VARIANT * AutoText = &vtMissing,
        VARIANT * OmitReturnAddress = &vtMissing,
        VARIANT * ReturnAddress = &vtMissing,
        VARIANT * ReturnAutoText = &vtMissing,
        VARIANT * PrintBarCode = &vtMissing,
        VARIANT * PrintFIMA = &vtMissing,
        VARIANT * Size = &vtMissing,
        VARIANT * Height = &vtMissing,
        VARIANT * Width = &vtMissing,
        VARIANT * FeedSource = &vtMissing,
        VARIANT * AddressFromLeft = &vtMissing,
        VARIANT * AddressFromTop = &vtMissing,
        VARIANT * ReturnAddressFromLeft = &vtMissing,
        VARIANT * ReturnAddressFromTop = &vtMissing,
        VARIANT * DefaultFaceUp = &vtMissing,
        VARIANT * DefaultOrientation = &vtMissing,
        VARIANT * PrintEPostage = &vtMissing,
        VARIANT * Vertical = &vtMissing,
        VARIANT * RecipientNamefromLeft = &vtMissing,
        VARIANT * RecipientNamefromTop = &vtMissing,
        VARIANT * RecipientPostalfromLeft = &vtMissing,
        VARIANT * RecipientPostalfromTop = &vtMissing,
        VARIANT * SenderNamefromLeft = &vtMissing,
        VARIANT * SenderNamefromTop = &vtMissing,
        VARIANT * SenderPostalfromLeft = &vtMissing,
        VARIANT * SenderPostalfromTop = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Address (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_ReturnAddress (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultPrintBarCode (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultPrintBarCode (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DefaultPrintFIMA (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultPrintFIMA (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_DefaultHeight (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultHeight (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_DefaultWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_DefaultSize (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultSize (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_DefaultOmitReturnAddress (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultOmitReturnAddress (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FeedSource (
        /*[out,retval]*/ enum WdPaperTray * prop ) = 0;
      virtual HRESULT __stdcall put_FeedSource (
        /*[in]*/ enum WdPaperTray prop ) = 0;
      virtual HRESULT __stdcall get_AddressFromLeft (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_AddressFromLeft (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_AddressFromTop (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_AddressFromTop (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ReturnAddressFromLeft (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_ReturnAddressFromLeft (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ReturnAddressFromTop (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_ReturnAddressFromTop (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_AddressStyle (
        /*[out,retval]*/ struct Style * * prop ) = 0;
      virtual HRESULT __stdcall get_ReturnAddressStyle (
        /*[out,retval]*/ struct Style * * prop ) = 0;
      virtual HRESULT __stdcall get_DefaultOrientation (
        /*[out,retval]*/ enum WdEnvelopeOrientation * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultOrientation (
        /*[in]*/ enum WdEnvelopeOrientation prop ) = 0;
      virtual HRESULT __stdcall get_DefaultFaceUp (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultFaceUp (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall raw_Insert2000 (
        /*[in]*/ VARIANT * ExtractAddress = &vtMissing,
        /*[in]*/ VARIANT * Address = &vtMissing,
        /*[in]*/ VARIANT * AutoText = &vtMissing,
        /*[in]*/ VARIANT * OmitReturnAddress = &vtMissing,
        /*[in]*/ VARIANT * ReturnAddress = &vtMissing,
        /*[in]*/ VARIANT * ReturnAutoText = &vtMissing,
        /*[in]*/ VARIANT * PrintBarCode = &vtMissing,
        /*[in]*/ VARIANT * PrintFIMA = &vtMissing,
        /*[in]*/ VARIANT * Size = &vtMissing,
        /*[in]*/ VARIANT * Height = &vtMissing,
        /*[in]*/ VARIANT * Width = &vtMissing,
        /*[in]*/ VARIANT * FeedSource = &vtMissing,
        /*[in]*/ VARIANT * AddressFromLeft = &vtMissing,
        /*[in]*/ VARIANT * AddressFromTop = &vtMissing,
        /*[in]*/ VARIANT * ReturnAddressFromLeft = &vtMissing,
        /*[in]*/ VARIANT * ReturnAddressFromTop = &vtMissing,
        /*[in]*/ VARIANT * DefaultFaceUp = &vtMissing,
        /*[in]*/ VARIANT * DefaultOrientation = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_PrintOut2000 (
        /*[in]*/ VARIANT * ExtractAddress = &vtMissing,
        /*[in]*/ VARIANT * Address = &vtMissing,
        /*[in]*/ VARIANT * AutoText = &vtMissing,
        /*[in]*/ VARIANT * OmitReturnAddress = &vtMissing,
        /*[in]*/ VARIANT * ReturnAddress = &vtMissing,
        /*[in]*/ VARIANT * ReturnAutoText = &vtMissing,
        /*[in]*/ VARIANT * PrintBarCode = &vtMissing,
        /*[in]*/ VARIANT * PrintFIMA = &vtMissing,
        /*[in]*/ VARIANT * Size = &vtMissing,
        /*[in]*/ VARIANT * Height = &vtMissing,
        /*[in]*/ VARIANT * Width = &vtMissing,
        /*[in]*/ VARIANT * FeedSource = &vtMissing,
        /*[in]*/ VARIANT * AddressFromLeft = &vtMissing,
        /*[in]*/ VARIANT * AddressFromTop = &vtMissing,
        /*[in]*/ VARIANT * ReturnAddressFromLeft = &vtMissing,
        /*[in]*/ VARIANT * ReturnAddressFromTop = &vtMissing,
        /*[in]*/ VARIANT * DefaultFaceUp = &vtMissing,
        /*[in]*/ VARIANT * DefaultOrientation = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_UpdateDocument ( ) = 0;
      virtual HRESULT __stdcall raw_Options ( ) = 0;
      virtual HRESULT __stdcall get_Vertical (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Vertical (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RecipientNamefromLeft (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RecipientNamefromLeft (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RecipientNamefromTop (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RecipientNamefromTop (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RecipientPostalfromLeft (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RecipientPostalfromLeft (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RecipientPostalfromTop (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RecipientPostalfromTop (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_SenderNamefromLeft (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SenderNamefromLeft (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_SenderNamefromTop (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SenderNamefromTop (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_SenderPostalfromLeft (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SenderPostalfromLeft (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_SenderPostalfromTop (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SenderPostalfromTop (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall raw_Insert (
        /*[in]*/ VARIANT * ExtractAddress = &vtMissing,
        /*[in]*/ VARIANT * Address = &vtMissing,
        /*[in]*/ VARIANT * AutoText = &vtMissing,
        /*[in]*/ VARIANT * OmitReturnAddress = &vtMissing,
        /*[in]*/ VARIANT * ReturnAddress = &vtMissing,
        /*[in]*/ VARIANT * ReturnAutoText = &vtMissing,
        /*[in]*/ VARIANT * PrintBarCode = &vtMissing,
        /*[in]*/ VARIANT * PrintFIMA = &vtMissing,
        /*[in]*/ VARIANT * Size = &vtMissing,
        /*[in]*/ VARIANT * Height = &vtMissing,
        /*[in]*/ VARIANT * Width = &vtMissing,
        /*[in]*/ VARIANT * FeedSource = &vtMissing,
        /*[in]*/ VARIANT * AddressFromLeft = &vtMissing,
        /*[in]*/ VARIANT * AddressFromTop = &vtMissing,
        /*[in]*/ VARIANT * ReturnAddressFromLeft = &vtMissing,
        /*[in]*/ VARIANT * ReturnAddressFromTop = &vtMissing,
        /*[in]*/ VARIANT * DefaultFaceUp = &vtMissing,
        /*[in]*/ VARIANT * DefaultOrientation = &vtMissing,
        /*[in]*/ VARIANT * PrintEPostage = &vtMissing,
        /*[in]*/ VARIANT * Vertical = &vtMissing,
        /*[in]*/ VARIANT * RecipientNamefromLeft = &vtMissing,
        /*[in]*/ VARIANT * RecipientNamefromTop = &vtMissing,
        /*[in]*/ VARIANT * RecipientPostalfromLeft = &vtMissing,
        /*[in]*/ VARIANT * RecipientPostalfromTop = &vtMissing,
        /*[in]*/ VARIANT * SenderNamefromLeft = &vtMissing,
        /*[in]*/ VARIANT * SenderNamefromTop = &vtMissing,
        /*[in]*/ VARIANT * SenderPostalfromLeft = &vtMissing,
        /*[in]*/ VARIANT * SenderPostalfromTop = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_PrintOut (
        /*[in]*/ VARIANT * ExtractAddress = &vtMissing,
        /*[in]*/ VARIANT * Address = &vtMissing,
        /*[in]*/ VARIANT * AutoText = &vtMissing,
        /*[in]*/ VARIANT * OmitReturnAddress = &vtMissing,
        /*[in]*/ VARIANT * ReturnAddress = &vtMissing,
        /*[in]*/ VARIANT * ReturnAutoText = &vtMissing,
        /*[in]*/ VARIANT * PrintBarCode = &vtMissing,
        /*[in]*/ VARIANT * PrintFIMA = &vtMissing,
        /*[in]*/ VARIANT * Size = &vtMissing,
        /*[in]*/ VARIANT * Height = &vtMissing,
        /*[in]*/ VARIANT * Width = &vtMissing,
        /*[in]*/ VARIANT * FeedSource = &vtMissing,
        /*[in]*/ VARIANT * AddressFromLeft = &vtMissing,
        /*[in]*/ VARIANT * AddressFromTop = &vtMissing,
        /*[in]*/ VARIANT * ReturnAddressFromLeft = &vtMissing,
        /*[in]*/ VARIANT * ReturnAddressFromTop = &vtMissing,
        /*[in]*/ VARIANT * DefaultFaceUp = &vtMissing,
        /*[in]*/ VARIANT * DefaultOrientation = &vtMissing,
        /*[in]*/ VARIANT * PrintEPostage = &vtMissing,
        /*[in]*/ VARIANT * Vertical = &vtMissing,
        /*[in]*/ VARIANT * RecipientNamefromLeft = &vtMissing,
        /*[in]*/ VARIANT * RecipientNamefromTop = &vtMissing,
        /*[in]*/ VARIANT * RecipientPostalfromLeft = &vtMissing,
        /*[in]*/ VARIANT * RecipientPostalfromTop = &vtMissing,
        /*[in]*/ VARIANT * SenderNamefromLeft = &vtMissing,
        /*[in]*/ VARIANT * SenderNamefromTop = &vtMissing,
        /*[in]*/ VARIANT * SenderPostalfromLeft = &vtMissing,
        /*[in]*/ VARIANT * SenderPostalfromTop = &vtMissing ) = 0;
};

struct __declspec(uuid("00020981-0000-0000-c000-000000000046"))
Revision : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAuthor))
    _bstr_t Author;
    __declspec(property(get=GetDate))
    DATE Date;
    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetType))
    enum WdRevisionType Type;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetStyle))
    StylePtr Style;
    __declspec(property(get=GetFormatDescription))
    _bstr_t FormatDescription;
    __declspec(property(get=GetMovedRange))
    RangePtr MovedRange;
    __declspec(property(get=GetCells))
    CellsPtr Cells;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetAuthor ( );
    DATE GetDate ( );
    RangePtr GetRange ( );
    enum WdRevisionType GetType ( );
    long GetIndex ( );
    HRESULT Accept ( );
    HRESULT Reject ( );
    StylePtr GetStyle ( );
    _bstr_t GetFormatDescription ( );
    RangePtr GetMovedRange ( );
    CellsPtr GetCells ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Author (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Date (
        /*[out,retval]*/ DATE * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdRevisionType * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Accept ( ) = 0;
      virtual HRESULT __stdcall raw_Reject ( ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ struct Style * * prop ) = 0;
      virtual HRESULT __stdcall get_FormatDescription (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_MovedRange (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Cells (
        /*[out,retval]*/ struct Cells * * prop ) = 0;
};

struct __declspec(uuid("00020980-0000-0000-c000-000000000046"))
Revisions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    RevisionPtr Item (
        long Index );
    HRESULT AcceptAll ( );
    HRESULT RejectAll ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Revision * * prop ) = 0;
      virtual HRESULT __stdcall raw_AcceptAll ( ) = 0;
      virtual HRESULT __stdcall raw_RejectAll ( ) = 0;
};

struct __declspec(uuid("000209d7-0000-0000-c000-000000000046"))
EmailAuthor : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetStyle))
    StylePtr Style;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    StylePtr GetStyle ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ struct Style * * prop ) = 0;
};

struct __declspec(uuid("000209db-0000-0000-c000-000000000046"))
EmailOptions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAutoFormatAsYouTypeApplyHeadings,put=PutAutoFormatAsYouTypeApplyHeadings))
    VARIANT_BOOL AutoFormatAsYouTypeApplyHeadings;
    __declspec(property(get=GetAutoFormatAsYouTypeApplyBorders,put=PutAutoFormatAsYouTypeApplyBorders))
    VARIANT_BOOL AutoFormatAsYouTypeApplyBorders;
    __declspec(property(get=GetAutoFormatAsYouTypeApplyBulletedLists,put=PutAutoFormatAsYouTypeApplyBulletedLists))
    VARIANT_BOOL AutoFormatAsYouTypeApplyBulletedLists;
    __declspec(property(get=GetAutoFormatAsYouTypeApplyNumberedLists,put=PutAutoFormatAsYouTypeApplyNumberedLists))
    VARIANT_BOOL AutoFormatAsYouTypeApplyNumberedLists;
    __declspec(property(get=GetAutoFormatAsYouTypeReplaceQuotes,put=PutAutoFormatAsYouTypeReplaceQuotes))
    VARIANT_BOOL AutoFormatAsYouTypeReplaceQuotes;
    __declspec(property(get=GetAutoFormatAsYouTypeReplaceSymbols,put=PutAutoFormatAsYouTypeReplaceSymbols))
    VARIANT_BOOL AutoFormatAsYouTypeReplaceSymbols;
    __declspec(property(get=GetAutoFormatAsYouTypeReplaceOrdinals,put=PutAutoFormatAsYouTypeReplaceOrdinals))
    VARIANT_BOOL AutoFormatAsYouTypeReplaceOrdinals;
    __declspec(property(get=GetAutoFormatAsYouTypeReplaceFractions,put=PutAutoFormatAsYouTypeReplaceFractions))
    VARIANT_BOOL AutoFormatAsYouTypeReplaceFractions;
    __declspec(property(get=GetAutoFormatAsYouTypeReplacePlainTextEmphasis,put=PutAutoFormatAsYouTypeReplacePlainTextEmphasis))
    VARIANT_BOOL AutoFormatAsYouTypeReplacePlainTextEmphasis;
    __declspec(property(get=GetAutoFormatAsYouTypeFormatListItemBeginning,put=PutAutoFormatAsYouTypeFormatListItemBeginning))
    VARIANT_BOOL AutoFormatAsYouTypeFormatListItemBeginning;
    __declspec(property(get=GetAutoFormatAsYouTypeDefineStyles,put=PutAutoFormatAsYouTypeDefineStyles))
    VARIANT_BOOL AutoFormatAsYouTypeDefineStyles;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetAutoFormatAsYouTypeReplaceHyperlinks,put=PutAutoFormatAsYouTypeReplaceHyperlinks))
    VARIANT_BOOL AutoFormatAsYouTypeReplaceHyperlinks;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetUseThemeStyle,put=PutUseThemeStyle))
    VARIANT_BOOL UseThemeStyle;
    __declspec(property(get=GetMarkCommentsWith,put=PutMarkCommentsWith))
    _bstr_t MarkCommentsWith;
    __declspec(property(get=GetMarkComments,put=PutMarkComments))
    VARIANT_BOOL MarkComments;
    __declspec(property(get=GetEmailSignature))
    EmailSignaturePtr EmailSignature;
    __declspec(property(get=GetComposeStyle))
    StylePtr ComposeStyle;
    __declspec(property(get=GetReplyStyle))
    StylePtr ReplyStyle;
    __declspec(property(get=GetDummy1))
    VARIANT_BOOL Dummy1;
    __declspec(property(get=GetDummy2))
    VARIANT_BOOL Dummy2;
    __declspec(property(get=GetThemeName,put=PutThemeName))
    _bstr_t ThemeName;
    __declspec(property(get=GetNewColorOnReply,put=PutNewColorOnReply))
    VARIANT_BOOL NewColorOnReply;
    __declspec(property(get=GetPlainTextStyle))
    StylePtr PlainTextStyle;
    __declspec(property(get=GetUseThemeStyleOnReply,put=PutUseThemeStyleOnReply))
    VARIANT_BOOL UseThemeStyleOnReply;
    __declspec(property(get=GetAutoFormatAsYouTypeApplyTables,put=PutAutoFormatAsYouTypeApplyTables))
    VARIANT_BOOL AutoFormatAsYouTypeApplyTables;
    __declspec(property(get=GetAutoFormatAsYouTypeApplyFirstIndents,put=PutAutoFormatAsYouTypeApplyFirstIndents))
    VARIANT_BOOL AutoFormatAsYouTypeApplyFirstIndents;
    __declspec(property(get=GetAutoFormatAsYouTypeApplyDates,put=PutAutoFormatAsYouTypeApplyDates))
    VARIANT_BOOL AutoFormatAsYouTypeApplyDates;
    __declspec(property(get=GetAutoFormatAsYouTypeApplyClosings,put=PutAutoFormatAsYouTypeApplyClosings))
    VARIANT_BOOL AutoFormatAsYouTypeApplyClosings;
    __declspec(property(get=GetAutoFormatAsYouTypeMatchParentheses,put=PutAutoFormatAsYouTypeMatchParentheses))
    VARIANT_BOOL AutoFormatAsYouTypeMatchParentheses;
    __declspec(property(get=GetAutoFormatAsYouTypeReplaceFarEastDashes,put=PutAutoFormatAsYouTypeReplaceFarEastDashes))
    VARIANT_BOOL AutoFormatAsYouTypeReplaceFarEastDashes;
    __declspec(property(get=GetAutoFormatAsYouTypeDeleteAutoSpaces,put=PutAutoFormatAsYouTypeDeleteAutoSpaces))
    VARIANT_BOOL AutoFormatAsYouTypeDeleteAutoSpaces;
    __declspec(property(get=GetAutoFormatAsYouTypeInsertClosings,put=PutAutoFormatAsYouTypeInsertClosings))
    VARIANT_BOOL AutoFormatAsYouTypeInsertClosings;
    __declspec(property(get=GetAutoFormatAsYouTypeAutoLetterWizard,put=PutAutoFormatAsYouTypeAutoLetterWizard))
    VARIANT_BOOL AutoFormatAsYouTypeAutoLetterWizard;
    __declspec(property(get=GetAutoFormatAsYouTypeInsertOvers,put=PutAutoFormatAsYouTypeInsertOvers))
    VARIANT_BOOL AutoFormatAsYouTypeInsertOvers;
    __declspec(property(get=GetRelyOnCSS,put=PutRelyOnCSS))
    VARIANT_BOOL RelyOnCSS;
    __declspec(property(get=GetHTMLFidelity,put=PutHTMLFidelity))
    enum WdEmailHTMLFidelity HTMLFidelity;
    __declspec(property(get=GetEmbedSmartTag,put=PutEmbedSmartTag))
    VARIANT_BOOL EmbedSmartTag;
    __declspec(property(get=GetTabIndentKey,put=PutTabIndentKey))
    VARIANT_BOOL TabIndentKey;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetUseThemeStyle ( );
    void PutUseThemeStyle (
        VARIANT_BOOL prop );
    _bstr_t GetMarkCommentsWith ( );
    void PutMarkCommentsWith (
        _bstr_t prop );
    VARIANT_BOOL GetMarkComments ( );
    void PutMarkComments (
        VARIANT_BOOL prop );
    EmailSignaturePtr GetEmailSignature ( );
    StylePtr GetComposeStyle ( );
    StylePtr GetReplyStyle ( );
    _bstr_t GetThemeName ( );
    void PutThemeName (
        _bstr_t prop );
    VARIANT_BOOL GetDummy1 ( );
    VARIANT_BOOL GetDummy2 ( );
    HRESULT Dummy3 ( );
    VARIANT_BOOL GetNewColorOnReply ( );
    void PutNewColorOnReply (
        VARIANT_BOOL prop );
    StylePtr GetPlainTextStyle ( );
    VARIANT_BOOL GetUseThemeStyleOnReply ( );
    void PutUseThemeStyleOnReply (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeApplyHeadings ( );
    void PutAutoFormatAsYouTypeApplyHeadings (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeApplyBorders ( );
    void PutAutoFormatAsYouTypeApplyBorders (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeApplyBulletedLists ( );
    void PutAutoFormatAsYouTypeApplyBulletedLists (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeApplyNumberedLists ( );
    void PutAutoFormatAsYouTypeApplyNumberedLists (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeReplaceQuotes ( );
    void PutAutoFormatAsYouTypeReplaceQuotes (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeReplaceSymbols ( );
    void PutAutoFormatAsYouTypeReplaceSymbols (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeReplaceOrdinals ( );
    void PutAutoFormatAsYouTypeReplaceOrdinals (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeReplaceFractions ( );
    void PutAutoFormatAsYouTypeReplaceFractions (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeReplacePlainTextEmphasis ( );
    void PutAutoFormatAsYouTypeReplacePlainTextEmphasis (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeFormatListItemBeginning ( );
    void PutAutoFormatAsYouTypeFormatListItemBeginning (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeDefineStyles ( );
    void PutAutoFormatAsYouTypeDefineStyles (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeReplaceHyperlinks ( );
    void PutAutoFormatAsYouTypeReplaceHyperlinks (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeApplyTables ( );
    void PutAutoFormatAsYouTypeApplyTables (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeApplyFirstIndents ( );
    void PutAutoFormatAsYouTypeApplyFirstIndents (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeApplyDates ( );
    void PutAutoFormatAsYouTypeApplyDates (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeApplyClosings ( );
    void PutAutoFormatAsYouTypeApplyClosings (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeMatchParentheses ( );
    void PutAutoFormatAsYouTypeMatchParentheses (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeReplaceFarEastDashes ( );
    void PutAutoFormatAsYouTypeReplaceFarEastDashes (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeDeleteAutoSpaces ( );
    void PutAutoFormatAsYouTypeDeleteAutoSpaces (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeInsertClosings ( );
    void PutAutoFormatAsYouTypeInsertClosings (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeAutoLetterWizard ( );
    void PutAutoFormatAsYouTypeAutoLetterWizard (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAutoFormatAsYouTypeInsertOvers ( );
    void PutAutoFormatAsYouTypeInsertOvers (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetRelyOnCSS ( );
    void PutRelyOnCSS (
        VARIANT_BOOL prop );
    enum WdEmailHTMLFidelity GetHTMLFidelity ( );
    void PutHTMLFidelity (
        enum WdEmailHTMLFidelity prop );
    VARIANT_BOOL GetEmbedSmartTag ( );
    void PutEmbedSmartTag (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetTabIndentKey ( );
    void PutTabIndentKey (
        VARIANT_BOOL prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_UseThemeStyle (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseThemeStyle (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_MarkCommentsWith (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_MarkCommentsWith (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_MarkComments (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MarkComments (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_EmailSignature (
        /*[out,retval]*/ struct EmailSignature * * prop ) = 0;
      virtual HRESULT __stdcall get_ComposeStyle (
        /*[out,retval]*/ struct Style * * prop ) = 0;
      virtual HRESULT __stdcall get_ReplyStyle (
        /*[out,retval]*/ struct Style * * prop ) = 0;
      virtual HRESULT __stdcall get_ThemeName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ThemeName (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Dummy1 (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Dummy2 (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_Dummy3 ( ) = 0;
      virtual HRESULT __stdcall get_NewColorOnReply (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_NewColorOnReply (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PlainTextStyle (
        /*[out,retval]*/ struct Style * * prop ) = 0;
      virtual HRESULT __stdcall get_UseThemeStyleOnReply (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_UseThemeStyleOnReply (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyHeadings (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyHeadings (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyBorders (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyBorders (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyBulletedLists (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyBulletedLists (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyNumberedLists (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyNumberedLists (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplaceQuotes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplaceQuotes (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplaceSymbols (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplaceSymbols (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplaceOrdinals (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplaceOrdinals (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplaceFractions (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplaceFractions (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplacePlainTextEmphasis (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplacePlainTextEmphasis (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeFormatListItemBeginning (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeFormatListItemBeginning (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeDefineStyles (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeDefineStyles (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplaceHyperlinks (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplaceHyperlinks (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyTables (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyTables (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyFirstIndents (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyFirstIndents (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyDates (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyDates (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeApplyClosings (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeApplyClosings (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeMatchParentheses (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeMatchParentheses (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeReplaceFarEastDashes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeReplaceFarEastDashes (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeDeleteAutoSpaces (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeDeleteAutoSpaces (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeInsertClosings (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeInsertClosings (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeAutoLetterWizard (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeAutoLetterWizard (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormatAsYouTypeInsertOvers (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormatAsYouTypeInsertOvers (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RelyOnCSS (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_RelyOnCSS (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HTMLFidelity (
        /*[out,retval]*/ enum WdEmailHTMLFidelity * prop ) = 0;
      virtual HRESULT __stdcall put_HTMLFidelity (
        /*[in]*/ enum WdEmailHTMLFidelity prop ) = 0;
      virtual HRESULT __stdcall get_EmbedSmartTag (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_EmbedSmartTag (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_TabIndentKey (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_TabIndentKey (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("000209dd-0000-0000-c000-000000000046"))
Email : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCurrentEmailAuthor))
    EmailAuthorPtr CurrentEmailAuthor;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    EmailAuthorPtr GetCurrentEmailAuthor ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_CurrentEmailAuthor (
        /*[out,retval]*/ struct EmailAuthor * * prop ) = 0;
};

struct __declspec(uuid("00020975-0000-0000-c000-000000000046"))
Selection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetText,put=PutText))
    _bstr_t Text;
    __declspec(property(get=GetBorders,put=PutBorders))
    BordersPtr Borders;
    __declspec(property(get=GetFormattedText,put=PutFormattedText))
    RangePtr FormattedText;
    __declspec(property(get=GetStart,put=PutStart))
    long Start;
    __declspec(property(get=GetEnd,put=PutEnd))
    long End;
    __declspec(property(get=GetFont,put=PutFont))
    _FontPtr Font;
    __declspec(property(get=GetType))
    enum WdSelectionType Type;
    __declspec(property(get=GetStoryType))
    enum WdStoryType StoryType;
    __declspec(property(get=GetPageSetup,put=PutPageSetup))
    PageSetupPtr PageSetup;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetDocument))
    _DocumentPtr Document;
    __declspec(property(get=GetShapeRange))
    ShapeRangePtr ShapeRange;
    __declspec(property(get=GetNoProofing,put=PutNoProofing))
    long NoProofing;
    __declspec(property(get=GetTopLevelTables))
    TablesPtr TopLevelTables;
    __declspec(property(get=GetParagraphFormat,put=PutParagraphFormat))
    _ParagraphFormatPtr ParagraphFormat;
    __declspec(property(get=GetLanguageDetected,put=PutLanguageDetected))
    VARIANT_BOOL LanguageDetected;
    __declspec(property(get=GetFitTextWidth,put=PutFitTextWidth))
    float FitTextWidth;
    __declspec(property(get=GetHTMLDivisions))
    HTMLDivisionsPtr HTMLDivisions;
    __declspec(property(get=GetSmartTags))
    SmartTagsPtr SmartTags;
    __declspec(property(get=GetChildShapeRange))
    ShapeRangePtr ChildShapeRange;
    __declspec(property(get=GetHasChildShapeRange))
    VARIANT_BOOL HasChildShapeRange;
    __declspec(property(get=GetFootnoteOptions))
    FootnoteOptionsPtr FootnoteOptions;
    __declspec(property(get=GetEndnoteOptions))
    EndnoteOptionsPtr EndnoteOptions;
    __declspec(property(get=GetFind))
    FindPtr Find;
    __declspec(property(get=GetStoryLength))
    long StoryLength;
    __declspec(property(get=GetLanguageID,put=PutLanguageID))
    enum WdLanguageID LanguageID;
    __declspec(property(get=GetLanguageIDFarEast,put=PutLanguageIDFarEast))
    enum WdLanguageID LanguageIDFarEast;
    __declspec(property(get=GetLanguageIDOther,put=PutLanguageIDOther))
    enum WdLanguageID LanguageIDOther;
    __declspec(property(get=GetHyperlinks))
    HyperlinksPtr Hyperlinks;
    __declspec(property(get=GetContentControls))
    ContentControlsPtr ContentControls;
    __declspec(property(get=GetParentContentControl))
    ContentControlPtr ParentContentControl;
    __declspec(property(get=GetTables))
    TablesPtr Tables;
    __declspec(property(get=GetWords))
    WordsPtr Words;
    __declspec(property(get=GetSentences))
    SentencesPtr Sentences;
    __declspec(property(get=GetCharacters))
    CharactersPtr Characters;
    __declspec(property(get=GetFootnotes))
    FootnotesPtr Footnotes;
    __declspec(property(get=GetEndnotes))
    EndnotesPtr Endnotes;
    __declspec(property(get=GetComments))
    CommentsPtr Comments;
    __declspec(property(get=GetCells))
    CellsPtr Cells;
    __declspec(property(get=GetSections))
    SectionsPtr Sections;
    __declspec(property(get=GetParagraphs))
    ParagraphsPtr Paragraphs;
    __declspec(property(get=GetShading))
    ShadingPtr Shading;
    __declspec(property(get=GetFields))
    FieldsPtr Fields;
    __declspec(property(get=GetFormFields))
    FormFieldsPtr FormFields;
    __declspec(property(get=GetFrames))
    FramesPtr Frames;
    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetInformation))
    _variant_t Information[];
    __declspec(property(get=GetFlags,put=PutFlags))
    enum WdSelectionFlags Flags;
    __declspec(property(get=GetActive))
    VARIANT_BOOL Active;
    __declspec(property(get=GetStartIsActive,put=PutStartIsActive))
    VARIANT_BOOL StartIsActive;
    __declspec(property(get=GetBookmarks))
    BookmarksPtr Bookmarks;
    __declspec(property(get=GetExtendMode,put=PutExtendMode))
    VARIANT_BOOL ExtendMode;
    __declspec(property(get=GetColumnSelectMode,put=PutColumnSelectMode))
    VARIANT_BOOL ColumnSelectMode;
    __declspec(property(get=GetIPAtEndOfLine))
    VARIANT_BOOL IPAtEndOfLine;
    __declspec(property(get=GetOrientation,put=PutOrientation))
    enum WdTextOrientation Orientation;
    __declspec(property(get=GetInlineShapes))
    InlineShapesPtr InlineShapes;
    __declspec(property(get=GetColumns))
    ColumnsPtr Columns;
    __declspec(property(get=GetRows))
    RowsPtr Rows;
    __declspec(property(get=GetHeaderFooter))
    HeaderFooterPtr HeaderFooter;
    __declspec(property(get=GetIsEndOfRowMark))
    VARIANT_BOOL IsEndOfRowMark;
    __declspec(property(get=GetBookmarkID))
    long BookmarkID;
    __declspec(property(get=GetPreviousBookmarkID))
    long PreviousBookmarkID;
    __declspec(property(get=GetXMLNodes))
    XMLNodesPtr XMLNodes;
    __declspec(property(get=GetXMLParentNode))
    XMLNodePtr XMLParentNode;
    __declspec(property(get=GetEditors))
    EditorsPtr Editors;
    __declspec(property(get=GetXML))
    _bstr_t XML[];
    __declspec(property(get=GetEnhMetaFileBits))
    _variant_t EnhMetaFileBits;
    __declspec(property(get=GetOMaths))
    OMathsPtr OMaths;
    __declspec(property(get=GetWordOpenXML))
    _bstr_t WordOpenXML;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetText ( );
    void PutText (
        _bstr_t prop );
    RangePtr GetFormattedText ( );
    void PutFormattedText (
        struct Range * prop );
    long GetStart ( );
    void PutStart (
        long prop );
    long GetEnd ( );
    void PutEnd (
        long prop );
    _FontPtr GetFont ( );
    void PutFont (
        struct _Font * prop );
    enum WdSelectionType GetType ( );
    enum WdStoryType GetStoryType ( );
    _variant_t GetStyle ( );
    void PutStyle (
        VARIANT * prop );
    TablesPtr GetTables ( );
    WordsPtr GetWords ( );
    SentencesPtr GetSentences ( );
    CharactersPtr GetCharacters ( );
    FootnotesPtr GetFootnotes ( );
    EndnotesPtr GetEndnotes ( );
    CommentsPtr GetComments ( );
    CellsPtr GetCells ( );
    SectionsPtr GetSections ( );
    ParagraphsPtr GetParagraphs ( );
    BordersPtr GetBorders ( );
    void PutBorders (
        struct Borders * prop );
    ShadingPtr GetShading ( );
    FieldsPtr GetFields ( );
    FormFieldsPtr GetFormFields ( );
    FramesPtr GetFrames ( );
    _ParagraphFormatPtr GetParagraphFormat ( );
    void PutParagraphFormat (
        struct _ParagraphFormat * prop );
    PageSetupPtr GetPageSetup ( );
    void PutPageSetup (
        struct PageSetup * prop );
    BookmarksPtr GetBookmarks ( );
    long GetStoryLength ( );
    enum WdLanguageID GetLanguageID ( );
    void PutLanguageID (
        enum WdLanguageID prop );
    enum WdLanguageID GetLanguageIDFarEast ( );
    void PutLanguageIDFarEast (
        enum WdLanguageID prop );
    enum WdLanguageID GetLanguageIDOther ( );
    void PutLanguageIDOther (
        enum WdLanguageID prop );
    HyperlinksPtr GetHyperlinks ( );
    ColumnsPtr GetColumns ( );
    RowsPtr GetRows ( );
    HeaderFooterPtr GetHeaderFooter ( );
    VARIANT_BOOL GetIsEndOfRowMark ( );
    long GetBookmarkID ( );
    long GetPreviousBookmarkID ( );
    FindPtr GetFind ( );
    RangePtr GetRange ( );
    _variant_t GetInformation (
        enum WdInformation Type );
    enum WdSelectionFlags GetFlags ( );
    void PutFlags (
        enum WdSelectionFlags prop );
    VARIANT_BOOL GetActive ( );
    VARIANT_BOOL GetStartIsActive ( );
    void PutStartIsActive (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetIPAtEndOfLine ( );
    VARIANT_BOOL GetExtendMode ( );
    void PutExtendMode (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetColumnSelectMode ( );
    void PutColumnSelectMode (
        VARIANT_BOOL prop );
    enum WdTextOrientation GetOrientation ( );
    void PutOrientation (
        enum WdTextOrientation prop );
    InlineShapesPtr GetInlineShapes ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _DocumentPtr GetDocument ( );
    ShapeRangePtr GetShapeRange ( );
    HRESULT Select ( );
    HRESULT SetRange (
        long Start,
        long End );
    HRESULT Collapse (
        VARIANT * Direction = &vtMissing );
    HRESULT InsertBefore (
        _bstr_t Text );
    HRESULT InsertAfter (
        _bstr_t Text );
    RangePtr Next (
        VARIANT * Unit = &vtMissing,
        VARIANT * Count = &vtMissing );
    RangePtr Previous (
        VARIANT * Unit = &vtMissing,
        VARIANT * Count = &vtMissing );
    long StartOf (
        VARIANT * Unit = &vtMissing,
        VARIANT * Extend = &vtMissing );
    long EndOf (
        VARIANT * Unit = &vtMissing,
        VARIANT * Extend = &vtMissing );
    long Move (
        VARIANT * Unit = &vtMissing,
        VARIANT * Count = &vtMissing );
    long MoveStart (
        VARIANT * Unit = &vtMissing,
        VARIANT * Count = &vtMissing );
    long MoveEnd (
        VARIANT * Unit = &vtMissing,
        VARIANT * Count = &vtMissing );
    long MoveWhile (
        VARIANT * Cset,
        VARIANT * Count = &vtMissing );
    long MoveStartWhile (
        VARIANT * Cset,
        VARIANT * Count = &vtMissing );
    long MoveEndWhile (
        VARIANT * Cset,
        VARIANT * Count = &vtMissing );
    long MoveUntil (
        VARIANT * Cset,
        VARIANT * Count = &vtMissing );
    long MoveStartUntil (
        VARIANT * Cset,
        VARIANT * Count = &vtMissing );
    long MoveEndUntil (
        VARIANT * Cset,
        VARIANT * Count = &vtMissing );
    HRESULT Cut ( );
    HRESULT Copy ( );
    HRESULT Paste ( );
    HRESULT InsertBreak (
        VARIANT * Type = &vtMissing );
    HRESULT InsertFile (
        _bstr_t FileName,
        VARIANT * Range = &vtMissing,
        VARIANT * ConfirmConversions = &vtMissing,
        VARIANT * Link = &vtMissing,
        VARIANT * Attachment = &vtMissing );
    VARIANT_BOOL InStory (
        struct Range * Range );
    VARIANT_BOOL InRange (
        struct Range * Range );
    long Delete (
        VARIANT * Unit = &vtMissing,
        VARIANT * Count = &vtMissing );
    long Expand (
        VARIANT * Unit = &vtMissing );
    HRESULT InsertParagraph ( );
    HRESULT InsertParagraphAfter ( );
    TablePtr ConvertToTableOld (
        VARIANT * Separator = &vtMissing,
        VARIANT * NumRows = &vtMissing,
        VARIANT * NumColumns = &vtMissing,
        VARIANT * InitialColumnWidth = &vtMissing,
        VARIANT * Format = &vtMissing,
        VARIANT * ApplyBorders = &vtMissing,
        VARIANT * ApplyShading = &vtMissing,
        VARIANT * ApplyFont = &vtMissing,
        VARIANT * ApplyColor = &vtMissing,
        VARIANT * ApplyHeadingRows = &vtMissing,
        VARIANT * ApplyLastRow = &vtMissing,
        VARIANT * ApplyFirstColumn = &vtMissing,
        VARIANT * ApplyLastColumn = &vtMissing,
        VARIANT * AutoFit = &vtMissing );
    HRESULT InsertDateTimeOld (
        VARIANT * DateTimeFormat = &vtMissing,
        VARIANT * InsertAsField = &vtMissing,
        VARIANT * InsertAsFullWidth = &vtMissing );
    HRESULT InsertSymbol (
        long CharacterNumber,
        VARIANT * Font = &vtMissing,
        VARIANT * Unicode = &vtMissing,
        VARIANT * Bias = &vtMissing );
    HRESULT InsertCrossReference_2002 (
        VARIANT * ReferenceType,
        enum WdReferenceKind ReferenceKind,
        VARIANT * ReferenceItem,
        VARIANT * InsertAsHyperlink = &vtMissing,
        VARIANT * IncludePosition = &vtMissing );
    HRESULT InsertCaptionXP (
        VARIANT * Label,
        VARIANT * Title = &vtMissing,
        VARIANT * TitleAutoText = &vtMissing,
        VARIANT * Position = &vtMissing );
    HRESULT CopyAsPicture ( );
    HRESULT SortOld (
        VARIANT * ExcludeHeader = &vtMissing,
        VARIANT * FieldNumber = &vtMissing,
        VARIANT * SortFieldType = &vtMissing,
        VARIANT * SortOrder = &vtMissing,
        VARIANT * FieldNumber2 = &vtMissing,
        VARIANT * SortFieldType2 = &vtMissing,
        VARIANT * SortOrder2 = &vtMissing,
        VARIANT * FieldNumber3 = &vtMissing,
        VARIANT * SortFieldType3 = &vtMissing,
        VARIANT * SortOrder3 = &vtMissing,
        VARIANT * SortColumn = &vtMissing,
        VARIANT * Separator = &vtMissing,
        VARIANT * CaseSensitive = &vtMissing,
        VARIANT * LanguageID = &vtMissing );
    HRESULT SortAscending ( );
    HRESULT SortDescending ( );
    VARIANT_BOOL IsEqual (
        struct Range * Range );
    float Calculate ( );
    RangePtr GoTo (
        VARIANT * What = &vtMissing,
        VARIANT * Which = &vtMissing,
        VARIANT * Count = &vtMissing,
        VARIANT * Name = &vtMissing );
    RangePtr GoToNext (
        enum WdGoToItem What );
    RangePtr GoToPrevious (
        enum WdGoToItem What );
    HRESULT PasteSpecial (
        VARIANT * IconIndex = &vtMissing,
        VARIANT * Link = &vtMissing,
        VARIANT * Placement = &vtMissing,
        VARIANT * DisplayAsIcon = &vtMissing,
        VARIANT * DataType = &vtMissing,
        VARIANT * IconFileName = &vtMissing,
        VARIANT * IconLabel = &vtMissing );
    FieldPtr PreviousField ( );
    FieldPtr NextField ( );
    HRESULT InsertParagraphBefore ( );
    HRESULT InsertCells (
        VARIANT * ShiftCells = &vtMissing );
    HRESULT Extend (
        VARIANT * Character = &vtMissing );
    HRESULT Shrink ( );
    long MoveLeft (
        VARIANT * Unit = &vtMissing,
        VARIANT * Count = &vtMissing,
        VARIANT * Extend = &vtMissing );
    long MoveRight (
        VARIANT * Unit = &vtMissing,
        VARIANT * Count = &vtMissing,
        VARIANT * Extend = &vtMissing );
    long MoveUp (
        VARIANT * Unit = &vtMissing,
        VARIANT * Count = &vtMissing,
        VARIANT * Extend = &vtMissing );
    long MoveDown (
        VARIANT * Unit = &vtMissing,
        VARIANT * Count = &vtMissing,
        VARIANT * Extend = &vtMissing );
    long HomeKey (
        VARIANT * Unit = &vtMissing,
        VARIANT * Extend = &vtMissing );
    long EndKey (
        VARIANT * Unit = &vtMissing,
        VARIANT * Extend = &vtMissing );
    HRESULT EscapeKey ( );
    HRESULT TypeText (
        _bstr_t Text );
    HRESULT CopyFormat ( );
    HRESULT PasteFormat ( );
    HRESULT TypeParagraph ( );
    HRESULT TypeBackspace ( );
    HRESULT NextSubdocument ( );
    HRESULT PreviousSubdocument ( );
    HRESULT SelectColumn ( );
    HRESULT SelectCurrentFont ( );
    HRESULT SelectCurrentAlignment ( );
    HRESULT SelectCurrentSpacing ( );
    HRESULT SelectCurrentIndent ( );
    HRESULT SelectCurrentTabs ( );
    HRESULT SelectCurrentColor ( );
    HRESULT CreateTextbox ( );
    HRESULT WholeStory ( );
    HRESULT SelectRow ( );
    HRESULT SplitTable ( );
    HRESULT InsertRows (
        VARIANT * NumRows = &vtMissing );
    HRESULT InsertColumns ( );
    HRESULT InsertFormula (
        VARIANT * Formula = &vtMissing,
        VARIANT * NumberFormat = &vtMissing );
    RevisionPtr NextRevision (
        VARIANT * Wrap = &vtMissing );
    RevisionPtr PreviousRevision (
        VARIANT * Wrap = &vtMissing );
    HRESULT PasteAsNestedTable ( );
    AutoTextEntryPtr CreateAutoTextEntry (
        _bstr_t Name,
        _bstr_t StyleName );
    HRESULT DetectLanguage ( );
    HRESULT SelectCell ( );
    HRESULT InsertRowsBelow (
        VARIANT * NumRows = &vtMissing );
    HRESULT InsertColumnsRight ( );
    HRESULT InsertRowsAbove (
        VARIANT * NumRows = &vtMissing );
    HRESULT RtlRun ( );
    HRESULT LtrRun ( );
    HRESULT BoldRun ( );
    HRESULT ItalicRun ( );
    HRESULT RtlPara ( );
    HRESULT LtrPara ( );
    HRESULT InsertDateTime (
        VARIANT * DateTimeFormat = &vtMissing,
        VARIANT * InsertAsField = &vtMissing,
        VARIANT * InsertAsFullWidth = &vtMissing,
        VARIANT * DateLanguage = &vtMissing,
        VARIANT * CalendarType = &vtMissing );
    HRESULT Sort2000 (
        VARIANT * ExcludeHeader = &vtMissing,
        VARIANT * FieldNumber = &vtMissing,
        VARIANT * SortFieldType = &vtMissing,
        VARIANT * SortOrder = &vtMissing,
        VARIANT * FieldNumber2 = &vtMissing,
        VARIANT * SortFieldType2 = &vtMissing,
        VARIANT * SortOrder2 = &vtMissing,
        VARIANT * FieldNumber3 = &vtMissing,
        VARIANT * SortFieldType3 = &vtMissing,
        VARIANT * SortOrder3 = &vtMissing,
        VARIANT * SortColumn = &vtMissing,
        VARIANT * Separator = &vtMissing,
        VARIANT * CaseSensitive = &vtMissing,
        VARIANT * BidiSort = &vtMissing,
        VARIANT * IgnoreThe = &vtMissing,
        VARIANT * IgnoreKashida = &vtMissing,
        VARIANT * IgnoreDiacritics = &vtMissing,
        VARIANT * IgnoreHe = &vtMissing,
        VARIANT * LanguageID = &vtMissing );
    TablePtr ConvertToTable (
        VARIANT * Separator = &vtMissing,
        VARIANT * NumRows = &vtMissing,
        VARIANT * NumColumns = &vtMissing,
        VARIANT * InitialColumnWidth = &vtMissing,
        VARIANT * Format = &vtMissing,
        VARIANT * ApplyBorders = &vtMissing,
        VARIANT * ApplyShading = &vtMissing,
        VARIANT * ApplyFont = &vtMissing,
        VARIANT * ApplyColor = &vtMissing,
        VARIANT * ApplyHeadingRows = &vtMissing,
        VARIANT * ApplyLastRow = &vtMissing,
        VARIANT * ApplyFirstColumn = &vtMissing,
        VARIANT * ApplyLastColumn = &vtMissing,
        VARIANT * AutoFit = &vtMissing,
        VARIANT * AutoFitBehavior = &vtMissing,
        VARIANT * DefaultTableBehavior = &vtMissing );
    long GetNoProofing ( );
    void PutNoProofing (
        long prop );
    TablesPtr GetTopLevelTables ( );
    VARIANT_BOOL GetLanguageDetected ( );
    void PutLanguageDetected (
        VARIANT_BOOL prop );
    float GetFitTextWidth ( );
    void PutFitTextWidth (
        float prop );
    HRESULT ClearFormatting ( );
    HRESULT PasteAppendTable ( );
    HTMLDivisionsPtr GetHTMLDivisions ( );
    SmartTagsPtr GetSmartTags ( );
    ShapeRangePtr GetChildShapeRange ( );
    VARIANT_BOOL GetHasChildShapeRange ( );
    FootnoteOptionsPtr GetFootnoteOptions ( );
    EndnoteOptionsPtr GetEndnoteOptions ( );
    HRESULT ToggleCharacterCode ( );
    HRESULT PasteAndFormat (
        enum WdRecoveryType Type );
    HRESULT PasteExcelTable (
        VARIANT_BOOL LinkedToExcel,
        VARIANT_BOOL WordFormatting,
        VARIANT_BOOL RTF );
    HRESULT ShrinkDiscontiguousSelection ( );
    HRESULT InsertStyleSeparator ( );
    HRESULT Sort (
        VARIANT * ExcludeHeader = &vtMissing,
        VARIANT * FieldNumber = &vtMissing,
        VARIANT * SortFieldType = &vtMissing,
        VARIANT * SortOrder = &vtMissing,
        VARIANT * FieldNumber2 = &vtMissing,
        VARIANT * SortFieldType2 = &vtMissing,
        VARIANT * SortOrder2 = &vtMissing,
        VARIANT * FieldNumber3 = &vtMissing,
        VARIANT * SortFieldType3 = &vtMissing,
        VARIANT * SortOrder3 = &vtMissing,
        VARIANT * SortColumn = &vtMissing,
        VARIANT * Separator = &vtMissing,
        VARIANT * CaseSensitive = &vtMissing,
        VARIANT * BidiSort = &vtMissing,
        VARIANT * IgnoreThe = &vtMissing,
        VARIANT * IgnoreKashida = &vtMissing,
        VARIANT * IgnoreDiacritics = &vtMissing,
        VARIANT * IgnoreHe = &vtMissing,
        VARIANT * LanguageID = &vtMissing,
        VARIANT * SubFieldNumber = &vtMissing,
        VARIANT * SubFieldNumber2 = &vtMissing,
        VARIANT * SubFieldNumber3 = &vtMissing );
    XMLNodesPtr GetXMLNodes ( );
    XMLNodePtr GetXMLParentNode ( );
    EditorsPtr GetEditors ( );
    _bstr_t GetXML (
        VARIANT_BOOL DataOnly );
    _variant_t GetEnhMetaFileBits ( );
    RangePtr GoToEditableRange (
        VARIANT * EditorID = &vtMissing );
    HRESULT InsertXML (
        _bstr_t XML,
        VARIANT * Transform = &vtMissing );
    HRESULT InsertCaption (
        VARIANT * Label,
        VARIANT * Title = &vtMissing,
        VARIANT * TitleAutoText = &vtMissing,
        VARIANT * Position = &vtMissing,
        VARIANT * ExcludeLabel = &vtMissing );
    HRESULT InsertCrossReference (
        VARIANT * ReferenceType,
        enum WdReferenceKind ReferenceKind,
        VARIANT * ReferenceItem,
        VARIANT * InsertAsHyperlink = &vtMissing,
        VARIANT * IncludePosition = &vtMissing,
        VARIANT * SeparateNumbers = &vtMissing,
        VARIANT * SeparatorString = &vtMissing );
    OMathsPtr GetOMaths ( );
    _bstr_t GetWordOpenXML ( );
    HRESULT ClearParagraphStyle ( );
    HRESULT ClearCharacterAllFormatting ( );
    HRESULT ClearCharacterStyle ( );
    HRESULT ClearCharacterDirectFormatting ( );
    ContentControlsPtr GetContentControls ( );
    ContentControlPtr GetParentContentControl ( );
    HRESULT ExportAsFixedFormat (
        _bstr_t OutputFileName,
        enum WdExportFormat ExportFormat,
        VARIANT_BOOL OpenAfterExport,
        enum WdExportOptimizeFor OptimizeFor,
        VARIANT_BOOL ExportCurrentPage,
        enum WdExportItem Item,
        VARIANT_BOOL IncludeDocProps,
        VARIANT_BOOL KeepIRM,
        enum WdExportCreateBookmarks CreateBookmarks,
        VARIANT_BOOL DocStructureTags,
        VARIANT_BOOL BitmapMissingFonts,
        VARIANT_BOOL UseISO19005_1,
        VARIANT * FixedFormatExtClassPtr = &vtMissing );
    HRESULT ReadingModeGrowFont ( );
    HRESULT ReadingModeShrinkFont ( );
    HRESULT ClearParagraphAllFormatting ( );
    HRESULT ClearParagraphDirectFormatting ( );
    HRESULT InsertNewPage ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_FormattedText (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall put_FormattedText (
        /*[in]*/ struct Range * prop ) = 0;
      virtual HRESULT __stdcall get_Start (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_Start (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_End (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_End (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Font (
        /*[out,retval]*/ struct _Font * * prop ) = 0;
      virtual HRESULT __stdcall put_Font (
        /*[in]*/ struct _Font * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdSelectionType * prop ) = 0;
      virtual HRESULT __stdcall get_StoryType (
        /*[out,retval]*/ enum WdStoryType * prop ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Tables (
        /*[out,retval]*/ struct Tables * * prop ) = 0;
      virtual HRESULT __stdcall get_Words (
        /*[out,retval]*/ struct Words * * prop ) = 0;
      virtual HRESULT __stdcall get_Sentences (
        /*[out,retval]*/ struct Sentences * * prop ) = 0;
      virtual HRESULT __stdcall get_Characters (
        /*[out,retval]*/ struct Characters * * prop ) = 0;
      virtual HRESULT __stdcall get_Footnotes (
        /*[out,retval]*/ struct Footnotes * * prop ) = 0;
      virtual HRESULT __stdcall get_Endnotes (
        /*[out,retval]*/ struct Endnotes * * prop ) = 0;
      virtual HRESULT __stdcall get_Comments (
        /*[out,retval]*/ struct Comments * * prop ) = 0;
      virtual HRESULT __stdcall get_Cells (
        /*[out,retval]*/ struct Cells * * prop ) = 0;
      virtual HRESULT __stdcall get_Sections (
        /*[out,retval]*/ struct Sections * * prop ) = 0;
      virtual HRESULT __stdcall get_Paragraphs (
        /*[out,retval]*/ struct Paragraphs * * prop ) = 0;
      virtual HRESULT __stdcall get_Borders (
        /*[out,retval]*/ struct Borders * * prop ) = 0;
      virtual HRESULT __stdcall put_Borders (
        /*[in]*/ struct Borders * prop ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ struct Shading * * prop ) = 0;
      virtual HRESULT __stdcall get_Fields (
        /*[out,retval]*/ struct Fields * * prop ) = 0;
      virtual HRESULT __stdcall get_FormFields (
        /*[out,retval]*/ struct FormFields * * prop ) = 0;
      virtual HRESULT __stdcall get_Frames (
        /*[out,retval]*/ struct Frames * * prop ) = 0;
      virtual HRESULT __stdcall get_ParagraphFormat (
        /*[out,retval]*/ struct _ParagraphFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_ParagraphFormat (
        /*[in]*/ struct _ParagraphFormat * prop ) = 0;
      virtual HRESULT __stdcall get_PageSetup (
        /*[out,retval]*/ struct PageSetup * * prop ) = 0;
      virtual HRESULT __stdcall put_PageSetup (
        /*[in]*/ struct PageSetup * prop ) = 0;
      virtual HRESULT __stdcall get_Bookmarks (
        /*[out,retval]*/ struct Bookmarks * * prop ) = 0;
      virtual HRESULT __stdcall get_StoryLength (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageID (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageID (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_LanguageIDFarEast (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageIDFarEast (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_LanguageIDOther (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageIDOther (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall get_Hyperlinks (
        /*[out,retval]*/ struct Hyperlinks * * prop ) = 0;
      virtual HRESULT __stdcall get_Columns (
        /*[out,retval]*/ struct Columns * * prop ) = 0;
      virtual HRESULT __stdcall get_Rows (
        /*[out,retval]*/ struct Rows * * prop ) = 0;
      virtual HRESULT __stdcall get_HeaderFooter (
        /*[out,retval]*/ struct HeaderFooter * * prop ) = 0;
      virtual HRESULT __stdcall get_IsEndOfRowMark (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_BookmarkID (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_PreviousBookmarkID (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Find (
        /*[out,retval]*/ struct Find * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Information (
        /*[in]*/ enum WdInformation Type,
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Flags (
        /*[out,retval]*/ enum WdSelectionFlags * prop ) = 0;
      virtual HRESULT __stdcall put_Flags (
        /*[in]*/ enum WdSelectionFlags prop ) = 0;
      virtual HRESULT __stdcall get_Active (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_StartIsActive (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_StartIsActive (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_IPAtEndOfLine (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_ExtendMode (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ExtendMode (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ColumnSelectMode (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ColumnSelectMode (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ enum WdTextOrientation * prop ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ enum WdTextOrientation prop ) = 0;
      virtual HRESULT __stdcall get_InlineShapes (
        /*[out,retval]*/ struct InlineShapes * * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall get_ShapeRange (
        /*[out,retval]*/ struct ShapeRange * * prop ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
      virtual HRESULT __stdcall raw_SetRange (
        /*[in]*/ long Start,
        /*[in]*/ long End ) = 0;
      virtual HRESULT __stdcall raw_Collapse (
        /*[in]*/ VARIANT * Direction = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_InsertBefore (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall raw_InsertAfter (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall raw_Next (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall raw_Previous (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall raw_StartOf (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Extend,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_EndOf (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Extend,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_MoveStart (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_MoveEnd (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_MoveWhile (
        /*[in]*/ VARIANT * Cset,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_MoveStartWhile (
        /*[in]*/ VARIANT * Cset,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_MoveEndWhile (
        /*[in]*/ VARIANT * Cset,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_MoveUntil (
        /*[in]*/ VARIANT * Cset,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_MoveStartUntil (
        /*[in]*/ VARIANT * Cset,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_MoveEndUntil (
        /*[in]*/ VARIANT * Cset,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Cut ( ) = 0;
      virtual HRESULT __stdcall raw_Copy ( ) = 0;
      virtual HRESULT __stdcall raw_Paste ( ) = 0;
      virtual HRESULT __stdcall raw_InsertBreak (
        /*[in]*/ VARIANT * Type = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_InsertFile (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT * Range = &vtMissing,
        /*[in]*/ VARIANT * ConfirmConversions = &vtMissing,
        /*[in]*/ VARIANT * Link = &vtMissing,
        /*[in]*/ VARIANT * Attachment = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_InStory (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_InRange (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Expand (
        /*[in]*/ VARIANT * Unit,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_InsertParagraph ( ) = 0;
      virtual HRESULT __stdcall raw_InsertParagraphAfter ( ) = 0;
      virtual HRESULT __stdcall raw_ConvertToTableOld (
        /*[in]*/ VARIANT * Separator,
        /*[in]*/ VARIANT * NumRows,
        /*[in]*/ VARIANT * NumColumns,
        /*[in]*/ VARIANT * InitialColumnWidth,
        /*[in]*/ VARIANT * Format,
        /*[in]*/ VARIANT * ApplyBorders,
        /*[in]*/ VARIANT * ApplyShading,
        /*[in]*/ VARIANT * ApplyFont,
        /*[in]*/ VARIANT * ApplyColor,
        /*[in]*/ VARIANT * ApplyHeadingRows,
        /*[in]*/ VARIANT * ApplyLastRow,
        /*[in]*/ VARIANT * ApplyFirstColumn,
        /*[in]*/ VARIANT * ApplyLastColumn,
        /*[in]*/ VARIANT * AutoFit,
        /*[out,retval]*/ struct Table * * prop ) = 0;
      virtual HRESULT __stdcall raw_InsertDateTimeOld (
        /*[in]*/ VARIANT * DateTimeFormat = &vtMissing,
        /*[in]*/ VARIANT * InsertAsField = &vtMissing,
        /*[in]*/ VARIANT * InsertAsFullWidth = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_InsertSymbol (
        /*[in]*/ long CharacterNumber,
        /*[in]*/ VARIANT * Font = &vtMissing,
        /*[in]*/ VARIANT * Unicode = &vtMissing,
        /*[in]*/ VARIANT * Bias = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_InsertCrossReference_2002 (
        /*[in]*/ VARIANT * ReferenceType,
        /*[in]*/ enum WdReferenceKind ReferenceKind,
        /*[in]*/ VARIANT * ReferenceItem,
        /*[in]*/ VARIANT * InsertAsHyperlink = &vtMissing,
        /*[in]*/ VARIANT * IncludePosition = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_InsertCaptionXP (
        /*[in]*/ VARIANT * Label,
        /*[in]*/ VARIANT * Title = &vtMissing,
        /*[in]*/ VARIANT * TitleAutoText = &vtMissing,
        /*[in]*/ VARIANT * Position = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_CopyAsPicture ( ) = 0;
      virtual HRESULT __stdcall raw_SortOld (
        /*[in]*/ VARIANT * ExcludeHeader = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType = &vtMissing,
        /*[in]*/ VARIANT * SortOrder = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber2 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType2 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder2 = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber3 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType3 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder3 = &vtMissing,
        /*[in]*/ VARIANT * SortColumn = &vtMissing,
        /*[in]*/ VARIANT * Separator = &vtMissing,
        /*[in]*/ VARIANT * CaseSensitive = &vtMissing,
        /*[in]*/ VARIANT * LanguageID = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_SortAscending ( ) = 0;
      virtual HRESULT __stdcall raw_SortDescending ( ) = 0;
      virtual HRESULT __stdcall raw_IsEqual (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_Calculate (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall raw_GoTo (
        /*[in]*/ VARIANT * What,
        /*[in]*/ VARIANT * Which,
        /*[in]*/ VARIANT * Count,
        /*[in]*/ VARIANT * Name,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall raw_GoToNext (
        /*[in]*/ enum WdGoToItem What,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall raw_GoToPrevious (
        /*[in]*/ enum WdGoToItem What,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall raw_PasteSpecial (
        /*[in]*/ VARIANT * IconIndex = &vtMissing,
        /*[in]*/ VARIANT * Link = &vtMissing,
        /*[in]*/ VARIANT * Placement = &vtMissing,
        /*[in]*/ VARIANT * DisplayAsIcon = &vtMissing,
        /*[in]*/ VARIANT * DataType = &vtMissing,
        /*[in]*/ VARIANT * IconFileName = &vtMissing,
        /*[in]*/ VARIANT * IconLabel = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_PreviousField (
        /*[out,retval]*/ struct Field * * prop ) = 0;
      virtual HRESULT __stdcall raw_NextField (
        /*[out,retval]*/ struct Field * * prop ) = 0;
      virtual HRESULT __stdcall raw_InsertParagraphBefore ( ) = 0;
      virtual HRESULT __stdcall raw_InsertCells (
        /*[in]*/ VARIANT * ShiftCells = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Extend (
        /*[in]*/ VARIANT * Character = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Shrink ( ) = 0;
      virtual HRESULT __stdcall raw_MoveLeft (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[in]*/ VARIANT * Extend,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_MoveRight (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[in]*/ VARIANT * Extend,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_MoveUp (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[in]*/ VARIANT * Extend,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_MoveDown (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Count,
        /*[in]*/ VARIANT * Extend,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_HomeKey (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Extend,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_EndKey (
        /*[in]*/ VARIANT * Unit,
        /*[in]*/ VARIANT * Extend,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_EscapeKey ( ) = 0;
      virtual HRESULT __stdcall raw_TypeText (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall raw_CopyFormat ( ) = 0;
      virtual HRESULT __stdcall raw_PasteFormat ( ) = 0;
      virtual HRESULT __stdcall raw_TypeParagraph ( ) = 0;
      virtual HRESULT __stdcall raw_TypeBackspace ( ) = 0;
      virtual HRESULT __stdcall raw_NextSubdocument ( ) = 0;
      virtual HRESULT __stdcall raw_PreviousSubdocument ( ) = 0;
      virtual HRESULT __stdcall raw_SelectColumn ( ) = 0;
      virtual HRESULT __stdcall raw_SelectCurrentFont ( ) = 0;
      virtual HRESULT __stdcall raw_SelectCurrentAlignment ( ) = 0;
      virtual HRESULT __stdcall raw_SelectCurrentSpacing ( ) = 0;
      virtual HRESULT __stdcall raw_SelectCurrentIndent ( ) = 0;
      virtual HRESULT __stdcall raw_SelectCurrentTabs ( ) = 0;
      virtual HRESULT __stdcall raw_SelectCurrentColor ( ) = 0;
      virtual HRESULT __stdcall raw_CreateTextbox ( ) = 0;
      virtual HRESULT __stdcall raw_WholeStory ( ) = 0;
      virtual HRESULT __stdcall raw_SelectRow ( ) = 0;
      virtual HRESULT __stdcall raw_SplitTable ( ) = 0;
      virtual HRESULT __stdcall raw_InsertRows (
        /*[in]*/ VARIANT * NumRows = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_InsertColumns ( ) = 0;
      virtual HRESULT __stdcall raw_InsertFormula (
        /*[in]*/ VARIANT * Formula = &vtMissing,
        /*[in]*/ VARIANT * NumberFormat = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_NextRevision (
        /*[in]*/ VARIANT * Wrap,
        /*[out,retval]*/ struct Revision * * prop ) = 0;
      virtual HRESULT __stdcall raw_PreviousRevision (
        /*[in]*/ VARIANT * Wrap,
        /*[out,retval]*/ struct Revision * * prop ) = 0;
      virtual HRESULT __stdcall raw_PasteAsNestedTable ( ) = 0;
      virtual HRESULT __stdcall raw_CreateAutoTextEntry (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR StyleName,
        /*[out,retval]*/ struct AutoTextEntry * * prop ) = 0;
      virtual HRESULT __stdcall raw_DetectLanguage ( ) = 0;
      virtual HRESULT __stdcall raw_SelectCell ( ) = 0;
      virtual HRESULT __stdcall raw_InsertRowsBelow (
        /*[in]*/ VARIANT * NumRows = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_InsertColumnsRight ( ) = 0;
      virtual HRESULT __stdcall raw_InsertRowsAbove (
        /*[in]*/ VARIANT * NumRows = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_RtlRun ( ) = 0;
      virtual HRESULT __stdcall raw_LtrRun ( ) = 0;
      virtual HRESULT __stdcall raw_BoldRun ( ) = 0;
      virtual HRESULT __stdcall raw_ItalicRun ( ) = 0;
      virtual HRESULT __stdcall raw_RtlPara ( ) = 0;
      virtual HRESULT __stdcall raw_LtrPara ( ) = 0;
      virtual HRESULT __stdcall raw_InsertDateTime (
        /*[in]*/ VARIANT * DateTimeFormat = &vtMissing,
        /*[in]*/ VARIANT * InsertAsField = &vtMissing,
        /*[in]*/ VARIANT * InsertAsFullWidth = &vtMissing,
        /*[in]*/ VARIANT * DateLanguage = &vtMissing,
        /*[in]*/ VARIANT * CalendarType = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Sort2000 (
        /*[in]*/ VARIANT * ExcludeHeader = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType = &vtMissing,
        /*[in]*/ VARIANT * SortOrder = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber2 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType2 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder2 = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber3 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType3 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder3 = &vtMissing,
        /*[in]*/ VARIANT * SortColumn = &vtMissing,
        /*[in]*/ VARIANT * Separator = &vtMissing,
        /*[in]*/ VARIANT * CaseSensitive = &vtMissing,
        /*[in]*/ VARIANT * BidiSort = &vtMissing,
        /*[in]*/ VARIANT * IgnoreThe = &vtMissing,
        /*[in]*/ VARIANT * IgnoreKashida = &vtMissing,
        /*[in]*/ VARIANT * IgnoreDiacritics = &vtMissing,
        /*[in]*/ VARIANT * IgnoreHe = &vtMissing,
        /*[in]*/ VARIANT * LanguageID = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_ConvertToTable (
        /*[in]*/ VARIANT * Separator,
        /*[in]*/ VARIANT * NumRows,
        /*[in]*/ VARIANT * NumColumns,
        /*[in]*/ VARIANT * InitialColumnWidth,
        /*[in]*/ VARIANT * Format,
        /*[in]*/ VARIANT * ApplyBorders,
        /*[in]*/ VARIANT * ApplyShading,
        /*[in]*/ VARIANT * ApplyFont,
        /*[in]*/ VARIANT * ApplyColor,
        /*[in]*/ VARIANT * ApplyHeadingRows,
        /*[in]*/ VARIANT * ApplyLastRow,
        /*[in]*/ VARIANT * ApplyFirstColumn,
        /*[in]*/ VARIANT * ApplyLastColumn,
        /*[in]*/ VARIANT * AutoFit,
        /*[in]*/ VARIANT * AutoFitBehavior,
        /*[in]*/ VARIANT * DefaultTableBehavior,
        /*[out,retval]*/ struct Table * * prop ) = 0;
      virtual HRESULT __stdcall get_NoProofing (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_NoProofing (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_TopLevelTables (
        /*[out,retval]*/ struct Tables * * prop ) = 0;
      virtual HRESULT __stdcall get_LanguageDetected (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_LanguageDetected (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_FitTextWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_FitTextWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall raw_ClearFormatting ( ) = 0;
      virtual HRESULT __stdcall raw_PasteAppendTable ( ) = 0;
      virtual HRESULT __stdcall get_HTMLDivisions (
        /*[out,retval]*/ struct HTMLDivisions * * prop ) = 0;
      virtual HRESULT __stdcall get_SmartTags (
        /*[out,retval]*/ struct SmartTags * * prop ) = 0;
      virtual HRESULT __stdcall get_ChildShapeRange (
        /*[out,retval]*/ struct ShapeRange * * prop ) = 0;
      virtual HRESULT __stdcall get_HasChildShapeRange (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_FootnoteOptions (
        /*[out,retval]*/ struct FootnoteOptions * * prop ) = 0;
      virtual HRESULT __stdcall get_EndnoteOptions (
        /*[out,retval]*/ struct EndnoteOptions * * prop ) = 0;
      virtual HRESULT __stdcall raw_ToggleCharacterCode ( ) = 0;
      virtual HRESULT __stdcall raw_PasteAndFormat (
        /*[in]*/ enum WdRecoveryType Type ) = 0;
      virtual HRESULT __stdcall raw_PasteExcelTable (
        /*[in]*/ VARIANT_BOOL LinkedToExcel,
        /*[in]*/ VARIANT_BOOL WordFormatting,
        /*[in]*/ VARIANT_BOOL RTF ) = 0;
      virtual HRESULT __stdcall raw_ShrinkDiscontiguousSelection ( ) = 0;
      virtual HRESULT __stdcall raw_InsertStyleSeparator ( ) = 0;
      virtual HRESULT __stdcall raw_Sort (
        /*[in]*/ VARIANT * ExcludeHeader = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType = &vtMissing,
        /*[in]*/ VARIANT * SortOrder = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber2 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType2 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder2 = &vtMissing,
        /*[in]*/ VARIANT * FieldNumber3 = &vtMissing,
        /*[in]*/ VARIANT * SortFieldType3 = &vtMissing,
        /*[in]*/ VARIANT * SortOrder3 = &vtMissing,
        /*[in]*/ VARIANT * SortColumn = &vtMissing,
        /*[in]*/ VARIANT * Separator = &vtMissing,
        /*[in]*/ VARIANT * CaseSensitive = &vtMissing,
        /*[in]*/ VARIANT * BidiSort = &vtMissing,
        /*[in]*/ VARIANT * IgnoreThe = &vtMissing,
        /*[in]*/ VARIANT * IgnoreKashida = &vtMissing,
        /*[in]*/ VARIANT * IgnoreDiacritics = &vtMissing,
        /*[in]*/ VARIANT * IgnoreHe = &vtMissing,
        /*[in]*/ VARIANT * LanguageID = &vtMissing,
        /*[in]*/ VARIANT * SubFieldNumber = &vtMissing,
        /*[in]*/ VARIANT * SubFieldNumber2 = &vtMissing,
        /*[in]*/ VARIANT * SubFieldNumber3 = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_XMLNodes (
        /*[out,retval]*/ struct XMLNodes * * prop ) = 0;
      virtual HRESULT __stdcall get_XMLParentNode (
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
      virtual HRESULT __stdcall get_Editors (
        /*[out,retval]*/ struct Editors * * prop ) = 0;
      virtual HRESULT __stdcall get_XML (
        /*[in]*/ VARIANT_BOOL DataOnly,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_EnhMetaFileBits (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall raw_GoToEditableRange (
        /*[in]*/ VARIANT * EditorID,
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall raw_InsertXML (
        /*[in]*/ BSTR XML,
        /*[in]*/ VARIANT * Transform = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_InsertCaption (
        /*[in]*/ VARIANT * Label,
        /*[in]*/ VARIANT * Title = &vtMissing,
        /*[in]*/ VARIANT * TitleAutoText = &vtMissing,
        /*[in]*/ VARIANT * Position = &vtMissing,
        /*[in]*/ VARIANT * ExcludeLabel = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_InsertCrossReference (
        /*[in]*/ VARIANT * ReferenceType,
        /*[in]*/ enum WdReferenceKind ReferenceKind,
        /*[in]*/ VARIANT * ReferenceItem,
        /*[in]*/ VARIANT * InsertAsHyperlink = &vtMissing,
        /*[in]*/ VARIANT * IncludePosition = &vtMissing,
        /*[in]*/ VARIANT * SeparateNumbers = &vtMissing,
        /*[in]*/ VARIANT * SeparatorString = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_OMaths (
        /*[out,retval]*/ struct OMaths * * prop ) = 0;
      virtual HRESULT __stdcall get_WordOpenXML (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall raw_ClearParagraphStyle ( ) = 0;
      virtual HRESULT __stdcall raw_ClearCharacterAllFormatting ( ) = 0;
      virtual HRESULT __stdcall raw_ClearCharacterStyle ( ) = 0;
      virtual HRESULT __stdcall raw_ClearCharacterDirectFormatting ( ) = 0;
      virtual HRESULT __stdcall get_ContentControls (
        /*[out,retval]*/ struct ContentControls * * prop ) = 0;
      virtual HRESULT __stdcall get_ParentContentControl (
        /*[out,retval]*/ struct ContentControl * * prop ) = 0;
      virtual HRESULT __stdcall raw_ExportAsFixedFormat (
        /*[in]*/ BSTR OutputFileName,
        /*[in]*/ enum WdExportFormat ExportFormat,
        /*[in]*/ VARIANT_BOOL OpenAfterExport,
        /*[in]*/ enum WdExportOptimizeFor OptimizeFor,
        /*[in]*/ VARIANT_BOOL ExportCurrentPage,
        /*[in]*/ enum WdExportItem Item,
        /*[in]*/ VARIANT_BOOL IncludeDocProps,
        /*[in]*/ VARIANT_BOOL KeepIRM,
        /*[in]*/ enum WdExportCreateBookmarks CreateBookmarks,
        /*[in]*/ VARIANT_BOOL DocStructureTags,
        /*[in]*/ VARIANT_BOOL BitmapMissingFonts,
        /*[in]*/ VARIANT_BOOL UseISO19005_1,
        /*[in]*/ VARIANT * FixedFormatExtClassPtr = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_ReadingModeGrowFont ( ) = 0;
      virtual HRESULT __stdcall raw_ReadingModeShrinkFont ( ) = 0;
      virtual HRESULT __stdcall raw_ClearParagraphAllFormatting ( ) = 0;
      virtual HRESULT __stdcall raw_ClearParagraphDirectFormatting ( ) = 0;
      virtual HRESULT __stdcall raw_InsertNewPage ( ) = 0;
};

struct __declspec(uuid("000209fe-0001-0000-c000-000000000046"))
IApplicationEvents2 : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Startup ( );
    HRESULT Quit ( );
    HRESULT DocumentChange ( );
    HRESULT DocumentOpen (
        struct _Document * Doc );
    HRESULT DocumentBeforeClose (
        struct _Document * Doc,
        VARIANT_BOOL * Cancel );
    HRESULT DocumentBeforePrint (
        struct _Document * Doc,
        VARIANT_BOOL * Cancel );
    HRESULT DocumentBeforeSave (
        struct _Document * Doc,
        VARIANT_BOOL * SaveAsUI,
        VARIANT_BOOL * Cancel );
    HRESULT NewDocument (
        struct _Document * Doc );
    HRESULT WindowActivate (
        struct _Document * Doc,
        struct Window * Wn );
    HRESULT WindowDeactivate (
        struct _Document * Doc,
        struct Window * Wn );
    HRESULT WindowSelectionChange (
        struct Selection * Sel );
    HRESULT WindowBeforeRightClick (
        struct Selection * Sel,
        VARIANT_BOOL * Cancel );
    HRESULT WindowBeforeDoubleClick (
        struct Selection * Sel,
        VARIANT_BOOL * Cancel );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Startup ( ) = 0;
      virtual HRESULT __stdcall raw_Quit ( ) = 0;
      virtual HRESULT __stdcall raw_DocumentChange ( ) = 0;
      virtual HRESULT __stdcall raw_DocumentOpen (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall raw_DocumentBeforeClose (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall raw_DocumentBeforePrint (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall raw_DocumentBeforeSave (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ VARIANT_BOOL * SaveAsUI,
        /*[in]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall raw_NewDocument (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall raw_WindowActivate (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ struct Window * Wn ) = 0;
      virtual HRESULT __stdcall raw_WindowDeactivate (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ struct Window * Wn ) = 0;
      virtual HRESULT __stdcall raw_WindowSelectionChange (
        /*[in]*/ struct Selection * Sel ) = 0;
      virtual HRESULT __stdcall raw_WindowBeforeRightClick (
        /*[in]*/ struct Selection * Sel,
        /*[in]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall raw_WindowBeforeDoubleClick (
        /*[in]*/ struct Selection * Sel,
        /*[in]*/ VARIANT_BOOL * Cancel ) = 0;
};

struct __declspec(uuid("00020a00-0001-0000-c000-000000000046"))
IApplicationEvents3 : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Startup ( );
    HRESULT Quit ( );
    HRESULT DocumentChange ( );
    HRESULT DocumentOpen (
        struct _Document * Doc );
    HRESULT DocumentBeforeClose (
        struct _Document * Doc,
        VARIANT_BOOL * Cancel );
    HRESULT DocumentBeforePrint (
        struct _Document * Doc,
        VARIANT_BOOL * Cancel );
    HRESULT DocumentBeforeSave (
        struct _Document * Doc,
        VARIANT_BOOL * SaveAsUI,
        VARIANT_BOOL * Cancel );
    HRESULT NewDocument (
        struct _Document * Doc );
    HRESULT WindowActivate (
        struct _Document * Doc,
        struct Window * Wn );
    HRESULT WindowDeactivate (
        struct _Document * Doc,
        struct Window * Wn );
    HRESULT WindowSelectionChange (
        struct Selection * Sel );
    HRESULT WindowBeforeRightClick (
        struct Selection * Sel,
        VARIANT_BOOL * Cancel );
    HRESULT WindowBeforeDoubleClick (
        struct Selection * Sel,
        VARIANT_BOOL * Cancel );
    HRESULT EPostagePropertyDialog (
        struct _Document * Doc );
    HRESULT EPostageInsert (
        struct _Document * Doc );
    HRESULT MailMergeAfterMerge (
        struct _Document * Doc,
        struct _Document * DocResult );
    HRESULT MailMergeAfterRecordMerge (
        struct _Document * Doc );
    HRESULT MailMergeBeforeMerge (
        struct _Document * Doc,
        long StartRecord,
        long EndRecord,
        VARIANT_BOOL * Cancel );
    HRESULT MailMergeBeforeRecordMerge (
        struct _Document * Doc,
        VARIANT_BOOL * Cancel );
    HRESULT MailMergeDataSourceLoad (
        struct _Document * Doc );
    HRESULT MailMergeDataSourceValidate (
        struct _Document * Doc,
        VARIANT_BOOL * Handled );
    HRESULT MailMergeWizardSendToCustom (
        struct _Document * Doc );
    HRESULT MailMergeWizardStateChange (
        struct _Document * Doc,
        int * FromState,
        int * ToState,
        VARIANT_BOOL * Handled );
    HRESULT WindowSize (
        struct _Document * Doc,
        struct Window * Wn );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Startup ( ) = 0;
      virtual HRESULT __stdcall raw_Quit ( ) = 0;
      virtual HRESULT __stdcall raw_DocumentChange ( ) = 0;
      virtual HRESULT __stdcall raw_DocumentOpen (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall raw_DocumentBeforeClose (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall raw_DocumentBeforePrint (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall raw_DocumentBeforeSave (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ VARIANT_BOOL * SaveAsUI,
        /*[in]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall raw_NewDocument (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall raw_WindowActivate (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ struct Window * Wn ) = 0;
      virtual HRESULT __stdcall raw_WindowDeactivate (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ struct Window * Wn ) = 0;
      virtual HRESULT __stdcall raw_WindowSelectionChange (
        /*[in]*/ struct Selection * Sel ) = 0;
      virtual HRESULT __stdcall raw_WindowBeforeRightClick (
        /*[in]*/ struct Selection * Sel,
        /*[in]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall raw_WindowBeforeDoubleClick (
        /*[in]*/ struct Selection * Sel,
        /*[in]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall raw_EPostagePropertyDialog (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall raw_EPostageInsert (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall raw_MailMergeAfterMerge (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ struct _Document * DocResult ) = 0;
      virtual HRESULT __stdcall raw_MailMergeAfterRecordMerge (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall raw_MailMergeBeforeMerge (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ long StartRecord,
        /*[in]*/ long EndRecord,
        /*[in]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall raw_MailMergeBeforeRecordMerge (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall raw_MailMergeDataSourceLoad (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall raw_MailMergeDataSourceValidate (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ VARIANT_BOOL * Handled ) = 0;
      virtual HRESULT __stdcall raw_MailMergeWizardSendToCustom (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall raw_MailMergeWizardStateChange (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ int * FromState,
        /*[in]*/ int * ToState,
        /*[in]*/ VARIANT_BOOL * Handled ) = 0;
      virtual HRESULT __stdcall raw_WindowSize (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ struct Window * Wn ) = 0;
};

struct __declspec(uuid("00020984-0000-0000-c000-000000000046"))
HeadersFooters : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    HeaderFooterPtr Item (
        enum WdHeaderFooterIndex Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ enum WdHeaderFooterIndex Index,
        /*[out,retval]*/ struct HeaderFooter * * prop ) = 0;
};

struct __declspec(uuid("00020985-0000-0000-c000-000000000046"))
HeaderFooter : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetIndex))
    enum WdHeaderFooterIndex Index;
    __declspec(property(get=GetIsHeader))
    VARIANT_BOOL IsHeader;
    __declspec(property(get=GetExists,put=PutExists))
    VARIANT_BOOL Exists;
    __declspec(property(get=GetPageNumbers))
    PageNumbersPtr PageNumbers;
    __declspec(property(get=GetLinkToPrevious,put=PutLinkToPrevious))
    VARIANT_BOOL LinkToPrevious;
    __declspec(property(get=GetShapes))
    ShapesPtr Shapes;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    RangePtr GetRange ( );
    enum WdHeaderFooterIndex GetIndex ( );
    VARIANT_BOOL GetIsHeader ( );
    VARIANT_BOOL GetExists ( );
    void PutExists (
        VARIANT_BOOL prop );
    PageNumbersPtr GetPageNumbers ( );
    VARIANT_BOOL GetLinkToPrevious ( );
    void PutLinkToPrevious (
        VARIANT_BOOL prop );
    ShapesPtr GetShapes ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ enum WdHeaderFooterIndex * prop ) = 0;
      virtual HRESULT __stdcall get_IsHeader (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Exists (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Exists (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_PageNumbers (
        /*[out,retval]*/ struct PageNumbers * * prop ) = 0;
      virtual HRESULT __stdcall get_LinkToPrevious (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_LinkToPrevious (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Shapes (
        /*[out,retval]*/ struct Shapes * * prop ) = 0;
};

struct __declspec(uuid("0002098d-0000-0000-c000-000000000046"))
ListLevel : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetNumberFormat,put=PutNumberFormat))
    _bstr_t NumberFormat;
    __declspec(property(get=GetTrailingCharacter,put=PutTrailingCharacter))
    enum WdTrailingCharacter TrailingCharacter;
    __declspec(property(get=GetNumberStyle,put=PutNumberStyle))
    enum WdListNumberStyle NumberStyle;
    __declspec(property(get=GetNumberPosition,put=PutNumberPosition))
    float NumberPosition;
    __declspec(property(get=GetAlignment,put=PutAlignment))
    enum WdListLevelAlignment Alignment;
    __declspec(property(get=GetTextPosition,put=PutTextPosition))
    float TextPosition;
    __declspec(property(get=GetTabPosition,put=PutTabPosition))
    float TabPosition;
    __declspec(property(get=GetResetOnHigherOld,put=PutResetOnHigherOld))
    VARIANT_BOOL ResetOnHigherOld;
    __declspec(property(get=GetStartAt,put=PutStartAt))
    long StartAt;
    __declspec(property(get=GetLinkedStyle,put=PutLinkedStyle))
    _bstr_t LinkedStyle;
    __declspec(property(get=GetFont,put=PutFont))
    _FontPtr Font;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetResetOnHigher,put=PutResetOnHigher))
    long ResetOnHigher;
    __declspec(property(get=GetPictureBullet))
    InlineShapePtr PictureBullet;

    //
    // Wrapper methods for error-handling
    //

    long GetIndex ( );
    _bstr_t GetNumberFormat ( );
    void PutNumberFormat (
        _bstr_t prop );
    enum WdTrailingCharacter GetTrailingCharacter ( );
    void PutTrailingCharacter (
        enum WdTrailingCharacter prop );
    enum WdListNumberStyle GetNumberStyle ( );
    void PutNumberStyle (
        enum WdListNumberStyle prop );
    float GetNumberPosition ( );
    void PutNumberPosition (
        float prop );
    enum WdListLevelAlignment GetAlignment ( );
    void PutAlignment (
        enum WdListLevelAlignment prop );
    float GetTextPosition ( );
    void PutTextPosition (
        float prop );
    float GetTabPosition ( );
    void PutTabPosition (
        float prop );
    VARIANT_BOOL GetResetOnHigherOld ( );
    void PutResetOnHigherOld (
        VARIANT_BOOL prop );
    long GetStartAt ( );
    void PutStartAt (
        long prop );
    _bstr_t GetLinkedStyle ( );
    void PutLinkedStyle (
        _bstr_t prop );
    _FontPtr GetFont ( );
    void PutFont (
        struct _Font * prop );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetResetOnHigher ( );
    void PutResetOnHigher (
        long prop );
    InlineShapePtr GetPictureBullet ( );
    InlineShapePtr ApplyPictureBullet (
        _bstr_t FileName );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_NumberFormat (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NumberFormat (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_TrailingCharacter (
        /*[out,retval]*/ enum WdTrailingCharacter * prop ) = 0;
      virtual HRESULT __stdcall put_TrailingCharacter (
        /*[in]*/ enum WdTrailingCharacter prop ) = 0;
      virtual HRESULT __stdcall get_NumberStyle (
        /*[out,retval]*/ enum WdListNumberStyle * prop ) = 0;
      virtual HRESULT __stdcall put_NumberStyle (
        /*[in]*/ enum WdListNumberStyle prop ) = 0;
      virtual HRESULT __stdcall get_NumberPosition (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_NumberPosition (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum WdListLevelAlignment * prop ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum WdListLevelAlignment prop ) = 0;
      virtual HRESULT __stdcall get_TextPosition (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TextPosition (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_TabPosition (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TabPosition (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ResetOnHigherOld (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ResetOnHigherOld (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_StartAt (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_StartAt (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_LinkedStyle (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_LinkedStyle (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Font (
        /*[out,retval]*/ struct _Font * * prop ) = 0;
      virtual HRESULT __stdcall put_Font (
        /*[in]*/ struct _Font * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_ResetOnHigher (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ResetOnHigher (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_PictureBullet (
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall raw_ApplyPictureBullet (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
};

struct __declspec(uuid("0002098e-0000-0000-c000-000000000046"))
ListLevels : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    ListLevelPtr Item (
        long Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct ListLevel * * prop ) = 0;
};

struct __declspec(uuid("0002098f-0000-0000-c000-000000000046"))
ListTemplate : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetOutlineNumbered,put=PutOutlineNumbered))
    VARIANT_BOOL OutlineNumbered;
    __declspec(property(get=GetListLevels))
    ListLevelsPtr ListLevels;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetOutlineNumbered ( );
    void PutOutlineNumbered (
        VARIANT_BOOL prop );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t prop );
    ListLevelsPtr GetListLevels ( );
    ListTemplatePtr Convert (
        VARIANT * Level = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_OutlineNumbered (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OutlineNumbered (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ListLevels (
        /*[out,retval]*/ struct ListLevels * * prop ) = 0;
      virtual HRESULT __stdcall raw_Convert (
        /*[in]*/ VARIANT * Level,
        /*[out,retval]*/ struct ListTemplate * * prop ) = 0;
};

struct __declspec(uuid("00020990-0000-0000-c000-000000000046"))
ListTemplates : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    ListTemplatePtr Item (
        VARIANT * Index );
    ListTemplatePtr Add (
        VARIANT * OutlineNumbered = &vtMissing,
        VARIANT * Name = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct ListTemplate * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT * OutlineNumbered,
        /*[in]*/ VARIANT * Name,
        /*[out,retval]*/ struct ListTemplate * * prop ) = 0;
};

struct __declspec(uuid("00020992-0000-0000-c000-000000000046"))
List : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetListParagraphs))
    ListParagraphsPtr ListParagraphs;
    __declspec(property(get=GetSingleListTemplate))
    VARIANT_BOOL SingleListTemplate;
    __declspec(property(get=GetStyleName))
    _bstr_t StyleName;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    RangePtr GetRange ( );
    ListParagraphsPtr GetListParagraphs ( );
    VARIANT_BOOL GetSingleListTemplate ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    HRESULT ConvertNumbersToText (
        VARIANT * NumberType = &vtMissing );
    HRESULT RemoveNumbers (
        VARIANT * NumberType = &vtMissing );
    long CountNumberedItems (
        VARIANT * NumberType = &vtMissing,
        VARIANT * Level = &vtMissing );
    HRESULT ApplyListTemplateOld (
        struct ListTemplate * ListTemplate,
        VARIANT * ContinuePreviousList = &vtMissing );
    enum WdContinue CanContinuePreviousList (
        struct ListTemplate * ListTemplate );
    HRESULT ApplyListTemplate (
        struct ListTemplate * ListTemplate,
        VARIANT * ContinuePreviousList = &vtMissing,
        VARIANT * DefaultListBehavior = &vtMissing );
    _bstr_t GetStyleName ( );
    HRESULT ApplyListTemplateWithLevel (
        struct ListTemplate * ListTemplate,
        VARIANT * ContinuePreviousList = &vtMissing,
        VARIANT * DefaultListBehavior = &vtMissing,
        VARIANT * ApplyLevel = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_ListParagraphs (
        /*[out,retval]*/ struct ListParagraphs * * prop ) = 0;
      virtual HRESULT __stdcall get_SingleListTemplate (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_ConvertNumbersToText (
        /*[in]*/ VARIANT * NumberType = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_RemoveNumbers (
        /*[in]*/ VARIANT * NumberType = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_CountNumberedItems (
        /*[in]*/ VARIANT * NumberType,
        /*[in]*/ VARIANT * Level,
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_ApplyListTemplateOld (
        /*[in]*/ struct ListTemplate * ListTemplate,
        /*[in]*/ VARIANT * ContinuePreviousList = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_CanContinuePreviousList (
        /*[in]*/ struct ListTemplate * ListTemplate,
        /*[out,retval]*/ enum WdContinue * prop ) = 0;
      virtual HRESULT __stdcall raw_ApplyListTemplate (
        /*[in]*/ struct ListTemplate * ListTemplate,
        /*[in]*/ VARIANT * ContinuePreviousList = &vtMissing,
        /*[in]*/ VARIANT * DefaultListBehavior = &vtMissing ) = 0;
      virtual HRESULT __stdcall get_StyleName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall raw_ApplyListTemplateWithLevel (
        /*[in]*/ struct ListTemplate * ListTemplate,
        /*[in]*/ VARIANT * ContinuePreviousList = &vtMissing,
        /*[in]*/ VARIANT * DefaultListBehavior = &vtMissing,
        /*[in]*/ VARIANT * ApplyLevel = &vtMissing ) = 0;
};

struct __declspec(uuid("00020993-0000-0000-c000-000000000046"))
Lists : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    ListPtr Item (
        long Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct List * * prop ) = 0;
};

struct __declspec(uuid("00020994-0000-0000-c000-000000000046"))
ListGallery : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetListTemplates))
    ListTemplatesPtr ListTemplates;
    __declspec(property(get=GetModified))
    VARIANT_BOOL Modified[];
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    ListTemplatesPtr GetListTemplates ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetModified (
        long Index );
    HRESULT Reset (
        long Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ListTemplates (
        /*[out,retval]*/ struct ListTemplates * * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Modified (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_Reset (
        /*[in]*/ long Index ) = 0;
};

struct __declspec(uuid("00020995-0000-0000-c000-000000000046"))
ListGalleries : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    ListGalleryPtr Item (
        enum WdListGalleryType Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ enum WdListGalleryType Index,
        /*[out,retval]*/ struct ListGallery * * prop ) = 0;
};

struct __declspec(uuid("0002099c-0000-0000-c000-000000000046"))
Hyperlinks : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    HyperlinkPtr Item (
        VARIANT * Index );
    HyperlinkPtr _Add (
        IDispatch * Anchor,
        VARIANT * Address = &vtMissing,
        VARIANT * SubAddress = &vtMissing );
    HyperlinkPtr Add (
        IDispatch * Anchor,
        VARIANT * Address = &vtMissing,
        VARIANT * SubAddress = &vtMissing,
        VARIANT * ScreenTip = &vtMissing,
        VARIANT * TextToDisplay = &vtMissing,
        VARIANT * Target = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Hyperlink * * prop ) = 0;
      virtual HRESULT __stdcall raw__Add (
        /*[in]*/ IDispatch * Anchor,
        /*[in]*/ VARIANT * Address,
        /*[in]*/ VARIANT * SubAddress,
        /*[out,retval]*/ struct Hyperlink * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ IDispatch * Anchor,
        /*[in]*/ VARIANT * Address,
        /*[in]*/ VARIANT * SubAddress,
        /*[in]*/ VARIANT * ScreenTip,
        /*[in]*/ VARIANT * TextToDisplay,
        /*[in]*/ VARIANT * Target,
        /*[out,retval]*/ struct Hyperlink * * prop ) = 0;
};

struct __declspec(uuid("0002099d-0000-0000-c000-000000000046"))
Hyperlink : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetAddressOld))
    _bstr_t AddressOld;
    __declspec(property(get=GetType))
    enum Office::MsoHyperlinkType Type;
    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetShape))
    ShapePtr Shape;
    __declspec(property(get=GetSubAddressOld))
    _bstr_t SubAddressOld;
    __declspec(property(get=GetExtraInfoRequired))
    VARIANT_BOOL ExtraInfoRequired;
    __declspec(property(get=GetAddress,put=PutAddress))
    _bstr_t Address;
    __declspec(property(get=GetSubAddress,put=PutSubAddress))
    _bstr_t SubAddress;
    __declspec(property(get=GetEmailSubject,put=PutEmailSubject))
    _bstr_t EmailSubject;
    __declspec(property(get=GetScreenTip,put=PutScreenTip))
    _bstr_t ScreenTip;
    __declspec(property(get=GetTextToDisplay,put=PutTextToDisplay))
    _bstr_t TextToDisplay;
    __declspec(property(get=GetTarget,put=PutTarget))
    _bstr_t Target;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    _bstr_t GetAddressOld ( );
    enum Office::MsoHyperlinkType GetType ( );
    RangePtr GetRange ( );
    ShapePtr GetShape ( );
    _bstr_t GetSubAddressOld ( );
    VARIANT_BOOL GetExtraInfoRequired ( );
    HRESULT Delete ( );
    HRESULT Follow (
        VARIANT * NewWindow = &vtMissing,
        VARIANT * AddHistory = &vtMissing,
        VARIANT * ExtraInfo = &vtMissing,
        VARIANT * Method = &vtMissing,
        VARIANT * HeaderInfo = &vtMissing );
    HRESULT AddToFavorites ( );
    HRESULT CreateNewDocument (
        _bstr_t FileName,
        VARIANT_BOOL EditNow,
        VARIANT_BOOL Overwrite );
    _bstr_t GetAddress ( );
    void PutAddress (
        _bstr_t prop );
    _bstr_t GetSubAddress ( );
    void PutSubAddress (
        _bstr_t prop );
    _bstr_t GetEmailSubject ( );
    void PutEmailSubject (
        _bstr_t prop );
    _bstr_t GetScreenTip ( );
    void PutScreenTip (
        _bstr_t prop );
    _bstr_t GetTextToDisplay ( );
    void PutTextToDisplay (
        _bstr_t prop );
    _bstr_t GetTarget ( );
    void PutTarget (
        _bstr_t prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_AddressOld (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoHyperlinkType * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Shape (
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall get_SubAddressOld (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_ExtraInfoRequired (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Follow (
        /*[in]*/ VARIANT * NewWindow = &vtMissing,
        /*[in]*/ VARIANT * AddHistory = &vtMissing,
        /*[in]*/ VARIANT * ExtraInfo = &vtMissing,
        /*[in]*/ VARIANT * Method = &vtMissing,
        /*[in]*/ VARIANT * HeaderInfo = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_AddToFavorites ( ) = 0;
      virtual HRESULT __stdcall raw_CreateNewDocument (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT_BOOL EditNow,
        /*[in]*/ VARIANT_BOOL Overwrite ) = 0;
      virtual HRESULT __stdcall get_Address (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Address (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_SubAddress (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_SubAddress (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_EmailSubject (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_EmailSubject (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ScreenTip (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_ScreenTip (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_TextToDisplay (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_TextToDisplay (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Target (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Target (
        /*[in]*/ BSTR prop ) = 0;
};

struct __declspec(uuid("0002099f-0000-0000-c000-000000000046"))
Shapes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    ShapePtr Item (
        VARIANT * Index );
    ShapePtr AddCallout (
        enum Office::MsoCalloutType Type,
        float Left,
        float Top,
        float Width,
        float Height,
        VARIANT * Anchor = &vtMissing );
    ShapePtr AddConnector (
        enum Office::MsoConnectorType Type,
        float BeginX,
        float BeginY,
        float EndX,
        float EndY );
    ShapePtr AddCurve (
        VARIANT * SafeArrayOfPoints,
        VARIANT * Anchor = &vtMissing );
    ShapePtr AddLabel (
        enum Office::MsoTextOrientation Orientation,
        float Left,
        float Top,
        float Width,
        float Height,
        VARIANT * Anchor = &vtMissing );
    ShapePtr AddLine (
        float BeginX,
        float BeginY,
        float EndX,
        float EndY,
        VARIANT * Anchor = &vtMissing );
    ShapePtr AddPicture (
        _bstr_t FileName,
        VARIANT * LinkToFile = &vtMissing,
        VARIANT * SaveWithDocument = &vtMissing,
        VARIANT * Left = &vtMissing,
        VARIANT * Top = &vtMissing,
        VARIANT * Width = &vtMissing,
        VARIANT * Height = &vtMissing,
        VARIANT * Anchor = &vtMissing );
    ShapePtr AddPolyline (
        VARIANT * SafeArrayOfPoints,
        VARIANT * Anchor = &vtMissing );
    ShapePtr AddShape (
        long Type,
        float Left,
        float Top,
        float Width,
        float Height,
        VARIANT * Anchor = &vtMissing );
    ShapePtr AddTextEffect (
        enum Office::MsoPresetTextEffect PresetTextEffect,
        _bstr_t Text,
        _bstr_t FontName,
        float FontSize,
        enum Office::MsoTriState FontBold,
        enum Office::MsoTriState FontItalic,
        float Left,
        float Top,
        VARIANT * Anchor = &vtMissing );
    ShapePtr AddTextbox (
        enum Office::MsoTextOrientation Orientation,
        float Left,
        float Top,
        float Width,
        float Height,
        VARIANT * Anchor = &vtMissing );
    FreeformBuilderPtr BuildFreeform (
        enum Office::MsoEditingType EditingType,
        float X1,
        float Y1 );
    ShapeRangePtr Range (
        VARIANT * Index );
    HRESULT SelectAll ( );
    ShapePtr AddOLEObject (
        VARIANT * ClassType = &vtMissing,
        VARIANT * FileName = &vtMissing,
        VARIANT * LinkToFile = &vtMissing,
        VARIANT * DisplayAsIcon = &vtMissing,
        VARIANT * IconFileName = &vtMissing,
        VARIANT * IconIndex = &vtMissing,
        VARIANT * IconLabel = &vtMissing,
        VARIANT * Left = &vtMissing,
        VARIANT * Top = &vtMissing,
        VARIANT * Width = &vtMissing,
        VARIANT * Height = &vtMissing,
        VARIANT * Anchor = &vtMissing );
    ShapePtr AddOLEControl (
        VARIANT * ClassType = &vtMissing,
        VARIANT * Left = &vtMissing,
        VARIANT * Top = &vtMissing,
        VARIANT * Width = &vtMissing,
        VARIANT * Height = &vtMissing,
        VARIANT * Anchor = &vtMissing );
    ShapePtr AddDiagram (
        enum Office::MsoDiagramType Type,
        float Left,
        float Top,
        float Width,
        float Height,
        VARIANT * Anchor = &vtMissing );
    ShapePtr AddCanvas (
        float Left,
        float Top,
        float Width,
        float Height,
        VARIANT * Anchor = &vtMissing );
    ShapePtr AddChart (
        enum Office::XlChartType Type,
        VARIANT * Left = &vtMissing,
        VARIANT * Top = &vtMissing,
        VARIANT * Width = &vtMissing,
        VARIANT * Height = &vtMissing,
        VARIANT * Anchor = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddCallout (
        /*[in]*/ enum Office::MsoCalloutType Type,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddConnector (
        /*[in]*/ enum Office::MsoConnectorType Type,
        /*[in]*/ float BeginX,
        /*[in]*/ float BeginY,
        /*[in]*/ float EndX,
        /*[in]*/ float EndY,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddCurve (
        /*[in]*/ VARIANT * SafeArrayOfPoints,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddLabel (
        /*[in]*/ enum Office::MsoTextOrientation Orientation,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddLine (
        /*[in]*/ float BeginX,
        /*[in]*/ float BeginY,
        /*[in]*/ float EndX,
        /*[in]*/ float EndY,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddPicture (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT * LinkToFile,
        /*[in]*/ VARIANT * SaveWithDocument,
        /*[in]*/ VARIANT * Left,
        /*[in]*/ VARIANT * Top,
        /*[in]*/ VARIANT * Width,
        /*[in]*/ VARIANT * Height,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddPolyline (
        /*[in]*/ VARIANT * SafeArrayOfPoints,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddShape (
        /*[in]*/ long Type,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddTextEffect (
        /*[in]*/ enum Office::MsoPresetTextEffect PresetTextEffect,
        /*[in]*/ BSTR Text,
        /*[in]*/ BSTR FontName,
        /*[in]*/ float FontSize,
        /*[in]*/ enum Office::MsoTriState FontBold,
        /*[in]*/ enum Office::MsoTriState FontItalic,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddTextbox (
        /*[in]*/ enum Office::MsoTextOrientation Orientation,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_BuildFreeform (
        /*[in]*/ enum Office::MsoEditingType EditingType,
        /*[in]*/ float X1,
        /*[in]*/ float Y1,
        /*[out,retval]*/ struct FreeformBuilder * * prop ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct ShapeRange * * prop ) = 0;
      virtual HRESULT __stdcall raw_SelectAll ( ) = 0;
      virtual HRESULT __stdcall raw_AddOLEObject (
        /*[in]*/ VARIANT * ClassType,
        /*[in]*/ VARIANT * FileName,
        /*[in]*/ VARIANT * LinkToFile,
        /*[in]*/ VARIANT * DisplayAsIcon,
        /*[in]*/ VARIANT * IconFileName,
        /*[in]*/ VARIANT * IconIndex,
        /*[in]*/ VARIANT * IconLabel,
        /*[in]*/ VARIANT * Left,
        /*[in]*/ VARIANT * Top,
        /*[in]*/ VARIANT * Width,
        /*[in]*/ VARIANT * Height,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddOLEControl (
        /*[in]*/ VARIANT * ClassType,
        /*[in]*/ VARIANT * Left,
        /*[in]*/ VARIANT * Top,
        /*[in]*/ VARIANT * Width,
        /*[in]*/ VARIANT * Height,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddDiagram (
        /*[in]*/ enum Office::MsoDiagramType Type,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddCanvas (
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddChart (
        /*[in]*/ enum Office::XlChartType Type,
        /*[in]*/ VARIANT * Left,
        /*[in]*/ VARIANT * Top,
        /*[in]*/ VARIANT * Width,
        /*[in]*/ VARIANT * Height,
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
};

struct __declspec(uuid("000209b5-0000-0000-c000-000000000046"))
ShapeRange : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetHorizontalFlip))
    enum Office::MsoTriState HorizontalFlip;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetLeft,put=PutLeft))
    float Left;
    __declspec(property(get=GetLine))
    LineFormatPtr Line;
    __declspec(property(get=GetLockAspectRatio,put=PutLockAspectRatio))
    enum Office::MsoTriState LockAspectRatio;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetNodes))
    ShapeNodesPtr Nodes;
    __declspec(property(get=GetRotation,put=PutRotation))
    float Rotation;
    __declspec(property(get=GetPictureFormat))
    PictureFormatPtr PictureFormat;
    __declspec(property(get=GetShadow))
    ShadowFormatPtr Shadow;
    __declspec(property(get=GetHyperlink))
    HyperlinkPtr Hyperlink;
    __declspec(property(get=GetTextEffect))
    TextEffectFormatPtr TextEffect;
    __declspec(property(get=GetTextFrame))
    TextFramePtr TextFrame;
    __declspec(property(get=GetThreeD))
    ThreeDFormatPtr ThreeD;
    __declspec(property(get=GetTop,put=PutTop))
    float Top;
    __declspec(property(get=GetType))
    enum Office::MsoShapeType Type;
    __declspec(property(get=GetVerticalFlip))
    enum Office::MsoTriState VerticalFlip;
    __declspec(property(get=GetVertices))
    _variant_t Vertices;
    __declspec(property(get=GetVisible,put=PutVisible))
    enum Office::MsoTriState Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    float Width;
    __declspec(property(get=GetZOrderPosition))
    long ZOrderPosition;
    __declspec(property(get=GetAlternativeText,put=PutAlternativeText))
    _bstr_t AlternativeText;
    __declspec(property(get=GetHasDiagram))
    enum Office::MsoTriState HasDiagram;
    __declspec(property(get=GetDiagram))
    Office::IMsoDiagramPtr Diagram;
    __declspec(property(get=GetHasDiagramNode))
    enum Office::MsoTriState HasDiagramNode;
    __declspec(property(get=GetDiagramNode))
    DiagramNodePtr DiagramNode;
    __declspec(property(get=GetChild))
    enum Office::MsoTriState Child;
    __declspec(property(get=GetParentGroup))
    ShapePtr ParentGroup;
    __declspec(property(get=GetCanvasItems))
    CanvasShapesPtr CanvasItems;
    __declspec(property(get=GetID))
    long ID;
    __declspec(property(put=PutRTF))
    _bstr_t RTF;
    __declspec(property(get=GetLayoutInCell,put=PutLayoutInCell))
    long LayoutInCell;
    __declspec(property(get=GetSoftEdge))
    SoftEdgeFormatPtr SoftEdge;
    __declspec(property(get=GetGlow))
    GlowFormatPtr Glow;
    __declspec(property(get=GetReflection))
    ReflectionFormatPtr Reflection;
    __declspec(property(get=GetTextFrame2))
    Office::TextFrame2Ptr TextFrame2;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;
    __declspec(property(get=GetRelativeHorizontalPosition,put=PutRelativeHorizontalPosition))
    enum WdRelativeHorizontalPosition RelativeHorizontalPosition;
    __declspec(property(get=GetRelativeVerticalPosition,put=PutRelativeVerticalPosition))
    enum WdRelativeVerticalPosition RelativeVerticalPosition;
    __declspec(property(get=GetLockAnchor,put=PutLockAnchor))
    long LockAnchor;
    __declspec(property(get=GetWrapFormat))
    WrapFormatPtr WrapFormat;
    __declspec(property(get=GetAnchor))
    RangePtr Anchor;
    __declspec(property(get=GetLeftRelative,put=PutLeftRelative))
    float LeftRelative;
    __declspec(property(get=GetTopRelative,put=PutTopRelative))
    float TopRelative;
    __declspec(property(get=GetWidthRelative,put=PutWidthRelative))
    float WidthRelative;
    __declspec(property(get=GetHeightRelative,put=PutHeightRelative))
    float HeightRelative;
    __declspec(property(get=GetRelativeHorizontalSize,put=PutRelativeHorizontalSize))
    enum WdRelativeHorizontalSize RelativeHorizontalSize;
    __declspec(property(get=GetRelativeVerticalSize,put=PutRelativeVerticalSize))
    enum WdRelativeVerticalSize RelativeVerticalSize;
    __declspec(property(get=GetAdjustments))
    AdjustmentsPtr Adjustments;
    __declspec(property(get=GetAutoShapeType,put=PutAutoShapeType))
    enum Office::MsoAutoShapeType AutoShapeType;
    __declspec(property(get=GetCallout))
    CalloutFormatPtr Callout;
    __declspec(property(get=GetConnectionSiteCount))
    long ConnectionSiteCount;
    __declspec(property(get=GetConnector))
    enum Office::MsoTriState Connector;
    __declspec(property(get=GetConnectorFormat))
    ConnectorFormatPtr ConnectorFormat;
    __declspec(property(get=GetFill))
    FillFormatPtr Fill;
    __declspec(property(get=GetGroupItems))
    GroupShapesPtr GroupItems;
    __declspec(property(get=GetHeight,put=PutHeight))
    float Height;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    AdjustmentsPtr GetAdjustments ( );
    enum Office::MsoAutoShapeType GetAutoShapeType ( );
    void PutAutoShapeType (
        enum Office::MsoAutoShapeType prop );
    CalloutFormatPtr GetCallout ( );
    long GetConnectionSiteCount ( );
    enum Office::MsoTriState GetConnector ( );
    ConnectorFormatPtr GetConnectorFormat ( );
    FillFormatPtr GetFill ( );
    GroupShapesPtr GetGroupItems ( );
    float GetHeight ( );
    void PutHeight (
        float prop );
    enum Office::MsoTriState GetHorizontalFlip ( );
    float GetLeft ( );
    void PutLeft (
        float prop );
    LineFormatPtr GetLine ( );
    enum Office::MsoTriState GetLockAspectRatio ( );
    void PutLockAspectRatio (
        enum Office::MsoTriState prop );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t prop );
    ShapeNodesPtr GetNodes ( );
    float GetRotation ( );
    void PutRotation (
        float prop );
    PictureFormatPtr GetPictureFormat ( );
    ShadowFormatPtr GetShadow ( );
    TextEffectFormatPtr GetTextEffect ( );
    TextFramePtr GetTextFrame ( );
    ThreeDFormatPtr GetThreeD ( );
    float GetTop ( );
    void PutTop (
        float prop );
    enum Office::MsoShapeType GetType ( );
    enum Office::MsoTriState GetVerticalFlip ( );
    _variant_t GetVertices ( );
    enum Office::MsoTriState GetVisible ( );
    void PutVisible (
        enum Office::MsoTriState prop );
    float GetWidth ( );
    void PutWidth (
        float prop );
    long GetZOrderPosition ( );
    HyperlinkPtr GetHyperlink ( );
    enum WdRelativeHorizontalPosition GetRelativeHorizontalPosition ( );
    void PutRelativeHorizontalPosition (
        enum WdRelativeHorizontalPosition prop );
    enum WdRelativeVerticalPosition GetRelativeVerticalPosition ( );
    void PutRelativeVerticalPosition (
        enum WdRelativeVerticalPosition prop );
    long GetLockAnchor ( );
    void PutLockAnchor (
        long prop );
    WrapFormatPtr GetWrapFormat ( );
    RangePtr GetAnchor ( );
    ShapePtr Item (
        VARIANT * Index );
    HRESULT Align (
        enum Office::MsoAlignCmd Align,
        long RelativeTo );
    HRESULT Apply ( );
    HRESULT Delete ( );
    HRESULT Distribute (
        enum Office::MsoDistributeCmd Distribute,
        long RelativeTo );
    ShapeRangePtr Duplicate ( );
    HRESULT Flip (
        enum Office::MsoFlipCmd FlipCmd );
    HRESULT IncrementLeft (
        float Increment );
    HRESULT IncrementRotation (
        float Increment );
    HRESULT IncrementTop (
        float Increment );
    ShapePtr Group ( );
    HRESULT PickUp ( );
    ShapePtr Regroup ( );
    HRESULT RerouteConnections ( );
    HRESULT ScaleHeight (
        float Factor,
        enum Office::MsoTriState RelativeToOriginalSize,
        enum Office::MsoScaleFrom Scale );
    HRESULT ScaleWidth (
        float Factor,
        enum Office::MsoTriState RelativeToOriginalSize,
        enum Office::MsoScaleFrom Scale );
    HRESULT Select (
        VARIANT * Replace = &vtMissing );
    HRESULT SetShapesDefaultProperties ( );
    ShapeRangePtr Ungroup ( );
    HRESULT ZOrder (
        enum Office::MsoZOrderCmd ZOrderCmd );
    FramePtr ConvertToFrame ( );
    InlineShapePtr ConvertToInlineShape ( );
    HRESULT Activate ( );
    _bstr_t GetAlternativeText ( );
    void PutAlternativeText (
        _bstr_t prop );
    enum Office::MsoTriState GetHasDiagram ( );
    Office::IMsoDiagramPtr GetDiagram ( );
    enum Office::MsoTriState GetHasDiagramNode ( );
    DiagramNodePtr GetDiagramNode ( );
    enum Office::MsoTriState GetChild ( );
    ShapePtr GetParentGroup ( );
    CanvasShapesPtr GetCanvasItems ( );
    long GetID ( );
    HRESULT CanvasCropLeft (
        float Increment );
    HRESULT CanvasCropTop (
        float Increment );
    HRESULT CanvasCropRight (
        float Increment );
    HRESULT CanvasCropBottom (
        float Increment );
    void PutRTF (
        _bstr_t _arg1 );
    long GetLayoutInCell ( );
    void PutLayoutInCell (
        long prop );
    float GetLeftRelative ( );
    void PutLeftRelative (
        float prop );
    float GetTopRelative ( );
    void PutTopRelative (
        float prop );
    float GetWidthRelative ( );
    void PutWidthRelative (
        float prop );
    float GetHeightRelative ( );
    void PutHeightRelative (
        float prop );
    enum WdRelativeHorizontalSize GetRelativeHorizontalSize ( );
    void PutRelativeHorizontalSize (
        enum WdRelativeHorizontalSize prop );
    enum WdRelativeVerticalSize GetRelativeVerticalSize ( );
    void PutRelativeVerticalSize (
        enum WdRelativeVerticalSize prop );
    SoftEdgeFormatPtr GetSoftEdge ( );
    GlowFormatPtr GetGlow ( );
    ReflectionFormatPtr GetReflection ( );
    Office::TextFrame2Ptr GetTextFrame2 ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Adjustments (
        /*[out,retval]*/ struct Adjustments * * prop ) = 0;
      virtual HRESULT __stdcall get_AutoShapeType (
        /*[out,retval]*/ enum Office::MsoAutoShapeType * prop ) = 0;
      virtual HRESULT __stdcall put_AutoShapeType (
        /*[in]*/ enum Office::MsoAutoShapeType prop ) = 0;
      virtual HRESULT __stdcall get_Callout (
        /*[out,retval]*/ struct CalloutFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_ConnectionSiteCount (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Connector (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_ConnectorFormat (
        /*[out,retval]*/ struct ConnectorFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct FillFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_GroupItems (
        /*[out,retval]*/ struct GroupShapes * * prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalFlip (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Line (
        /*[out,retval]*/ struct LineFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_LockAspectRatio (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_LockAspectRatio (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Nodes (
        /*[out,retval]*/ struct ShapeNodes * * prop ) = 0;
      virtual HRESULT __stdcall get_Rotation (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Rotation (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_PictureFormat (
        /*[out,retval]*/ struct PictureFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ struct ShadowFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_TextEffect (
        /*[out,retval]*/ struct TextEffectFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_TextFrame (
        /*[out,retval]*/ struct TextFrame * * prop ) = 0;
      virtual HRESULT __stdcall get_ThreeD (
        /*[out,retval]*/ struct ThreeDFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoShapeType * prop ) = 0;
      virtual HRESULT __stdcall get_VerticalFlip (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_Vertices (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ZOrderPosition (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Hyperlink (
        /*[out,retval]*/ struct Hyperlink * * prop ) = 0;
      virtual HRESULT __stdcall get_RelativeHorizontalPosition (
        /*[out,retval]*/ enum WdRelativeHorizontalPosition * prop ) = 0;
      virtual HRESULT __stdcall put_RelativeHorizontalPosition (
        /*[in]*/ enum WdRelativeHorizontalPosition prop ) = 0;
      virtual HRESULT __stdcall get_RelativeVerticalPosition (
        /*[out,retval]*/ enum WdRelativeVerticalPosition * prop ) = 0;
      virtual HRESULT __stdcall put_RelativeVerticalPosition (
        /*[in]*/ enum WdRelativeVerticalPosition prop ) = 0;
      virtual HRESULT __stdcall get_LockAnchor (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_LockAnchor (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_WrapFormat (
        /*[out,retval]*/ struct WrapFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Anchor (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_Align (
        /*[in]*/ enum Office::MsoAlignCmd Align,
        /*[in]*/ long RelativeTo ) = 0;
      virtual HRESULT __stdcall raw_Apply ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Distribute (
        /*[in]*/ enum Office::MsoDistributeCmd Distribute,
        /*[in]*/ long RelativeTo ) = 0;
      virtual HRESULT __stdcall raw_Duplicate (
        /*[out,retval]*/ struct ShapeRange * * prop ) = 0;
      virtual HRESULT __stdcall raw_Flip (
        /*[in]*/ enum Office::MsoFlipCmd FlipCmd ) = 0;
      virtual HRESULT __stdcall raw_IncrementLeft (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall raw_IncrementRotation (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall raw_IncrementTop (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall raw_Group (
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_PickUp ( ) = 0;
      virtual HRESULT __stdcall raw_Regroup (
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_RerouteConnections ( ) = 0;
      virtual HRESULT __stdcall raw_ScaleHeight (
        /*[in]*/ float Factor,
        /*[in]*/ enum Office::MsoTriState RelativeToOriginalSize,
        /*[in]*/ enum Office::MsoScaleFrom Scale ) = 0;
      virtual HRESULT __stdcall raw_ScaleWidth (
        /*[in]*/ float Factor,
        /*[in]*/ enum Office::MsoTriState RelativeToOriginalSize,
        /*[in]*/ enum Office::MsoScaleFrom Scale ) = 0;
      virtual HRESULT __stdcall raw_Select (
        /*[in]*/ VARIANT * Replace = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_SetShapesDefaultProperties ( ) = 0;
      virtual HRESULT __stdcall raw_Ungroup (
        /*[out,retval]*/ struct ShapeRange * * prop ) = 0;
      virtual HRESULT __stdcall raw_ZOrder (
        /*[in]*/ enum Office::MsoZOrderCmd ZOrderCmd ) = 0;
      virtual HRESULT __stdcall raw_ConvertToFrame (
        /*[out,retval]*/ struct Frame * * prop ) = 0;
      virtual HRESULT __stdcall raw_ConvertToInlineShape (
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall raw_Activate ( ) = 0;
      virtual HRESULT __stdcall get_AlternativeText (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_AlternativeText (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_HasDiagram (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_Diagram (
        /*[out,retval]*/ struct Office::IMsoDiagram * * prop ) = 0;
      virtual HRESULT __stdcall get_HasDiagramNode (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_DiagramNode (
        /*[out,retval]*/ struct DiagramNode * * prop ) = 0;
      virtual HRESULT __stdcall get_Child (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_ParentGroup (
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall get_CanvasItems (
        /*[out,retval]*/ struct CanvasShapes * * prop ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_CanvasCropLeft (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall raw_CanvasCropTop (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall raw_CanvasCropRight (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall raw_CanvasCropBottom (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall put_RTF (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_LayoutInCell (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_LayoutInCell (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_LeftRelative (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftRelative (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_TopRelative (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TopRelative (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_WidthRelative (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_WidthRelative (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HeightRelative (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_HeightRelative (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RelativeHorizontalSize (
        /*[out,retval]*/ enum WdRelativeHorizontalSize * prop ) = 0;
      virtual HRESULT __stdcall put_RelativeHorizontalSize (
        /*[in]*/ enum WdRelativeHorizontalSize prop ) = 0;
      virtual HRESULT __stdcall get_RelativeVerticalSize (
        /*[out,retval]*/ enum WdRelativeVerticalSize * prop ) = 0;
      virtual HRESULT __stdcall put_RelativeVerticalSize (
        /*[in]*/ enum WdRelativeVerticalSize prop ) = 0;
      virtual HRESULT __stdcall get_SoftEdge (
        /*[out,retval]*/ struct SoftEdgeFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Glow (
        /*[out,retval]*/ struct GlowFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Reflection (
        /*[out,retval]*/ struct ReflectionFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_TextFrame2 (
        /*[out,retval]*/ struct Office::TextFrame2 * * prop ) = 0;
};

struct __declspec(uuid("000209b6-0000-0000-c000-000000000046"))
GroupShapes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    ShapePtr Item (
        VARIANT * Index );
    ShapeRangePtr Range (
        VARIANT * Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct ShapeRange * * prop ) = 0;
};

struct __declspec(uuid("000209a0-0000-0000-c000-000000000046"))
Shape : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetHorizontalFlip))
    enum Office::MsoTriState HorizontalFlip;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetLeft,put=PutLeft))
    float Left;
    __declspec(property(get=GetLine))
    LineFormatPtr Line;
    __declspec(property(get=GetLockAspectRatio,put=PutLockAspectRatio))
    enum Office::MsoTriState LockAspectRatio;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetNodes))
    ShapeNodesPtr Nodes;
    __declspec(property(get=GetRotation,put=PutRotation))
    float Rotation;
    __declspec(property(get=GetPictureFormat))
    PictureFormatPtr PictureFormat;
    __declspec(property(get=GetShadow))
    ShadowFormatPtr Shadow;
    __declspec(property(get=GetTextEffect))
    TextEffectFormatPtr TextEffect;
    __declspec(property(get=GetHyperlink))
    HyperlinkPtr Hyperlink;
    __declspec(property(get=GetTextFrame))
    TextFramePtr TextFrame;
    __declspec(property(get=GetThreeD))
    ThreeDFormatPtr ThreeD;
    __declspec(property(get=GetTop,put=PutTop))
    float Top;
    __declspec(property(get=GetType))
    enum Office::MsoShapeType Type;
    __declspec(property(get=GetVerticalFlip))
    enum Office::MsoTriState VerticalFlip;
    __declspec(property(get=GetVertices))
    _variant_t Vertices;
    __declspec(property(get=GetVisible,put=PutVisible))
    enum Office::MsoTriState Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    float Width;
    __declspec(property(get=GetZOrderPosition))
    long ZOrderPosition;
    __declspec(property(get=GetAlternativeText,put=PutAlternativeText))
    _bstr_t AlternativeText;
    __declspec(property(get=GetHasDiagram))
    enum Office::MsoTriState HasDiagram;
    __declspec(property(get=GetDiagram))
    Office::IMsoDiagramPtr Diagram;
    __declspec(property(get=GetHasDiagramNode))
    enum Office::MsoTriState HasDiagramNode;
    __declspec(property(get=GetDiagramNode))
    DiagramNodePtr DiagramNode;
    __declspec(property(get=GetChild))
    enum Office::MsoTriState Child;
    __declspec(property(get=GetParentGroup))
    ShapePtr ParentGroup;
    __declspec(property(get=GetCanvasItems))
    CanvasShapesPtr CanvasItems;
    __declspec(property(get=GetID))
    long ID;
    __declspec(property(put=PutRTF))
    _bstr_t RTF;
    __declspec(property(get=GetLayoutInCell,put=PutLayoutInCell))
    long LayoutInCell;
    __declspec(property(get=GetHasChart))
    enum Office::MsoTriState HasChart;
    __declspec(property(get=GetDummy1))
    VARIANT_BOOL Dummy1;
    __declspec(property(get=GetSoftEdge))
    SoftEdgeFormatPtr SoftEdge;
    __declspec(property(get=GetGlow))
    GlowFormatPtr Glow;
    __declspec(property(get=GetReflection))
    ReflectionFormatPtr Reflection;
    __declspec(property(get=GetTextFrame2))
    Office::TextFrame2Ptr TextFrame2;
    __declspec(property(get=GetOLEFormat))
    OLEFormatPtr OLEFormat;
    __declspec(property(get=GetAnchor))
    RangePtr Anchor;
    __declspec(property(get=GetLinkFormat))
    LinkFormatPtr LinkFormat;
    __declspec(property(get=GetScript))
    Office::ScriptPtr Script;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetRelativeHorizontalPosition,put=PutRelativeHorizontalPosition))
    enum WdRelativeHorizontalPosition RelativeHorizontalPosition;
    __declspec(property(get=GetRelativeVerticalPosition,put=PutRelativeVerticalPosition))
    enum WdRelativeVerticalPosition RelativeVerticalPosition;
    __declspec(property(get=GetLockAnchor,put=PutLockAnchor))
    long LockAnchor;
    __declspec(property(get=GetWrapFormat))
    WrapFormatPtr WrapFormat;
    __declspec(property(get=GetLeftRelative,put=PutLeftRelative))
    float LeftRelative;
    __declspec(property(get=GetTopRelative,put=PutTopRelative))
    float TopRelative;
    __declspec(property(get=GetWidthRelative,put=PutWidthRelative))
    float WidthRelative;
    __declspec(property(get=GetHeightRelative,put=PutHeightRelative))
    float HeightRelative;
    __declspec(property(get=GetRelativeHorizontalSize,put=PutRelativeHorizontalSize))
    enum WdRelativeHorizontalSize RelativeHorizontalSize;
    __declspec(property(get=GetRelativeVerticalSize,put=PutRelativeVerticalSize))
    enum WdRelativeVerticalSize RelativeVerticalSize;
    __declspec(property(get=GetAdjustments))
    AdjustmentsPtr Adjustments;
    __declspec(property(get=GetAutoShapeType,put=PutAutoShapeType))
    enum Office::MsoAutoShapeType AutoShapeType;
    __declspec(property(get=GetCallout))
    CalloutFormatPtr Callout;
    __declspec(property(get=GetConnectionSiteCount))
    long ConnectionSiteCount;
    __declspec(property(get=GetConnector))
    enum Office::MsoTriState Connector;
    __declspec(property(get=GetConnectorFormat))
    ConnectorFormatPtr ConnectorFormat;
    __declspec(property(get=GetFill))
    FillFormatPtr Fill;
    __declspec(property(get=GetGroupItems))
    GroupShapesPtr GroupItems;
    __declspec(property(get=GetHeight,put=PutHeight))
    float Height;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    AdjustmentsPtr GetAdjustments ( );
    enum Office::MsoAutoShapeType GetAutoShapeType ( );
    void PutAutoShapeType (
        enum Office::MsoAutoShapeType prop );
    CalloutFormatPtr GetCallout ( );
    long GetConnectionSiteCount ( );
    enum Office::MsoTriState GetConnector ( );
    ConnectorFormatPtr GetConnectorFormat ( );
    FillFormatPtr GetFill ( );
    GroupShapesPtr GetGroupItems ( );
    float GetHeight ( );
    void PutHeight (
        float prop );
    enum Office::MsoTriState GetHorizontalFlip ( );
    float GetLeft ( );
    void PutLeft (
        float prop );
    LineFormatPtr GetLine ( );
    enum Office::MsoTriState GetLockAspectRatio ( );
    void PutLockAspectRatio (
        enum Office::MsoTriState prop );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t prop );
    ShapeNodesPtr GetNodes ( );
    float GetRotation ( );
    void PutRotation (
        float prop );
    PictureFormatPtr GetPictureFormat ( );
    ShadowFormatPtr GetShadow ( );
    TextEffectFormatPtr GetTextEffect ( );
    TextFramePtr GetTextFrame ( );
    ThreeDFormatPtr GetThreeD ( );
    float GetTop ( );
    void PutTop (
        float prop );
    enum Office::MsoShapeType GetType ( );
    enum Office::MsoTriState GetVerticalFlip ( );
    _variant_t GetVertices ( );
    enum Office::MsoTriState GetVisible ( );
    void PutVisible (
        enum Office::MsoTriState prop );
    float GetWidth ( );
    void PutWidth (
        float prop );
    long GetZOrderPosition ( );
    HyperlinkPtr GetHyperlink ( );
    enum WdRelativeHorizontalPosition GetRelativeHorizontalPosition ( );
    void PutRelativeHorizontalPosition (
        enum WdRelativeHorizontalPosition prop );
    enum WdRelativeVerticalPosition GetRelativeVerticalPosition ( );
    void PutRelativeVerticalPosition (
        enum WdRelativeVerticalPosition prop );
    long GetLockAnchor ( );
    void PutLockAnchor (
        long prop );
    WrapFormatPtr GetWrapFormat ( );
    OLEFormatPtr GetOLEFormat ( );
    RangePtr GetAnchor ( );
    LinkFormatPtr GetLinkFormat ( );
    HRESULT Apply ( );
    HRESULT Delete ( );
    ShapePtr Duplicate ( );
    HRESULT Flip (
        enum Office::MsoFlipCmd FlipCmd );
    HRESULT IncrementLeft (
        float Increment );
    HRESULT IncrementRotation (
        float Increment );
    HRESULT IncrementTop (
        float Increment );
    HRESULT PickUp ( );
    HRESULT RerouteConnections ( );
    HRESULT ScaleHeight (
        float Factor,
        enum Office::MsoTriState RelativeToOriginalSize,
        enum Office::MsoScaleFrom Scale );
    HRESULT ScaleWidth (
        float Factor,
        enum Office::MsoTriState RelativeToOriginalSize,
        enum Office::MsoScaleFrom Scale );
    HRESULT Select (
        VARIANT * Replace = &vtMissing );
    HRESULT SetShapesDefaultProperties ( );
    ShapeRangePtr Ungroup ( );
    HRESULT ZOrder (
        enum Office::MsoZOrderCmd ZOrderCmd );
    InlineShapePtr ConvertToInlineShape ( );
    FramePtr ConvertToFrame ( );
    HRESULT Activate ( );
    _bstr_t GetAlternativeText ( );
    void PutAlternativeText (
        _bstr_t prop );
    Office::ScriptPtr GetScript ( );
    enum Office::MsoTriState GetHasDiagram ( );
    Office::IMsoDiagramPtr GetDiagram ( );
    enum Office::MsoTriState GetHasDiagramNode ( );
    DiagramNodePtr GetDiagramNode ( );
    enum Office::MsoTriState GetChild ( );
    ShapePtr GetParentGroup ( );
    CanvasShapesPtr GetCanvasItems ( );
    long GetID ( );
    HRESULT CanvasCropLeft (
        float Increment );
    HRESULT CanvasCropTop (
        float Increment );
    HRESULT CanvasCropRight (
        float Increment );
    HRESULT CanvasCropBottom (
        float Increment );
    void PutRTF (
        _bstr_t _arg1 );
    long GetLayoutInCell ( );
    void PutLayoutInCell (
        long prop );
    enum Office::MsoTriState GetHasChart ( );
    VARIANT_BOOL GetDummy1 ( );
    float GetLeftRelative ( );
    void PutLeftRelative (
        float prop );
    float GetTopRelative ( );
    void PutTopRelative (
        float prop );
    float GetWidthRelative ( );
    void PutWidthRelative (
        float prop );
    float GetHeightRelative ( );
    void PutHeightRelative (
        float prop );
    enum WdRelativeHorizontalSize GetRelativeHorizontalSize ( );
    void PutRelativeHorizontalSize (
        enum WdRelativeHorizontalSize prop );
    enum WdRelativeVerticalSize GetRelativeVerticalSize ( );
    void PutRelativeVerticalSize (
        enum WdRelativeVerticalSize prop );
    SoftEdgeFormatPtr GetSoftEdge ( );
    GlowFormatPtr GetGlow ( );
    ReflectionFormatPtr GetReflection ( );
    Office::TextFrame2Ptr GetTextFrame2 ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Adjustments (
        /*[out,retval]*/ struct Adjustments * * prop ) = 0;
      virtual HRESULT __stdcall get_AutoShapeType (
        /*[out,retval]*/ enum Office::MsoAutoShapeType * prop ) = 0;
      virtual HRESULT __stdcall put_AutoShapeType (
        /*[in]*/ enum Office::MsoAutoShapeType prop ) = 0;
      virtual HRESULT __stdcall get_Callout (
        /*[out,retval]*/ struct CalloutFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_ConnectionSiteCount (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Connector (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_ConnectorFormat (
        /*[out,retval]*/ struct ConnectorFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct FillFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_GroupItems (
        /*[out,retval]*/ struct GroupShapes * * prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalFlip (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Line (
        /*[out,retval]*/ struct LineFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_LockAspectRatio (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_LockAspectRatio (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Nodes (
        /*[out,retval]*/ struct ShapeNodes * * prop ) = 0;
      virtual HRESULT __stdcall get_Rotation (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Rotation (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_PictureFormat (
        /*[out,retval]*/ struct PictureFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ struct ShadowFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_TextEffect (
        /*[out,retval]*/ struct TextEffectFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_TextFrame (
        /*[out,retval]*/ struct TextFrame * * prop ) = 0;
      virtual HRESULT __stdcall get_ThreeD (
        /*[out,retval]*/ struct ThreeDFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoShapeType * prop ) = 0;
      virtual HRESULT __stdcall get_VerticalFlip (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_Vertices (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ZOrderPosition (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Hyperlink (
        /*[out,retval]*/ struct Hyperlink * * prop ) = 0;
      virtual HRESULT __stdcall get_RelativeHorizontalPosition (
        /*[out,retval]*/ enum WdRelativeHorizontalPosition * prop ) = 0;
      virtual HRESULT __stdcall put_RelativeHorizontalPosition (
        /*[in]*/ enum WdRelativeHorizontalPosition prop ) = 0;
      virtual HRESULT __stdcall get_RelativeVerticalPosition (
        /*[out,retval]*/ enum WdRelativeVerticalPosition * prop ) = 0;
      virtual HRESULT __stdcall put_RelativeVerticalPosition (
        /*[in]*/ enum WdRelativeVerticalPosition prop ) = 0;
      virtual HRESULT __stdcall get_LockAnchor (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_LockAnchor (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_WrapFormat (
        /*[out,retval]*/ struct WrapFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_OLEFormat (
        /*[out,retval]*/ struct OLEFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Anchor (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_LinkFormat (
        /*[out,retval]*/ struct LinkFormat * * prop ) = 0;
      virtual HRESULT __stdcall raw_Apply ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Duplicate (
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_Flip (
        /*[in]*/ enum Office::MsoFlipCmd FlipCmd ) = 0;
      virtual HRESULT __stdcall raw_IncrementLeft (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall raw_IncrementRotation (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall raw_IncrementTop (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall raw_PickUp ( ) = 0;
      virtual HRESULT __stdcall raw_RerouteConnections ( ) = 0;
      virtual HRESULT __stdcall raw_ScaleHeight (
        /*[in]*/ float Factor,
        /*[in]*/ enum Office::MsoTriState RelativeToOriginalSize,
        /*[in]*/ enum Office::MsoScaleFrom Scale ) = 0;
      virtual HRESULT __stdcall raw_ScaleWidth (
        /*[in]*/ float Factor,
        /*[in]*/ enum Office::MsoTriState RelativeToOriginalSize,
        /*[in]*/ enum Office::MsoScaleFrom Scale ) = 0;
      virtual HRESULT __stdcall raw_Select (
        /*[in]*/ VARIANT * Replace = &vtMissing ) = 0;
      virtual HRESULT __stdcall raw_SetShapesDefaultProperties ( ) = 0;
      virtual HRESULT __stdcall raw_Ungroup (
        /*[out,retval]*/ struct ShapeRange * * prop ) = 0;
      virtual HRESULT __stdcall raw_ZOrder (
        /*[in]*/ enum Office::MsoZOrderCmd ZOrderCmd ) = 0;
      virtual HRESULT __stdcall raw_ConvertToInlineShape (
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall raw_ConvertToFrame (
        /*[out,retval]*/ struct Frame * * prop ) = 0;
      virtual HRESULT __stdcall raw_Activate ( ) = 0;
      virtual HRESULT __stdcall get_AlternativeText (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_AlternativeText (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Script (
        /*[out,retval]*/ struct Office::Script * * prop ) = 0;
      virtual HRESULT __stdcall get_HasDiagram (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_Diagram (
        /*[out,retval]*/ struct Office::IMsoDiagram * * prop ) = 0;
      virtual HRESULT __stdcall get_HasDiagramNode (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_DiagramNode (
        /*[out,retval]*/ struct DiagramNode * * prop ) = 0;
      virtual HRESULT __stdcall get_Child (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_ParentGroup (
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall get_CanvasItems (
        /*[out,retval]*/ struct CanvasShapes * * prop ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_CanvasCropLeft (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall raw_CanvasCropTop (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall raw_CanvasCropRight (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall raw_CanvasCropBottom (
        /*[in]*/ float Increment ) = 0;
      virtual HRESULT __stdcall put_RTF (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_LayoutInCell (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_LayoutInCell (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_HasChart (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_Dummy1 (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_LeftRelative (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftRelative (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_TopRelative (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_TopRelative (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_WidthRelative (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_WidthRelative (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HeightRelative (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_HeightRelative (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RelativeHorizontalSize (
        /*[out,retval]*/ enum WdRelativeHorizontalSize * prop ) = 0;
      virtual HRESULT __stdcall put_RelativeHorizontalSize (
        /*[in]*/ enum WdRelativeHorizontalSize prop ) = 0;
      virtual HRESULT __stdcall get_RelativeVerticalSize (
        /*[out,retval]*/ enum WdRelativeVerticalSize * prop ) = 0;
      virtual HRESULT __stdcall put_RelativeVerticalSize (
        /*[in]*/ enum WdRelativeVerticalSize prop ) = 0;
      virtual HRESULT __stdcall get_SoftEdge (
        /*[out,retval]*/ struct SoftEdgeFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Glow (
        /*[out,retval]*/ struct GlowFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Reflection (
        /*[out,retval]*/ struct ReflectionFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_TextFrame2 (
        /*[out,retval]*/ struct Office::TextFrame2 * * prop ) = 0;
};

struct __declspec(uuid("000209b2-0000-0000-c000-000000000046"))
TextFrame : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    ShapePtr Parent;
    __declspec(property(get=GetMarginBottom,put=PutMarginBottom))
    float MarginBottom;
    __declspec(property(get=GetMarginLeft,put=PutMarginLeft))
    float MarginLeft;
    __declspec(property(get=GetMarginRight,put=PutMarginRight))
    float MarginRight;
    __declspec(property(get=GetMarginTop,put=PutMarginTop))
    float MarginTop;
    __declspec(property(get=GetOrientation,put=PutOrientation))
    enum Office::MsoTextOrientation Orientation;
    __declspec(property(get=GetTextRange))
    RangePtr TextRange;
    __declspec(property(get=GetContainingRange))
    RangePtr ContainingRange;
    __declspec(property(get=GetNext,put=PutNext))
    TextFramePtr Next;
    __declspec(property(get=GetPrevious,put=PutPrevious))
    TextFramePtr Previous;
    __declspec(property(get=GetOverflowing))
    VARIANT_BOOL Overflowing;
    __declspec(property(get=GetHasText))
    long HasText;
    __declspec(property(get=GetAutoSize,put=PutAutoSize))
    long AutoSize;
    __declspec(property(get=GetWordWrap,put=PutWordWrap))
    long WordWrap;
    __declspec(property(get=GetVerticalAnchor,put=PutVerticalAnchor))
    enum Office::MsoVerticalAnchor VerticalAnchor;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    ShapePtr GetParent ( );
    float GetMarginBottom ( );
    void PutMarginBottom (
        float prop );
    float GetMarginLeft ( );
    void PutMarginLeft (
        float prop );
    float GetMarginRight ( );
    void PutMarginRight (
        float prop );
    float GetMarginTop ( );
    void PutMarginTop (
        float prop );
    enum Office::MsoTextOrientation GetOrientation ( );
    void PutOrientation (
        enum Office::MsoTextOrientation prop );
    RangePtr GetTextRange ( );
    RangePtr GetContainingRange ( );
    TextFramePtr GetNext ( );
    void PutNext (
        struct TextFrame * prop );
    TextFramePtr GetPrevious ( );
    void PutPrevious (
        struct TextFrame * prop );
    VARIANT_BOOL GetOverflowing ( );
    long GetHasText ( );
    HRESULT BreakForwardLink ( );
    VARIANT_BOOL ValidLinkTarget (
        struct TextFrame * TargetTextFrame );
    long GetAutoSize ( );
    void PutAutoSize (
        long prop );
    long GetWordWrap ( );
    void PutWordWrap (
        long prop );
    enum Office::MsoVerticalAnchor GetVerticalAnchor ( );
    void PutVerticalAnchor (
        enum Office::MsoVerticalAnchor prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall get_MarginBottom (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_MarginBottom (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_MarginLeft (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_MarginLeft (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_MarginRight (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_MarginRight (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_MarginTop (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_MarginTop (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ enum Office::MsoTextOrientation * prop ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ enum Office::MsoTextOrientation prop ) = 0;
      virtual HRESULT __stdcall get_TextRange (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_ContainingRange (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Next (
        /*[out,retval]*/ struct TextFrame * * prop ) = 0;
      virtual HRESULT __stdcall put_Next (
        /*[in]*/ struct TextFrame * prop ) = 0;
      virtual HRESULT __stdcall get_Previous (
        /*[out,retval]*/ struct TextFrame * * prop ) = 0;
      virtual HRESULT __stdcall put_Previous (
        /*[in]*/ struct TextFrame * prop ) = 0;
      virtual HRESULT __stdcall get_Overflowing (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_HasText (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_BreakForwardLink ( ) = 0;
      virtual HRESULT __stdcall raw_ValidLinkTarget (
        /*[in]*/ struct TextFrame * TargetTextFrame,
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_WordWrap (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_WordWrap (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_VerticalAnchor (
        /*[out,retval]*/ enum Office::MsoVerticalAnchor * prop ) = 0;
      virtual HRESULT __stdcall put_VerticalAnchor (
        /*[in]*/ enum Office::MsoVerticalAnchor prop ) = 0;
};

struct __declspec(uuid("000209a8-0000-0000-c000-000000000046"))
InlineShape : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetTextEffect,put=PutTextEffect))
    TextEffectFormatPtr TextEffect;
    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetLinkFormat))
    LinkFormatPtr LinkFormat;
    __declspec(property(get=GetField))
    FieldPtr Field;
    __declspec(property(get=GetOLEFormat))
    OLEFormatPtr OLEFormat;
    __declspec(property(get=GetType))
    enum WdInlineShapeType Type;
    __declspec(property(get=GetHyperlink))
    HyperlinkPtr Hyperlink;
    __declspec(property(get=GetHeight,put=PutHeight))
    float Height;
    __declspec(property(get=GetWidth,put=PutWidth))
    float Width;
    __declspec(property(get=GetScaleHeight,put=PutScaleHeight))
    float ScaleHeight;
    __declspec(property(get=GetScaleWidth,put=PutScaleWidth))
    float ScaleWidth;
    __declspec(property(get=GetIsPictureBullet))
    VARIANT_BOOL IsPictureBullet;
    __declspec(property(get=GetLockAspectRatio,put=PutLockAspectRatio))
    enum Office::MsoTriState LockAspectRatio;
    __declspec(property(get=GetGroupItems))
    GroupShapesPtr GroupItems;
    __declspec(property(get=GetScript))
    Office::ScriptPtr Script;
    __declspec(property(get=GetOWSAnchor))
    long OWSAnchor;
    __declspec(property(get=GetAlternativeText,put=PutAlternativeText))
    _bstr_t AlternativeText;
    __declspec(property(get=GetBorders,put=PutBorders))
    BordersPtr Borders;
    __declspec(property(get=GetShadow))
    ShadowFormatPtr Shadow;
    __declspec(property(get=GetHasChart))
    enum Office::MsoTriState HasChart;
    __declspec(property(get=GetDummy1))
    VARIANT_BOOL Dummy1;
    __declspec(property(get=GetSoftEdge))
    SoftEdgeFormatPtr SoftEdge;
    __declspec(property(get=GetGlow))
    GlowFormatPtr Glow;
    __declspec(property(get=GetReflection))
    ReflectionFormatPtr Reflection;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetFill))
    FillFormatPtr Fill;
    __declspec(property(get=GetLine))
    LineFormatPtr Line;
    __declspec(property(get=GetPictureFormat,put=PutPictureFormat))
    PictureFormatPtr PictureFormat;
    __declspec(property(get=GetHorizontalLineFormat))
    HorizontalLineFormatPtr HorizontalLineFormat;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    BordersPtr GetBorders ( );
    void PutBorders (
        struct Borders * prop );
    RangePtr GetRange ( );
    LinkFormatPtr GetLinkFormat ( );
    FieldPtr GetField ( );
    OLEFormatPtr GetOLEFormat ( );
    enum WdInlineShapeType GetType ( );
    HyperlinkPtr GetHyperlink ( );
    float GetHeight ( );
    void PutHeight (
        float prop );
    float GetWidth ( );
    void PutWidth (
        float prop );
    float GetScaleHeight ( );
    void PutScaleHeight (
        float prop );
    float GetScaleWidth ( );
    void PutScaleWidth (
        float prop );
    enum Office::MsoTriState GetLockAspectRatio ( );
    void PutLockAspectRatio (
        enum Office::MsoTriState prop );
    LineFormatPtr GetLine ( );
    FillFormatPtr GetFill ( );
    PictureFormatPtr GetPictureFormat ( );
    void PutPictureFormat (
        struct PictureFormat * prop );
    HRESULT Activate ( );
    HRESULT Reset ( );
    HRESULT Delete ( );
    HRESULT Select ( );
    ShapePtr ConvertToShape ( );
    HorizontalLineFormatPtr GetHorizontalLineFormat ( );
    Office::ScriptPtr GetScript ( );
    long GetOWSAnchor ( );
    TextEffectFormatPtr GetTextEffect ( );
    void PutTextEffect (
        struct TextEffectFormat * prop );
    _bstr_t GetAlternativeText ( );
    void PutAlternativeText (
        _bstr_t prop );
    VARIANT_BOOL GetIsPictureBullet ( );
    GroupShapesPtr GetGroupItems ( );
    enum Office::MsoTriState GetHasChart ( );
    VARIANT_BOOL GetDummy1 ( );
    SoftEdgeFormatPtr GetSoftEdge ( );
    GlowFormatPtr GetGlow ( );
    ReflectionFormatPtr GetReflection ( );
    ShadowFormatPtr GetShadow ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Borders (
        /*[out,retval]*/ struct Borders * * prop ) = 0;
      virtual HRESULT __stdcall put_Borders (
        /*[in]*/ struct Borders * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_LinkFormat (
        /*[out,retval]*/ struct LinkFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Field (
        /*[out,retval]*/ struct Field * * prop ) = 0;
      virtual HRESULT __stdcall get_OLEFormat (
        /*[out,retval]*/ struct OLEFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdInlineShapeType * prop ) = 0;
      virtual HRESULT __stdcall get_Hyperlink (
        /*[out,retval]*/ struct Hyperlink * * prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ScaleHeight (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_ScaleHeight (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_ScaleWidth (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_ScaleWidth (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_LockAspectRatio (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_LockAspectRatio (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_Line (
        /*[out,retval]*/ struct LineFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct FillFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_PictureFormat (
        /*[out,retval]*/ struct PictureFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_PictureFormat (
        /*[in]*/ struct PictureFormat * prop ) = 0;
      virtual HRESULT __stdcall raw_Activate ( ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
      virtual HRESULT __stdcall raw_ConvertToShape (
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall get_HorizontalLineFormat (
        /*[out,retval]*/ struct HorizontalLineFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Script (
        /*[out,retval]*/ struct Office::Script * * prop ) = 0;
      virtual HRESULT __stdcall get_OWSAnchor (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_TextEffect (
        /*[out,retval]*/ struct TextEffectFormat * * prop ) = 0;
      virtual HRESULT __stdcall put_TextEffect (
        /*[in]*/ struct TextEffectFormat * prop ) = 0;
      virtual HRESULT __stdcall get_AlternativeText (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_AlternativeText (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_IsPictureBullet (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_GroupItems (
        /*[out,retval]*/ struct GroupShapes * * prop ) = 0;
      virtual HRESULT __stdcall get_HasChart (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_Dummy1 (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_SoftEdge (
        /*[out,retval]*/ struct SoftEdgeFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Glow (
        /*[out,retval]*/ struct GlowFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Reflection (
        /*[out,retval]*/ struct ReflectionFormat * * prop ) = 0;
      virtual HRESULT __stdcall get_Shadow (
        /*[out,retval]*/ struct ShadowFormat * * prop ) = 0;
};

struct __declspec(uuid("000209a9-0000-0000-c000-000000000046"))
InlineShapes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    InlineShapePtr Item (
        long Index );
    InlineShapePtr AddPicture (
        _bstr_t FileName,
        VARIANT * LinkToFile = &vtMissing,
        VARIANT * SaveWithDocument = &vtMissing,
        VARIANT * Range = &vtMissing );
    InlineShapePtr AddOLEObject (
        VARIANT * ClassType = &vtMissing,
        VARIANT * FileName = &vtMissing,
        VARIANT * LinkToFile = &vtMissing,
        VARIANT * DisplayAsIcon = &vtMissing,
        VARIANT * IconFileName = &vtMissing,
        VARIANT * IconIndex = &vtMissing,
        VARIANT * IconLabel = &vtMissing,
        VARIANT * Range = &vtMissing );
    InlineShapePtr AddOLEControl (
        VARIANT * ClassType = &vtMissing,
        VARIANT * Range = &vtMissing );
    InlineShapePtr New (
        struct Range * Range );
    InlineShapePtr AddHorizontalLine (
        _bstr_t FileName,
        VARIANT * Range = &vtMissing );
    InlineShapePtr AddHorizontalLineStandard (
        VARIANT * Range = &vtMissing );
    InlineShapePtr AddPictureBullet (
        _bstr_t FileName,
        VARIANT * Range = &vtMissing );
    InlineShapePtr AddChart (
        enum Office::XlChartType Type,
        VARIANT * Range = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddPicture (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT * LinkToFile,
        /*[in]*/ VARIANT * SaveWithDocument,
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddOLEObject (
        /*[in]*/ VARIANT * ClassType,
        /*[in]*/ VARIANT * FileName,
        /*[in]*/ VARIANT * LinkToFile,
        /*[in]*/ VARIANT * DisplayAsIcon,
        /*[in]*/ VARIANT * IconFileName,
        /*[in]*/ VARIANT * IconIndex,
        /*[in]*/ VARIANT * IconLabel,
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddOLEControl (
        /*[in]*/ VARIANT * ClassType,
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall raw_New (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddHorizontalLine (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddHorizontalLineStandard (
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddPictureBullet (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddChart (
        /*[in]*/ enum Office::XlChartType Type,
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct InlineShape * * prop ) = 0;
};

struct __declspec(uuid("000209c7-0000-0000-c000-000000000046"))
ConnectorFormat : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetBeginConnected))
    enum Office::MsoTriState BeginConnected;
    __declspec(property(get=GetBeginConnectedShape))
    ShapePtr BeginConnectedShape;
    __declspec(property(get=GetBeginConnectionSite))
    long BeginConnectionSite;
    __declspec(property(get=GetEndConnected))
    enum Office::MsoTriState EndConnected;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetEndConnectedShape))
    ShapePtr EndConnectedShape;
    __declspec(property(get=GetEndConnectionSite))
    long EndConnectionSite;
    __declspec(property(get=GetType,put=PutType))
    enum Office::MsoConnectorType Type;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    enum Office::MsoTriState GetBeginConnected ( );
    ShapePtr GetBeginConnectedShape ( );
    long GetBeginConnectionSite ( );
    enum Office::MsoTriState GetEndConnected ( );
    ShapePtr GetEndConnectedShape ( );
    long GetEndConnectionSite ( );
    IDispatchPtr GetParent ( );
    enum Office::MsoConnectorType GetType ( );
    void PutType (
        enum Office::MsoConnectorType prop );
    HRESULT BeginConnect (
        struct Shape * * ConnectedShape,
        long ConnectionSite );
    HRESULT BeginDisconnect ( );
    HRESULT EndConnect (
        struct Shape * * ConnectedShape,
        long ConnectionSite );
    HRESULT EndDisconnect ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_BeginConnected (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_BeginConnectedShape (
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall get_BeginConnectionSite (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_EndConnected (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall get_EndConnectedShape (
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall get_EndConnectionSite (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoConnectorType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum Office::MsoConnectorType prop ) = 0;
      virtual HRESULT __stdcall raw_BeginConnect (
        /*[out]*/ struct Shape * * ConnectedShape,
        /*[in]*/ long ConnectionSite ) = 0;
      virtual HRESULT __stdcall raw_BeginDisconnect ( ) = 0;
      virtual HRESULT __stdcall raw_EndConnect (
        /*[out]*/ struct Shape * * ConnectedShape,
        /*[in]*/ long ConnectionSite ) = 0;
      virtual HRESULT __stdcall raw_EndDisconnect ( ) = 0;
};

struct __declspec(uuid("000209c9-0000-0000-c000-000000000046"))
FreeformBuilder : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    HRESULT AddNodes (
        enum Office::MsoSegmentType SegmentType,
        enum Office::MsoEditingType EditingType,
        float X1,
        float Y1,
        float X2,
        float Y2,
        float X3,
        float Y3 );
    ShapePtr ConvertToShape (
        VARIANT * Anchor = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddNodes (
        /*[in]*/ enum Office::MsoSegmentType SegmentType,
        /*[in]*/ enum Office::MsoEditingType EditingType,
        /*[in]*/ float X1,
        /*[in]*/ float Y1,
        /*[in]*/ float X2,
        /*[in]*/ float Y2,
        /*[in]*/ float X3,
        /*[in]*/ float Y3 ) = 0;
      virtual HRESULT __stdcall raw_ConvertToShape (
        /*[in]*/ VARIANT * Anchor,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
};

struct __declspec(uuid("396f9073-f9fd-11d3-8ea0-0050049a1a01"))
CanvasShapes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    ShapePtr Item (
        VARIANT * Index );
    ShapePtr AddCallout (
        enum Office::MsoCalloutType Type,
        float Left,
        float Top,
        float Width,
        float Height );
    ShapePtr AddConnector (
        enum Office::MsoConnectorType Type,
        float BeginX,
        float BeginY,
        float EndX,
        float EndY );
    ShapePtr AddCurve (
        VARIANT * SafeArrayOfPoints );
    ShapePtr AddLabel (
        enum Office::MsoTextOrientation Orientation,
        float Left,
        float Top,
        float Width,
        float Height );
    ShapePtr AddLine (
        float BeginX,
        float BeginY,
        float EndX,
        float EndY );
    ShapePtr AddPicture (
        _bstr_t FileName,
        VARIANT * LinkToFile = &vtMissing,
        VARIANT * SaveWithDocument = &vtMissing,
        VARIANT * Left = &vtMissing,
        VARIANT * Top = &vtMissing,
        VARIANT * Width = &vtMissing,
        VARIANT * Height = &vtMissing );
    ShapePtr AddPolyline (
        VARIANT * SafeArrayOfPoints );
    ShapePtr AddShape (
        long Type,
        float Left,
        float Top,
        float Width,
        float Height );
    ShapePtr AddTextEffect (
        enum Office::MsoPresetTextEffect PresetTextEffect,
        _bstr_t Text,
        _bstr_t FontName,
        float FontSize,
        enum Office::MsoTriState FontBold,
        enum Office::MsoTriState FontItalic,
        float Left,
        float Top );
    ShapePtr AddTextbox (
        enum Office::MsoTextOrientation Orientation,
        float Left,
        float Top,
        float Width,
        float Height );
    FreeformBuilderPtr BuildFreeform (
        enum Office::MsoEditingType EditingType,
        float X1,
        float Y1 );
    ShapeRangePtr Range (
        VARIANT * Index );
    HRESULT SelectAll ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddCallout (
        /*[in]*/ enum Office::MsoCalloutType Type,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddConnector (
        /*[in]*/ enum Office::MsoConnectorType Type,
        /*[in]*/ float BeginX,
        /*[in]*/ float BeginY,
        /*[in]*/ float EndX,
        /*[in]*/ float EndY,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddCurve (
        /*[in]*/ VARIANT * SafeArrayOfPoints,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddLabel (
        /*[in]*/ enum Office::MsoTextOrientation Orientation,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddLine (
        /*[in]*/ float BeginX,
        /*[in]*/ float BeginY,
        /*[in]*/ float EndX,
        /*[in]*/ float EndY,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddPicture (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT * LinkToFile,
        /*[in]*/ VARIANT * SaveWithDocument,
        /*[in]*/ VARIANT * Left,
        /*[in]*/ VARIANT * Top,
        /*[in]*/ VARIANT * Width,
        /*[in]*/ VARIANT * Height,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddPolyline (
        /*[in]*/ VARIANT * SafeArrayOfPoints,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddShape (
        /*[in]*/ long Type,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddTextEffect (
        /*[in]*/ enum Office::MsoPresetTextEffect PresetTextEffect,
        /*[in]*/ BSTR Text,
        /*[in]*/ BSTR FontName,
        /*[in]*/ float FontSize,
        /*[in]*/ enum Office::MsoTriState FontBold,
        /*[in]*/ enum Office::MsoTriState FontItalic,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddTextbox (
        /*[in]*/ enum Office::MsoTextOrientation Orientation,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_BuildFreeform (
        /*[in]*/ enum Office::MsoEditingType EditingType,
        /*[in]*/ float X1,
        /*[in]*/ float Y1,
        /*[out,retval]*/ struct FreeformBuilder * * prop ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct ShapeRange * * prop ) = 0;
      virtual HRESULT __stdcall raw_SelectAll ( ) = 0;
};

struct __declspec(uuid("000209e7-0000-0000-c000-000000000046"))
HTMLDivision : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetLeftIndent,put=PutLeftIndent))
    float LeftIndent;
    __declspec(property(get=GetRightIndent,put=PutRightIndent))
    float RightIndent;
    __declspec(property(get=GetSpaceBefore,put=PutSpaceBefore))
    float SpaceBefore;
    __declspec(property(get=GetSpaceAfter,put=PutSpaceAfter))
    float SpaceAfter;
    __declspec(property(get=GetHTMLDivisions))
    HTMLDivisionsPtr HTMLDivisions;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetBorders))
    BordersPtr Borders;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    RangePtr GetRange ( );
    BordersPtr GetBorders ( );
    float GetLeftIndent ( );
    void PutLeftIndent (
        float prop );
    float GetRightIndent ( );
    void PutRightIndent (
        float prop );
    float GetSpaceBefore ( );
    void PutSpaceBefore (
        float prop );
    float GetSpaceAfter ( );
    void PutSpaceAfter (
        float prop );
    HTMLDivisionsPtr GetHTMLDivisions ( );
    HTMLDivisionPtr HTMLDivisionParent (
        VARIANT * LevelsUp = &vtMissing );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Borders (
        /*[out,retval]*/ struct Borders * * prop ) = 0;
      virtual HRESULT __stdcall get_LeftIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_LeftIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_RightIndent (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_RightIndent (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_SpaceBefore (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceBefore (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_SpaceAfter (
        /*[out,retval]*/ float * prop ) = 0;
      virtual HRESULT __stdcall put_SpaceAfter (
        /*[in]*/ float prop ) = 0;
      virtual HRESULT __stdcall get_HTMLDivisions (
        /*[out,retval]*/ struct HTMLDivisions * * prop ) = 0;
      virtual HRESULT __stdcall raw_HTMLDivisionParent (
        /*[in]*/ VARIANT * LevelsUp,
        /*[out,retval]*/ struct HTMLDivision * * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("000209e8-0000-0000-c000-000000000046"))
HTMLDivisions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetNestingLevel))
    long NestingLevel;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    long GetNestingLevel ( );
    HTMLDivisionPtr Add (
        VARIANT * Range = &vtMissing );
    HTMLDivisionPtr Item (
        long Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_NestingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct HTMLDivision * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct HTMLDivision * * prop ) = 0;
};

struct __declspec(uuid("000209e9-0000-0000-c000-000000000046"))
DiagramNode : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetChildren))
    DiagramNodeChildrenPtr Children;
    __declspec(property(get=GetShape))
    ShapePtr Shape;
    __declspec(property(get=GetRoot))
    DiagramNodePtr Root;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetDiagram))
    DiagramPtr Diagram;
    __declspec(property(get=GetLayout,put=PutLayout))
    enum Office::MsoOrgChartLayoutType Layout;
    __declspec(property(get=GetTextShape))
    ShapePtr TextShape;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    DiagramNodeChildrenPtr GetChildren ( );
    ShapePtr GetShape ( );
    DiagramNodePtr GetRoot ( );
    DiagramPtr GetDiagram ( );
    enum Office::MsoOrgChartLayoutType GetLayout ( );
    void PutLayout (
        enum Office::MsoOrgChartLayoutType prop );
    ShapePtr GetTextShape ( );
    DiagramNodePtr AddNode (
        enum Office::MsoRelativeNodePosition Pos,
        enum Office::MsoDiagramNodeType NodeType );
    HRESULT Delete ( );
    HRESULT MoveNode (
        struct DiagramNode * * TargetNode,
        enum Office::MsoRelativeNodePosition Pos );
    HRESULT ReplaceNode (
        struct DiagramNode * * TargetNode );
    HRESULT SwapNode (
        struct DiagramNode * * TargetNode,
        enum Office::MsoRelativeNodePosition Pos );
    DiagramNodePtr CloneNode (
        VARIANT_BOOL copyChildren,
        struct DiagramNode * * TargetNode,
        enum Office::MsoRelativeNodePosition Pos );
    HRESULT TransferChildren (
        struct DiagramNode * * ReceivingNode );
    DiagramNodePtr NextNode ( );
    DiagramNodePtr PrevNode ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Children (
        /*[out,retval]*/ struct DiagramNodeChildren * * prop ) = 0;
      virtual HRESULT __stdcall get_Shape (
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall get_Root (
        /*[out,retval]*/ struct DiagramNode * * prop ) = 0;
      virtual HRESULT __stdcall get_Diagram (
        /*[out,retval]*/ struct Diagram * * prop ) = 0;
      virtual HRESULT __stdcall get_Layout (
        /*[out,retval]*/ enum Office::MsoOrgChartLayoutType * prop ) = 0;
      virtual HRESULT __stdcall put_Layout (
        /*[in]*/ enum Office::MsoOrgChartLayoutType prop ) = 0;
      virtual HRESULT __stdcall get_TextShape (
        /*[out,retval]*/ struct Shape * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddNode (
        /*[in]*/ enum Office::MsoRelativeNodePosition Pos,
        /*[in]*/ enum Office::MsoDiagramNodeType NodeType,
        /*[out,retval]*/ struct DiagramNode * * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_MoveNode (
        /*[out]*/ struct DiagramNode * * TargetNode,
        /*[in]*/ enum Office::MsoRelativeNodePosition Pos ) = 0;
      virtual HRESULT __stdcall raw_ReplaceNode (
        /*[out]*/ struct DiagramNode * * TargetNode ) = 0;
      virtual HRESULT __stdcall raw_SwapNode (
        /*[out]*/ struct DiagramNode * * TargetNode,
        /*[in]*/ enum Office::MsoRelativeNodePosition Pos ) = 0;
      virtual HRESULT __stdcall raw_CloneNode (
        /*[in]*/ VARIANT_BOOL copyChildren,
        /*[out]*/ struct DiagramNode * * TargetNode,
        /*[in]*/ enum Office::MsoRelativeNodePosition Pos,
        /*[out,retval]*/ struct DiagramNode * * prop ) = 0;
      virtual HRESULT __stdcall raw_TransferChildren (
        /*[out]*/ struct DiagramNode * * ReceivingNode ) = 0;
      virtual HRESULT __stdcall raw_NextNode (
        /*[out,retval]*/ struct DiagramNode * * prop ) = 0;
      virtual HRESULT __stdcall raw_PrevNode (
        /*[out,retval]*/ struct DiagramNode * * prop ) = 0;
};

struct __declspec(uuid("000209ea-0000-0000-c000-000000000046"))
DiagramNodeChildren : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetFirstChild))
    DiagramNodePtr FirstChild;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetLastChild))
    DiagramNodePtr LastChild;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IUnknownPtr Get_NewEnum ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    DiagramNodePtr GetFirstChild ( );
    DiagramNodePtr GetLastChild ( );
    DiagramNodePtr Item (
        VARIANT * Index );
    DiagramNodePtr AddNode (
        VARIANT * Index,
        enum Office::MsoDiagramNodeType NodeType );
    HRESULT SelectAll ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_FirstChild (
        /*[out,retval]*/ struct DiagramNode * * prop ) = 0;
      virtual HRESULT __stdcall get_LastChild (
        /*[out,retval]*/ struct DiagramNode * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct DiagramNode * * prop ) = 0;
      virtual HRESULT __stdcall raw_AddNode (
        /*[in]*/ VARIANT * Index,
        /*[in]*/ enum Office::MsoDiagramNodeType NodeType,
        /*[out,retval]*/ struct DiagramNode * * prop ) = 0;
      virtual HRESULT __stdcall raw_SelectAll ( ) = 0;
};

struct __declspec(uuid("000209eb-0000-0000-c000-000000000046"))
DiagramNodes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IUnknownPtr Get_NewEnum ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    DiagramNodePtr Item (
        VARIANT * Index );
    HRESULT SelectAll ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct DiagramNode * * prop ) = 0;
      virtual HRESULT __stdcall raw_SelectAll ( ) = 0;
};

struct __declspec(uuid("000209ec-0000-0000-c000-000000000046"))
Diagram : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetNodes))
    DiagramNodesPtr Nodes;
    __declspec(property(get=GetType))
    enum Office::MsoDiagramType Type;
    __declspec(property(get=GetAutoLayout,put=PutAutoLayout))
    enum Office::MsoTriState AutoLayout;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetReverse,put=PutReverse))
    enum Office::MsoTriState Reverse;
    __declspec(property(get=GetAutoFormat,put=PutAutoFormat))
    enum Office::MsoTriState AutoFormat;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    DiagramNodesPtr GetNodes ( );
    enum Office::MsoDiagramType GetType ( );
    enum Office::MsoTriState GetAutoLayout ( );
    void PutAutoLayout (
        enum Office::MsoTriState prop );
    enum Office::MsoTriState GetReverse ( );
    void PutReverse (
        enum Office::MsoTriState prop );
    enum Office::MsoTriState GetAutoFormat ( );
    void PutAutoFormat (
        enum Office::MsoTriState prop );
    HRESULT Convert (
        enum Office::MsoDiagramType Type );
    HRESULT FitText ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Nodes (
        /*[out,retval]*/ struct DiagramNodes * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum Office::MsoDiagramType * prop ) = 0;
      virtual HRESULT __stdcall get_AutoLayout (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_AutoLayout (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_Reverse (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_Reverse (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall get_AutoFormat (
        /*[out,retval]*/ enum Office::MsoTriState * prop ) = 0;
      virtual HRESULT __stdcall put_AutoFormat (
        /*[in]*/ enum Office::MsoTriState prop ) = 0;
      virtual HRESULT __stdcall raw_Convert (
        /*[in]*/ enum Office::MsoDiagramType Type ) = 0;
      virtual HRESULT __stdcall raw_FitText ( ) = 0;
};

struct __declspec(uuid("000209ed-0000-0000-c000-000000000046"))
SmartTag : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetXML))
    _bstr_t XML;
    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetDownloadURL))
    _bstr_t DownloadURL;
    __declspec(property(get=GetProperties))
    CustomPropertiesPtr Properties;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetSmartTagActions))
    SmartTagActionsPtr SmartTagActions;
    __declspec(property(get=GetXMLNode))
    XMLNodePtr XMLNode;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    _bstr_t GetXML ( );
    RangePtr GetRange ( );
    _bstr_t GetDownloadURL ( );
    CustomPropertiesPtr GetProperties ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    HRESULT Select ( );
    HRESULT Delete ( );
    SmartTagActionsPtr GetSmartTagActions ( );
    XMLNodePtr GetXMLNode ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_XML (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_DownloadURL (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct CustomProperties * * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_SmartTagActions (
        /*[out,retval]*/ struct SmartTagActions * * prop ) = 0;
      virtual HRESULT __stdcall get_XMLNode (
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
};

struct __declspec(uuid("000209ee-0000-0000-c000-000000000046"))
SmartTags : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    SmartTagPtr Item (
        VARIANT * Index );
    SmartTagPtr Add (
        _bstr_t Name,
        VARIANT * Range = &vtMissing,
        VARIANT * Properties = &vtMissing );
    SmartTagsPtr SmartTagsByType (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct SmartTag * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT * Range,
        /*[in]*/ VARIANT * Properties,
        /*[out,retval]*/ struct SmartTag * * prop ) = 0;
      virtual HRESULT __stdcall raw_SmartTagsByType (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct SmartTags * * prop ) = 0;
};

struct __declspec(uuid("ae6ce2f5-b9d3-407d-85a8-0f10c63289a4"))
Line : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetLineType))
    enum WdLineType LineType;
    __declspec(property(get=GetLeft))
    long Left;
    __declspec(property(get=GetTop))
    long Top;
    __declspec(property(get=GetWidth))
    long Width;
    __declspec(property(get=GetHeight))
    long Height;
    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetRectangles))
    RectanglesPtr Rectangles;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    enum WdLineType GetLineType ( );
    long GetLeft ( );
    long GetTop ( );
    long GetWidth ( );
    long GetHeight ( );
    RangePtr GetRange ( );
    RectanglesPtr GetRectangles ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_LineType (
        /*[out,retval]*/ enum WdLineType * prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Rectangles (
        /*[out,retval]*/ struct Rectangles * * prop ) = 0;
};

struct __declspec(uuid("e2e8a400-0615-427d-adcc-cad39ffebd42"))
Lines : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    LinePtr Item (
        long Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Line * * prop ) = 0;
};

struct __declspec(uuid("add4edf3-2f33-4734-9ce6-d476097c5ada"))
Rectangle : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRectangleType))
    enum WdRectangleType RectangleType;
    __declspec(property(get=GetLeft))
    long Left;
    __declspec(property(get=GetTop))
    long Top;
    __declspec(property(get=GetWidth))
    long Width;
    __declspec(property(get=GetHeight))
    long Height;
    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetLines))
    LinesPtr Lines;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    enum WdRectangleType GetRectangleType ( );
    long GetLeft ( );
    long GetTop ( );
    long GetWidth ( );
    long GetHeight ( );
    RangePtr GetRange ( );
    LinesPtr GetLines ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_RectangleType (
        /*[out,retval]*/ enum WdRectangleType * prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Lines (
        /*[out,retval]*/ struct Lines * * prop ) = 0;
};

struct __declspec(uuid("7d0f7985-68d9-4d93-91cb-8109280e76cc"))
Rectangles : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    RectanglePtr Item (
        long Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Rectangle * * prop ) = 0;
};

struct __declspec(uuid("352840a9-af7d-4ca4-87fc-21c68fdab3e4"))
Page : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetLeft))
    long Left;
    __declspec(property(get=GetTop))
    long Top;
    __declspec(property(get=GetWidth))
    long Width;
    __declspec(property(get=GetHeight))
    long Height;
    __declspec(property(get=GetRectangles))
    RectanglesPtr Rectangles;
    __declspec(property(get=GetBreaks))
    BreaksPtr Breaks;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetEnhMetaFileBits))
    _variant_t EnhMetaFileBits;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetLeft ( );
    long GetTop ( );
    long GetWidth ( );
    long GetHeight ( );
    RectanglesPtr GetRectangles ( );
    BreaksPtr GetBreaks ( );
    _variant_t GetEnhMetaFileBits ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Rectangles (
        /*[out,retval]*/ struct Rectangles * * prop ) = 0;
      virtual HRESULT __stdcall get_Breaks (
        /*[out,retval]*/ struct Breaks * * prop ) = 0;
      virtual HRESULT __stdcall get_EnhMetaFileBits (
        /*[out,retval]*/ VARIANT * prop ) = 0;
};

struct __declspec(uuid("91807402-6c6f-47cd-b8fa-c42fee8ee924"))
Pages : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    PagePtr Item (
        long Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Page * * prop ) = 0;
};

struct __declspec(uuid("09760240-0b89-49f7-a79d-479f24723f56"))
XMLNode : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBaseName))
    _bstr_t BaseName;
    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetText,put=PutText))
    _bstr_t Text;
    __declspec(property(get=GetNamespaceURI))
    _bstr_t NamespaceURI;
    __declspec(property(get=GetXML))
    _bstr_t XML[];
    __declspec(property(get=GetNextSibling))
    XMLNodePtr NextSibling;
    __declspec(property(get=GetPreviousSibling))
    XMLNodePtr PreviousSibling;
    __declspec(property(get=GetParentNode))
    XMLNodePtr ParentNode;
    __declspec(property(get=GetFirstChild))
    XMLNodePtr FirstChild;
    __declspec(property(get=GetLastChild))
    XMLNodePtr LastChild;
    __declspec(property(get=GetOwnerDocument))
    _DocumentPtr OwnerDocument;
    __declspec(property(get=GetNodeType))
    enum WdXMLNodeType NodeType;
    __declspec(property(get=GetChildNodes))
    XMLNodesPtr ChildNodes;
    __declspec(property(get=GetAttributes))
    XMLNodesPtr Attributes;
    __declspec(property(get=GetNodeValue,put=PutNodeValue))
    _bstr_t NodeValue;
    __declspec(property(get=GetHasChildNodes))
    VARIANT_BOOL HasChildNodes;
    __declspec(property(get=GetWordOpenXML))
    _bstr_t WordOpenXML;
    __declspec(property(get=GetChildNodeSuggestions))
    XMLChildNodeSuggestionsPtr ChildNodeSuggestions;
    __declspec(property(get=GetLevel))
    enum WdXMLNodeLevel Level;
    __declspec(property(get=GetValidationStatus))
    enum WdXMLValidationStatus ValidationStatus;
    __declspec(property(get=GetSmartTag))
    SmartTagPtr SmartTag;
    __declspec(property(get=GetValidationErrorText))
    _bstr_t ValidationErrorText[];
    __declspec(property(get=GetPlaceholderText,put=PutPlaceholderText))
    _bstr_t PlaceholderText;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetBaseName ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    RangePtr GetRange ( );
    _bstr_t GetText ( );
    void PutText (
        _bstr_t prop );
    _bstr_t GetNamespaceURI ( );
    _bstr_t GetXML (
        VARIANT_BOOL DataOnly );
    XMLNodePtr GetNextSibling ( );
    XMLNodePtr GetPreviousSibling ( );
    XMLNodePtr GetParentNode ( );
    XMLNodePtr GetFirstChild ( );
    XMLNodePtr GetLastChild ( );
    _DocumentPtr GetOwnerDocument ( );
    enum WdXMLNodeType GetNodeType ( );
    XMLNodesPtr GetChildNodes ( );
    XMLNodesPtr GetAttributes ( );
    _bstr_t GetNodeValue ( );
    void PutNodeValue (
        _bstr_t prop );
    VARIANT_BOOL GetHasChildNodes ( );
    XMLNodePtr SelectSingleNode (
        _bstr_t XPath,
        _bstr_t PrefixMapping,
        VARIANT_BOOL FastSearchSkippingTextNodes );
    XMLNodesPtr SelectNodes (
        _bstr_t XPath,
        _bstr_t PrefixMapping,
        VARIANT_BOOL FastSearchSkippingTextNodes );
    XMLChildNodeSuggestionsPtr GetChildNodeSuggestions ( );
    enum WdXMLNodeLevel GetLevel ( );
    enum WdXMLValidationStatus GetValidationStatus ( );
    SmartTagPtr GetSmartTag ( );
    _bstr_t GetValidationErrorText (
        VARIANT_BOOL Advanced );
    _bstr_t GetPlaceholderText ( );
    void PutPlaceholderText (
        _bstr_t prop );
    HRESULT Delete ( );
    HRESULT Copy ( );
    HRESULT RemoveChild (
        struct XMLNode * ChildElement );
    HRESULT Cut ( );
    HRESULT Validate ( );
    HRESULT SetValidationError (
        enum WdXMLValidationStatus Status,
        VARIANT * ErrorText,
        VARIANT_BOOL ClearedAutomatically );
    _bstr_t GetWordOpenXML ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_BaseName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_NamespaceURI (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_XML (
        /*[in]*/ VARIANT_BOOL DataOnly,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_NextSibling (
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
      virtual HRESULT __stdcall get_PreviousSibling (
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
      virtual HRESULT __stdcall get_ParentNode (
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
      virtual HRESULT __stdcall get_FirstChild (
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
      virtual HRESULT __stdcall get_LastChild (
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
      virtual HRESULT __stdcall get_OwnerDocument (
        /*[out,retval]*/ struct _Document * * prop ) = 0;
      virtual HRESULT __stdcall get_NodeType (
        /*[out,retval]*/ enum WdXMLNodeType * prop ) = 0;
      virtual HRESULT __stdcall get_ChildNodes (
        /*[out,retval]*/ struct XMLNodes * * prop ) = 0;
      virtual HRESULT __stdcall get_Attributes (
        /*[out,retval]*/ struct XMLNodes * * prop ) = 0;
      virtual HRESULT __stdcall get_NodeValue (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_NodeValue (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_HasChildNodes (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall raw_SelectSingleNode (
        /*[in]*/ BSTR XPath,
        /*[in]*/ BSTR PrefixMapping,
        /*[in]*/ VARIANT_BOOL FastSearchSkippingTextNodes,
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
      virtual HRESULT __stdcall raw_SelectNodes (
        /*[in]*/ BSTR XPath,
        /*[in]*/ BSTR PrefixMapping,
        /*[in]*/ VARIANT_BOOL FastSearchSkippingTextNodes,
        /*[out,retval]*/ struct XMLNodes * * prop ) = 0;
      virtual HRESULT __stdcall get_ChildNodeSuggestions (
        /*[out,retval]*/ struct XMLChildNodeSuggestions * * prop ) = 0;
      virtual HRESULT __stdcall get_Level (
        /*[out,retval]*/ enum WdXMLNodeLevel * prop ) = 0;
      virtual HRESULT __stdcall get_ValidationStatus (
        /*[out,retval]*/ enum WdXMLValidationStatus * prop ) = 0;
      virtual HRESULT __stdcall get_SmartTag (
        /*[out,retval]*/ struct SmartTag * * prop ) = 0;
      virtual HRESULT __stdcall get_ValidationErrorText (
        /*[in]*/ VARIANT_BOOL Advanced,
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_PlaceholderText (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_PlaceholderText (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Copy ( ) = 0;
      virtual HRESULT __stdcall raw_RemoveChild (
        /*[in]*/ struct XMLNode * ChildElement ) = 0;
      virtual HRESULT __stdcall raw_Cut ( ) = 0;
      virtual HRESULT __stdcall raw_Validate ( ) = 0;
      virtual HRESULT __stdcall raw_SetValidationError (
        /*[in]*/ enum WdXMLValidationStatus Status,
        /*[in]*/ VARIANT * ErrorText,
        /*[in]*/ VARIANT_BOOL ClearedAutomatically ) = 0;
      virtual HRESULT __stdcall get_WordOpenXML (
        /*[out,retval]*/ BSTR * prop ) = 0;
};

struct __declspec(uuid("d36c1f42-7044-4b9e-9ca3-85919454db04"))
XMLNodes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    XMLNodePtr Item (
        long Index );
    XMLNodePtr Add (
        _bstr_t Name,
        _bstr_t Namespace,
        VARIANT * Range = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR Namespace,
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
};

struct __declspec(uuid("a87e00e9-3ac3-4b53-abe3-7379653d0e82"))
XMLChildNodeSuggestion : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBaseName))
    _bstr_t BaseName;
    __declspec(property(get=GetNamespaceURI))
    _bstr_t NamespaceURI;
    __declspec(property(get=GetXMLSchemaReference))
    XMLSchemaReferencePtr XMLSchemaReference;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetBaseName ( );
    _bstr_t GetNamespaceURI ( );
    XMLSchemaReferencePtr GetXMLSchemaReference ( );
    XMLNodePtr Insert (
        VARIANT * Range = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_BaseName (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_NamespaceURI (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_XMLSchemaReference (
        /*[out,retval]*/ struct XMLSchemaReference * * prop ) = 0;
      virtual HRESULT __stdcall raw_Insert (
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct XMLNode * * prop ) = 0;
};

struct __declspec(uuid("de63b5ac-ca4f-46fe-9184-a5719ab9ed5b"))
XMLChildNodeSuggestions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    XMLChildNodeSuggestionPtr Item (
        VARIANT * Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct XMLChildNodeSuggestion * * prop ) = 0;
};

struct __declspec(uuid("00020a01-0001-0000-c000-000000000046"))
IApplicationEvents4 : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Startup ( );
    HRESULT Quit ( );
    HRESULT DocumentChange ( );
    HRESULT DocumentOpen (
        struct _Document * Doc );
    HRESULT DocumentBeforeClose (
        struct _Document * Doc,
        VARIANT_BOOL * Cancel );
    HRESULT DocumentBeforePrint (
        struct _Document * Doc,
        VARIANT_BOOL * Cancel );
    HRESULT DocumentBeforeSave (
        struct _Document * Doc,
        VARIANT_BOOL * SaveAsUI,
        VARIANT_BOOL * Cancel );
    HRESULT NewDocument (
        struct _Document * Doc );
    HRESULT WindowActivate (
        struct _Document * Doc,
        struct Window * Wn );
    HRESULT WindowDeactivate (
        struct _Document * Doc,
        struct Window * Wn );
    HRESULT WindowSelectionChange (
        struct Selection * Sel );
    HRESULT WindowBeforeRightClick (
        struct Selection * Sel,
        VARIANT_BOOL * Cancel );
    HRESULT WindowBeforeDoubleClick (
        struct Selection * Sel,
        VARIANT_BOOL * Cancel );
    HRESULT EPostagePropertyDialog (
        struct _Document * Doc );
    HRESULT EPostageInsert (
        struct _Document * Doc );
    HRESULT MailMergeAfterMerge (
        struct _Document * Doc,
        struct _Document * DocResult );
    HRESULT MailMergeAfterRecordMerge (
        struct _Document * Doc );
    HRESULT MailMergeBeforeMerge (
        struct _Document * Doc,
        long StartRecord,
        long EndRecord,
        VARIANT_BOOL * Cancel );
    HRESULT MailMergeBeforeRecordMerge (
        struct _Document * Doc,
        VARIANT_BOOL * Cancel );
    HRESULT MailMergeDataSourceLoad (
        struct _Document * Doc );
    HRESULT MailMergeDataSourceValidate (
        struct _Document * Doc,
        VARIANT_BOOL * Handled );
    HRESULT MailMergeWizardSendToCustom (
        struct _Document * Doc );
    HRESULT MailMergeWizardStateChange (
        struct _Document * Doc,
        int * FromState,
        int * ToState,
        VARIANT_BOOL * Handled );
    HRESULT WindowSize (
        struct _Document * Doc,
        struct Window * Wn );
    HRESULT XMLSelectionChange (
        struct Selection * Sel,
        struct XMLNode * OldXMLNode,
        struct XMLNode * NewXMLNode,
        long * Reason );
    HRESULT XMLValidationError (
        struct XMLNode * XMLNode );
    HRESULT DocumentSync (
        struct _Document * Doc,
        enum Office::MsoSyncEventType SyncEventType );
    HRESULT EPostageInsertEx (
        struct _Document * Doc,
        int cpDeliveryAddrStart,
        int cpDeliveryAddrEnd,
        int cpReturnAddrStart,
        int cpReturnAddrEnd,
        int xaWidth,
        int yaHeight,
        _bstr_t bstrPrinterName,
        _bstr_t bstrPaperFeed,
        VARIANT_BOOL fPrint,
        VARIANT_BOOL * fCancel );
    HRESULT MailMergeDataSourceValidate2 (
        struct _Document * Doc,
        VARIANT_BOOL * Handled );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Startup ( ) = 0;
      virtual HRESULT __stdcall raw_Quit ( ) = 0;
      virtual HRESULT __stdcall raw_DocumentChange ( ) = 0;
      virtual HRESULT __stdcall raw_DocumentOpen (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall raw_DocumentBeforeClose (
        /*[in]*/ struct _Document * Doc,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall raw_DocumentBeforePrint (
        /*[in]*/ struct _Document * Doc,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall raw_DocumentBeforeSave (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ VARIANT_BOOL * SaveAsUI,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall raw_NewDocument (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall raw_WindowActivate (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ struct Window * Wn ) = 0;
      virtual HRESULT __stdcall raw_WindowDeactivate (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ struct Window * Wn ) = 0;
      virtual HRESULT __stdcall raw_WindowSelectionChange (
        /*[in]*/ struct Selection * Sel ) = 0;
      virtual HRESULT __stdcall raw_WindowBeforeRightClick (
        /*[in]*/ struct Selection * Sel,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall raw_WindowBeforeDoubleClick (
        /*[in]*/ struct Selection * Sel,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall raw_EPostagePropertyDialog (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall raw_EPostageInsert (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall raw_MailMergeAfterMerge (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ struct _Document * DocResult ) = 0;
      virtual HRESULT __stdcall raw_MailMergeAfterRecordMerge (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall raw_MailMergeBeforeMerge (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ long StartRecord,
        /*[in]*/ long EndRecord,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall raw_MailMergeBeforeRecordMerge (
        /*[in]*/ struct _Document * Doc,
        /*[in,out]*/ VARIANT_BOOL * Cancel ) = 0;
      virtual HRESULT __stdcall raw_MailMergeDataSourceLoad (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall raw_MailMergeDataSourceValidate (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ VARIANT_BOOL * Handled ) = 0;
      virtual HRESULT __stdcall raw_MailMergeWizardSendToCustom (
        /*[in]*/ struct _Document * Doc ) = 0;
      virtual HRESULT __stdcall raw_MailMergeWizardStateChange (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ int * FromState,
        /*[in]*/ int * ToState,
        /*[in]*/ VARIANT_BOOL * Handled ) = 0;
      virtual HRESULT __stdcall raw_WindowSize (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ struct Window * Wn ) = 0;
      virtual HRESULT __stdcall raw_XMLSelectionChange (
        /*[in]*/ struct Selection * Sel,
        /*[in]*/ struct XMLNode * OldXMLNode,
        /*[in]*/ struct XMLNode * NewXMLNode,
        /*[in]*/ long * Reason ) = 0;
      virtual HRESULT __stdcall raw_XMLValidationError (
        /*[in]*/ struct XMLNode * XMLNode ) = 0;
      virtual HRESULT __stdcall raw_DocumentSync (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ enum Office::MsoSyncEventType SyncEventType ) = 0;
      virtual HRESULT __stdcall raw_EPostageInsertEx (
        /*[in]*/ struct _Document * Doc,
        /*[in]*/ int cpDeliveryAddrStart,
        /*[in]*/ int cpDeliveryAddrEnd,
        /*[in]*/ int cpReturnAddrStart,
        /*[in]*/ int cpReturnAddrEnd,
        /*[in]*/ int xaWidth,
        /*[in]*/ int yaHeight,
        /*[in]*/ BSTR bstrPrinterName,
        /*[in]*/ BSTR bstrPaperFeed,
        /*[in]*/ VARIANT_BOOL fPrint,
        /*[in,out]*/ VARIANT_BOOL * fCancel ) = 0;
      virtual HRESULT __stdcall raw_MailMergeDataSourceValidate2 (
        /*[in]*/ struct _Document * Doc,
        /*[in,out]*/ VARIANT_BOOL * Handled ) = 0;
};

struct __declspec(uuid("873e774b-926a-4cb1-878d-635a45187595"))
OMaths : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    OMathPtr Item (
        long Index );
    HRESULT Linearize ( );
    HRESULT BuildUp ( );
    RangePtr Add (
        struct Range * Range );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall raw_Linearize ( ) = 0;
      virtual HRESULT __stdcall raw_BuildUp ( ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct Range * Range,
        /*[out,retval]*/ struct Range * * prop ) = 0;
};

struct __declspec(uuid("e4442a83-f623-459c-8e95-8bfb44dcf23a"))
OMath : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetFunctions))
    OMathFunctionsPtr Functions;
    __declspec(property(get=GetType,put=PutType))
    enum WdOMathType Type;
    __declspec(property(get=GetParentOMath))
    OMathPtr ParentOMath;
    __declspec(property(get=GetParentFunction))
    OMathFunctionPtr ParentFunction;
    __declspec(property(get=GetParentRow))
    OMathMatRowPtr ParentRow;
    __declspec(property(get=GetParentCol))
    OMathMatColPtr ParentCol;
    __declspec(property(get=GetParentArg))
    OMathPtr ParentArg;
    __declspec(property(get=GetArgIndex))
    long ArgIndex;
    __declspec(property(get=GetNestingLevel))
    long NestingLevel;
    __declspec(property(get=GetArgSize,put=PutArgSize))
    long ArgSize;
    __declspec(property(get=GetBreaks))
    OMathBreaksPtr Breaks;
    __declspec(property(get=GetJustification,put=PutJustification))
    enum WdOMathJc Justification;
    __declspec(property(get=GetAlignPoint,put=PutAlignPoint))
    long AlignPoint;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    RangePtr GetRange ( );
    OMathFunctionsPtr GetFunctions ( );
    enum WdOMathType GetType ( );
    void PutType (
        enum WdOMathType prop );
    OMathPtr GetParentOMath ( );
    OMathFunctionPtr GetParentFunction ( );
    OMathMatRowPtr GetParentRow ( );
    OMathMatColPtr GetParentCol ( );
    OMathPtr GetParentArg ( );
    long GetArgIndex ( );
    long GetNestingLevel ( );
    long GetArgSize ( );
    void PutArgSize (
        long prop );
    OMathBreaksPtr GetBreaks ( );
    enum WdOMathJc GetJustification ( );
    void PutJustification (
        enum WdOMathJc prop );
    long GetAlignPoint ( );
    void PutAlignPoint (
        long prop );
    HRESULT Linearize ( );
    HRESULT BuildUp ( );
    HRESULT Remove ( );
    HRESULT ConvertToMathText ( );
    HRESULT ConvertToNormalText ( );
    HRESULT ConvertToLiteralText ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Functions (
        /*[out,retval]*/ struct OMathFunctions * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdOMathType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum WdOMathType prop ) = 0;
      virtual HRESULT __stdcall get_ParentOMath (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_ParentFunction (
        /*[out,retval]*/ struct OMathFunction * * prop ) = 0;
      virtual HRESULT __stdcall get_ParentRow (
        /*[out,retval]*/ struct OMathMatRow * * prop ) = 0;
      virtual HRESULT __stdcall get_ParentCol (
        /*[out,retval]*/ struct OMathMatCol * * prop ) = 0;
      virtual HRESULT __stdcall get_ParentArg (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_ArgIndex (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_NestingLevel (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_ArgSize (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ArgSize (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_Breaks (
        /*[out,retval]*/ struct OMathBreaks * * prop ) = 0;
      virtual HRESULT __stdcall get_Justification (
        /*[out,retval]*/ enum WdOMathJc * prop ) = 0;
      virtual HRESULT __stdcall put_Justification (
        /*[in]*/ enum WdOMathJc prop ) = 0;
      virtual HRESULT __stdcall get_AlignPoint (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_AlignPoint (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall raw_Linearize ( ) = 0;
      virtual HRESULT __stdcall raw_BuildUp ( ) = 0;
      virtual HRESULT __stdcall raw_Remove ( ) = 0;
      virtual HRESULT __stdcall raw_ConvertToMathText ( ) = 0;
      virtual HRESULT __stdcall raw_ConvertToNormalText ( ) = 0;
      virtual HRESULT __stdcall raw_ConvertToLiteralText ( ) = 0;
};

struct __declspec(uuid("8245795b-9aed-4943-a16d-e586ed8180d1"))
OMathArgs : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    OMathPtr Item (
        long Index );
    OMathPtr Add (
        VARIANT * BeforeArg = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT * BeforeArg,
        /*[out,retval]*/ struct OMath * * prop ) = 0;
};

struct __declspec(uuid("f258de05-c41b-4c33-a778-f0d3f98ceeb3"))
OMathAcc : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetE))
    OMathPtr E;
    __declspec(property(get=GetChar,put=PutChar))
    short Char;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    OMathPtr GetE ( );
    short GetChar ( );
    void PutChar (
        short prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Char (
        /*[out,retval]*/ short * prop ) = 0;
      virtual HRESULT __stdcall put_Char (
        /*[in]*/ short prop ) = 0;
};

struct __declspec(uuid("f08b45f1-8f23-4156-9d63-1820c0ed229a"))
OMathBar : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetE))
    OMathPtr E;
    __declspec(property(get=GetBarTop,put=PutBarTop))
    VARIANT_BOOL BarTop;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    OMathPtr GetE ( );
    VARIANT_BOOL GetBarTop ( );
    void PutBarTop (
        VARIANT_BOOL prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_BarTop (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_BarTop (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("842c37fe-c76f-4b2b-9b60-c408cb5e838e"))
OMathBox : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetE))
    OMathPtr E;
    __declspec(property(get=GetOpEmu,put=PutOpEmu))
    VARIANT_BOOL OpEmu;
    __declspec(property(get=GetNoBreak,put=PutNoBreak))
    VARIANT_BOOL NoBreak;
    __declspec(property(get=GetDiff,put=PutDiff))
    VARIANT_BOOL Diff;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    OMathPtr GetE ( );
    VARIANT_BOOL GetOpEmu ( );
    void PutOpEmu (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetNoBreak ( );
    void PutNoBreak (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetDiff ( );
    void PutDiff (
        VARIANT_BOOL prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_OpEmu (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_OpEmu (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_NoBreak (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_NoBreak (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Diff (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Diff (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("2503b6ee-0889-44df-b920-6d6f9659dea3"))
OMathBorderBox : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetE))
    OMathPtr E;
    __declspec(property(get=GetHideTop,put=PutHideTop))
    VARIANT_BOOL HideTop;
    __declspec(property(get=GetHideBot,put=PutHideBot))
    VARIANT_BOOL HideBot;
    __declspec(property(get=GetHideLeft,put=PutHideLeft))
    VARIANT_BOOL HideLeft;
    __declspec(property(get=GetHideRight,put=PutHideRight))
    VARIANT_BOOL HideRight;
    __declspec(property(get=GetStrikeH,put=PutStrikeH))
    VARIANT_BOOL StrikeH;
    __declspec(property(get=GetStrikeV,put=PutStrikeV))
    VARIANT_BOOL StrikeV;
    __declspec(property(get=GetStrikeBLTR,put=PutStrikeBLTR))
    VARIANT_BOOL StrikeBLTR;
    __declspec(property(get=GetStrikeTLBR,put=PutStrikeTLBR))
    VARIANT_BOOL StrikeTLBR;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    OMathPtr GetE ( );
    VARIANT_BOOL GetHideTop ( );
    void PutHideTop (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetHideBot ( );
    void PutHideBot (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetHideLeft ( );
    void PutHideLeft (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetHideRight ( );
    void PutHideRight (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetStrikeH ( );
    void PutStrikeH (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetStrikeV ( );
    void PutStrikeV (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetStrikeBLTR ( );
    void PutStrikeBLTR (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetStrikeTLBR ( );
    void PutStrikeTLBR (
        VARIANT_BOOL prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_HideTop (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HideTop (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HideBot (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HideBot (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HideLeft (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HideLeft (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HideRight (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HideRight (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_StrikeH (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_StrikeH (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_StrikeV (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_StrikeV (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_StrikeBLTR (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_StrikeBLTR (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_StrikeTLBR (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_StrikeTLBR (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("c94688a6-a2a7-4133-a26d-726cd569d5f3"))
OMathDelim : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetE))
    OMathArgsPtr E;
    __declspec(property(get=GetBegChar,put=PutBegChar))
    short BegChar;
    __declspec(property(get=GetSepChar,put=PutSepChar))
    short SepChar;
    __declspec(property(get=GetEndChar,put=PutEndChar))
    short EndChar;
    __declspec(property(get=GetGrow,put=PutGrow))
    VARIANT_BOOL Grow;
    __declspec(property(get=GetShape,put=PutShape))
    enum WdOMathShapeType Shape;
    __declspec(property(get=GetNoLeftChar,put=PutNoLeftChar))
    VARIANT_BOOL NoLeftChar;
    __declspec(property(get=GetNoRightChar,put=PutNoRightChar))
    VARIANT_BOOL NoRightChar;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    OMathArgsPtr GetE ( );
    short GetBegChar ( );
    void PutBegChar (
        short prop );
    short GetSepChar ( );
    void PutSepChar (
        short prop );
    short GetEndChar ( );
    void PutEndChar (
        short prop );
    VARIANT_BOOL GetGrow ( );
    void PutGrow (
        VARIANT_BOOL prop );
    enum WdOMathShapeType GetShape ( );
    void PutShape (
        enum WdOMathShapeType prop );
    VARIANT_BOOL GetNoLeftChar ( );
    void PutNoLeftChar (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetNoRightChar ( );
    void PutNoRightChar (
        VARIANT_BOOL prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMathArgs * * prop ) = 0;
      virtual HRESULT __stdcall get_BegChar (
        /*[out,retval]*/ short * prop ) = 0;
      virtual HRESULT __stdcall put_BegChar (
        /*[in]*/ short prop ) = 0;
      virtual HRESULT __stdcall get_SepChar (
        /*[out,retval]*/ short * prop ) = 0;
      virtual HRESULT __stdcall put_SepChar (
        /*[in]*/ short prop ) = 0;
      virtual HRESULT __stdcall get_EndChar (
        /*[out,retval]*/ short * prop ) = 0;
      virtual HRESULT __stdcall put_EndChar (
        /*[in]*/ short prop ) = 0;
      virtual HRESULT __stdcall get_Grow (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Grow (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Shape (
        /*[out,retval]*/ enum WdOMathShapeType * prop ) = 0;
      virtual HRESULT __stdcall put_Shape (
        /*[in]*/ enum WdOMathShapeType prop ) = 0;
      virtual HRESULT __stdcall get_NoLeftChar (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_NoLeftChar (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_NoRightChar (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_NoRightChar (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("1f998a61-71c6-44c2-a0f2-1d66169b47cb"))
OMathEqArray : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetE))
    OMathArgsPtr E;
    __declspec(property(get=GetMaxDist,put=PutMaxDist))
    VARIANT_BOOL MaxDist;
    __declspec(property(get=GetObjDist,put=PutObjDist))
    VARIANT_BOOL ObjDist;
    __declspec(property(get=GetAlign,put=PutAlign))
    enum WdOMathVertAlignType Align;
    __declspec(property(get=GetRowSpacingRule,put=PutRowSpacingRule))
    enum WdOMathSpacingRule RowSpacingRule;
    __declspec(property(get=GetRowSpacing,put=PutRowSpacing))
    long RowSpacing;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    OMathArgsPtr GetE ( );
    VARIANT_BOOL GetMaxDist ( );
    void PutMaxDist (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetObjDist ( );
    void PutObjDist (
        VARIANT_BOOL prop );
    enum WdOMathVertAlignType GetAlign ( );
    void PutAlign (
        enum WdOMathVertAlignType prop );
    enum WdOMathSpacingRule GetRowSpacingRule ( );
    void PutRowSpacingRule (
        enum WdOMathSpacingRule prop );
    long GetRowSpacing ( );
    void PutRowSpacing (
        long prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMathArgs * * prop ) = 0;
      virtual HRESULT __stdcall get_MaxDist (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MaxDist (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ObjDist (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ObjDist (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Align (
        /*[out,retval]*/ enum WdOMathVertAlignType * prop ) = 0;
      virtual HRESULT __stdcall put_Align (
        /*[in]*/ enum WdOMathVertAlignType prop ) = 0;
      virtual HRESULT __stdcall get_RowSpacingRule (
        /*[out,retval]*/ enum WdOMathSpacingRule * prop ) = 0;
      virtual HRESULT __stdcall put_RowSpacingRule (
        /*[in]*/ enum WdOMathSpacingRule prop ) = 0;
      virtual HRESULT __stdcall get_RowSpacing (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_RowSpacing (
        /*[in]*/ long prop ) = 0;
};

struct __declspec(uuid("50209974-ba32-4a03-8fa6-bac56cc056fd"))
OMathFrac : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetNum))
    OMathPtr Num;
    __declspec(property(get=GetDen))
    OMathPtr Den;
    __declspec(property(get=GetType,put=PutType))
    enum WdOMathFracType Type;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    OMathPtr GetNum ( );
    OMathPtr GetDen ( );
    enum WdOMathFracType GetType ( );
    void PutType (
        enum WdOMathFracType prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Num (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Den (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdOMathFracType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum WdOMathFracType prop ) = 0;
};

struct __declspec(uuid("0d951adf-10a6-4c9b-bcd9-0fb8cbad9a87"))
OMathFunc : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetFName))
    OMathPtr FName;
    __declspec(property(get=GetE))
    OMathPtr E;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    OMathPtr GetFName ( );
    OMathPtr GetE ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_FName (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
};

struct __declspec(uuid("02b17cb4-7d55-4b34-b38b-10381433441f"))
OMathGroupChar : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetE))
    OMathPtr E;
    __declspec(property(get=GetChar,put=PutChar))
    short Char;
    __declspec(property(get=GetCharTop,put=PutCharTop))
    VARIANT_BOOL CharTop;
    __declspec(property(get=GetAlignTop,put=PutAlignTop))
    VARIANT_BOOL AlignTop;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    OMathPtr GetE ( );
    short GetChar ( );
    void PutChar (
        short prop );
    VARIANT_BOOL GetCharTop ( );
    void PutCharTop (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetAlignTop ( );
    void PutAlignTop (
        VARIANT_BOOL prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Char (
        /*[out,retval]*/ short * prop ) = 0;
      virtual HRESULT __stdcall put_Char (
        /*[in]*/ short prop ) = 0;
      virtual HRESULT __stdcall get_CharTop (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_CharTop (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_AlignTop (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AlignTop (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("5daa8bb6-054e-48f6-beac-eaad02be0cc7"))
OMathMatRow : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetArgs))
    OMathArgsPtr Args;
    __declspec(property(get=GetRowIndex))
    long RowIndex;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    OMathArgsPtr GetArgs ( );
    long GetRowIndex ( );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Args (
        /*[out,retval]*/ struct OMathArgs * * prop ) = 0;
      virtual HRESULT __stdcall get_RowIndex (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("1b426348-607d-433c-9216-c5d2bf0ef31f"))
OMathMatRows : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    OMathMatRowPtr Item (
        long Index );
    OMathMatRowPtr Add (
        VARIANT * BeforeRow = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct OMathMatRow * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT * BeforeRow,
        /*[out,retval]*/ struct OMathMatRow * * prop ) = 0;
};

struct __declspec(uuid("cae36175-3818-4c60-bcbf-0645d51eb33b"))
OMathMatCol : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetArgs))
    OMathArgsPtr Args;
    __declspec(property(get=GetColIndex))
    long ColIndex;
    __declspec(property(get=GetAlign,put=PutAlign))
    enum WdOMathHorizAlignType Align;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    OMathArgsPtr GetArgs ( );
    long GetColIndex ( );
    enum WdOMathHorizAlignType GetAlign ( );
    void PutAlign (
        enum WdOMathHorizAlignType prop );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Args (
        /*[out,retval]*/ struct OMathArgs * * prop ) = 0;
      virtual HRESULT __stdcall get_ColIndex (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Align (
        /*[out,retval]*/ enum WdOMathHorizAlignType * prop ) = 0;
      virtual HRESULT __stdcall put_Align (
        /*[in]*/ enum WdOMathHorizAlignType prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("efc71f9c-7f42-4cd4-a7a7-970d7a48cd27"))
OMathMatCols : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    OMathMatColPtr Item (
        long Index );
    OMathMatColPtr Add (
        VARIANT * BeforeCol = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct OMathMatCol * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT * BeforeCol,
        /*[out,retval]*/ struct OMathMatCol * * prop ) = 0;
};

struct __declspec(uuid("3e061a7e-67ad-4eaa-bc1e-55057d5e596f"))
OMathMat : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetRows))
    OMathMatRowsPtr Rows;
    __declspec(property(get=GetCols))
    OMathMatColsPtr Cols;
    __declspec(property(get=GetCell))
    OMathPtr Cell[][];
    __declspec(property(get=GetAlign,put=PutAlign))
    enum WdOMathVertAlignType Align;
    __declspec(property(get=GetPlcHoldHidden,put=PutPlcHoldHidden))
    VARIANT_BOOL PlcHoldHidden;
    __declspec(property(get=GetRowSpacingRule,put=PutRowSpacingRule))
    enum WdOMathSpacingRule RowSpacingRule;
    __declspec(property(get=GetRowSpacing,put=PutRowSpacing))
    long RowSpacing;
    __declspec(property(get=GetColSpacing,put=PutColSpacing))
    long ColSpacing;
    __declspec(property(get=GetColGapRule,put=PutColGapRule))
    enum WdOMathSpacingRule ColGapRule;
    __declspec(property(get=GetColGap,put=PutColGap))
    long ColGap;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    OMathMatRowsPtr GetRows ( );
    OMathMatColsPtr GetCols ( );
    OMathPtr GetCell (
        long Row,
        long Col );
    enum WdOMathVertAlignType GetAlign ( );
    void PutAlign (
        enum WdOMathVertAlignType prop );
    VARIANT_BOOL GetPlcHoldHidden ( );
    void PutPlcHoldHidden (
        VARIANT_BOOL prop );
    enum WdOMathSpacingRule GetRowSpacingRule ( );
    void PutRowSpacingRule (
        enum WdOMathSpacingRule prop );
    long GetRowSpacing ( );
    void PutRowSpacing (
        long prop );
    long GetColSpacing ( );
    void PutColSpacing (
        long prop );
    enum WdOMathSpacingRule GetColGapRule ( );
    void PutColGapRule (
        enum WdOMathSpacingRule prop );
    long GetColGap ( );
    void PutColGap (
        long prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Rows (
        /*[out,retval]*/ struct OMathMatRows * * prop ) = 0;
      virtual HRESULT __stdcall get_Cols (
        /*[out,retval]*/ struct OMathMatCols * * prop ) = 0;
      virtual HRESULT __stdcall get_Cell (
        /*[in]*/ long Row,
        /*[in]*/ long Col,
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Align (
        /*[out,retval]*/ enum WdOMathVertAlignType * prop ) = 0;
      virtual HRESULT __stdcall put_Align (
        /*[in]*/ enum WdOMathVertAlignType prop ) = 0;
      virtual HRESULT __stdcall get_PlcHoldHidden (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_PlcHoldHidden (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_RowSpacingRule (
        /*[out,retval]*/ enum WdOMathSpacingRule * prop ) = 0;
      virtual HRESULT __stdcall put_RowSpacingRule (
        /*[in]*/ enum WdOMathSpacingRule prop ) = 0;
      virtual HRESULT __stdcall get_RowSpacing (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_RowSpacing (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ColSpacing (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ColSpacing (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall get_ColGapRule (
        /*[out,retval]*/ enum WdOMathSpacingRule * prop ) = 0;
      virtual HRESULT __stdcall put_ColGapRule (
        /*[in]*/ enum WdOMathSpacingRule prop ) = 0;
      virtual HRESULT __stdcall get_ColGap (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_ColGap (
        /*[in]*/ long prop ) = 0;
};

struct __declspec(uuid("cebd4184-4e6d-4fc6-a42d-2142b1b76af5"))
OMathNary : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetSub))
    OMathPtr Sub;
    __declspec(property(get=GetSup))
    OMathPtr Sup;
    __declspec(property(get=GetE))
    OMathPtr E;
    __declspec(property(get=GetChar,put=PutChar))
    short Char;
    __declspec(property(get=GetGrow,put=PutGrow))
    VARIANT_BOOL Grow;
    __declspec(property(get=GetSubSupLim,put=PutSubSupLim))
    VARIANT_BOOL SubSupLim;
    __declspec(property(get=GetHideSub,put=PutHideSub))
    VARIANT_BOOL HideSub;
    __declspec(property(get=GetHideSup,put=PutHideSup))
    VARIANT_BOOL HideSup;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    OMathPtr GetSub ( );
    OMathPtr GetSup ( );
    OMathPtr GetE ( );
    short GetChar ( );
    void PutChar (
        short prop );
    VARIANT_BOOL GetGrow ( );
    void PutGrow (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetSubSupLim ( );
    void PutSubSupLim (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetHideSub ( );
    void PutHideSub (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetHideSup ( );
    void PutHideSup (
        VARIANT_BOOL prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Sub (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Sup (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Char (
        /*[out,retval]*/ short * prop ) = 0;
      virtual HRESULT __stdcall put_Char (
        /*[in]*/ short prop ) = 0;
      virtual HRESULT __stdcall get_Grow (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Grow (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_SubSupLim (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_SubSupLim (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HideSub (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HideSub (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_HideSup (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HideSup (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("db77d541-85c3-42e8-8649-afbd7cf87866"))
OMathPhantom : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetE))
    OMathPtr E;
    __declspec(property(get=GetShow,put=PutShow))
    VARIANT_BOOL Show;
    __declspec(property(get=GetZeroWid,put=PutZeroWid))
    VARIANT_BOOL ZeroWid;
    __declspec(property(get=GetZeroAsc,put=PutZeroAsc))
    VARIANT_BOOL ZeroAsc;
    __declspec(property(get=GetZeroDesc,put=PutZeroDesc))
    VARIANT_BOOL ZeroDesc;
    __declspec(property(get=GetTransp,put=PutTransp))
    VARIANT_BOOL Transp;
    __declspec(property(get=GetSmash,put=PutSmash))
    VARIANT_BOOL Smash;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    OMathPtr GetE ( );
    VARIANT_BOOL GetShow ( );
    void PutShow (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetZeroWid ( );
    void PutZeroWid (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetZeroAsc ( );
    void PutZeroAsc (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetZeroDesc ( );
    void PutZeroDesc (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetTransp ( );
    void PutTransp (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetSmash ( );
    void PutSmash (
        VARIANT_BOOL prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Show (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Show (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ZeroWid (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ZeroWid (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ZeroAsc (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ZeroAsc (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ZeroDesc (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_ZeroDesc (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Transp (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Transp (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_Smash (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Smash (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("67a7eec5-285d-4024-b071-bd6b33b88547"))
OMathRad : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetDeg))
    OMathPtr Deg;
    __declspec(property(get=GetE))
    OMathPtr E;
    __declspec(property(get=GetHideDeg,put=PutHideDeg))
    VARIANT_BOOL HideDeg;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    OMathPtr GetDeg ( );
    OMathPtr GetE ( );
    VARIANT_BOOL GetHideDeg ( );
    void PutHideDeg (
        VARIANT_BOOL prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Deg (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_HideDeg (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_HideDeg (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
};

struct __declspec(uuid("98dfbd12-96cb-4f07-90ea-749ff1d6b89d"))
OMathScrSub : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetE))
    OMathPtr E;
    __declspec(property(get=GetSub))
    OMathPtr Sub;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    OMathPtr GetE ( );
    OMathPtr GetSub ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Sub (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
};

struct __declspec(uuid("d0a95726-678a-4b9d-8103-1e2b86735ae7"))
OMathScrSup : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetE))
    OMathPtr E;
    __declspec(property(get=GetSup))
    OMathPtr Sup;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    OMathPtr GetE ( );
    OMathPtr GetSup ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Sup (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
};

struct __declspec(uuid("497142a4-16fd-42c6-bc58-15d89345fc21"))
OMathFunctions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    OMathFunctionPtr Item (
        long Index );
    OMathFunctionPtr Add (
        struct Range * Range,
        enum WdOMathFunctionType Type,
        VARIANT * NumArgs = &vtMissing,
        VARIANT * NumCols = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct OMathFunction * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct Range * Range,
        /*[in]*/ enum WdOMathFunctionType Type,
        /*[in]*/ VARIANT * NumArgs,
        /*[in]*/ VARIANT * NumCols,
        /*[out,retval]*/ struct OMathFunction * * prop ) = 0;
};

struct __declspec(uuid("f1f37152-1db1-4901-ad9a-c740f99464b4"))
OMathFunction : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum WdOMathFunctionType Type;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetArgs))
    OMathArgsPtr Args;
    __declspec(property(get=GetAcc))
    OMathAccPtr Acc;
    __declspec(property(get=GetBar))
    OMathBarPtr Bar;
    __declspec(property(get=GetBox))
    OMathBoxPtr Box;
    __declspec(property(get=GetBorderBox))
    OMathBorderBoxPtr BorderBox;
    __declspec(property(get=GetDelim))
    OMathDelimPtr Delim;
    __declspec(property(get=GetEqArray))
    OMathEqArrayPtr EqArray;
    __declspec(property(get=GetFrac))
    OMathFracPtr Frac;
    __declspec(property(get=GetFunc))
    OMathFuncPtr Func;
    __declspec(property(get=GetGroupChar))
    OMathGroupCharPtr GroupChar;
    __declspec(property(get=GetLimLow))
    OMathLimLowPtr LimLow;
    __declspec(property(get=GetLimUpp))
    OMathLimUppPtr LimUpp;
    __declspec(property(get=GetMat))
    OMathMatPtr Mat;
    __declspec(property(get=GetNary))
    OMathNaryPtr Nary;
    __declspec(property(get=GetPhantom))
    OMathPhantomPtr Phantom;
    __declspec(property(get=GetScrPre))
    OMathScrPrePtr ScrPre;
    __declspec(property(get=GetRad))
    OMathRadPtr Rad;
    __declspec(property(get=GetScrSub))
    OMathScrSubPtr ScrSub;
    __declspec(property(get=GetScrSubSup))
    OMathScrSubSupPtr ScrSubSup;
    __declspec(property(get=GetScrSup))
    OMathScrSupPtr ScrSup;
    __declspec(property(get=GetOMath))
    OMathPtr OMath;

    //
    // Wrapper methods for error-handling
    //

    enum WdOMathFunctionType GetType ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    RangePtr GetRange ( );
    OMathArgsPtr GetArgs ( );
    OMathAccPtr GetAcc ( );
    OMathBarPtr GetBar ( );
    OMathBoxPtr GetBox ( );
    OMathBorderBoxPtr GetBorderBox ( );
    OMathDelimPtr GetDelim ( );
    OMathEqArrayPtr GetEqArray ( );
    OMathFracPtr GetFrac ( );
    OMathFuncPtr GetFunc ( );
    OMathGroupCharPtr GetGroupChar ( );
    OMathLimLowPtr GetLimLow ( );
    OMathLimUppPtr GetLimUpp ( );
    OMathMatPtr GetMat ( );
    OMathNaryPtr GetNary ( );
    OMathPhantomPtr GetPhantom ( );
    OMathScrPrePtr GetScrPre ( );
    OMathRadPtr GetRad ( );
    OMathScrSubPtr GetScrSub ( );
    OMathScrSubSupPtr GetScrSubSup ( );
    OMathScrSupPtr GetScrSup ( );
    OMathPtr GetOMath ( );
    OMathFunctionPtr Remove ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdOMathFunctionType * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_Args (
        /*[out,retval]*/ struct OMathArgs * * prop ) = 0;
      virtual HRESULT __stdcall get_Acc (
        /*[out,retval]*/ struct OMathAcc * * prop ) = 0;
      virtual HRESULT __stdcall get_Bar (
        /*[out,retval]*/ struct OMathBar * * prop ) = 0;
      virtual HRESULT __stdcall get_Box (
        /*[out,retval]*/ struct OMathBox * * prop ) = 0;
      virtual HRESULT __stdcall get_BorderBox (
        /*[out,retval]*/ struct OMathBorderBox * * prop ) = 0;
      virtual HRESULT __stdcall get_Delim (
        /*[out,retval]*/ struct OMathDelim * * prop ) = 0;
      virtual HRESULT __stdcall get_EqArray (
        /*[out,retval]*/ struct OMathEqArray * * prop ) = 0;
      virtual HRESULT __stdcall get_Frac (
        /*[out,retval]*/ struct OMathFrac * * prop ) = 0;
      virtual HRESULT __stdcall get_Func (
        /*[out,retval]*/ struct OMathFunc * * prop ) = 0;
      virtual HRESULT __stdcall get_GroupChar (
        /*[out,retval]*/ struct OMathGroupChar * * prop ) = 0;
      virtual HRESULT __stdcall get_LimLow (
        /*[out,retval]*/ struct OMathLimLow * * prop ) = 0;
      virtual HRESULT __stdcall get_LimUpp (
        /*[out,retval]*/ struct OMathLimUpp * * prop ) = 0;
      virtual HRESULT __stdcall get_Mat (
        /*[out,retval]*/ struct OMathMat * * prop ) = 0;
      virtual HRESULT __stdcall get_Nary (
        /*[out,retval]*/ struct OMathNary * * prop ) = 0;
      virtual HRESULT __stdcall get_Phantom (
        /*[out,retval]*/ struct OMathPhantom * * prop ) = 0;
      virtual HRESULT __stdcall get_ScrPre (
        /*[out,retval]*/ struct OMathScrPre * * prop ) = 0;
      virtual HRESULT __stdcall get_Rad (
        /*[out,retval]*/ struct OMathRad * * prop ) = 0;
      virtual HRESULT __stdcall get_ScrSub (
        /*[out,retval]*/ struct OMathScrSub * * prop ) = 0;
      virtual HRESULT __stdcall get_ScrSubSup (
        /*[out,retval]*/ struct OMathScrSubSup * * prop ) = 0;
      virtual HRESULT __stdcall get_ScrSup (
        /*[out,retval]*/ struct OMathScrSup * * prop ) = 0;
      virtual HRESULT __stdcall get_OMath (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[out,retval]*/ struct OMathFunction * * prop ) = 0;
};

struct __declspec(uuid("74de9576-8e99-4e28-912b-cb30747c60ce"))
OMathLimLow : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetE))
    OMathPtr E;
    __declspec(property(get=GetLim))
    OMathPtr Lim;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    OMathPtr GetE ( );
    OMathPtr GetLim ( );
    OMathFunctionPtr ToLimUpp ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Lim (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall raw_ToLimUpp (
        /*[out,retval]*/ struct OMathFunction * * prop ) = 0;
};

struct __declspec(uuid("fc9086c6-0287-4997-b2e1-816c334a22f8"))
OMathLimUpp : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetE))
    OMathPtr E;
    __declspec(property(get=GetLim))
    OMathPtr Lim;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    OMathPtr GetE ( );
    OMathPtr GetLim ( );
    OMathFunctionPtr ToLimLow ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Lim (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall raw_ToLimLow (
        /*[out,retval]*/ struct OMathFunction * * prop ) = 0;
};

struct __declspec(uuid("afaf0c0e-8603-40f6-8fd1-42726cac21e3"))
OMathScrPre : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetSub))
    OMathPtr Sub;
    __declspec(property(get=GetSup))
    OMathPtr Sup;
    __declspec(property(get=GetE))
    OMathPtr E;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    OMathPtr GetSub ( );
    OMathPtr GetSup ( );
    OMathPtr GetE ( );
    OMathFunctionPtr ToScrSubSup ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Sub (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Sup (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall raw_ToScrSubSup (
        /*[out,retval]*/ struct OMathFunction * * prop ) = 0;
};

struct __declspec(uuid("dc489ad4-23c4-4f4b-990f-45a51c7c0c4f"))
OMathScrSubSup : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetE))
    OMathPtr E;
    __declspec(property(get=GetSub))
    OMathPtr Sub;
    __declspec(property(get=GetSup))
    OMathPtr Sup;
    __declspec(property(get=GetAlignScripts,put=PutAlignScripts))
    VARIANT_BOOL AlignScripts;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    OMathPtr GetE ( );
    OMathPtr GetSub ( );
    OMathPtr GetSup ( );
    VARIANT_BOOL GetAlignScripts ( );
    void PutAlignScripts (
        VARIANT_BOOL prop );
    OMathFunctionPtr RemoveSub ( );
    OMathFunctionPtr RemoveSup ( );
    OMathFunctionPtr ToScrPre ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_E (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Sub (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_Sup (
        /*[out,retval]*/ struct OMath * * prop ) = 0;
      virtual HRESULT __stdcall get_AlignScripts (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_AlignScripts (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall raw_RemoveSub (
        /*[out,retval]*/ struct OMathFunction * * prop ) = 0;
      virtual HRESULT __stdcall raw_RemoveSup (
        /*[out,retval]*/ struct OMathFunction * * prop ) = 0;
      virtual HRESULT __stdcall raw_ToScrPre (
        /*[out,retval]*/ struct OMathFunction * * prop ) = 0;
};

struct __declspec(uuid("804cd967-f83b-432d-9446-c61a45cfeff0"))
ContentControls : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    ContentControlPtr Item (
        VARIANT * Index );
    ContentControlPtr Add (
        enum WdContentControlType Type,
        VARIANT * Range = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * prop ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct ContentControl * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ enum WdContentControlType Type,
        /*[in]*/ VARIANT * Range,
        /*[out,retval]*/ struct ContentControl * * prop ) = 0;
};

struct __declspec(uuid("ee95afe3-3026-4172-b078-0e79dab5cc3d"))
ContentControl : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRange))
    RangePtr Range;
    __declspec(property(get=GetLockContentControl,put=PutLockContentControl))
    VARIANT_BOOL LockContentControl;
    __declspec(property(get=GetLockContents,put=PutLockContents))
    VARIANT_BOOL LockContents;
    __declspec(property(get=GetXMLMapping))
    XMLMappingPtr XMLMapping;
    __declspec(property(get=GetType,put=PutType))
    enum WdContentControlType Type;
    __declspec(property(get=GetDropdownListEntries))
    ContentControlListEntriesPtr DropdownListEntries;
    __declspec(property(get=GetPlaceholderText))
    BuildingBlockPtr PlaceholderText;
    __declspec(property(get=GetTitle,put=PutTitle))
    _bstr_t Title;
    __declspec(property(get=GetDateDisplayFormat,put=PutDateDisplayFormat))
    _bstr_t DateDisplayFormat;
    __declspec(property(get=GetMultiLine,put=PutMultiLine))
    VARIANT_BOOL MultiLine;
    __declspec(property(get=GetParentContentControl))
    ContentControlPtr ParentContentControl;
    __declspec(property(get=GetTemporary,put=PutTemporary))
    VARIANT_BOOL Temporary;
    __declspec(property(get=GetID))
    _bstr_t ID;
    __declspec(property(get=GetShowingPlaceholderText))
    VARIANT_BOOL ShowingPlaceholderText;
    __declspec(property(get=GetDateStorageFormat,put=PutDateStorageFormat))
    enum WdContentControlDateStorageFormat DateStorageFormat;
    __declspec(property(get=GetBuildingBlockType,put=PutBuildingBlockType))
    enum WdBuildingBlockTypes BuildingBlockType;
    __declspec(property(get=GetBuildingBlockCategory,put=PutBuildingBlockCategory))
    _bstr_t BuildingBlockCategory;
    __declspec(property(get=GetDateDisplayLocale,put=PutDateDisplayLocale))
    enum WdLanguageID DateDisplayLocale;
    __declspec(property(get=GetDateCalendarType,put=PutDateCalendarType))
    enum WdCalendarType DateCalendarType;
    __declspec(property(get=GetTag,put=PutTag))
    _bstr_t Tag;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    RangePtr GetRange ( );
    VARIANT_BOOL GetLockContentControl ( );
    void PutLockContentControl (
        VARIANT_BOOL prop );
    VARIANT_BOOL GetLockContents ( );
    void PutLockContents (
        VARIANT_BOOL prop );
    XMLMappingPtr GetXMLMapping ( );
    enum WdContentControlType GetType ( );
    void PutType (
        enum WdContentControlType prop );
    HRESULT Copy ( );
    HRESULT Cut ( );
    HRESULT Delete (
        VARIANT_BOOL DeleteContents );
    ContentControlListEntriesPtr GetDropdownListEntries ( );
    BuildingBlockPtr GetPlaceholderText ( );
    HRESULT SetPlaceholderText (
        struct BuildingBlock * BuildingBlock,
        struct Range * Range,
        _bstr_t Text );
    _bstr_t GetTitle ( );
    void PutTitle (
        _bstr_t prop );
    _bstr_t GetDateDisplayFormat ( );
    void PutDateDisplayFormat (
        _bstr_t prop );
    VARIANT_BOOL GetMultiLine ( );
    void PutMultiLine (
        VARIANT_BOOL prop );
    ContentControlPtr GetParentContentControl ( );
    VARIANT_BOOL GetTemporary ( );
    void PutTemporary (
        VARIANT_BOOL prop );
    _bstr_t GetID ( );
    VARIANT_BOOL GetShowingPlaceholderText ( );
    enum WdContentControlDateStorageFormat GetDateStorageFormat ( );
    void PutDateStorageFormat (
        enum WdContentControlDateStorageFormat prop );
    enum WdBuildingBlockTypes GetBuildingBlockType ( );
    void PutBuildingBlockType (
        enum WdBuildingBlockTypes prop );
    _bstr_t GetBuildingBlockCategory ( );
    void PutBuildingBlockCategory (
        _bstr_t prop );
    enum WdLanguageID GetDateDisplayLocale ( );
    void PutDateDisplayLocale (
        enum WdLanguageID prop );
    HRESULT Ungroup ( );
    _variant_t GetDefaultTextStyle ( );
    void PutDefaultTextStyle (
        VARIANT * prop );
    enum WdCalendarType GetDateCalendarType ( );
    void PutDateCalendarType (
        enum WdCalendarType prop );
    _bstr_t GetTag ( );
    void PutTag (
        _bstr_t prop );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ struct Range * * prop ) = 0;
      virtual HRESULT __stdcall get_LockContentControl (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_LockContentControl (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_LockContents (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_LockContents (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_XMLMapping (
        /*[out,retval]*/ struct XMLMapping * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WdContentControlType * prop ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum WdContentControlType prop ) = 0;
      virtual HRESULT __stdcall raw_Copy ( ) = 0;
      virtual HRESULT __stdcall raw_Cut ( ) = 0;
      virtual HRESULT __stdcall raw_Delete (
        /*[in]*/ VARIANT_BOOL DeleteContents ) = 0;
      virtual HRESULT __stdcall get_DropdownListEntries (
        /*[out,retval]*/ struct ContentControlListEntries * * prop ) = 0;
      virtual HRESULT __stdcall get_PlaceholderText (
        /*[out,retval]*/ struct BuildingBlock * * prop ) = 0;
      virtual HRESULT __stdcall raw_SetPlaceholderText (
        /*[in]*/ struct BuildingBlock * BuildingBlock,
        /*[in]*/ struct Range * Range,
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall get_Title (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Title (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_DateDisplayFormat (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_DateDisplayFormat (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_MultiLine (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_MultiLine (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ParentContentControl (
        /*[out,retval]*/ struct ContentControl * * prop ) = 0;
      virtual HRESULT __stdcall get_Temporary (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall put_Temporary (
        /*[in]*/ VARIANT_BOOL prop ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_ShowingPlaceholderText (
        /*[out,retval]*/ VARIANT_BOOL * prop ) = 0;
      virtual HRESULT __stdcall get_DateStorageFormat (
        /*[out,retval]*/ enum WdContentControlDateStorageFormat * prop ) = 0;
      virtual HRESULT __stdcall put_DateStorageFormat (
        /*[in]*/ enum WdContentControlDateStorageFormat prop ) = 0;
      virtual HRESULT __stdcall get_BuildingBlockType (
        /*[out,retval]*/ enum WdBuildingBlockTypes * prop ) = 0;
      virtual HRESULT __stdcall put_BuildingBlockType (
        /*[in]*/ enum WdBuildingBlockTypes prop ) = 0;
      virtual HRESULT __stdcall get_BuildingBlockCategory (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_BuildingBlockCategory (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_DateDisplayLocale (
        /*[out,retval]*/ enum WdLanguageID * prop ) = 0;
      virtual HRESULT __stdcall put_DateDisplayLocale (
        /*[in]*/ enum WdLanguageID prop ) = 0;
      virtual HRESULT __stdcall raw_Ungroup ( ) = 0;
      virtual HRESULT __stdcall get_DefaultTextStyle (
        /*[out,retval]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall put_DefaultTextStyle (
        /*[in]*/ VARIANT * prop ) = 0;
      virtual HRESULT __stdcall get_DateCalendarType (
        /*[out,retval]*/ enum WdCalendarType * prop ) = 0;
      virtual HRESULT __stdcall put_DateCalendarType (
        /*[in]*/ enum WdCalendarType prop ) = 0;
      virtual HRESULT __stdcall get_Tag (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Tag (
        /*[in]*/ BSTR prop ) = 0;
};

struct __declspec(uuid("b5828b50-0e3d-448a-962d-a40702a5868d"))
BuildingBlockTypes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    BuildingBlockTypePtr Item (
        enum WdBuildingBlockTypes Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ enum WdBuildingBlockTypes Index,
        /*[out,retval]*/ struct BuildingBlockType * * prop ) = 0;
};

struct __declspec(uuid("817f99fa-ccc4-4971-8e9d-1238f735aaff"))
BuildingBlockType : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCategories))
    CategoriesPtr Categories;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetIndex ( );
    _bstr_t GetName ( );
    CategoriesPtr GetCategories ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Categories (
        /*[out,retval]*/ struct Categories * * prop ) = 0;
};

struct __declspec(uuid("6e47678b-a879-4e56-8698-3b7cf169fad4"))
Categories : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    CategoryPtr Item (
        VARIANT * Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct Category * * prop ) = 0;
};

struct __declspec(uuid("ecfbdb5e-acd2-4530-ad79-4560b7ff055c"))
Category : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetBuildingBlocks))
    BuildingBlocksPtr BuildingBlocks;
    __declspec(property(get=GetType))
    BuildingBlockTypePtr Type;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetIndex ( );
    _bstr_t GetName ( );
    BuildingBlocksPtr GetBuildingBlocks ( );
    BuildingBlockTypePtr GetType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_BuildingBlocks (
        /*[out,retval]*/ struct BuildingBlocks * * prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ struct BuildingBlockType * * prop ) = 0;
};

struct __declspec(uuid("bfd3fc23-f763-4ff8-826e-1afbf598a4e7"))
BuildingBlock : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetValue,put=PutValue))
    _bstr_t Value;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetType))
    BuildingBlockTypePtr Type;
    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetID))
    _bstr_t ID;
    __declspec(property(get=GetCategory))
    CategoryPtr Category;
    __declspec(property(get=GetInsertOptions,put=PutInsertOptions))
    long InsertOptions;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetIndex ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t prop );
    BuildingBlockTypePtr GetType ( );
    _bstr_t GetDescription ( );
    void PutDescription (
        _bstr_t prop );
    _bstr_t GetID ( );
    CategoryPtr GetCategory ( );
    _bstr_t GetValue ( );
    void PutValue (
        _bstr_t prop );
    long GetInsertOptions ( );
    void PutInsertOptions (
        long prop );
    HRESULT Delete ( );
    RangePtr Insert (
        struct Range * Where,
        VARIANT * RichText = &vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ struct BuildingBlockType * * prop ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall get_Category (
        /*[out,retval]*/ struct Category * * prop ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * prop ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ BSTR prop ) = 0;
      virtual HRESULT __stdcall get_InsertOptions (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall put_InsertOptions (
        /*[in]*/ long prop ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Insert (
        /*[in]*/ struct Range * Where,
        /*[in]*/ VARIANT * RichText,
        /*[out,retval]*/ struct Range * * prop ) = 0;
};

struct __declspec(uuid("c6d50987-25d7-408a-bff2-90bf86a24e93"))
BuildingBlocks : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    BuildingBlockPtr Item (
        VARIANT * Index );
    BuildingBlockPtr Add (
        _bstr_t Name,
        struct Range * Range,
        VARIANT * Description,
        enum WdDocPartInsertOptions InsertOptions );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct BuildingBlock * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Description,
        /*[in]*/ enum WdDocPartInsertOptions InsertOptions,
        /*[out,retval]*/ struct BuildingBlock * * prop ) = 0;
};

struct __declspec(uuid("39709229-56a0-4e29-9112-b31dd067ebfd"))
BuildingBlockEntries : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetCreator))
    long Creator;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    long GetCreator ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    BuildingBlockPtr Item (
        VARIANT * Index );
    BuildingBlockPtr Add (
        _bstr_t Name,
        enum WdBuildingBlockTypes Type,
        _bstr_t Category,
        struct Range * Range,
        VARIANT * Description,
        enum WdDocPartInsertOptions InsertOptions );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * prop ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * prop ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * prop ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT * Index,
        /*[out,retval]*/ struct BuildingBlock * * prop ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ enum WdBuildingBlockTypes Type,
        /*[in]*/ BSTR Category,
        /*[in]*/ struct Range * Range,
        /*[in]*/ VARIANT * Description,
        /*[in]*/ enum WdDocPartInsertOptions InsertOptions,
        /*[out,retval]*/ struct BuildingBlock * * prop ) = 0;
};

//
// Function implementation mapping
//

#pragma start_map_region("f:\hitetouchpro_work\test_cross_1\utility\win32\release\msword.tli")
__declspec(implementation_key(1)) float _OLEControl::GetLeft ( );
__declspec(implementation_key(2)) void _OLEControl::PutLeft ( float prop );
__declspec(implementation_key(3)) float _OLEControl::GetTop ( );
__declspec(implementation_key(4)) void _OLEControl::PutTop ( float prop );
__declspec(implementation_key(5)) float _OLEControl::GetHeight ( );
__declspec(implementation_key(6)) void _OLEControl::PutHeight ( float prop );
__declspec(implementation_key(7)) float _OLEControl::GetWidth ( );
__declspec(implementation_key(8)) void _OLEControl::PutWidth ( float prop );
__declspec(implementation_key(9)) _bstr_t _OLEControl::GetName ( );
__declspec(implementation_key(10)) void _OLEControl::PutName ( _bstr_t prop );
__declspec(implementation_key(11)) IDispatchPtr _OLEControl::GetAutomation ( );
__declspec(implementation_key(12)) HRESULT _OLEControl::Select ( );
__declspec(implementation_key(13)) HRESULT _OLEControl::Copy ( );
__declspec(implementation_key(14)) HRESULT _OLEControl::Cut ( );
__declspec(implementation_key(15)) HRESULT _OLEControl::Delete ( );
__declspec(implementation_key(16)) HRESULT _OLEControl::Activate ( );
__declspec(implementation_key(17)) _bstr_t _OLEControl::GetAltHTML ( );
__declspec(implementation_key(18)) void _OLEControl::PutAltHTML ( _bstr_t prop );
__declspec(implementation_key(19)) IUnknownPtr FontNames::Get_NewEnum ( );
__declspec(implementation_key(20)) long FontNames::GetCount ( );
__declspec(implementation_key(21)) _ApplicationPtr FontNames::GetApplication ( );
__declspec(implementation_key(22)) long FontNames::GetCreator ( );
__declspec(implementation_key(23)) IDispatchPtr FontNames::GetParent ( );
__declspec(implementation_key(24)) _bstr_t FontNames::Item ( long Index );
__declspec(implementation_key(25)) _ApplicationPtr RoutingSlip::GetApplication ( );
__declspec(implementation_key(26)) long RoutingSlip::GetCreator ( );
__declspec(implementation_key(27)) IDispatchPtr RoutingSlip::GetParent ( );
__declspec(implementation_key(28)) _bstr_t RoutingSlip::GetSubject ( );
__declspec(implementation_key(29)) void RoutingSlip::PutSubject ( _bstr_t prop );
__declspec(implementation_key(30)) _bstr_t RoutingSlip::GetMessage ( );
__declspec(implementation_key(31)) void RoutingSlip::PutMessage ( _bstr_t prop );
__declspec(implementation_key(32)) enum WdRoutingSlipDelivery RoutingSlip::GetDelivery ( );
__declspec(implementation_key(33)) void RoutingSlip::PutDelivery ( enum WdRoutingSlipDelivery prop );
__declspec(implementation_key(34)) VARIANT_BOOL RoutingSlip::GetTrackStatus ( );
__declspec(implementation_key(35)) void RoutingSlip::PutTrackStatus ( VARIANT_BOOL prop );
__declspec(implementation_key(36)) enum WdProtectionType RoutingSlip::GetProtect ( );
__declspec(implementation_key(37)) void RoutingSlip::PutProtect ( enum WdProtectionType prop );
__declspec(implementation_key(38)) VARIANT_BOOL RoutingSlip::GetReturnWhenDone ( );
__declspec(implementation_key(39)) void RoutingSlip::PutReturnWhenDone ( VARIANT_BOOL prop );
__declspec(implementation_key(40)) enum WdRoutingSlipStatus RoutingSlip::GetStatus ( );
__declspec(implementation_key(41)) _variant_t RoutingSlip::GetRecipients ( VARIANT * Index );
__declspec(implementation_key(42)) HRESULT RoutingSlip::Reset ( );
__declspec(implementation_key(43)) HRESULT RoutingSlip::AddRecipient ( _bstr_t Recipient );
__declspec(implementation_key(44)) _ApplicationPtr Variable::GetApplication ( );
__declspec(implementation_key(45)) long Variable::GetCreator ( );
__declspec(implementation_key(46)) IDispatchPtr Variable::GetParent ( );
__declspec(implementation_key(47)) _bstr_t Variable::GetName ( );
__declspec(implementation_key(48)) _bstr_t Variable::GetValue ( );
__declspec(implementation_key(49)) void Variable::PutValue ( _bstr_t prop );
__declspec(implementation_key(50)) long Variable::GetIndex ( );
__declspec(implementation_key(51)) HRESULT Variable::Delete ( );
__declspec(implementation_key(52)) IUnknownPtr Variables::Get_NewEnum ( );
__declspec(implementation_key(53)) long Variables::GetCount ( );
__declspec(implementation_key(54)) _ApplicationPtr Variables::GetApplication ( );
__declspec(implementation_key(55)) long Variables::GetCreator ( );
__declspec(implementation_key(56)) IDispatchPtr Variables::GetParent ( );
__declspec(implementation_key(57)) VariablePtr Variables::Item ( VARIANT * Index );
__declspec(implementation_key(58)) VariablePtr Variables::Add ( _bstr_t Name, VARIANT * Value );
__declspec(implementation_key(59)) _ApplicationPtr DropCap::GetApplication ( );
__declspec(implementation_key(60)) long DropCap::GetCreator ( );
__declspec(implementation_key(61)) IDispatchPtr DropCap::GetParent ( );
__declspec(implementation_key(62)) enum WdDropPosition DropCap::GetPosition ( );
__declspec(implementation_key(63)) void DropCap::PutPosition ( enum WdDropPosition prop );
__declspec(implementation_key(64)) _bstr_t DropCap::GetFontName ( );
__declspec(implementation_key(65)) void DropCap::PutFontName ( _bstr_t prop );
__declspec(implementation_key(66)) long DropCap::GetLinesToDrop ( );
__declspec(implementation_key(67)) void DropCap::PutLinesToDrop ( long prop );
__declspec(implementation_key(68)) float DropCap::GetDistanceFromText ( );
__declspec(implementation_key(69)) void DropCap::PutDistanceFromText ( float prop );
__declspec(implementation_key(70)) HRESULT DropCap::Clear ( );
__declspec(implementation_key(71)) HRESULT DropCap::Enable ( );
__declspec(implementation_key(72)) _ApplicationPtr TabStop::GetApplication ( );
__declspec(implementation_key(73)) long TabStop::GetCreator ( );
__declspec(implementation_key(74)) IDispatchPtr TabStop::GetParent ( );
__declspec(implementation_key(75)) enum WdTabAlignment TabStop::GetAlignment ( );
__declspec(implementation_key(76)) void TabStop::PutAlignment ( enum WdTabAlignment prop );
__declspec(implementation_key(77)) enum WdTabLeader TabStop::GetLeader ( );
__declspec(implementation_key(78)) void TabStop::PutLeader ( enum WdTabLeader prop );
__declspec(implementation_key(79)) float TabStop::GetPosition ( );
__declspec(implementation_key(80)) void TabStop::PutPosition ( float prop );
__declspec(implementation_key(81)) VARIANT_BOOL TabStop::GetCustomTab ( );
__declspec(implementation_key(82)) TabStopPtr TabStop::GetNext ( );
__declspec(implementation_key(83)) TabStopPtr TabStop::GetPrevious ( );
__declspec(implementation_key(84)) HRESULT TabStop::Clear ( );
__declspec(implementation_key(85)) IUnknownPtr TabStops::Get_NewEnum ( );
__declspec(implementation_key(86)) long TabStops::GetCount ( );
__declspec(implementation_key(87)) _ApplicationPtr TabStops::GetApplication ( );
__declspec(implementation_key(88)) long TabStops::GetCreator ( );
__declspec(implementation_key(89)) IDispatchPtr TabStops::GetParent ( );
__declspec(implementation_key(90)) TabStopPtr TabStops::Item ( VARIANT * Index );
__declspec(implementation_key(91)) TabStopPtr TabStops::Add ( float Position, VARIANT * Alignment, VARIANT * Leader );
__declspec(implementation_key(92)) HRESULT TabStops::ClearAll ( );
__declspec(implementation_key(93)) TabStopPtr TabStops::Before ( float Position );
__declspec(implementation_key(94)) TabStopPtr TabStops::After ( float Position );
__declspec(implementation_key(95)) _ApplicationPtr FirstLetterException::GetApplication ( );
__declspec(implementation_key(96)) long FirstLetterException::GetCreator ( );
__declspec(implementation_key(97)) IDispatchPtr FirstLetterException::GetParent ( );
__declspec(implementation_key(98)) long FirstLetterException::GetIndex ( );
__declspec(implementation_key(99)) _bstr_t FirstLetterException::GetName ( );
__declspec(implementation_key(100)) HRESULT FirstLetterException::Delete ( );
__declspec(implementation_key(101)) _ApplicationPtr FirstLetterExceptions::GetApplication ( );
__declspec(implementation_key(102)) long FirstLetterExceptions::GetCreator ( );
__declspec(implementation_key(103)) IDispatchPtr FirstLetterExceptions::GetParent ( );
__declspec(implementation_key(104)) IUnknownPtr FirstLetterExceptions::Get_NewEnum ( );
__declspec(implementation_key(105)) long FirstLetterExceptions::GetCount ( );
__declspec(implementation_key(106)) FirstLetterExceptionPtr FirstLetterExceptions::Item ( VARIANT * Index );
__declspec(implementation_key(107)) FirstLetterExceptionPtr FirstLetterExceptions::Add ( _bstr_t Name );
__declspec(implementation_key(108)) _ApplicationPtr TwoInitialCapsException::GetApplication ( );
__declspec(implementation_key(109)) long TwoInitialCapsException::GetCreator ( );
__declspec(implementation_key(110)) IDispatchPtr TwoInitialCapsException::GetParent ( );
__declspec(implementation_key(111)) long TwoInitialCapsException::GetIndex ( );
__declspec(implementation_key(112)) _bstr_t TwoInitialCapsException::GetName ( );
__declspec(implementation_key(113)) HRESULT TwoInitialCapsException::Delete ( );
__declspec(implementation_key(114)) _ApplicationPtr TwoInitialCapsExceptions::GetApplication ( );
__declspec(implementation_key(115)) long TwoInitialCapsExceptions::GetCreator ( );
__declspec(implementation_key(116)) IDispatchPtr TwoInitialCapsExceptions::GetParent ( );
__declspec(implementation_key(117)) IUnknownPtr TwoInitialCapsExceptions::Get_NewEnum ( );
__declspec(implementation_key(118)) long TwoInitialCapsExceptions::GetCount ( );
__declspec(implementation_key(119)) TwoInitialCapsExceptionPtr TwoInitialCapsExceptions::Item ( VARIANT * Index );
__declspec(implementation_key(120)) TwoInitialCapsExceptionPtr TwoInitialCapsExceptions::Add ( _bstr_t Name );
__declspec(implementation_key(121)) _ApplicationPtr TextRetrievalMode::GetApplication ( );
__declspec(implementation_key(122)) long TextRetrievalMode::GetCreator ( );
__declspec(implementation_key(123)) IDispatchPtr TextRetrievalMode::GetParent ( );
__declspec(implementation_key(124)) enum WdViewType TextRetrievalMode::GetViewType ( );
__declspec(implementation_key(125)) void TextRetrievalMode::PutViewType ( enum WdViewType prop );
__declspec(implementation_key(126)) TextRetrievalModePtr TextRetrievalMode::GetDuplicate ( );
__declspec(implementation_key(127)) VARIANT_BOOL TextRetrievalMode::GetIncludeHiddenText ( );
__declspec(implementation_key(128)) void TextRetrievalMode::PutIncludeHiddenText ( VARIANT_BOOL prop );
__declspec(implementation_key(129)) VARIANT_BOOL TextRetrievalMode::GetIncludeFieldCodes ( );
__declspec(implementation_key(130)) void TextRetrievalMode::PutIncludeFieldCodes ( VARIANT_BOOL prop );
__declspec(implementation_key(131)) _ApplicationPtr System::GetApplication ( );
__declspec(implementation_key(132)) long System::GetCreator ( );
__declspec(implementation_key(133)) IDispatchPtr System::GetParent ( );
__declspec(implementation_key(134)) _bstr_t System::GetOperatingSystem ( );
__declspec(implementation_key(135)) _bstr_t System::GetProcessorType ( );
__declspec(implementation_key(136)) _bstr_t System::GetVersion ( );
__declspec(implementation_key(137)) long System::GetFreeDiskSpace ( );
__declspec(implementation_key(138)) enum WdCountry System::GetCountry ( );
__declspec(implementation_key(139)) _bstr_t System::GetLanguageDesignation ( );
__declspec(implementation_key(140)) long System::GetHorizontalResolution ( );
__declspec(implementation_key(141)) long System::GetVerticalResolution ( );
__declspec(implementation_key(142)) _bstr_t System::GetProfileString ( _bstr_t Section, _bstr_t Key );
__declspec(implementation_key(143)) void System::PutProfileString ( _bstr_t Section, _bstr_t Key, _bstr_t prop );
__declspec(implementation_key(144)) _bstr_t System::GetPrivateProfileString ( _bstr_t FileName, _bstr_t Section, _bstr_t Key );
__declspec(implementation_key(145)) void System::PutPrivateProfileString ( _bstr_t FileName, _bstr_t Section, _bstr_t Key, _bstr_t prop );
__declspec(implementation_key(146)) VARIANT_BOOL System::GetMathCoprocessorInstalled ( );
__declspec(implementation_key(147)) _bstr_t System::GetComputerType ( );
__declspec(implementation_key(148)) _bstr_t System::GetMacintoshName ( );
__declspec(implementation_key(149)) VARIANT_BOOL System::GetQuickDrawInstalled ( );
__declspec(implementation_key(150)) enum WdCursorType System::GetCursor ( );
__declspec(implementation_key(151)) void System::PutCursor ( enum WdCursorType prop );
__declspec(implementation_key(152)) HRESULT System::MSInfo ( );
__declspec(implementation_key(153)) HRESULT System::Connect ( _bstr_t Path, VARIANT * Drive, VARIANT * Password );
__declspec(implementation_key(154)) enum WdCountry System::GetCountryRegion ( );
__declspec(implementation_key(155)) _ApplicationPtr OLEFormat::GetApplication ( );
__declspec(implementation_key(156)) long OLEFormat::GetCreator ( );
__declspec(implementation_key(157)) IDispatchPtr OLEFormat::GetParent ( );
__declspec(implementation_key(158)) _bstr_t OLEFormat::GetClassType ( );
__declspec(implementation_key(159)) void OLEFormat::PutClassType ( _bstr_t prop );
__declspec(implementation_key(160)) VARIANT_BOOL OLEFormat::GetDisplayAsIcon ( );
__declspec(implementation_key(161)) void OLEFormat::PutDisplayAsIcon ( VARIANT_BOOL prop );
__declspec(implementation_key(162)) _bstr_t OLEFormat::GetIconName ( );
__declspec(implementation_key(163)) void OLEFormat::PutIconName ( _bstr_t prop );
__declspec(implementation_key(164)) _bstr_t OLEFormat::GetIconPath ( );
__declspec(implementation_key(165)) long OLEFormat::GetIconIndex ( );
__declspec(implementation_key(166)) void OLEFormat::PutIconIndex ( long prop );
__declspec(implementation_key(167)) _bstr_t OLEFormat::GetIconLabel ( );
__declspec(implementation_key(168)) void OLEFormat::PutIconLabel ( _bstr_t prop );
__declspec(implementation_key(169)) _bstr_t OLEFormat::GetLabel ( );
__declspec(implementation_key(170)) IDispatchPtr OLEFormat::GetObject ( );
__declspec(implementation_key(171)) _bstr_t OLEFormat::GetProgID ( );
__declspec(implementation_key(172)) HRESULT OLEFormat::Activate ( );
__declspec(implementation_key(173)) HRESULT OLEFormat::Edit ( );
__declspec(implementation_key(174)) HRESULT OLEFormat::Open ( );
__declspec(implementation_key(175)) HRESULT OLEFormat::DoVerb ( VARIANT * VerbIndex );
__declspec(implementation_key(176)) HRESULT OLEFormat::ConvertTo ( VARIANT * ClassType, VARIANT * DisplayAsIcon, VARIANT * IconFileName, VARIANT * IconIndex, VARIANT * IconLabel );
__declspec(implementation_key(177)) HRESULT OLEFormat::ActivateAs ( _bstr_t ClassType );
__declspec(implementation_key(178)) VARIANT_BOOL OLEFormat::GetPreserveFormattingOnUpdate ( );
__declspec(implementation_key(179)) void OLEFormat::PutPreserveFormattingOnUpdate ( VARIANT_BOOL prop );
__declspec(implementation_key(180)) _ApplicationPtr LinkFormat::GetApplication ( );
__declspec(implementation_key(181)) long LinkFormat::GetCreator ( );
__declspec(implementation_key(182)) IDispatchPtr LinkFormat::GetParent ( );
__declspec(implementation_key(183)) VARIANT_BOOL LinkFormat::GetAutoUpdate ( );
__declspec(implementation_key(184)) void LinkFormat::PutAutoUpdate ( VARIANT_BOOL prop );
__declspec(implementation_key(185)) _bstr_t LinkFormat::GetSourceName ( );
__declspec(implementation_key(186)) _bstr_t LinkFormat::GetSourcePath ( );
__declspec(implementation_key(187)) VARIANT_BOOL LinkFormat::GetLocked ( );
__declspec(implementation_key(188)) void LinkFormat::PutLocked ( VARIANT_BOOL prop );
__declspec(implementation_key(189)) enum WdLinkType LinkFormat::GetType ( );
__declspec(implementation_key(190)) _bstr_t LinkFormat::GetSourceFullName ( );
__declspec(implementation_key(191)) void LinkFormat::PutSourceFullName ( _bstr_t prop );
__declspec(implementation_key(192)) VARIANT_BOOL LinkFormat::GetSavePictureWithDocument ( );
__declspec(implementation_key(193)) void LinkFormat::PutSavePictureWithDocument ( VARIANT_BOOL prop );
__declspec(implementation_key(194)) HRESULT LinkFormat::BreakLink ( );
__declspec(implementation_key(195)) HRESULT LinkFormat::Update ( );
__declspec(implementation_key(196)) _ApplicationPtr Browser::GetApplication ( );
__declspec(implementation_key(197)) long Browser::GetCreator ( );
__declspec(implementation_key(198)) IDispatchPtr Browser::GetParent ( );
__declspec(implementation_key(199)) enum WdBrowseTarget Browser::GetTarget ( );
__declspec(implementation_key(200)) void Browser::PutTarget ( enum WdBrowseTarget prop );
__declspec(implementation_key(201)) HRESULT Browser::Next ( );
__declspec(implementation_key(202)) HRESULT Browser::Previous ( );
__declspec(implementation_key(203)) _ApplicationPtr TextInput::GetApplication ( );
__declspec(implementation_key(204)) long TextInput::GetCreator ( );
__declspec(implementation_key(205)) IDispatchPtr TextInput::GetParent ( );
__declspec(implementation_key(206)) VARIANT_BOOL TextInput::GetValid ( );
__declspec(implementation_key(207)) _bstr_t TextInput::GetDefault ( );
__declspec(implementation_key(208)) void TextInput::PutDefault ( _bstr_t prop );
__declspec(implementation_key(209)) enum WdTextFormFieldType TextInput::GetType ( );
__declspec(implementation_key(210)) _bstr_t TextInput::GetFormat ( );
__declspec(implementation_key(211)) long TextInput::GetWidth ( );
__declspec(implementation_key(212)) void TextInput::PutWidth ( long prop );
__declspec(implementation_key(213)) HRESULT TextInput::Clear ( );
__declspec(implementation_key(214)) HRESULT TextInput::EditType ( enum WdTextFormFieldType Type, VARIANT * Default, VARIANT * Format, VARIANT * Enabled );
__declspec(implementation_key(215)) _ApplicationPtr CheckBox::GetApplication ( );
__declspec(implementation_key(216)) long CheckBox::GetCreator ( );
__declspec(implementation_key(217)) IDispatchPtr CheckBox::GetParent ( );
__declspec(implementation_key(218)) VARIANT_BOOL CheckBox::GetValid ( );
__declspec(implementation_key(219)) VARIANT_BOOL CheckBox::GetAutoSize ( );
__declspec(implementation_key(220)) void CheckBox::PutAutoSize ( VARIANT_BOOL prop );
__declspec(implementation_key(221)) float CheckBox::GetSize ( );
__declspec(implementation_key(222)) void CheckBox::PutSize ( float prop );
__declspec(implementation_key(223)) VARIANT_BOOL CheckBox::GetDefault ( );
__declspec(implementation_key(224)) void CheckBox::PutDefault ( VARIANT_BOOL prop );
__declspec(implementation_key(225)) VARIANT_BOOL CheckBox::GetValue ( );
__declspec(implementation_key(226)) void CheckBox::PutValue ( VARIANT_BOOL prop );
__declspec(implementation_key(227)) _ApplicationPtr ListEntry::GetApplication ( );
__declspec(implementation_key(228)) long ListEntry::GetCreator ( );
__declspec(implementation_key(229)) IDispatchPtr ListEntry::GetParent ( );
__declspec(implementation_key(230)) long ListEntry::GetIndex ( );
__declspec(implementation_key(231)) _bstr_t ListEntry::GetName ( );
__declspec(implementation_key(232)) void ListEntry::PutName ( _bstr_t prop );
__declspec(implementation_key(233)) HRESULT ListEntry::Delete ( );
__declspec(implementation_key(234)) _ApplicationPtr ListEntries::GetApplication ( );
__declspec(implementation_key(235)) long ListEntries::GetCreator ( );
__declspec(implementation_key(236)) IDispatchPtr ListEntries::GetParent ( );
__declspec(implementation_key(237)) IUnknownPtr ListEntries::Get_NewEnum ( );
__declspec(implementation_key(238)) long ListEntries::GetCount ( );
__declspec(implementation_key(239)) ListEntryPtr ListEntries::Item ( VARIANT * Index );
__declspec(implementation_key(240)) ListEntryPtr ListEntries::Add ( _bstr_t Name, VARIANT * Index );
__declspec(implementation_key(241)) HRESULT ListEntries::Clear ( );
__declspec(implementation_key(242)) _ApplicationPtr DropDown::GetApplication ( );
__declspec(implementation_key(243)) long DropDown::GetCreator ( );
__declspec(implementation_key(244)) IDispatchPtr DropDown::GetParent ( );
__declspec(implementation_key(245)) VARIANT_BOOL DropDown::GetValid ( );
__declspec(implementation_key(246)) long DropDown::GetDefault ( );
__declspec(implementation_key(247)) void DropDown::PutDefault ( long prop );
__declspec(implementation_key(248)) long DropDown::GetValue ( );
__declspec(implementation_key(249)) void DropDown::PutValue ( long prop );
__declspec(implementation_key(250)) ListEntriesPtr DropDown::GetListEntries ( );
__declspec(implementation_key(251)) _ApplicationPtr MailMergeFieldName::GetApplication ( );
__declspec(implementation_key(252)) long MailMergeFieldName::GetCreator ( );
__declspec(implementation_key(253)) IDispatchPtr MailMergeFieldName::GetParent ( );
__declspec(implementation_key(254)) _bstr_t MailMergeFieldName::GetName ( );
__declspec(implementation_key(255)) long MailMergeFieldName::GetIndex ( );
__declspec(implementation_key(256)) _ApplicationPtr MailMergeFieldNames::GetApplication ( );
__declspec(implementation_key(257)) long MailMergeFieldNames::GetCreator ( );
__declspec(implementation_key(258)) IDispatchPtr MailMergeFieldNames::GetParent ( );
__declspec(implementation_key(259)) IUnknownPtr MailMergeFieldNames::Get_NewEnum ( );
__declspec(implementation_key(260)) long MailMergeFieldNames::GetCount ( );
__declspec(implementation_key(261)) MailMergeFieldNamePtr MailMergeFieldNames::Item ( VARIANT * Index );
__declspec(implementation_key(262)) _ApplicationPtr MailMergeDataField::GetApplication ( );
__declspec(implementation_key(263)) long MailMergeDataField::GetCreator ( );
__declspec(implementation_key(264)) IDispatchPtr MailMergeDataField::GetParent ( );
__declspec(implementation_key(265)) _bstr_t MailMergeDataField::GetValue ( );
__declspec(implementation_key(266)) _bstr_t MailMergeDataField::GetName ( );
__declspec(implementation_key(267)) long MailMergeDataField::GetIndex ( );
__declspec(implementation_key(268)) _ApplicationPtr MailMergeDataFields::GetApplication ( );
__declspec(implementation_key(269)) long MailMergeDataFields::GetCreator ( );
__declspec(implementation_key(270)) IDispatchPtr MailMergeDataFields::GetParent ( );
__declspec(implementation_key(271)) IUnknownPtr MailMergeDataFields::Get_NewEnum ( );
__declspec(implementation_key(272)) long MailMergeDataFields::GetCount ( );
__declspec(implementation_key(273)) MailMergeDataFieldPtr MailMergeDataFields::Item ( VARIANT * Index );
__declspec(implementation_key(274)) _ApplicationPtr CustomLabel::GetApplication ( );
__declspec(implementation_key(275)) long CustomLabel::GetCreator ( );
__declspec(implementation_key(276)) IDispatchPtr CustomLabel::GetParent ( );
__declspec(implementation_key(277)) long CustomLabel::GetIndex ( );
__declspec(implementation_key(278)) _bstr_t CustomLabel::GetName ( );
__declspec(implementation_key(279)) void CustomLabel::PutName ( _bstr_t prop );
__declspec(implementation_key(280)) float CustomLabel::GetTopMargin ( );
__declspec(implementation_key(281)) void CustomLabel::PutTopMargin ( float prop );
__declspec(implementation_key(282)) float CustomLabel::GetSideMargin ( );
__declspec(implementation_key(283)) void CustomLabel::PutSideMargin ( float prop );
__declspec(implementation_key(284)) float CustomLabel::GetHeight ( );
__declspec(implementation_key(285)) void CustomLabel::PutHeight ( float prop );
__declspec(implementation_key(286)) float CustomLabel::GetWidth ( );
__declspec(implementation_key(287)) void CustomLabel::PutWidth ( float prop );
__declspec(implementation_key(288)) float CustomLabel::GetVerticalPitch ( );
__declspec(implementation_key(289)) void CustomLabel::PutVerticalPitch ( float prop );
__declspec(implementation_key(290)) float CustomLabel::GetHorizontalPitch ( );
__declspec(implementation_key(291)) void CustomLabel::PutHorizontalPitch ( float prop );
__declspec(implementation_key(292)) long CustomLabel::GetNumberAcross ( );
__declspec(implementation_key(293)) void CustomLabel::PutNumberAcross ( long prop );
__declspec(implementation_key(294)) long CustomLabel::GetNumberDown ( );
__declspec(implementation_key(295)) void CustomLabel::PutNumberDown ( long prop );
__declspec(implementation_key(296)) VARIANT_BOOL CustomLabel::GetDotMatrix ( );
__declspec(implementation_key(297)) enum WdCustomLabelPageSize CustomLabel::GetPageSize ( );
__declspec(implementation_key(298)) void CustomLabel::PutPageSize ( enum WdCustomLabelPageSize prop );
__declspec(implementation_key(299)) VARIANT_BOOL CustomLabel::GetValid ( );
__declspec(implementation_key(300)) HRESULT CustomLabel::Delete ( );
__declspec(implementation_key(301)) _ApplicationPtr CustomLabels::GetApplication ( );
__declspec(implementation_key(302)) long CustomLabels::GetCreator ( );
__declspec(implementation_key(303)) IDispatchPtr CustomLabels::GetParent ( );
__declspec(implementation_key(304)) IUnknownPtr CustomLabels::Get_NewEnum ( );
__declspec(implementation_key(305)) long CustomLabels::GetCount ( );
__declspec(implementation_key(306)) CustomLabelPtr CustomLabels::Item ( VARIANT * Index );
__declspec(implementation_key(307)) CustomLabelPtr CustomLabels::Add ( _bstr_t Name, VARIANT * DotMatrix );
__declspec(implementation_key(308)) _ApplicationPtr Dialog::GetApplication ( );
__declspec(implementation_key(309)) long Dialog::GetCreator ( );
__declspec(implementation_key(310)) IDispatchPtr Dialog::GetParent ( );
__declspec(implementation_key(311)) enum WdWordDialogTab Dialog::GetDefaultTab ( );
__declspec(implementation_key(312)) void Dialog::PutDefaultTab ( enum WdWordDialogTab prop );
__declspec(implementation_key(313)) enum WdWordDialog Dialog::GetType ( );
__declspec(implementation_key(314)) long Dialog::Show ( VARIANT * TimeOut );
__declspec(implementation_key(315)) long Dialog::Display ( VARIANT * TimeOut );
__declspec(implementation_key(316)) HRESULT Dialog::Execute ( );
__declspec(implementation_key(317)) HRESULT Dialog::Update ( );
__declspec(implementation_key(318)) _bstr_t Dialog::GetCommandName ( );
__declspec(implementation_key(319)) long Dialog::GetCommandBarId ( );
__declspec(implementation_key(320)) _ApplicationPtr Dialogs::GetApplication ( );
__declspec(implementation_key(321)) long Dialogs::GetCreator ( );
__declspec(implementation_key(322)) IDispatchPtr Dialogs::GetParent ( );
__declspec(implementation_key(323)) IUnknownPtr Dialogs::Get_NewEnum ( );
__declspec(implementation_key(324)) long Dialogs::GetCount ( );
__declspec(implementation_key(325)) DialogPtr Dialogs::Item ( enum WdWordDialog Index );
__declspec(implementation_key(326)) _ApplicationPtr LineNumbering::GetApplication ( );
__declspec(implementation_key(327)) long LineNumbering::GetCreator ( );
__declspec(implementation_key(328)) IDispatchPtr LineNumbering::GetParent ( );
__declspec(implementation_key(329)) enum WdNumberingRule LineNumbering::GetRestartMode ( );
__declspec(implementation_key(330)) void LineNumbering::PutRestartMode ( enum WdNumberingRule prop );
__declspec(implementation_key(331)) long LineNumbering::GetStartingNumber ( );
__declspec(implementation_key(332)) void LineNumbering::PutStartingNumber ( long prop );
__declspec(implementation_key(333)) float LineNumbering::GetDistanceFromText ( );
__declspec(implementation_key(334)) void LineNumbering::PutDistanceFromText ( float prop );
__declspec(implementation_key(335)) long LineNumbering::GetCountBy ( );
__declspec(implementation_key(336)) void LineNumbering::PutCountBy ( long prop );
__declspec(implementation_key(337)) long LineNumbering::GetActive ( );
__declspec(implementation_key(338)) void LineNumbering::PutActive ( long prop );
__declspec(implementation_key(339)) _ApplicationPtr TextColumn::GetApplication ( );
__declspec(implementation_key(340)) long TextColumn::GetCreator ( );
__declspec(implementation_key(341)) IDispatchPtr TextColumn::GetParent ( );
__declspec(implementation_key(342)) float TextColumn::GetWidth ( );
__declspec(implementation_key(343)) void TextColumn::PutWidth ( float prop );
__declspec(implementation_key(344)) float TextColumn::GetSpaceAfter ( );
__declspec(implementation_key(345)) void TextColumn::PutSpaceAfter ( float prop );
__declspec(implementation_key(346)) _ApplicationPtr TableOfAuthoritiesCategory::GetApplication ( );
__declspec(implementation_key(347)) long TableOfAuthoritiesCategory::GetCreator ( );
__declspec(implementation_key(348)) IDispatchPtr TableOfAuthoritiesCategory::GetParent ( );
__declspec(implementation_key(349)) _bstr_t TableOfAuthoritiesCategory::GetName ( );
__declspec(implementation_key(350)) void TableOfAuthoritiesCategory::PutName ( _bstr_t prop );
__declspec(implementation_key(351)) long TableOfAuthoritiesCategory::GetIndex ( );
__declspec(implementation_key(352)) _ApplicationPtr TablesOfAuthoritiesCategories::GetApplication ( );
__declspec(implementation_key(353)) long TablesOfAuthoritiesCategories::GetCreator ( );
__declspec(implementation_key(354)) IDispatchPtr TablesOfAuthoritiesCategories::GetParent ( );
__declspec(implementation_key(355)) IUnknownPtr TablesOfAuthoritiesCategories::Get_NewEnum ( );
__declspec(implementation_key(356)) long TablesOfAuthoritiesCategories::GetCount ( );
__declspec(implementation_key(357)) TableOfAuthoritiesCategoryPtr TablesOfAuthoritiesCategories::Item ( VARIANT * Index );
__declspec(implementation_key(358)) _ApplicationPtr CaptionLabel::GetApplication ( );
__declspec(implementation_key(359)) long CaptionLabel::GetCreator ( );
__declspec(implementation_key(360)) IDispatchPtr CaptionLabel::GetParent ( );
__declspec(implementation_key(361)) _bstr_t CaptionLabel::GetName ( );
__declspec(implementation_key(362)) VARIANT_BOOL CaptionLabel::GetBuiltIn ( );
__declspec(implementation_key(363)) enum WdCaptionLabelID CaptionLabel::GetID ( );
__declspec(implementation_key(364)) VARIANT_BOOL CaptionLabel::GetIncludeChapterNumber ( );
__declspec(implementation_key(365)) void CaptionLabel::PutIncludeChapterNumber ( VARIANT_BOOL prop );
__declspec(implementation_key(366)) enum WdCaptionNumberStyle CaptionLabel::GetNumberStyle ( );
__declspec(implementation_key(367)) void CaptionLabel::PutNumberStyle ( enum WdCaptionNumberStyle prop );
__declspec(implementation_key(368)) long CaptionLabel::GetChapterStyleLevel ( );
__declspec(implementation_key(369)) void CaptionLabel::PutChapterStyleLevel ( long prop );
__declspec(implementation_key(370)) enum WdSeparatorType CaptionLabel::GetSeparator ( );
__declspec(implementation_key(371)) void CaptionLabel::PutSeparator ( enum WdSeparatorType prop );
__declspec(implementation_key(372)) enum WdCaptionPosition CaptionLabel::GetPosition ( );
__declspec(implementation_key(373)) void CaptionLabel::PutPosition ( enum WdCaptionPosition prop );
__declspec(implementation_key(374)) HRESULT CaptionLabel::Delete ( );
__declspec(implementation_key(375)) _ApplicationPtr CaptionLabels::GetApplication ( );
__declspec(implementation_key(376)) long CaptionLabels::GetCreator ( );
__declspec(implementation_key(377)) IDispatchPtr CaptionLabels::GetParent ( );
__declspec(implementation_key(378)) IUnknownPtr CaptionLabels::Get_NewEnum ( );
__declspec(implementation_key(379)) long CaptionLabels::GetCount ( );
__declspec(implementation_key(380)) CaptionLabelPtr CaptionLabels::Item ( VARIANT * Index );
__declspec(implementation_key(381)) CaptionLabelPtr CaptionLabels::Add ( _bstr_t Name );
__declspec(implementation_key(382)) _ApplicationPtr AutoCaption::GetApplication ( );
__declspec(implementation_key(383)) long AutoCaption::GetCreator ( );
__declspec(implementation_key(384)) IDispatchPtr AutoCaption::GetParent ( );
__declspec(implementation_key(385)) _bstr_t AutoCaption::GetName ( );
__declspec(implementation_key(386)) VARIANT_BOOL AutoCaption::GetAutoInsert ( );
__declspec(implementation_key(387)) void AutoCaption::PutAutoInsert ( VARIANT_BOOL prop );
__declspec(implementation_key(388)) long AutoCaption::GetIndex ( );
__declspec(implementation_key(389)) _variant_t AutoCaption::GetCaptionLabel ( );
__declspec(implementation_key(390)) void AutoCaption::PutCaptionLabel ( VARIANT * prop );
__declspec(implementation_key(391)) _ApplicationPtr AutoCaptions::GetApplication ( );
__declspec(implementation_key(392)) long AutoCaptions::GetCreator ( );
__declspec(implementation_key(393)) IDispatchPtr AutoCaptions::GetParent ( );
__declspec(implementation_key(394)) IUnknownPtr AutoCaptions::Get_NewEnum ( );
__declspec(implementation_key(395)) long AutoCaptions::GetCount ( );
__declspec(implementation_key(396)) AutoCaptionPtr AutoCaptions::Item ( VARIANT * Index );
__declspec(implementation_key(397)) HRESULT AutoCaptions::CancelAutoInsert ( );
__declspec(implementation_key(398)) _ApplicationPtr AddIn::GetApplication ( );
__declspec(implementation_key(399)) long AddIn::GetCreator ( );
__declspec(implementation_key(400)) IDispatchPtr AddIn::GetParent ( );
__declspec(implementation_key(401)) _bstr_t AddIn::GetName ( );
__declspec(implementation_key(402)) long AddIn::GetIndex ( );
__declspec(implementation_key(403)) _bstr_t AddIn::GetPath ( );
__declspec(implementation_key(404)) VARIANT_BOOL AddIn::GetInstalled ( );
__declspec(implementation_key(405)) void AddIn::PutInstalled ( VARIANT_BOOL prop );
__declspec(implementation_key(406)) VARIANT_BOOL AddIn::GetCompiled ( );
__declspec(implementation_key(407)) VARIANT_BOOL AddIn::GetAutoload ( );
__declspec(implementation_key(408)) HRESULT AddIn::Delete ( );
__declspec(implementation_key(409)) _ApplicationPtr AddIns::GetApplication ( );
__declspec(implementation_key(410)) long AddIns::GetCreator ( );
__declspec(implementation_key(411)) IDispatchPtr AddIns::GetParent ( );
__declspec(implementation_key(412)) IUnknownPtr AddIns::Get_NewEnum ( );
__declspec(implementation_key(413)) long AddIns::GetCount ( );
__declspec(implementation_key(414)) AddInPtr AddIns::Item ( VARIANT * Index );
__declspec(implementation_key(415)) AddInPtr AddIns::Add ( _bstr_t FileName, VARIANT * Install );
__declspec(implementation_key(416)) HRESULT AddIns::Unload ( VARIANT_BOOL RemoveFromList );
__declspec(implementation_key(417)) _ApplicationPtr Task::GetApplication ( );
__declspec(implementation_key(418)) long Task::GetCreator ( );
__declspec(implementation_key(419)) IDispatchPtr Task::GetParent ( );
__declspec(implementation_key(420)) _bstr_t Task::GetName ( );
__declspec(implementation_key(421)) long Task::GetLeft ( );
__declspec(implementation_key(422)) void Task::PutLeft ( long prop );
__declspec(implementation_key(423)) long Task::GetTop ( );
__declspec(implementation_key(424)) void Task::PutTop ( long prop );
__declspec(implementation_key(425)) long Task::GetWidth ( );
__declspec(implementation_key(426)) void Task::PutWidth ( long prop );
__declspec(implementation_key(427)) long Task::GetHeight ( );
__declspec(implementation_key(428)) void Task::PutHeight ( long prop );
__declspec(implementation_key(429)) enum WdWindowState Task::GetWindowState ( );
__declspec(implementation_key(430)) void Task::PutWindowState ( enum WdWindowState prop );
__declspec(implementation_key(431)) VARIANT_BOOL Task::GetVisible ( );
__declspec(implementation_key(432)) void Task::PutVisible ( VARIANT_BOOL prop );
__declspec(implementation_key(433)) HRESULT Task::Activate ( VARIANT * Wait );
__declspec(implementation_key(434)) HRESULT Task::Close ( );
__declspec(implementation_key(435)) HRESULT Task::Move ( long Left, long Top );
__declspec(implementation_key(436)) HRESULT Task::Resize ( long Width, long Height );
__declspec(implementation_key(437)) HRESULT Task::SendWindowMessage ( long Message, long wParam, long lParam );
__declspec(implementation_key(438)) _ApplicationPtr Tasks::GetApplication ( );
__declspec(implementation_key(439)) long Tasks::GetCreator ( );
__declspec(implementation_key(440)) IDispatchPtr Tasks::GetParent ( );
__declspec(implementation_key(441)) IUnknownPtr Tasks::Get_NewEnum ( );
__declspec(implementation_key(442)) long Tasks::GetCount ( );
__declspec(implementation_key(443)) TaskPtr Tasks::Item ( VARIANT * Index );
__declspec(implementation_key(444)) VARIANT_BOOL Tasks::Exists ( _bstr_t Name );
__declspec(implementation_key(445)) HRESULT Tasks::WORDExitWindows ( );
__declspec(implementation_key(446)) _ApplicationPtr PageNumber::GetApplication ( );
__declspec(implementation_key(447)) long PageNumber::GetCreator ( );
__declspec(implementation_key(448)) IDispatchPtr PageNumber::GetParent ( );
__declspec(implementation_key(449)) long PageNumber::GetIndex ( );
__declspec(implementation_key(450)) enum WdPageNumberAlignment PageNumber::GetAlignment ( );
__declspec(implementation_key(451)) void PageNumber::PutAlignment ( enum WdPageNumberAlignment prop );
__declspec(implementation_key(452)) HRESULT PageNumber::Select ( );
__declspec(implementation_key(453)) HRESULT PageNumber::Copy ( );
__declspec(implementation_key(454)) HRESULT PageNumber::Cut ( );
__declspec(implementation_key(455)) HRESULT PageNumber::Delete ( );
__declspec(implementation_key(456)) _ApplicationPtr PageNumbers::GetApplication ( );
__declspec(implementation_key(457)) long PageNumbers::GetCreator ( );
__declspec(implementation_key(458)) IDispatchPtr PageNumbers::GetParent ( );
__declspec(implementation_key(459)) IUnknownPtr PageNumbers::Get_NewEnum ( );
__declspec(implementation_key(460)) long PageNumbers::GetCount ( );
__declspec(implementation_key(461)) enum WdPageNumberStyle PageNumbers::GetNumberStyle ( );
__declspec(implementation_key(462)) void PageNumbers::PutNumberStyle ( enum WdPageNumberStyle prop );
__declspec(implementation_key(463)) VARIANT_BOOL PageNumbers::GetIncludeChapterNumber ( );
__declspec(implementation_key(464)) void PageNumbers::PutIncludeChapterNumber ( VARIANT_BOOL prop );
__declspec(implementation_key(465)) long PageNumbers::GetHeadingLevelForChapter ( );
__declspec(implementation_key(466)) void PageNumbers::PutHeadingLevelForChapter ( long prop );
__declspec(implementation_key(467)) enum WdSeparatorType PageNumbers::GetChapterPageSeparator ( );
__declspec(implementation_key(468)) void PageNumbers::PutChapterPageSeparator ( enum WdSeparatorType prop );
__declspec(implementation_key(469)) VARIANT_BOOL PageNumbers::GetRestartNumberingAtSection ( );
__declspec(implementation_key(470)) void PageNumbers::PutRestartNumberingAtSection ( VARIANT_BOOL prop );
__declspec(implementation_key(471)) long PageNumbers::GetStartingNumber ( );
__declspec(implementation_key(472)) void PageNumbers::PutStartingNumber ( long prop );
__declspec(implementation_key(473)) VARIANT_BOOL PageNumbers::GetShowFirstPageNumber ( );
__declspec(implementation_key(474)) void PageNumbers::PutShowFirstPageNumber ( VARIANT_BOOL prop );
__declspec(implementation_key(475)) PageNumberPtr PageNumbers::Item ( long Index );
__declspec(implementation_key(476)) PageNumberPtr PageNumbers::Add ( VARIANT * PageNumberAlignment, VARIANT * FirstPage );
__declspec(implementation_key(477)) VARIANT_BOOL PageNumbers::GetDoubleQuote ( );
__declspec(implementation_key(478)) void PageNumbers::PutDoubleQuote ( VARIANT_BOOL prop );
__declspec(implementation_key(479)) _ApplicationPtr HeadingStyle::GetApplication ( );
__declspec(implementation_key(480)) long HeadingStyle::GetCreator ( );
__declspec(implementation_key(481)) IDispatchPtr HeadingStyle::GetParent ( );
__declspec(implementation_key(482)) _variant_t HeadingStyle::GetStyle ( );
__declspec(implementation_key(483)) void HeadingStyle::PutStyle ( VARIANT * prop );
__declspec(implementation_key(484)) short HeadingStyle::GetLevel ( );
__declspec(implementation_key(485)) void HeadingStyle::PutLevel ( short prop );
__declspec(implementation_key(486)) HRESULT HeadingStyle::Delete ( );
__declspec(implementation_key(487)) _ApplicationPtr HeadingStyles::GetApplication ( );
__declspec(implementation_key(488)) long HeadingStyles::GetCreator ( );
__declspec(implementation_key(489)) IDispatchPtr HeadingStyles::GetParent ( );
__declspec(implementation_key(490)) IUnknownPtr HeadingStyles::Get_NewEnum ( );
__declspec(implementation_key(491)) long HeadingStyles::GetCount ( );
__declspec(implementation_key(492)) HeadingStylePtr HeadingStyles::Item ( long Index );
__declspec(implementation_key(493)) HeadingStylePtr HeadingStyles::Add ( VARIANT * Style, short Level );
__declspec(implementation_key(494)) _ApplicationPtr KeyBinding::GetApplication ( );
__declspec(implementation_key(495)) long KeyBinding::GetCreator ( );
__declspec(implementation_key(496)) IDispatchPtr KeyBinding::GetParent ( );
__declspec(implementation_key(497)) _bstr_t KeyBinding::GetCommand ( );
__declspec(implementation_key(498)) _bstr_t KeyBinding::GetKeyString ( );
__declspec(implementation_key(499)) VARIANT_BOOL KeyBinding::GetProtected ( );
__declspec(implementation_key(500)) enum WdKeyCategory KeyBinding::GetKeyCategory ( );
__declspec(implementation_key(501)) long KeyBinding::GetKeyCode ( );
__declspec(implementation_key(502)) long KeyBinding::GetKeyCode2 ( );
__declspec(implementation_key(503)) _bstr_t KeyBinding::GetCommandParameter ( );
__declspec(implementation_key(504)) IDispatchPtr KeyBinding::GetContext ( );
__declspec(implementation_key(505)) HRESULT KeyBinding::Clear ( );
__declspec(implementation_key(506)) HRESULT KeyBinding::Disable ( );
__declspec(implementation_key(507)) HRESULT KeyBinding::Execute ( );
__declspec(implementation_key(508)) HRESULT KeyBinding::Rebind ( enum WdKeyCategory KeyCategory, _bstr_t Command, VARIANT * CommandParameter );
__declspec(implementation_key(509)) _ApplicationPtr KeyBindings::GetApplication ( );
__declspec(implementation_key(510)) long KeyBindings::GetCreator ( );
__declspec(implementation_key(511)) IDispatchPtr KeyBindings::GetParent ( );
__declspec(implementation_key(512)) IUnknownPtr KeyBindings::Get_NewEnum ( );
__declspec(implementation_key(513)) long KeyBindings::GetCount ( );
__declspec(implementation_key(514)) IDispatchPtr KeyBindings::GetContext ( );
__declspec(implementation_key(515)) KeyBindingPtr KeyBindings::Item ( long Index );
__declspec(implementation_key(516)) KeyBindingPtr KeyBindings::Add ( enum WdKeyCategory KeyCategory, _bstr_t Command, long KeyCode, VARIANT * KeyCode2, VARIANT * CommandParameter );
__declspec(implementation_key(517)) HRESULT KeyBindings::ClearAll ( );
__declspec(implementation_key(518)) KeyBindingPtr KeyBindings::Key ( long KeyCode, VARIANT * KeyCode2 );
__declspec(implementation_key(519)) _ApplicationPtr KeysBoundTo::GetApplication ( );
__declspec(implementation_key(520)) long KeysBoundTo::GetCreator ( );
__declspec(implementation_key(521)) IDispatchPtr KeysBoundTo::GetParent ( );
__declspec(implementation_key(522)) IUnknownPtr KeysBoundTo::Get_NewEnum ( );
__declspec(implementation_key(523)) long KeysBoundTo::GetCount ( );
__declspec(implementation_key(524)) enum WdKeyCategory KeysBoundTo::GetKeyCategory ( );
__declspec(implementation_key(525)) _bstr_t KeysBoundTo::GetCommand ( );
__declspec(implementation_key(526)) _bstr_t KeysBoundTo::GetCommandParameter ( );
__declspec(implementation_key(527)) IDispatchPtr KeysBoundTo::GetContext ( );
__declspec(implementation_key(528)) KeyBindingPtr KeysBoundTo::Item ( long Index );
__declspec(implementation_key(529)) KeyBindingPtr KeysBoundTo::Key ( long KeyCode, VARIANT * KeyCode2 );
__declspec(implementation_key(530)) _ApplicationPtr FileConverter::GetApplication ( );
__declspec(implementation_key(531)) long FileConverter::GetCreator ( );
__declspec(implementation_key(532)) IDispatchPtr FileConverter::GetParent ( );
__declspec(implementation_key(533)) _bstr_t FileConverter::GetFormatName ( );
__declspec(implementation_key(534)) _bstr_t FileConverter::GetClassName ( );
__declspec(implementation_key(535)) long FileConverter::GetSaveFormat ( );
__declspec(implementation_key(536)) long FileConverter::GetOpenFormat ( );
__declspec(implementation_key(537)) VARIANT_BOOL FileConverter::GetCanSave ( );
__declspec(implementation_key(538)) VARIANT_BOOL FileConverter::GetCanOpen ( );
__declspec(implementation_key(539)) _bstr_t FileConverter::GetPath ( );
__declspec(implementation_key(540)) _bstr_t FileConverter::GetName ( );
__declspec(implementation_key(541)) _bstr_t FileConverter::GetExtensions ( );
__declspec(implementation_key(542)) _ApplicationPtr FileConverters::GetApplication ( );
__declspec(implementation_key(543)) long FileConverters::GetCreator ( );
__declspec(implementation_key(544)) IDispatchPtr FileConverters::GetParent ( );
__declspec(implementation_key(545)) long FileConverters::GetCount ( );
__declspec(implementation_key(546)) IUnknownPtr FileConverters::Get_NewEnum ( );
__declspec(implementation_key(547)) enum WdChevronConvertRule FileConverters::GetConvertMacWordChevrons ( );
__declspec(implementation_key(548)) void FileConverters::PutConvertMacWordChevrons ( enum WdChevronConvertRule prop );
__declspec(implementation_key(549)) FileConverterPtr FileConverters::Item ( VARIANT * Index );
__declspec(implementation_key(550)) _ApplicationPtr SynonymInfo::GetApplication ( );
__declspec(implementation_key(551)) long SynonymInfo::GetCreator ( );
__declspec(implementation_key(552)) IDispatchPtr SynonymInfo::GetParent ( );
__declspec(implementation_key(553)) _bstr_t SynonymInfo::GetWord ( );
__declspec(implementation_key(554)) VARIANT_BOOL SynonymInfo::GetFound ( );
__declspec(implementation_key(555)) long SynonymInfo::GetMeaningCount ( );
__declspec(implementation_key(556)) _variant_t SynonymInfo::GetMeaningList ( );
__declspec(implementation_key(557)) _variant_t SynonymInfo::GetPartOfSpeechList ( );
__declspec(implementation_key(558)) _variant_t SynonymInfo::GetSynonymList ( VARIANT * Meaning );
__declspec(implementation_key(559)) _variant_t SynonymInfo::GetAntonymList ( );
__declspec(implementation_key(560)) _variant_t SynonymInfo::GetRelatedExpressionList ( );
__declspec(implementation_key(561)) _variant_t SynonymInfo::GetRelatedWordList ( );
__declspec(implementation_key(562)) _ApplicationPtr Zoom::GetApplication ( );
__declspec(implementation_key(563)) long Zoom::GetCreator ( );
__declspec(implementation_key(564)) IDispatchPtr Zoom::GetParent ( );
__declspec(implementation_key(565)) long Zoom::GetPercentage ( );
__declspec(implementation_key(566)) void Zoom::PutPercentage ( long prop );
__declspec(implementation_key(567)) enum WdPageFit Zoom::GetPageFit ( );
__declspec(implementation_key(568)) void Zoom::PutPageFit ( enum WdPageFit prop );
__declspec(implementation_key(569)) long Zoom::GetPageRows ( );
__declspec(implementation_key(570)) void Zoom::PutPageRows ( long prop );
__declspec(implementation_key(571)) long Zoom::GetPageColumns ( );
__declspec(implementation_key(572)) void Zoom::PutPageColumns ( long prop );
__declspec(implementation_key(573)) _ApplicationPtr Zooms::GetApplication ( );
__declspec(implementation_key(574)) long Zooms::GetCreator ( );
__declspec(implementation_key(575)) IDispatchPtr Zooms::GetParent ( );
__declspec(implementation_key(576)) ZoomPtr Zooms::Item ( enum WdViewType Index );
__declspec(implementation_key(577)) _ApplicationPtr SpellingSuggestion::GetApplication ( );
__declspec(implementation_key(578)) long SpellingSuggestion::GetCreator ( );
__declspec(implementation_key(579)) IDispatchPtr SpellingSuggestion::GetParent ( );
__declspec(implementation_key(580)) _bstr_t SpellingSuggestion::GetName ( );
__declspec(implementation_key(581)) _ApplicationPtr SpellingSuggestions::GetApplication ( );
__declspec(implementation_key(582)) long SpellingSuggestions::GetCreator ( );
__declspec(implementation_key(583)) IDispatchPtr SpellingSuggestions::GetParent ( );
__declspec(implementation_key(584)) IUnknownPtr SpellingSuggestions::Get_NewEnum ( );
__declspec(implementation_key(585)) long SpellingSuggestions::GetCount ( );
__declspec(implementation_key(586)) enum WdSpellingErrorType SpellingSuggestions::GetSpellingErrorType ( );
__declspec(implementation_key(587)) SpellingSuggestionPtr SpellingSuggestions::Item ( long Index );
__declspec(implementation_key(588)) _ApplicationPtr Dictionary::GetApplication ( );
__declspec(implementation_key(589)) long Dictionary::GetCreator ( );
__declspec(implementation_key(590)) IDispatchPtr Dictionary::GetParent ( );
__declspec(implementation_key(591)) _bstr_t Dictionary::GetName ( );
__declspec(implementation_key(592)) _bstr_t Dictionary::GetPath ( );
__declspec(implementation_key(593)) enum WdLanguageID Dictionary::GetLanguageID ( );
__declspec(implementation_key(594)) void Dictionary::PutLanguageID ( enum WdLanguageID prop );
__declspec(implementation_key(595)) VARIANT_BOOL Dictionary::GetReadOnly ( );
__declspec(implementation_key(596)) enum WdDictionaryType Dictionary::GetType ( );
__declspec(implementation_key(597)) VARIANT_BOOL Dictionary::GetLanguageSpecific ( );
__declspec(implementation_key(598)) void Dictionary::PutLanguageSpecific ( VARIANT_BOOL prop );
__declspec(implementation_key(599)) HRESULT Dictionary::Delete ( );
__declspec(implementation_key(600)) _ApplicationPtr Language::GetApplication ( );
__declspec(implementation_key(601)) long Language::GetCreator ( );
__declspec(implementation_key(602)) IDispatchPtr Language::GetParent ( );
__declspec(implementation_key(603)) enum WdLanguageID Language::GetID ( );
__declspec(implementation_key(604)) _bstr_t Language::GetNameLocal ( );
__declspec(implementation_key(605)) _bstr_t Language::GetName ( );
__declspec(implementation_key(606)) DictionaryPtr Language::GetActiveGrammarDictionary ( );
__declspec(implementation_key(607)) DictionaryPtr Language::GetActiveHyphenationDictionary ( );
__declspec(implementation_key(608)) DictionaryPtr Language::GetActiveSpellingDictionary ( );
__declspec(implementation_key(609)) DictionaryPtr Language::GetActiveThesaurusDictionary ( );
__declspec(implementation_key(610)) _bstr_t Language::GetDefaultWritingStyle ( );
__declspec(implementation_key(611)) void Language::PutDefaultWritingStyle ( _bstr_t prop );
__declspec(implementation_key(612)) _variant_t Language::GetWritingStyleList ( );
__declspec(implementation_key(613)) enum WdDictionaryType Language::GetSpellingDictionaryType ( );
__declspec(implementation_key(614)) void Language::PutSpellingDictionaryType ( enum WdDictionaryType prop );
__declspec(implementation_key(615)) IUnknownPtr Languages::Get_NewEnum ( );
__declspec(implementation_key(616)) long Languages::GetCount ( );
__declspec(implementation_key(617)) _ApplicationPtr Languages::GetApplication ( );
__declspec(implementation_key(618)) long Languages::GetCreator ( );
__declspec(implementation_key(619)) IDispatchPtr Languages::GetParent ( );
__declspec(implementation_key(620)) LanguagePtr Languages::Item ( VARIANT * Index );
__declspec(implementation_key(621)) _ApplicationPtr Dictionaries::GetApplication ( );
__declspec(implementation_key(622)) long Dictionaries::GetCreator ( );
__declspec(implementation_key(623)) IDispatchPtr Dictionaries::GetParent ( );
__declspec(implementation_key(624)) IUnknownPtr Dictionaries::Get_NewEnum ( );
__declspec(implementation_key(625)) long Dictionaries::GetCount ( );
__declspec(implementation_key(626)) long Dictionaries::GetMaximum ( );
__declspec(implementation_key(627)) DictionaryPtr Dictionaries::GetActiveCustomDictionary ( );
__declspec(implementation_key(628)) void Dictionaries::PutActiveCustomDictionary ( struct Dictionary * prop );
__declspec(implementation_key(629)) DictionaryPtr Dictionaries::Item ( VARIANT * Index );
__declspec(implementation_key(630)) DictionaryPtr Dictionaries::Add ( _bstr_t FileName );
__declspec(implementation_key(631)) HRESULT Dictionaries::ClearAll ( );
__declspec(implementation_key(632)) _ApplicationPtr HangulHanjaConversionDictionaries::GetApplication ( );
__declspec(implementation_key(633)) long HangulHanjaConversionDictionaries::GetCreator ( );
__declspec(implementation_key(634)) IDispatchPtr HangulHanjaConversionDictionaries::GetParent ( );
__declspec(implementation_key(635)) IUnknownPtr HangulHanjaConversionDictionaries::Get_NewEnum ( );
__declspec(implementation_key(636)) long HangulHanjaConversionDictionaries::GetCount ( );
__declspec(implementation_key(637)) long HangulHanjaConversionDictionaries::GetMaximum ( );
__declspec(implementation_key(638)) DictionaryPtr HangulHanjaConversionDictionaries::GetActiveCustomDictionary ( );
__declspec(implementation_key(639)) void HangulHanjaConversionDictionaries::PutActiveCustomDictionary ( struct Dictionary * prop );
__declspec(implementation_key(640)) DictionaryPtr HangulHanjaConversionDictionaries::GetBuiltinDictionary ( );
__declspec(implementation_key(641)) DictionaryPtr HangulHanjaConversionDictionaries::Item ( VARIANT * Index );
__declspec(implementation_key(642)) DictionaryPtr HangulHanjaConversionDictionaries::Add ( _bstr_t FileName );
__declspec(implementation_key(643)) HRESULT HangulHanjaConversionDictionaries::ClearAll ( );
__declspec(implementation_key(644)) _ApplicationPtr ReadabilityStatistic::GetApplication ( );
__declspec(implementation_key(645)) long ReadabilityStatistic::GetCreator ( );
__declspec(implementation_key(646)) IDispatchPtr ReadabilityStatistic::GetParent ( );
__declspec(implementation_key(647)) _bstr_t ReadabilityStatistic::GetName ( );
__declspec(implementation_key(648)) float ReadabilityStatistic::GetValue ( );
__declspec(implementation_key(649)) _ApplicationPtr ReadabilityStatistics::GetApplication ( );
__declspec(implementation_key(650)) long ReadabilityStatistics::GetCreator ( );
__declspec(implementation_key(651)) IDispatchPtr ReadabilityStatistics::GetParent ( );
__declspec(implementation_key(652)) IUnknownPtr ReadabilityStatistics::Get_NewEnum ( );
__declspec(implementation_key(653)) long ReadabilityStatistics::GetCount ( );
__declspec(implementation_key(654)) ReadabilityStatisticPtr ReadabilityStatistics::Item ( VARIANT * Index );
__declspec(implementation_key(655)) _ApplicationPtr MailMessage::GetApplication ( );
__declspec(implementation_key(656)) long MailMessage::GetCreator ( );
__declspec(implementation_key(657)) IDispatchPtr MailMessage::GetParent ( );
__declspec(implementation_key(658)) HRESULT MailMessage::CheckName ( );
__declspec(implementation_key(659)) HRESULT MailMessage::Delete ( );
__declspec(implementation_key(660)) HRESULT MailMessage::DisplayMoveDialog ( );
__declspec(implementation_key(661)) HRESULT MailMessage::DisplayProperties ( );
__declspec(implementation_key(662)) HRESULT MailMessage::DisplaySelectNamesDialog ( );
__declspec(implementation_key(663)) HRESULT MailMessage::Forward ( );
__declspec(implementation_key(664)) HRESULT MailMessage::GoToNext ( );
__declspec(implementation_key(665)) HRESULT MailMessage::GoToPrevious ( );
__declspec(implementation_key(666)) HRESULT MailMessage::Reply ( );
__declspec(implementation_key(667)) HRESULT MailMessage::ReplyAll ( );
__declspec(implementation_key(668)) HRESULT MailMessage::ToggleHeader ( );
__declspec(implementation_key(669)) _ApplicationPtr Mailer::GetApplication ( );
__declspec(implementation_key(670)) long Mailer::GetCreator ( );
__declspec(implementation_key(671)) IDispatchPtr Mailer::GetParent ( );
__declspec(implementation_key(672)) _variant_t Mailer::GetBCCRecipients ( );
__declspec(implementation_key(673)) void Mailer::PutBCCRecipients ( VARIANT * prop );
__declspec(implementation_key(674)) _variant_t Mailer::GetCCRecipients ( );
__declspec(implementation_key(675)) void Mailer::PutCCRecipients ( VARIANT * prop );
__declspec(implementation_key(676)) _variant_t Mailer::GetRecipients ( );
__declspec(implementation_key(677)) void Mailer::PutRecipients ( VARIANT * prop );
__declspec(implementation_key(678)) _variant_t Mailer::GetEnclosures ( );
__declspec(implementation_key(679)) void Mailer::PutEnclosures ( VARIANT * prop );
__declspec(implementation_key(680)) _bstr_t Mailer::GetSender ( );
__declspec(implementation_key(681)) DATE Mailer::GetSendDateTime ( );
__declspec(implementation_key(682)) VARIANT_BOOL Mailer::GetReceived ( );
__declspec(implementation_key(683)) _bstr_t Mailer::GetSubject ( );
__declspec(implementation_key(684)) void Mailer::PutSubject ( _bstr_t prop );
__declspec(implementation_key(685)) _ApplicationPtr WrapFormat::GetApplication ( );
__declspec(implementation_key(686)) long WrapFormat::GetCreator ( );
__declspec(implementation_key(687)) IDispatchPtr WrapFormat::GetParent ( );
__declspec(implementation_key(688)) enum WdWrapType WrapFormat::GetType ( );
__declspec(implementation_key(689)) void WrapFormat::PutType ( enum WdWrapType prop );
__declspec(implementation_key(690)) enum WdWrapSideType WrapFormat::GetSide ( );
__declspec(implementation_key(691)) void WrapFormat::PutSide ( enum WdWrapSideType prop );
__declspec(implementation_key(692)) float WrapFormat::GetDistanceTop ( );
__declspec(implementation_key(693)) void WrapFormat::PutDistanceTop ( float prop );
__declspec(implementation_key(694)) float WrapFormat::GetDistanceBottom ( );
__declspec(implementation_key(695)) void WrapFormat::PutDistanceBottom ( float prop );
__declspec(implementation_key(696)) float WrapFormat::GetDistanceLeft ( );
__declspec(implementation_key(697)) void WrapFormat::PutDistanceLeft ( float prop );
__declspec(implementation_key(698)) float WrapFormat::GetDistanceRight ( );
__declspec(implementation_key(699)) void WrapFormat::PutDistanceRight ( float prop );
__declspec(implementation_key(700)) long WrapFormat::GetAllowOverlap ( );
__declspec(implementation_key(701)) void WrapFormat::PutAllowOverlap ( long prop );
__declspec(implementation_key(702)) _ApplicationPtr HangulAndAlphabetException::GetApplication ( );
__declspec(implementation_key(703)) long HangulAndAlphabetException::GetCreator ( );
__declspec(implementation_key(704)) IDispatchPtr HangulAndAlphabetException::GetParent ( );
__declspec(implementation_key(705)) long HangulAndAlphabetException::GetIndex ( );
__declspec(implementation_key(706)) _bstr_t HangulAndAlphabetException::GetName ( );
__declspec(implementation_key(707)) HRESULT HangulAndAlphabetException::Delete ( );
__declspec(implementation_key(708)) _ApplicationPtr HangulAndAlphabetExceptions::GetApplication ( );
__declspec(implementation_key(709)) long HangulAndAlphabetExceptions::GetCreator ( );
__declspec(implementation_key(710)) IDispatchPtr HangulAndAlphabetExceptions::GetParent ( );
__declspec(implementation_key(711)) IUnknownPtr HangulAndAlphabetExceptions::Get_NewEnum ( );
__declspec(implementation_key(712)) long HangulAndAlphabetExceptions::GetCount ( );
__declspec(implementation_key(713)) HangulAndAlphabetExceptionPtr HangulAndAlphabetExceptions::Item ( VARIANT * Index );
__declspec(implementation_key(714)) HangulAndAlphabetExceptionPtr HangulAndAlphabetExceptions::Add ( _bstr_t Name );
__declspec(implementation_key(715)) _ApplicationPtr Adjustments::GetApplication ( );
__declspec(implementation_key(716)) long Adjustments::GetCreator ( );
__declspec(implementation_key(717)) IDispatchPtr Adjustments::GetParent ( );
__declspec(implementation_key(718)) long Adjustments::GetCount ( );
__declspec(implementation_key(719)) float Adjustments::GetItem ( long Index );
__declspec(implementation_key(720)) void Adjustments::PutItem ( long Index, float prop );
__declspec(implementation_key(721)) _ApplicationPtr CalloutFormat::GetApplication ( );
__declspec(implementation_key(722)) long CalloutFormat::GetCreator ( );
__declspec(implementation_key(723)) IDispatchPtr CalloutFormat::GetParent ( );
__declspec(implementation_key(724)) enum Office::MsoTriState CalloutFormat::GetAccent ( );
__declspec(implementation_key(725)) void CalloutFormat::PutAccent ( enum Office::MsoTriState prop );
__declspec(implementation_key(726)) enum Office::MsoCalloutAngleType CalloutFormat::GetAngle ( );
__declspec(implementation_key(727)) void CalloutFormat::PutAngle ( enum Office::MsoCalloutAngleType prop );
__declspec(implementation_key(728)) enum Office::MsoTriState CalloutFormat::GetAutoAttach ( );
__declspec(implementation_key(729)) void CalloutFormat::PutAutoAttach ( enum Office::MsoTriState prop );
__declspec(implementation_key(730)) enum Office::MsoTriState CalloutFormat::GetAutoLength ( );
__declspec(implementation_key(731)) enum Office::MsoTriState CalloutFormat::GetBorder ( );
__declspec(implementation_key(732)) void CalloutFormat::PutBorder ( enum Office::MsoTriState prop );
__declspec(implementation_key(733)) float CalloutFormat::GetDrop ( );
__declspec(implementation_key(734)) enum Office::MsoCalloutDropType CalloutFormat::GetDropType ( );
__declspec(implementation_key(735)) float CalloutFormat::GetGap ( );
__declspec(implementation_key(736)) void CalloutFormat::PutGap ( float prop );
__declspec(implementation_key(737)) float CalloutFormat::GetLength ( );
__declspec(implementation_key(738)) enum Office::MsoCalloutType CalloutFormat::GetType ( );
__declspec(implementation_key(739)) void CalloutFormat::PutType ( enum Office::MsoCalloutType prop );
__declspec(implementation_key(740)) HRESULT CalloutFormat::AutomaticLength ( );
__declspec(implementation_key(741)) HRESULT CalloutFormat::CustomDrop ( float Drop );
__declspec(implementation_key(742)) HRESULT CalloutFormat::CustomLength ( float Length );
__declspec(implementation_key(743)) HRESULT CalloutFormat::PresetDrop ( enum Office::MsoCalloutDropType DropType );
__declspec(implementation_key(744)) _ApplicationPtr PictureFormat::GetApplication ( );
__declspec(implementation_key(745)) long PictureFormat::GetCreator ( );
__declspec(implementation_key(746)) IDispatchPtr PictureFormat::GetParent ( );
__declspec(implementation_key(747)) float PictureFormat::GetBrightness ( );
__declspec(implementation_key(748)) void PictureFormat::PutBrightness ( float prop );
__declspec(implementation_key(749)) enum Office::MsoPictureColorType PictureFormat::GetColorType ( );
__declspec(implementation_key(750)) void PictureFormat::PutColorType ( enum Office::MsoPictureColorType prop );
__declspec(implementation_key(751)) float PictureFormat::GetContrast ( );
__declspec(implementation_key(752)) void PictureFormat::PutContrast ( float prop );
__declspec(implementation_key(753)) float PictureFormat::GetCropBottom ( );
__declspec(implementation_key(754)) void PictureFormat::PutCropBottom ( float prop );
__declspec(implementation_key(755)) float PictureFormat::GetCropLeft ( );
__declspec(implementation_key(756)) void PictureFormat::PutCropLeft ( float prop );
__declspec(implementation_key(757)) float PictureFormat::GetCropRight ( );
__declspec(implementation_key(758)) void PictureFormat::PutCropRight ( float prop );
__declspec(implementation_key(759)) float PictureFormat::GetCropTop ( );
__declspec(implementation_key(760)) void PictureFormat::PutCropTop ( float prop );
__declspec(implementation_key(761)) long PictureFormat::GetTransparencyColor ( );
__declspec(implementation_key(762)) void PictureFormat::PutTransparencyColor ( long prop );
__declspec(implementation_key(763)) enum Office::MsoTriState PictureFormat::GetTransparentBackground ( );
__declspec(implementation_key(764)) void PictureFormat::PutTransparentBackground ( enum Office::MsoTriState prop );
__declspec(implementation_key(765)) HRESULT PictureFormat::IncrementBrightness ( float Increment );
__declspec(implementation_key(766)) HRESULT PictureFormat::IncrementContrast ( float Increment );
__declspec(implementation_key(767)) _ApplicationPtr ShapeNode::GetApplication ( );
__declspec(implementation_key(768)) long ShapeNode::GetCreator ( );
__declspec(implementation_key(769)) IDispatchPtr ShapeNode::GetParent ( );
__declspec(implementation_key(770)) enum Office::MsoEditingType ShapeNode::GetEditingType ( );
__declspec(implementation_key(771)) _variant_t ShapeNode::GetPoints ( );
__declspec(implementation_key(772)) enum Office::MsoSegmentType ShapeNode::GetSegmentType ( );
__declspec(implementation_key(773)) _ApplicationPtr ShapeNodes::GetApplication ( );
__declspec(implementation_key(774)) long ShapeNodes::GetCreator ( );
__declspec(implementation_key(775)) IDispatchPtr ShapeNodes::GetParent ( );
__declspec(implementation_key(776)) long ShapeNodes::GetCount ( );
__declspec(implementation_key(777)) IUnknownPtr ShapeNodes::Get_NewEnum ( );
__declspec(implementation_key(778)) HRESULT ShapeNodes::Delete ( long Index );
__declspec(implementation_key(779)) ShapeNodePtr ShapeNodes::Item ( VARIANT * Index );
__declspec(implementation_key(780)) HRESULT ShapeNodes::SetEditingType ( long Index, enum Office::MsoEditingType EditingType );
__declspec(implementation_key(781)) HRESULT ShapeNodes::SetPosition ( long Index, float X1, float Y1 );
__declspec(implementation_key(782)) HRESULT ShapeNodes::SetSegmentType ( long Index, enum Office::MsoSegmentType SegmentType );
__declspec(implementation_key(783)) HRESULT ShapeNodes::Insert ( long Index, enum Office::MsoSegmentType SegmentType, enum Office::MsoEditingType EditingType, float X1, float Y1, float X2, float Y2, float X3, float Y3 );
__declspec(implementation_key(784)) _ApplicationPtr TextEffectFormat::GetApplication ( );
__declspec(implementation_key(785)) long TextEffectFormat::GetCreator ( );
__declspec(implementation_key(786)) IDispatchPtr TextEffectFormat::GetParent ( );
__declspec(implementation_key(787)) enum Office::MsoTextEffectAlignment TextEffectFormat::GetAlignment ( );
__declspec(implementation_key(788)) void TextEffectFormat::PutAlignment ( enum Office::MsoTextEffectAlignment prop );
__declspec(implementation_key(789)) enum Office::MsoTriState TextEffectFormat::GetFontBold ( );
__declspec(implementation_key(790)) void TextEffectFormat::PutFontBold ( enum Office::MsoTriState prop );
__declspec(implementation_key(791)) enum Office::MsoTriState TextEffectFormat::GetFontItalic ( );
__declspec(implementation_key(792)) void TextEffectFormat::PutFontItalic ( enum Office::MsoTriState prop );
__declspec(implementation_key(793)) _bstr_t TextEffectFormat::GetFontName ( );
__declspec(implementation_key(794)) void TextEffectFormat::PutFontName ( _bstr_t prop );
__declspec(implementation_key(795)) float TextEffectFormat::GetFontSize ( );
__declspec(implementation_key(796)) void TextEffectFormat::PutFontSize ( float prop );
__declspec(implementation_key(797)) enum Office::MsoTriState TextEffectFormat::GetKernedPairs ( );
__declspec(implementation_key(798)) void TextEffectFormat::PutKernedPairs ( enum Office::MsoTriState prop );
__declspec(implementation_key(799)) enum Office::MsoTriState TextEffectFormat::GetNormalizedHeight ( );
__declspec(implementation_key(800)) void TextEffectFormat::PutNormalizedHeight ( enum Office::MsoTriState prop );
__declspec(implementation_key(801)) enum Office::MsoPresetTextEffectShape TextEffectFormat::GetPresetShape ( );
__declspec(implementation_key(802)) void TextEffectFormat::PutPresetShape ( enum Office::MsoPresetTextEffectShape prop );
__declspec(implementation_key(803)) enum Office::MsoPresetTextEffect TextEffectFormat::GetPresetTextEffect ( );
__declspec(implementation_key(804)) void TextEffectFormat::PutPresetTextEffect ( enum Office::MsoPresetTextEffect prop );
__declspec(implementation_key(805)) enum Office::MsoTriState TextEffectFormat::GetRotatedChars ( );
__declspec(implementation_key(806)) void TextEffectFormat::PutRotatedChars ( enum Office::MsoTriState prop );
__declspec(implementation_key(807)) _bstr_t TextEffectFormat::GetText ( );
__declspec(implementation_key(808)) void TextEffectFormat::PutText ( _bstr_t prop );
__declspec(implementation_key(809)) float TextEffectFormat::GetTracking ( );
__declspec(implementation_key(810)) void TextEffectFormat::PutTracking ( float prop );
__declspec(implementation_key(811)) HRESULT TextEffectFormat::ToggleVerticalText ( );
__declspec(implementation_key(812)) HRESULT DocumentEvents::New ( );
__declspec(implementation_key(813)) HRESULT DocumentEvents::Open ( );
__declspec(implementation_key(814)) HRESULT DocumentEvents::Close ( );
__declspec(implementation_key(815)) IUnknownPtr Documents::Get_NewEnum ( );
__declspec(implementation_key(816)) long Documents::GetCount ( );
__declspec(implementation_key(817)) _ApplicationPtr Documents::GetApplication ( );
__declspec(implementation_key(818)) long Documents::GetCreator ( );
__declspec(implementation_key(819)) IDispatchPtr Documents::GetParent ( );
__declspec(implementation_key(820)) _DocumentPtr Documents::Item ( VARIANT * Index );
__declspec(implementation_key(821)) HRESULT Documents::Close ( VARIANT * SaveChanges, VARIANT * OriginalFormat, VARIANT * RouteDocument );
__declspec(implementation_key(822)) _DocumentPtr Documents::AddOld ( VARIANT * Template, VARIANT * NewTemplate );
__declspec(implementation_key(823)) _DocumentPtr Documents::OpenOld ( VARIANT * FileName, VARIANT * ConfirmConversions, VARIANT * ReadOnly, VARIANT * AddToRecentFiles, VARIANT * PasswordDocument, VARIANT * PasswordTemplate, VARIANT * Revert, VARIANT * WritePasswordDocument, VARIANT * WritePasswordTemplate, VARIANT * Format );
__declspec(implementation_key(824)) HRESULT Documents::Save ( VARIANT * NoPrompt, VARIANT * OriginalFormat );
__declspec(implementation_key(825)) _DocumentPtr Documents::Add ( VARIANT * Template, VARIANT * NewTemplate, VARIANT * DocumentType, VARIANT * Visible );
__declspec(implementation_key(826)) _DocumentPtr Documents::Open2000 ( VARIANT * FileName, VARIANT * ConfirmConversions, VARIANT * ReadOnly, VARIANT * AddToRecentFiles, VARIANT * PasswordDocument, VARIANT * PasswordTemplate, VARIANT * Revert, VARIANT * WritePasswordDocument, VARIANT * WritePasswordTemplate, VARIANT * Format, VARIANT * Encoding, VARIANT * Visible );
__declspec(implementation_key(827)) HRESULT Documents::CheckOut ( _bstr_t FileName );
__declspec(implementation_key(828)) VARIANT_BOOL Documents::CanCheckOut ( _bstr_t FileName );
__declspec(implementation_key(829)) _DocumentPtr Documents::Open2002 ( VARIANT * FileName, VARIANT * ConfirmConversions, VARIANT * ReadOnly, VARIANT * AddToRecentFiles, VARIANT * PasswordDocument, VARIANT * PasswordTemplate, VARIANT * Revert, VARIANT * WritePasswordDocument, VARIANT * WritePasswordTemplate, VARIANT * Format, VARIANT * Encoding, VARIANT * Visible, VARIANT * OpenAndRepair, VARIANT * DocumentDirection, VARIANT * NoEncodingDialog );
__declspec(implementation_key(830)) _DocumentPtr Documents::Open ( VARIANT * FileName, VARIANT * ConfirmConversions, VARIANT * ReadOnly, VARIANT * AddToRecentFiles, VARIANT * PasswordDocument, VARIANT * PasswordTemplate, VARIANT * Revert, VARIANT * WritePasswordDocument, VARIANT * WritePasswordTemplate, VARIANT * Format, VARIANT * Encoding, VARIANT * Visible, VARIANT * OpenAndRepair, VARIANT * DocumentDirection, VARIANT * NoEncodingDialog, VARIANT * XMLTransform );
__declspec(implementation_key(831)) _DocumentPtr Documents::OpenNoRepairDialog ( VARIANT * FileName, VARIANT * ConfirmConversions, VARIANT * ReadOnly, VARIANT * AddToRecentFiles, VARIANT * PasswordDocument, VARIANT * PasswordTemplate, VARIANT * Revert, VARIANT * WritePasswordDocument, VARIANT * WritePasswordTemplate, VARIANT * Format, VARIANT * Encoding, VARIANT * Visible, VARIANT * OpenAndRepair, VARIANT * DocumentDirection, VARIANT * NoEncodingDialog, VARIANT * XMLTransform );
__declspec(implementation_key(832)) _DocumentPtr Documents::AddBlogDocument ( _bstr_t ProviderID, _bstr_t PostURL, _bstr_t BlogName, _bstr_t PostID );
__declspec(implementation_key(833)) _ApplicationPtr RecentFile::GetApplication ( );
__declspec(implementation_key(834)) long RecentFile::GetCreator ( );
__declspec(implementation_key(835)) IDispatchPtr RecentFile::GetParent ( );
__declspec(implementation_key(836)) _bstr_t RecentFile::GetName ( );
__declspec(implementation_key(837)) long RecentFile::GetIndex ( );
__declspec(implementation_key(838)) VARIANT_BOOL RecentFile::GetReadOnly ( );
__declspec(implementation_key(839)) void RecentFile::PutReadOnly ( VARIANT_BOOL prop );
__declspec(implementation_key(840)) _bstr_t RecentFile::GetPath ( );
__declspec(implementation_key(841)) _DocumentPtr RecentFile::Open ( );
__declspec(implementation_key(842)) HRESULT RecentFile::Delete ( );
__declspec(implementation_key(843)) _ApplicationPtr RecentFiles::GetApplication ( );
__declspec(implementation_key(844)) long RecentFiles::GetCreator ( );
__declspec(implementation_key(845)) IDispatchPtr RecentFiles::GetParent ( );
__declspec(implementation_key(846)) IUnknownPtr RecentFiles::Get_NewEnum ( );
__declspec(implementation_key(847)) long RecentFiles::GetCount ( );
__declspec(implementation_key(848)) long RecentFiles::GetMaximum ( );
__declspec(implementation_key(849)) void RecentFiles::PutMaximum ( long prop );
__declspec(implementation_key(850)) RecentFilePtr RecentFiles::Item ( long Index );
__declspec(implementation_key(851)) RecentFilePtr RecentFiles::Add ( VARIANT * Document, VARIANT * ReadOnly );
__declspec(implementation_key(852)) _ApplicationPtr MailingLabel::GetApplication ( );
__declspec(implementation_key(853)) long MailingLabel::GetCreator ( );
__declspec(implementation_key(854)) IDispatchPtr MailingLabel::GetParent ( );
__declspec(implementation_key(855)) VARIANT_BOOL MailingLabel::GetDefaultPrintBarCode ( );
__declspec(implementation_key(856)) void MailingLabel::PutDefaultPrintBarCode ( VARIANT_BOOL prop );
__declspec(implementation_key(857)) enum WdPaperTray MailingLabel::GetDefaultLaserTray ( );
__declspec(implementation_key(858)) void MailingLabel::PutDefaultLaserTray ( enum WdPaperTray prop );
__declspec(implementation_key(859)) CustomLabelsPtr MailingLabel::GetCustomLabels ( );
__declspec(implementation_key(860)) _bstr_t MailingLabel::GetDefaultLabelName ( );
__declspec(implementation_key(861)) void MailingLabel::PutDefaultLabelName ( _bstr_t prop );
__declspec(implementation_key(862)) _DocumentPtr MailingLabel::CreateNewDocument2000 ( VARIANT * Name, VARIANT * Address, VARIANT * AutoText, VARIANT * ExtractAddress, VARIANT * LaserTray );
__declspec(implementation_key(863)) HRESULT MailingLabel::PrintOut2000 ( VARIANT * Name, VARIANT * Address, VARIANT * ExtractAddress, VARIANT * LaserTray, VARIANT * SingleLabel, VARIANT * Row, VARIANT * Column );
__declspec(implementation_key(864)) HRESULT MailingLabel::LabelOptions ( );
__declspec(implementation_key(865)) _DocumentPtr MailingLabel::CreateNewDocument ( VARIANT * Name, VARIANT * Address, VARIANT * AutoText, VARIANT * ExtractAddress, VARIANT * LaserTray, VARIANT * PrintEPostageLabel, VARIANT * Vertical );
__declspec(implementation_key(866)) HRESULT MailingLabel::PrintOut ( VARIANT * Name, VARIANT * Address, VARIANT * ExtractAddress, VARIANT * LaserTray, VARIANT * SingleLabel, VARIANT * Row, VARIANT * Column, VARIANT * PrintEPostageLabel, VARIANT * Vertical );
__declspec(implementation_key(867)) VARIANT_BOOL MailingLabel::GetVertical ( );
__declspec(implementation_key(868)) void MailingLabel::PutVertical ( VARIANT_BOOL prop );
__declspec(implementation_key(869)) _DocumentPtr MailingLabel::CreateNewDocumentByID ( VARIANT * LabelID, VARIANT * Address, VARIANT * AutoText, VARIANT * ExtractAddress, VARIANT * LaserTray, VARIANT * PrintEPostageLabel, VARIANT * Vertical );
__declspec(implementation_key(870)) HRESULT MailingLabel::PrintOutByID ( VARIANT * LabelID, VARIANT * Address, VARIANT * ExtractAddress, VARIANT * LaserTray, VARIANT * SingleLabel, VARIANT * Row, VARIANT * Column, VARIANT * PrintEPostageLabel, VARIANT * Vertical );
__declspec(implementation_key(871)) _ApplicationPtr Version::GetApplication ( );
__declspec(implementation_key(872)) long Version::GetCreator ( );
__declspec(implementation_key(873)) IDispatchPtr Version::GetParent ( );
__declspec(implementation_key(874)) _bstr_t Version::GetSavedBy ( );
__declspec(implementation_key(875)) _bstr_t Version::GetComment ( );
__declspec(implementation_key(876)) DATE Version::GetDate ( );
__declspec(implementation_key(877)) long Version::GetIndex ( );
__declspec(implementation_key(878)) HRESULT Version::OpenOld ( );
__declspec(implementation_key(879)) HRESULT Version::Delete ( );
__declspec(implementation_key(880)) _DocumentPtr Version::Open ( );
__declspec(implementation_key(881)) _ApplicationPtr Versions::GetApplication ( );
__declspec(implementation_key(882)) long Versions::GetCreator ( );
__declspec(implementation_key(883)) IDispatchPtr Versions::GetParent ( );
__declspec(implementation_key(884)) IUnknownPtr Versions::Get_NewEnum ( );
__declspec(implementation_key(885)) long Versions::GetCount ( );
__declspec(implementation_key(886)) enum WdAutoVersions Versions::GetAutoVersion ( );
__declspec(implementation_key(887)) void Versions::PutAutoVersion ( enum WdAutoVersions prop );
__declspec(implementation_key(888)) VersionPtr Versions::Item ( long Index );
__declspec(implementation_key(889)) HRESULT Versions::Save ( VARIANT * Comment );
__declspec(implementation_key(890)) HRESULT OCXEvents::GotFocus ( );
__declspec(implementation_key(891)) HRESULT OCXEvents::LostFocus ( );
__declspec(implementation_key(892)) _ApplicationPtr _LetterContent::GetApplication ( );
__declspec(implementation_key(893)) long _LetterContent::GetCreator ( );
__declspec(implementation_key(894)) IDispatchPtr _LetterContent::GetParent ( );
__declspec(implementation_key(895)) _LetterContentPtr _LetterContent::GetDuplicate ( );
__declspec(implementation_key(896)) _bstr_t _LetterContent::GetDateFormat ( );
__declspec(implementation_key(897)) void _LetterContent::PutDateFormat ( _bstr_t prop );
__declspec(implementation_key(898)) VARIANT_BOOL _LetterContent::GetIncludeHeaderFooter ( );
__declspec(implementation_key(899)) void _LetterContent::PutIncludeHeaderFooter ( VARIANT_BOOL prop );
__declspec(implementation_key(900)) _bstr_t _LetterContent::GetPageDesign ( );
__declspec(implementation_key(901)) void _LetterContent::PutPageDesign ( _bstr_t prop );
__declspec(implementation_key(902)) enum WdLetterStyle _LetterContent::GetLetterStyle ( );
__declspec(implementation_key(903)) void _LetterContent::PutLetterStyle ( enum WdLetterStyle prop );
__declspec(implementation_key(904)) VARIANT_BOOL _LetterContent::GetLetterhead ( );
__declspec(implementation_key(905)) void _LetterContent::PutLetterhead ( VARIANT_BOOL prop );
__declspec(implementation_key(906)) enum WdLetterheadLocation _LetterContent::GetLetterheadLocation ( );
__declspec(implementation_key(907)) void _LetterContent::PutLetterheadLocation ( enum WdLetterheadLocation prop );
__declspec(implementation_key(908)) float _LetterContent::GetLetterheadSize ( );
__declspec(implementation_key(909)) void _LetterContent::PutLetterheadSize ( float prop );
__declspec(implementation_key(910)) _bstr_t _LetterContent::GetRecipientName ( );
__declspec(implementation_key(911)) void _LetterContent::PutRecipientName ( _bstr_t prop );
__declspec(implementation_key(912)) _bstr_t _LetterContent::GetRecipientAddress ( );
__declspec(implementation_key(913)) void _LetterContent::PutRecipientAddress ( _bstr_t prop );
__declspec(implementation_key(914)) _bstr_t _LetterContent::GetSalutation ( );
__declspec(implementation_key(915)) void _LetterContent::PutSalutation ( _bstr_t prop );
__declspec(implementation_key(916)) enum WdSalutationType _LetterContent::GetSalutationType ( );
__declspec(implementation_key(917)) void _LetterContent::PutSalutationType ( enum WdSalutationType prop );
__declspec(implementation_key(918)) _bstr_t _LetterContent::GetRecipientReference ( );
__declspec(implementation_key(919)) void _LetterContent::PutRecipientReference ( _bstr_t prop );
__declspec(implementation_key(920)) _bstr_t _LetterContent::GetMailingInstructions ( );
__declspec(implementation_key(921)) void _LetterContent::PutMailingInstructions ( _bstr_t prop );
__declspec(implementation_key(922)) _bstr_t _LetterContent::GetAttentionLine ( );
__declspec(implementation_key(923)) void _LetterContent::PutAttentionLine ( _bstr_t prop );
__declspec(implementation_key(924)) _bstr_t _LetterContent::GetSubject ( );
__declspec(implementation_key(925)) void _LetterContent::PutSubject ( _bstr_t prop );
__declspec(implementation_key(926)) long _LetterContent::GetEnclosureNumber ( );
__declspec(implementation_key(927)) void _LetterContent::PutEnclosureNumber ( long prop );
__declspec(implementation_key(928)) _bstr_t _LetterContent::GetCCList ( );
__declspec(implementation_key(929)) void _LetterContent::PutCCList ( _bstr_t prop );
__declspec(implementation_key(930)) _bstr_t _LetterContent::GetReturnAddress ( );
__declspec(implementation_key(931)) void _LetterContent::PutReturnAddress ( _bstr_t prop );
__declspec(implementation_key(932)) _bstr_t _LetterContent::GetSenderName ( );
__declspec(implementation_key(933)) void _LetterContent::PutSenderName ( _bstr_t prop );
__declspec(implementation_key(934)) _bstr_t _LetterContent::GetClosing ( );
__declspec(implementation_key(935)) void _LetterContent::PutClosing ( _bstr_t prop );
__declspec(implementation_key(936)) _bstr_t _LetterContent::GetSenderCompany ( );
__declspec(implementation_key(937)) void _LetterContent::PutSenderCompany ( _bstr_t prop );
__declspec(implementation_key(938)) _bstr_t _LetterContent::GetSenderJobTitle ( );
__declspec(implementation_key(939)) void _LetterContent::PutSenderJobTitle ( _bstr_t prop );
__declspec(implementation_key(940)) _bstr_t _LetterContent::GetSenderInitials ( );
__declspec(implementation_key(941)) void _LetterContent::PutSenderInitials ( _bstr_t prop );
__declspec(implementation_key(942)) VARIANT_BOOL _LetterContent::GetInfoBlock ( );
__declspec(implementation_key(943)) void _LetterContent::PutInfoBlock ( VARIANT_BOOL prop );
__declspec(implementation_key(944)) _bstr_t _LetterContent::GetRecipientCode ( );
__declspec(implementation_key(945)) void _LetterContent::PutRecipientCode ( _bstr_t prop );
__declspec(implementation_key(946)) enum WdSalutationGender _LetterContent::GetRecipientGender ( );
__declspec(implementation_key(947)) void _LetterContent::PutRecipientGender ( enum WdSalutationGender prop );
__declspec(implementation_key(948)) _bstr_t _LetterContent::GetReturnAddressShortForm ( );
__declspec(implementation_key(949)) void _LetterContent::PutReturnAddressShortForm ( _bstr_t prop );
__declspec(implementation_key(950)) _bstr_t _LetterContent::GetSenderCity ( );
__declspec(implementation_key(951)) void _LetterContent::PutSenderCity ( _bstr_t prop );
__declspec(implementation_key(952)) _bstr_t _LetterContent::GetSenderCode ( );
__declspec(implementation_key(953)) void _LetterContent::PutSenderCode ( _bstr_t prop );
__declspec(implementation_key(954)) enum WdSalutationGender _LetterContent::GetSenderGender ( );
__declspec(implementation_key(955)) void _LetterContent::PutSenderGender ( enum WdSalutationGender prop );
__declspec(implementation_key(956)) _bstr_t _LetterContent::GetSenderReference ( );
__declspec(implementation_key(957)) void _LetterContent::PutSenderReference ( _bstr_t prop );
__declspec(implementation_key(958)) HRESULT IApplicationEvents::Startup ( );
__declspec(implementation_key(959)) HRESULT IApplicationEvents::Quit ( );
__declspec(implementation_key(960)) HRESULT IApplicationEvents::DocumentChange ( );
__declspec(implementation_key(961)) HRESULT ApplicationEvents2::Quit ( );
__declspec(implementation_key(962)) HRESULT ApplicationEvents2::DocumentChange ( );
__declspec(implementation_key(963)) HRESULT ApplicationEvents2::DocumentOpen ( struct _Document * Doc );
__declspec(implementation_key(964)) HRESULT ApplicationEvents2::DocumentBeforeClose ( struct _Document * Doc, VARIANT_BOOL * Cancel );
__declspec(implementation_key(965)) HRESULT ApplicationEvents2::DocumentBeforePrint ( struct _Document * Doc, VARIANT_BOOL * Cancel );
__declspec(implementation_key(966)) HRESULT ApplicationEvents2::DocumentBeforeSave ( struct _Document * Doc, VARIANT_BOOL * SaveAsUI, VARIANT_BOOL * Cancel );
__declspec(implementation_key(967)) HRESULT ApplicationEvents2::NewDocument ( struct _Document * Doc );
__declspec(implementation_key(968)) HRESULT ApplicationEvents2::WindowActivate ( struct _Document * Doc, struct Window * Wn );
__declspec(implementation_key(969)) HRESULT ApplicationEvents2::WindowDeactivate ( struct _Document * Doc, struct Window * Wn );
__declspec(implementation_key(970)) HRESULT ApplicationEvents2::WindowSelectionChange ( struct Selection * Sel );
__declspec(implementation_key(971)) HRESULT ApplicationEvents2::WindowBeforeRightClick ( struct Selection * Sel, VARIANT_BOOL * Cancel );
__declspec(implementation_key(972)) HRESULT ApplicationEvents2::WindowBeforeDoubleClick ( struct Selection * Sel, VARIANT_BOOL * Cancel );
__declspec(implementation_key(973)) IUnknownPtr TextColumns::Get_NewEnum ( );
__declspec(implementation_key(974)) long TextColumns::GetCount ( );
__declspec(implementation_key(975)) _ApplicationPtr TextColumns::GetApplication ( );
__declspec(implementation_key(976)) long TextColumns::GetCreator ( );
__declspec(implementation_key(977)) IDispatchPtr TextColumns::GetParent ( );
__declspec(implementation_key(978)) long TextColumns::GetEvenlySpaced ( );
__declspec(implementation_key(979)) void TextColumns::PutEvenlySpaced ( long prop );
__declspec(implementation_key(980)) long TextColumns::GetLineBetween ( );
__declspec(implementation_key(981)) void TextColumns::PutLineBetween ( long prop );
__declspec(implementation_key(982)) float TextColumns::GetWidth ( );
__declspec(implementation_key(983)) void TextColumns::PutWidth ( float prop );
__declspec(implementation_key(984)) float TextColumns::GetSpacing ( );
__declspec(implementation_key(985)) void TextColumns::PutSpacing ( float prop );
__declspec(implementation_key(986)) TextColumnPtr TextColumns::Item ( long Index );
__declspec(implementation_key(987)) TextColumnPtr TextColumns::Add ( VARIANT * Width, VARIANT * Spacing, VARIANT * EvenlySpaced );
__declspec(implementation_key(988)) HRESULT TextColumns::SetCount ( long NumColumns );
__declspec(implementation_key(989)) enum WdFlowDirection TextColumns::GetFlowDirection ( );
__declspec(implementation_key(990)) void TextColumns::PutFlowDirection ( enum WdFlowDirection prop );
__declspec(implementation_key(991)) _ApplicationPtr PageSetup::GetApplication ( );
__declspec(implementation_key(992)) long PageSetup::GetCreator ( );
__declspec(implementation_key(993)) IDispatchPtr PageSetup::GetParent ( );
__declspec(implementation_key(994)) float PageSetup::GetTopMargin ( );
__declspec(implementation_key(995)) void PageSetup::PutTopMargin ( float prop );
__declspec(implementation_key(996)) float PageSetup::GetBottomMargin ( );
__declspec(implementation_key(997)) void PageSetup::PutBottomMargin ( float prop );
__declspec(implementation_key(998)) float PageSetup::GetLeftMargin ( );
__declspec(implementation_key(999)) void PageSetup::PutLeftMargin ( float prop );
__declspec(implementation_key(1000)) float PageSetup::GetRightMargin ( );
__declspec(implementation_key(1001)) void PageSetup::PutRightMargin ( float prop );
__declspec(implementation_key(1002)) float PageSetup::GetGutter ( );
__declspec(implementation_key(1003)) void PageSetup::PutGutter ( float prop );
__declspec(implementation_key(1004)) float PageSetup::GetPageWidth ( );
__declspec(implementation_key(1005)) void PageSetup::PutPageWidth ( float prop );
__declspec(implementation_key(1006)) float PageSetup::GetPageHeight ( );
__declspec(implementation_key(1007)) void PageSetup::PutPageHeight ( float prop );
__declspec(implementation_key(1008)) enum WdOrientation PageSetup::GetOrientation ( );
__declspec(implementation_key(1009)) void PageSetup::PutOrientation ( enum WdOrientation prop );
__declspec(implementation_key(1010)) enum WdPaperTray PageSetup::GetFirstPageTray ( );
__declspec(implementation_key(1011)) void PageSetup::PutFirstPageTray ( enum WdPaperTray prop );
__declspec(implementation_key(1012)) enum WdPaperTray PageSetup::GetOtherPagesTray ( );
__declspec(implementation_key(1013)) void PageSetup::PutOtherPagesTray ( enum WdPaperTray prop );
__declspec(implementation_key(1014)) enum WdVerticalAlignment PageSetup::GetVerticalAlignment ( );
__declspec(implementation_key(1015)) void PageSetup::PutVerticalAlignment ( enum WdVerticalAlignment prop );
__declspec(implementation_key(1016)) long PageSetup::GetMirrorMargins ( );
__declspec(implementation_key(1017)) void PageSetup::PutMirrorMargins ( long prop );
__declspec(implementation_key(1018)) float PageSetup::GetHeaderDistance ( );
__declspec(implementation_key(1019)) void PageSetup::PutHeaderDistance ( float prop );
__declspec(implementation_key(1020)) float PageSetup::GetFooterDistance ( );
__declspec(implementation_key(1021)) void PageSetup::PutFooterDistance ( float prop );
__declspec(implementation_key(1022)) enum WdSectionStart PageSetup::GetSectionStart ( );
__declspec(implementation_key(1023)) void PageSetup::PutSectionStart ( enum WdSectionStart prop );
__declspec(implementation_key(1024)) long PageSetup::GetOddAndEvenPagesHeaderFooter ( );
__declspec(implementation_key(1025)) void PageSetup::PutOddAndEvenPagesHeaderFooter ( long prop );
__declspec(implementation_key(1026)) long PageSetup::GetDifferentFirstPageHeaderFooter ( );
__declspec(implementation_key(1027)) void PageSetup::PutDifferentFirstPageHeaderFooter ( long prop );
__declspec(implementation_key(1028)) long PageSetup::GetSuppressEndnotes ( );
__declspec(implementation_key(1029)) void PageSetup::PutSuppressEndnotes ( long prop );
__declspec(implementation_key(1030)) LineNumberingPtr PageSetup::GetLineNumbering ( );
__declspec(implementation_key(1031)) void PageSetup::PutLineNumbering ( struct LineNumbering * prop );
__declspec(implementation_key(1032)) TextColumnsPtr PageSetup::GetTextColumns ( );
__declspec(implementation_key(1033)) void PageSetup::PutTextColumns ( struct TextColumns * prop );
__declspec(implementation_key(1034)) enum WdPaperSize PageSetup::GetPaperSize ( );
__declspec(implementation_key(1035)) void PageSetup::PutPaperSize ( enum WdPaperSize prop );
__declspec(implementation_key(1036)) VARIANT_BOOL PageSetup::GetTwoPagesOnOne ( );
__declspec(implementation_key(1037)) void PageSetup::PutTwoPagesOnOne ( VARIANT_BOOL prop );
__declspec(implementation_key(1038)) VARIANT_BOOL PageSetup::GetGutterOnTop ( );
__declspec(implementation_key(1039)) void PageSetup::PutGutterOnTop ( VARIANT_BOOL prop );
__declspec(implementation_key(1040)) float PageSetup::GetCharsLine ( );
__declspec(implementation_key(1041)) void PageSetup::PutCharsLine ( float prop );
__declspec(implementation_key(1042)) float PageSetup::GetLinesPage ( );
__declspec(implementation_key(1043)) void PageSetup::PutLinesPage ( float prop );
__declspec(implementation_key(1044)) VARIANT_BOOL PageSetup::GetShowGrid ( );
__declspec(implementation_key(1045)) void PageSetup::PutShowGrid ( VARIANT_BOOL prop );
__declspec(implementation_key(1046)) HRESULT PageSetup::TogglePortrait ( );
__declspec(implementation_key(1047)) HRESULT PageSetup::SetAsTemplateDefault ( );
__declspec(implementation_key(1048)) enum WdGutterStyleOld PageSetup::GetGutterStyle ( );
__declspec(implementation_key(1049)) void PageSetup::PutGutterStyle ( enum WdGutterStyleOld prop );
__declspec(implementation_key(1050)) enum WdSectionDirection PageSetup::GetSectionDirection ( );
__declspec(implementation_key(1051)) void PageSetup::PutSectionDirection ( enum WdSectionDirection prop );
__declspec(implementation_key(1052)) enum WdLayoutMode PageSetup::GetLayoutMode ( );
__declspec(implementation_key(1053)) void PageSetup::PutLayoutMode ( enum WdLayoutMode prop );
__declspec(implementation_key(1054)) enum WdGutterStyle PageSetup::GetGutterPos ( );
__declspec(implementation_key(1055)) void PageSetup::PutGutterPos ( enum WdGutterStyle prop );
__declspec(implementation_key(1056)) VARIANT_BOOL PageSetup::GetBookFoldPrinting ( );
__declspec(implementation_key(1057)) void PageSetup::PutBookFoldPrinting ( VARIANT_BOOL prop );
__declspec(implementation_key(1058)) VARIANT_BOOL PageSetup::GetBookFoldRevPrinting ( );
__declspec(implementation_key(1059)) void PageSetup::PutBookFoldRevPrinting ( VARIANT_BOOL prop );
__declspec(implementation_key(1060)) long PageSetup::GetBookFoldPrintingSheets ( );
__declspec(implementation_key(1061)) void PageSetup::PutBookFoldPrintingSheets ( long prop );
__declspec(implementation_key(1062)) _ApplicationPtr Border::GetApplication ( );
__declspec(implementation_key(1063)) long Border::GetCreator ( );
__declspec(implementation_key(1064)) IDispatchPtr Border::GetParent ( );
__declspec(implementation_key(1065)) VARIANT_BOOL Border::GetVisible ( );
__declspec(implementation_key(1066)) void Border::PutVisible ( VARIANT_BOOL prop );
__declspec(implementation_key(1067)) enum WdColorIndex Border::GetColorIndex ( );
__declspec(implementation_key(1068)) void Border::PutColorIndex ( enum WdColorIndex prop );
__declspec(implementation_key(1069)) VARIANT_BOOL Border::GetInside ( );
__declspec(implementation_key(1070)) enum WdLineStyle Border::GetLineStyle ( );
__declspec(implementation_key(1071)) void Border::PutLineStyle ( enum WdLineStyle prop );
__declspec(implementation_key(1072)) enum WdLineWidth Border::GetLineWidth ( );
__declspec(implementation_key(1073)) void Border::PutLineWidth ( enum WdLineWidth prop );
__declspec(implementation_key(1074)) enum WdPageBorderArt Border::GetArtStyle ( );
__declspec(implementation_key(1075)) void Border::PutArtStyle ( enum WdPageBorderArt prop );
__declspec(implementation_key(1076)) long Border::GetArtWidth ( );
__declspec(implementation_key(1077)) void Border::PutArtWidth ( long prop );
__declspec(implementation_key(1078)) enum WdColor Border::GetColor ( );
__declspec(implementation_key(1079)) void Border::PutColor ( enum WdColor prop );
__declspec(implementation_key(1080)) _ApplicationPtr Borders::GetApplication ( );
__declspec(implementation_key(1081)) long Borders::GetCreator ( );
__declspec(implementation_key(1082)) IDispatchPtr Borders::GetParent ( );
__declspec(implementation_key(1083)) IUnknownPtr Borders::Get_NewEnum ( );
__declspec(implementation_key(1084)) long Borders::GetCount ( );
__declspec(implementation_key(1085)) long Borders::GetEnable ( );
__declspec(implementation_key(1086)) void Borders::PutEnable ( long prop );
__declspec(implementation_key(1087)) long Borders::GetDistanceFromTop ( );
__declspec(implementation_key(1088)) void Borders::PutDistanceFromTop ( long prop );
__declspec(implementation_key(1089)) VARIANT_BOOL Borders::GetShadow ( );
__declspec(implementation_key(1090)) void Borders::PutShadow ( VARIANT_BOOL prop );
__declspec(implementation_key(1091)) enum WdLineStyle Borders::GetInsideLineStyle ( );
__declspec(implementation_key(1092)) void Borders::PutInsideLineStyle ( enum WdLineStyle prop );
__declspec(implementation_key(1093)) enum WdLineStyle Borders::GetOutsideLineStyle ( );
__declspec(implementation_key(1094)) void Borders::PutOutsideLineStyle ( enum WdLineStyle prop );
__declspec(implementation_key(1095)) enum WdLineWidth Borders::GetInsideLineWidth ( );
__declspec(implementation_key(1096)) void Borders::PutInsideLineWidth ( enum WdLineWidth prop );
__declspec(implementation_key(1097)) enum WdLineWidth Borders::GetOutsideLineWidth ( );
__declspec(implementation_key(1098)) void Borders::PutOutsideLineWidth ( enum WdLineWidth prop );
__declspec(implementation_key(1099)) enum WdColorIndex Borders::GetInsideColorIndex ( );
__declspec(implementation_key(1100)) void Borders::PutInsideColorIndex ( enum WdColorIndex prop );
__declspec(implementation_key(1101)) enum WdColorIndex Borders::GetOutsideColorIndex ( );
__declspec(implementation_key(1102)) void Borders::PutOutsideColorIndex ( enum WdColorIndex prop );
__declspec(implementation_key(1103)) long Borders::GetDistanceFromLeft ( );
__declspec(implementation_key(1104)) void Borders::PutDistanceFromLeft ( long prop );
__declspec(implementation_key(1105)) long Borders::GetDistanceFromBottom ( );
__declspec(implementation_key(1106)) void Borders::PutDistanceFromBottom ( long prop );
__declspec(implementation_key(1107)) long Borders::GetDistanceFromRight ( );
__declspec(implementation_key(1108)) void Borders::PutDistanceFromRight ( long prop );
__declspec(implementation_key(1109)) VARIANT_BOOL Borders::GetAlwaysInFront ( );
__declspec(implementation_key(1110)) void Borders::PutAlwaysInFront ( VARIANT_BOOL prop );
__declspec(implementation_key(1111)) VARIANT_BOOL Borders::GetSurroundHeader ( );
__declspec(implementation_key(1112)) void Borders::PutSurroundHeader ( VARIANT_BOOL prop );
__declspec(implementation_key(1113)) VARIANT_BOOL Borders::GetSurroundFooter ( );
__declspec(implementation_key(1114)) void Borders::PutSurroundFooter ( VARIANT_BOOL prop );
__declspec(implementation_key(1115)) VARIANT_BOOL Borders::GetJoinBorders ( );
__declspec(implementation_key(1116)) void Borders::PutJoinBorders ( VARIANT_BOOL prop );
__declspec(implementation_key(1117)) VARIANT_BOOL Borders::GetHasHorizontal ( );
__declspec(implementation_key(1118)) VARIANT_BOOL Borders::GetHasVertical ( );
__declspec(implementation_key(1119)) enum WdBorderDistanceFrom Borders::GetDistanceFrom ( );
__declspec(implementation_key(1120)) void Borders::PutDistanceFrom ( enum WdBorderDistanceFrom prop );
__declspec(implementation_key(1121)) VARIANT_BOOL Borders::GetEnableFirstPageInSection ( );
__declspec(implementation_key(1122)) void Borders::PutEnableFirstPageInSection ( VARIANT_BOOL prop );
__declspec(implementation_key(1123)) VARIANT_BOOL Borders::GetEnableOtherPagesInSection ( );
__declspec(implementation_key(1124)) void Borders::PutEnableOtherPagesInSection ( VARIANT_BOOL prop );
__declspec(implementation_key(1125)) BorderPtr Borders::Item ( enum WdBorderType Index );
__declspec(implementation_key(1126)) HRESULT Borders::ApplyPageBordersToAllSections ( );
__declspec(implementation_key(1127)) enum WdColor Borders::GetInsideColor ( );
__declspec(implementation_key(1128)) void Borders::PutInsideColor ( enum WdColor prop );
__declspec(implementation_key(1129)) enum WdColor Borders::GetOutsideColor ( );
__declspec(implementation_key(1130)) void Borders::PutOutsideColor ( enum WdColor prop );
__declspec(implementation_key(1131)) _ApplicationPtr Shading::GetApplication ( );
__declspec(implementation_key(1132)) long Shading::GetCreator ( );
__declspec(implementation_key(1133)) IDispatchPtr Shading::GetParent ( );
__declspec(implementation_key(1134)) enum WdColorIndex Shading::GetForegroundPatternColorIndex ( );
__declspec(implementation_key(1135)) void Shading::PutForegroundPatternColorIndex ( enum WdColorIndex prop );
__declspec(implementation_key(1136)) enum WdColorIndex Shading::GetBackgroundPatternColorIndex ( );
__declspec(implementation_key(1137)) void Shading::PutBackgroundPatternColorIndex ( enum WdColorIndex prop );
__declspec(implementation_key(1138)) enum WdTextureIndex Shading::GetTexture ( );
__declspec(implementation_key(1139)) void Shading::PutTexture ( enum WdTextureIndex prop );
__declspec(implementation_key(1140)) enum WdColor Shading::GetForegroundPatternColor ( );
__declspec(implementation_key(1141)) void Shading::PutForegroundPatternColor ( enum WdColor prop );
__declspec(implementation_key(1142)) enum WdColor Shading::GetBackgroundPatternColor ( );
__declspec(implementation_key(1143)) void Shading::PutBackgroundPatternColor ( enum WdColor prop );
__declspec(implementation_key(1144)) _ApplicationPtr _Font::GetApplication ( );
__declspec(implementation_key(1145)) long _Font::GetCreator ( );
__declspec(implementation_key(1146)) IDispatchPtr _Font::GetParent ( );
__declspec(implementation_key(1147)) _FontPtr _Font::GetDuplicate ( );
__declspec(implementation_key(1148)) long _Font::GetBold ( );
__declspec(implementation_key(1149)) void _Font::PutBold ( long prop );
__declspec(implementation_key(1150)) long _Font::GetItalic ( );
__declspec(implementation_key(1151)) void _Font::PutItalic ( long prop );
__declspec(implementation_key(1152)) long _Font::GetHidden ( );
__declspec(implementation_key(1153)) void _Font::PutHidden ( long prop );
__declspec(implementation_key(1154)) long _Font::GetSmallCaps ( );
__declspec(implementation_key(1155)) void _Font::PutSmallCaps ( long prop );
__declspec(implementation_key(1156)) long _Font::GetAllCaps ( );
__declspec(implementation_key(1157)) void _Font::PutAllCaps ( long prop );
__declspec(implementation_key(1158)) long _Font::GetStrikeThrough ( );
__declspec(implementation_key(1159)) void _Font::PutStrikeThrough ( long prop );
__declspec(implementation_key(1160)) long _Font::GetDoubleStrikeThrough ( );
__declspec(implementation_key(1161)) void _Font::PutDoubleStrikeThrough ( long prop );
__declspec(implementation_key(1162)) enum WdColorIndex _Font::GetColorIndex ( );
__declspec(implementation_key(1163)) void _Font::PutColorIndex ( enum WdColorIndex prop );
__declspec(implementation_key(1164)) long _Font::GetSubscript ( );
__declspec(implementation_key(1165)) void _Font::PutSubscript ( long prop );
__declspec(implementation_key(1166)) long _Font::GetSuperscript ( );
__declspec(implementation_key(1167)) void _Font::PutSuperscript ( long prop );
__declspec(implementation_key(1168)) enum WdUnderline _Font::GetUnderline ( );
__declspec(implementation_key(1169)) void _Font::PutUnderline ( enum WdUnderline prop );
__declspec(implementation_key(1170)) float _Font::GetSize ( );
__declspec(implementation_key(1171)) void _Font::PutSize ( float prop );
__declspec(implementation_key(1172)) _bstr_t _Font::GetName ( );
__declspec(implementation_key(1173)) void _Font::PutName ( _bstr_t prop );
__declspec(implementation_key(1174)) long _Font::GetPosition ( );
__declspec(implementation_key(1175)) void _Font::PutPosition ( long prop );
__declspec(implementation_key(1176)) float _Font::GetSpacing ( );
__declspec(implementation_key(1177)) void _Font::PutSpacing ( float prop );
__declspec(implementation_key(1178)) long _Font::GetScaling ( );
__declspec(implementation_key(1179)) void _Font::PutScaling ( long prop );
__declspec(implementation_key(1180)) long _Font::GetShadow ( );
__declspec(implementation_key(1181)) void _Font::PutShadow ( long prop );
__declspec(implementation_key(1182)) long _Font::GetOutline ( );
__declspec(implementation_key(1183)) void _Font::PutOutline ( long prop );
__declspec(implementation_key(1184)) long _Font::GetEmboss ( );
__declspec(implementation_key(1185)) void _Font::PutEmboss ( long prop );
__declspec(implementation_key(1186)) float _Font::GetKerning ( );
__declspec(implementation_key(1187)) void _Font::PutKerning ( float prop );
__declspec(implementation_key(1188)) long _Font::GetEngrave ( );
__declspec(implementation_key(1189)) void _Font::PutEngrave ( long prop );
__declspec(implementation_key(1190)) enum WdAnimation _Font::GetAnimation ( );
__declspec(implementation_key(1191)) void _Font::PutAnimation ( enum WdAnimation prop );
__declspec(implementation_key(1192)) BordersPtr _Font::GetBorders ( );
__declspec(implementation_key(1193)) void _Font::PutBorders ( struct Borders * prop );
__declspec(implementation_key(1194)) ShadingPtr _Font::GetShading ( );
__declspec(implementation_key(1195)) enum WdEmphasisMark _Font::GetEmphasisMark ( );
__declspec(implementation_key(1196)) void _Font::PutEmphasisMark ( enum WdEmphasisMark prop );
__declspec(implementation_key(1197)) VARIANT_BOOL _Font::GetDisableCharacterSpaceGrid ( );
__declspec(implementation_key(1198)) void _Font::PutDisableCharacterSpaceGrid ( VARIANT_BOOL prop );
__declspec(implementation_key(1199)) _bstr_t _Font::GetNameFarEast ( );
__declspec(implementation_key(1200)) void _Font::PutNameFarEast ( _bstr_t prop );
__declspec(implementation_key(1201)) _bstr_t _Font::GetNameAscii ( );
__declspec(implementation_key(1202)) void _Font::PutNameAscii ( _bstr_t prop );
__declspec(implementation_key(1203)) _bstr_t _Font::GetNameOther ( );
__declspec(implementation_key(1204)) void _Font::PutNameOther ( _bstr_t prop );
__declspec(implementation_key(1205)) HRESULT _Font::Grow ( );
__declspec(implementation_key(1206)) HRESULT _Font::Shrink ( );
__declspec(implementation_key(1207)) HRESULT _Font::Reset ( );
__declspec(implementation_key(1208)) HRESULT _Font::SetAsTemplateDefault ( );
__declspec(implementation_key(1209)) enum WdColor _Font::GetColor ( );
__declspec(implementation_key(1210)) void _Font::PutColor ( enum WdColor prop );
__declspec(implementation_key(1211)) long _Font::GetBoldBi ( );
__declspec(implementation_key(1212)) void _Font::PutBoldBi ( long prop );
__declspec(implementation_key(1213)) long _Font::GetItalicBi ( );
__declspec(implementation_key(1214)) void _Font::PutItalicBi ( long prop );
__declspec(implementation_key(1215)) float _Font::GetSizeBi ( );
__declspec(implementation_key(1216)) void _Font::PutSizeBi ( float prop );
__declspec(implementation_key(1217)) _bstr_t _Font::GetNameBi ( );
__declspec(implementation_key(1218)) void _Font::PutNameBi ( _bstr_t prop );
__declspec(implementation_key(1219)) enum WdColorIndex _Font::GetColorIndexBi ( );
__declspec(implementation_key(1220)) void _Font::PutColorIndexBi ( enum WdColorIndex prop );
__declspec(implementation_key(1221)) enum WdColor _Font::GetDiacriticColor ( );
__declspec(implementation_key(1222)) void _Font::PutDiacriticColor ( enum WdColor prop );
__declspec(implementation_key(1223)) enum WdColor _Font::GetUnderlineColor ( );
__declspec(implementation_key(1224)) void _Font::PutUnderlineColor ( enum WdColor prop );
__declspec(implementation_key(1225)) _ApplicationPtr HorizontalLineFormat::GetApplication ( );
__declspec(implementation_key(1226)) long HorizontalLineFormat::GetCreator ( );
__declspec(implementation_key(1227)) IDispatchPtr HorizontalLineFormat::GetParent ( );
__declspec(implementation_key(1228)) float HorizontalLineFormat::GetPercentWidth ( );
__declspec(implementation_key(1229)) void HorizontalLineFormat::PutPercentWidth ( float prop );
__declspec(implementation_key(1230)) VARIANT_BOOL HorizontalLineFormat::GetNoShade ( );
__declspec(implementation_key(1231)) void HorizontalLineFormat::PutNoShade ( VARIANT_BOOL prop );
__declspec(implementation_key(1232)) enum WdHorizontalLineAlignment HorizontalLineFormat::GetAlignment ( );
__declspec(implementation_key(1233)) void HorizontalLineFormat::PutAlignment ( enum WdHorizontalLineAlignment prop );
__declspec(implementation_key(1234)) enum WdHorizontalLineWidthType HorizontalLineFormat::GetWidthType ( );
__declspec(implementation_key(1235)) void HorizontalLineFormat::PutWidthType ( enum WdHorizontalLineWidthType prop );
__declspec(implementation_key(1236)) _ApplicationPtr Frameset::GetApplication ( );
__declspec(implementation_key(1237)) long Frameset::GetCreator ( );
__declspec(implementation_key(1238)) IDispatchPtr Frameset::GetParent ( );
__declspec(implementation_key(1239)) IUnknownPtr Frameset::Get_NewEnum ( );
__declspec(implementation_key(1240)) FramesetPtr Frameset::GetParentFrameset ( );
__declspec(implementation_key(1241)) enum WdFramesetType Frameset::GetType ( );
__declspec(implementation_key(1242)) enum WdFramesetSizeType Frameset::GetWidthType ( );
__declspec(implementation_key(1243)) void Frameset::PutWidthType ( enum WdFramesetSizeType prop );
__declspec(implementation_key(1244)) enum WdFramesetSizeType Frameset::GetHeightType ( );
__declspec(implementation_key(1245)) void Frameset::PutHeightType ( enum WdFramesetSizeType prop );
__declspec(implementation_key(1246)) long Frameset::GetWidth ( );
__declspec(implementation_key(1247)) void Frameset::PutWidth ( long prop );
__declspec(implementation_key(1248)) long Frameset::GetHeight ( );
__declspec(implementation_key(1249)) void Frameset::PutHeight ( long prop );
__declspec(implementation_key(1250)) long Frameset::GetChildFramesetCount ( );
__declspec(implementation_key(1251)) FramesetPtr Frameset::GetChildFramesetItem ( long Index );
__declspec(implementation_key(1252)) float Frameset::GetFramesetBorderWidth ( );
__declspec(implementation_key(1253)) void Frameset::PutFramesetBorderWidth ( float prop );
__declspec(implementation_key(1254)) enum WdColor Frameset::GetFramesetBorderColor ( );
__declspec(implementation_key(1255)) void Frameset::PutFramesetBorderColor ( enum WdColor prop );
__declspec(implementation_key(1256)) enum WdScrollbarType Frameset::GetFrameScrollbarType ( );
__declspec(implementation_key(1257)) void Frameset::PutFrameScrollbarType ( enum WdScrollbarType prop );
__declspec(implementation_key(1258)) VARIANT_BOOL Frameset::GetFrameResizable ( );
__declspec(implementation_key(1259)) void Frameset::PutFrameResizable ( VARIANT_BOOL prop );
__declspec(implementation_key(1260)) _bstr_t Frameset::GetFrameName ( );
__declspec(implementation_key(1261)) void Frameset::PutFrameName ( _bstr_t prop );
__declspec(implementation_key(1262)) VARIANT_BOOL Frameset::GetFrameDisplayBorders ( );
__declspec(implementation_key(1263)) void Frameset::PutFrameDisplayBorders ( VARIANT_BOOL prop );
__declspec(implementation_key(1264)) _bstr_t Frameset::GetFrameDefaultURL ( );
__declspec(implementation_key(1265)) void Frameset::PutFrameDefaultURL ( _bstr_t prop );
__declspec(implementation_key(1266)) VARIANT_BOOL Frameset::GetFrameLinkToFile ( );
__declspec(implementation_key(1267)) void Frameset::PutFrameLinkToFile ( VARIANT_BOOL prop );
__declspec(implementation_key(1268)) FramesetPtr Frameset::AddNewFrame ( enum WdFramesetNewFrameLocation Where );
__declspec(implementation_key(1269)) HRESULT Frameset::Delete ( );
__declspec(implementation_key(1270)) _ApplicationPtr DefaultWebOptions::GetApplication ( );
__declspec(implementation_key(1271)) long DefaultWebOptions::GetCreator ( );
__declspec(implementation_key(1272)) IDispatchPtr DefaultWebOptions::GetParent ( );
__declspec(implementation_key(1273)) VARIANT_BOOL DefaultWebOptions::GetOptimizeForBrowser ( );
__declspec(implementation_key(1274)) void DefaultWebOptions::PutOptimizeForBrowser ( VARIANT_BOOL prop );
__declspec(implementation_key(1275)) enum WdBrowserLevel DefaultWebOptions::GetBrowserLevel ( );
__declspec(implementation_key(1276)) void DefaultWebOptions::PutBrowserLevel ( enum WdBrowserLevel prop );
__declspec(implementation_key(1277)) VARIANT_BOOL DefaultWebOptions::GetRelyOnCSS ( );
__declspec(implementation_key(1278)) void DefaultWebOptions::PutRelyOnCSS ( VARIANT_BOOL prop );
__declspec(implementation_key(1279)) VARIANT_BOOL DefaultWebOptions::GetOrganizeInFolder ( );
__declspec(implementation_key(1280)) void DefaultWebOptions::PutOrganizeInFolder ( VARIANT_BOOL prop );
__declspec(implementation_key(1281)) VARIANT_BOOL DefaultWebOptions::GetUpdateLinksOnSave ( );
__declspec(implementation_key(1282)) void DefaultWebOptions::PutUpdateLinksOnSave ( VARIANT_BOOL prop );
__declspec(implementation_key(1283)) VARIANT_BOOL DefaultWebOptions::GetUseLongFileNames ( );
__declspec(implementation_key(1284)) void DefaultWebOptions::PutUseLongFileNames ( VARIANT_BOOL prop );
__declspec(implementation_key(1285)) VARIANT_BOOL DefaultWebOptions::GetCheckIfOfficeIsHTMLEditor ( );
__declspec(implementation_key(1286)) void DefaultWebOptions::PutCheckIfOfficeIsHTMLEditor ( VARIANT_BOOL prop );
__declspec(implementation_key(1287)) VARIANT_BOOL DefaultWebOptions::GetCheckIfWordIsDefaultHTMLEditor ( );
__declspec(implementation_key(1288)) void DefaultWebOptions::PutCheckIfWordIsDefaultHTMLEditor ( VARIANT_BOOL prop );
__declspec(implementation_key(1289)) VARIANT_BOOL DefaultWebOptions::GetRelyOnVML ( );
__declspec(implementation_key(1290)) void DefaultWebOptions::PutRelyOnVML ( VARIANT_BOOL prop );
__declspec(implementation_key(1291)) VARIANT_BOOL DefaultWebOptions::GetAllowPNG ( );
__declspec(implementation_key(1292)) void DefaultWebOptions::PutAllowPNG ( VARIANT_BOOL prop );
__declspec(implementation_key(1293)) enum Office::MsoScreenSize DefaultWebOptions::GetScreenSize ( );
__declspec(implementation_key(1294)) void DefaultWebOptions::PutScreenSize ( enum Office::MsoScreenSize prop );
__declspec(implementation_key(1295)) long DefaultWebOptions::GetPixelsPerInch ( );
__declspec(implementation_key(1296)) void DefaultWebOptions::PutPixelsPerInch ( long prop );
__declspec(implementation_key(1297)) enum Office::MsoEncoding DefaultWebOptions::GetEncoding ( );
__declspec(implementation_key(1298)) void DefaultWebOptions::PutEncoding ( enum Office::MsoEncoding prop );
__declspec(implementation_key(1299)) VARIANT_BOOL DefaultWebOptions::GetAlwaysSaveInDefaultEncoding ( );
__declspec(implementation_key(1300)) void DefaultWebOptions::PutAlwaysSaveInDefaultEncoding ( VARIANT_BOOL prop );
__declspec(implementation_key(1301)) Office::WebPageFontsPtr DefaultWebOptions::GetFonts ( );
__declspec(implementation_key(1302)) _bstr_t DefaultWebOptions::GetFolderSuffix ( );
__declspec(implementation_key(1303)) enum Office::MsoTargetBrowser DefaultWebOptions::GetTargetBrowser ( );
__declspec(implementation_key(1304)) void DefaultWebOptions::PutTargetBrowser ( enum Office::MsoTargetBrowser prop );
__declspec(implementation_key(1305)) VARIANT_BOOL DefaultWebOptions::GetSaveNewWebPagesAsWebArchives ( );
__declspec(implementation_key(1306)) void DefaultWebOptions::PutSaveNewWebPagesAsWebArchives ( VARIANT_BOOL prop );
__declspec(implementation_key(1307)) _ApplicationPtr WebOptions::GetApplication ( );
__declspec(implementation_key(1308)) long WebOptions::GetCreator ( );
__declspec(implementation_key(1309)) IDispatchPtr WebOptions::GetParent ( );
__declspec(implementation_key(1310)) VARIANT_BOOL WebOptions::GetOptimizeForBrowser ( );
__declspec(implementation_key(1311)) void WebOptions::PutOptimizeForBrowser ( VARIANT_BOOL prop );
__declspec(implementation_key(1312)) enum WdBrowserLevel WebOptions::GetBrowserLevel ( );
__declspec(implementation_key(1313)) void WebOptions::PutBrowserLevel ( enum WdBrowserLevel prop );
__declspec(implementation_key(1314)) VARIANT_BOOL WebOptions::GetRelyOnCSS ( );
__declspec(implementation_key(1315)) void WebOptions::PutRelyOnCSS ( VARIANT_BOOL prop );
__declspec(implementation_key(1316)) VARIANT_BOOL WebOptions::GetOrganizeInFolder ( );
__declspec(implementation_key(1317)) void WebOptions::PutOrganizeInFolder ( VARIANT_BOOL prop );
__declspec(implementation_key(1318)) VARIANT_BOOL WebOptions::GetUseLongFileNames ( );
__declspec(implementation_key(1319)) void WebOptions::PutUseLongFileNames ( VARIANT_BOOL prop );
__declspec(implementation_key(1320)) VARIANT_BOOL WebOptions::GetRelyOnVML ( );
__declspec(implementation_key(1321)) void WebOptions::PutRelyOnVML ( VARIANT_BOOL prop );
__declspec(implementation_key(1322)) VARIANT_BOOL WebOptions::GetAllowPNG ( );
__declspec(implementation_key(1323)) void WebOptions::PutAllowPNG ( VARIANT_BOOL prop );
__declspec(implementation_key(1324)) enum Office::MsoScreenSize WebOptions::GetScreenSize ( );
__declspec(implementation_key(1325)) void WebOptions::PutScreenSize ( enum Office::MsoScreenSize prop );
__declspec(implementation_key(1326)) long WebOptions::GetPixelsPerInch ( );
__declspec(implementation_key(1327)) void WebOptions::PutPixelsPerInch ( long prop );
__declspec(implementation_key(1328)) enum Office::MsoEncoding WebOptions::GetEncoding ( );
__declspec(implementation_key(1329)) void WebOptions::PutEncoding ( enum Office::MsoEncoding prop );
__declspec(implementation_key(1330)) _bstr_t WebOptions::GetFolderSuffix ( );
__declspec(implementation_key(1331)) HRESULT WebOptions::UseDefaultFolderSuffix ( );
__declspec(implementation_key(1332)) enum Office::MsoTargetBrowser WebOptions::GetTargetBrowser ( );
__declspec(implementation_key(1333)) void WebOptions::PutTargetBrowser ( enum Office::MsoTargetBrowser prop );
__declspec(implementation_key(1334)) _ApplicationPtr OtherCorrectionsException::GetApplication ( );
__declspec(implementation_key(1335)) long OtherCorrectionsException::GetCreator ( );
__declspec(implementation_key(1336)) IDispatchPtr OtherCorrectionsException::GetParent ( );
__declspec(implementation_key(1337)) long OtherCorrectionsException::GetIndex ( );
__declspec(implementation_key(1338)) _bstr_t OtherCorrectionsException::GetName ( );
__declspec(implementation_key(1339)) HRESULT OtherCorrectionsException::Delete ( );
__declspec(implementation_key(1340)) _ApplicationPtr OtherCorrectionsExceptions::GetApplication ( );
__declspec(implementation_key(1341)) long OtherCorrectionsExceptions::GetCreator ( );
__declspec(implementation_key(1342)) IDispatchPtr OtherCorrectionsExceptions::GetParent ( );
__declspec(implementation_key(1343)) IUnknownPtr OtherCorrectionsExceptions::Get_NewEnum ( );
__declspec(implementation_key(1344)) long OtherCorrectionsExceptions::GetCount ( );
__declspec(implementation_key(1345)) OtherCorrectionsExceptionPtr OtherCorrectionsExceptions::Item ( VARIANT * Index );
__declspec(implementation_key(1346)) OtherCorrectionsExceptionPtr OtherCorrectionsExceptions::Add ( _bstr_t Name );
__declspec(implementation_key(1347)) _ApplicationPtr EmailSignatureEntry::GetApplication ( );
__declspec(implementation_key(1348)) long EmailSignatureEntry::GetCreator ( );
__declspec(implementation_key(1349)) IDispatchPtr EmailSignatureEntry::GetParent ( );
__declspec(implementation_key(1350)) long EmailSignatureEntry::GetIndex ( );
__declspec(implementation_key(1351)) _bstr_t EmailSignatureEntry::GetName ( );
__declspec(implementation_key(1352)) void EmailSignatureEntry::PutName ( _bstr_t prop );
__declspec(implementation_key(1353)) HRESULT EmailSignatureEntry::Delete ( );
__declspec(implementation_key(1354)) _bstr_t CustomProperty::GetName ( );
__declspec(implementation_key(1355)) _bstr_t CustomProperty::GetValue ( );
__declspec(implementation_key(1356)) void CustomProperty::PutValue ( _bstr_t prop );
__declspec(implementation_key(1357)) _ApplicationPtr CustomProperty::GetApplication ( );
__declspec(implementation_key(1358)) long CustomProperty::GetCreator ( );
__declspec(implementation_key(1359)) IDispatchPtr CustomProperty::GetParent ( );
__declspec(implementation_key(1360)) HRESULT CustomProperty::Delete ( );
__declspec(implementation_key(1361)) IUnknownPtr CustomProperties::Get_NewEnum ( );
__declspec(implementation_key(1362)) long CustomProperties::GetCount ( );
__declspec(implementation_key(1363)) _ApplicationPtr CustomProperties::GetApplication ( );
__declspec(implementation_key(1364)) long CustomProperties::GetCreator ( );
__declspec(implementation_key(1365)) IDispatchPtr CustomProperties::GetParent ( );
__declspec(implementation_key(1366)) CustomPropertyPtr CustomProperties::Item ( VARIANT * Index );
__declspec(implementation_key(1367)) CustomPropertyPtr CustomProperties::Add ( _bstr_t Name, _bstr_t Value );
__declspec(implementation_key(1368)) _ApplicationPtr MappedDataField::GetApplication ( );
__declspec(implementation_key(1369)) long MappedDataField::GetCreator ( );
__declspec(implementation_key(1370)) IDispatchPtr MappedDataField::GetParent ( );
__declspec(implementation_key(1371)) long MappedDataField::GetIndex ( );
__declspec(implementation_key(1372)) _bstr_t MappedDataField::GetDataFieldName ( );
__declspec(implementation_key(1373)) _bstr_t MappedDataField::GetName ( );
__declspec(implementation_key(1374)) _bstr_t MappedDataField::GetValue ( );
__declspec(implementation_key(1375)) long MappedDataField::GetDataFieldIndex ( );
__declspec(implementation_key(1376)) void MappedDataField::PutDataFieldIndex ( long prop );
__declspec(implementation_key(1377)) _ApplicationPtr ConditionalStyle::GetApplication ( );
__declspec(implementation_key(1378)) long ConditionalStyle::GetCreator ( );
__declspec(implementation_key(1379)) IDispatchPtr ConditionalStyle::GetParent ( );
__declspec(implementation_key(1380)) ShadingPtr ConditionalStyle::GetShading ( );
__declspec(implementation_key(1381)) BordersPtr ConditionalStyle::GetBorders ( );
__declspec(implementation_key(1382)) void ConditionalStyle::PutBorders ( struct Borders * prop );
__declspec(implementation_key(1383)) float ConditionalStyle::GetBottomPadding ( );
__declspec(implementation_key(1384)) void ConditionalStyle::PutBottomPadding ( float prop );
__declspec(implementation_key(1385)) float ConditionalStyle::GetTopPadding ( );
__declspec(implementation_key(1386)) void ConditionalStyle::PutTopPadding ( float prop );
__declspec(implementation_key(1387)) float ConditionalStyle::GetLeftPadding ( );
__declspec(implementation_key(1388)) void ConditionalStyle::PutLeftPadding ( float prop );
__declspec(implementation_key(1389)) float ConditionalStyle::GetRightPadding ( );
__declspec(implementation_key(1390)) void ConditionalStyle::PutRightPadding ( float prop );
__declspec(implementation_key(1391)) _ParagraphFormatPtr ConditionalStyle::GetParagraphFormat ( );
__declspec(implementation_key(1392)) void ConditionalStyle::PutParagraphFormat ( struct _ParagraphFormat * prop );
__declspec(implementation_key(1393)) _FontPtr ConditionalStyle::GetFont ( );
__declspec(implementation_key(1394)) void ConditionalStyle::PutFont ( struct _Font * prop );
__declspec(implementation_key(1395)) _ApplicationPtr FootnoteOptions::GetApplication ( );
__declspec(implementation_key(1396)) long FootnoteOptions::GetCreator ( );
__declspec(implementation_key(1397)) IDispatchPtr FootnoteOptions::GetParent ( );
__declspec(implementation_key(1398)) enum WdFootnoteLocation FootnoteOptions::GetLocation ( );
__declspec(implementation_key(1399)) void FootnoteOptions::PutLocation ( enum WdFootnoteLocation prop );
__declspec(implementation_key(1400)) enum WdNoteNumberStyle FootnoteOptions::GetNumberStyle ( );
__declspec(implementation_key(1401)) void FootnoteOptions::PutNumberStyle ( enum WdNoteNumberStyle prop );
__declspec(implementation_key(1402)) long FootnoteOptions::GetStartingNumber ( );
__declspec(implementation_key(1403)) void FootnoteOptions::PutStartingNumber ( long prop );
__declspec(implementation_key(1404)) enum WdNumberingRule FootnoteOptions::GetNumberingRule ( );
__declspec(implementation_key(1405)) void FootnoteOptions::PutNumberingRule ( enum WdNumberingRule prop );
__declspec(implementation_key(1406)) _ApplicationPtr EndnoteOptions::GetApplication ( );
__declspec(implementation_key(1407)) long EndnoteOptions::GetCreator ( );
__declspec(implementation_key(1408)) IDispatchPtr EndnoteOptions::GetParent ( );
__declspec(implementation_key(1409)) enum WdEndnoteLocation EndnoteOptions::GetLocation ( );
__declspec(implementation_key(1410)) void EndnoteOptions::PutLocation ( enum WdEndnoteLocation prop );
__declspec(implementation_key(1411)) enum WdNoteNumberStyle EndnoteOptions::GetNumberStyle ( );
__declspec(implementation_key(1412)) void EndnoteOptions::PutNumberStyle ( enum WdNoteNumberStyle prop );
__declspec(implementation_key(1413)) long EndnoteOptions::GetStartingNumber ( );
__declspec(implementation_key(1414)) void EndnoteOptions::PutStartingNumber ( long prop );
__declspec(implementation_key(1415)) enum WdNumberingRule EndnoteOptions::GetNumberingRule ( );
__declspec(implementation_key(1416)) void EndnoteOptions::PutNumberingRule ( enum WdNumberingRule prop );
__declspec(implementation_key(1417)) _ApplicationPtr Reviewer::GetApplication ( );
__declspec(implementation_key(1418)) long Reviewer::GetCreator ( );
__declspec(implementation_key(1419)) IDispatchPtr Reviewer::GetParent ( );
__declspec(implementation_key(1420)) VARIANT_BOOL Reviewer::GetVisible ( );
__declspec(implementation_key(1421)) void Reviewer::PutVisible ( VARIANT_BOOL prop );
__declspec(implementation_key(1422)) IUnknownPtr Reviewers::Get_NewEnum ( );
__declspec(implementation_key(1423)) _ApplicationPtr Reviewers::GetApplication ( );
__declspec(implementation_key(1424)) long Reviewers::GetCreator ( );
__declspec(implementation_key(1425)) IDispatchPtr Reviewers::GetParent ( );
__declspec(implementation_key(1426)) long Reviewers::GetCount ( );
__declspec(implementation_key(1427)) ReviewerPtr Reviewers::Item ( VARIANT * Index );
__declspec(implementation_key(1428)) _ApplicationPtr TaskPane::GetApplication ( );
__declspec(implementation_key(1429)) long TaskPane::GetCreator ( );
__declspec(implementation_key(1430)) IDispatchPtr TaskPane::GetParent ( );
__declspec(implementation_key(1431)) VARIANT_BOOL TaskPane::GetVisible ( );
__declspec(implementation_key(1432)) void TaskPane::PutVisible ( VARIANT_BOOL prop );
__declspec(implementation_key(1433)) HRESULT ApplicationEvents3::Quit ( );
__declspec(implementation_key(1434)) HRESULT ApplicationEvents3::DocumentChange ( );
__declspec(implementation_key(1435)) HRESULT ApplicationEvents3::DocumentOpen ( struct _Document * Doc );
__declspec(implementation_key(1436)) HRESULT ApplicationEvents3::DocumentBeforeClose ( struct _Document * Doc, VARIANT_BOOL * Cancel );
__declspec(implementation_key(1437)) HRESULT ApplicationEvents3::DocumentBeforePrint ( struct _Document * Doc, VARIANT_BOOL * Cancel );
__declspec(implementation_key(1438)) HRESULT ApplicationEvents3::DocumentBeforeSave ( struct _Document * Doc, VARIANT_BOOL * SaveAsUI, VARIANT_BOOL * Cancel );
__declspec(implementation_key(1439)) HRESULT ApplicationEvents3::NewDocument ( struct _Document * Doc );
__declspec(implementation_key(1440)) HRESULT ApplicationEvents3::WindowActivate ( struct _Document * Doc, struct Window * Wn );
__declspec(implementation_key(1441)) HRESULT ApplicationEvents3::WindowDeactivate ( struct _Document * Doc, struct Window * Wn );
__declspec(implementation_key(1442)) HRESULT ApplicationEvents3::WindowSelectionChange ( struct Selection * Sel );
__declspec(implementation_key(1443)) HRESULT ApplicationEvents3::WindowBeforeRightClick ( struct Selection * Sel, VARIANT_BOOL * Cancel );
__declspec(implementation_key(1444)) HRESULT ApplicationEvents3::WindowBeforeDoubleClick ( struct Selection * Sel, VARIANT_BOOL * Cancel );
__declspec(implementation_key(1445)) HRESULT ApplicationEvents3::EPostagePropertyDialog ( struct _Document * Doc );
__declspec(implementation_key(1446)) HRESULT ApplicationEvents3::EPostageInsert ( struct _Document * Doc );
__declspec(implementation_key(1447)) HRESULT ApplicationEvents3::MailMergeAfterMerge ( struct _Document * Doc, struct _Document * DocResult );
__declspec(implementation_key(1448)) HRESULT ApplicationEvents3::MailMergeAfterRecordMerge ( struct _Document * Doc );
__declspec(implementation_key(1449)) HRESULT ApplicationEvents3::MailMergeBeforeMerge ( struct _Document * Doc, long StartRecord, long EndRecord, VARIANT_BOOL * Cancel );
__declspec(implementation_key(1450)) HRESULT ApplicationEvents3::MailMergeBeforeRecordMerge ( struct _Document * Doc, VARIANT_BOOL * Cancel );
__declspec(implementation_key(1451)) HRESULT ApplicationEvents3::MailMergeDataSourceLoad ( struct _Document * Doc );
__declspec(implementation_key(1452)) HRESULT ApplicationEvents3::MailMergeDataSourceValidate ( struct _Document * Doc, VARIANT_BOOL * Handled );
__declspec(implementation_key(1453)) HRESULT ApplicationEvents3::MailMergeWizardSendToCustom ( struct _Document * Doc );
__declspec(implementation_key(1454)) HRESULT ApplicationEvents3::MailMergeWizardStateChange ( struct _Document * Doc, int * FromState, int * ToState, VARIANT_BOOL * Handled );
__declspec(implementation_key(1455)) HRESULT ApplicationEvents3::WindowSize ( struct _Document * Doc, struct Window * Wn );
__declspec(implementation_key(1456)) _ApplicationPtr StyleSheet::GetApplication ( );
__declspec(implementation_key(1457)) long StyleSheet::GetCreator ( );
__declspec(implementation_key(1458)) IDispatchPtr StyleSheet::GetParent ( );
__declspec(implementation_key(1459)) _bstr_t StyleSheet::GetFullName ( );
__declspec(implementation_key(1460)) long StyleSheet::GetIndex ( );
__declspec(implementation_key(1461)) _bstr_t StyleSheet::GetName ( );
__declspec(implementation_key(1462)) _bstr_t StyleSheet::GetPath ( );
__declspec(implementation_key(1463)) enum WdStyleSheetLinkType StyleSheet::GetType ( );
__declspec(implementation_key(1464)) void StyleSheet::PutType ( enum WdStyleSheetLinkType prop );
__declspec(implementation_key(1465)) _bstr_t StyleSheet::GetTitle ( );
__declspec(implementation_key(1466)) void StyleSheet::PutTitle ( _bstr_t prop );
__declspec(implementation_key(1467)) HRESULT StyleSheet::Move ( enum WdStyleSheetPrecedence Precedence );
__declspec(implementation_key(1468)) HRESULT StyleSheet::Delete ( );
__declspec(implementation_key(1469)) _ApplicationPtr StyleSheets::GetApplication ( );
__declspec(implementation_key(1470)) long StyleSheets::GetCreator ( );
__declspec(implementation_key(1471)) IDispatchPtr StyleSheets::GetParent ( );
__declspec(implementation_key(1472)) IUnknownPtr StyleSheets::Get_NewEnum ( );
__declspec(implementation_key(1473)) long StyleSheets::GetCount ( );
__declspec(implementation_key(1474)) StyleSheetPtr StyleSheets::Item ( VARIANT * Index );
__declspec(implementation_key(1475)) StyleSheetPtr StyleSheets::Add ( _bstr_t FileName, enum WdStyleSheetLinkType LinkType, _bstr_t Title, enum WdStyleSheetPrecedence Precedence );
__declspec(implementation_key(1476)) _ApplicationPtr MappedDataFields::GetApplication ( );
__declspec(implementation_key(1477)) long MappedDataFields::GetCreator ( );
__declspec(implementation_key(1478)) IDispatchPtr MappedDataFields::GetParent ( );
__declspec(implementation_key(1479)) long MappedDataFields::GetCount ( );
__declspec(implementation_key(1480)) IUnknownPtr MappedDataFields::Get_NewEnum ( );
__declspec(implementation_key(1481)) MappedDataFieldPtr MappedDataFields::Item ( enum WdMappedDataFields Index );
__declspec(implementation_key(1482)) _ApplicationPtr MailMergeDataSource::GetApplication ( );
__declspec(implementation_key(1483)) long MailMergeDataSource::GetCreator ( );
__declspec(implementation_key(1484)) IDispatchPtr MailMergeDataSource::GetParent ( );
__declspec(implementation_key(1485)) _bstr_t MailMergeDataSource::GetName ( );
__declspec(implementation_key(1486)) _bstr_t MailMergeDataSource::GetHeaderSourceName ( );
__declspec(implementation_key(1487)) enum WdMailMergeDataSource MailMergeDataSource::GetType ( );
__declspec(implementation_key(1488)) enum WdMailMergeDataSource MailMergeDataSource::GetHeaderSourceType ( );
__declspec(implementation_key(1489)) _bstr_t MailMergeDataSource::GetConnectString ( );
__declspec(implementation_key(1490)) _bstr_t MailMergeDataSource::GetQueryString ( );
__declspec(implementation_key(1491)) void MailMergeDataSource::PutQueryString ( _bstr_t prop );
__declspec(implementation_key(1492)) enum WdMailMergeActiveRecord MailMergeDataSource::GetActiveRecord ( );
__declspec(implementation_key(1493)) void MailMergeDataSource::PutActiveRecord ( enum WdMailMergeActiveRecord prop );
__declspec(implementation_key(1494)) long MailMergeDataSource::GetFirstRecord ( );
__declspec(implementation_key(1495)) void MailMergeDataSource::PutFirstRecord ( long prop );
__declspec(implementation_key(1496)) long MailMergeDataSource::GetLastRecord ( );
__declspec(implementation_key(1497)) void MailMergeDataSource::PutLastRecord ( long prop );
__declspec(implementation_key(1498)) MailMergeFieldNamesPtr MailMergeDataSource::GetFieldNames ( );
__declspec(implementation_key(1499)) MailMergeDataFieldsPtr MailMergeDataSource::GetDataFields ( );
__declspec(implementation_key(1500)) VARIANT_BOOL MailMergeDataSource::FindRecord2000 ( _bstr_t WORDFindText, _bstr_t Field );
__declspec(implementation_key(1501)) long MailMergeDataSource::GetRecordCount ( );
__declspec(implementation_key(1502)) VARIANT_BOOL MailMergeDataSource::GetIncluded ( );
__declspec(implementation_key(1503)) void MailMergeDataSource::PutIncluded ( VARIANT_BOOL prop );
__declspec(implementation_key(1504)) VARIANT_BOOL MailMergeDataSource::GetInvalidAddress ( );
__declspec(implementation_key(1505)) void MailMergeDataSource::PutInvalidAddress ( VARIANT_BOOL prop );
__declspec(implementation_key(1506)) _bstr_t MailMergeDataSource::GetInvalidComments ( );
__declspec(implementation_key(1507)) void MailMergeDataSource::PutInvalidComments ( _bstr_t prop );
__declspec(implementation_key(1508)) MappedDataFieldsPtr MailMergeDataSource::GetMappedDataFields ( );
__declspec(implementation_key(1509)) _bstr_t MailMergeDataSource::GetTableName ( );
__declspec(implementation_key(1510)) VARIANT_BOOL MailMergeDataSource::FindRecord ( _bstr_t WORDFindText, VARIANT * Field );
__declspec(implementation_key(1511)) HRESULT MailMergeDataSource::SetAllIncludedFlags ( VARIANT_BOOL Included );
__declspec(implementation_key(1512)) HRESULT MailMergeDataSource::SetAllErrorFlags ( VARIANT_BOOL Invalid, _bstr_t InvalidComment );
__declspec(implementation_key(1513)) HRESULT MailMergeDataSource::Close ( );
__declspec(implementation_key(1514)) _ApplicationPtr TableStyle::GetApplication ( );
__declspec(implementation_key(1515)) long TableStyle::GetCreator ( );
__declspec(implementation_key(1516)) IDispatchPtr TableStyle::GetParent ( );
__declspec(implementation_key(1517)) VARIANT_BOOL TableStyle::GetAllowPageBreaks ( );
__declspec(implementation_key(1518)) void TableStyle::PutAllowPageBreaks ( VARIANT_BOOL prop );
__declspec(implementation_key(1519)) BordersPtr TableStyle::GetBorders ( );
__declspec(implementation_key(1520)) void TableStyle::PutBorders ( struct Borders * prop );
__declspec(implementation_key(1521)) float TableStyle::GetBottomPadding ( );
__declspec(implementation_key(1522)) void TableStyle::PutBottomPadding ( float prop );
__declspec(implementation_key(1523)) float TableStyle::GetLeftPadding ( );
__declspec(implementation_key(1524)) void TableStyle::PutLeftPadding ( float prop );
__declspec(implementation_key(1525)) float TableStyle::GetTopPadding ( );
__declspec(implementation_key(1526)) void TableStyle::PutTopPadding ( float prop );
__declspec(implementation_key(1527)) float TableStyle::GetRightPadding ( );
__declspec(implementation_key(1528)) void TableStyle::PutRightPadding ( float prop );
__declspec(implementation_key(1529)) enum WdRowAlignment TableStyle::GetAlignment ( );
__declspec(implementation_key(1530)) void TableStyle::PutAlignment ( enum WdRowAlignment prop );
__declspec(implementation_key(1531)) float TableStyle::GetSpacing ( );
__declspec(implementation_key(1532)) void TableStyle::PutSpacing ( float prop );
__declspec(implementation_key(1533)) ConditionalStylePtr TableStyle::Condition ( enum WdConditionCode ConditionCode );
__declspec(implementation_key(1534)) enum WdTableDirection TableStyle::GetTableDirection ( );
__declspec(implementation_key(1535)) void TableStyle::PutTableDirection ( enum WdTableDirection prop );
__declspec(implementation_key(1536)) long TableStyle::GetAllowBreakAcrossPage ( );
__declspec(implementation_key(1537)) void TableStyle::PutAllowBreakAcrossPage ( long prop );
__declspec(implementation_key(1538)) float TableStyle::GetLeftIndent ( );
__declspec(implementation_key(1539)) void TableStyle::PutLeftIndent ( float prop );
__declspec(implementation_key(1540)) ShadingPtr TableStyle::GetShading ( );
__declspec(implementation_key(1541)) long TableStyle::GetRowStripe ( );
__declspec(implementation_key(1542)) void TableStyle::PutRowStripe ( long prop );
__declspec(implementation_key(1543)) long TableStyle::GetColumnStripe ( );
__declspec(implementation_key(1544)) void TableStyle::PutColumnStripe ( long prop );
__declspec(implementation_key(1545)) IUnknownPtr TaskPanes::Get_NewEnum ( );
__declspec(implementation_key(1546)) long TaskPanes::GetCount ( );
__declspec(implementation_key(1547)) _ApplicationPtr TaskPanes::GetApplication ( );
__declspec(implementation_key(1548)) long TaskPanes::GetCreator ( );
__declspec(implementation_key(1549)) IDispatchPtr TaskPanes::GetParent ( );
__declspec(implementation_key(1550)) TaskPanePtr TaskPanes::Item ( enum WdTaskPanes Index );
__declspec(implementation_key(1551)) _bstr_t SmartTagRecognizer::GetFullName ( );
__declspec(implementation_key(1552)) _ApplicationPtr SmartTagRecognizer::GetApplication ( );
__declspec(implementation_key(1553)) long SmartTagRecognizer::GetCreator ( );
__declspec(implementation_key(1554)) IDispatchPtr SmartTagRecognizer::GetParent ( );
__declspec(implementation_key(1555)) VARIANT_BOOL SmartTagRecognizer::GetEnabled ( );
__declspec(implementation_key(1556)) void SmartTagRecognizer::PutEnabled ( VARIANT_BOOL prop );
__declspec(implementation_key(1557)) _bstr_t SmartTagRecognizer::GetProgID ( );
__declspec(implementation_key(1558)) _bstr_t SmartTagRecognizer::GetCaption ( );
__declspec(implementation_key(1559)) IUnknownPtr SmartTagRecognizers::Get_NewEnum ( );
__declspec(implementation_key(1560)) long SmartTagRecognizers::GetCount ( );
__declspec(implementation_key(1561)) _ApplicationPtr SmartTagRecognizers::GetApplication ( );
__declspec(implementation_key(1562)) long SmartTagRecognizers::GetCreator ( );
__declspec(implementation_key(1563)) IDispatchPtr SmartTagRecognizers::GetParent ( );
__declspec(implementation_key(1564)) SmartTagRecognizerPtr SmartTagRecognizers::Item ( VARIANT * Index );
__declspec(implementation_key(1565)) HRESULT SmartTagRecognizers::ReloadRecognizers ( );
__declspec(implementation_key(1566)) _ApplicationPtr XMLSchemaReference::GetApplication ( );
__declspec(implementation_key(1567)) long XMLSchemaReference::GetCreator ( );
__declspec(implementation_key(1568)) IDispatchPtr XMLSchemaReference::GetParent ( );
__declspec(implementation_key(1569)) _bstr_t XMLSchemaReference::GetNamespaceURI ( );
__declspec(implementation_key(1570)) _bstr_t XMLSchemaReference::GetLocation ( );
__declspec(implementation_key(1571)) HRESULT XMLSchemaReference::Delete ( );
__declspec(implementation_key(1572)) HRESULT XMLSchemaReference::Reload ( );
__declspec(implementation_key(1573)) IUnknownPtr XMLSchemaReferences::Get_NewEnum ( );
__declspec(implementation_key(1574)) long XMLSchemaReferences::GetCount ( );
__declspec(implementation_key(1575)) _ApplicationPtr XMLSchemaReferences::GetApplication ( );
__declspec(implementation_key(1576)) long XMLSchemaReferences::GetCreator ( );
__declspec(implementation_key(1577)) IDispatchPtr XMLSchemaReferences::GetParent ( );
__declspec(implementation_key(1578)) VARIANT_BOOL XMLSchemaReferences::GetAutomaticValidation ( );
__declspec(implementation_key(1579)) void XMLSchemaReferences::PutAutomaticValidation ( VARIANT_BOOL prop );
__declspec(implementation_key(1580)) VARIANT_BOOL XMLSchemaReferences::GetAllowSaveAsXMLWithoutValidation ( );
__declspec(implementation_key(1581)) void XMLSchemaReferences::PutAllowSaveAsXMLWithoutValidation ( VARIANT_BOOL prop );
__declspec(implementation_key(1582)) VARIANT_BOOL XMLSchemaReferences::GetHideValidationErrors ( );
__declspec(implementation_key(1583)) void XMLSchemaReferences::PutHideValidationErrors ( VARIANT_BOOL prop );
__declspec(implementation_key(1584)) VARIANT_BOOL XMLSchemaReferences::GetIgnoreMixedContent ( );
__declspec(implementation_key(1585)) void XMLSchemaReferences::PutIgnoreMixedContent ( VARIANT_BOOL prop );
__declspec(implementation_key(1586)) VARIANT_BOOL XMLSchemaReferences::GetShowPlaceholderText ( );
__declspec(implementation_key(1587)) void XMLSchemaReferences::PutShowPlaceholderText ( VARIANT_BOOL prop );
__declspec(implementation_key(1588)) XMLSchemaReferencePtr XMLSchemaReferences::Item ( VARIANT * Index );
__declspec(implementation_key(1589)) HRESULT XMLSchemaReferences::Validate ( );
__declspec(implementation_key(1590)) XMLSchemaReferencePtr XMLSchemaReferences::Add ( VARIANT * NamespaceURI, VARIANT * Alias, VARIANT * FileName, VARIANT_BOOL InstallForAllUsers );
__declspec(implementation_key(1591)) _ApplicationPtr XSLTransform::GetApplication ( );
__declspec(implementation_key(1592)) long XSLTransform::GetCreator ( );
__declspec(implementation_key(1593)) IDispatchPtr XSLTransform::GetParent ( );
__declspec(implementation_key(1594)) _bstr_t XSLTransform::GetAlias ( VARIANT_BOOL AllUsers );
__declspec(implementation_key(1595)) void XSLTransform::PutAlias ( VARIANT_BOOL AllUsers, _bstr_t prop );
__declspec(implementation_key(1596)) _bstr_t XSLTransform::GetLocation ( VARIANT_BOOL AllUsers );
__declspec(implementation_key(1597)) void XSLTransform::PutLocation ( VARIANT_BOOL AllUsers, _bstr_t prop );
__declspec(implementation_key(1598)) HRESULT XSLTransform::Delete ( );
__declspec(implementation_key(1599)) IUnknownPtr XSLTransforms::Get_NewEnum ( );
__declspec(implementation_key(1600)) long XSLTransforms::GetCount ( );
__declspec(implementation_key(1601)) _ApplicationPtr XSLTransforms::GetApplication ( );
__declspec(implementation_key(1602)) long XSLTransforms::GetCreator ( );
__declspec(implementation_key(1603)) IDispatchPtr XSLTransforms::GetParent ( );
__declspec(implementation_key(1604)) XSLTransformPtr XSLTransforms::Item ( VARIANT * Index );
__declspec(implementation_key(1605)) XSLTransformPtr XSLTransforms::Add ( _bstr_t Location, VARIANT * Alias, VARIANT_BOOL InstallForAllUsers );
__declspec(implementation_key(1606)) _ApplicationPtr XMLNamespace::GetApplication ( );
__declspec(implementation_key(1607)) long XMLNamespace::GetCreator ( );
__declspec(implementation_key(1608)) IDispatchPtr XMLNamespace::GetParent ( );
__declspec(implementation_key(1609)) _bstr_t XMLNamespace::GetURI ( );
__declspec(implementation_key(1610)) _bstr_t XMLNamespace::GetLocation ( VARIANT_BOOL AllUsers );
__declspec(implementation_key(1611)) void XMLNamespace::PutLocation ( VARIANT_BOOL AllUsers, _bstr_t prop );
__declspec(implementation_key(1612)) _bstr_t XMLNamespace::GetAlias ( VARIANT_BOOL AllUsers );
__declspec(implementation_key(1613)) void XMLNamespace::PutAlias ( VARIANT_BOOL AllUsers, _bstr_t prop );
__declspec(implementation_key(1614)) XSLTransformsPtr XMLNamespace::GetXSLTransforms ( );
__declspec(implementation_key(1615)) XSLTransformPtr XMLNamespace::GetDefaultTransform ( VARIANT_BOOL AllUsers );
__declspec(implementation_key(1616)) void XMLNamespace::PutDefaultTransform ( VARIANT_BOOL AllUsers, struct XSLTransform * prop );
__declspec(implementation_key(1617)) HRESULT XMLNamespace::AttachToDocument ( VARIANT * Document );
__declspec(implementation_key(1618)) HRESULT XMLNamespace::Delete ( );
__declspec(implementation_key(1619)) IUnknownPtr XMLNamespaces::Get_NewEnum ( );
__declspec(implementation_key(1620)) long XMLNamespaces::GetCount ( );
__declspec(implementation_key(1621)) _ApplicationPtr XMLNamespaces::GetApplication ( );
__declspec(implementation_key(1622)) long XMLNamespaces::GetCreator ( );
__declspec(implementation_key(1623)) IDispatchPtr XMLNamespaces::GetParent ( );
__declspec(implementation_key(1624)) XMLNamespacePtr XMLNamespaces::Item ( VARIANT * Index );
__declspec(implementation_key(1625)) XMLNamespacePtr XMLNamespaces::Add ( _bstr_t Path, VARIANT * NamespaceURI, VARIANT * Alias, VARIANT_BOOL InstallForAllUsers );
__declspec(implementation_key(1626)) HRESULT XMLNamespaces::InstallManifest ( _bstr_t Path, VARIANT_BOOL InstallForAllUsers );
__declspec(implementation_key(1627)) HRESULT ApplicationEvents4::Quit ( );
__declspec(implementation_key(1628)) HRESULT ApplicationEvents4::DocumentChange ( );
__declspec(implementation_key(1629)) HRESULT ApplicationEvents4::DocumentOpen ( struct _Document * Doc );
__declspec(implementation_key(1630)) HRESULT ApplicationEvents4::DocumentBeforeClose ( struct _Document * Doc, VARIANT_BOOL * Cancel );
__declspec(implementation_key(1631)) HRESULT ApplicationEvents4::DocumentBeforePrint ( struct _Document * Doc, VARIANT_BOOL * Cancel );
__declspec(implementation_key(1632)) HRESULT ApplicationEvents4::DocumentBeforeSave ( struct _Document * Doc, VARIANT_BOOL * SaveAsUI, VARIANT_BOOL * Cancel );
__declspec(implementation_key(1633)) HRESULT ApplicationEvents4::NewDocument ( struct _Document * Doc );
__declspec(implementation_key(1634)) HRESULT ApplicationEvents4::WindowActivate ( struct _Document * Doc, struct Window * Wn );
__declspec(implementation_key(1635)) HRESULT ApplicationEvents4::WindowDeactivate ( struct _Document * Doc, struct Window * Wn );
__declspec(implementation_key(1636)) HRESULT ApplicationEvents4::WindowSelectionChange ( struct Selection * Sel );
__declspec(implementation_key(1637)) HRESULT ApplicationEvents4::WindowBeforeRightClick ( struct Selection * Sel, VARIANT_BOOL * Cancel );
__declspec(implementation_key(1638)) HRESULT ApplicationEvents4::WindowBeforeDoubleClick ( struct Selection * Sel, VARIANT_BOOL * Cancel );
__declspec(implementation_key(1639)) HRESULT ApplicationEvents4::EPostagePropertyDialog ( struct _Document * Doc );
__declspec(implementation_key(1640)) HRESULT ApplicationEvents4::EPostageInsert ( struct _Document * Doc );
__declspec(implementation_key(1641)) HRESULT ApplicationEvents4::MailMergeAfterMerge ( struct _Document * Doc, struct _Document * DocResult );
__declspec(implementation_key(1642)) HRESULT ApplicationEvents4::MailMergeAfterRecordMerge ( struct _Document * Doc );
__declspec(implementation_key(1643)) HRESULT ApplicationEvents4::MailMergeBeforeMerge ( struct _Document * Doc, long StartRecord, long EndRecord, VARIANT_BOOL * Cancel );
__declspec(implementation_key(1644)) HRESULT ApplicationEvents4::MailMergeBeforeRecordMerge ( struct _Document * Doc, VARIANT_BOOL * Cancel );
__declspec(implementation_key(1645)) HRESULT ApplicationEvents4::MailMergeDataSourceLoad ( struct _Document * Doc );
__declspec(implementation_key(1646)) HRESULT ApplicationEvents4::MailMergeDataSourceValidate ( struct _Document * Doc, VARIANT_BOOL * Handled );
__declspec(implementation_key(1647)) HRESULT ApplicationEvents4::MailMergeWizardSendToCustom ( struct _Document * Doc );
__declspec(implementation_key(1648)) HRESULT ApplicationEvents4::MailMergeWizardStateChange ( struct _Document * Doc, int * FromState, int * ToState, VARIANT_BOOL * Handled );
__declspec(implementation_key(1649)) HRESULT ApplicationEvents4::WindowSize ( struct _Document * Doc, struct Window * Wn );
__declspec(implementation_key(1650)) HRESULT ApplicationEvents4::XMLSelectionChange ( struct Selection * Sel, struct XMLNode * OldXMLNode, struct XMLNode * NewXMLNode, long * Reason );
__declspec(implementation_key(1651)) HRESULT ApplicationEvents4::XMLValidationError ( struct XMLNode * XMLNode );
__declspec(implementation_key(1652)) HRESULT ApplicationEvents4::DocumentSync ( struct _Document * Doc, enum Office::MsoSyncEventType SyncEventType );
__declspec(implementation_key(1653)) HRESULT ApplicationEvents4::EPostageInsertEx ( struct _Document * Doc, int cpDeliveryAddrStart, int cpDeliveryAddrEnd, int cpReturnAddrStart, int cpReturnAddrEnd, int xaWidth, int yaHeight, _bstr_t bstrPrinterName, _bstr_t bstrPaperFeed, VARIANT_BOOL fPrint, VARIANT_BOOL * fCancel );
__declspec(implementation_key(1654)) HRESULT ApplicationEvents4::MailMergeDataSourceValidate2 ( struct _Document * Doc, VARIANT_BOOL * Handled );
__declspec(implementation_key(1655)) HRESULT DocumentEvents2::New ( );
__declspec(implementation_key(1656)) HRESULT DocumentEvents2::Open ( );
__declspec(implementation_key(1657)) HRESULT DocumentEvents2::Close ( );
__declspec(implementation_key(1658)) HRESULT DocumentEvents2::Sync ( enum Office::MsoSyncEventType SyncEventType );
__declspec(implementation_key(1659)) HRESULT DocumentEvents2::XMLAfterInsert ( struct XMLNode * NewXMLNode, VARIANT_BOOL InUndoRedo );
__declspec(implementation_key(1660)) HRESULT DocumentEvents2::XMLBeforeDelete ( struct Range * DeletedRange, struct XMLNode * OldXMLNode, VARIANT_BOOL InUndoRedo );
__declspec(implementation_key(1661)) HRESULT DocumentEvents2::ContentControlAfterAdd ( struct ContentControl * NewContentControl, VARIANT_BOOL InUndoRedo );
__declspec(implementation_key(1662)) HRESULT DocumentEvents2::ContentControlBeforeDelete ( struct ContentControl * OldContentControl, VARIANT_BOOL InUndoRedo );
__declspec(implementation_key(1663)) HRESULT DocumentEvents2::ContentControlOnExit ( struct ContentControl * ContentControl, VARIANT_BOOL * Cancel );
__declspec(implementation_key(1664)) HRESULT DocumentEvents2::ContentControlOnEnter ( struct ContentControl * ContentControl );
__declspec(implementation_key(1665)) HRESULT DocumentEvents2::ContentControlBeforeStoreUpdate ( struct ContentControl * ContentControl, BSTR * Content );
__declspec(implementation_key(1666)) HRESULT DocumentEvents2::ContentControlBeforeContentUpdate ( struct ContentControl * ContentControl, BSTR * Content );
__declspec(implementation_key(1667)) HRESULT DocumentEvents2::BuildingBlockInsert ( struct Range * Range, _bstr_t Name, _bstr_t Category, _bstr_t BlockType, _bstr_t Template );
__declspec(implementation_key(1668)) _bstr_t SmartTagAction::GetName ( );
__declspec(implementation_key(1669)) _ApplicationPtr SmartTagAction::GetApplication ( );
__declspec(implementation_key(1670)) long SmartTagAction::GetCreator ( );
__declspec(implementation_key(1671)) IDispatchPtr SmartTagAction::GetParent ( );
__declspec(implementation_key(1672)) HRESULT SmartTagAction::Execute ( );
__declspec(implementation_key(1673)) enum WdSmartTagControlType SmartTagAction::GetType ( );
__declspec(implementation_key(1674)) VARIANT_BOOL SmartTagAction::GetPresentInPane ( );
__declspec(implementation_key(1675)) VARIANT_BOOL SmartTagAction::GetExpandHelp ( );
__declspec(implementation_key(1676)) void SmartTagAction::PutExpandHelp ( VARIANT_BOOL prop );
__declspec(implementation_key(1677)) VARIANT_BOOL SmartTagAction::GetCheckboxState ( );
__declspec(implementation_key(1678)) void SmartTagAction::PutCheckboxState ( VARIANT_BOOL prop );
__declspec(implementation_key(1679)) _bstr_t SmartTagAction::GetTextboxText ( );
__declspec(implementation_key(1680)) void SmartTagAction::PutTextboxText ( _bstr_t prop );
__declspec(implementation_key(1681)) long SmartTagAction::GetListSelection ( );
__declspec(implementation_key(1682)) void SmartTagAction::PutListSelection ( long prop );
__declspec(implementation_key(1683)) long SmartTagAction::GetRadioGroupSelection ( );
__declspec(implementation_key(1684)) void SmartTagAction::PutRadioGroupSelection ( long prop );
__declspec(implementation_key(1685)) VARIANT_BOOL SmartTagAction::GetExpandDocumentFragment ( );
__declspec(implementation_key(1686)) void SmartTagAction::PutExpandDocumentFragment ( VARIANT_BOOL prop );
__declspec(implementation_key(1687)) IDispatchPtr SmartTagAction::GetActiveXControl ( );
__declspec(implementation_key(1688)) IUnknownPtr SmartTagActions::Get_NewEnum ( );
__declspec(implementation_key(1689)) long SmartTagActions::GetCount ( );
__declspec(implementation_key(1690)) _ApplicationPtr SmartTagActions::GetApplication ( );
__declspec(implementation_key(1691)) long SmartTagActions::GetCreator ( );
__declspec(implementation_key(1692)) IDispatchPtr SmartTagActions::GetParent ( );
__declspec(implementation_key(1693)) SmartTagActionPtr SmartTagActions::Item ( VARIANT * Index );
__declspec(implementation_key(1694)) HRESULT SmartTagActions::ReloadActions ( );
__declspec(implementation_key(1695)) _bstr_t SmartTagType::GetName ( );
__declspec(implementation_key(1696)) _ApplicationPtr SmartTagType::GetApplication ( );
__declspec(implementation_key(1697)) long SmartTagType::GetCreator ( );
__declspec(implementation_key(1698)) IDispatchPtr SmartTagType::GetParent ( );
__declspec(implementation_key(1699)) SmartTagActionsPtr SmartTagType::GetSmartTagActions ( );
__declspec(implementation_key(1700)) SmartTagRecognizersPtr SmartTagType::GetSmartTagRecognizers ( );
__declspec(implementation_key(1701)) _bstr_t SmartTagType::GetFriendlyName ( );
__declspec(implementation_key(1702)) IUnknownPtr SmartTagTypes::Get_NewEnum ( );
__declspec(implementation_key(1703)) long SmartTagTypes::GetCount ( );
__declspec(implementation_key(1704)) _ApplicationPtr SmartTagTypes::GetApplication ( );
__declspec(implementation_key(1705)) long SmartTagTypes::GetCreator ( );
__declspec(implementation_key(1706)) IDispatchPtr SmartTagTypes::GetParent ( );
__declspec(implementation_key(1707)) SmartTagTypePtr SmartTagTypes::Item ( VARIANT * Index );
__declspec(implementation_key(1708)) HRESULT SmartTagTypes::ReloadAll ( );
__declspec(implementation_key(1709)) _ApplicationPtr Source::GetApplication ( );
__declspec(implementation_key(1710)) long Source::GetCreator ( );
__declspec(implementation_key(1711)) IDispatchPtr Source::GetParent ( );
__declspec(implementation_key(1712)) _bstr_t Source::GetTag ( );
__declspec(implementation_key(1713)) _bstr_t Source::GetField ( _bstr_t Name );
__declspec(implementation_key(1714)) void Source::PutField ( _bstr_t Name, _bstr_t prop );
__declspec(implementation_key(1715)) _bstr_t Source::GetXML ( );
__declspec(implementation_key(1716)) VARIANT_BOOL Source::GetCited ( );
__declspec(implementation_key(1717)) HRESULT Source::Delete ( );
__declspec(implementation_key(1718)) IUnknownPtr Sources::Get_NewEnum ( );
__declspec(implementation_key(1719)) long Sources::GetCount ( );
__declspec(implementation_key(1720)) _ApplicationPtr Sources::GetApplication ( );
__declspec(implementation_key(1721)) long Sources::GetCreator ( );
__declspec(implementation_key(1722)) IDispatchPtr Sources::GetParent ( );
__declspec(implementation_key(1723)) SourcePtr Sources::Item ( long Index );
__declspec(implementation_key(1724)) HRESULT Sources::Add ( _bstr_t Data );
__declspec(implementation_key(1725)) _ApplicationPtr Bibliography::GetApplication ( );
__declspec(implementation_key(1726)) long Bibliography::GetCreator ( );
__declspec(implementation_key(1727)) IDispatchPtr Bibliography::GetParent ( );
__declspec(implementation_key(1728)) SourcesPtr Bibliography::GetSources ( );
__declspec(implementation_key(1729)) _bstr_t Bibliography::GetBibliographyStyle ( );
__declspec(implementation_key(1730)) void Bibliography::PutBibliographyStyle ( _bstr_t prop );
__declspec(implementation_key(1731)) _bstr_t Bibliography::GenerateUniqueTag ( );
__declspec(implementation_key(1732)) _ApplicationPtr OMathAutoCorrectEntry::GetApplication ( );
__declspec(implementation_key(1733)) long OMathAutoCorrectEntry::GetCreator ( );
__declspec(implementation_key(1734)) IDispatchPtr OMathAutoCorrectEntry::GetParent ( );
__declspec(implementation_key(1735)) long OMathAutoCorrectEntry::GetIndex ( );
__declspec(implementation_key(1736)) _bstr_t OMathAutoCorrectEntry::GetName ( );
__declspec(implementation_key(1737)) void OMathAutoCorrectEntry::PutName ( _bstr_t prop );
__declspec(implementation_key(1738)) _bstr_t OMathAutoCorrectEntry::GetValue ( );
__declspec(implementation_key(1739)) void OMathAutoCorrectEntry::PutValue ( _bstr_t prop );
__declspec(implementation_key(1740)) HRESULT OMathAutoCorrectEntry::Delete ( );
__declspec(implementation_key(1741)) _ApplicationPtr OMathAutoCorrectEntries::GetApplication ( );
__declspec(implementation_key(1742)) long OMathAutoCorrectEntries::GetCreator ( );
__declspec(implementation_key(1743)) IDispatchPtr OMathAutoCorrectEntries::GetParent ( );
__declspec(implementation_key(1744)) IUnknownPtr OMathAutoCorrectEntries::Get_NewEnum ( );
__declspec(implementation_key(1745)) long OMathAutoCorrectEntries::GetCount ( );
__declspec(implementation_key(1746)) OMathAutoCorrectEntryPtr OMathAutoCorrectEntries::Item ( VARIANT * Index );
__declspec(implementation_key(1747)) OMathAutoCorrectEntryPtr OMathAutoCorrectEntries::Add ( _bstr_t Name, _bstr_t Value );
__declspec(implementation_key(1748)) _ApplicationPtr OMathRecognizedFunction::GetApplication ( );
__declspec(implementation_key(1749)) long OMathRecognizedFunction::GetCreator ( );
__declspec(implementation_key(1750)) IDispatchPtr OMathRecognizedFunction::GetParent ( );
__declspec(implementation_key(1751)) long OMathRecognizedFunction::GetIndex ( );
__declspec(implementation_key(1752)) _bstr_t OMathRecognizedFunction::GetName ( );
__declspec(implementation_key(1753)) HRESULT OMathRecognizedFunction::Delete ( );
__declspec(implementation_key(1754)) _ApplicationPtr OMathRecognizedFunctions::GetApplication ( );
__declspec(implementation_key(1755)) long OMathRecognizedFunctions::GetCreator ( );
__declspec(implementation_key(1756)) IDispatchPtr OMathRecognizedFunctions::GetParent ( );
__declspec(implementation_key(1757)) IUnknownPtr OMathRecognizedFunctions::Get_NewEnum ( );
__declspec(implementation_key(1758)) long OMathRecognizedFunctions::GetCount ( );
__declspec(implementation_key(1759)) OMathRecognizedFunctionPtr OMathRecognizedFunctions::Item ( VARIANT * Index );
__declspec(implementation_key(1760)) OMathRecognizedFunctionPtr OMathRecognizedFunctions::Add ( _bstr_t Name );
__declspec(implementation_key(1761)) _ApplicationPtr OMathAutoCorrect::GetApplication ( );
__declspec(implementation_key(1762)) long OMathAutoCorrect::GetCreator ( );
__declspec(implementation_key(1763)) IDispatchPtr OMathAutoCorrect::GetParent ( );
__declspec(implementation_key(1764)) VARIANT_BOOL OMathAutoCorrect::Get__ReplaceText ( );
__declspec(implementation_key(1765)) void OMathAutoCorrect::Put__ReplaceText ( VARIANT_BOOL prop );
__declspec(implementation_key(1766)) VARIANT_BOOL OMathAutoCorrect::GetUseOutsideOMath ( );
__declspec(implementation_key(1767)) void OMathAutoCorrect::PutUseOutsideOMath ( VARIANT_BOOL prop );
__declspec(implementation_key(1768)) OMathAutoCorrectEntriesPtr OMathAutoCorrect::GetEntries ( );
__declspec(implementation_key(1769)) OMathRecognizedFunctionsPtr OMathAutoCorrect::GetFunctions ( );
__declspec(implementation_key(1770)) _ApplicationPtr XMLMapping::GetApplication ( );
__declspec(implementation_key(1771)) long XMLMapping::GetCreator ( );
__declspec(implementation_key(1772)) IDispatchPtr XMLMapping::GetParent ( );
__declspec(implementation_key(1773)) VARIANT_BOOL XMLMapping::GetIsMapped ( );
__declspec(implementation_key(1774)) Office::_CustomXMLPartPtr XMLMapping::GetCustomXMLPart ( );
__declspec(implementation_key(1775)) Office::CustomXMLNodePtr XMLMapping::GetCustomXMLNode ( );
__declspec(implementation_key(1776)) VARIANT_BOOL XMLMapping::SetMapping ( _bstr_t XPath, _bstr_t PrefixMapping, struct Office::_CustomXMLPart * Source );
__declspec(implementation_key(1777)) HRESULT XMLMapping::Delete ( );
__declspec(implementation_key(1778)) VARIANT_BOOL XMLMapping::SetMappingByNode ( struct Office::CustomXMLNode * Node );
__declspec(implementation_key(1779)) _bstr_t XMLMapping::GetXPath ( );
__declspec(implementation_key(1780)) _bstr_t XMLMapping::GetPrefixMappings ( );
__declspec(implementation_key(1781)) _ApplicationPtr ContentControlListEntry::GetApplication ( );
__declspec(implementation_key(1782)) long ContentControlListEntry::GetCreator ( );
__declspec(implementation_key(1783)) IDispatchPtr ContentControlListEntry::GetParent ( );
__declspec(implementation_key(1784)) _bstr_t ContentControlListEntry::GetText ( );
__declspec(implementation_key(1785)) void ContentControlListEntry::PutText ( _bstr_t prop );
__declspec(implementation_key(1786)) _bstr_t ContentControlListEntry::GetValue ( );
__declspec(implementation_key(1787)) void ContentControlListEntry::PutValue ( _bstr_t prop );
__declspec(implementation_key(1788)) long ContentControlListEntry::GetIndex ( );
__declspec(implementation_key(1789)) void ContentControlListEntry::PutIndex ( long prop );
__declspec(implementation_key(1790)) HRESULT ContentControlListEntry::Delete ( );
__declspec(implementation_key(1791)) HRESULT ContentControlListEntry::MoveUp ( );
__declspec(implementation_key(1792)) HRESULT ContentControlListEntry::MoveDown ( );
__declspec(implementation_key(1793)) HRESULT ContentControlListEntry::Select ( );
__declspec(implementation_key(1794)) IUnknownPtr ContentControlListEntries::Get_NewEnum ( );
__declspec(implementation_key(1795)) _ApplicationPtr ContentControlListEntries::GetApplication ( );
__declspec(implementation_key(1796)) long ContentControlListEntries::GetCreator ( );
__declspec(implementation_key(1797)) IDispatchPtr ContentControlListEntries::GetParent ( );
__declspec(implementation_key(1798)) long ContentControlListEntries::GetCount ( );
__declspec(implementation_key(1799)) HRESULT ContentControlListEntries::Clear ( );
__declspec(implementation_key(1800)) ContentControlListEntryPtr ContentControlListEntries::Item ( long Index );
__declspec(implementation_key(1801)) ContentControlListEntryPtr ContentControlListEntries::Add ( _bstr_t Text, _bstr_t Value, long Index );
__declspec(implementation_key(1802)) _ApplicationPtr Research::GetApplication ( );
__declspec(implementation_key(1803)) long Research::GetCreator ( );
__declspec(implementation_key(1804)) IDispatchPtr Research::GetParent ( );
__declspec(implementation_key(1805)) _variant_t Research::Query ( _bstr_t ServiceID, _bstr_t QueryString, enum WdLanguageID QueryLanguage, VARIANT_BOOL UseSelection, VARIANT_BOOL LaunchQuery );
__declspec(implementation_key(1806)) _variant_t Research::SetLanguagePair ( enum WdLanguageID LanguageFrom, enum WdLanguageID LanguageTo );
__declspec(implementation_key(1807)) VARIANT_BOOL Research::IsResearchService ( _bstr_t ServiceID );
__declspec(implementation_key(1808)) enum Office::MsoSoftEdgeType SoftEdgeFormat::GetType ( );
__declspec(implementation_key(1809)) void SoftEdgeFormat::PutType ( enum Office::MsoSoftEdgeType prop );
__declspec(implementation_key(1810)) enum Office::MsoReflectionType ReflectionFormat::GetType ( );
__declspec(implementation_key(1811)) void ReflectionFormat::PutType ( enum Office::MsoReflectionType prop );
__declspec(implementation_key(1812)) _ApplicationPtr View::GetApplication ( );
__declspec(implementation_key(1813)) long View::GetCreator ( );
__declspec(implementation_key(1814)) IDispatchPtr View::GetParent ( );
__declspec(implementation_key(1815)) enum WdViewType View::GetType ( );
__declspec(implementation_key(1816)) void View::PutType ( enum WdViewType prop );
__declspec(implementation_key(1817)) VARIANT_BOOL View::GetFullScreen ( );
__declspec(implementation_key(1818)) void View::PutFullScreen ( VARIANT_BOOL prop );
__declspec(implementation_key(1819)) VARIANT_BOOL View::GetDraft ( );
__declspec(implementation_key(1820)) void View::PutDraft ( VARIANT_BOOL prop );
__declspec(implementation_key(1821)) VARIANT_BOOL View::GetShowAll ( );
__declspec(implementation_key(1822)) void View::PutShowAll ( VARIANT_BOOL prop );
__declspec(implementation_key(1823)) VARIANT_BOOL View::GetShowFieldCodes ( );
__declspec(implementation_key(1824)) void View::PutShowFieldCodes ( VARIANT_BOOL prop );
__declspec(implementation_key(1825)) VARIANT_BOOL View::GetMailMergeDataView ( );
__declspec(implementation_key(1826)) void View::PutMailMergeDataView ( VARIANT_BOOL prop );
__declspec(implementation_key(1827)) VARIANT_BOOL View::GetMagnifier ( );
__declspec(implementation_key(1828)) void View::PutMagnifier ( VARIANT_BOOL prop );
__declspec(implementation_key(1829)) VARIANT_BOOL View::GetShowFirstLineOnly ( );
__declspec(implementation_key(1830)) void View::PutShowFirstLineOnly ( VARIANT_BOOL prop );
__declspec(implementation_key(1831)) VARIANT_BOOL View::GetShowFormat ( );
__declspec(implementation_key(1832)) void View::PutShowFormat ( VARIANT_BOOL prop );
__declspec(implementation_key(1833)) ZoomPtr View::GetZoom ( );
__declspec(implementation_key(1834)) VARIANT_BOOL View::GetShowObjectAnchors ( );
__declspec(implementation_key(1835)) void View::PutShowObjectAnchors ( VARIANT_BOOL prop );
__declspec(implementation_key(1836)) VARIANT_BOOL View::GetShowTextBoundaries ( );
__declspec(implementation_key(1837)) void View::PutShowTextBoundaries ( VARIANT_BOOL prop );
__declspec(implementation_key(1838)) VARIANT_BOOL View::GetShowHighlight ( );
__declspec(implementation_key(1839)) void View::PutShowHighlight ( VARIANT_BOOL prop );
__declspec(implementation_key(1840)) VARIANT_BOOL View::GetShowDrawings ( );
__declspec(implementation_key(1841)) void View::PutShowDrawings ( VARIANT_BOOL prop );
__declspec(implementation_key(1842)) VARIANT_BOOL View::GetShowTabs ( );
__declspec(implementation_key(1843)) void View::PutShowTabs ( VARIANT_BOOL prop );
__declspec(implementation_key(1844)) VARIANT_BOOL View::GetShowSpaces ( );
__declspec(implementation_key(1845)) void View::PutShowSpaces ( VARIANT_BOOL prop );
__declspec(implementation_key(1846)) VARIANT_BOOL View::GetShowParagraphs ( );
__declspec(implementation_key(1847)) void View::PutShowParagraphs ( VARIANT_BOOL prop );
__declspec(implementation_key(1848)) VARIANT_BOOL View::GetShowHyphens ( );
__declspec(implementation_key(1849)) void View::PutShowHyphens ( VARIANT_BOOL prop );
__declspec(implementation_key(1850)) VARIANT_BOOL View::GetShowHiddenText ( );
__declspec(implementation_key(1851)) void View::PutShowHiddenText ( VARIANT_BOOL prop );
__declspec(implementation_key(1852)) VARIANT_BOOL View::GetWrapToWindow ( );
__declspec(implementation_key(1853)) void View::PutWrapToWindow ( VARIANT_BOOL prop );
__declspec(implementation_key(1854)) VARIANT_BOOL View::GetShowPicturePlaceHolders ( );
__declspec(implementation_key(1855)) void View::PutShowPicturePlaceHolders ( VARIANT_BOOL prop );
__declspec(implementation_key(1856)) VARIANT_BOOL View::GetShowBookmarks ( );
__declspec(implementation_key(1857)) void View::PutShowBookmarks ( VARIANT_BOOL prop );
__declspec(implementation_key(1858)) enum WdFieldShading View::GetFieldShading ( );
__declspec(implementation_key(1859)) void View::PutFieldShading ( enum WdFieldShading prop );
__declspec(implementation_key(1860)) VARIANT_BOOL View::GetShowAnimation ( );
__declspec(implementation_key(1861)) void View::PutShowAnimation ( VARIANT_BOOL prop );
__declspec(implementation_key(1862)) VARIANT_BOOL View::GetTableGridlines ( );
__declspec(implementation_key(1863)) void View::PutTableGridlines ( VARIANT_BOOL prop );
__declspec(implementation_key(1864)) long View::GetEnlargeFontsLessThan ( );
__declspec(implementation_key(1865)) void View::PutEnlargeFontsLessThan ( long prop );
__declspec(implementation_key(1866)) VARIANT_BOOL View::GetShowMainTextLayer ( );
__declspec(implementation_key(1867)) void View::PutShowMainTextLayer ( VARIANT_BOOL prop );
__declspec(implementation_key(1868)) enum WdSeekView View::GetSeekView ( );
__declspec(implementation_key(1869)) void View::PutSeekView ( enum WdSeekView prop );
__declspec(implementation_key(1870)) enum WdSpecialPane View::GetSplitSpecial ( );
__declspec(implementation_key(1871)) void View::PutSplitSpecial ( enum WdSpecialPane prop );
__declspec(implementation_key(1872)) long View::GetBrowseToWindow ( );
__declspec(implementation_key(1873)) void View::PutBrowseToWindow ( long prop );
__declspec(implementation_key(1874)) VARIANT_BOOL View::GetShowOptionalBreaks ( );
__declspec(implementation_key(1875)) void View::PutShowOptionalBreaks ( VARIANT_BOOL prop );
__declspec(implementation_key(1876)) HRESULT View::CollapseOutline ( VARIANT * Range );
__declspec(implementation_key(1877)) HRESULT View::ExpandOutline ( VARIANT * Range );
__declspec(implementation_key(1878)) HRESULT View::ShowAllHeadings ( );
__declspec(implementation_key(1879)) HRESULT View::ShowHeading ( long Level );
__declspec(implementation_key(1880)) HRESULT View::PreviousHeaderFooter ( );
__declspec(implementation_key(1881)) HRESULT View::NextHeaderFooter ( );
__declspec(implementation_key(1882)) VARIANT_BOOL View::GetDisplayPageBoundaries ( );
__declspec(implementation_key(1883)) void View::PutDisplayPageBoundaries ( VARIANT_BOOL prop );
__declspec(implementation_key(1884)) VARIANT_BOOL View::GetDisplaySmartTags ( );
__declspec(implementation_key(1885)) void View::PutDisplaySmartTags ( VARIANT_BOOL prop );
__declspec(implementation_key(1886)) VARIANT_BOOL View::GetShowRevisionsAndComments ( );
__declspec(implementation_key(1887)) void View::PutShowRevisionsAndComments ( VARIANT_BOOL prop );
__declspec(implementation_key(1888)) VARIANT_BOOL View::GetShowComments ( );
__declspec(implementation_key(1889)) void View::PutShowComments ( VARIANT_BOOL prop );
__declspec(implementation_key(1890)) VARIANT_BOOL View::GetShowInsertionsAndDeletions ( );
__declspec(implementation_key(1891)) void View::PutShowInsertionsAndDeletions ( VARIANT_BOOL prop );
__declspec(implementation_key(1892)) VARIANT_BOOL View::GetShowFormatChanges ( );
__declspec(implementation_key(1893)) void View::PutShowFormatChanges ( VARIANT_BOOL prop );
__declspec(implementation_key(1894)) enum WdRevisionsView View::GetRevisionsView ( );
__declspec(implementation_key(1895)) void View::PutRevisionsView ( enum WdRevisionsView prop );
__declspec(implementation_key(1896)) enum WdRevisionsMode View::GetRevisionsMode ( );
__declspec(implementation_key(1897)) void View::PutRevisionsMode ( enum WdRevisionsMode prop );
__declspec(implementation_key(1898)) float View::GetRevisionsBalloonWidth ( );
__declspec(implementation_key(1899)) void View::PutRevisionsBalloonWidth ( float prop );
__declspec(implementation_key(1900)) enum WdRevisionsBalloonWidthType View::GetRevisionsBalloonWidthType ( );
__declspec(implementation_key(1901)) void View::PutRevisionsBalloonWidthType ( enum WdRevisionsBalloonWidthType prop );
__declspec(implementation_key(1902)) enum WdRevisionsBalloonMargin View::GetRevisionsBalloonSide ( );
__declspec(implementation_key(1903)) void View::PutRevisionsBalloonSide ( enum WdRevisionsBalloonMargin prop );
__declspec(implementation_key(1904)) ReviewersPtr View::GetReviewers ( );
__declspec(implementation_key(1905)) VARIANT_BOOL View::GetRevisionsBalloonShowConnectingLines ( );
__declspec(implementation_key(1906)) void View::PutRevisionsBalloonShowConnectingLines ( VARIANT_BOOL prop );
__declspec(implementation_key(1907)) VARIANT_BOOL View::GetReadingLayout ( );
__declspec(implementation_key(1908)) void View::PutReadingLayout ( VARIANT_BOOL prop );
__declspec(implementation_key(1909)) long View::GetShowXMLMarkup ( );
__declspec(implementation_key(1910)) void View::PutShowXMLMarkup ( long prop );
__declspec(implementation_key(1911)) long View::GetShadeEditableRanges ( );
__declspec(implementation_key(1912)) void View::PutShadeEditableRanges ( long prop );
__declspec(implementation_key(1913)) VARIANT_BOOL View::GetShowInkAnnotations ( );
__declspec(implementation_key(1914)) void View::PutShowInkAnnotations ( VARIANT_BOOL prop );
__declspec(implementation_key(1915)) VARIANT_BOOL View::GetDisplayBackgrounds ( );
__declspec(implementation_key(1916)) void View::PutDisplayBackgrounds ( VARIANT_BOOL prop );
__declspec(implementation_key(1917)) VARIANT_BOOL View::GetReadingLayoutActualView ( );
__declspec(implementation_key(1918)) void View::PutReadingLayoutActualView ( VARIANT_BOOL prop );
__declspec(implementation_key(1919)) VARIANT_BOOL View::GetReadingLayoutAllowMultiplePages ( );
__declspec(implementation_key(1920)) void View::PutReadingLayoutAllowMultiplePages ( VARIANT_BOOL prop );
__declspec(implementation_key(1921)) VARIANT_BOOL View::GetReadingLayoutAllowEditing ( );
__declspec(implementation_key(1922)) void View::PutReadingLayoutAllowEditing ( VARIANT_BOOL prop );
__declspec(implementation_key(1923)) enum WdReadingLayoutMargin View::GetReadingLayoutTruncateMargins ( );
__declspec(implementation_key(1924)) void View::PutReadingLayoutTruncateMargins ( enum WdReadingLayoutMargin prop );
__declspec(implementation_key(1925)) VARIANT_BOOL View::GetShowMarkupAreaHighlight ( );
__declspec(implementation_key(1926)) void View::PutShowMarkupAreaHighlight ( VARIANT_BOOL prop );
__declspec(implementation_key(1927)) VARIANT_BOOL View::GetPanning ( );
__declspec(implementation_key(1928)) void View::PutPanning ( VARIANT_BOOL prop );
__declspec(implementation_key(1929)) VARIANT_BOOL View::GetShowCropMarks ( );
__declspec(implementation_key(1930)) void View::PutShowCropMarks ( VARIANT_BOOL prop );
__declspec(implementation_key(1931)) enum WdRevisionsMode View::GetMarkupMode ( );
__declspec(implementation_key(1932)) void View::PutMarkupMode ( enum WdRevisionsMode prop );
__declspec(implementation_key(1933)) _ApplicationPtr _ParagraphFormat::GetApplication ( );
__declspec(implementation_key(1934)) long _ParagraphFormat::GetCreator ( );
__declspec(implementation_key(1935)) IDispatchPtr _ParagraphFormat::GetParent ( );
__declspec(implementation_key(1936)) _ParagraphFormatPtr _ParagraphFormat::GetDuplicate ( );
__declspec(implementation_key(1937)) _variant_t _ParagraphFormat::GetStyle ( );
__declspec(implementation_key(1938)) void _ParagraphFormat::PutStyle ( VARIANT * prop );
__declspec(implementation_key(1939)) enum WdParagraphAlignment _ParagraphFormat::GetAlignment ( );
__declspec(implementation_key(1940)) void _ParagraphFormat::PutAlignment ( enum WdParagraphAlignment prop );
__declspec(implementation_key(1941)) long _ParagraphFormat::GetKeepTogether ( );
__declspec(implementation_key(1942)) void _ParagraphFormat::PutKeepTogether ( long prop );
__declspec(implementation_key(1943)) long _ParagraphFormat::GetKeepWithNext ( );
__declspec(implementation_key(1944)) void _ParagraphFormat::PutKeepWithNext ( long prop );
__declspec(implementation_key(1945)) long _ParagraphFormat::GetPageBreakBefore ( );
__declspec(implementation_key(1946)) void _ParagraphFormat::PutPageBreakBefore ( long prop );
__declspec(implementation_key(1947)) long _ParagraphFormat::GetNoLineNumber ( );
__declspec(implementation_key(1948)) void _ParagraphFormat::PutNoLineNumber ( long prop );
__declspec(implementation_key(1949)) float _ParagraphFormat::GetRightIndent ( );
__declspec(implementation_key(1950)) void _ParagraphFormat::PutRightIndent ( float prop );
__declspec(implementation_key(1951)) float _ParagraphFormat::GetLeftIndent ( );
__declspec(implementation_key(1952)) void _ParagraphFormat::PutLeftIndent ( float prop );
__declspec(implementation_key(1953)) float _ParagraphFormat::GetFirstLineIndent ( );
__declspec(implementation_key(1954)) void _ParagraphFormat::PutFirstLineIndent ( float prop );
__declspec(implementation_key(1955)) float _ParagraphFormat::GetLineSpacing ( );
__declspec(implementation_key(1956)) void _ParagraphFormat::PutLineSpacing ( float prop );
__declspec(implementation_key(1957)) enum WdLineSpacing _ParagraphFormat::GetLineSpacingRule ( );
__declspec(implementation_key(1958)) void _ParagraphFormat::PutLineSpacingRule ( enum WdLineSpacing prop );
__declspec(implementation_key(1959)) float _ParagraphFormat::GetSpaceBefore ( );
__declspec(implementation_key(1960)) void _ParagraphFormat::PutSpaceBefore ( float prop );
__declspec(implementation_key(1961)) float _ParagraphFormat::GetSpaceAfter ( );
__declspec(implementation_key(1962)) void _ParagraphFormat::PutSpaceAfter ( float prop );
__declspec(implementation_key(1963)) long _ParagraphFormat::GetHyphenation ( );
__declspec(implementation_key(1964)) void _ParagraphFormat::PutHyphenation ( long prop );
__declspec(implementation_key(1965)) long _ParagraphFormat::GetWidowControl ( );
__declspec(implementation_key(1966)) void _ParagraphFormat::PutWidowControl ( long prop );
__declspec(implementation_key(1967)) long _ParagraphFormat::GetFarEastLineBreakControl ( );
__declspec(implementation_key(1968)) void _ParagraphFormat::PutFarEastLineBreakControl ( long prop );
__declspec(implementation_key(1969)) long _ParagraphFormat::GetWordWrap ( );
__declspec(implementation_key(1970)) void _ParagraphFormat::PutWordWrap ( long prop );
__declspec(implementation_key(1971)) long _ParagraphFormat::GetHangingPunctuation ( );
__declspec(implementation_key(1972)) void _ParagraphFormat::PutHangingPunctuation ( long prop );
__declspec(implementation_key(1973)) long _ParagraphFormat::GetHalfWidthPunctuationOnTopOfLine ( );
__declspec(implementation_key(1974)) void _ParagraphFormat::PutHalfWidthPunctuationOnTopOfLine ( long prop );
__declspec(implementation_key(1975)) long _ParagraphFormat::GetAddSpaceBetweenFarEastAndAlpha ( );
__declspec(implementation_key(1976)) void _ParagraphFormat::PutAddSpaceBetweenFarEastAndAlpha ( long prop );
__declspec(implementation_key(1977)) long _ParagraphFormat::GetAddSpaceBetweenFarEastAndDigit ( );
__declspec(implementation_key(1978)) void _ParagraphFormat::PutAddSpaceBetweenFarEastAndDigit ( long prop );
__declspec(implementation_key(1979)) enum WdBaselineAlignment _ParagraphFormat::GetBaseLineAlignment ( );
__declspec(implementation_key(1980)) void _ParagraphFormat::PutBaseLineAlignment ( enum WdBaselineAlignment prop );
__declspec(implementation_key(1981)) long _ParagraphFormat::GetAutoAdjustRightIndent ( );
__declspec(implementation_key(1982)) void _ParagraphFormat::PutAutoAdjustRightIndent ( long prop );
__declspec(implementation_key(1983)) long _ParagraphFormat::GetDisableLineHeightGrid ( );
__declspec(implementation_key(1984)) void _ParagraphFormat::PutDisableLineHeightGrid ( long prop );
__declspec(implementation_key(1985)) TabStopsPtr _ParagraphFormat::GetTabStops ( );
__declspec(implementation_key(1986)) void _ParagraphFormat::PutTabStops ( struct TabStops * prop );
__declspec(implementation_key(1987)) BordersPtr _ParagraphFormat::GetBorders ( );
__declspec(implementation_key(1988)) void _ParagraphFormat::PutBorders ( struct Borders * prop );
__declspec(implementation_key(1989)) ShadingPtr _ParagraphFormat::GetShading ( );
__declspec(implementation_key(1990)) enum WdOutlineLevel _ParagraphFormat::GetOutlineLevel ( );
__declspec(implementation_key(1991)) void _ParagraphFormat::PutOutlineLevel ( enum WdOutlineLevel prop );
__declspec(implementation_key(1992)) HRESULT _ParagraphFormat::CloseUp ( );
__declspec(implementation_key(1993)) HRESULT _ParagraphFormat::OpenUp ( );
__declspec(implementation_key(1994)) HRESULT _ParagraphFormat::OpenOrCloseUp ( );
__declspec(implementation_key(1995)) HRESULT _ParagraphFormat::TabHangingIndent ( short Count );
__declspec(implementation_key(1996)) HRESULT _ParagraphFormat::TabIndent ( short Count );
__declspec(implementation_key(1997)) HRESULT _ParagraphFormat::Reset ( );
__declspec(implementation_key(1998)) HRESULT _ParagraphFormat::Space1 ( );
__declspec(implementation_key(1999)) HRESULT _ParagraphFormat::Space15 ( );
__declspec(implementation_key(2000)) HRESULT _ParagraphFormat::Space2 ( );
__declspec(implementation_key(2001)) HRESULT _ParagraphFormat::IndentCharWidth ( short Count );
__declspec(implementation_key(2002)) HRESULT _ParagraphFormat::IndentFirstLineCharWidth ( short Count );
__declspec(implementation_key(2003)) float _ParagraphFormat::GetCharacterUnitRightIndent ( );
__declspec(implementation_key(2004)) void _ParagraphFormat::PutCharacterUnitRightIndent ( float prop );
__declspec(implementation_key(2005)) float _ParagraphFormat::GetCharacterUnitLeftIndent ( );
__declspec(implementation_key(2006)) void _ParagraphFormat::PutCharacterUnitLeftIndent ( float prop );
__declspec(implementation_key(2007)) float _ParagraphFormat::GetCharacterUnitFirstLineIndent ( );
__declspec(implementation_key(2008)) void _ParagraphFormat::PutCharacterUnitFirstLineIndent ( float prop );
__declspec(implementation_key(2009)) float _ParagraphFormat::GetLineUnitBefore ( );
__declspec(implementation_key(2010)) void _ParagraphFormat::PutLineUnitBefore ( float prop );
__declspec(implementation_key(2011)) float _ParagraphFormat::GetLineUnitAfter ( );
__declspec(implementation_key(2012)) void _ParagraphFormat::PutLineUnitAfter ( float prop );
__declspec(implementation_key(2013)) enum WdReadingOrder _ParagraphFormat::GetReadingOrder ( );
__declspec(implementation_key(2014)) void _ParagraphFormat::PutReadingOrder ( enum WdReadingOrder prop );
__declspec(implementation_key(2015)) long _ParagraphFormat::GetSpaceBeforeAuto ( );
__declspec(implementation_key(2016)) void _ParagraphFormat::PutSpaceBeforeAuto ( long prop );
__declspec(implementation_key(2017)) long _ParagraphFormat::GetSpaceAfterAuto ( );
__declspec(implementation_key(2018)) void _ParagraphFormat::PutSpaceAfterAuto ( long prop );
__declspec(implementation_key(2019)) long _ParagraphFormat::GetMirrorIndents ( );
__declspec(implementation_key(2020)) void _ParagraphFormat::PutMirrorIndents ( long prop );
__declspec(implementation_key(2021)) enum WdTextboxTightWrap _ParagraphFormat::GetTextboxTightWrap ( );
__declspec(implementation_key(2022)) void _ParagraphFormat::PutTextboxTightWrap ( enum WdTextboxTightWrap prop );
__declspec(implementation_key(2023)) _ApplicationPtr ColorFormat::GetApplication ( );
__declspec(implementation_key(2024)) long ColorFormat::GetCreator ( );
__declspec(implementation_key(2025)) IDispatchPtr ColorFormat::GetParent ( );
__declspec(implementation_key(2026)) long ColorFormat::Get__RGB ( );
__declspec(implementation_key(2027)) void ColorFormat::Put__RGB ( long prop );
__declspec(implementation_key(2028)) long ColorFormat::GetSchemeColor ( );
__declspec(implementation_key(2029)) void ColorFormat::PutSchemeColor ( long prop );
__declspec(implementation_key(2030)) enum Office::MsoColorType ColorFormat::GetType ( );
__declspec(implementation_key(2031)) _bstr_t ColorFormat::GetName ( );
__declspec(implementation_key(2032)) void ColorFormat::PutName ( _bstr_t prop );
__declspec(implementation_key(2033)) float ColorFormat::GetTintAndShade ( );
__declspec(implementation_key(2034)) void ColorFormat::PutTintAndShade ( float prop );
__declspec(implementation_key(2035)) enum Office::MsoTriState ColorFormat::GetOverPrint ( );
__declspec(implementation_key(2036)) void ColorFormat::PutOverPrint ( enum Office::MsoTriState prop );
__declspec(implementation_key(2037)) float ColorFormat::GetInk ( long Index );
__declspec(implementation_key(2038)) void ColorFormat::PutInk ( long Index, float prop );
__declspec(implementation_key(2039)) long ColorFormat::GetCyan ( );
__declspec(implementation_key(2040)) void ColorFormat::PutCyan ( long prop );
__declspec(implementation_key(2041)) long ColorFormat::GetMagenta ( );
__declspec(implementation_key(2042)) void ColorFormat::PutMagenta ( long prop );
__declspec(implementation_key(2043)) long ColorFormat::GetYellow ( );
__declspec(implementation_key(2044)) void ColorFormat::PutYellow ( long prop );
__declspec(implementation_key(2045)) long ColorFormat::GetBlack ( );
__declspec(implementation_key(2046)) void ColorFormat::PutBlack ( long prop );
__declspec(implementation_key(2047)) HRESULT ColorFormat::SetCMYK ( long Cyan, long Magenta, long Yellow, long Black );
__declspec(implementation_key(2048)) enum WdThemeColorIndex ColorFormat::GetObjectThemeColor ( );
__declspec(implementation_key(2049)) void ColorFormat::PutObjectThemeColor ( enum WdThemeColorIndex prop );
__declspec(implementation_key(2050)) _ApplicationPtr FillFormat::GetApplication ( );
__declspec(implementation_key(2051)) long FillFormat::GetCreator ( );
__declspec(implementation_key(2052)) IDispatchPtr FillFormat::GetParent ( );
__declspec(implementation_key(2053)) ColorFormatPtr FillFormat::GetBackColor ( );
__declspec(implementation_key(2054)) ColorFormatPtr FillFormat::GetForeColor ( );
__declspec(implementation_key(2055)) enum Office::MsoGradientColorType FillFormat::GetGradientColorType ( );
__declspec(implementation_key(2056)) float FillFormat::GetGradientDegree ( );
__declspec(implementation_key(2057)) enum Office::MsoGradientStyle FillFormat::GetGradientStyle ( );
__declspec(implementation_key(2058)) long FillFormat::GetGradientVariant ( );
__declspec(implementation_key(2059)) enum Office::MsoPatternType FillFormat::GetPattern ( );
__declspec(implementation_key(2060)) enum Office::MsoPresetGradientType FillFormat::GetPresetGradientType ( );
__declspec(implementation_key(2061)) enum Office::MsoPresetTexture FillFormat::GetPresetTexture ( );
__declspec(implementation_key(2062)) _bstr_t FillFormat::GetTextureName ( );
__declspec(implementation_key(2063)) enum Office::MsoTextureType FillFormat::GetTextureType ( );
__declspec(implementation_key(2064)) float FillFormat::GetTransparency ( );
__declspec(implementation_key(2065)) void FillFormat::PutTransparency ( float prop );
__declspec(implementation_key(2066)) enum Office::MsoFillType FillFormat::GetType ( );
__declspec(implementation_key(2067)) enum Office::MsoTriState FillFormat::GetVisible ( );
__declspec(implementation_key(2068)) void FillFormat::PutVisible ( enum Office::MsoTriState prop );
__declspec(implementation_key(2069)) HRESULT FillFormat::Background ( );
__declspec(implementation_key(2070)) HRESULT FillFormat::OneColorGradient ( enum Office::MsoGradientStyle Style, long Variant, float Degree );
__declspec(implementation_key(2071)) HRESULT FillFormat::Patterned ( enum Office::MsoPatternType Pattern );
__declspec(implementation_key(2072)) HRESULT FillFormat::PresetGradient ( enum Office::MsoGradientStyle Style, long Variant, enum Office::MsoPresetGradientType PresetGradientType );
__declspec(implementation_key(2073)) HRESULT FillFormat::PresetTextured ( enum Office::MsoPresetTexture PresetTexture );
__declspec(implementation_key(2074)) HRESULT FillFormat::Solid ( );
__declspec(implementation_key(2075)) HRESULT FillFormat::TwoColorGradient ( enum Office::MsoGradientStyle Style, long Variant );
__declspec(implementation_key(2076)) HRESULT FillFormat::UserPicture ( _bstr_t PictureFile );
__declspec(implementation_key(2077)) HRESULT FillFormat::UserTextured ( _bstr_t TextureFile );
__declspec(implementation_key(2078)) _ApplicationPtr LineFormat::GetApplication ( );
__declspec(implementation_key(2079)) long LineFormat::GetCreator ( );
__declspec(implementation_key(2080)) IDispatchPtr LineFormat::GetParent ( );
__declspec(implementation_key(2081)) ColorFormatPtr LineFormat::GetBackColor ( );
__declspec(implementation_key(2082)) enum Office::MsoArrowheadLength LineFormat::GetBeginArrowheadLength ( );
__declspec(implementation_key(2083)) void LineFormat::PutBeginArrowheadLength ( enum Office::MsoArrowheadLength prop );
__declspec(implementation_key(2084)) enum Office::MsoArrowheadStyle LineFormat::GetBeginArrowheadStyle ( );
__declspec(implementation_key(2085)) void LineFormat::PutBeginArrowheadStyle ( enum Office::MsoArrowheadStyle prop );
__declspec(implementation_key(2086)) enum Office::MsoArrowheadWidth LineFormat::GetBeginArrowheadWidth ( );
__declspec(implementation_key(2087)) void LineFormat::PutBeginArrowheadWidth ( enum Office::MsoArrowheadWidth prop );
__declspec(implementation_key(2088)) enum Office::MsoLineDashStyle LineFormat::GetDashStyle ( );
__declspec(implementation_key(2089)) void LineFormat::PutDashStyle ( enum Office::MsoLineDashStyle prop );
__declspec(implementation_key(2090)) enum Office::MsoArrowheadLength LineFormat::GetEndArrowheadLength ( );
__declspec(implementation_key(2091)) void LineFormat::PutEndArrowheadLength ( enum Office::MsoArrowheadLength prop );
__declspec(implementation_key(2092)) enum Office::MsoArrowheadStyle LineFormat::GetEndArrowheadStyle ( );
__declspec(implementation_key(2093)) void LineFormat::PutEndArrowheadStyle ( enum Office::MsoArrowheadStyle prop );
__declspec(implementation_key(2094)) enum Office::MsoArrowheadWidth LineFormat::GetEndArrowheadWidth ( );
__declspec(implementation_key(2095)) void LineFormat::PutEndArrowheadWidth ( enum Office::MsoArrowheadWidth prop );
__declspec(implementation_key(2096)) ColorFormatPtr LineFormat::GetForeColor ( );
__declspec(implementation_key(2097)) enum Office::MsoPatternType LineFormat::GetPattern ( );
__declspec(implementation_key(2098)) void LineFormat::PutPattern ( enum Office::MsoPatternType prop );
__declspec(implementation_key(2099)) enum Office::MsoLineStyle LineFormat::GetStyle ( );
__declspec(implementation_key(2100)) void LineFormat::PutStyle ( enum Office::MsoLineStyle prop );
__declspec(implementation_key(2101)) float LineFormat::GetTransparency ( );
__declspec(implementation_key(2102)) void LineFormat::PutTransparency ( float prop );
__declspec(implementation_key(2103)) enum Office::MsoTriState LineFormat::GetVisible ( );
__declspec(implementation_key(2104)) void LineFormat::PutVisible ( enum Office::MsoTriState prop );
__declspec(implementation_key(2105)) float LineFormat::GetWeight ( );
__declspec(implementation_key(2106)) void LineFormat::PutWeight ( float prop );
__declspec(implementation_key(2107)) enum Office::MsoTriState LineFormat::GetInsetPen ( );
__declspec(implementation_key(2108)) void LineFormat::PutInsetPen ( enum Office::MsoTriState prop );
__declspec(implementation_key(2109)) _ApplicationPtr ShadowFormat::GetApplication ( );
__declspec(implementation_key(2110)) long ShadowFormat::GetCreator ( );
__declspec(implementation_key(2111)) IDispatchPtr ShadowFormat::GetParent ( );
__declspec(implementation_key(2112)) ColorFormatPtr ShadowFormat::GetForeColor ( );
__declspec(implementation_key(2113)) enum Office::MsoTriState ShadowFormat::GetObscured ( );
__declspec(implementation_key(2114)) void ShadowFormat::PutObscured ( enum Office::MsoTriState prop );
__declspec(implementation_key(2115)) float ShadowFormat::GetOffsetX ( );
__declspec(implementation_key(2116)) void ShadowFormat::PutOffsetX ( float prop );
__declspec(implementation_key(2117)) float ShadowFormat::GetOffsetY ( );
__declspec(implementation_key(2118)) void ShadowFormat::PutOffsetY ( float prop );
__declspec(implementation_key(2119)) float ShadowFormat::GetTransparency ( );
__declspec(implementation_key(2120)) void ShadowFormat::PutTransparency ( float prop );
__declspec(implementation_key(2121)) enum Office::MsoShadowType ShadowFormat::GetType ( );
__declspec(implementation_key(2122)) void ShadowFormat::PutType ( enum Office::MsoShadowType prop );
__declspec(implementation_key(2123)) enum Office::MsoTriState ShadowFormat::GetVisible ( );
__declspec(implementation_key(2124)) void ShadowFormat::PutVisible ( enum Office::MsoTriState prop );
__declspec(implementation_key(2125)) HRESULT ShadowFormat::IncrementOffsetX ( float Increment );
__declspec(implementation_key(2126)) HRESULT ShadowFormat::IncrementOffsetY ( float Increment );
__declspec(implementation_key(2127)) enum Office::MsoShadowStyle ShadowFormat::GetStyle ( );
__declspec(implementation_key(2128)) void ShadowFormat::PutStyle ( enum Office::MsoShadowStyle prop );
__declspec(implementation_key(2129)) float ShadowFormat::GetBlur ( );
__declspec(implementation_key(2130)) void ShadowFormat::PutBlur ( float prop );
__declspec(implementation_key(2131)) float ShadowFormat::GetSize ( );
__declspec(implementation_key(2132)) void ShadowFormat::PutSize ( float prop );
__declspec(implementation_key(2133)) enum Office::MsoTriState ShadowFormat::GetRotateWithShape ( );
__declspec(implementation_key(2134)) void ShadowFormat::PutRotateWithShape ( enum Office::MsoTriState prop );
__declspec(implementation_key(2135)) _ApplicationPtr ThreeDFormat::GetApplication ( );
__declspec(implementation_key(2136)) long ThreeDFormat::GetCreator ( );
__declspec(implementation_key(2137)) IDispatchPtr ThreeDFormat::GetParent ( );
__declspec(implementation_key(2138)) float ThreeDFormat::GetDepth ( );
__declspec(implementation_key(2139)) void ThreeDFormat::PutDepth ( float prop );
__declspec(implementation_key(2140)) ColorFormatPtr ThreeDFormat::GetExtrusionColor ( );
__declspec(implementation_key(2141)) enum Office::MsoExtrusionColorType ThreeDFormat::GetExtrusionColorType ( );
__declspec(implementation_key(2142)) void ThreeDFormat::PutExtrusionColorType ( enum Office::MsoExtrusionColorType prop );
__declspec(implementation_key(2143)) enum Office::MsoTriState ThreeDFormat::GetPerspective ( );
__declspec(implementation_key(2144)) void ThreeDFormat::PutPerspective ( enum Office::MsoTriState prop );
__declspec(implementation_key(2145)) enum Office::MsoPresetExtrusionDirection ThreeDFormat::GetPresetExtrusionDirection ( );
__declspec(implementation_key(2146)) enum Office::MsoPresetLightingDirection ThreeDFormat::GetPresetLightingDirection ( );
__declspec(implementation_key(2147)) void ThreeDFormat::PutPresetLightingDirection ( enum Office::MsoPresetLightingDirection prop );
__declspec(implementation_key(2148)) enum Office::MsoPresetLightingSoftness ThreeDFormat::GetPresetLightingSoftness ( );
__declspec(implementation_key(2149)) void ThreeDFormat::PutPresetLightingSoftness ( enum Office::MsoPresetLightingSoftness prop );
__declspec(implementation_key(2150)) enum Office::MsoPresetMaterial ThreeDFormat::GetPresetMaterial ( );
__declspec(implementation_key(2151)) void ThreeDFormat::PutPresetMaterial ( enum Office::MsoPresetMaterial prop );
__declspec(implementation_key(2152)) enum Office::MsoPresetThreeDFormat ThreeDFormat::GetPresetThreeDFormat ( );
__declspec(implementation_key(2153)) float ThreeDFormat::GetRotationX ( );
__declspec(implementation_key(2154)) void ThreeDFormat::PutRotationX ( float prop );
__declspec(implementation_key(2155)) float ThreeDFormat::GetRotationY ( );
__declspec(implementation_key(2156)) void ThreeDFormat::PutRotationY ( float prop );
__declspec(implementation_key(2157)) enum Office::MsoTriState ThreeDFormat::GetVisible ( );
__declspec(implementation_key(2158)) void ThreeDFormat::PutVisible ( enum Office::MsoTriState prop );
__declspec(implementation_key(2159)) HRESULT ThreeDFormat::IncrementRotationX ( float Increment );
__declspec(implementation_key(2160)) HRESULT ThreeDFormat::IncrementRotationY ( float Increment );
__declspec(implementation_key(2161)) HRESULT ThreeDFormat::ResetRotation ( );
__declspec(implementation_key(2162)) HRESULT ThreeDFormat::SetExtrusionDirection ( enum Office::MsoPresetExtrusionDirection PresetExtrusionDirection );
__declspec(implementation_key(2163)) HRESULT ThreeDFormat::SetThreeDFormat ( enum Office::MsoPresetThreeDFormat PresetThreeDFormat );
__declspec(implementation_key(2164)) HRESULT ThreeDFormat::SetPresetCamera ( enum Office::MsoPresetCamera PresetCamera );
__declspec(implementation_key(2165)) HRESULT ThreeDFormat::IncrementRotationZ ( float Increment );
__declspec(implementation_key(2166)) HRESULT ThreeDFormat::IncrementRotationHorizontal ( float Increment );
__declspec(implementation_key(2167)) HRESULT ThreeDFormat::IncrementRotationVertical ( float Increment );
__declspec(implementation_key(2168)) enum Office::MsoLightRigType ThreeDFormat::GetPresetLighting ( );
__declspec(implementation_key(2169)) void ThreeDFormat::PutPresetLighting ( enum Office::MsoLightRigType prop );
__declspec(implementation_key(2170)) float ThreeDFormat::GetZ ( );
__declspec(implementation_key(2171)) void ThreeDFormat::PutZ ( float prop );
__declspec(implementation_key(2172)) enum Office::MsoBevelType ThreeDFormat::GetBevelTopType ( );
__declspec(implementation_key(2173)) void ThreeDFormat::PutBevelTopType ( enum Office::MsoBevelType prop );
__declspec(implementation_key(2174)) float ThreeDFormat::GetBevelTopInset ( );
__declspec(implementation_key(2175)) void ThreeDFormat::PutBevelTopInset ( float prop );
__declspec(implementation_key(2176)) float ThreeDFormat::GetBevelTopDepth ( );
__declspec(implementation_key(2177)) void ThreeDFormat::PutBevelTopDepth ( float prop );
__declspec(implementation_key(2178)) enum Office::MsoBevelType ThreeDFormat::GetBevelBottomType ( );
__declspec(implementation_key(2179)) void ThreeDFormat::PutBevelBottomType ( enum Office::MsoBevelType prop );
__declspec(implementation_key(2180)) float ThreeDFormat::GetBevelBottomInset ( );
__declspec(implementation_key(2181)) void ThreeDFormat::PutBevelBottomInset ( float prop );
__declspec(implementation_key(2182)) float ThreeDFormat::GetBevelBottomDepth ( );
__declspec(implementation_key(2183)) void ThreeDFormat::PutBevelBottomDepth ( float prop );
__declspec(implementation_key(2184)) enum Office::MsoPresetCamera ThreeDFormat::GetPresetCamera ( );
__declspec(implementation_key(2185)) float ThreeDFormat::GetRotationZ ( );
__declspec(implementation_key(2186)) void ThreeDFormat::PutRotationZ ( float prop );
__declspec(implementation_key(2187)) float ThreeDFormat::GetContourWidth ( );
__declspec(implementation_key(2188)) void ThreeDFormat::PutContourWidth ( float prop );
__declspec(implementation_key(2189)) ColorFormatPtr ThreeDFormat::GetContourColor ( );
__declspec(implementation_key(2190)) float ThreeDFormat::GetFieldOfView ( );
__declspec(implementation_key(2191)) void ThreeDFormat::PutFieldOfView ( float prop );
__declspec(implementation_key(2192)) enum Office::MsoTriState ThreeDFormat::GetProjectText ( );
__declspec(implementation_key(2193)) void ThreeDFormat::PutProjectText ( enum Office::MsoTriState prop );
__declspec(implementation_key(2194)) float ThreeDFormat::GetLightAngle ( );
__declspec(implementation_key(2195)) void ThreeDFormat::PutLightAngle ( float prop );
__declspec(implementation_key(2196)) float GlowFormat::GetRadius ( );
__declspec(implementation_key(2197)) void GlowFormat::PutRadius ( float prop );
__declspec(implementation_key(2198)) ColorFormatPtr GlowFormat::GetColor ( );
__declspec(implementation_key(2199)) _ApplicationPtr Options::GetApplication ( );
__declspec(implementation_key(2200)) long Options::GetCreator ( );
__declspec(implementation_key(2201)) IDispatchPtr Options::GetParent ( );
__declspec(implementation_key(2202)) VARIANT_BOOL Options::GetAllowAccentedUppercase ( );
__declspec(implementation_key(2203)) void Options::PutAllowAccentedUppercase ( VARIANT_BOOL prop );
__declspec(implementation_key(2204)) VARIANT_BOOL Options::GetWPHelp ( );
__declspec(implementation_key(2205)) void Options::PutWPHelp ( VARIANT_BOOL prop );
__declspec(implementation_key(2206)) VARIANT_BOOL Options::GetWPDocNavKeys ( );
__declspec(implementation_key(2207)) void Options::PutWPDocNavKeys ( VARIANT_BOOL prop );
__declspec(implementation_key(2208)) VARIANT_BOOL Options::GetPagination ( );
__declspec(implementation_key(2209)) void Options::PutPagination ( VARIANT_BOOL prop );
__declspec(implementation_key(2210)) VARIANT_BOOL Options::GetBlueScreen ( );
__declspec(implementation_key(2211)) void Options::PutBlueScreen ( VARIANT_BOOL prop );
__declspec(implementation_key(2212)) VARIANT_BOOL Options::GetEnableSound ( );
__declspec(implementation_key(2213)) void Options::PutEnableSound ( VARIANT_BOOL prop );
__declspec(implementation_key(2214)) VARIANT_BOOL Options::GetConfirmConversions ( );
__declspec(implementation_key(2215)) void Options::PutConfirmConversions ( VARIANT_BOOL prop );
__declspec(implementation_key(2216)) VARIANT_BOOL Options::GetUpdateLinksAtOpen ( );
__declspec(implementation_key(2217)) void Options::PutUpdateLinksAtOpen ( VARIANT_BOOL prop );
__declspec(implementation_key(2218)) VARIANT_BOOL Options::GetSendMailAttach ( );
__declspec(implementation_key(2219)) void Options::PutSendMailAttach ( VARIANT_BOOL prop );
__declspec(implementation_key(2220)) enum WdMeasurementUnits Options::GetMeasurementUnit ( );
__declspec(implementation_key(2221)) void Options::PutMeasurementUnit ( enum WdMeasurementUnits prop );
__declspec(implementation_key(2222)) long Options::GetButtonFieldClicks ( );
__declspec(implementation_key(2223)) void Options::PutButtonFieldClicks ( long prop );
__declspec(implementation_key(2224)) VARIANT_BOOL Options::GetShortMenuNames ( );
__declspec(implementation_key(2225)) void Options::PutShortMenuNames ( VARIANT_BOOL prop );
__declspec(implementation_key(2226)) VARIANT_BOOL Options::GetRTFInClipboard ( );
__declspec(implementation_key(2227)) void Options::PutRTFInClipboard ( VARIANT_BOOL prop );
__declspec(implementation_key(2228)) VARIANT_BOOL Options::GetUpdateFieldsAtPrint ( );
__declspec(implementation_key(2229)) void Options::PutUpdateFieldsAtPrint ( VARIANT_BOOL prop );
__declspec(implementation_key(2230)) VARIANT_BOOL Options::GetPrintProperties ( );
__declspec(implementation_key(2231)) void Options::PutPrintProperties ( VARIANT_BOOL prop );
__declspec(implementation_key(2232)) VARIANT_BOOL Options::GetPrintFieldCodes ( );
__declspec(implementation_key(2233)) void Options::PutPrintFieldCodes ( VARIANT_BOOL prop );
__declspec(implementation_key(2234)) VARIANT_BOOL Options::GetPrintComments ( );
__declspec(implementation_key(2235)) void Options::PutPrintComments ( VARIANT_BOOL prop );
__declspec(implementation_key(2236)) VARIANT_BOOL Options::GetPrintHiddenText ( );
__declspec(implementation_key(2237)) void Options::PutPrintHiddenText ( VARIANT_BOOL prop );
__declspec(implementation_key(2238)) VARIANT_BOOL Options::GetEnvelopeFeederInstalled ( );
__declspec(implementation_key(2239)) VARIANT_BOOL Options::GetUpdateLinksAtPrint ( );
__declspec(implementation_key(2240)) void Options::PutUpdateLinksAtPrint ( VARIANT_BOOL prop );
__declspec(implementation_key(2241)) VARIANT_BOOL Options::GetPrintBackground ( );
__declspec(implementation_key(2242)) void Options::PutPrintBackground ( VARIANT_BOOL prop );
__declspec(implementation_key(2243)) VARIANT_BOOL Options::GetPrintDrawingObjects ( );
__declspec(implementation_key(2244)) void Options::PutPrintDrawingObjects ( VARIANT_BOOL prop );
__declspec(implementation_key(2245)) _bstr_t Options::GetDefaultTray ( );
__declspec(implementation_key(2246)) void Options::PutDefaultTray ( _bstr_t prop );
__declspec(implementation_key(2247)) long Options::GetDefaultTrayID ( );
__declspec(implementation_key(2248)) void Options::PutDefaultTrayID ( long prop );
__declspec(implementation_key(2249)) VARIANT_BOOL Options::GetCreateBackup ( );
__declspec(implementation_key(2250)) void Options::PutCreateBackup ( VARIANT_BOOL prop );
__declspec(implementation_key(2251)) VARIANT_BOOL Options::GetAllowFastSave ( );
__declspec(implementation_key(2252)) void Options::PutAllowFastSave ( VARIANT_BOOL prop );
__declspec(implementation_key(2253)) VARIANT_BOOL Options::GetSavePropertiesPrompt ( );
__declspec(implementation_key(2254)) void Options::PutSavePropertiesPrompt ( VARIANT_BOOL prop );
__declspec(implementation_key(2255)) VARIANT_BOOL Options::GetSaveNormalPrompt ( );
__declspec(implementation_key(2256)) void Options::PutSaveNormalPrompt ( VARIANT_BOOL prop );
__declspec(implementation_key(2257)) long Options::GetSaveInterval ( );
__declspec(implementation_key(2258)) void Options::PutSaveInterval ( long prop );
__declspec(implementation_key(2259)) VARIANT_BOOL Options::GetBackgroundSave ( );
__declspec(implementation_key(2260)) void Options::PutBackgroundSave ( VARIANT_BOOL prop );
__declspec(implementation_key(2261)) enum WdInsertedTextMark Options::GetInsertedTextMark ( );
__declspec(implementation_key(2262)) void Options::PutInsertedTextMark ( enum WdInsertedTextMark prop );
__declspec(implementation_key(2263)) enum WdDeletedTextMark Options::GetDeletedTextMark ( );
__declspec(implementation_key(2264)) void Options::PutDeletedTextMark ( enum WdDeletedTextMark prop );
__declspec(implementation_key(2265)) enum WdRevisedLinesMark Options::GetRevisedLinesMark ( );
__declspec(implementation_key(2266)) void Options::PutRevisedLinesMark ( enum WdRevisedLinesMark prop );
__declspec(implementation_key(2267)) enum WdColorIndex Options::GetInsertedTextColor ( );
__declspec(implementation_key(2268)) void Options::PutInsertedTextColor ( enum WdColorIndex prop );
__declspec(implementation_key(2269)) enum WdColorIndex Options::GetDeletedTextColor ( );
__declspec(implementation_key(2270)) void Options::PutDeletedTextColor ( enum WdColorIndex prop );
__declspec(implementation_key(2271)) enum WdColorIndex Options::GetRevisedLinesColor ( );
__declspec(implementation_key(2272)) void Options::PutRevisedLinesColor ( enum WdColorIndex prop );
__declspec(implementation_key(2273)) _bstr_t Options::GetDefaultFilePath ( enum WdDefaultFilePath Path );
__declspec(implementation_key(2274)) void Options::PutDefaultFilePath ( enum WdDefaultFilePath Path, _bstr_t prop );
__declspec(implementation_key(2275)) VARIANT_BOOL Options::GetOvertype ( );
__declspec(implementation_key(2276)) void Options::PutOvertype ( VARIANT_BOOL prop );
__declspec(implementation_key(2277)) VARIANT_BOOL Options::GetReplaceSelection ( );
__declspec(implementation_key(2278)) void Options::PutReplaceSelection ( VARIANT_BOOL prop );
__declspec(implementation_key(2279)) VARIANT_BOOL Options::GetAllowDragAndDrop ( );
__declspec(implementation_key(2280)) void Options::PutAllowDragAndDrop ( VARIANT_BOOL prop );
__declspec(implementation_key(2281)) VARIANT_BOOL Options::GetAutoWordSelection ( );
__declspec(implementation_key(2282)) void Options::PutAutoWordSelection ( VARIANT_BOOL prop );
__declspec(implementation_key(2283)) VARIANT_BOOL Options::GetINSKeyForPaste ( );
__declspec(implementation_key(2284)) void Options::PutINSKeyForPaste ( VARIANT_BOOL prop );
__declspec(implementation_key(2285)) VARIANT_BOOL Options::GetSmartCutPaste ( );
__declspec(implementation_key(2286)) void Options::PutSmartCutPaste ( VARIANT_BOOL prop );
__declspec(implementation_key(2287)) VARIANT_BOOL Options::GetTabIndentKey ( );
__declspec(implementation_key(2288)) void Options::PutTabIndentKey ( VARIANT_BOOL prop );
__declspec(implementation_key(2289)) _bstr_t Options::GetPictureEditor ( );
__declspec(implementation_key(2290)) void Options::PutPictureEditor ( _bstr_t prop );
__declspec(implementation_key(2291)) VARIANT_BOOL Options::GetAnimateScreenMovements ( );
__declspec(implementation_key(2292)) void Options::PutAnimateScreenMovements ( VARIANT_BOOL prop );
__declspec(implementation_key(2293)) VARIANT_BOOL Options::GetVirusProtection ( );
__declspec(implementation_key(2294)) void Options::PutVirusProtection ( VARIANT_BOOL prop );
__declspec(implementation_key(2295)) enum WdRevisedPropertiesMark Options::GetRevisedPropertiesMark ( );
__declspec(implementation_key(2296)) void Options::PutRevisedPropertiesMark ( enum WdRevisedPropertiesMark prop );
__declspec(implementation_key(2297)) enum WdColorIndex Options::GetRevisedPropertiesColor ( );
__declspec(implementation_key(2298)) void Options::PutRevisedPropertiesColor ( enum WdColorIndex prop );
__declspec(implementation_key(2299)) VARIANT_BOOL Options::GetSnapToGrid ( );
__declspec(implementation_key(2300)) void Options::PutSnapToGrid ( VARIANT_BOOL prop );
__declspec(implementation_key(2301)) VARIANT_BOOL Options::GetSnapToShapes ( );
__declspec(implementation_key(2302)) void Options::PutSnapToShapes ( VARIANT_BOOL prop );
__declspec(implementation_key(2303)) float Options::GetGridDistanceHorizontal ( );
__declspec(implementation_key(2304)) void Options::PutGridDistanceHorizontal ( float prop );
__declspec(implementation_key(2305)) float Options::GetGridDistanceVertical ( );
__declspec(implementation_key(2306)) void Options::PutGridDistanceVertical ( float prop );
__declspec(implementation_key(2307)) float Options::GetGridOriginHorizontal ( );
__declspec(implementation_key(2308)) void Options::PutGridOriginHorizontal ( float prop );
__declspec(implementation_key(2309)) float Options::GetGridOriginVertical ( );
__declspec(implementation_key(2310)) void Options::PutGridOriginVertical ( float prop );
__declspec(implementation_key(2311)) VARIANT_BOOL Options::GetInlineConversion ( );
__declspec(implementation_key(2312)) void Options::PutInlineConversion ( VARIANT_BOOL prop );
__declspec(implementation_key(2313)) VARIANT_BOOL Options::GetIMEAutomaticControl ( );
__declspec(implementation_key(2314)) void Options::PutIMEAutomaticControl ( VARIANT_BOOL prop );
__declspec(implementation_key(2315)) VARIANT_BOOL Options::GetAutoFormatApplyHeadings ( );
__declspec(implementation_key(2316)) void Options::PutAutoFormatApplyHeadings ( VARIANT_BOOL prop );
__declspec(implementation_key(2317)) VARIANT_BOOL Options::GetAutoFormatApplyLists ( );
__declspec(implementation_key(2318)) void Options::PutAutoFormatApplyLists ( VARIANT_BOOL prop );
__declspec(implementation_key(2319)) VARIANT_BOOL Options::GetAutoFormatApplyBulletedLists ( );
__declspec(implementation_key(2320)) void Options::PutAutoFormatApplyBulletedLists ( VARIANT_BOOL prop );
__declspec(implementation_key(2321)) VARIANT_BOOL Options::GetAutoFormatApplyOtherParas ( );
__declspec(implementation_key(2322)) void Options::PutAutoFormatApplyOtherParas ( VARIANT_BOOL prop );
__declspec(implementation_key(2323)) VARIANT_BOOL Options::GetAutoFormatReplaceQuotes ( );
__declspec(implementation_key(2324)) void Options::PutAutoFormatReplaceQuotes ( VARIANT_BOOL prop );
__declspec(implementation_key(2325)) VARIANT_BOOL Options::GetAutoFormatReplaceSymbols ( );
__declspec(implementation_key(2326)) void Options::PutAutoFormatReplaceSymbols ( VARIANT_BOOL prop );
__declspec(implementation_key(2327)) VARIANT_BOOL Options::GetAutoFormatReplaceOrdinals ( );
__declspec(implementation_key(2328)) void Options::PutAutoFormatReplaceOrdinals ( VARIANT_BOOL prop );
__declspec(implementation_key(2329)) VARIANT_BOOL Options::GetAutoFormatReplaceFractions ( );
__declspec(implementation_key(2330)) void Options::PutAutoFormatReplaceFractions ( VARIANT_BOOL prop );
__declspec(implementation_key(2331)) VARIANT_BOOL Options::GetAutoFormatReplacePlainTextEmphasis ( );
__declspec(implementation_key(2332)) void Options::PutAutoFormatReplacePlainTextEmphasis ( VARIANT_BOOL prop );
__declspec(implementation_key(2333)) VARIANT_BOOL Options::GetAutoFormatPreserveStyles ( );
__declspec(implementation_key(2334)) void Options::PutAutoFormatPreserveStyles ( VARIANT_BOOL prop );
__declspec(implementation_key(2335)) VARIANT_BOOL Options::GetAutoFormatAsYouTypeApplyHeadings ( );
__declspec(implementation_key(2336)) void Options::PutAutoFormatAsYouTypeApplyHeadings ( VARIANT_BOOL prop );
__declspec(implementation_key(2337)) VARIANT_BOOL Options::GetAutoFormatAsYouTypeApplyBorders ( );
__declspec(implementation_key(2338)) void Options::PutAutoFormatAsYouTypeApplyBorders ( VARIANT_BOOL prop );
__declspec(implementation_key(2339)) VARIANT_BOOL Options::GetAutoFormatAsYouTypeApplyBulletedLists ( );
__declspec(implementation_key(2340)) void Options::PutAutoFormatAsYouTypeApplyBulletedLists ( VARIANT_BOOL prop );
__declspec(implementation_key(2341)) VARIANT_BOOL Options::GetAutoFormatAsYouTypeApplyNumberedLists ( );
__declspec(implementation_key(2342)) void Options::PutAutoFormatAsYouTypeApplyNumberedLists ( VARIANT_BOOL prop );
__declspec(implementation_key(2343)) VARIANT_BOOL Options::GetAutoFormatAsYouTypeReplaceQuotes ( );
__declspec(implementation_key(2344)) void Options::PutAutoFormatAsYouTypeReplaceQuotes ( VARIANT_BOOL prop );
__declspec(implementation_key(2345)) VARIANT_BOOL Options::GetAutoFormatAsYouTypeReplaceSymbols ( );
__declspec(implementation_key(2346)) void Options::PutAutoFormatAsYouTypeReplaceSymbols ( VARIANT_BOOL prop );
__declspec(implementation_key(2347)) VARIANT_BOOL Options::GetAutoFormatAsYouTypeReplaceOrdinals ( );
__declspec(implementation_key(2348)) void Options::PutAutoFormatAsYouTypeReplaceOrdinals ( VARIANT_BOOL prop );
__declspec(implementation_key(2349)) VARIANT_BOOL Options::GetAutoFormatAsYouTypeReplaceFractions ( );
__declspec(implementation_key(2350)) void Options::PutAutoFormatAsYouTypeReplaceFractions ( VARIANT_BOOL prop );
__declspec(implementation_key(2351)) VARIANT_BOOL Options::GetAutoFormatAsYouTypeReplacePlainTextEmphasis ( );
__declspec(implementation_key(2352)) void Options::PutAutoFormatAsYouTypeReplacePlainTextEmphasis ( VARIANT_BOOL prop );
__declspec(implementation_key(2353)) VARIANT_BOOL Options::GetAutoFormatAsYouTypeFormatListItemBeginning ( );
__declspec(implementation_key(2354)) void Options::PutAutoFormatAsYouTypeFormatListItemBeginning ( VARIANT_BOOL prop );
__declspec(implementation_key(2355)) VARIANT_BOOL Options::GetAutoFormatAsYouTypeDefineStyles ( );
__declspec(implementation_key(2356)) void Options::PutAutoFormatAsYouTypeDefineStyles ( VARIANT_BOOL prop );
__declspec(implementation_key(2357)) VARIANT_BOOL Options::GetAutoFormatPlainTextWordMail ( );
__declspec(implementation_key(2358)) void Options::PutAutoFormatPlainTextWordMail ( VARIANT_BOOL prop );
__declspec(implementation_key(2359)) VARIANT_BOOL Options::GetAutoFormatAsYouTypeReplaceHyperlinks ( );
__declspec(implementation_key(2360)) void Options::PutAutoFormatAsYouTypeReplaceHyperlinks ( VARIANT_BOOL prop );
__declspec(implementation_key(2361)) VARIANT_BOOL Options::GetAutoFormatReplaceHyperlinks ( );
__declspec(implementation_key(2362)) void Options::PutAutoFormatReplaceHyperlinks ( VARIANT_BOOL prop );
__declspec(implementation_key(2363)) enum WdColorIndex Options::GetDefaultHighlightColorIndex ( );
__declspec(implementation_key(2364)) void Options::PutDefaultHighlightColorIndex ( enum WdColorIndex prop );
__declspec(implementation_key(2365)) enum WdLineStyle Options::GetDefaultBorderLineStyle ( );
__declspec(implementation_key(2366)) void Options::PutDefaultBorderLineStyle ( enum WdLineStyle prop );
__declspec(implementation_key(2367)) VARIANT_BOOL Options::GetCheckSpellingAsYouType ( );
__declspec(implementation_key(2368)) void Options::PutCheckSpellingAsYouType ( VARIANT_BOOL prop );
__declspec(implementation_key(2369)) VARIANT_BOOL Options::GetCheckGrammarAsYouType ( );
__declspec(implementation_key(2370)) void Options::PutCheckGrammarAsYouType ( VARIANT_BOOL prop );
__declspec(implementation_key(2371)) VARIANT_BOOL Options::GetIgnoreInternetAndFileAddresses ( );
__declspec(implementation_key(2372)) void Options::PutIgnoreInternetAndFileAddresses ( VARIANT_BOOL prop );
__declspec(implementation_key(2373)) VARIANT_BOOL Options::GetShowReadabilityStatistics ( );
__declspec(implementation_key(2374)) void Options::PutShowReadabilityStatistics ( VARIANT_BOOL prop );
__declspec(implementation_key(2375)) VARIANT_BOOL Options::GetIgnoreUppercase ( );
__declspec(implementation_key(2376)) void Options::PutIgnoreUppercase ( VARIANT_BOOL prop );
__declspec(implementation_key(2377)) VARIANT_BOOL Options::GetIgnoreMixedDigits ( );
__declspec(implementation_key(2378)) void Options::PutIgnoreMixedDigits ( VARIANT_BOOL prop );
__declspec(implementation_key(2379)) VARIANT_BOOL Options::GetSuggestFromMainDictionaryOnly ( );
__declspec(implementation_key(2380)) void Options::PutSuggestFromMainDictionaryOnly ( VARIANT_BOOL prop );
__declspec(implementation_key(2381)) VARIANT_BOOL Options::GetSuggestSpellingCorrections ( );
__declspec(implementation_key(2382)) void Options::PutSuggestSpellingCorrections ( VARIANT_BOOL prop );
__declspec(implementation_key(2383)) enum WdLineWidth Options::GetDefaultBorderLineWidth ( );
__declspec(implementation_key(2384)) void Options::PutDefaultBorderLineWidth ( enum WdLineWidth prop );
__declspec(implementation_key(2385)) VARIANT_BOOL Options::GetCheckGrammarWithSpelling ( );
__declspec(implementation_key(2386)) void Options::PutCheckGrammarWithSpelling ( VARIANT_BOOL prop );
__declspec(implementation_key(2387)) enum WdOpenFormat Options::GetDefaultOpenFormat ( );
__declspec(implementation_key(2388)) void Options::PutDefaultOpenFormat ( enum WdOpenFormat prop );
__declspec(implementation_key(2389)) VARIANT_BOOL Options::GetPrintDraft ( );
__declspec(implementation_key(2390)) void Options::PutPrintDraft ( VARIANT_BOOL prop );
__declspec(implementation_key(2391)) VARIANT_BOOL Options::GetPrintReverse ( );
__declspec(implementation_key(2392)) void Options::PutPrintReverse ( VARIANT_BOOL prop );
__declspec(implementation_key(2393)) VARIANT_BOOL Options::GetMapPaperSize ( );
__declspec(implementation_key(2394)) void Options::PutMapPaperSize ( VARIANT_BOOL prop );
__declspec(implementation_key(2395)) VARIANT_BOOL Options::GetAutoFormatAsYouTypeApplyTables ( );
__declspec(implementation_key(2396)) void Options::PutAutoFormatAsYouTypeApplyTables ( VARIANT_BOOL prop );
__declspec(implementation_key(2397)) VARIANT_BOOL Options::GetAutoFormatApplyFirstIndents ( );
__declspec(implementation_key(2398)) void Options::PutAutoFormatApplyFirstIndents ( VARIANT_BOOL prop );
__declspec(implementation_key(2399)) VARIANT_BOOL Options::GetAutoFormatMatchParentheses ( );
__declspec(implementation_key(2400)) void Options::PutAutoFormatMatchParentheses ( VARIANT_BOOL prop );
__declspec(implementation_key(2401)) VARIANT_BOOL Options::GetAutoFormatReplaceFarEastDashes ( );
__declspec(implementation_key(2402)) void Options::PutAutoFormatReplaceFarEastDashes ( VARIANT_BOOL prop );
__declspec(implementation_key(2403)) VARIANT_BOOL Options::GetAutoFormatDeleteAutoSpaces ( );
__declspec(implementation_key(2404)) void Options::PutAutoFormatDeleteAutoSpaces ( VARIANT_BOOL prop );
__declspec(implementation_key(2405)) VARIANT_BOOL Options::GetAutoFormatAsYouTypeApplyFirstIndents ( );
__declspec(implementation_key(2406)) void Options::PutAutoFormatAsYouTypeApplyFirstIndents ( VARIANT_BOOL prop );
__declspec(implementation_key(2407)) VARIANT_BOOL Options::GetAutoFormatAsYouTypeApplyDates ( );
__declspec(implementation_key(2408)) void Options::PutAutoFormatAsYouTypeApplyDates ( VARIANT_BOOL prop );
__declspec(implementation_key(2409)) VARIANT_BOOL Options::GetAutoFormatAsYouTypeApplyClosings ( );
__declspec(implementation_key(2410)) void Options::PutAutoFormatAsYouTypeApplyClosings ( VARIANT_BOOL prop );
__declspec(implementation_key(2411)) VARIANT_BOOL Options::GetAutoFormatAsYouTypeMatchParentheses ( );
__declspec(implementation_key(2412)) void Options::PutAutoFormatAsYouTypeMatchParentheses ( VARIANT_BOOL prop );
__declspec(implementation_key(2413)) VARIANT_BOOL Options::GetAutoFormatAsYouTypeReplaceFarEastDashes ( );
__declspec(implementation_key(2414)) void Options::PutAutoFormatAsYouTypeReplaceFarEastDashes ( VARIANT_BOOL prop );
__declspec(implementation_key(2415)) VARIANT_BOOL Options::GetAutoFormatAsYouTypeDeleteAutoSpaces ( );
__declspec(implementation_key(2416)) void Options::PutAutoFormatAsYouTypeDeleteAutoSpaces ( VARIANT_BOOL prop );
__declspec(implementation_key(2417)) VARIANT_BOOL Options::GetAutoFormatAsYouTypeInsertClosings ( );
__declspec(implementation_key(2418)) void Options::PutAutoFormatAsYouTypeInsertClosings ( VARIANT_BOOL prop );
__declspec(implementation_key(2419)) VARIANT_BOOL Options::GetAutoFormatAsYouTypeAutoLetterWizard ( );
__declspec(implementation_key(2420)) void Options::PutAutoFormatAsYouTypeAutoLetterWizard ( VARIANT_BOOL prop );
__declspec(implementation_key(2421)) VARIANT_BOOL Options::GetAutoFormatAsYouTypeInsertOvers ( );
__declspec(implementation_key(2422)) void Options::PutAutoFormatAsYouTypeInsertOvers ( VARIANT_BOOL prop );
__declspec(implementation_key(2423)) VARIANT_BOOL Options::GetDisplayGridLines ( );
__declspec(implementation_key(2424)) void Options::PutDisplayGridLines ( VARIANT_BOOL prop );
__declspec(implementation_key(2425)) VARIANT_BOOL Options::GetMatchFuzzyCase ( );
__declspec(implementation_key(2426)) void Options::PutMatchFuzzyCase ( VARIANT_BOOL prop );
__declspec(implementation_key(2427)) VARIANT_BOOL Options::GetMatchFuzzyByte ( );
__declspec(implementation_key(2428)) void Options::PutMatchFuzzyByte ( VARIANT_BOOL prop );
__declspec(implementation_key(2429)) VARIANT_BOOL Options::GetMatchFuzzyHiragana ( );
__declspec(implementation_key(2430)) void Options::PutMatchFuzzyHiragana ( VARIANT_BOOL prop );
__declspec(implementation_key(2431)) VARIANT_BOOL Options::GetMatchFuzzySmallKana ( );
__declspec(implementation_key(2432)) void Options::PutMatchFuzzySmallKana ( VARIANT_BOOL prop );
__declspec(implementation_key(2433)) VARIANT_BOOL Options::GetMatchFuzzyDash ( );
__declspec(implementation_key(2434)) void Options::PutMatchFuzzyDash ( VARIANT_BOOL prop );
__declspec(implementation_key(2435)) VARIANT_BOOL Options::GetMatchFuzzyIterationMark ( );
__declspec(implementation_key(2436)) void Options::PutMatchFuzzyIterationMark ( VARIANT_BOOL prop );
__declspec(implementation_key(2437)) VARIANT_BOOL Options::GetMatchFuzzyKanji ( );
__declspec(implementation_key(2438)) void Options::PutMatchFuzzyKanji ( VARIANT_BOOL prop );
__declspec(implementation_key(2439)) VARIANT_BOOL Options::GetMatchFuzzyOldKana ( );
__declspec(implementation_key(2440)) void Options::PutMatchFuzzyOldKana ( VARIANT_BOOL prop );
__declspec(implementation_key(2441)) VARIANT_BOOL Options::GetMatchFuzzyProlongedSoundMark ( );
__declspec(implementation_key(2442)) void Options::PutMatchFuzzyProlongedSoundMark ( VARIANT_BOOL prop );
__declspec(implementation_key(2443)) VARIANT_BOOL Options::GetMatchFuzzyDZ ( );
__declspec(implementation_key(2444)) void Options::PutMatchFuzzyDZ ( VARIANT_BOOL prop );
__declspec(implementation_key(2445)) VARIANT_BOOL Options::GetMatchFuzzyBV ( );
__declspec(implementation_key(2446)) void Options::PutMatchFuzzyBV ( VARIANT_BOOL prop );
__declspec(implementation_key(2447)) VARIANT_BOOL Options::GetMatchFuzzyTC ( );
__declspec(implementation_key(2448)) void Options::PutMatchFuzzyTC ( VARIANT_BOOL prop );
__declspec(implementation_key(2449)) VARIANT_BOOL Options::GetMatchFuzzyHF ( );
__declspec(implementation_key(2450)) void Options::PutMatchFuzzyHF ( VARIANT_BOOL prop );
__declspec(implementation_key(2451)) VARIANT_BOOL Options::GetMatchFuzzyZJ ( );
__declspec(implementation_key(2452)) void Options::PutMatchFuzzyZJ ( VARIANT_BOOL prop );
__declspec(implementation_key(2453)) VARIANT_BOOL Options::GetMatchFuzzyAY ( );
__declspec(implementation_key(2454)) void Options::PutMatchFuzzyAY ( VARIANT_BOOL prop );
__declspec(implementation_key(2455)) VARIANT_BOOL Options::GetMatchFuzzyKiKu ( );
__declspec(implementation_key(2456)) void Options::PutMatchFuzzyKiKu ( VARIANT_BOOL prop );
__declspec(implementation_key(2457)) VARIANT_BOOL Options::GetMatchFuzzyPunctuation ( );
__declspec(implementation_key(2458)) void Options::PutMatchFuzzyPunctuation ( VARIANT_BOOL prop );
__declspec(implementation_key(2459)) VARIANT_BOOL Options::GetMatchFuzzySpace ( );
__declspec(implementation_key(2460)) void Options::PutMatchFuzzySpace ( VARIANT_BOOL prop );
__declspec(implementation_key(2461)) VARIANT_BOOL Options::GetApplyFarEastFontsToAscii ( );
__declspec(implementation_key(2462)) void Options::PutApplyFarEastFontsToAscii ( VARIANT_BOOL prop );
__declspec(implementation_key(2463)) VARIANT_BOOL Options::GetConvertHighAnsiToFarEast ( );
__declspec(implementation_key(2464)) void Options::PutConvertHighAnsiToFarEast ( VARIANT_BOOL prop );
__declspec(implementation_key(2465)) VARIANT_BOOL Options::GetPrintOddPagesInAscendingOrder ( );
__declspec(implementation_key(2466)) void Options::PutPrintOddPagesInAscendingOrder ( VARIANT_BOOL prop );
__declspec(implementation_key(2467)) VARIANT_BOOL Options::GetPrintEvenPagesInAscendingOrder ( );
__declspec(implementation_key(2468)) void Options::PutPrintEvenPagesInAscendingOrder ( VARIANT_BOOL prop );
__declspec(implementation_key(2469)) enum WdColorIndex Options::GetDefaultBorderColorIndex ( );
__declspec(implementation_key(2470)) void Options::PutDefaultBorderColorIndex ( enum WdColorIndex prop );
__declspec(implementation_key(2471)) VARIANT_BOOL Options::GetEnableMisusedWordsDictionary ( );
__declspec(implementation_key(2472)) void Options::PutEnableMisusedWordsDictionary ( VARIANT_BOOL prop );
__declspec(implementation_key(2473)) VARIANT_BOOL Options::GetAllowCombinedAuxiliaryForms ( );
__declspec(implementation_key(2474)) void Options::PutAllowCombinedAuxiliaryForms ( VARIANT_BOOL prop );
__declspec(implementation_key(2475)) VARIANT_BOOL Options::GetHangulHanjaFastConversion ( );
__declspec(implementation_key(2476)) void Options::PutHangulHanjaFastConversion ( VARIANT_BOOL prop );
__declspec(implementation_key(2477)) VARIANT_BOOL Options::GetCheckHangulEndings ( );
__declspec(implementation_key(2478)) void Options::PutCheckHangulEndings ( VARIANT_BOOL prop );
__declspec(implementation_key(2479)) VARIANT_BOOL Options::GetEnableHangulHanjaRecentOrdering ( );
__declspec(implementation_key(2480)) void Options::PutEnableHangulHanjaRecentOrdering ( VARIANT_BOOL prop );
__declspec(implementation_key(2481)) enum WdMultipleWordConversionsMode Options::GetMultipleWordConversionsMode ( );
__declspec(implementation_key(2482)) void Options::PutMultipleWordConversionsMode ( enum WdMultipleWordConversionsMode prop );
__declspec(implementation_key(2483)) HRESULT Options::SetWPHelpOptions ( VARIANT * CommandKeyHelp, VARIANT * DocNavigationKeys, VARIANT * MouseSimulation, VARIANT * DemoGuidance, VARIANT * DemoSpeed, VARIANT * HelpType );
__declspec(implementation_key(2484)) enum WdColor Options::GetDefaultBorderColor ( );
__declspec(implementation_key(2485)) void Options::PutDefaultBorderColor ( enum WdColor prop );
__declspec(implementation_key(2486)) VARIANT_BOOL Options::GetAllowPixelUnits ( );
__declspec(implementation_key(2487)) void Options::PutAllowPixelUnits ( VARIANT_BOOL prop );
__declspec(implementation_key(2488)) VARIANT_BOOL Options::GetUseCharacterUnit ( );
__declspec(implementation_key(2489)) void Options::PutUseCharacterUnit ( VARIANT_BOOL prop );
__declspec(implementation_key(2490)) VARIANT_BOOL Options::GetAllowCompoundNounProcessing ( );
__declspec(implementation_key(2491)) void Options::PutAllowCompoundNounProcessing ( VARIANT_BOOL prop );
__declspec(implementation_key(2492)) VARIANT_BOOL Options::GetAutoKeyboardSwitching ( );
__declspec(implementation_key(2493)) void Options::PutAutoKeyboardSwitching ( VARIANT_BOOL prop );
__declspec(implementation_key(2494)) enum WdDocumentViewDirection Options::GetDocumentViewDirection ( );
__declspec(implementation_key(2495)) void Options::PutDocumentViewDirection ( enum WdDocumentViewDirection prop );
__declspec(implementation_key(2496)) enum WdArabicNumeral Options::GetArabicNumeral ( );
__declspec(implementation_key(2497)) void Options::PutArabicNumeral ( enum WdArabicNumeral prop );
__declspec(implementation_key(2498)) enum WdMonthNames Options::GetMonthNames ( );
__declspec(implementation_key(2499)) void Options::PutMonthNames ( enum WdMonthNames prop );
__declspec(implementation_key(2500)) enum WdCursorMovement Options::GetCursorMovement ( );
__declspec(implementation_key(2501)) void Options::PutCursorMovement ( enum WdCursorMovement prop );
__declspec(implementation_key(2502)) enum WdVisualSelection Options::GetVisualSelection ( );
__declspec(implementation_key(2503)) void Options::PutVisualSelection ( enum WdVisualSelection prop );
__declspec(implementation_key(2504)) VARIANT_BOOL Options::GetShowDiacritics ( );
__declspec(implementation_key(2505)) void Options::PutShowDiacritics ( VARIANT_BOOL prop );
__declspec(implementation_key(2506)) VARIANT_BOOL Options::GetShowControlCharacters ( );
__declspec(implementation_key(2507)) void Options::PutShowControlCharacters ( VARIANT_BOOL prop );
__declspec(implementation_key(2508)) VARIANT_BOOL Options::GetAddControlCharacters ( );
__declspec(implementation_key(2509)) void Options::PutAddControlCharacters ( VARIANT_BOOL prop );
__declspec(implementation_key(2510)) VARIANT_BOOL Options::GetAddBiDirectionalMarksWhenSavingTextFile ( );
__declspec(implementation_key(2511)) void Options::PutAddBiDirectionalMarksWhenSavingTextFile ( VARIANT_BOOL prop );
__declspec(implementation_key(2512)) VARIANT_BOOL Options::GetStrictInitialAlefHamza ( );
__declspec(implementation_key(2513)) void Options::PutStrictInitialAlefHamza ( VARIANT_BOOL prop );
__declspec(implementation_key(2514)) VARIANT_BOOL Options::GetStrictFinalYaa ( );
__declspec(implementation_key(2515)) void Options::PutStrictFinalYaa ( VARIANT_BOOL prop );
__declspec(implementation_key(2516)) enum WdHebSpellStart Options::GetHebrewMode ( );
__declspec(implementation_key(2517)) void Options::PutHebrewMode ( enum WdHebSpellStart prop );
__declspec(implementation_key(2518)) enum WdAraSpeller Options::GetArabicMode ( );
__declspec(implementation_key(2519)) void Options::PutArabicMode ( enum WdAraSpeller prop );
__declspec(implementation_key(2520)) VARIANT_BOOL Options::GetAllowClickAndTypeMouse ( );
__declspec(implementation_key(2521)) void Options::PutAllowClickAndTypeMouse ( VARIANT_BOOL prop );
__declspec(implementation_key(2522)) VARIANT_BOOL Options::GetUseGermanSpellingReform ( );
__declspec(implementation_key(2523)) void Options::PutUseGermanSpellingReform ( VARIANT_BOOL prop );
__declspec(implementation_key(2524)) enum WdHighAnsiText Options::GetInterpretHighAnsi ( );
__declspec(implementation_key(2525)) void Options::PutInterpretHighAnsi ( enum WdHighAnsiText prop );
__declspec(implementation_key(2526)) VARIANT_BOOL Options::GetAddHebDoubleQuote ( );
__declspec(implementation_key(2527)) void Options::PutAddHebDoubleQuote ( VARIANT_BOOL prop );
__declspec(implementation_key(2528)) VARIANT_BOOL Options::GetUseDiffDiacColor ( );
__declspec(implementation_key(2529)) void Options::PutUseDiffDiacColor ( VARIANT_BOOL prop );
__declspec(implementation_key(2530)) enum WdColor Options::GetDiacriticColorVal ( );
__declspec(implementation_key(2531)) void Options::PutDiacriticColorVal ( enum WdColor prop );
__declspec(implementation_key(2532)) VARIANT_BOOL Options::GetOptimizeForWord97byDefault ( );
__declspec(implementation_key(2533)) void Options::PutOptimizeForWord97byDefault ( VARIANT_BOOL prop );
__declspec(implementation_key(2534)) VARIANT_BOOL Options::GetLocalNetworkFile ( );
__declspec(implementation_key(2535)) void Options::PutLocalNetworkFile ( VARIANT_BOOL prop );
__declspec(implementation_key(2536)) VARIANT_BOOL Options::GetTypeNReplace ( );
__declspec(implementation_key(2537)) void Options::PutTypeNReplace ( VARIANT_BOOL prop );
__declspec(implementation_key(2538)) VARIANT_BOOL Options::GetSequenceCheck ( );
__declspec(implementation_key(2539)) void Options::PutSequenceCheck ( VARIANT_BOOL prop );
__declspec(implementation_key(2540)) VARIANT_BOOL Options::GetBackgroundOpen ( );
__declspec(implementation_key(2541)) void Options::PutBackgroundOpen ( VARIANT_BOOL prop );
__declspec(implementation_key(2542)) VARIANT_BOOL Options::GetDisableFeaturesbyDefault ( );
__declspec(implementation_key(2543)) void Options::PutDisableFeaturesbyDefault ( VARIANT_BOOL prop );
__declspec(implementation_key(2544)) VARIANT_BOOL Options::GetPasteAdjustWordSpacing ( );
__declspec(implementation_key(2545)) void Options::PutPasteAdjustWordSpacing ( VARIANT_BOOL prop );
__declspec(implementation_key(2546)) VARIANT_BOOL Options::GetPasteAdjustParagraphSpacing ( );
__declspec(implementation_key(2547)) void Options::PutPasteAdjustParagraphSpacing ( VARIANT_BOOL prop );
__declspec(implementation_key(2548)) VARIANT_BOOL Options::GetPasteAdjustTableFormatting ( );
__declspec(implementation_key(2549)) void Options::PutPasteAdjustTableFormatting ( VARIANT_BOOL prop );
__declspec(implementation_key(2550)) VARIANT_BOOL Options::GetPasteSmartStyleBehavior ( );
__declspec(implementation_key(2551)) void Options::PutPasteSmartStyleBehavior ( VARIANT_BOOL prop );
__declspec(implementation_key(2552)) VARIANT_BOOL Options::GetPasteMergeFromPPT ( );
__declspec(implementation_key(2553)) void Options::PutPasteMergeFromPPT ( VARIANT_BOOL prop );
__declspec(implementation_key(2554)) VARIANT_BOOL Options::GetPasteMergeFromXL ( );
__declspec(implementation_key(2555)) void Options::PutPasteMergeFromXL ( VARIANT_BOOL prop );
__declspec(implementation_key(2556)) VARIANT_BOOL Options::GetCtrlClickHyperlinkToOpen ( );
__declspec(implementation_key(2557)) void Options::PutCtrlClickHyperlinkToOpen ( VARIANT_BOOL prop );
__declspec(implementation_key(2558)) enum WdWrapTypeMerged Options::GetPictureWrapType ( );
__declspec(implementation_key(2559)) void Options::PutPictureWrapType ( enum WdWrapTypeMerged prop );
__declspec(implementation_key(2560)) enum WdDisableFeaturesIntroducedAfter Options::GetDisableFeaturesIntroducedAfterbyDefault ( );
__declspec(implementation_key(2561)) void Options::PutDisableFeaturesIntroducedAfterbyDefault ( enum WdDisableFeaturesIntroducedAfter prop );
__declspec(implementation_key(2562)) VARIANT_BOOL Options::GetPasteSmartCutPaste ( );
__declspec(implementation_key(2563)) void Options::PutPasteSmartCutPaste ( VARIANT_BOOL prop );
__declspec(implementation_key(2564)) VARIANT_BOOL Options::GetDisplayPasteOptions ( );
__declspec(implementation_key(2565)) void Options::PutDisplayPasteOptions ( VARIANT_BOOL prop );
__declspec(implementation_key(2566)) VARIANT_BOOL Options::GetPromptUpdateStyle ( );
__declspec(implementation_key(2567)) void Options::PutPromptUpdateStyle ( VARIANT_BOOL prop );
__declspec(implementation_key(2568)) _bstr_t Options::GetDefaultEPostageApp ( );
__declspec(implementation_key(2569)) void Options::PutDefaultEPostageApp ( _bstr_t prop );
__declspec(implementation_key(2570)) enum Office::MsoEncoding Options::GetDefaultTextEncoding ( );
__declspec(implementation_key(2571)) void Options::PutDefaultTextEncoding ( enum Office::MsoEncoding prop );
__declspec(implementation_key(2572)) VARIANT_BOOL Options::GetLabelSmartTags ( );
__declspec(implementation_key(2573)) void Options::PutLabelSmartTags ( VARIANT_BOOL prop );
__declspec(implementation_key(2574)) VARIANT_BOOL Options::GetDisplaySmartTagButtons ( );
__declspec(implementation_key(2575)) void Options::PutDisplaySmartTagButtons ( VARIANT_BOOL prop );
__declspec(implementation_key(2576)) VARIANT_BOOL Options::GetWarnBeforeSavingPrintingSendingMarkup ( );
__declspec(implementation_key(2577)) void Options::PutWarnBeforeSavingPrintingSendingMarkup ( VARIANT_BOOL prop );
__declspec(implementation_key(2578)) VARIANT_BOOL Options::GetStoreRSIDOnSave ( );
__declspec(implementation_key(2579)) void Options::PutStoreRSIDOnSave ( VARIANT_BOOL prop );
__declspec(implementation_key(2580)) VARIANT_BOOL Options::GetShowFormatError ( );
__declspec(implementation_key(2581)) void Options::PutShowFormatError ( VARIANT_BOOL prop );
__declspec(implementation_key(2582)) VARIANT_BOOL Options::GetFormatScanning ( );
__declspec(implementation_key(2583)) void Options::PutFormatScanning ( VARIANT_BOOL prop );
__declspec(implementation_key(2584)) VARIANT_BOOL Options::GetPasteMergeLists ( );
__declspec(implementation_key(2585)) void Options::PutPasteMergeLists ( VARIANT_BOOL prop );
__declspec(implementation_key(2586)) VARIANT_BOOL Options::GetAutoCreateNewDrawings ( );
__declspec(implementation_key(2587)) void Options::PutAutoCreateNewDrawings ( VARIANT_BOOL prop );
__declspec(implementation_key(2588)) VARIANT_BOOL Options::GetSmartParaSelection ( );
__declspec(implementation_key(2589)) void Options::PutSmartParaSelection ( VARIANT_BOOL prop );
__declspec(implementation_key(2590)) enum WdRevisionsBalloonPrintOrientation Options::GetRevisionsBalloonPrintOrientation ( );
__declspec(implementation_key(2591)) void Options::PutRevisionsBalloonPrintOrientation ( enum WdRevisionsBalloonPrintOrientation prop );
__declspec(implementation_key(2592)) enum WdColorIndex Options::GetCommentsColor ( );
__declspec(implementation_key(2593)) void Options::PutCommentsColor ( enum WdColorIndex prop );
__declspec(implementation_key(2594)) VARIANT_BOOL Options::GetPrintXMLTag ( );
__declspec(implementation_key(2595)) void Options::PutPrintXMLTag ( VARIANT_BOOL prop );
__declspec(implementation_key(2596)) VARIANT_BOOL Options::GetPrintBackgrounds ( );
__declspec(implementation_key(2597)) void Options::PutPrintBackgrounds ( VARIANT_BOOL prop );
__declspec(implementation_key(2598)) VARIANT_BOOL Options::GetAllowReadingMode ( );
__declspec(implementation_key(2599)) void Options::PutAllowReadingMode ( VARIANT_BOOL prop );
__declspec(implementation_key(2600)) VARIANT_BOOL Options::GetShowMarkupOpenSave ( );
__declspec(implementation_key(2601)) void Options::PutShowMarkupOpenSave ( VARIANT_BOOL prop );
__declspec(implementation_key(2602)) VARIANT_BOOL Options::GetSmartCursoring ( );
__declspec(implementation_key(2603)) void Options::PutSmartCursoring ( VARIANT_BOOL prop );
__declspec(implementation_key(2604)) enum WdMoveToTextMark Options::GetMoveToTextMark ( );
__declspec(implementation_key(2605)) void Options::PutMoveToTextMark ( enum WdMoveToTextMark prop );
__declspec(implementation_key(2606)) enum WdMoveFromTextMark Options::GetMoveFromTextMark ( );
__declspec(implementation_key(2607)) void Options::PutMoveFromTextMark ( enum WdMoveFromTextMark prop );
__declspec(implementation_key(2608)) _bstr_t Options::GetBibliographyStyle ( );
__declspec(implementation_key(2609)) void Options::PutBibliographyStyle ( _bstr_t prop );
__declspec(implementation_key(2610)) _bstr_t Options::GetBibliographySort ( );
__declspec(implementation_key(2611)) void Options::PutBibliographySort ( _bstr_t prop );
__declspec(implementation_key(2612)) enum WdCellColor Options::GetInsertedCellColor ( );
__declspec(implementation_key(2613)) void Options::PutInsertedCellColor ( enum WdCellColor prop );
__declspec(implementation_key(2614)) enum WdCellColor Options::GetDeletedCellColor ( );
__declspec(implementation_key(2615)) void Options::PutDeletedCellColor ( enum WdCellColor prop );
__declspec(implementation_key(2616)) enum WdCellColor Options::GetMergedCellColor ( );
__declspec(implementation_key(2617)) void Options::PutMergedCellColor ( enum WdCellColor prop );
__declspec(implementation_key(2618)) enum WdCellColor Options::GetSplitCellColor ( );
__declspec(implementation_key(2619)) void Options::PutSplitCellColor ( enum WdCellColor prop );
__declspec(implementation_key(2620)) VARIANT_BOOL Options::GetShowSelectionFloaties ( );
__declspec(implementation_key(2621)) void Options::PutShowSelectionFloaties ( VARIANT_BOOL prop );
__declspec(implementation_key(2622)) VARIANT_BOOL Options::GetShowMenuFloaties ( );
__declspec(implementation_key(2623)) void Options::PutShowMenuFloaties ( VARIANT_BOOL prop );
__declspec(implementation_key(2624)) VARIANT_BOOL Options::GetShowDevTools ( );
__declspec(implementation_key(2625)) void Options::PutShowDevTools ( VARIANT_BOOL prop );
__declspec(implementation_key(2626)) VARIANT_BOOL Options::GetEnableLivePreview ( );
__declspec(implementation_key(2627)) void Options::PutEnableLivePreview ( VARIANT_BOOL prop );
__declspec(implementation_key(2628)) VARIANT_BOOL Options::GetOMathAutoBuildUp ( );
__declspec(implementation_key(2629)) void Options::PutOMathAutoBuildUp ( VARIANT_BOOL prop );
__declspec(implementation_key(2630)) VARIANT_BOOL Options::GetAlwaysUseClearType ( );
__declspec(implementation_key(2631)) void Options::PutAlwaysUseClearType ( VARIANT_BOOL prop );
__declspec(implementation_key(2632)) enum WdPasteOptions Options::GetPasteFormatWithinDocument ( );
__declspec(implementation_key(2633)) void Options::PutPasteFormatWithinDocument ( enum WdPasteOptions prop );
__declspec(implementation_key(2634)) enum WdPasteOptions Options::GetPasteFormatBetweenDocuments ( );
__declspec(implementation_key(2635)) void Options::PutPasteFormatBetweenDocuments ( enum WdPasteOptions prop );
__declspec(implementation_key(2636)) enum WdPasteOptions Options::GetPasteFormatBetweenStyledDocuments ( );
__declspec(implementation_key(2637)) void Options::PutPasteFormatBetweenStyledDocuments ( enum WdPasteOptions prop );
__declspec(implementation_key(2638)) enum WdPasteOptions Options::GetPasteFormatFromExternalSource ( );
__declspec(implementation_key(2639)) void Options::PutPasteFormatFromExternalSource ( enum WdPasteOptions prop );
__declspec(implementation_key(2640)) VARIANT_BOOL Options::GetPasteOptionKeepBulletsAndNumbers ( );
__declspec(implementation_key(2641)) void Options::PutPasteOptionKeepBulletsAndNumbers ( VARIANT_BOOL prop );
__declspec(implementation_key(2642)) VARIANT_BOOL Options::GetINSKeyForOvertype ( );
__declspec(implementation_key(2643)) void Options::PutINSKeyForOvertype ( VARIANT_BOOL prop );
__declspec(implementation_key(2644)) VARIANT_BOOL Options::GetRepeatWord ( );
__declspec(implementation_key(2645)) void Options::PutRepeatWord ( VARIANT_BOOL prop );
__declspec(implementation_key(2646)) enum WdFrenchSpeller Options::GetFrenchReform ( );
__declspec(implementation_key(2647)) void Options::PutFrenchReform ( enum WdFrenchSpeller prop );
__declspec(implementation_key(2648)) VARIANT_BOOL Options::GetContextualSpeller ( );
__declspec(implementation_key(2649)) void Options::PutContextualSpeller ( VARIANT_BOOL prop );
__declspec(implementation_key(2650)) enum WdColorIndex Options::GetMoveToTextColor ( );
__declspec(implementation_key(2651)) void Options::PutMoveToTextColor ( enum WdColorIndex prop );
__declspec(implementation_key(2652)) enum WdColorIndex Options::GetMoveFromTextColor ( );
__declspec(implementation_key(2653)) void Options::PutMoveFromTextColor ( enum WdColorIndex prop );
__declspec(implementation_key(2654)) VARIANT_BOOL Options::GetOMathCopyLF ( );
__declspec(implementation_key(2655)) void Options::PutOMathCopyLF ( VARIANT_BOOL prop );
__declspec(implementation_key(2656)) VARIANT_BOOL Options::GetUseNormalStyleForList ( );
__declspec(implementation_key(2657)) void Options::PutUseNormalStyleForList ( VARIANT_BOOL prop );
__declspec(implementation_key(2658)) VARIANT_BOOL Options::GetAllowOpenInDraftView ( );
__declspec(implementation_key(2659)) void Options::PutAllowOpenInDraftView ( VARIANT_BOOL prop );
__declspec(implementation_key(2660)) VARIANT_BOOL Options::GetEnableLegacyIMEMode ( );
__declspec(implementation_key(2661)) void Options::PutEnableLegacyIMEMode ( VARIANT_BOOL prop );
__declspec(implementation_key(2662)) VARIANT_BOOL Options::GetDoNotPromptForConvert ( );
__declspec(implementation_key(2663)) void Options::PutDoNotPromptForConvert ( VARIANT_BOOL prop );
__declspec(implementation_key(2664)) VARIANT_BOOL Options::GetPrecisePositioning ( );
__declspec(implementation_key(2665)) void Options::PutPrecisePositioning ( VARIANT_BOOL prop );
__declspec(implementation_key(2666)) _ApplicationPtr _Application::GetApplication ( );
__declspec(implementation_key(2667)) long _Application::GetCreator ( );
__declspec(implementation_key(2668)) IDispatchPtr _Application::GetParent ( );
__declspec(implementation_key(2669)) _bstr_t _Application::GetName ( );
__declspec(implementation_key(2670)) DocumentsPtr _Application::GetDocuments ( );
__declspec(implementation_key(2671)) WindowsPtr _Application::GetWindows ( );
__declspec(implementation_key(2672)) _DocumentPtr _Application::GetActiveDocument ( );
__declspec(implementation_key(2673)) WindowPtr _Application::GetActiveWindow ( );
__declspec(implementation_key(2674)) SelectionPtr _Application::GetSelection ( );
__declspec(implementation_key(2675)) IDispatchPtr _Application::GetWordBasic ( );
__declspec(implementation_key(2676)) RecentFilesPtr _Application::GetRecentFiles ( );
__declspec(implementation_key(2677)) TemplatePtr _Application::GetNormalTemplate ( );
__declspec(implementation_key(2678)) SystemPtr _Application::GetSystem ( );
__declspec(implementation_key(2679)) AutoCorrectPtr _Application::GetAutoCorrect ( );
__declspec(implementation_key(2680)) FontNamesPtr _Application::GetFontNames ( );
__declspec(implementation_key(2681)) FontNamesPtr _Application::GetLandscapeFontNames ( );
__declspec(implementation_key(2682)) FontNamesPtr _Application::GetPortraitFontNames ( );
__declspec(implementation_key(2683)) LanguagesPtr _Application::GetLanguages ( );
__declspec(implementation_key(2684)) Office::AssistantPtr _Application::GetAssistant ( );
__declspec(implementation_key(2685)) BrowserPtr _Application::GetBrowser ( );
__declspec(implementation_key(2686)) FileConvertersPtr _Application::GetFileConverters ( );
__declspec(implementation_key(2687)) MailingLabelPtr _Application::GetMailingLabel ( );
__declspec(implementation_key(2688)) DialogsPtr _Application::GetDialogs ( );
__declspec(implementation_key(2689)) CaptionLabelsPtr _Application::GetCaptionLabels ( );
__declspec(implementation_key(2690)) AutoCaptionsPtr _Application::GetAutoCaptions ( );
__declspec(implementation_key(2691)) AddInsPtr _Application::GetAddIns ( );
__declspec(implementation_key(2692)) VARIANT_BOOL _Application::GetVisible ( );
__declspec(implementation_key(2693)) void _Application::PutVisible ( VARIANT_BOOL prop );
__declspec(implementation_key(2694)) _bstr_t _Application::GetVersion ( );
__declspec(implementation_key(2695)) VARIANT_BOOL _Application::GetScreenUpdating ( );
__declspec(implementation_key(2696)) void _Application::PutScreenUpdating ( VARIANT_BOOL prop );
__declspec(implementation_key(2697)) VARIANT_BOOL _Application::GetPrintPreview ( );
__declspec(implementation_key(2698)) void _Application::PutPrintPreview ( VARIANT_BOOL prop );
__declspec(implementation_key(2699)) TasksPtr _Application::GetTasks ( );
__declspec(implementation_key(2700)) VARIANT_BOOL _Application::GetDisplayStatusBar ( );
__declspec(implementation_key(2701)) void _Application::PutDisplayStatusBar ( VARIANT_BOOL prop );
__declspec(implementation_key(2702)) VARIANT_BOOL _Application::GetSpecialMode ( );
__declspec(implementation_key(2703)) long _Application::GetUsableWidth ( );
__declspec(implementation_key(2704)) long _Application::GetUsableHeight ( );
__declspec(implementation_key(2705)) VARIANT_BOOL _Application::GetMathCoprocessorAvailable ( );
__declspec(implementation_key(2706)) VARIANT_BOOL _Application::GetMouseAvailable ( );
__declspec(implementation_key(2707)) _variant_t _Application::GetInternational ( enum WdInternationalIndex Index );
__declspec(implementation_key(2708)) _bstr_t _Application::GetBuild ( );
__declspec(implementation_key(2709)) VARIANT_BOOL _Application::GetCapsLock ( );
__declspec(implementation_key(2710)) VARIANT_BOOL _Application::GetNumLock ( );
__declspec(implementation_key(2711)) _bstr_t _Application::GetUserName ( );
__declspec(implementation_key(2712)) void _Application::PutUserName ( _bstr_t prop );
__declspec(implementation_key(2713)) _bstr_t _Application::GetUserInitials ( );
__declspec(implementation_key(2714)) void _Application::PutUserInitials ( _bstr_t prop );
__declspec(implementation_key(2715)) _bstr_t _Application::GetUserAddress ( );
__declspec(implementation_key(2716)) void _Application::PutUserAddress ( _bstr_t prop );
__declspec(implementation_key(2717)) IDispatchPtr _Application::GetMacroContainer ( );
__declspec(implementation_key(2718)) VARIANT_BOOL _Application::GetDisplayRecentFiles ( );
__declspec(implementation_key(2719)) void _Application::PutDisplayRecentFiles ( VARIANT_BOOL prop );
__declspec(implementation_key(2720)) Office::_CommandBarsPtr _Application::GetCommandBars ( );
__declspec(implementation_key(2721)) SynonymInfoPtr _Application::GetSynonymInfo ( _bstr_t Word, VARIANT * LanguageID );
__declspec(implementation_key(2722)) VBE6::VBEPtr _Application::GetVBE ( );
__declspec(implementation_key(2723)) _bstr_t _Application::GetDefaultSaveFormat ( );
__declspec(implementation_key(2724)) void _Application::PutDefaultSaveFormat ( _bstr_t prop );
__declspec(implementation_key(2725)) ListGalleriesPtr _Application::GetListGalleries ( );
__declspec(implementation_key(2726)) _bstr_t _Application::GetActivePrinter ( );
__declspec(implementation_key(2727)) void _Application::PutActivePrinter ( _bstr_t prop );
__declspec(implementation_key(2728)) TemplatesPtr _Application::GetTemplates ( );
__declspec(implementation_key(2729)) IDispatchPtr _Application::GetCustomizationContext ( );
__declspec(implementation_key(2730)) void _Application::PutCustomizationContext ( IDispatch * prop );
__declspec(implementation_key(2731)) KeyBindingsPtr _Application::GetKeyBindings ( );
__declspec(implementation_key(2732)) KeysBoundToPtr _Application::GetKeysBoundTo ( enum WdKeyCategory KeyCategory, _bstr_t Command, VARIANT * CommandParameter );
__declspec(implementation_key(2733)) KeyBindingPtr _Application::GetFindKey ( long KeyCode, VARIANT * KeyCode2 );
__declspec(implementation_key(2734)) _bstr_t _Application::GetCaption ( );
__declspec(implementation_key(2735)) void _Application::PutCaption ( _bstr_t prop );
__declspec(implementation_key(2736)) _bstr_t _Application::GetPath ( );
__declspec(implementation_key(2737)) VARIANT_BOOL _Application::GetDisplayScrollBars ( );
__declspec(implementation_key(2738)) void _Application::PutDisplayScrollBars ( VARIANT_BOOL prop );
__declspec(implementation_key(2739)) _bstr_t _Application::GetStartupPath ( );
__declspec(implementation_key(2740)) void _Application::PutStartupPath ( _bstr_t prop );
__declspec(implementation_key(2741)) long _Application::GetBackgroundSavingStatus ( );
__declspec(implementation_key(2742)) long _Application::GetBackgroundPrintingStatus ( );
__declspec(implementation_key(2743)) long _Application::GetLeft ( );
__declspec(implementation_key(2744)) void _Application::PutLeft ( long prop );
__declspec(implementation_key(2745)) long _Application::GetTop ( );
__declspec(implementation_key(2746)) void _Application::PutTop ( long prop );
__declspec(implementation_key(2747)) long _Application::GetWidth ( );
__declspec(implementation_key(2748)) void _Application::PutWidth ( long prop );
__declspec(implementation_key(2749)) long _Application::GetHeight ( );
__declspec(implementation_key(2750)) void _Application::PutHeight ( long prop );
__declspec(implementation_key(2751)) enum WdWindowState _Application::GetWindowState ( );
__declspec(implementation_key(2752)) void _Application::PutWindowState ( enum WdWindowState prop );
__declspec(implementation_key(2753)) VARIANT_BOOL _Application::GetDisplayAutoCompleteTips ( );
__declspec(implementation_key(2754)) void _Application::PutDisplayAutoCompleteTips ( VARIANT_BOOL prop );
__declspec(implementation_key(2755)) OptionsPtr _Application::GetOptions ( );
__declspec(implementation_key(2756)) enum WdAlertLevel _Application::GetDisplayAlerts ( );
__declspec(implementation_key(2757)) void _Application::PutDisplayAlerts ( enum WdAlertLevel prop );
__declspec(implementation_key(2758)) DictionariesPtr _Application::GetCustomDictionaries ( );
__declspec(implementation_key(2759)) _bstr_t _Application::GetPathSeparator ( );
__declspec(implementation_key(2760)) void _Application::PutStatusBar ( _bstr_t _arg1 );
__declspec(implementation_key(2761)) VARIANT_BOOL _Application::GetMAPIAvailable ( );
__declspec(implementation_key(2762)) VARIANT_BOOL _Application::GetDisplayScreenTips ( );
__declspec(implementation_key(2763)) void _Application::PutDisplayScreenTips ( VARIANT_BOOL prop );
__declspec(implementation_key(2764)) enum WdEnableCancelKey _Application::GetEnableCancelKey ( );
__declspec(implementation_key(2765)) void _Application::PutEnableCancelKey ( enum WdEnableCancelKey prop );
__declspec(implementation_key(2766)) VARIANT_BOOL _Application::GetUserControl ( );
__declspec(implementation_key(2767)) Office::FileSearchPtr _Application::GetFileSearch ( );
__declspec(implementation_key(2768)) enum WdMailSystem _Application::GetMailSystem ( );
__declspec(implementation_key(2769)) _bstr_t _Application::GetDefaultTableSeparator ( );
__declspec(implementation_key(2770)) void _Application::PutDefaultTableSeparator ( _bstr_t prop );
__declspec(implementation_key(2771)) VARIANT_BOOL _Application::GetShowVisualBasicEditor ( );
__declspec(implementation_key(2772)) void _Application::PutShowVisualBasicEditor ( VARIANT_BOOL prop );
__declspec(implementation_key(2773)) _bstr_t _Application::GetBrowseExtraFileTypes ( );
__declspec(implementation_key(2774)) void _Application::PutBrowseExtraFileTypes ( _bstr_t prop );
__declspec(implementation_key(2775)) VARIANT_BOOL _Application::GetIsObjectValid ( IDispatch * Object );
__declspec(implementation_key(2776)) HangulHanjaConversionDictionariesPtr _Application::GetHangulHanjaDictionaries ( );
__declspec(implementation_key(2777)) MailMessagePtr _Application::GetMailMessage ( );
__declspec(implementation_key(2778)) VARIANT_BOOL _Application::GetFocusInMailHeader ( );
__declspec(implementation_key(2779)) HRESULT _Application::Quit ( VARIANT * SaveChanges, VARIANT * OriginalFormat, VARIANT * RouteDocument );
__declspec(implementation_key(2780)) HRESULT _Application::ScreenRefresh ( );
__declspec(implementation_key(2781)) HRESULT _Application::PrintOutOld ( VARIANT * Background, VARIANT * Append, VARIANT * Range, VARIANT * OutputFileName, VARIANT * From, VARIANT * To, VARIANT * Item, VARIANT * Copies, VARIANT * Pages, VARIANT * PageType, VARIANT * PrintToFile, VARIANT * Collate, VARIANT * FileName, VARIANT * ActivePrinterMacGX, VARIANT * ManualDuplexPrint );
__declspec(implementation_key(2782)) HRESULT _Application::LookupNameProperties ( _bstr_t Name );
__declspec(implementation_key(2783)) HRESULT _Application::SubstituteFont ( _bstr_t UnavailableFont, _bstr_t SubstituteFont );
__declspec(implementation_key(2784)) VARIANT_BOOL _Application::Repeat ( VARIANT * Times );
__declspec(implementation_key(2785)) HRESULT _Application::DDEExecute ( long Channel, _bstr_t Command );
__declspec(implementation_key(2786)) long _Application::DDEInitiate ( _bstr_t App, _bstr_t Topic );
__declspec(implementation_key(2787)) HRESULT _Application::DDEPoke ( long Channel, _bstr_t Item, _bstr_t Data );
__declspec(implementation_key(2788)) _bstr_t _Application::DDERequest ( long Channel, _bstr_t Item );
__declspec(implementation_key(2789)) HRESULT _Application::DDETerminate ( long Channel );
__declspec(implementation_key(2790)) HRESULT _Application::DDETerminateAll ( );
__declspec(implementation_key(2791)) long _Application::BuildKeyCode ( enum WdKey Arg1, VARIANT * Arg2, VARIANT * Arg3, VARIANT * Arg4 );
__declspec(implementation_key(2792)) _bstr_t _Application::KeyString ( long KeyCode, VARIANT * KeyCode2 );
__declspec(implementation_key(2793)) HRESULT _Application::OrganizerCopy ( _bstr_t Source, _bstr_t Destination, _bstr_t Name, enum WdOrganizerObject Object );
__declspec(implementation_key(2794)) HRESULT _Application::OrganizerDelete ( _bstr_t Source, _bstr_t Name, enum WdOrganizerObject Object );
__declspec(implementation_key(2795)) HRESULT _Application::OrganizerRename ( _bstr_t Source, _bstr_t Name, _bstr_t NewName, enum WdOrganizerObject Object );
__declspec(implementation_key(2796)) HRESULT _Application::AddAddress ( SAFEARRAY * * TagID, SAFEARRAY * * Value );
__declspec(implementation_key(2797)) _bstr_t _Application::GetAddress ( VARIANT * Name, VARIANT * AddressProperties, VARIANT * UseAutoText, VARIANT * DisplaySelectDialog, VARIANT * SelectDialog, VARIANT * CheckNamesDialog, VARIANT * RecentAddressesChoice, VARIANT * UpdateRecentAddresses );
__declspec(implementation_key(2798)) VARIANT_BOOL _Application::CheckGrammar ( _bstr_t String );
__declspec(implementation_key(2799)) VARIANT_BOOL _Application::CheckSpelling ( _bstr_t Word, VARIANT * CustomDictionary, VARIANT * IgnoreUppercase, VARIANT * MainDictionary, VARIANT * CustomDictionary2, VARIANT * CustomDictionary3, VARIANT * CustomDictionary4, VARIANT * CustomDictionary5, VARIANT * CustomDictionary6, VARIANT * CustomDictionary7, VARIANT * CustomDictionary8, VARIANT * CustomDictionary9, VARIANT * CustomDictionary10 );
__declspec(implementation_key(2800)) HRESULT _Application::ResetIgnoreAll ( );
__declspec(implementation_key(2801)) SpellingSuggestionsPtr _Application::GetSpellingSuggestions ( _bstr_t Word, VARIANT * CustomDictionary, VARIANT * IgnoreUppercase, VARIANT * MainDictionary, VARIANT * SuggestionMode, VARIANT * CustomDictionary2, VARIANT * CustomDictionary3, VARIANT * CustomDictionary4, VARIANT * CustomDictionary5, VARIANT * CustomDictionary6, VARIANT * CustomDictionary7, VARIANT * CustomDictionary8, VARIANT * CustomDictionary9, VARIANT * CustomDictionary10 );
__declspec(implementation_key(2802)) HRESULT _Application::GoBack ( );
__declspec(implementation_key(2803)) HRESULT _Application::Help ( VARIANT * HelpType );
__declspec(implementation_key(2804)) HRESULT _Application::AutomaticChange ( );
__declspec(implementation_key(2805)) HRESULT _Application::ShowMe ( );
__declspec(implementation_key(2806)) HRESULT _Application::HelpTool ( );
__declspec(implementation_key(2807)) WindowPtr _Application::NewWindow ( );
__declspec(implementation_key(2808)) HRESULT _Application::ListCommands ( VARIANT_BOOL ListAllCommands );
__declspec(implementation_key(2809)) HRESULT _Application::ShowClipboard ( );
__declspec(implementation_key(2810)) HRESULT _Application::OnTime ( VARIANT * When, _bstr_t Name, VARIANT * Tolerance );
__declspec(implementation_key(2811)) HRESULT _Application::NextLetter ( );
__declspec(implementation_key(2812)) short _Application::MountVolume ( _bstr_t Zone, _bstr_t Server, _bstr_t Volume, VARIANT * User, VARIANT * UserPassword, VARIANT * VolumePassword );
__declspec(implementation_key(2813)) _bstr_t _Application::CleanString ( _bstr_t String );
__declspec(implementation_key(2814)) HRESULT _Application::SendFax ( );
__declspec(implementation_key(2815)) HRESULT _Application::ChangeFileOpenDirectory ( _bstr_t Path );
__declspec(implementation_key(2816)) HRESULT _Application::RunOld ( _bstr_t MacroName );
__declspec(implementation_key(2817)) HRESULT _Application::GoForward ( );
__declspec(implementation_key(2818)) HRESULT _Application::Move ( long Left, long Top );
__declspec(implementation_key(2819)) HRESULT _Application::Resize ( long Width, long Height );
__declspec(implementation_key(2820)) float _Application::InchesToPoints ( float Inches );
__declspec(implementation_key(2821)) float _Application::CentimetersToPoints ( float Centimeters );
__declspec(implementation_key(2822)) float _Application::MillimetersToPoints ( float Millimeters );
__declspec(implementation_key(2823)) float _Application::PicasToPoints ( float Picas );
__declspec(implementation_key(2824)) float _Application::LinesToPoints ( float Lines );
__declspec(implementation_key(2825)) float _Application::PointsToInches ( float Points );
__declspec(implementation_key(2826)) float _Application::PointsToCentimeters ( float Points );
__declspec(implementation_key(2827)) float _Application::PointsToMillimeters ( float Points );
__declspec(implementation_key(2828)) float _Application::PointsToPicas ( float Points );
__declspec(implementation_key(2829)) float _Application::PointsToLines ( float Points );
__declspec(implementation_key(2830)) HRESULT _Application::Activate ( );
__declspec(implementation_key(2831)) float _Application::PointsToPixels ( float Points, VARIANT * fVertical );
__declspec(implementation_key(2832)) float _Application::PixelsToPoints ( float Pixels, VARIANT * fVertical );
__declspec(implementation_key(2833)) HRESULT _Application::KeyboardLatin ( );
__declspec(implementation_key(2834)) HRESULT _Application::KeyboardBidi ( );
__declspec(implementation_key(2835)) HRESULT _Application::ToggleKeyboard ( );
__declspec(implementation_key(2836)) long _Application::Keyboard ( long LangId );
__declspec(implementation_key(2837)) _bstr_t _Application::ProductCode ( );
__declspec(implementation_key(2838)) DefaultWebOptionsPtr _Application::DefaultWebOptions ( );
__declspec(implementation_key(2839)) HRESULT _Application::DiscussionSupport ( VARIANT * Range, VARIANT * cid, VARIANT * piCSE );
__declspec(implementation_key(2840)) HRESULT _Application::SetDefaultTheme ( _bstr_t Name, enum WdDocumentMedium DocumentType );
__declspec(implementation_key(2841)) _bstr_t _Application::GetDefaultTheme ( enum WdDocumentMedium DocumentType );
__declspec(implementation_key(2842)) EmailOptionsPtr _Application::GetEmailOptions ( );
__declspec(implementation_key(2843)) enum Office::MsoLanguageID _Application::GetLanguage ( );
__declspec(implementation_key(2844)) Office::COMAddInsPtr _Application::GetCOMAddIns ( );
__declspec(implementation_key(2845)) VARIANT_BOOL _Application::GetCheckLanguage ( );
__declspec(implementation_key(2846)) void _Application::PutCheckLanguage ( VARIANT_BOOL prop );
__declspec(implementation_key(2847)) Office::LanguageSettingsPtr _Application::GetLanguageSettings ( );
__declspec(implementation_key(2848)) VARIANT_BOOL _Application::GetDummy1 ( );
__declspec(implementation_key(2849)) Office::AnswerWizardPtr _Application::GetAnswerWizard ( );
__declspec(implementation_key(2850)) enum Office::MsoFeatureInstall _Application::GetFeatureInstall ( );
__declspec(implementation_key(2851)) void _Application::PutFeatureInstall ( enum Office::MsoFeatureInstall prop );
__declspec(implementation_key(2852)) HRESULT _Application::PrintOut2000 ( VARIANT * Background, VARIANT * Append, VARIANT * Range, VARIANT * OutputFileName, VARIANT * From, VARIANT * To, VARIANT * Item, VARIANT * Copies, VARIANT * Pages, VARIANT * PageType, VARIANT * PrintToFile, VARIANT * Collate, VARIANT * FileName, VARIANT * ActivePrinterMacGX, VARIANT * ManualDuplexPrint, VARIANT * PrintZoomColumn, VARIANT * PrintZoomRow, VARIANT * PrintZoomPaperWidth, VARIANT * PrintZoomPaperHeight );
__declspec(implementation_key(2853)) _variant_t _Application::Run ( _bstr_t MacroName, VARIANT * varg1, VARIANT * varg2, VARIANT * varg3, VARIANT * varg4, VARIANT * varg5, VARIANT * varg6, VARIANT * varg7, VARIANT * varg8, VARIANT * varg9, VARIANT * varg10, VARIANT * varg11, VARIANT * varg12, VARIANT * varg13, VARIANT * varg14, VARIANT * varg15, VARIANT * varg16, VARIANT * varg17, VARIANT * varg18, VARIANT * varg19, VARIANT * varg20, VARIANT * varg21, VARIANT * varg22, VARIANT * varg23, VARIANT * varg24, VARIANT * varg25, VARIANT * varg26, VARIANT * varg27, VARIANT * varg28, VARIANT * varg29, VARIANT * varg30 );
__declspec(implementation_key(2854)) HRESULT _Application::PrintOut ( VARIANT * Background, VARIANT * Append, VARIANT * Range, VARIANT * OutputFileName, VARIANT * From, VARIANT * To, VARIANT * Item, VARIANT * Copies, VARIANT * Pages, VARIANT * PageType, VARIANT * PrintToFile, VARIANT * Collate, VARIANT * FileName, VARIANT * ActivePrinterMacGX, VARIANT * ManualDuplexPrint, VARIANT * PrintZoomColumn, VARIANT * PrintZoomRow, VARIANT * PrintZoomPaperWidth, VARIANT * PrintZoomPaperHeight );
__declspec(implementation_key(2855)) enum Office::MsoAutomationSecurity _Application::GetAutomationSecurity ( );
__declspec(implementation_key(2856)) void _Application::PutAutomationSecurity ( enum Office::MsoAutomationSecurity prop );
__declspec(implementation_key(2857)) Office::FileDialogPtr _Application::GetFileDialog ( enum Office::MsoFileDialogType FileDialogType );
__declspec(implementation_key(2858)) _bstr_t _Application::GetEmailTemplate ( );
__declspec(implementation_key(2859)) void _Application::PutEmailTemplate ( _bstr_t prop );
__declspec(implementation_key(2860)) VARIANT_BOOL _Application::GetShowWindowsInTaskbar ( );
__declspec(implementation_key(2861)) void _Application::PutShowWindowsInTaskbar ( VARIANT_BOOL prop );
__declspec(implementation_key(2862)) Office::NewFilePtr _Application::GetNewDocument ( );
__declspec(implementation_key(2863)) VARIANT_BOOL _Application::GetShowStartupDialog ( );
__declspec(implementation_key(2864)) void _Application::PutShowStartupDialog ( VARIANT_BOOL prop );
__declspec(implementation_key(2865)) AutoCorrectPtr _Application::GetAutoCorrectEmail ( );
__declspec(implementation_key(2866)) TaskPanesPtr _Application::GetTaskPanes ( );
__declspec(implementation_key(2867)) VARIANT_BOOL _Application::GetDefaultLegalBlackline ( );
__declspec(implementation_key(2868)) void _Application::PutDefaultLegalBlackline ( VARIANT_BOOL prop );
__declspec(implementation_key(2869)) VARIANT_BOOL _Application::Dummy2 ( );
__declspec(implementation_key(2870)) SmartTagRecognizersPtr _Application::GetSmartTagRecognizers ( );
__declspec(implementation_key(2871)) SmartTagTypesPtr _Application::GetSmartTagTypes ( );
__declspec(implementation_key(2872)) XMLNamespacesPtr _Application::GetXMLNamespaces ( );
__declspec(implementation_key(2873)) HRESULT _Application::PutFocusInMailHeader ( );
__declspec(implementation_key(2874)) VARIANT_BOOL _Application::GetArbitraryXMLSupportAvailable ( );
__declspec(implementation_key(2875)) _bstr_t _Application::GetBuildFull ( );
__declspec(implementation_key(2876)) _bstr_t _Application::GetBuildFeatureCrew ( );
__declspec(implementation_key(2877)) HRESULT _Application::LoadMasterList ( _bstr_t FileName );
__declspec(implementation_key(2878)) _DocumentPtr _Application::CompareDocuments ( struct _Document * OriginalDocument, struct _Document * RevisedDocument, enum WdCompareDestination Destination, enum WdGranularity Granularity, VARIANT_BOOL CompareFormatting, VARIANT_BOOL CompareCaseChanges, VARIANT_BOOL CompareWhitespace, VARIANT_BOOL CompareTables, VARIANT_BOOL CompareHeaders, VARIANT_BOOL CompareFootnotes, VARIANT_BOOL CompareTextboxes, VARIANT_BOOL CompareFields, VARIANT_BOOL CompareComments, VARIANT_BOOL CompareMoves, _bstr_t RevisedAuthor, VARIANT_BOOL IgnoreAllComparisonWarnings );
__declspec(implementation_key(2879)) _DocumentPtr _Application::MergeDocuments ( struct _Document * OriginalDocument, struct _Document * RevisedDocument, enum WdCompareDestination Destination, enum WdGranularity Granularity, VARIANT_BOOL CompareFormatting, VARIANT_BOOL CompareCaseChanges, VARIANT_BOOL CompareWhitespace, VARIANT_BOOL CompareTables, VARIANT_BOOL CompareHeaders, VARIANT_BOOL CompareFootnotes, VARIANT_BOOL CompareTextboxes, VARIANT_BOOL CompareFields, VARIANT_BOOL CompareComments, VARIANT_BOOL CompareMoves, _bstr_t OriginalAuthor, _bstr_t RevisedAuthor, enum WdMergeFormatFrom FormatFrom );
__declspec(implementation_key(2880)) BibliographyPtr _Application::GetBibliography ( );
__declspec(implementation_key(2881)) VARIANT_BOOL _Application::GetShowStylePreviews ( );
__declspec(implementation_key(2882)) void _Application::PutShowStylePreviews ( VARIANT_BOOL prop );
__declspec(implementation_key(2883)) VARIANT_BOOL _Application::GetRestrictLinkedStyles ( );
__declspec(implementation_key(2884)) void _Application::PutRestrictLinkedStyles ( VARIANT_BOOL prop );
__declspec(implementation_key(2885)) OMathAutoCorrectPtr _Application::GetOMathAutoCorrect ( );
__declspec(implementation_key(2886)) VARIANT_BOOL _Application::GetDisplayDocumentInformationPanel ( );
__declspec(implementation_key(2887)) void _Application::PutDisplayDocumentInformationPanel ( VARIANT_BOOL prop );
__declspec(implementation_key(2888)) Office::IAssistancePtr _Application::GetAssistance ( );
__declspec(implementation_key(2889)) VARIANT_BOOL _Application::GetOpenAttachmentsInFullScreen ( );
__declspec(implementation_key(2890)) void _Application::PutOpenAttachmentsInFullScreen ( VARIANT_BOOL prop );
__declspec(implementation_key(2891)) long _Application::GetActiveEncryptionSession ( );
__declspec(implementation_key(2892)) VARIANT_BOOL _Application::GetDontResetInsertionPointProperties ( );
__declspec(implementation_key(2893)) void _Application::PutDontResetInsertionPointProperties ( VARIANT_BOOL prop );
__declspec(implementation_key(2894)) _ApplicationPtr _Global::GetApplication ( );
__declspec(implementation_key(2895)) long _Global::GetCreator ( );
__declspec(implementation_key(2896)) IDispatchPtr _Global::GetParent ( );
__declspec(implementation_key(2897)) _bstr_t _Global::GetName ( );
__declspec(implementation_key(2898)) DocumentsPtr _Global::GetDocuments ( );
__declspec(implementation_key(2899)) WindowsPtr _Global::GetWindows ( );
__declspec(implementation_key(2900)) _DocumentPtr _Global::GetActiveDocument ( );
__declspec(implementation_key(2901)) WindowPtr _Global::GetActiveWindow ( );
__declspec(implementation_key(2902)) SelectionPtr _Global::GetSelection ( );
__declspec(implementation_key(2903)) IDispatchPtr _Global::GetWordBasic ( );
__declspec(implementation_key(2904)) VARIANT_BOOL _Global::GetPrintPreview ( );
__declspec(implementation_key(2905)) void _Global::PutPrintPreview ( VARIANT_BOOL prop );
__declspec(implementation_key(2906)) RecentFilesPtr _Global::GetRecentFiles ( );
__declspec(implementation_key(2907)) TemplatePtr _Global::GetNormalTemplate ( );
__declspec(implementation_key(2908)) SystemPtr _Global::GetSystem ( );
__declspec(implementation_key(2909)) AutoCorrectPtr _Global::GetAutoCorrect ( );
__declspec(implementation_key(2910)) FontNamesPtr _Global::GetFontNames ( );
__declspec(implementation_key(2911)) FontNamesPtr _Global::GetLandscapeFontNames ( );
__declspec(implementation_key(2912)) FontNamesPtr _Global::GetPortraitFontNames ( );
__declspec(implementation_key(2913)) LanguagesPtr _Global::GetLanguages ( );
__declspec(implementation_key(2914)) Office::AssistantPtr _Global::GetAssistant ( );
__declspec(implementation_key(2915)) FileConvertersPtr _Global::GetFileConverters ( );
__declspec(implementation_key(2916)) DialogsPtr _Global::GetDialogs ( );
__declspec(implementation_key(2917)) CaptionLabelsPtr _Global::GetCaptionLabels ( );
__declspec(implementation_key(2918)) AutoCaptionsPtr _Global::GetAutoCaptions ( );
__declspec(implementation_key(2919)) AddInsPtr _Global::GetAddIns ( );
__declspec(implementation_key(2920)) TasksPtr _Global::GetTasks ( );
__declspec(implementation_key(2921)) IDispatchPtr _Global::GetMacroContainer ( );
__declspec(implementation_key(2922)) Office::_CommandBarsPtr _Global::GetCommandBars ( );
__declspec(implementation_key(2923)) SynonymInfoPtr _Global::GetSynonymInfo ( _bstr_t Word, VARIANT * LanguageID );
__declspec(implementation_key(2924)) VBE6::VBEPtr _Global::GetVBE ( );
__declspec(implementation_key(2925)) ListGalleriesPtr _Global::GetListGalleries ( );
__declspec(implementation_key(2926)) _bstr_t _Global::GetActivePrinter ( );
__declspec(implementation_key(2927)) void _Global::PutActivePrinter ( _bstr_t prop );
__declspec(implementation_key(2928)) TemplatesPtr _Global::GetTemplates ( );
__declspec(implementation_key(2929)) IDispatchPtr _Global::GetCustomizationContext ( );
__declspec(implementation_key(2930)) void _Global::PutCustomizationContext ( IDispatch * prop );
__declspec(implementation_key(2931)) KeyBindingsPtr _Global::GetKeyBindings ( );
__declspec(implementation_key(2932)) KeysBoundToPtr _Global::GetKeysBoundTo ( enum WdKeyCategory KeyCategory, _bstr_t Command, VARIANT * CommandParameter );
__declspec(implementation_key(2933)) KeyBindingPtr _Global::GetFindKey ( long KeyCode, VARIANT * KeyCode2 );
__declspec(implementation_key(2934)) OptionsPtr _Global::GetOptions ( );
__declspec(implementation_key(2935)) DictionariesPtr _Global::GetCustomDictionaries ( );
__declspec(implementation_key(2936)) void _Global::PutStatusBar ( _bstr_t _arg1 );
__declspec(implementation_key(2937)) VARIANT_BOOL _Global::GetShowVisualBasicEditor ( );
__declspec(implementation_key(2938)) void _Global::PutShowVisualBasicEditor ( VARIANT_BOOL prop );
__declspec(implementation_key(2939)) VARIANT_BOOL _Global::GetIsObjectValid ( IDispatch * Object );
__declspec(implementation_key(2940)) HangulHanjaConversionDictionariesPtr _Global::GetHangulHanjaDictionaries ( );
__declspec(implementation_key(2941)) VARIANT_BOOL _Global::Repeat ( VARIANT * Times );
__declspec(implementation_key(2942)) HRESULT _Global::DDEExecute ( long Channel, _bstr_t Command );
__declspec(implementation_key(2943)) long _Global::DDEInitiate ( _bstr_t App, _bstr_t Topic );
__declspec(implementation_key(2944)) HRESULT _Global::DDEPoke ( long Channel, _bstr_t Item, _bstr_t Data );
__declspec(implementation_key(2945)) _bstr_t _Global::DDERequest ( long Channel, _bstr_t Item );
__declspec(implementation_key(2946)) HRESULT _Global::DDETerminate ( long Channel );
__declspec(implementation_key(2947)) HRESULT _Global::DDETerminateAll ( );
__declspec(implementation_key(2948)) long _Global::BuildKeyCode ( enum WdKey Arg1, VARIANT * Arg2, VARIANT * Arg3, VARIANT * Arg4 );
__declspec(implementation_key(2949)) _bstr_t _Global::KeyString ( long KeyCode, VARIANT * KeyCode2 );
__declspec(implementation_key(2950)) VARIANT_BOOL _Global::CheckSpelling ( _bstr_t Word, VARIANT * CustomDictionary, VARIANT * IgnoreUppercase, VARIANT * MainDictionary, VARIANT * CustomDictionary2, VARIANT * CustomDictionary3, VARIANT * CustomDictionary4, VARIANT * CustomDictionary5, VARIANT * CustomDictionary6, VARIANT * CustomDictionary7, VARIANT * CustomDictionary8, VARIANT * CustomDictionary9, VARIANT * CustomDictionary10 );
__declspec(implementation_key(2951)) SpellingSuggestionsPtr _Global::GetSpellingSuggestions ( _bstr_t Word, VARIANT * CustomDictionary, VARIANT * IgnoreUppercase, VARIANT * MainDictionary, VARIANT * SuggestionMode, VARIANT * CustomDictionary2, VARIANT * CustomDictionary3, VARIANT * CustomDictionary4, VARIANT * CustomDictionary5, VARIANT * CustomDictionary6, VARIANT * CustomDictionary7, VARIANT * CustomDictionary8, VARIANT * CustomDictionary9, VARIANT * CustomDictionary10 );
__declspec(implementation_key(2952)) HRESULT _Global::Help ( VARIANT * HelpType );
__declspec(implementation_key(2953)) WindowPtr _Global::NewWindow ( );
__declspec(implementation_key(2954)) _bstr_t _Global::CleanString ( _bstr_t String );
__declspec(implementation_key(2955)) HRESULT _Global::ChangeFileOpenDirectory ( _bstr_t Path );
__declspec(implementation_key(2956)) float _Global::InchesToPoints ( float Inches );
__declspec(implementation_key(2957)) float _Global::CentimetersToPoints ( float Centimeters );
__declspec(implementation_key(2958)) float _Global::MillimetersToPoints ( float Millimeters );
__declspec(implementation_key(2959)) float _Global::PicasToPoints ( float Picas );
__declspec(implementation_key(2960)) float _Global::LinesToPoints ( float Lines );
__declspec(implementation_key(2961)) float _Global::PointsToInches ( float Points );
__declspec(implementation_key(2962)) float _Global::PointsToCentimeters ( float Points );
__declspec(implementation_key(2963)) float _Global::PointsToMillimeters ( float Points );
__declspec(implementation_key(2964)) float _Global::PointsToPicas ( float Points );
__declspec(implementation_key(2965)) float _Global::PointsToLines ( float Points );
__declspec(implementation_key(2966)) float _Global::PointsToPixels ( float Points, VARIANT * fVertical );
__declspec(implementation_key(2967)) float _Global::PixelsToPoints ( float Pixels, VARIANT * fVertical );
__declspec(implementation_key(2968)) Office::LanguageSettingsPtr _Global::GetLanguageSettings ( );
__declspec(implementation_key(2969)) Office::AnswerWizardPtr _Global::GetAnswerWizard ( );
__declspec(implementation_key(2970)) AutoCorrectPtr _Global::GetAutoCorrectEmail ( );
__declspec(implementation_key(2971)) _bstr_t _Document::GetName ( );
__declspec(implementation_key(2972)) _ApplicationPtr _Document::GetApplication ( );
__declspec(implementation_key(2973)) long _Document::GetCreator ( );
__declspec(implementation_key(2974)) IDispatchPtr _Document::GetParent ( );
__declspec(implementation_key(2975)) IDispatchPtr _Document::GetBuiltInDocumentProperties ( );
__declspec(implementation_key(2976)) IDispatchPtr _Document::GetCustomDocumentProperties ( );
__declspec(implementation_key(2977)) _bstr_t _Document::GetPath ( );
__declspec(implementation_key(2978)) BookmarksPtr _Document::GetBookmarks ( );
__declspec(implementation_key(2979)) TablesPtr _Document::GetTables ( );
__declspec(implementation_key(2980)) FootnotesPtr _Document::GetFootnotes ( );
__declspec(implementation_key(2981)) EndnotesPtr _Document::GetEndnotes ( );
__declspec(implementation_key(2982)) CommentsPtr _Document::GetComments ( );
__declspec(implementation_key(2983)) enum WdDocumentType _Document::GetType ( );
__declspec(implementation_key(2984)) VARIANT_BOOL _Document::GetAutoHyphenation ( );
__declspec(implementation_key(2985)) void _Document::PutAutoHyphenation ( VARIANT_BOOL prop );
__declspec(implementation_key(2986)) VARIANT_BOOL _Document::GetHyphenateCaps ( );
__declspec(implementation_key(2987)) void _Document::PutHyphenateCaps ( VARIANT_BOOL prop );
__declspec(implementation_key(2988)) long _Document::GetHyphenationZone ( );
__declspec(implementation_key(2989)) void _Document::PutHyphenationZone ( long prop );
__declspec(implementation_key(2990)) long _Document::GetConsecutiveHyphensLimit ( );
__declspec(implementation_key(2991)) void _Document::PutConsecutiveHyphensLimit ( long prop );
__declspec(implementation_key(2992)) SectionsPtr _Document::GetSections ( );
__declspec(implementation_key(2993)) ParagraphsPtr _Document::GetParagraphs ( );
__declspec(implementation_key(2994)) WordsPtr _Document::GetWords ( );
__declspec(implementation_key(2995)) SentencesPtr _Document::GetSentences ( );
__declspec(implementation_key(2996)) CharactersPtr _Document::GetCharacters ( );
__declspec(implementation_key(2997)) FieldsPtr _Document::GetFields ( );
__declspec(implementation_key(2998)) FormFieldsPtr _Document::GetFormFields ( );
__declspec(implementation_key(2999)) StylesPtr _Document::GetStyles ( );
__declspec(implementation_key(3000)) FramesPtr _Document::GetFrames ( );
__declspec(implementation_key(3001)) TablesOfFiguresPtr _Document::GetTablesOfFigures ( );
__declspec(implementation_key(3002)) VariablesPtr _Document::GetVariables ( );
__declspec(implementation_key(3003)) MailMergePtr _Document::GetMailMerge ( );
__declspec(implementation_key(3004)) EnvelopePtr _Document::GetEnvelope ( );
__declspec(implementation_key(3005)) _bstr_t _Document::GetFullName ( );
__declspec(implementation_key(3006)) RevisionsPtr _Document::GetRevisions ( );
__declspec(implementation_key(3007)) TablesOfContentsPtr _Document::GetTablesOfContents ( );
__declspec(implementation_key(3008)) TablesOfAuthoritiesPtr _Document::GetTablesOfAuthorities ( );
__declspec(implementation_key(3009)) PageSetupPtr _Document::GetPageSetup ( );
__declspec(implementation_key(3010)) void _Document::PutPageSetup ( struct PageSetup * prop );
__declspec(implementation_key(3011)) WindowsPtr _Document::GetWindows ( );
__declspec(implementation_key(3012)) VARIANT_BOOL _Document::GetHasRoutingSlip ( );
__declspec(implementation_key(3013)) void _Document::PutHasRoutingSlip ( VARIANT_BOOL prop );
__declspec(implementation_key(3014)) RoutingSlipPtr _Document::GetRoutingSlip ( );
__declspec(implementation_key(3015)) VARIANT_BOOL _Document::GetRouted ( );
__declspec(implementation_key(3016)) TablesOfAuthoritiesCategoriesPtr _Document::GetTablesOfAuthoritiesCategories ( );
__declspec(implementation_key(3017)) IndexesPtr _Document::GetIndexes ( );
__declspec(implementation_key(3018)) VARIANT_BOOL _Document::GetSaved ( );
__declspec(implementation_key(3019)) void _Document::PutSaved ( VARIANT_BOOL prop );
__declspec(implementation_key(3020)) RangePtr _Document::GetContent ( );
__declspec(implementation_key(3021)) WindowPtr _Document::GetActiveWindow ( );
__declspec(implementation_key(3022)) enum WdDocumentKind _Document::GetKind ( );
__declspec(implementation_key(3023)) void _Document::PutKind ( enum WdDocumentKind prop );
__declspec(implementation_key(3024)) VARIANT_BOOL _Document::GetReadOnly ( );
__declspec(implementation_key(3025)) SubdocumentsPtr _Document::GetSubdocuments ( );
__declspec(implementation_key(3026)) VARIANT_BOOL _Document::GetIsMasterDocument ( );
__declspec(implementation_key(3027)) float _Document::GetDefaultTabStop ( );
__declspec(implementation_key(3028)) void _Document::PutDefaultTabStop ( float prop );
__declspec(implementation_key(3029)) VARIANT_BOOL _Document::GetEmbedTrueTypeFonts ( );
__declspec(implementation_key(3030)) void _Document::PutEmbedTrueTypeFonts ( VARIANT_BOOL prop );
__declspec(implementation_key(3031)) VARIANT_BOOL _Document::GetSaveFormsData ( );
__declspec(implementation_key(3032)) void _Document::PutSaveFormsData ( VARIANT_BOOL prop );
__declspec(implementation_key(3033)) VARIANT_BOOL _Document::GetReadOnlyRecommended ( );
__declspec(implementation_key(3034)) void _Document::PutReadOnlyRecommended ( VARIANT_BOOL prop );
__declspec(implementation_key(3035)) VARIANT_BOOL _Document::GetSaveSubsetFonts ( );
__declspec(implementation_key(3036)) void _Document::PutSaveSubsetFonts ( VARIANT_BOOL prop );
__declspec(implementation_key(3037)) VARIANT_BOOL _Document::GetCompatibility ( enum WdCompatibility Type );
__declspec(implementation_key(3038)) void _Document::PutCompatibility ( enum WdCompatibility Type, VARIANT_BOOL prop );
__declspec(implementation_key(3039)) StoryRangesPtr _Document::GetStoryRanges ( );
__declspec(implementation_key(3040)) Office::_CommandBarsPtr _Document::GetCommandBars ( );
__declspec(implementation_key(3041)) VARIANT_BOOL _Document::GetIsSubdocument ( );
__declspec(implementation_key(3042)) long _Document::GetSaveFormat ( );
__declspec(implementation_key(3043)) enum WdProtectionType _Document::GetProtectionType ( );
__declspec(implementation_key(3044)) HyperlinksPtr _Document::GetHyperlinks ( );
__declspec(implementation_key(3045)) ShapesPtr _Document::GetShapes ( );
__declspec(implementation_key(3046)) ListTemplatesPtr _Document::GetListTemplates ( );
__declspec(implementation_key(3047)) ListsPtr _Document::GetLists ( );
__declspec(implementation_key(3048)) VARIANT_BOOL _Document::GetUpdateStylesOnOpen ( );
__declspec(implementation_key(3049)) void _Document::PutUpdateStylesOnOpen ( VARIANT_BOOL prop );
__declspec(implementation_key(3050)) _variant_t _Document::GetAttachedTemplate ( );
__declspec(implementation_key(3051)) void _Document::PutAttachedTemplate ( VARIANT * prop );
__declspec(implementation_key(3052)) InlineShapesPtr _Document::GetInlineShapes ( );
__declspec(implementation_key(3053)) ShapePtr _Document::GetBackground ( );
__declspec(implementation_key(3054)) void _Document::PutBackground ( struct Shape * prop );
__declspec(implementation_key(3055)) VARIANT_BOOL _Document::GetGrammarChecked ( );
__declspec(implementation_key(3056)) void _Document::PutGrammarChecked ( VARIANT_BOOL prop );
__declspec(implementation_key(3057)) VARIANT_BOOL _Document::GetSpellingChecked ( );
__declspec(implementation_key(3058)) void _Document::PutSpellingChecked ( VARIANT_BOOL prop );
__declspec(implementation_key(3059)) VARIANT_BOOL _Document::GetShowGrammaticalErrors ( );
__declspec(implementation_key(3060)) void _Document::PutShowGrammaticalErrors ( VARIANT_BOOL prop );
__declspec(implementation_key(3061)) VARIANT_BOOL _Document::GetShowSpellingErrors ( );
__declspec(implementation_key(3062)) void _Document::PutShowSpellingErrors ( VARIANT_BOOL prop );
__declspec(implementation_key(3063)) VersionsPtr _Document::GetVersions ( );
__declspec(implementation_key(3064)) VARIANT_BOOL _Document::GetShowSummary ( );
__declspec(implementation_key(3065)) void _Document::PutShowSummary ( VARIANT_BOOL prop );
__declspec(implementation_key(3066)) enum WdSummaryMode _Document::GetSummaryViewMode ( );
__declspec(implementation_key(3067)) void _Document::PutSummaryViewMode ( enum WdSummaryMode prop );
__declspec(implementation_key(3068)) long _Document::GetSummaryLength ( );
__declspec(implementation_key(3069)) void _Document::PutSummaryLength ( long prop );
__declspec(implementation_key(3070)) VARIANT_BOOL _Document::GetPrintFractionalWidths ( );
__declspec(implementation_key(3071)) void _Document::PutPrintFractionalWidths ( VARIANT_BOOL prop );
__declspec(implementation_key(3072)) VARIANT_BOOL _Document::GetPrintPostScriptOverText ( );
__declspec(implementation_key(3073)) void _Document::PutPrintPostScriptOverText ( VARIANT_BOOL prop );
__declspec(implementation_key(3074)) IDispatchPtr _Document::GetContainer ( );
__declspec(implementation_key(3075)) VARIANT_BOOL _Document::GetPrintFormsData ( );
__declspec(implementation_key(3076)) void _Document::PutPrintFormsData ( VARIANT_BOOL prop );
__declspec(implementation_key(3077)) ListParagraphsPtr _Document::GetListParagraphs ( );
__declspec(implementation_key(3078)) void _Document::PutPassword ( _bstr_t _arg1 );
__declspec(implementation_key(3079)) void _Document::PutWritePassword ( _bstr_t _arg1 );
__declspec(implementation_key(3080)) VARIANT_BOOL _Document::GetHasPassword ( );
__declspec(implementation_key(3081)) VARIANT_BOOL _Document::GetWriteReserved ( );
__declspec(implementation_key(3082)) _bstr_t _Document::GetActiveWritingStyle ( VARIANT * LanguageID );
__declspec(implementation_key(3083)) void _Document::PutActiveWritingStyle ( VARIANT * LanguageID, _bstr_t prop );
__declspec(implementation_key(3084)) VARIANT_BOOL _Document::GetUserControl ( );
__declspec(implementation_key(3085)) void _Document::PutUserControl ( VARIANT_BOOL prop );
__declspec(implementation_key(3086)) VARIANT_BOOL _Document::GetHasMailer ( );
__declspec(implementation_key(3087)) void _Document::PutHasMailer ( VARIANT_BOOL prop );
__declspec(implementation_key(3088)) MailerPtr _Document::GetMailer ( );
__declspec(implementation_key(3089)) ReadabilityStatisticsPtr _Document::GetReadabilityStatistics ( );
__declspec(implementation_key(3090)) ProofreadingErrorsPtr _Document::GetGrammaticalErrors ( );
__declspec(implementation_key(3091)) ProofreadingErrorsPtr _Document::GetSpellingErrors ( );
__declspec(implementation_key(3092)) VBE6::_VBProjectPtr _Document::GetVBProject ( );
__declspec(implementation_key(3093)) VARIANT_BOOL _Document::GetFormsDesign ( );
__declspec(implementation_key(3094)) _bstr_t _Document::Get_CodeName ( );
__declspec(implementation_key(3095)) void _Document::Put_CodeName ( _bstr_t prop );
__declspec(implementation_key(3096)) _bstr_t _Document::GetCodeName ( );
__declspec(implementation_key(3097)) VARIANT_BOOL _Document::GetSnapToGrid ( );
__declspec(implementation_key(3098)) void _Document::PutSnapToGrid ( VARIANT_BOOL prop );
__declspec(implementation_key(3099)) VARIANT_BOOL _Document::GetSnapToShapes ( );
__declspec(implementation_key(3100)) void _Document::PutSnapToShapes ( VARIANT_BOOL prop );
__declspec(implementation_key(3101)) float _Document::GetGridDistanceHorizontal ( );
__declspec(implementation_key(3102)) void _Document::PutGridDistanceHorizontal ( float prop );
__declspec(implementation_key(3103)) float _Document::GetGridDistanceVertical ( );
__declspec(implementation_key(3104)) void _Document::PutGridDistanceVertical ( float prop );
__declspec(implementation_key(3105)) float _Document::GetGridOriginHorizontal ( );
__declspec(implementation_key(3106)) void _Document::PutGridOriginHorizontal ( float prop );
__declspec(implementation_key(3107)) float _Document::GetGridOriginVertical ( );
__declspec(implementation_key(3108)) void _Document::PutGridOriginVertical ( float prop );
__declspec(implementation_key(3109)) long _Document::GetGridSpaceBetweenHorizontalLines ( );
__declspec(implementation_key(3110)) void _Document::PutGridSpaceBetweenHorizontalLines ( long prop );
__declspec(implementation_key(3111)) long _Document::GetGridSpaceBetweenVerticalLines ( );
__declspec(implementation_key(3112)) void _Document::PutGridSpaceBetweenVerticalLines ( long prop );
__declspec(implementation_key(3113)) VARIANT_BOOL _Document::GetGridOriginFromMargin ( );
__declspec(implementation_key(3114)) void _Document::PutGridOriginFromMargin ( VARIANT_BOOL prop );
__declspec(implementation_key(3115)) VARIANT_BOOL _Document::GetKerningByAlgorithm ( );
__declspec(implementation_key(3116)) void _Document::PutKerningByAlgorithm ( VARIANT_BOOL prop );
__declspec(implementation_key(3117)) enum WdJustificationMode _Document::GetJustificationMode ( );
__declspec(implementation_key(3118)) void _Document::PutJustificationMode ( enum WdJustificationMode prop );
__declspec(implementation_key(3119)) enum WdFarEastLineBreakLevel _Document::GetFarEastLineBreakLevel ( );
__declspec(implementation_key(3120)) void _Document::PutFarEastLineBreakLevel ( enum WdFarEastLineBreakLevel prop );
__declspec(implementation_key(3121)) _bstr_t _Document::GetNoLineBreakBefore ( );
__declspec(implementation_key(3122)) void _Document::PutNoLineBreakBefore ( _bstr_t prop );
__declspec(implementation_key(3123)) _bstr_t _Document::GetNoLineBreakAfter ( );
__declspec(implementation_key(3124)) void _Document::PutNoLineBreakAfter ( _bstr_t prop );
__declspec(implementation_key(3125)) VARIANT_BOOL _Document::GetTrackRevisions ( );
__declspec(implementation_key(3126)) void _Document::PutTrackRevisions ( VARIANT_BOOL prop );
__declspec(implementation_key(3127)) VARIANT_BOOL _Document::GetPrintRevisions ( );
__declspec(implementation_key(3128)) void _Document::PutPrintRevisions ( VARIANT_BOOL prop );
__declspec(implementation_key(3129)) VARIANT_BOOL _Document::GetShowRevisions ( );
__declspec(implementation_key(3130)) void _Document::PutShowRevisions ( VARIANT_BOOL prop );
__declspec(implementation_key(3131)) HRESULT _Document::Close ( VARIANT * SaveChanges, VARIANT * OriginalFormat, VARIANT * RouteDocument );
__declspec(implementation_key(3132)) HRESULT _Document::SaveAs2000 ( VARIANT * FileName, VARIANT * FileFormat, VARIANT * LockComments, VARIANT * Password, VARIANT * AddToRecentFiles, VARIANT * WritePassword, VARIANT * ReadOnlyRecommended, VARIANT * EmbedTrueTypeFonts, VARIANT * SaveNativePictureFormat, VARIANT * SaveFormsData, VARIANT * SaveAsAOCELetter );
__declspec(implementation_key(3133)) HRESULT _Document::Repaginate ( );
__declspec(implementation_key(3134)) HRESULT _Document::FitToPages ( );
__declspec(implementation_key(3135)) HRESULT _Document::ManualHyphenation ( );
__declspec(implementation_key(3136)) HRESULT _Document::Select ( );
__declspec(implementation_key(3137)) HRESULT _Document::DataForm ( );
__declspec(implementation_key(3138)) HRESULT _Document::Route ( );
__declspec(implementation_key(3139)) HRESULT _Document::Save ( );
__declspec(implementation_key(3140)) HRESULT _Document::PrintOutOld ( VARIANT * Background, VARIANT * Append, VARIANT * Range, VARIANT * OutputFileName, VARIANT * From, VARIANT * To, VARIANT * Item, VARIANT * Copies, VARIANT * Pages, VARIANT * PageType, VARIANT * PrintToFile, VARIANT * Collate, VARIANT * ActivePrinterMacGX, VARIANT * ManualDuplexPrint );
__declspec(implementation_key(3141)) HRESULT _Document::SendMail ( );
__declspec(implementation_key(3142)) RangePtr _Document::Range ( VARIANT * Start, VARIANT * End );
__declspec(implementation_key(3143)) HRESULT _Document::RunAutoMacro ( enum WdAutoMacros Which );
__declspec(implementation_key(3144)) HRESULT _Document::Activate ( );
__declspec(implementation_key(3145)) HRESULT _Document::PrintPreview ( );
__declspec(implementation_key(3146)) RangePtr _Document::GoTo ( VARIANT * What, VARIANT * Which, VARIANT * Count, VARIANT * Name );
__declspec(implementation_key(3147)) VARIANT_BOOL _Document::Undo ( VARIANT * Times );
__declspec(implementation_key(3148)) VARIANT_BOOL _Document::Redo ( VARIANT * Times );
__declspec(implementation_key(3149)) long _Document::ComputeStatistics ( enum WdStatistic Statistic, VARIANT * IncludeFootnotesAndEndnotes );
__declspec(implementation_key(3150)) HRESULT _Document::MakeCompatibilityDefault ( );
__declspec(implementation_key(3151)) HRESULT _Document::Protect2002 ( enum WdProtectionType Type, VARIANT * NoReset, VARIANT * Password );
__declspec(implementation_key(3152)) HRESULT _Document::Unprotect ( VARIANT * Password );
__declspec(implementation_key(3153)) HRESULT _Document::EditionOptions ( enum WdEditionType Type, enum WdEditionOption Option, _bstr_t Name, VARIANT * Format );
__declspec(implementation_key(3154)) HRESULT _Document::RunLetterWizard ( VARIANT * LetterContent, VARIANT * WizardMode );
__declspec(implementation_key(3155)) _LetterContentPtr _Document::GetLetterContent ( );
__declspec(implementation_key(3156)) HRESULT _Document::SetLetterContent ( VARIANT * LetterContent );
__declspec(implementation_key(3157)) HRESULT _Document::CopyStylesFromTemplate ( _bstr_t Template );
__declspec(implementation_key(3158)) HRESULT _Document::UpdateStyles ( );
__declspec(implementation_key(3159)) HRESULT _Document::CheckGrammar ( );
__declspec(implementation_key(3160)) HRESULT _Document::CheckSpelling ( VARIANT * CustomDictionary, VARIANT * IgnoreUppercase, VARIANT * AlwaysSuggest, VARIANT * CustomDictionary2, VARIANT * CustomDictionary3, VARIANT * CustomDictionary4, VARIANT * CustomDictionary5, VARIANT * CustomDictionary6, VARIANT * CustomDictionary7, VARIANT * CustomDictionary8, VARIANT * CustomDictionary9, VARIANT * CustomDictionary10 );
__declspec(implementation_key(3161)) HRESULT _Document::FollowHyperlink ( VARIANT * Address, VARIANT * SubAddress, VARIANT * NewWindow, VARIANT * AddHistory, VARIANT * ExtraInfo, VARIANT * Method, VARIANT * HeaderInfo );
__declspec(implementation_key(3162)) HRESULT _Document::AddToFavorites ( );
__declspec(implementation_key(3163)) HRESULT _Document::Reload ( );
__declspec(implementation_key(3164)) RangePtr _Document::AutoSummarize ( VARIANT * Length, VARIANT * Mode, VARIANT * UpdateProperties );
__declspec(implementation_key(3165)) HRESULT _Document::RemoveNumbers ( VARIANT * NumberType );
__declspec(implementation_key(3166)) HRESULT _Document::ConvertNumbersToText ( VARIANT * NumberType );
__declspec(implementation_key(3167)) long _Document::CountNumberedItems ( VARIANT * NumberType, VARIANT * Level );
__declspec(implementation_key(3168)) HRESULT _Document::Post ( );
__declspec(implementation_key(3169)) HRESULT _Document::ToggleFormsDesign ( );
__declspec(implementation_key(3170)) HRESULT _Document::Compare2000 ( _bstr_t Name );
__declspec(implementation_key(3171)) HRESULT _Document::UpdateSummaryProperties ( );
__declspec(implementation_key(3172)) _variant_t _Document::GetCrossReferenceItems ( VARIANT * ReferenceType );
__declspec(implementation_key(3173)) HRESULT _Document::AutoFormat ( );
__declspec(implementation_key(3174)) HRESULT _Document::ViewCode ( );
__declspec(implementation_key(3175)) HRESULT _Document::ViewPropertyBrowser ( );
__declspec(implementation_key(3176)) HRESULT _Document::ForwardMailer ( );
__declspec(implementation_key(3177)) HRESULT _Document::Reply ( );
__declspec(implementation_key(3178)) HRESULT _Document::ReplyAll ( );
__declspec(implementation_key(3179)) HRESULT _Document::SendMailer ( VARIANT * FileFormat, VARIANT * Priority );
__declspec(implementation_key(3180)) HRESULT _Document::UndoClear ( );
__declspec(implementation_key(3181)) HRESULT _Document::PresentIt ( );
__declspec(implementation_key(3182)) HRESULT _Document::SendFax ( _bstr_t Address, VARIANT * Subject );
__declspec(implementation_key(3183)) HRESULT _Document::Merge2000 ( _bstr_t FileName );
__declspec(implementation_key(3184)) HRESULT _Document::ClosePrintPreview ( );
__declspec(implementation_key(3185)) HRESULT _Document::CheckConsistency ( );
__declspec(implementation_key(3186)) _LetterContentPtr _Document::CreateLetterContent ( _bstr_t DateFormat, VARIANT_BOOL IncludeHeaderFooter, _bstr_t PageDesign, enum WdLetterStyle LetterStyle, VARIANT_BOOL Letterhead, enum WdLetterheadLocation LetterheadLocation, float LetterheadSize, _bstr_t RecipientName, _bstr_t RecipientAddress, _bstr_t Salutation, enum WdSalutationType SalutationType, _bstr_t RecipientReference, _bstr_t MailingInstructions, _bstr_t AttentionLine, _bstr_t Subject, _bstr_t CCList, _bstr_t ReturnAddress, _bstr_t SenderName, _bstr_t Closing, _bstr_t SenderCompany, _bstr_t SenderJobTitle, _bstr_t SenderInitials, long EnclosureNumber, VARIANT * InfoBlock, VARIANT * RecipientCode, VARIANT * RecipientGender, VARIANT * ReturnAddressShortForm, VARIANT * SenderCity, VARIANT * SenderCode, VARIANT * SenderGender, VARIANT * SenderReference );
__declspec(implementation_key(3187)) HRESULT _Document::AcceptAllRevisions ( );
__declspec(implementation_key(3188)) HRESULT _Document::RejectAllRevisions ( );
__declspec(implementation_key(3189)) HRESULT _Document::DetectLanguage ( );
__declspec(implementation_key(3190)) HRESULT _Document::ApplyTheme ( _bstr_t Name );
__declspec(implementation_key(3191)) HRESULT _Document::RemoveTheme ( );
__declspec(implementation_key(3192)) HRESULT _Document::WebPagePreview ( );
__declspec(implementation_key(3193)) HRESULT _Document::ReloadAs ( enum Office::MsoEncoding Encoding );
__declspec(implementation_key(3194)) _bstr_t _Document::GetActiveTheme ( );
__declspec(implementation_key(3195)) _bstr_t _Document::GetActiveThemeDisplayName ( );
__declspec(implementation_key(3196)) EmailPtr _Document::GetEmail ( );
__declspec(implementation_key(3197)) Office::ScriptsPtr _Document::GetScripts ( );
__declspec(implementation_key(3198)) VARIANT_BOOL _Document::GetLanguageDetected ( );
__declspec(implementation_key(3199)) void _Document::PutLanguageDetected ( VARIANT_BOOL prop );
__declspec(implementation_key(3200)) enum WdFarEastLineBreakLanguageID _Document::GetFarEastLineBreakLanguage ( );
__declspec(implementation_key(3201)) void _Document::PutFarEastLineBreakLanguage ( enum WdFarEastLineBreakLanguageID prop );
__declspec(implementation_key(3202)) FramesetPtr _Document::GetFrameset ( );
__declspec(implementation_key(3203)) _variant_t _Document::GetClickAndTypeParagraphStyle ( );
__declspec(implementation_key(3204)) void _Document::PutClickAndTypeParagraphStyle ( VARIANT * prop );
__declspec(implementation_key(3205)) Office::HTMLProjectPtr _Document::GetHTMLProject ( );
__declspec(implementation_key(3206)) WebOptionsPtr _Document::GetWebOptions ( );
__declspec(implementation_key(3207)) enum Office::MsoEncoding _Document::GetOpenEncoding ( );
__declspec(implementation_key(3208)) enum Office::MsoEncoding _Document::GetSaveEncoding ( );
__declspec(implementation_key(3209)) void _Document::PutSaveEncoding ( enum Office::MsoEncoding prop );
__declspec(implementation_key(3210)) VARIANT_BOOL _Document::GetOptimizeForWord97 ( );
__declspec(implementation_key(3211)) void _Document::PutOptimizeForWord97 ( VARIANT_BOOL prop );
__declspec(implementation_key(3212)) VARIANT_BOOL _Document::GetVBASigned ( );
__declspec(implementation_key(3213)) HRESULT _Document::PrintOut2000 ( VARIANT * Background, VARIANT * Append, VARIANT * Range, VARIANT * OutputFileName, VARIANT * From, VARIANT * To, VARIANT * Item, VARIANT * Copies, VARIANT * Pages, VARIANT * PageType, VARIANT * PrintToFile, VARIANT * Collate, VARIANT * ActivePrinterMacGX, VARIANT * ManualDuplexPrint, VARIANT * PrintZoomColumn, VARIANT * PrintZoomRow, VARIANT * PrintZoomPaperWidth, VARIANT * PrintZoomPaperHeight );
__declspec(implementation_key(3214)) HRESULT _Document::sblt ( _bstr_t s );
__declspec(implementation_key(3215)) HRESULT _Document::ConvertVietDoc ( long CodePageOrigin );
__declspec(implementation_key(3216)) HRESULT _Document::PrintOut ( VARIANT * Background, VARIANT * Append, VARIANT * Range, VARIANT * OutputFileName, VARIANT * From, VARIANT * To, VARIANT * Item, VARIANT * Copies, VARIANT * Pages, VARIANT * PageType, VARIANT * PrintToFile, VARIANT * Collate, VARIANT * ActivePrinterMacGX, VARIANT * ManualDuplexPrint, VARIANT * PrintZoomColumn, VARIANT * PrintZoomRow, VARIANT * PrintZoomPaperWidth, VARIANT * PrintZoomPaperHeight );
__declspec(implementation_key(3217)) Office::IMsoEnvelopeVBPtr _Document::GetMailEnvelope ( );
__declspec(implementation_key(3218)) VARIANT_BOOL _Document::GetDisableFeatures ( );
__declspec(implementation_key(3219)) void _Document::PutDisableFeatures ( VARIANT_BOOL prop );
__declspec(implementation_key(3220)) VARIANT_BOOL _Document::GetDoNotEmbedSystemFonts ( );
__declspec(implementation_key(3221)) void _Document::PutDoNotEmbedSystemFonts ( VARIANT_BOOL prop );
__declspec(implementation_key(3222)) Office::SignatureSetPtr _Document::GetSignatures ( );
__declspec(implementation_key(3223)) _bstr_t _Document::GetDefaultTargetFrame ( );
__declspec(implementation_key(3224)) void _Document::PutDefaultTargetFrame ( _bstr_t prop );
__declspec(implementation_key(3225)) HTMLDivisionsPtr _Document::GetHTMLDivisions ( );
__declspec(implementation_key(3226)) enum WdDisableFeaturesIntroducedAfter _Document::GetDisableFeaturesIntroducedAfter ( );
__declspec(implementation_key(3227)) void _Document::PutDisableFeaturesIntroducedAfter ( enum WdDisableFeaturesIntroducedAfter prop );
__declspec(implementation_key(3228)) VARIANT_BOOL _Document::GetRemovePersonalInformation ( );
__declspec(implementation_key(3229)) void _Document::PutRemovePersonalInformation ( VARIANT_BOOL prop );
__declspec(implementation_key(3230)) SmartTagsPtr _Document::GetSmartTags ( );
__declspec(implementation_key(3231)) HRESULT _Document::Compare2002 ( _bstr_t Name, VARIANT * AuthorName, VARIANT * CompareTarget, VARIANT * DetectFormatChanges, VARIANT * IgnoreAllComparisonWarnings, VARIANT * AddToRecentFiles );
__declspec(implementation_key(3232)) HRESULT _Document::CheckIn ( VARIANT_BOOL SaveChanges, VARIANT * Comments, VARIANT_BOOL MakePublic );
__declspec(implementation_key(3233)) VARIANT_BOOL _Document::CanCheckin ( );
__declspec(implementation_key(3234)) HRESULT _Document::Merge ( _bstr_t FileName, VARIANT * MergeTarget, VARIANT * DetectFormatChanges, VARIANT * UseFormattingFrom, VARIANT * AddToRecentFiles );
__declspec(implementation_key(3235)) VARIANT_BOOL _Document::GetEmbedSmartTags ( );
__declspec(implementation_key(3236)) void _Document::PutEmbedSmartTags ( VARIANT_BOOL prop );
__declspec(implementation_key(3237)) VARIANT_BOOL _Document::GetSmartTagsAsXMLProps ( );
__declspec(implementation_key(3238)) void _Document::PutSmartTagsAsXMLProps ( VARIANT_BOOL prop );
__declspec(implementation_key(3239)) enum Office::MsoEncoding _Document::GetTextEncoding ( );
__declspec(implementation_key(3240)) void _Document::PutTextEncoding ( enum Office::MsoEncoding prop );
__declspec(implementation_key(3241)) enum WdLineEndingType _Document::GetTextLineEnding ( );
__declspec(implementation_key(3242)) void _Document::PutTextLineEnding ( enum WdLineEndingType prop );
__declspec(implementation_key(3243)) HRESULT _Document::SendForReview ( VARIANT * Recipients, VARIANT * Subject, VARIANT * ShowMessage, VARIANT * IncludeAttachment );
__declspec(implementation_key(3244)) HRESULT _Document::ReplyWithChanges ( VARIANT * ShowMessage );
__declspec(implementation_key(3245)) HRESULT _Document::EndReview ( );
__declspec(implementation_key(3246)) StyleSheetsPtr _Document::GetStyleSheets ( );
__declspec(implementation_key(3247)) _variant_t _Document::GetDefaultTableStyle ( );
__declspec(implementation_key(3248)) _bstr_t _Document::GetPasswordEncryptionProvider ( );
__declspec(implementation_key(3249)) _bstr_t _Document::GetPasswordEncryptionAlgorithm ( );
__declspec(implementation_key(3250)) long _Document::GetPasswordEncryptionKeyLength ( );
__declspec(implementation_key(3251)) VARIANT_BOOL _Document::GetPasswordEncryptionFileProperties ( );
__declspec(implementation_key(3252)) HRESULT _Document::SetPasswordEncryptionOptions ( _bstr_t PasswordEncryptionProvider, _bstr_t PasswordEncryptionAlgorithm, long PasswordEncryptionKeyLength, VARIANT * PasswordEncryptionFileProperties );
__declspec(implementation_key(3253)) HRESULT _Document::RecheckSmartTags ( );
__declspec(implementation_key(3254)) HRESULT _Document::RemoveSmartTags ( );
__declspec(implementation_key(3255)) HRESULT _Document::SetDefaultTableStyle ( VARIANT * Style, VARIANT_BOOL SetInTemplate );
__declspec(implementation_key(3256)) HRESULT _Document::DeleteAllComments ( );
__declspec(implementation_key(3257)) HRESULT _Document::AcceptAllRevisionsShown ( );
__declspec(implementation_key(3258)) HRESULT _Document::RejectAllRevisionsShown ( );
__declspec(implementation_key(3259)) HRESULT _Document::DeleteAllCommentsShown ( );
__declspec(implementation_key(3260)) HRESULT _Document::ResetFormFields ( );
__declspec(implementation_key(3261)) HRESULT _Document::SaveAs ( VARIANT * FileName, VARIANT * FileFormat, VARIANT * LockComments, VARIANT * Password, VARIANT * AddToRecentFiles, VARIANT * WritePassword, VARIANT * ReadOnlyRecommended, VARIANT * EmbedTrueTypeFonts, VARIANT * SaveNativePictureFormat, VARIANT * SaveFormsData, VARIANT * SaveAsAOCELetter, VARIANT * Encoding, VARIANT * InsertLineBreaks, VARIANT * AllowSubstitutions, VARIANT * LineEnding, VARIANT * AddBiDiMarks );
__declspec(implementation_key(3262)) VARIANT_BOOL _Document::GetEmbedLinguisticData ( );
__declspec(implementation_key(3263)) void _Document::PutEmbedLinguisticData ( VARIANT_BOOL prop );
__declspec(implementation_key(3264)) VARIANT_BOOL _Document::GetFormattingShowFont ( );
__declspec(implementation_key(3265)) void _Document::PutFormattingShowFont ( VARIANT_BOOL prop );
__declspec(implementation_key(3266)) VARIANT_BOOL _Document::GetFormattingShowClear ( );
__declspec(implementation_key(3267)) void _Document::PutFormattingShowClear ( VARIANT_BOOL prop );
__declspec(implementation_key(3268)) VARIANT_BOOL _Document::GetFormattingShowParagraph ( );
__declspec(implementation_key(3269)) void _Document::PutFormattingShowParagraph ( VARIANT_BOOL prop );
__declspec(implementation_key(3270)) VARIANT_BOOL _Document::GetFormattingShowNumbering ( );
__declspec(implementation_key(3271)) void _Document::PutFormattingShowNumbering ( VARIANT_BOOL prop );
__declspec(implementation_key(3272)) enum WdShowFilter _Document::GetFormattingShowFilter ( );
__declspec(implementation_key(3273)) void _Document::PutFormattingShowFilter ( enum WdShowFilter prop );
__declspec(implementation_key(3274)) HRESULT _Document::CheckNewSmartTags ( );
__declspec(implementation_key(3275)) Office::PermissionPtr _Document::GetPermission ( );
__declspec(implementation_key(3276)) XMLNodesPtr _Document::GetXMLNodes ( );
__declspec(implementation_key(3277)) XMLSchemaReferencesPtr _Document::GetXMLSchemaReferences ( );
__declspec(implementation_key(3278)) Office::SmartDocumentPtr _Document::GetSmartDocument ( );
__declspec(implementation_key(3279)) Office::SharedWorkspacePtr _Document::GetSharedWorkspace ( );
__declspec(implementation_key(3280)) Office::SyncPtr _Document::GetSync ( );
__declspec(implementation_key(3281)) VARIANT_BOOL _Document::GetEnforceStyle ( );
__declspec(implementation_key(3282)) void _Document::PutEnforceStyle ( VARIANT_BOOL prop );
__declspec(implementation_key(3283)) VARIANT_BOOL _Document::GetAutoFormatOverride ( );
__declspec(implementation_key(3284)) void _Document::PutAutoFormatOverride ( VARIANT_BOOL prop );
__declspec(implementation_key(3285)) VARIANT_BOOL _Document::GetXMLSaveDataOnly ( );
__declspec(implementation_key(3286)) void _Document::PutXMLSaveDataOnly ( VARIANT_BOOL prop );
__declspec(implementation_key(3287)) VARIANT_BOOL _Document::GetXMLHideNamespaces ( );
__declspec(implementation_key(3288)) void _Document::PutXMLHideNamespaces ( VARIANT_BOOL prop );
__declspec(implementation_key(3289)) VARIANT_BOOL _Document::GetXMLShowAdvancedErrors ( );
__declspec(implementation_key(3290)) void _Document::PutXMLShowAdvancedErrors ( VARIANT_BOOL prop );
__declspec(implementation_key(3291)) VARIANT_BOOL _Document::GetXMLUseXSLTWhenSaving ( );
__declspec(implementation_key(3292)) void _Document::PutXMLUseXSLTWhenSaving ( VARIANT_BOOL prop );
__declspec(implementation_key(3293)) _bstr_t _Document::GetXMLSaveThroughXSLT ( );
__declspec(implementation_key(3294)) void _Document::PutXMLSaveThroughXSLT ( _bstr_t prop );
__declspec(implementation_key(3295)) Office::DocumentLibraryVersionsPtr _Document::GetDocumentLibraryVersions ( );
__declspec(implementation_key(3296)) VARIANT_BOOL _Document::GetReadingModeLayoutFrozen ( );
__declspec(implementation_key(3297)) void _Document::PutReadingModeLayoutFrozen ( VARIANT_BOOL prop );
__declspec(implementation_key(3298)) VARIANT_BOOL _Document::GetRemoveDateAndTime ( );
__declspec(implementation_key(3299)) void _Document::PutRemoveDateAndTime ( VARIANT_BOOL prop );
__declspec(implementation_key(3300)) HRESULT _Document::SendFaxOverInternet ( VARIANT * Recipients, VARIANT * Subject, VARIANT * ShowMessage );
__declspec(implementation_key(3301)) HRESULT _Document::TransformDocument ( _bstr_t Path, VARIANT_BOOL DataOnly );
__declspec(implementation_key(3302)) HRESULT _Document::Protect ( enum WdProtectionType Type, VARIANT * NoReset, VARIANT * Password, VARIANT * UseIRM, VARIANT * EnforceStyleLock );
__declspec(implementation_key(3303)) HRESULT _Document::SelectAllEditableRanges ( VARIANT * EditorID );
__declspec(implementation_key(3304)) HRESULT _Document::DeleteAllEditableRanges ( VARIANT * EditorID );
__declspec(implementation_key(3305)) HRESULT _Document::DeleteAllInkAnnotations ( );
__declspec(implementation_key(3306)) HRESULT _Document::AddDocumentWorkspaceHeader ( VARIANT_BOOL RichFormat, _bstr_t Url, _bstr_t Title, _bstr_t Description, _bstr_t ID );
__declspec(implementation_key(3307)) HRESULT _Document::RemoveDocumentWorkspaceHeader ( _bstr_t ID );
__declspec(implementation_key(3308)) HRESULT _Document::Compare ( _bstr_t Name, VARIANT * AuthorName, VARIANT * CompareTarget, VARIANT * DetectFormatChanges, VARIANT * IgnoreAllComparisonWarnings, VARIANT * AddToRecentFiles, VARIANT * RemovePersonalInformation, VARIANT * RemoveDateAndTime );
__declspec(implementation_key(3309)) HRESULT _Document::RemoveLockedStyles ( );
__declspec(implementation_key(3310)) XMLChildNodeSuggestionsPtr _Document::GetChildNodeSuggestions ( );
__declspec(implementation_key(3311)) XMLNodePtr _Document::SelectSingleNode ( _bstr_t XPath, _bstr_t PrefixMapping, VARIANT_BOOL FastSearchSkippingTextNodes );
__declspec(implementation_key(3312)) XMLNodesPtr _Document::SelectNodes ( _bstr_t XPath, _bstr_t PrefixMapping, VARIANT_BOOL FastSearchSkippingTextNodes );
__declspec(implementation_key(3313)) XMLNodesPtr _Document::GetXMLSchemaViolations ( );
__declspec(implementation_key(3314)) long _Document::GetReadingLayoutSizeX ( );
__declspec(implementation_key(3315)) void _Document::PutReadingLayoutSizeX ( long prop );
__declspec(implementation_key(3316)) long _Document::GetReadingLayoutSizeY ( );
__declspec(implementation_key(3317)) void _Document::PutReadingLayoutSizeY ( long prop );
__declspec(implementation_key(3318)) enum WdStyleSort _Document::GetStyleSortMethod ( );
__declspec(implementation_key(3319)) void _Document::PutStyleSortMethod ( enum WdStyleSort prop );
__declspec(implementation_key(3320)) Office::MetaPropertiesPtr _Document::GetContentTypeProperties ( );
__declspec(implementation_key(3321)) VARIANT_BOOL _Document::GetTrackMoves ( );
__declspec(implementation_key(3322)) void _Document::PutTrackMoves ( VARIANT_BOOL prop );
__declspec(implementation_key(3323)) VARIANT_BOOL _Document::GetTrackFormatting ( );
__declspec(implementation_key(3324)) void _Document::PutTrackFormatting ( VARIANT_BOOL prop );
__declspec(implementation_key(3325)) void _Document::GetDummy1 ( );
__declspec(implementation_key(3326)) OMathsPtr _Document::GetOMaths ( );
__declspec(implementation_key(3327)) HRESULT _Document::RemoveDocumentInformation ( enum WdRemoveDocInfoType RemoveDocInfoType );
__declspec(implementation_key(3328)) HRESULT _Document::CheckInWithVersion ( VARIANT_BOOL SaveChanges, VARIANT * Comments, VARIANT_BOOL MakePublic, VARIANT * VersionType );
__declspec(implementation_key(3329)) HRESULT _Document::Dummy2 ( );
__declspec(implementation_key(3330)) void _Document::GetDummy3 ( );
__declspec(implementation_key(3331)) Office::ServerPolicyPtr _Document::GetServerPolicy ( );
__declspec(implementation_key(3332)) ContentControlsPtr _Document::GetContentControls ( );
__declspec(implementation_key(3333)) Office::DocumentInspectorsPtr _Document::GetDocumentInspectors ( );
__declspec(implementation_key(3334)) HRESULT _Document::LockServerFile ( );
__declspec(implementation_key(3335)) Office::WorkflowTasksPtr _Document::GetWorkflowTasks ( );
__declspec(implementation_key(3336)) Office::WorkflowTemplatesPtr _Document::GetWorkflowTemplates ( );
__declspec(implementation_key(3337)) HRESULT _Document::Dummy4 ( );
__declspec(implementation_key(3338)) HRESULT _Document::AddMeetingWorkspaceHeader ( VARIANT_BOOL SkipIfAbsent, _bstr_t Url, _bstr_t Title, _bstr_t Description, _bstr_t ID );
__declspec(implementation_key(3339)) BibliographyPtr _Document::GetBibliography ( );
__declspec(implementation_key(3340)) VARIANT_BOOL _Document::GetLockTheme ( );
__declspec(implementation_key(3341)) void _Document::PutLockTheme ( VARIANT_BOOL prop );
__declspec(implementation_key(3342)) VARIANT_BOOL _Document::GetLockQuickStyleSet ( );
__declspec(implementation_key(3343)) void _Document::PutLockQuickStyleSet ( VARIANT_BOOL prop );
__declspec(implementation_key(3344)) _bstr_t _Document::GetOriginalDocumentTitle ( );
__declspec(implementation_key(3345)) _bstr_t _Document::GetRevisedDocumentTitle ( );
__declspec(implementation_key(3346)) Office::_CustomXMLPartsPtr _Document::GetCustomXMLParts ( );
__declspec(implementation_key(3347)) VARIANT_BOOL _Document::GetFormattingShowNextLevel ( );
__declspec(implementation_key(3348)) void _Document::PutFormattingShowNextLevel ( VARIANT_BOOL prop );
__declspec(implementation_key(3349)) VARIANT_BOOL _Document::GetFormattingShowUserStyleName ( );
__declspec(implementation_key(3350)) void _Document::PutFormattingShowUserStyleName ( VARIANT_BOOL prop );
__declspec(implementation_key(3351)) HRESULT _Document::SaveAsQuickStyleSet ( _bstr_t FileName );
__declspec(implementation_key(3352)) HRESULT _Document::ApplyQuickStyleSet ( _bstr_t Name );
__declspec(implementation_key(3353)) ResearchPtr _Document::GetResearch ( );
__declspec(implementation_key(3354)) VARIANT_BOOL _Document::GetFinal ( );
__declspec(implementation_key(3355)) void _Document::PutFinal ( VARIANT_BOOL prop );
__declspec(implementation_key(3356)) enum WdOMathBreakBin _Document::GetOMathBreakBin ( );
__declspec(implementation_key(3357)) void _Document::PutOMathBreakBin ( enum WdOMathBreakBin prop );
__declspec(implementation_key(3358)) enum WdOMathBreakSub _Document::GetOMathBreakSub ( );
__declspec(implementation_key(3359)) void _Document::PutOMathBreakSub ( enum WdOMathBreakSub prop );
__declspec(implementation_key(3360)) enum WdOMathJc _Document::GetOMathJc ( );
__declspec(implementation_key(3361)) void _Document::PutOMathJc ( enum WdOMathJc prop );
__declspec(implementation_key(3362)) float _Document::GetOMathLeftMargin ( );
__declspec(implementation_key(3363)) void _Document::PutOMathLeftMargin ( float prop );
__declspec(implementation_key(3364)) float _Document::GetOMathRightMargin ( );
__declspec(implementation_key(3365)) void _Document::PutOMathRightMargin ( float prop );
__declspec(implementation_key(3366)) float _Document::GetOMathWrap ( );
__declspec(implementation_key(3367)) void _Document::PutOMathWrap ( float prop );
__declspec(implementation_key(3368)) VARIANT_BOOL _Document::GetOMathIntSubSupLim ( );
__declspec(implementation_key(3369)) void _Document::PutOMathIntSubSupLim ( VARIANT_BOOL prop );
__declspec(implementation_key(3370)) VARIANT_BOOL _Document::GetOMathNarySupSubLim ( );
__declspec(implementation_key(3371)) void _Document::PutOMathNarySupSubLim ( VARIANT_BOOL prop );
__declspec(implementation_key(3372)) VARIANT_BOOL _Document::GetOMathSmallFrac ( );
__declspec(implementation_key(3373)) void _Document::PutOMathSmallFrac ( VARIANT_BOOL prop );
__declspec(implementation_key(3374)) _bstr_t _Document::GetWordOpenXML ( );
__declspec(implementation_key(3375)) Office::OfficeThemePtr _Document::GetDocumentTheme ( );
__declspec(implementation_key(3376)) HRESULT _Document::ApplyDocumentTheme ( _bstr_t FileName );
__declspec(implementation_key(3377)) VARIANT_BOOL _Document::GetHasVBProject ( );
__declspec(implementation_key(3378)) ContentControlsPtr _Document::SelectLinkedControls ( struct Office::CustomXMLNode * Node );
__declspec(implementation_key(3379)) ContentControlsPtr _Document::SelectUnlinkedControls ( struct Office::_CustomXMLPart * Stream );
__declspec(implementation_key(3380)) ContentControlsPtr _Document::SelectContentControlsByTitle ( _bstr_t Title );
__declspec(implementation_key(3381)) HRESULT _Document::ExportAsFixedFormat ( _bstr_t OutputFileName, enum WdExportFormat ExportFormat, VARIANT_BOOL OpenAfterExport, enum WdExportOptimizeFor OptimizeFor, enum WdExportRange Range, long From, long To, enum WdExportItem Item, VARIANT_BOOL IncludeDocProps, VARIANT_BOOL KeepIRM, enum WdExportCreateBookmarks CreateBookmarks, VARIANT_BOOL DocStructureTags, VARIANT_BOOL BitmapMissingFonts, VARIANT_BOOL UseISO19005_1, VARIANT * FixedFormatExtClassPtr );
__declspec(implementation_key(3382)) HRESULT _Document::FreezeLayout ( );
__declspec(implementation_key(3383)) HRESULT _Document::UnfreezeLayout ( );
__declspec(implementation_key(3384)) _bstr_t _Document::GetOMathFontName ( );
__declspec(implementation_key(3385)) void _Document::PutOMathFontName ( _bstr_t prop );
__declspec(implementation_key(3386)) HRESULT _Document::DowngradeDocument ( );
__declspec(implementation_key(3387)) _bstr_t _Document::GetEncryptionProvider ( );
__declspec(implementation_key(3388)) void _Document::PutEncryptionProvider ( _bstr_t prop );
__declspec(implementation_key(3389)) VARIANT_BOOL _Document::GetUseMathDefaults ( );
__declspec(implementation_key(3390)) void _Document::PutUseMathDefaults ( VARIANT_BOOL prop );
__declspec(implementation_key(3391)) long _Document::GetCurrentRsid ( );
__declspec(implementation_key(3392)) HRESULT _Document::Convert ( );
__declspec(implementation_key(3393)) ContentControlsPtr _Document::SelectContentControlsByTag ( _bstr_t Tag );
__declspec(implementation_key(3394)) _bstr_t Template::GetName ( );
__declspec(implementation_key(3395)) _ApplicationPtr Template::GetApplication ( );
__declspec(implementation_key(3396)) long Template::GetCreator ( );
__declspec(implementation_key(3397)) IDispatchPtr Template::GetParent ( );
__declspec(implementation_key(3398)) _bstr_t Template::GetPath ( );
__declspec(implementation_key(3399)) AutoTextEntriesPtr Template::GetAutoTextEntries ( );
__declspec(implementation_key(3400)) enum WdLanguageID Template::GetLanguageID ( );
__declspec(implementation_key(3401)) void Template::PutLanguageID ( enum WdLanguageID prop );
__declspec(implementation_key(3402)) VARIANT_BOOL Template::GetSaved ( );
__declspec(implementation_key(3403)) void Template::PutSaved ( VARIANT_BOOL prop );
__declspec(implementation_key(3404)) enum WdTemplateType Template::GetType ( );
__declspec(implementation_key(3405)) _bstr_t Template::GetFullName ( );
__declspec(implementation_key(3406)) IDispatchPtr Template::GetBuiltInDocumentProperties ( );
__declspec(implementation_key(3407)) IDispatchPtr Template::GetCustomDocumentProperties ( );
__declspec(implementation_key(3408)) ListTemplatesPtr Template::GetListTemplates ( );
__declspec(implementation_key(3409)) enum WdLanguageID Template::GetLanguageIDFarEast ( );
__declspec(implementation_key(3410)) void Template::PutLanguageIDFarEast ( enum WdLanguageID prop );
__declspec(implementation_key(3411)) VBE6::_VBProjectPtr Template::GetVBProject ( );
__declspec(implementation_key(3412)) VARIANT_BOOL Template::GetKerningByAlgorithm ( );
__declspec(implementation_key(3413)) void Template::PutKerningByAlgorithm ( VARIANT_BOOL prop );
__declspec(implementation_key(3414)) enum WdJustificationMode Template::GetJustificationMode ( );
__declspec(implementation_key(3415)) void Template::PutJustificationMode ( enum WdJustificationMode prop );
__declspec(implementation_key(3416)) enum WdFarEastLineBreakLevel Template::GetFarEastLineBreakLevel ( );
__declspec(implementation_key(3417)) void Template::PutFarEastLineBreakLevel ( enum WdFarEastLineBreakLevel prop );
__declspec(implementation_key(3418)) _bstr_t Template::GetNoLineBreakBefore ( );
__declspec(implementation_key(3419)) void Template::PutNoLineBreakBefore ( _bstr_t prop );
__declspec(implementation_key(3420)) _bstr_t Template::GetNoLineBreakAfter ( );
__declspec(implementation_key(3421)) void Template::PutNoLineBreakAfter ( _bstr_t prop );
__declspec(implementation_key(3422)) _DocumentPtr Template::OpenAsDocument ( );
__declspec(implementation_key(3423)) HRESULT Template::Save ( );
__declspec(implementation_key(3424)) long Template::GetNoProofing ( );
__declspec(implementation_key(3425)) void Template::PutNoProofing ( long prop );
__declspec(implementation_key(3426)) enum WdFarEastLineBreakLanguageID Template::GetFarEastLineBreakLanguage ( );
__declspec(implementation_key(3427)) void Template::PutFarEastLineBreakLanguage ( enum WdFarEastLineBreakLanguageID prop );
__declspec(implementation_key(3428)) BuildingBlockEntriesPtr Template::GetBuildingBlockEntries ( );
__declspec(implementation_key(3429)) BuildingBlockTypesPtr Template::GetBuildingBlockTypes ( );
__declspec(implementation_key(3430)) _ApplicationPtr Templates::GetApplication ( );
__declspec(implementation_key(3431)) long Templates::GetCreator ( );
__declspec(implementation_key(3432)) IDispatchPtr Templates::GetParent ( );
__declspec(implementation_key(3433)) long Templates::GetCount ( );
__declspec(implementation_key(3434)) IUnknownPtr Templates::Get_NewEnum ( );
__declspec(implementation_key(3435)) TemplatePtr Templates::Item ( VARIANT * Index );
__declspec(implementation_key(3436)) HRESULT Templates::LoadBuildingBlocks ( );
__declspec(implementation_key(3437)) _bstr_t Bookmark::GetName ( );
__declspec(implementation_key(3438)) RangePtr Bookmark::GetRange ( );
__declspec(implementation_key(3439)) VARIANT_BOOL Bookmark::GetEmpty ( );
__declspec(implementation_key(3440)) long Bookmark::GetStart ( );
__declspec(implementation_key(3441)) void Bookmark::PutStart ( long prop );
__declspec(implementation_key(3442)) long Bookmark::GetEnd ( );
__declspec(implementation_key(3443)) void Bookmark::PutEnd ( long prop );
__declspec(implementation_key(3444)) VARIANT_BOOL Bookmark::GetColumn ( );
__declspec(implementation_key(3445)) enum WdStoryType Bookmark::GetStoryType ( );
__declspec(implementation_key(3446)) _ApplicationPtr Bookmark::GetApplication ( );
__declspec(implementation_key(3447)) long Bookmark::GetCreator ( );
__declspec(implementation_key(3448)) IDispatchPtr Bookmark::GetParent ( );
__declspec(implementation_key(3449)) HRESULT Bookmark::Select ( );
__declspec(implementation_key(3450)) HRESULT Bookmark::Delete ( );
__declspec(implementation_key(3451)) BookmarkPtr Bookmark::Copy ( _bstr_t Name );
__declspec(implementation_key(3452)) IUnknownPtr Bookmarks::Get_NewEnum ( );
__declspec(implementation_key(3453)) long Bookmarks::GetCount ( );
__declspec(implementation_key(3454)) enum WdBookmarkSortBy Bookmarks::GetDefaultSorting ( );
__declspec(implementation_key(3455)) void Bookmarks::PutDefaultSorting ( enum WdBookmarkSortBy prop );
__declspec(implementation_key(3456)) VARIANT_BOOL Bookmarks::GetShowHidden ( );
__declspec(implementation_key(3457)) void Bookmarks::PutShowHidden ( VARIANT_BOOL prop );
__declspec(implementation_key(3458)) _ApplicationPtr Bookmarks::GetApplication ( );
__declspec(implementation_key(3459)) long Bookmarks::GetCreator ( );
__declspec(implementation_key(3460)) IDispatchPtr Bookmarks::GetParent ( );
__declspec(implementation_key(3461)) BookmarkPtr Bookmarks::Item ( VARIANT * Index );
__declspec(implementation_key(3462)) BookmarkPtr Bookmarks::Add ( _bstr_t Name, VARIANT * Range );
__declspec(implementation_key(3463)) VARIANT_BOOL Bookmarks::Exists ( _bstr_t Name );
__declspec(implementation_key(3464)) _ApplicationPtr Window::GetApplication ( );
__declspec(implementation_key(3465)) long Window::GetCreator ( );
__declspec(implementation_key(3466)) IDispatchPtr Window::GetParent ( );
__declspec(implementation_key(3467)) PanePtr Window::GetActivePane ( );
__declspec(implementation_key(3468)) _DocumentPtr Window::GetDocument ( );
__declspec(implementation_key(3469)) PanesPtr Window::GetPanes ( );
__declspec(implementation_key(3470)) SelectionPtr Window::GetSelection ( );
__declspec(implementation_key(3471)) long Window::GetLeft ( );
__declspec(implementation_key(3472)) void Window::PutLeft ( long prop );
__declspec(implementation_key(3473)) long Window::GetTop ( );
__declspec(implementation_key(3474)) void Window::PutTop ( long prop );
__declspec(implementation_key(3475)) long Window::GetWidth ( );
__declspec(implementation_key(3476)) void Window::PutWidth ( long prop );
__declspec(implementation_key(3477)) long Window::GetHeight ( );
__declspec(implementation_key(3478)) void Window::PutHeight ( long prop );
__declspec(implementation_key(3479)) VARIANT_BOOL Window::GetSplit ( );
__declspec(implementation_key(3480)) void Window::PutSplit ( VARIANT_BOOL prop );
__declspec(implementation_key(3481)) long Window::GetSplitVertical ( );
__declspec(implementation_key(3482)) void Window::PutSplitVertical ( long prop );
__declspec(implementation_key(3483)) _bstr_t Window::GetCaption ( );
__declspec(implementation_key(3484)) void Window::PutCaption ( _bstr_t prop );
__declspec(implementation_key(3485)) enum WdWindowState Window::GetWindowState ( );
__declspec(implementation_key(3486)) void Window::PutWindowState ( enum WdWindowState prop );
__declspec(implementation_key(3487)) VARIANT_BOOL Window::GetDisplayRulers ( );
__declspec(implementation_key(3488)) void Window::PutDisplayRulers ( VARIANT_BOOL prop );
__declspec(implementation_key(3489)) VARIANT_BOOL Window::GetDisplayVerticalRuler ( );
__declspec(implementation_key(3490)) void Window::PutDisplayVerticalRuler ( VARIANT_BOOL prop );
__declspec(implementation_key(3491)) ViewPtr Window::GetView ( );
__declspec(implementation_key(3492)) enum WdWindowType Window::GetType ( );
__declspec(implementation_key(3493)) WindowPtr Window::GetNext ( );
__declspec(implementation_key(3494)) WindowPtr Window::GetPrevious ( );
__declspec(implementation_key(3495)) long Window::GetWindowNumber ( );
__declspec(implementation_key(3496)) VARIANT_BOOL Window::GetDisplayVerticalScrollBar ( );
__declspec(implementation_key(3497)) void Window::PutDisplayVerticalScrollBar ( VARIANT_BOOL prop );
__declspec(implementation_key(3498)) VARIANT_BOOL Window::GetDisplayHorizontalScrollBar ( );
__declspec(implementation_key(3499)) void Window::PutDisplayHorizontalScrollBar ( VARIANT_BOOL prop );
__declspec(implementation_key(3500)) float Window::GetStyleAreaWidth ( );
__declspec(implementation_key(3501)) void Window::PutStyleAreaWidth ( float prop );
__declspec(implementation_key(3502)) VARIANT_BOOL Window::GetDisplayScreenTips ( );
__declspec(implementation_key(3503)) void Window::PutDisplayScreenTips ( VARIANT_BOOL prop );
__declspec(implementation_key(3504)) long Window::GetHorizontalPercentScrolled ( );
__declspec(implementation_key(3505)) void Window::PutHorizontalPercentScrolled ( long prop );
__declspec(implementation_key(3506)) long Window::GetVerticalPercentScrolled ( );
__declspec(implementation_key(3507)) void Window::PutVerticalPercentScrolled ( long prop );
__declspec(implementation_key(3508)) VARIANT_BOOL Window::GetDocumentMap ( );
__declspec(implementation_key(3509)) void Window::PutDocumentMap ( VARIANT_BOOL prop );
__declspec(implementation_key(3510)) VARIANT_BOOL Window::GetActive ( );
__declspec(implementation_key(3511)) long Window::GetDocumentMapPercentWidth ( );
__declspec(implementation_key(3512)) void Window::PutDocumentMapPercentWidth ( long prop );
__declspec(implementation_key(3513)) long Window::GetIndex ( );
__declspec(implementation_key(3514)) enum WdIMEMode Window::GetIMEMode ( );
__declspec(implementation_key(3515)) void Window::PutIMEMode ( enum WdIMEMode prop );
__declspec(implementation_key(3516)) HRESULT Window::Activate ( );
__declspec(implementation_key(3517)) HRESULT Window::Close ( VARIANT * SaveChanges, VARIANT * RouteDocument );
__declspec(implementation_key(3518)) HRESULT Window::LargeScroll ( VARIANT * Down, VARIANT * Up, VARIANT * ToRight, VARIANT * ToLeft );
__declspec(implementation_key(3519)) HRESULT Window::SmallScroll ( VARIANT * Down, VARIANT * Up, VARIANT * ToRight, VARIANT * ToLeft );
__declspec(implementation_key(3520)) WindowPtr Window::NewWindow ( );
__declspec(implementation_key(3521)) HRESULT Window::PrintOutOld ( VARIANT * Background, VARIANT * Append, VARIANT * Range, VARIANT * OutputFileName, VARIANT * From, VARIANT * To, VARIANT * Item, VARIANT * Copies, VARIANT * Pages, VARIANT * PageType, VARIANT * PrintToFile, VARIANT * Collate, VARIANT * ActivePrinterMacGX, VARIANT * ManualDuplexPrint );
__declspec(implementation_key(3522)) HRESULT Window::PageScroll ( VARIANT * Down, VARIANT * Up );
__declspec(implementation_key(3523)) HRESULT Window::SetFocus ( );
__declspec(implementation_key(3524)) IDispatchPtr Window::RangeFromPoint ( long x, long y );
__declspec(implementation_key(3525)) HRESULT Window::ScrollIntoView ( IDispatch * obj, VARIANT * Start );
__declspec(implementation_key(3526)) HRESULT Window::GetPoint ( long * ScreenPixelsLeft, long * ScreenPixelsTop, long * ScreenPixelsWidth, long * ScreenPixelsHeight, IDispatch * obj );
__declspec(implementation_key(3527)) HRESULT Window::PrintOut2000 ( VARIANT * Background, VARIANT * Append, VARIANT * Range, VARIANT * OutputFileName, VARIANT * From, VARIANT * To, VARIANT * Item, VARIANT * Copies, VARIANT * Pages, VARIANT * PageType, VARIANT * PrintToFile, VARIANT * Collate, VARIANT * ActivePrinterMacGX, VARIANT * ManualDuplexPrint, VARIANT * PrintZoomColumn, VARIANT * PrintZoomRow, VARIANT * PrintZoomPaperWidth, VARIANT * PrintZoomPaperHeight );
__declspec(implementation_key(3528)) long Window::GetUsableWidth ( );
__declspec(implementation_key(3529)) long Window::GetUsableHeight ( );
__declspec(implementation_key(3530)) VARIANT_BOOL Window::GetEnvelopeVisible ( );
__declspec(implementation_key(3531)) void Window::PutEnvelopeVisible ( VARIANT_BOOL prop );
__declspec(implementation_key(3532)) VARIANT_BOOL Window::GetDisplayRightRuler ( );
__declspec(implementation_key(3533)) void Window::PutDisplayRightRuler ( VARIANT_BOOL prop );
__declspec(implementation_key(3534)) VARIANT_BOOL Window::GetDisplayLeftScrollBar ( );
__declspec(implementation_key(3535)) void Window::PutDisplayLeftScrollBar ( VARIANT_BOOL prop );
__declspec(implementation_key(3536)) VARIANT_BOOL Window::GetVisible ( );
__declspec(implementation_key(3537)) void Window::PutVisible ( VARIANT_BOOL prop );
__declspec(implementation_key(3538)) HRESULT Window::PrintOut ( VARIANT * Background, VARIANT * Append, VARIANT * Range, VARIANT * OutputFileName, VARIANT * From, VARIANT * To, VARIANT * Item, VARIANT * Copies, VARIANT * Pages, VARIANT * PageType, VARIANT * PrintToFile, VARIANT * Collate, VARIANT * ActivePrinterMacGX, VARIANT * ManualDuplexPrint, VARIANT * PrintZoomColumn, VARIANT * PrintZoomRow, VARIANT * PrintZoomPaperWidth, VARIANT * PrintZoomPaperHeight );
__declspec(implementation_key(3539)) HRESULT Window::ToggleShowAllReviewers ( );
__declspec(implementation_key(3540)) VARIANT_BOOL Window::GetThumbnails ( );
__declspec(implementation_key(3541)) void Window::PutThumbnails ( VARIANT_BOOL prop );
__declspec(implementation_key(3542)) enum WdShowSourceDocuments Window::GetShowSourceDocuments ( );
__declspec(implementation_key(3543)) void Window::PutShowSourceDocuments ( enum WdShowSourceDocuments prop );
__declspec(implementation_key(3544)) HRESULT Window::ToggleRibbon ( );
__declspec(implementation_key(3545)) IUnknownPtr Windows::Get_NewEnum ( );
__declspec(implementation_key(3546)) long Windows::GetCount ( );
__declspec(implementation_key(3547)) _ApplicationPtr Windows::GetApplication ( );
__declspec(implementation_key(3548)) long Windows::GetCreator ( );
__declspec(implementation_key(3549)) IDispatchPtr Windows::GetParent ( );
__declspec(implementation_key(3550)) WindowPtr Windows::Item ( VARIANT * Index );
__declspec(implementation_key(3551)) WindowPtr Windows::Add ( VARIANT * Window );
__declspec(implementation_key(3552)) HRESULT Windows::Arrange ( VARIANT * ArrangeStyle );
__declspec(implementation_key(3553)) VARIANT_BOOL Windows::CompareSideBySideWith ( VARIANT * Document );
__declspec(implementation_key(3554)) VARIANT_BOOL Windows::BreakSideBySide ( );
__declspec(implementation_key(3555)) HRESULT Windows::ResetPositionsSideBySide ( );
__declspec(implementation_key(3556)) VARIANT_BOOL Windows::GetSyncScrollingSideBySide ( );
__declspec(implementation_key(3557)) void Windows::PutSyncScrollingSideBySide ( VARIANT_BOOL prop );
__declspec(implementation_key(3558)) _ApplicationPtr Pane::GetApplication ( );
__declspec(implementation_key(3559)) long Pane::GetCreator ( );
__declspec(implementation_key(3560)) IDispatchPtr Pane::GetParent ( );
__declspec(implementation_key(3561)) _DocumentPtr Pane::GetDocument ( );
__declspec(implementation_key(3562)) SelectionPtr Pane::GetSelection ( );
__declspec(implementation_key(3563)) VARIANT_BOOL Pane::GetDisplayRulers ( );
__declspec(implementation_key(3564)) void Pane::PutDisplayRulers ( VARIANT_BOOL prop );
__declspec(implementation_key(3565)) VARIANT_BOOL Pane::GetDisplayVerticalRuler ( );
__declspec(implementation_key(3566)) void Pane::PutDisplayVerticalRuler ( VARIANT_BOOL prop );
__declspec(implementation_key(3567)) ZoomsPtr Pane::GetZooms ( );
__declspec(implementation_key(3568)) long Pane::GetIndex ( );
__declspec(implementation_key(3569)) ViewPtr Pane::GetView ( );
__declspec(implementation_key(3570)) PanePtr Pane::GetNext ( );
__declspec(implementation_key(3571)) PanePtr Pane::GetPrevious ( );
__declspec(implementation_key(3572)) long Pane::GetHorizontalPercentScrolled ( );
__declspec(implementation_key(3573)) void Pane::PutHorizontalPercentScrolled ( long prop );
__declspec(implementation_key(3574)) long Pane::GetVerticalPercentScrolled ( );
__declspec(implementation_key(3575)) void Pane::PutVerticalPercentScrolled ( long prop );
__declspec(implementation_key(3576)) long Pane::GetMinimumFontSize ( );
__declspec(implementation_key(3577)) void Pane::PutMinimumFontSize ( long prop );
__declspec(implementation_key(3578)) VARIANT_BOOL Pane::GetBrowseToWindow ( );
__declspec(implementation_key(3579)) void Pane::PutBrowseToWindow ( VARIANT_BOOL prop );
__declspec(implementation_key(3580)) long Pane::GetBrowseWidth ( );
__declspec(implementation_key(3581)) HRESULT Pane::Activate ( );
__declspec(implementation_key(3582)) HRESULT Pane::Close ( );
__declspec(implementation_key(3583)) HRESULT Pane::LargeScroll ( VARIANT * Down, VARIANT * Up, VARIANT * ToRight, VARIANT * ToLeft );
__declspec(implementation_key(3584)) HRESULT Pane::SmallScroll ( VARIANT * Down, VARIANT * Up, VARIANT * ToRight, VARIANT * ToLeft );
__declspec(implementation_key(3585)) HRESULT Pane::AutoScroll ( long Velocity );
__declspec(implementation_key(3586)) HRESULT Pane::PageScroll ( VARIANT * Down, VARIANT * Up );
__declspec(implementation_key(3587)) HRESULT Pane::NewFrameset ( );
__declspec(implementation_key(3588)) HRESULT Pane::TOCInFrameset ( );
__declspec(implementation_key(3589)) FramesetPtr Pane::GetFrameset ( );
__declspec(implementation_key(3590)) PagesPtr Pane::GetPages ( );
__declspec(implementation_key(3591)) IUnknownPtr Panes::Get_NewEnum ( );
__declspec(implementation_key(3592)) long Panes::GetCount ( );
__declspec(implementation_key(3593)) _ApplicationPtr Panes::GetApplication ( );
__declspec(implementation_key(3594)) long Panes::GetCreator ( );
__declspec(implementation_key(3595)) IDispatchPtr Panes::GetParent ( );
__declspec(implementation_key(3596)) PanePtr Panes::Item ( long Index );
__declspec(implementation_key(3597)) PanePtr Panes::Add ( VARIANT * SplitVertical );
__declspec(implementation_key(3598)) _bstr_t Range::GetText ( );
__declspec(implementation_key(3599)) void Range::PutText ( _bstr_t prop );
__declspec(implementation_key(3600)) RangePtr Range::GetFormattedText ( );
__declspec(implementation_key(3601)) void Range::PutFormattedText ( struct Range * prop );
__declspec(implementation_key(3602)) long Range::GetStart ( );
__declspec(implementation_key(3603)) void Range::PutStart ( long prop );
__declspec(implementation_key(3604)) long Range::GetEnd ( );
__declspec(implementation_key(3605)) void Range::PutEnd ( long prop );
__declspec(implementation_key(3606)) _FontPtr Range::GetFont ( );
__declspec(implementation_key(3607)) void Range::PutFont ( struct _Font * prop );
__declspec(implementation_key(3608)) RangePtr Range::GetDuplicate ( );
__declspec(implementation_key(3609)) enum WdStoryType Range::GetStoryType ( );
__declspec(implementation_key(3610)) TablesPtr Range::GetTables ( );
__declspec(implementation_key(3611)) WordsPtr Range::GetWords ( );
__declspec(implementation_key(3612)) SentencesPtr Range::GetSentences ( );
__declspec(implementation_key(3613)) CharactersPtr Range::GetCharacters ( );
__declspec(implementation_key(3614)) FootnotesPtr Range::GetFootnotes ( );
__declspec(implementation_key(3615)) EndnotesPtr Range::GetEndnotes ( );
__declspec(implementation_key(3616)) CommentsPtr Range::GetComments ( );
__declspec(implementation_key(3617)) CellsPtr Range::GetCells ( );
__declspec(implementation_key(3618)) SectionsPtr Range::GetSections ( );
__declspec(implementation_key(3619)) ParagraphsPtr Range::GetParagraphs ( );
__declspec(implementation_key(3620)) BordersPtr Range::GetBorders ( );
__declspec(implementation_key(3621)) void Range::PutBorders ( struct Borders * prop );
__declspec(implementation_key(3622)) ShadingPtr Range::GetShading ( );
__declspec(implementation_key(3623)) TextRetrievalModePtr Range::GetTextRetrievalMode ( );
__declspec(implementation_key(3624)) void Range::PutTextRetrievalMode ( struct TextRetrievalMode * prop );
__declspec(implementation_key(3625)) FieldsPtr Range::GetFields ( );
__declspec(implementation_key(3626)) FormFieldsPtr Range::GetFormFields ( );
__declspec(implementation_key(3627)) FramesPtr Range::GetFrames ( );
__declspec(implementation_key(3628)) _ParagraphFormatPtr Range::GetParagraphFormat ( );
__declspec(implementation_key(3629)) void Range::PutParagraphFormat ( struct _ParagraphFormat * prop );
__declspec(implementation_key(3630)) ListFormatPtr Range::GetListFormat ( );
__declspec(implementation_key(3631)) BookmarksPtr Range::GetBookmarks ( );
__declspec(implementation_key(3632)) _ApplicationPtr Range::GetApplication ( );
__declspec(implementation_key(3633)) long Range::GetCreator ( );
__declspec(implementation_key(3634)) IDispatchPtr Range::GetParent ( );
__declspec(implementation_key(3635)) long Range::GetBold ( );
__declspec(implementation_key(3636)) void Range::PutBold ( long prop );
__declspec(implementation_key(3637)) long Range::GetItalic ( );
__declspec(implementation_key(3638)) void Range::PutItalic ( long prop );
__declspec(implementation_key(3639)) enum WdUnderline Range::GetUnderline ( );
__declspec(implementation_key(3640)) void Range::PutUnderline ( enum WdUnderline prop );
__declspec(implementation_key(3641)) enum WdEmphasisMark Range::GetEmphasisMark ( );
__declspec(implementation_key(3642)) void Range::PutEmphasisMark ( enum WdEmphasisMark prop );
__declspec(implementation_key(3643)) VARIANT_BOOL Range::GetDisableCharacterSpaceGrid ( );
__declspec(implementation_key(3644)) void Range::PutDisableCharacterSpaceGrid ( VARIANT_BOOL prop );
__declspec(implementation_key(3645)) RevisionsPtr Range::GetRevisions ( );
__declspec(implementation_key(3646)) _variant_t Range::GetStyle ( );
__declspec(implementation_key(3647)) void Range::PutStyle ( VARIANT * prop );
__declspec(implementation_key(3648)) long Range::GetStoryLength ( );
__declspec(implementation_key(3649)) enum WdLanguageID Range::GetLanguageID ( );
__declspec(implementation_key(3650)) void Range::PutLanguageID ( enum WdLanguageID prop );
__declspec(implementation_key(3651)) SynonymInfoPtr Range::GetSynonymInfo ( );
__declspec(implementation_key(3652)) HyperlinksPtr Range::GetHyperlinks ( );
__declspec(implementation_key(3653)) ListParagraphsPtr Range::GetListParagraphs ( );
__declspec(implementation_key(3654)) SubdocumentsPtr Range::GetSubdocuments ( );
__declspec(implementation_key(3655)) VARIANT_BOOL Range::GetGrammarChecked ( );
__declspec(implementation_key(3656)) void Range::PutGrammarChecked ( VARIANT_BOOL prop );
__declspec(implementation_key(3657)) VARIANT_BOOL Range::GetSpellingChecked ( );
__declspec(implementation_key(3658)) void Range::PutSpellingChecked ( VARIANT_BOOL prop );
__declspec(implementation_key(3659)) enum WdColorIndex Range::GetHighlightColorIndex ( );
__declspec(implementation_key(3660)) void Range::PutHighlightColorIndex ( enum WdColorIndex prop );
__declspec(implementation_key(3661)) ColumnsPtr Range::GetColumns ( );
__declspec(implementation_key(3662)) RowsPtr Range::GetRows ( );
__declspec(implementation_key(3663)) long Range::GetCanEdit ( );
__declspec(implementation_key(3664)) long Range::GetCanPaste ( );
__declspec(implementation_key(3665)) VARIANT_BOOL Range::GetIsEndOfRowMark ( );
__declspec(implementation_key(3666)) long Range::GetBookmarkID ( );
__declspec(implementation_key(3667)) long Range::GetPreviousBookmarkID ( );
__declspec(implementation_key(3668)) FindPtr Range::GetFind ( );
__declspec(implementation_key(3669)) PageSetupPtr Range::GetPageSetup ( );
__declspec(implementation_key(3670)) void Range::PutPageSetup ( struct PageSetup * prop );
__declspec(implementation_key(3671)) ShapeRangePtr Range::GetShapeRange ( );
__declspec(implementation_key(3672)) enum WdCharacterCase Range::GetCase ( );
__declspec(implementation_key(3673)) void Range::PutCase ( enum WdCharacterCase prop );
__declspec(implementation_key(3674)) _variant_t Range::GetInformation ( enum WdInformation Type );
__declspec(implementation_key(3675)) ReadabilityStatisticsPtr Range::GetReadabilityStatistics ( );
__declspec(implementation_key(3676)) ProofreadingErrorsPtr Range::GetGrammaticalErrors ( );
__declspec(implementation_key(3677)) ProofreadingErrorsPtr Range::GetSpellingErrors ( );
__declspec(implementation_key(3678)) enum WdTextOrientation Range::GetOrientation ( );
__declspec(implementation_key(3679)) void Range::PutOrientation ( enum WdTextOrientation prop );
__declspec(implementation_key(3680)) InlineShapesPtr Range::GetInlineShapes ( );
__declspec(implementation_key(3681)) RangePtr Range::GetNextStoryRange ( );
__declspec(implementation_key(3682)) enum WdLanguageID Range::GetLanguageIDFarEast ( );
__declspec(implementation_key(3683)) void Range::PutLanguageIDFarEast ( enum WdLanguageID prop );
__declspec(implementation_key(3684)) enum WdLanguageID Range::GetLanguageIDOther ( );
__declspec(implementation_key(3685)) void Range::PutLanguageIDOther ( enum WdLanguageID prop );
__declspec(implementation_key(3686)) HRESULT Range::Select ( );
__declspec(implementation_key(3687)) HRESULT Range::SetRange ( long Start, long End );
__declspec(implementation_key(3688)) HRESULT Range::Collapse ( VARIANT * Direction );
__declspec(implementation_key(3689)) HRESULT Range::InsertBefore ( _bstr_t Text );
__declspec(implementation_key(3690)) HRESULT Range::InsertAfter ( _bstr_t Text );
__declspec(implementation_key(3691)) RangePtr Range::Next ( VARIANT * Unit, VARIANT * Count );
__declspec(implementation_key(3692)) RangePtr Range::Previous ( VARIANT * Unit, VARIANT * Count );
__declspec(implementation_key(3693)) long Range::StartOf ( VARIANT * Unit, VARIANT * Extend );
__declspec(implementation_key(3694)) long Range::EndOf ( VARIANT * Unit, VARIANT * Extend );
__declspec(implementation_key(3695)) long Range::Move ( VARIANT * Unit, VARIANT * Count );
__declspec(implementation_key(3696)) long Range::MoveStart ( VARIANT * Unit, VARIANT * Count );
__declspec(implementation_key(3697)) long Range::MoveEnd ( VARIANT * Unit, VARIANT * Count );
__declspec(implementation_key(3698)) long Range::MoveWhile ( VARIANT * Cset, VARIANT * Count );
__declspec(implementation_key(3699)) long Range::MoveStartWhile ( VARIANT * Cset, VARIANT * Count );
__declspec(implementation_key(3700)) long Range::MoveEndWhile ( VARIANT * Cset, VARIANT * Count );
__declspec(implementation_key(3701)) long Range::MoveUntil ( VARIANT * Cset, VARIANT * Count );
__declspec(implementation_key(3702)) long Range::MoveStartUntil ( VARIANT * Cset, VARIANT * Count );
__declspec(implementation_key(3703)) long Range::MoveEndUntil ( VARIANT * Cset, VARIANT * Count );
__declspec(implementation_key(3704)) HRESULT Range::Cut ( );
__declspec(implementation_key(3705)) HRESULT Range::Copy ( );
__declspec(implementation_key(3706)) HRESULT Range::Paste ( );
__declspec(implementation_key(3707)) HRESULT Range::InsertBreak ( VARIANT * Type );
__declspec(implementation_key(3708)) HRESULT Range::InsertFile ( _bstr_t FileName, VARIANT * Range, VARIANT * ConfirmConversions, VARIANT * Link, VARIANT * Attachment );
__declspec(implementation_key(3709)) VARIANT_BOOL Range::InStory ( struct Range * Range );
__declspec(implementation_key(3710)) VARIANT_BOOL Range::InRange ( struct Range * Range );
__declspec(implementation_key(3711)) long Range::Delete ( VARIANT * Unit, VARIANT * Count );
__declspec(implementation_key(3712)) HRESULT Range::WholeStory ( );
__declspec(implementation_key(3713)) long Range::Expand ( VARIANT * Unit );
__declspec(implementation_key(3714)) HRESULT Range::InsertParagraph ( );
__declspec(implementation_key(3715)) HRESULT Range::InsertParagraphAfter ( );
__declspec(implementation_key(3716)) TablePtr Range::ConvertToTableOld ( VARIANT * Separator, VARIANT * NumRows, VARIANT * NumColumns, VARIANT * InitialColumnWidth, VARIANT * Format, VARIANT * ApplyBorders, VARIANT * ApplyShading, VARIANT * ApplyFont, VARIANT * ApplyColor, VARIANT * ApplyHeadingRows, VARIANT * ApplyLastRow, VARIANT * ApplyFirstColumn, VARIANT * ApplyLastColumn, VARIANT * AutoFit );
__declspec(implementation_key(3717)) HRESULT Range::InsertDateTimeOld ( VARIANT * DateTimeFormat, VARIANT * InsertAsField, VARIANT * InsertAsFullWidth );
__declspec(implementation_key(3718)) HRESULT Range::InsertSymbol ( long CharacterNumber, VARIANT * Font, VARIANT * Unicode, VARIANT * Bias );
__declspec(implementation_key(3719)) HRESULT Range::InsertCrossReference_2002 ( VARIANT * ReferenceType, enum WdReferenceKind ReferenceKind, VARIANT * ReferenceItem, VARIANT * InsertAsHyperlink, VARIANT * IncludePosition );
__declspec(implementation_key(3720)) HRESULT Range::InsertCaptionXP ( VARIANT * Label, VARIANT * Title, VARIANT * TitleAutoText, VARIANT * Position );
__declspec(implementation_key(3721)) HRESULT Range::CopyAsPicture ( );
__declspec(implementation_key(3722)) HRESULT Range::SortOld ( VARIANT * ExcludeHeader, VARIANT * FieldNumber, VARIANT * SortFieldType, VARIANT * SortOrder, VARIANT * FieldNumber2, VARIANT * SortFieldType2, VARIANT * SortOrder2, VARIANT * FieldNumber3, VARIANT * SortFieldType3, VARIANT * SortOrder3, VARIANT * SortColumn, VARIANT * Separator, VARIANT * CaseSensitive, VARIANT * LanguageID );
__declspec(implementation_key(3723)) HRESULT Range::SortAscending ( );
__declspec(implementation_key(3724)) HRESULT Range::SortDescending ( );
__declspec(implementation_key(3725)) VARIANT_BOOL Range::IsEqual ( struct Range * Range );
__declspec(implementation_key(3726)) float Range::Calculate ( );
__declspec(implementation_key(3727)) RangePtr Range::GoTo ( VARIANT * What, VARIANT * Which, VARIANT * Count, VARIANT * Name );
__declspec(implementation_key(3728)) RangePtr Range::GoToNext ( enum WdGoToItem What );
__declspec(implementation_key(3729)) RangePtr Range::GoToPrevious ( enum WdGoToItem What );
__declspec(implementation_key(3730)) HRESULT Range::PasteSpecial ( VARIANT * IconIndex, VARIANT * Link, VARIANT * Placement, VARIANT * DisplayAsIcon, VARIANT * DataType, VARIANT * IconFileName, VARIANT * IconLabel );
__declspec(implementation_key(3731)) HRESULT Range::LookupNameProperties ( );
__declspec(implementation_key(3732)) long Range::ComputeStatistics ( enum WdStatistic Statistic );
__declspec(implementation_key(3733)) HRESULT Range::Relocate ( long Direction );
__declspec(implementation_key(3734)) HRESULT Range::CheckSynonyms ( );
__declspec(implementation_key(3735)) HRESULT Range::SubscribeTo ( _bstr_t Edition, VARIANT * Format );
__declspec(implementation_key(3736)) HRESULT Range::CreatePublisher ( VARIANT * Edition, VARIANT * ContainsPICT, VARIANT * ContainsRTF, VARIANT * ContainsText );
__declspec(implementation_key(3737)) HRESULT Range::InsertAutoText ( );
__declspec(implementation_key(3738)) HRESULT Range::InsertDatabase ( VARIANT * Format, VARIANT * Style, VARIANT * LinkToSource, VARIANT * Connection, VARIANT * SQLStatement, VARIANT * SQLStatement1, VARIANT * PasswordDocument, VARIANT * PasswordTemplate, VARIANT * WritePasswordDocument, VARIANT * WritePasswordTemplate, VARIANT * DataSource, VARIANT * From, VARIANT * To, VARIANT * IncludeFields );
__declspec(implementation_key(3739)) HRESULT Range::AutoFormat ( );
__declspec(implementation_key(3740)) HRESULT Range::CheckGrammar ( );
__declspec(implementation_key(3741)) HRESULT Range::CheckSpelling ( VARIANT * CustomDictionary, VARIANT * IgnoreUppercase, VARIANT * AlwaysSuggest, VARIANT * CustomDictionary2, VARIANT * CustomDictionary3, VARIANT * CustomDictionary4, VARIANT * CustomDictionary5, VARIANT * CustomDictionary6, VARIANT * CustomDictionary7, VARIANT * CustomDictionary8, VARIANT * CustomDictionary9, VARIANT * CustomDictionary10 );
__declspec(implementation_key(3742)) SpellingSuggestionsPtr Range::GetSpellingSuggestions ( VARIANT * CustomDictionary, VARIANT * IgnoreUppercase, VARIANT * MainDictionary, VARIANT * SuggestionMode, VARIANT * CustomDictionary2, VARIANT * CustomDictionary3, VARIANT * CustomDictionary4, VARIANT * CustomDictionary5, VARIANT * CustomDictionary6, VARIANT * CustomDictionary7, VARIANT * CustomDictionary8, VARIANT * CustomDictionary9, VARIANT * CustomDictionary10 );
__declspec(implementation_key(3743)) HRESULT Range::InsertParagraphBefore ( );
__declspec(implementation_key(3744)) HRESULT Range::NextSubdocument ( );
__declspec(implementation_key(3745)) HRESULT Range::PreviousSubdocument ( );
__declspec(implementation_key(3746)) HRESULT Range::ConvertHangulAndHanja ( VARIANT * ConversionsMode, VARIANT * FastConversion, VARIANT * CheckHangulEnding, VARIANT * EnableRecentOrdering, VARIANT * CustomDictionary );
__declspec(implementation_key(3747)) HRESULT Range::PasteAsNestedTable ( );
__declspec(implementation_key(3748)) HRESULT Range::ModifyEnclosure ( VARIANT * Style, VARIANT * Symbol, VARIANT * EnclosedText );
__declspec(implementation_key(3749)) HRESULT Range::PhoneticGuide ( _bstr_t Text, enum WdPhoneticGuideAlignmentType Alignment, long Raise, long FontSize, _bstr_t FontName );
__declspec(implementation_key(3750)) HRESULT Range::InsertDateTime ( VARIANT * DateTimeFormat, VARIANT * InsertAsField, VARIANT * InsertAsFullWidth, VARIANT * DateLanguage, VARIANT * CalendarType );
__declspec(implementation_key(3751)) HRESULT Range::Sort ( VARIANT * ExcludeHeader, VARIANT * FieldNumber, VARIANT * SortFieldType, VARIANT * SortOrder, VARIANT * FieldNumber2, VARIANT * SortFieldType2, VARIANT * SortOrder2, VARIANT * FieldNumber3, VARIANT * SortFieldType3, VARIANT * SortOrder3, VARIANT * SortColumn, VARIANT * Separator, VARIANT * CaseSensitive, VARIANT * BidiSort, VARIANT * IgnoreThe, VARIANT * IgnoreKashida, VARIANT * IgnoreDiacritics, VARIANT * IgnoreHe, VARIANT * LanguageID );
__declspec(implementation_key(3752)) HRESULT Range::DetectLanguage ( );
__declspec(implementation_key(3753)) TablePtr Range::ConvertToTable ( VARIANT * Separator, VARIANT * NumRows, VARIANT * NumColumns, VARIANT * InitialColumnWidth, VARIANT * Format, VARIANT * ApplyBorders, VARIANT * ApplyShading, VARIANT * ApplyFont, VARIANT * ApplyColor, VARIANT * ApplyHeadingRows, VARIANT * ApplyLastRow, VARIANT * ApplyFirstColumn, VARIANT * ApplyLastColumn, VARIANT * AutoFit, VARIANT * AutoFitBehavior, VARIANT * DefaultTableBehavior );
__declspec(implementation_key(3754)) HRESULT Range::TCSCConverter ( enum WdTCSCConverterDirection WdTCSCConverterDirection, VARIANT_BOOL CommonTerms, VARIANT_BOOL UseVariants );
__declspec(implementation_key(3755)) VARIANT_BOOL Range::GetLanguageDetected ( );
__declspec(implementation_key(3756)) void Range::PutLanguageDetected ( VARIANT_BOOL prop );
__declspec(implementation_key(3757)) float Range::GetFitTextWidth ( );
__declspec(implementation_key(3758)) void Range::PutFitTextWidth ( float prop );
__declspec(implementation_key(3759)) enum WdHorizontalInVerticalType Range::GetHorizontalInVertical ( );
__declspec(implementation_key(3760)) void Range::PutHorizontalInVertical ( enum WdHorizontalInVerticalType prop );
__declspec(implementation_key(3761)) enum WdTwoLinesInOneType Range::GetTwoLinesInOne ( );
__declspec(implementation_key(3762)) void Range::PutTwoLinesInOne ( enum WdTwoLinesInOneType prop );
__declspec(implementation_key(3763)) VARIANT_BOOL Range::GetCombineCharacters ( );
__declspec(implementation_key(3764)) void Range::PutCombineCharacters ( VARIANT_BOOL prop );
__declspec(implementation_key(3765)) long Range::GetNoProofing ( );
__declspec(implementation_key(3766)) void Range::PutNoProofing ( long prop );
__declspec(implementation_key(3767)) TablesPtr Range::GetTopLevelTables ( );
__declspec(implementation_key(3768)) Office::ScriptsPtr Range::GetScripts ( );
__declspec(implementation_key(3769)) enum WdCharacterWidth Range::GetCharacterWidth ( );
__declspec(implementation_key(3770)) void Range::PutCharacterWidth ( enum WdCharacterWidth prop );
__declspec(implementation_key(3771)) enum WdKana Range::GetKana ( );
__declspec(implementation_key(3772)) void Range::PutKana ( enum WdKana prop );
__declspec(implementation_key(3773)) long Range::GetBoldBi ( );
__declspec(implementation_key(3774)) void Range::PutBoldBi ( long prop );
__declspec(implementation_key(3775)) long Range::GetItalicBi ( );
__declspec(implementation_key(3776)) void Range::PutItalicBi ( long prop );
__declspec(implementation_key(3777)) _bstr_t Range::GetID ( );
__declspec(implementation_key(3778)) void Range::PutID ( _bstr_t prop );
__declspec(implementation_key(3779)) HTMLDivisionsPtr Range::GetHTMLDivisions ( );
__declspec(implementation_key(3780)) SmartTagsPtr Range::GetSmartTags ( );
__declspec(implementation_key(3781)) VARIANT_BOOL Range::GetShowAll ( );
__declspec(implementation_key(3782)) void Range::PutShowAll ( VARIANT_BOOL prop );
__declspec(implementation_key(3783)) _DocumentPtr Range::GetDocument ( );
__declspec(implementation_key(3784)) FootnoteOptionsPtr Range::GetFootnoteOptions ( );
__declspec(implementation_key(3785)) EndnoteOptionsPtr Range::GetEndnoteOptions ( );
__declspec(implementation_key(3786)) HRESULT Range::PasteAndFormat ( enum WdRecoveryType Type );
__declspec(implementation_key(3787)) HRESULT Range::PasteExcelTable ( VARIANT_BOOL LinkedToExcel, VARIANT_BOOL WordFormatting, VARIANT_BOOL RTF );
__declspec(implementation_key(3788)) HRESULT Range::PasteAppendTable ( );
__declspec(implementation_key(3789)) XMLNodesPtr Range::GetXMLNodes ( );
__declspec(implementation_key(3790)) XMLNodePtr Range::GetXMLParentNode ( );
__declspec(implementation_key(3791)) EditorsPtr Range::GetEditors ( );
__declspec(implementation_key(3792)) _bstr_t Range::GetXML ( VARIANT_BOOL DataOnly );
__declspec(implementation_key(3793)) _variant_t Range::GetEnhMetaFileBits ( );
__declspec(implementation_key(3794)) RangePtr Range::GoToEditableRange ( VARIANT * EditorID );
__declspec(implementation_key(3795)) HRESULT Range::InsertXML ( _bstr_t XML, VARIANT * Transform );
__declspec(implementation_key(3796)) HRESULT Range::InsertCaption ( VARIANT * Label, VARIANT * Title, VARIANT * TitleAutoText, VARIANT * Position, VARIANT * ExcludeLabel );
__declspec(implementation_key(3797)) HRESULT Range::InsertCrossReference ( VARIANT * ReferenceType, enum WdReferenceKind ReferenceKind, VARIANT * ReferenceItem, VARIANT * InsertAsHyperlink, VARIANT * IncludePosition, VARIANT * SeparateNumbers, VARIANT * SeparatorString );
__declspec(implementation_key(3798)) OMathsPtr Range::GetOMaths ( );
__declspec(implementation_key(3799)) _variant_t Range::GetCharacterStyle ( );
__declspec(implementation_key(3800)) _variant_t Range::GetParagraphStyle ( );
__declspec(implementation_key(3801)) _variant_t Range::GetListStyle ( );
__declspec(implementation_key(3802)) _variant_t Range::GetTableStyle ( );
__declspec(implementation_key(3803)) ContentControlsPtr Range::GetContentControls ( );
__declspec(implementation_key(3804)) HRESULT Range::ExportFragment ( _bstr_t FileName, enum WdSaveFormat Format );
__declspec(implementation_key(3805)) _bstr_t Range::GetWordOpenXML ( );
__declspec(implementation_key(3806)) HRESULT Range::SetListLevel ( short Level );
__declspec(implementation_key(3807)) HRESULT Range::InsertAlignmentTab ( long Alignment, long RelativeTo );
__declspec(implementation_key(3808)) ContentControlPtr Range::GetParentContentControl ( );
__declspec(implementation_key(3809)) HRESULT Range::ImportFragment ( _bstr_t FileName, VARIANT_BOOL MatchDestination );
__declspec(implementation_key(3810)) HRESULT Range::ExportAsFixedFormat ( _bstr_t OutputFileName, enum WdExportFormat ExportFormat, VARIANT_BOOL OpenAfterExport, enum WdExportOptimizeFor OptimizeFor, VARIANT_BOOL ExportCurrentPage, enum WdExportItem Item, VARIANT_BOOL IncludeDocProps, VARIANT_BOOL KeepIRM, enum WdExportCreateBookmarks CreateBookmarks, VARIANT_BOOL DocStructureTags, VARIANT_BOOL BitmapMissingFonts, VARIANT_BOOL UseISO19005_1, VARIANT * FixedFormatExtClassPtr );
__declspec(implementation_key(3811)) IUnknownPtr Characters::Get_NewEnum ( );
__declspec(implementation_key(3812)) long Characters::GetCount ( );
__declspec(implementation_key(3813)) RangePtr Characters::GetFirst ( );
__declspec(implementation_key(3814)) RangePtr Characters::GetLast ( );
__declspec(implementation_key(3815)) _ApplicationPtr Characters::GetApplication ( );
__declspec(implementation_key(3816)) long Characters::GetCreator ( );
__declspec(implementation_key(3817)) IDispatchPtr Characters::GetParent ( );
__declspec(implementation_key(3818)) RangePtr Characters::Item ( long Index );
__declspec(implementation_key(3819)) IUnknownPtr Words::Get_NewEnum ( );
__declspec(implementation_key(3820)) long Words::GetCount ( );
__declspec(implementation_key(3821)) RangePtr Words::GetFirst ( );
__declspec(implementation_key(3822)) RangePtr Words::GetLast ( );
__declspec(implementation_key(3823)) _ApplicationPtr Words::GetApplication ( );
__declspec(implementation_key(3824)) long Words::GetCreator ( );
__declspec(implementation_key(3825)) IDispatchPtr Words::GetParent ( );
__declspec(implementation_key(3826)) RangePtr Words::Item ( long Index );
__declspec(implementation_key(3827)) IUnknownPtr Sentences::Get_NewEnum ( );
__declspec(implementation_key(3828)) long Sentences::GetCount ( );
__declspec(implementation_key(3829)) RangePtr Sentences::GetFirst ( );
__declspec(implementation_key(3830)) RangePtr Sentences::GetLast ( );
__declspec(implementation_key(3831)) _ApplicationPtr Sentences::GetApplication ( );
__declspec(implementation_key(3832)) long Sentences::GetCreator ( );
__declspec(implementation_key(3833)) IDispatchPtr Sentences::GetParent ( );
__declspec(implementation_key(3834)) RangePtr Sentences::Item ( long Index );
__declspec(implementation_key(3835)) RangePtr Paragraph::GetRange ( );
__declspec(implementation_key(3836)) _ApplicationPtr Paragraph::GetApplication ( );
__declspec(implementation_key(3837)) long Paragraph::GetCreator ( );
__declspec(implementation_key(3838)) IDispatchPtr Paragraph::GetParent ( );
__declspec(implementation_key(3839)) _ParagraphFormatPtr Paragraph::GetFormat ( );
__declspec(implementation_key(3840)) void Paragraph::PutFormat ( struct _ParagraphFormat * prop );
__declspec(implementation_key(3841)) TabStopsPtr Paragraph::GetTabStops ( );
__declspec(implementation_key(3842)) void Paragraph::PutTabStops ( struct TabStops * prop );
__declspec(implementation_key(3843)) BordersPtr Paragraph::GetBorders ( );
__declspec(implementation_key(3844)) void Paragraph::PutBorders ( struct Borders * prop );
__declspec(implementation_key(3845)) DropCapPtr Paragraph::GetDropCap ( );
__declspec(implementation_key(3846)) _variant_t Paragraph::GetStyle ( );
__declspec(implementation_key(3847)) void Paragraph::PutStyle ( VARIANT * prop );
__declspec(implementation_key(3848)) enum WdParagraphAlignment Paragraph::GetAlignment ( );
__declspec(implementation_key(3849)) void Paragraph::PutAlignment ( enum WdParagraphAlignment prop );
__declspec(implementation_key(3850)) long Paragraph::GetKeepTogether ( );
__declspec(implementation_key(3851)) void Paragraph::PutKeepTogether ( long prop );
__declspec(implementation_key(3852)) long Paragraph::GetKeepWithNext ( );
__declspec(implementation_key(3853)) void Paragraph::PutKeepWithNext ( long prop );
__declspec(implementation_key(3854)) long Paragraph::GetPageBreakBefore ( );
__declspec(implementation_key(3855)) void Paragraph::PutPageBreakBefore ( long prop );
__declspec(implementation_key(3856)) long Paragraph::GetNoLineNumber ( );
__declspec(implementation_key(3857)) void Paragraph::PutNoLineNumber ( long prop );
__declspec(implementation_key(3858)) float Paragraph::GetRightIndent ( );
__declspec(implementation_key(3859)) void Paragraph::PutRightIndent ( float prop );
__declspec(implementation_key(3860)) float Paragraph::GetLeftIndent ( );
__declspec(implementation_key(3861)) void Paragraph::PutLeftIndent ( float prop );
__declspec(implementation_key(3862)) float Paragraph::GetFirstLineIndent ( );
__declspec(implementation_key(3863)) void Paragraph::PutFirstLineIndent ( float prop );
__declspec(implementation_key(3864)) float Paragraph::GetLineSpacing ( );
__declspec(implementation_key(3865)) void Paragraph::PutLineSpacing ( float prop );
__declspec(implementation_key(3866)) enum WdLineSpacing Paragraph::GetLineSpacingRule ( );
__declspec(implementation_key(3867)) void Paragraph::PutLineSpacingRule ( enum WdLineSpacing prop );
__declspec(implementation_key(3868)) float Paragraph::GetSpaceBefore ( );
__declspec(implementation_key(3869)) void Paragraph::PutSpaceBefore ( float prop );
__declspec(implementation_key(3870)) float Paragraph::GetSpaceAfter ( );
__declspec(implementation_key(3871)) void Paragraph::PutSpaceAfter ( float prop );
__declspec(implementation_key(3872)) long Paragraph::GetHyphenation ( );
__declspec(implementation_key(3873)) void Paragraph::PutHyphenation ( long prop );
__declspec(implementation_key(3874)) long Paragraph::GetWidowControl ( );
__declspec(implementation_key(3875)) void Paragraph::PutWidowControl ( long prop );
__declspec(implementation_key(3876)) ShadingPtr Paragraph::GetShading ( );
__declspec(implementation_key(3877)) long Paragraph::GetFarEastLineBreakControl ( );
__declspec(implementation_key(3878)) void Paragraph::PutFarEastLineBreakControl ( long prop );
__declspec(implementation_key(3879)) long Paragraph::GetWordWrap ( );
__declspec(implementation_key(3880)) void Paragraph::PutWordWrap ( long prop );
__declspec(implementation_key(3881)) long Paragraph::GetHangingPunctuation ( );
__declspec(implementation_key(3882)) void Paragraph::PutHangingPunctuation ( long prop );
__declspec(implementation_key(3883)) long Paragraph::GetHalfWidthPunctuationOnTopOfLine ( );
__declspec(implementation_key(3884)) void Paragraph::PutHalfWidthPunctuationOnTopOfLine ( long prop );
__declspec(implementation_key(3885)) long Paragraph::GetAddSpaceBetweenFarEastAndAlpha ( );
__declspec(implementation_key(3886)) void Paragraph::PutAddSpaceBetweenFarEastAndAlpha ( long prop );
__declspec(implementation_key(3887)) long Paragraph::GetAddSpaceBetweenFarEastAndDigit ( );
__declspec(implementation_key(3888)) void Paragraph::PutAddSpaceBetweenFarEastAndDigit ( long prop );
__declspec(implementation_key(3889)) enum WdBaselineAlignment Paragraph::GetBaseLineAlignment ( );
__declspec(implementation_key(3890)) void Paragraph::PutBaseLineAlignment ( enum WdBaselineAlignment prop );
__declspec(implementation_key(3891)) long Paragraph::GetAutoAdjustRightIndent ( );
__declspec(implementation_key(3892)) void Paragraph::PutAutoAdjustRightIndent ( long prop );
__declspec(implementation_key(3893)) long Paragraph::GetDisableLineHeightGrid ( );
__declspec(implementation_key(3894)) void Paragraph::PutDisableLineHeightGrid ( long prop );
__declspec(implementation_key(3895)) enum WdOutlineLevel Paragraph::GetOutlineLevel ( );
__declspec(implementation_key(3896)) void Paragraph::PutOutlineLevel ( enum WdOutlineLevel prop );
__declspec(implementation_key(3897)) HRESULT Paragraph::CloseUp ( );
__declspec(implementation_key(3898)) HRESULT Paragraph::OpenUp ( );
__declspec(implementation_key(3899)) HRESULT Paragraph::OpenOrCloseUp ( );
__declspec(implementation_key(3900)) HRESULT Paragraph::TabHangingIndent ( short Count );
__declspec(implementation_key(3901)) HRESULT Paragraph::TabIndent ( short Count );
__declspec(implementation_key(3902)) HRESULT Paragraph::Reset ( );
__declspec(implementation_key(3903)) HRESULT Paragraph::Space1 ( );
__declspec(implementation_key(3904)) HRESULT Paragraph::Space15 ( );
__declspec(implementation_key(3905)) HRESULT Paragraph::Space2 ( );
__declspec(implementation_key(3906)) HRESULT Paragraph::IndentCharWidth ( short Count );
__declspec(implementation_key(3907)) HRESULT Paragraph::IndentFirstLineCharWidth ( short Count );
__declspec(implementation_key(3908)) ParagraphPtr Paragraph::Next ( VARIANT * Count );
__declspec(implementation_key(3909)) ParagraphPtr Paragraph::Previous ( VARIANT * Count );
__declspec(implementation_key(3910)) HRESULT Paragraph::OutlinePromote ( );
__declspec(implementation_key(3911)) HRESULT Paragraph::OutlineDemote ( );
__declspec(implementation_key(3912)) HRESULT Paragraph::OutlineDemoteToBody ( );
__declspec(implementation_key(3913)) HRESULT Paragraph::Indent ( );
__declspec(implementation_key(3914)) HRESULT Paragraph::Outdent ( );
__declspec(implementation_key(3915)) float Paragraph::GetCharacterUnitRightIndent ( );
__declspec(implementation_key(3916)) void Paragraph::PutCharacterUnitRightIndent ( float prop );
__declspec(implementation_key(3917)) float Paragraph::GetCharacterUnitLeftIndent ( );
__declspec(implementation_key(3918)) void Paragraph::PutCharacterUnitLeftIndent ( float prop );
__declspec(implementation_key(3919)) float Paragraph::GetCharacterUnitFirstLineIndent ( );
__declspec(implementation_key(3920)) void Paragraph::PutCharacterUnitFirstLineIndent ( float prop );
__declspec(implementation_key(3921)) float Paragraph::GetLineUnitBefore ( );
__declspec(implementation_key(3922)) void Paragraph::PutLineUnitBefore ( float prop );
__declspec(implementation_key(3923)) float Paragraph::GetLineUnitAfter ( );
__declspec(implementation_key(3924)) void Paragraph::PutLineUnitAfter ( float prop );
__declspec(implementation_key(3925)) enum WdReadingOrder Paragraph::GetReadingOrder ( );
__declspec(implementation_key(3926)) void Paragraph::PutReadingOrder ( enum WdReadingOrder prop );
__declspec(implementation_key(3927)) _bstr_t Paragraph::GetID ( );
__declspec(implementation_key(3928)) void Paragraph::PutID ( _bstr_t prop );
__declspec(implementation_key(3929)) long Paragraph::GetSpaceBeforeAuto ( );
__declspec(implementation_key(3930)) void Paragraph::PutSpaceBeforeAuto ( long prop );
__declspec(implementation_key(3931)) long Paragraph::GetSpaceAfterAuto ( );
__declspec(implementation_key(3932)) void Paragraph::PutSpaceAfterAuto ( long prop );
__declspec(implementation_key(3933)) VARIANT_BOOL Paragraph::GetIsStyleSeparator ( );
__declspec(implementation_key(3934)) HRESULT Paragraph::SelectNumber ( );
__declspec(implementation_key(3935)) HRESULT Paragraph::ListAdvanceTo ( short Level1, short Level2, short Level3, short Level4, short Level5, short Level6, short Level7, short Level8, short Level9 );
__declspec(implementation_key(3936)) HRESULT Paragraph::ResetAdvanceTo ( );
__declspec(implementation_key(3937)) HRESULT Paragraph::SeparateList ( );
__declspec(implementation_key(3938)) HRESULT Paragraph::JoinList ( );
__declspec(implementation_key(3939)) long Paragraph::GetMirrorIndents ( );
__declspec(implementation_key(3940)) void Paragraph::PutMirrorIndents ( long prop );
__declspec(implementation_key(3941)) enum WdTextboxTightWrap Paragraph::GetTextboxTightWrap ( );
__declspec(implementation_key(3942)) void Paragraph::PutTextboxTightWrap ( enum WdTextboxTightWrap prop );
__declspec(implementation_key(3943)) short Paragraph::GetListNumberOriginal ( short Level );
__declspec(implementation_key(3944)) IUnknownPtr Paragraphs::Get_NewEnum ( );
__declspec(implementation_key(3945)) long Paragraphs::GetCount ( );
__declspec(implementation_key(3946)) ParagraphPtr Paragraphs::GetFirst ( );
__declspec(implementation_key(3947)) ParagraphPtr Paragraphs::GetLast ( );
__declspec(implementation_key(3948)) _ApplicationPtr Paragraphs::GetApplication ( );
__declspec(implementation_key(3949)) long Paragraphs::GetCreator ( );
__declspec(implementation_key(3950)) IDispatchPtr Paragraphs::GetParent ( );
__declspec(implementation_key(3951)) _ParagraphFormatPtr Paragraphs::GetFormat ( );
__declspec(implementation_key(3952)) void Paragraphs::PutFormat ( struct _ParagraphFormat * prop );
__declspec(implementation_key(3953)) TabStopsPtr Paragraphs::GetTabStops ( );
__declspec(implementation_key(3954)) void Paragraphs::PutTabStops ( struct TabStops * prop );
__declspec(implementation_key(3955)) BordersPtr Paragraphs::GetBorders ( );
__declspec(implementation_key(3956)) void Paragraphs::PutBorders ( struct Borders * prop );
__declspec(implementation_key(3957)) _variant_t Paragraphs::GetStyle ( );
__declspec(implementation_key(3958)) void Paragraphs::PutStyle ( VARIANT * prop );
__declspec(implementation_key(3959)) enum WdParagraphAlignment Paragraphs::GetAlignment ( );
__declspec(implementation_key(3960)) void Paragraphs::PutAlignment ( enum WdParagraphAlignment prop );
__declspec(implementation_key(3961)) long Paragraphs::GetKeepTogether ( );
__declspec(implementation_key(3962)) void Paragraphs::PutKeepTogether ( long prop );
__declspec(implementation_key(3963)) long Paragraphs::GetKeepWithNext ( );
__declspec(implementation_key(3964)) void Paragraphs::PutKeepWithNext ( long prop );
__declspec(implementation_key(3965)) long Paragraphs::GetPageBreakBefore ( );
__declspec(implementation_key(3966)) void Paragraphs::PutPageBreakBefore ( long prop );
__declspec(implementation_key(3967)) long Paragraphs::GetNoLineNumber ( );
__declspec(implementation_key(3968)) void Paragraphs::PutNoLineNumber ( long prop );
__declspec(implementation_key(3969)) float Paragraphs::GetRightIndent ( );
__declspec(implementation_key(3970)) void Paragraphs::PutRightIndent ( float prop );
__declspec(implementation_key(3971)) float Paragraphs::GetLeftIndent ( );
__declspec(implementation_key(3972)) void Paragraphs::PutLeftIndent ( float prop );
__declspec(implementation_key(3973)) float Paragraphs::GetFirstLineIndent ( );
__declspec(implementation_key(3974)) void Paragraphs::PutFirstLineIndent ( float prop );
__declspec(implementation_key(3975)) float Paragraphs::GetLineSpacing ( );
__declspec(implementation_key(3976)) void Paragraphs::PutLineSpacing ( float prop );
__declspec(implementation_key(3977)) enum WdLineSpacing Paragraphs::GetLineSpacingRule ( );
__declspec(implementation_key(3978)) void Paragraphs::PutLineSpacingRule ( enum WdLineSpacing prop );
__declspec(implementation_key(3979)) float Paragraphs::GetSpaceBefore ( );
__declspec(implementation_key(3980)) void Paragraphs::PutSpaceBefore ( float prop );
__declspec(implementation_key(3981)) float Paragraphs::GetSpaceAfter ( );
__declspec(implementation_key(3982)) void Paragraphs::PutSpaceAfter ( float prop );
__declspec(implementation_key(3983)) long Paragraphs::GetHyphenation ( );
__declspec(implementation_key(3984)) void Paragraphs::PutHyphenation ( long prop );
__declspec(implementation_key(3985)) long Paragraphs::GetWidowControl ( );
__declspec(implementation_key(3986)) void Paragraphs::PutWidowControl ( long prop );
__declspec(implementation_key(3987)) ShadingPtr Paragraphs::GetShading ( );
__declspec(implementation_key(3988)) long Paragraphs::GetFarEastLineBreakControl ( );
__declspec(implementation_key(3989)) void Paragraphs::PutFarEastLineBreakControl ( long prop );
__declspec(implementation_key(3990)) long Paragraphs::GetWordWrap ( );
__declspec(implementation_key(3991)) void Paragraphs::PutWordWrap ( long prop );
__declspec(implementation_key(3992)) long Paragraphs::GetHangingPunctuation ( );
__declspec(implementation_key(3993)) void Paragraphs::PutHangingPunctuation ( long prop );
__declspec(implementation_key(3994)) long Paragraphs::GetHalfWidthPunctuationOnTopOfLine ( );
__declspec(implementation_key(3995)) void Paragraphs::PutHalfWidthPunctuationOnTopOfLine ( long prop );
__declspec(implementation_key(3996)) long Paragraphs::GetAddSpaceBetweenFarEastAndAlpha ( );
__declspec(implementation_key(3997)) void Paragraphs::PutAddSpaceBetweenFarEastAndAlpha ( long prop );
__declspec(implementation_key(3998)) long Paragraphs::GetAddSpaceBetweenFarEastAndDigit ( );
__declspec(implementation_key(3999)) void Paragraphs::PutAddSpaceBetweenFarEastAndDigit ( long prop );
__declspec(implementation_key(4000)) enum WdBaselineAlignment Paragraphs::GetBaseLineAlignment ( );
__declspec(implementation_key(4001)) void Paragraphs::PutBaseLineAlignment ( enum WdBaselineAlignment prop );
__declspec(implementation_key(4002)) long Paragraphs::GetAutoAdjustRightIndent ( );
__declspec(implementation_key(4003)) void Paragraphs::PutAutoAdjustRightIndent ( long prop );
__declspec(implementation_key(4004)) long Paragraphs::GetDisableLineHeightGrid ( );
__declspec(implementation_key(4005)) void Paragraphs::PutDisableLineHeightGrid ( long prop );
__declspec(implementation_key(4006)) enum WdOutlineLevel Paragraphs::GetOutlineLevel ( );
__declspec(implementation_key(4007)) void Paragraphs::PutOutlineLevel ( enum WdOutlineLevel prop );
__declspec(implementation_key(4008)) ParagraphPtr Paragraphs::Item ( long Index );
__declspec(implementation_key(4009)) ParagraphPtr Paragraphs::Add ( VARIANT * Range );
__declspec(implementation_key(4010)) HRESULT Paragraphs::CloseUp ( );
__declspec(implementation_key(4011)) HRESULT Paragraphs::OpenUp ( );
__declspec(implementation_key(4012)) HRESULT Paragraphs::OpenOrCloseUp ( );
__declspec(implementation_key(4013)) HRESULT Paragraphs::TabHangingIndent ( short Count );
__declspec(implementation_key(4014)) HRESULT Paragraphs::TabIndent ( short Count );
__declspec(implementation_key(4015)) HRESULT Paragraphs::Reset ( );
__declspec(implementation_key(4016)) HRESULT Paragraphs::Space1 ( );
__declspec(implementation_key(4017)) HRESULT Paragraphs::Space15 ( );
__declspec(implementation_key(4018)) HRESULT Paragraphs::Space2 ( );
__declspec(implementation_key(4019)) HRESULT Paragraphs::IndentCharWidth ( short Count );
__declspec(implementation_key(4020)) HRESULT Paragraphs::IndentFirstLineCharWidth ( short Count );
__declspec(implementation_key(4021)) HRESULT Paragraphs::OutlinePromote ( );
__declspec(implementation_key(4022)) HRESULT Paragraphs::OutlineDemote ( );
__declspec(implementation_key(4023)) HRESULT Paragraphs::OutlineDemoteToBody ( );
__declspec(implementation_key(4024)) HRESULT Paragraphs::Indent ( );
__declspec(implementation_key(4025)) HRESULT Paragraphs::Outdent ( );
__declspec(implementation_key(4026)) float Paragraphs::GetCharacterUnitRightIndent ( );
__declspec(implementation_key(4027)) void Paragraphs::PutCharacterUnitRightIndent ( float prop );
__declspec(implementation_key(4028)) float Paragraphs::GetCharacterUnitLeftIndent ( );
__declspec(implementation_key(4029)) void Paragraphs::PutCharacterUnitLeftIndent ( float prop );
__declspec(implementation_key(4030)) float Paragraphs::GetCharacterUnitFirstLineIndent ( );
__declspec(implementation_key(4031)) void Paragraphs::PutCharacterUnitFirstLineIndent ( float prop );
__declspec(implementation_key(4032)) float Paragraphs::GetLineUnitBefore ( );
__declspec(implementation_key(4033)) void Paragraphs::PutLineUnitBefore ( float prop );
__declspec(implementation_key(4034)) float Paragraphs::GetLineUnitAfter ( );
__declspec(implementation_key(4035)) void Paragraphs::PutLineUnitAfter ( float prop );
__declspec(implementation_key(4036)) enum WdReadingOrder Paragraphs::GetReadingOrder ( );
__declspec(implementation_key(4037)) void Paragraphs::PutReadingOrder ( enum WdReadingOrder prop );
__declspec(implementation_key(4038)) long Paragraphs::GetSpaceBeforeAuto ( );
__declspec(implementation_key(4039)) void Paragraphs::PutSpaceBeforeAuto ( long prop );
__declspec(implementation_key(4040)) long Paragraphs::GetSpaceAfterAuto ( );
__declspec(implementation_key(4041)) void Paragraphs::PutSpaceAfterAuto ( long prop );
__declspec(implementation_key(4042)) HRESULT Paragraphs::IncreaseSpacing ( );
__declspec(implementation_key(4043)) HRESULT Paragraphs::DecreaseSpacing ( );
__declspec(implementation_key(4044)) _ApplicationPtr AutoCorrectEntry::GetApplication ( );
__declspec(implementation_key(4045)) long AutoCorrectEntry::GetCreator ( );
__declspec(implementation_key(4046)) IDispatchPtr AutoCorrectEntry::GetParent ( );
__declspec(implementation_key(4047)) long AutoCorrectEntry::GetIndex ( );
__declspec(implementation_key(4048)) _bstr_t AutoCorrectEntry::GetName ( );
__declspec(implementation_key(4049)) void AutoCorrectEntry::PutName ( _bstr_t prop );
__declspec(implementation_key(4050)) _bstr_t AutoCorrectEntry::GetValue ( );
__declspec(implementation_key(4051)) void AutoCorrectEntry::PutValue ( _bstr_t prop );
__declspec(implementation_key(4052)) VARIANT_BOOL AutoCorrectEntry::GetRichText ( );
__declspec(implementation_key(4053)) HRESULT AutoCorrectEntry::Delete ( );
__declspec(implementation_key(4054)) HRESULT AutoCorrectEntry::Apply ( struct Range * Range );
__declspec(implementation_key(4055)) _ApplicationPtr AutoCorrectEntries::GetApplication ( );
__declspec(implementation_key(4056)) long AutoCorrectEntries::GetCreator ( );
__declspec(implementation_key(4057)) IDispatchPtr AutoCorrectEntries::GetParent ( );
__declspec(implementation_key(4058)) IUnknownPtr AutoCorrectEntries::Get_NewEnum ( );
__declspec(implementation_key(4059)) long AutoCorrectEntries::GetCount ( );
__declspec(implementation_key(4060)) AutoCorrectEntryPtr AutoCorrectEntries::Item ( VARIANT * Index );
__declspec(implementation_key(4061)) AutoCorrectEntryPtr AutoCorrectEntries::Add ( _bstr_t Name, _bstr_t Value );
__declspec(implementation_key(4062)) AutoCorrectEntryPtr AutoCorrectEntries::AddRichText ( _bstr_t Name, struct Range * Range );
__declspec(implementation_key(4063)) _ApplicationPtr AutoCorrect::GetApplication ( );
__declspec(implementation_key(4064)) long AutoCorrect::GetCreator ( );
__declspec(implementation_key(4065)) IDispatchPtr AutoCorrect::GetParent ( );
__declspec(implementation_key(4066)) VARIANT_BOOL AutoCorrect::GetCorrectDays ( );
__declspec(implementation_key(4067)) void AutoCorrect::PutCorrectDays ( VARIANT_BOOL prop );
__declspec(implementation_key(4068)) VARIANT_BOOL AutoCorrect::GetCorrectInitialCaps ( );
__declspec(implementation_key(4069)) void AutoCorrect::PutCorrectInitialCaps ( VARIANT_BOOL prop );
__declspec(implementation_key(4070)) VARIANT_BOOL AutoCorrect::GetCorrectSentenceCaps ( );
__declspec(implementation_key(4071)) void AutoCorrect::PutCorrectSentenceCaps ( VARIANT_BOOL prop );
__declspec(implementation_key(4072)) VARIANT_BOOL AutoCorrect::Get__ReplaceText ( );
__declspec(implementation_key(4073)) void AutoCorrect::Put__ReplaceText ( VARIANT_BOOL prop );
__declspec(implementation_key(4074)) AutoCorrectEntriesPtr AutoCorrect::GetEntries ( );
__declspec(implementation_key(4075)) FirstLetterExceptionsPtr AutoCorrect::GetFirstLetterExceptions ( );
__declspec(implementation_key(4076)) VARIANT_BOOL AutoCorrect::GetFirstLetterAutoAdd ( );
__declspec(implementation_key(4077)) void AutoCorrect::PutFirstLetterAutoAdd ( VARIANT_BOOL prop );
__declspec(implementation_key(4078)) TwoInitialCapsExceptionsPtr AutoCorrect::GetTwoInitialCapsExceptions ( );
__declspec(implementation_key(4079)) VARIANT_BOOL AutoCorrect::GetTwoInitialCapsAutoAdd ( );
__declspec(implementation_key(4080)) void AutoCorrect::PutTwoInitialCapsAutoAdd ( VARIANT_BOOL prop );
__declspec(implementation_key(4081)) VARIANT_BOOL AutoCorrect::GetCorrectCapsLock ( );
__declspec(implementation_key(4082)) void AutoCorrect::PutCorrectCapsLock ( VARIANT_BOOL prop );
__declspec(implementation_key(4083)) VARIANT_BOOL AutoCorrect::GetCorrectHangulAndAlphabet ( );
__declspec(implementation_key(4084)) void AutoCorrect::PutCorrectHangulAndAlphabet ( VARIANT_BOOL prop );
__declspec(implementation_key(4085)) HangulAndAlphabetExceptionsPtr AutoCorrect::GetHangulAndAlphabetExceptions ( );
__declspec(implementation_key(4086)) VARIANT_BOOL AutoCorrect::GetHangulAndAlphabetAutoAdd ( );
__declspec(implementation_key(4087)) void AutoCorrect::PutHangulAndAlphabetAutoAdd ( VARIANT_BOOL prop );
__declspec(implementation_key(4088)) VARIANT_BOOL AutoCorrect::GetReplaceTextFromSpellingChecker ( );
__declspec(implementation_key(4089)) void AutoCorrect::PutReplaceTextFromSpellingChecker ( VARIANT_BOOL prop );
__declspec(implementation_key(4090)) VARIANT_BOOL AutoCorrect::GetOtherCorrectionsAutoAdd ( );
__declspec(implementation_key(4091)) void AutoCorrect::PutOtherCorrectionsAutoAdd ( VARIANT_BOOL prop );
__declspec(implementation_key(4092)) OtherCorrectionsExceptionsPtr AutoCorrect::GetOtherCorrectionsExceptions ( );
__declspec(implementation_key(4093)) VARIANT_BOOL AutoCorrect::GetCorrectKeyboardSetting ( );
__declspec(implementation_key(4094)) void AutoCorrect::PutCorrectKeyboardSetting ( VARIANT_BOOL prop );
__declspec(implementation_key(4095)) VARIANT_BOOL AutoCorrect::GetCorrectTableCells ( );
__declspec(implementation_key(4096)) void AutoCorrect::PutCorrectTableCells ( VARIANT_BOOL prop );
__declspec(implementation_key(4097)) VARIANT_BOOL AutoCorrect::GetDisplayAutoCorrectOptions ( );
__declspec(implementation_key(4098)) void AutoCorrect::PutDisplayAutoCorrectOptions ( VARIANT_BOOL prop );
__declspec(implementation_key(4099)) _ApplicationPtr Footnote::GetApplication ( );
__declspec(implementation_key(4100)) long Footnote::GetCreator ( );
__declspec(implementation_key(4101)) IDispatchPtr Footnote::GetParent ( );
__declspec(implementation_key(4102)) RangePtr Footnote::GetRange ( );
__declspec(implementation_key(4103)) RangePtr Footnote::GetReference ( );
__declspec(implementation_key(4104)) long Footnote::GetIndex ( );
__declspec(implementation_key(4105)) HRESULT Footnote::Delete ( );
__declspec(implementation_key(4106)) IUnknownPtr Footnotes::Get_NewEnum ( );
__declspec(implementation_key(4107)) long Footnotes::GetCount ( );
__declspec(implementation_key(4108)) _ApplicationPtr Footnotes::GetApplication ( );
__declspec(implementation_key(4109)) long Footnotes::GetCreator ( );
__declspec(implementation_key(4110)) IDispatchPtr Footnotes::GetParent ( );
__declspec(implementation_key(4111)) enum WdFootnoteLocation Footnotes::GetLocation ( );
__declspec(implementation_key(4112)) void Footnotes::PutLocation ( enum WdFootnoteLocation prop );
__declspec(implementation_key(4113)) enum WdNoteNumberStyle Footnotes::GetNumberStyle ( );
__declspec(implementation_key(4114)) void Footnotes::PutNumberStyle ( enum WdNoteNumberStyle prop );
__declspec(implementation_key(4115)) long Footnotes::GetStartingNumber ( );
__declspec(implementation_key(4116)) void Footnotes::PutStartingNumber ( long prop );
__declspec(implementation_key(4117)) enum WdNumberingRule Footnotes::GetNumberingRule ( );
__declspec(implementation_key(4118)) void Footnotes::PutNumberingRule ( enum WdNumberingRule prop );
__declspec(implementation_key(4119)) RangePtr Footnotes::GetSeparator ( );
__declspec(implementation_key(4120)) RangePtr Footnotes::GetContinuationSeparator ( );
__declspec(implementation_key(4121)) RangePtr Footnotes::GetContinuationNotice ( );
__declspec(implementation_key(4122)) FootnotePtr Footnotes::Item ( long Index );
__declspec(implementation_key(4123)) FootnotePtr Footnotes::Add ( struct Range * Range, VARIANT * Reference, VARIANT * Text );
__declspec(implementation_key(4124)) HRESULT Footnotes::Convert ( );
__declspec(implementation_key(4125)) HRESULT Footnotes::SwapWithEndnotes ( );
__declspec(implementation_key(4126)) HRESULT Footnotes::ResetSeparator ( );
__declspec(implementation_key(4127)) HRESULT Footnotes::ResetContinuationSeparator ( );
__declspec(implementation_key(4128)) HRESULT Footnotes::ResetContinuationNotice ( );
__declspec(implementation_key(4129)) _ApplicationPtr Endnote::GetApplication ( );
__declspec(implementation_key(4130)) long Endnote::GetCreator ( );
__declspec(implementation_key(4131)) IDispatchPtr Endnote::GetParent ( );
__declspec(implementation_key(4132)) RangePtr Endnote::GetRange ( );
__declspec(implementation_key(4133)) RangePtr Endnote::GetReference ( );
__declspec(implementation_key(4134)) long Endnote::GetIndex ( );
__declspec(implementation_key(4135)) HRESULT Endnote::Delete ( );
__declspec(implementation_key(4136)) IUnknownPtr Endnotes::Get_NewEnum ( );
__declspec(implementation_key(4137)) long Endnotes::GetCount ( );
__declspec(implementation_key(4138)) _ApplicationPtr Endnotes::GetApplication ( );
__declspec(implementation_key(4139)) long Endnotes::GetCreator ( );
__declspec(implementation_key(4140)) IDispatchPtr Endnotes::GetParent ( );
__declspec(implementation_key(4141)) enum WdEndnoteLocation Endnotes::GetLocation ( );
__declspec(implementation_key(4142)) void Endnotes::PutLocation ( enum WdEndnoteLocation prop );
__declspec(implementation_key(4143)) enum WdNoteNumberStyle Endnotes::GetNumberStyle ( );
__declspec(implementation_key(4144)) void Endnotes::PutNumberStyle ( enum WdNoteNumberStyle prop );
__declspec(implementation_key(4145)) long Endnotes::GetStartingNumber ( );
__declspec(implementation_key(4146)) void Endnotes::PutStartingNumber ( long prop );
__declspec(implementation_key(4147)) enum WdNumberingRule Endnotes::GetNumberingRule ( );
__declspec(implementation_key(4148)) void Endnotes::PutNumberingRule ( enum WdNumberingRule prop );
__declspec(implementation_key(4149)) RangePtr Endnotes::GetSeparator ( );
__declspec(implementation_key(4150)) RangePtr Endnotes::GetContinuationSeparator ( );
__declspec(implementation_key(4151)) RangePtr Endnotes::GetContinuationNotice ( );
__declspec(implementation_key(4152)) EndnotePtr Endnotes::Item ( long Index );
__declspec(implementation_key(4153)) EndnotePtr Endnotes::Add ( struct Range * Range, VARIANT * Reference, VARIANT * Text );
__declspec(implementation_key(4154)) HRESULT Endnotes::Convert ( );
__declspec(implementation_key(4155)) HRESULT Endnotes::SwapWithFootnotes ( );
__declspec(implementation_key(4156)) HRESULT Endnotes::ResetSeparator ( );
__declspec(implementation_key(4157)) HRESULT Endnotes::ResetContinuationSeparator ( );
__declspec(implementation_key(4158)) HRESULT Endnotes::ResetContinuationNotice ( );
__declspec(implementation_key(4159)) _ApplicationPtr Comment::GetApplication ( );
__declspec(implementation_key(4160)) long Comment::GetCreator ( );
__declspec(implementation_key(4161)) IDispatchPtr Comment::GetParent ( );
__declspec(implementation_key(4162)) RangePtr Comment::GetRange ( );
__declspec(implementation_key(4163)) RangePtr Comment::GetReference ( );
__declspec(implementation_key(4164)) RangePtr Comment::GetScope ( );
__declspec(implementation_key(4165)) long Comment::GetIndex ( );
__declspec(implementation_key(4166)) _bstr_t Comment::GetAuthor ( );
__declspec(implementation_key(4167)) void Comment::PutAuthor ( _bstr_t prop );
__declspec(implementation_key(4168)) _bstr_t Comment::GetInitial ( );
__declspec(implementation_key(4169)) void Comment::PutInitial ( _bstr_t prop );
__declspec(implementation_key(4170)) VARIANT_BOOL Comment::GetShowTip ( );
__declspec(implementation_key(4171)) void Comment::PutShowTip ( VARIANT_BOOL prop );
__declspec(implementation_key(4172)) HRESULT Comment::Delete ( );
__declspec(implementation_key(4173)) HRESULT Comment::Edit ( );
__declspec(implementation_key(4174)) DATE Comment::GetDate ( );
__declspec(implementation_key(4175)) VARIANT_BOOL Comment::GetIsInk ( );
__declspec(implementation_key(4176)) IUnknownPtr Comments::Get_NewEnum ( );
__declspec(implementation_key(4177)) long Comments::GetCount ( );
__declspec(implementation_key(4178)) _ApplicationPtr Comments::GetApplication ( );
__declspec(implementation_key(4179)) long Comments::GetCreator ( );
__declspec(implementation_key(4180)) IDispatchPtr Comments::GetParent ( );
__declspec(implementation_key(4181)) _bstr_t Comments::GetShowBy ( );
__declspec(implementation_key(4182)) void Comments::PutShowBy ( _bstr_t prop );
__declspec(implementation_key(4183)) CommentPtr Comments::Item ( long Index );
__declspec(implementation_key(4184)) CommentPtr Comments::Add ( struct Range * Range, VARIANT * Text );
__declspec(implementation_key(4185)) _ApplicationPtr AutoTextEntry::GetApplication ( );
__declspec(implementation_key(4186)) long AutoTextEntry::GetCreator ( );
__declspec(implementation_key(4187)) IDispatchPtr AutoTextEntry::GetParent ( );
__declspec(implementation_key(4188)) long AutoTextEntry::GetIndex ( );
__declspec(implementation_key(4189)) _bstr_t AutoTextEntry::GetName ( );
__declspec(implementation_key(4190)) void AutoTextEntry::PutName ( _bstr_t prop );
__declspec(implementation_key(4191)) _bstr_t AutoTextEntry::GetStyleName ( );
__declspec(implementation_key(4192)) _bstr_t AutoTextEntry::GetValue ( );
__declspec(implementation_key(4193)) void AutoTextEntry::PutValue ( _bstr_t prop );
__declspec(implementation_key(4194)) HRESULT AutoTextEntry::Delete ( );
__declspec(implementation_key(4195)) RangePtr AutoTextEntry::Insert ( struct Range * Where, VARIANT * RichText );
__declspec(implementation_key(4196)) _ApplicationPtr AutoTextEntries::GetApplication ( );
__declspec(implementation_key(4197)) long AutoTextEntries::GetCreator ( );
__declspec(implementation_key(4198)) IDispatchPtr AutoTextEntries::GetParent ( );
__declspec(implementation_key(4199)) IUnknownPtr AutoTextEntries::Get_NewEnum ( );
__declspec(implementation_key(4200)) long AutoTextEntries::GetCount ( );
__declspec(implementation_key(4201)) AutoTextEntryPtr AutoTextEntries::Item ( VARIANT * Index );
__declspec(implementation_key(4202)) AutoTextEntryPtr AutoTextEntries::Add ( _bstr_t Name, struct Range * Range );
__declspec(implementation_key(4203)) AutoTextEntryPtr AutoTextEntries::AppendToSpike ( struct Range * Range );
__declspec(implementation_key(4204)) _ApplicationPtr Frame::GetApplication ( );
__declspec(implementation_key(4205)) long Frame::GetCreator ( );
__declspec(implementation_key(4206)) IDispatchPtr Frame::GetParent ( );
__declspec(implementation_key(4207)) enum WdFrameSizeRule Frame::GetHeightRule ( );
__declspec(implementation_key(4208)) void Frame::PutHeightRule ( enum WdFrameSizeRule prop );
__declspec(implementation_key(4209)) enum WdFrameSizeRule Frame::GetWidthRule ( );
__declspec(implementation_key(4210)) void Frame::PutWidthRule ( enum WdFrameSizeRule prop );
__declspec(implementation_key(4211)) float Frame::GetHorizontalDistanceFromText ( );
__declspec(implementation_key(4212)) void Frame::PutHorizontalDistanceFromText ( float prop );
__declspec(implementation_key(4213)) float Frame::GetHeight ( );
__declspec(implementation_key(4214)) void Frame::PutHeight ( float prop );
__declspec(implementation_key(4215)) float Frame::GetHorizontalPosition ( );
__declspec(implementation_key(4216)) void Frame::PutHorizontalPosition ( float prop );
__declspec(implementation_key(4217)) VARIANT_BOOL Frame::GetLockAnchor ( );
__declspec(implementation_key(4218)) void Frame::PutLockAnchor ( VARIANT_BOOL prop );
__declspec(implementation_key(4219)) enum WdRelativeHorizontalPosition Frame::GetRelativeHorizontalPosition ( );
__declspec(implementation_key(4220)) void Frame::PutRelativeHorizontalPosition ( enum WdRelativeHorizontalPosition prop );
__declspec(implementation_key(4221)) enum WdRelativeVerticalPosition Frame::GetRelativeVerticalPosition ( );
__declspec(implementation_key(4222)) void Frame::PutRelativeVerticalPosition ( enum WdRelativeVerticalPosition prop );
__declspec(implementation_key(4223)) float Frame::GetVerticalDistanceFromText ( );
__declspec(implementation_key(4224)) void Frame::PutVerticalDistanceFromText ( float prop );
__declspec(implementation_key(4225)) float Frame::GetVerticalPosition ( );
__declspec(implementation_key(4226)) void Frame::PutVerticalPosition ( float prop );
__declspec(implementation_key(4227)) float Frame::GetWidth ( );
__declspec(implementation_key(4228)) void Frame::PutWidth ( float prop );
__declspec(implementation_key(4229)) VARIANT_BOOL Frame::GetTextWrap ( );
__declspec(implementation_key(4230)) void Frame::PutTextWrap ( VARIANT_BOOL prop );
__declspec(implementation_key(4231)) ShadingPtr Frame::GetShading ( );
__declspec(implementation_key(4232)) BordersPtr Frame::GetBorders ( );
__declspec(implementation_key(4233)) void Frame::PutBorders ( struct Borders * prop );
__declspec(implementation_key(4234)) RangePtr Frame::GetRange ( );
__declspec(implementation_key(4235)) HRESULT Frame::Delete ( );
__declspec(implementation_key(4236)) HRESULT Frame::Select ( );
__declspec(implementation_key(4237)) HRESULT Frame::Copy ( );
__declspec(implementation_key(4238)) HRESULT Frame::Cut ( );
__declspec(implementation_key(4239)) _ApplicationPtr Replacement::GetApplication ( );
__declspec(implementation_key(4240)) long Replacement::GetCreator ( );
__declspec(implementation_key(4241)) IDispatchPtr Replacement::GetParent ( );
__declspec(implementation_key(4242)) _FontPtr Replacement::GetFont ( );
__declspec(implementation_key(4243)) void Replacement::PutFont ( struct _Font * prop );
__declspec(implementation_key(4244)) _ParagraphFormatPtr Replacement::GetParagraphFormat ( );
__declspec(implementation_key(4245)) void Replacement::PutParagraphFormat ( struct _ParagraphFormat * prop );
__declspec(implementation_key(4246)) _variant_t Replacement::GetStyle ( );
__declspec(implementation_key(4247)) void Replacement::PutStyle ( VARIANT * prop );
__declspec(implementation_key(4248)) _bstr_t Replacement::GetText ( );
__declspec(implementation_key(4249)) void Replacement::PutText ( _bstr_t prop );
__declspec(implementation_key(4250)) enum WdLanguageID Replacement::GetLanguageID ( );
__declspec(implementation_key(4251)) void Replacement::PutLanguageID ( enum WdLanguageID prop );
__declspec(implementation_key(4252)) long Replacement::GetHighlight ( );
__declspec(implementation_key(4253)) void Replacement::PutHighlight ( long prop );
__declspec(implementation_key(4254)) FramePtr Replacement::GetFrame ( );
__declspec(implementation_key(4255)) enum WdLanguageID Replacement::GetLanguageIDFarEast ( );
__declspec(implementation_key(4256)) void Replacement::PutLanguageIDFarEast ( enum WdLanguageID prop );
__declspec(implementation_key(4257)) HRESULT Replacement::ClearFormatting ( );
__declspec(implementation_key(4258)) long Replacement::GetNoProofing ( );
__declspec(implementation_key(4259)) void Replacement::PutNoProofing ( long prop );
__declspec(implementation_key(4260)) _ApplicationPtr Find::GetApplication ( );
__declspec(implementation_key(4261)) long Find::GetCreator ( );
__declspec(implementation_key(4262)) IDispatchPtr Find::GetParent ( );
__declspec(implementation_key(4263)) VARIANT_BOOL Find::GetForward ( );
__declspec(implementation_key(4264)) void Find::PutForward ( VARIANT_BOOL prop );
__declspec(implementation_key(4265)) _FontPtr Find::GetFont ( );
__declspec(implementation_key(4266)) void Find::PutFont ( struct _Font * prop );
__declspec(implementation_key(4267)) VARIANT_BOOL Find::GetFound ( );
__declspec(implementation_key(4268)) VARIANT_BOOL Find::GetMatchAllWordForms ( );
__declspec(implementation_key(4269)) void Find::PutMatchAllWordForms ( VARIANT_BOOL prop );
__declspec(implementation_key(4270)) VARIANT_BOOL Find::GetMatchCase ( );
__declspec(implementation_key(4271)) void Find::PutMatchCase ( VARIANT_BOOL prop );
__declspec(implementation_key(4272)) VARIANT_BOOL Find::GetMatchWildcards ( );
__declspec(implementation_key(4273)) void Find::PutMatchWildcards ( VARIANT_BOOL prop );
__declspec(implementation_key(4274)) VARIANT_BOOL Find::GetMatchSoundsLike ( );
__declspec(implementation_key(4275)) void Find::PutMatchSoundsLike ( VARIANT_BOOL prop );
__declspec(implementation_key(4276)) VARIANT_BOOL Find::GetMatchWholeWord ( );
__declspec(implementation_key(4277)) void Find::PutMatchWholeWord ( VARIANT_BOOL prop );
__declspec(implementation_key(4278)) VARIANT_BOOL Find::GetMatchFuzzy ( );
__declspec(implementation_key(4279)) void Find::PutMatchFuzzy ( VARIANT_BOOL prop );
__declspec(implementation_key(4280)) VARIANT_BOOL Find::GetMatchByte ( );
__declspec(implementation_key(4281)) void Find::PutMatchByte ( VARIANT_BOOL prop );
__declspec(implementation_key(4282)) _ParagraphFormatPtr Find::GetParagraphFormat ( );
__declspec(implementation_key(4283)) void Find::PutParagraphFormat ( struct _ParagraphFormat * prop );
__declspec(implementation_key(4284)) _variant_t Find::GetStyle ( );
__declspec(implementation_key(4285)) void Find::PutStyle ( VARIANT * prop );
__declspec(implementation_key(4286)) _bstr_t Find::GetText ( );
__declspec(implementation_key(4287)) void Find::PutText ( _bstr_t prop );
__declspec(implementation_key(4288)) enum WdLanguageID Find::GetLanguageID ( );
__declspec(implementation_key(4289)) void Find::PutLanguageID ( enum WdLanguageID prop );
__declspec(implementation_key(4290)) long Find::GetHighlight ( );
__declspec(implementation_key(4291)) void Find::PutHighlight ( long prop );
__declspec(implementation_key(4292)) ReplacementPtr Find::GetReplacement ( );
__declspec(implementation_key(4293)) FramePtr Find::GetFrame ( );
__declspec(implementation_key(4294)) enum WdFindWrap Find::GetWrap ( );
__declspec(implementation_key(4295)) void Find::PutWrap ( enum WdFindWrap prop );
__declspec(implementation_key(4296)) VARIANT_BOOL Find::GetFormat ( );
__declspec(implementation_key(4297)) void Find::PutFormat ( VARIANT_BOOL prop );
__declspec(implementation_key(4298)) enum WdLanguageID Find::GetLanguageIDFarEast ( );
__declspec(implementation_key(4299)) void Find::PutLanguageIDFarEast ( enum WdLanguageID prop );
__declspec(implementation_key(4300)) enum WdLanguageID Find::GetLanguageIDOther ( );
__declspec(implementation_key(4301)) void Find::PutLanguageIDOther ( enum WdLanguageID prop );
__declspec(implementation_key(4302)) VARIANT_BOOL Find::GetCorrectHangulEndings ( );
__declspec(implementation_key(4303)) void Find::PutCorrectHangulEndings ( VARIANT_BOOL prop );
__declspec(implementation_key(4304)) VARIANT_BOOL Find::ExecuteOld ( VARIANT * WORDFindText, VARIANT * MatchCase, VARIANT * MatchWholeWord, VARIANT * MatchWildcards, VARIANT * MatchSoundsLike, VARIANT * MatchAllWordForms, VARIANT * Forward, VARIANT * Wrap, VARIANT * Format, VARIANT * ReplaceWith, VARIANT * Replace );
__declspec(implementation_key(4305)) HRESULT Find::ClearFormatting ( );
__declspec(implementation_key(4306)) HRESULT Find::SetAllFuzzyOptions ( );
__declspec(implementation_key(4307)) HRESULT Find::ClearAllFuzzyOptions ( );
__declspec(implementation_key(4308)) VARIANT_BOOL Find::Execute ( VARIANT * WORDFindText, VARIANT * MatchCase, VARIANT * MatchWholeWord, VARIANT * MatchWildcards, VARIANT * MatchSoundsLike, VARIANT * MatchAllWordForms, VARIANT * Forward, VARIANT * Wrap, VARIANT * Format, VARIANT * ReplaceWith, VARIANT * Replace, VARIANT * MatchKashida, VARIANT * MatchDiacritics, VARIANT * MatchAlefHamza, VARIANT * MatchControl );
__declspec(implementation_key(4309)) long Find::GetNoProofing ( );
__declspec(implementation_key(4310)) void Find::PutNoProofing ( long prop );
__declspec(implementation_key(4311)) VARIANT_BOOL Find::GetMatchKashida ( );
__declspec(implementation_key(4312)) void Find::PutMatchKashida ( VARIANT_BOOL prop );
__declspec(implementation_key(4313)) VARIANT_BOOL Find::GetMatchDiacritics ( );
__declspec(implementation_key(4314)) void Find::PutMatchDiacritics ( VARIANT_BOOL prop );
__declspec(implementation_key(4315)) VARIANT_BOOL Find::GetMatchAlefHamza ( );
__declspec(implementation_key(4316)) void Find::PutMatchAlefHamza ( VARIANT_BOOL prop );
__declspec(implementation_key(4317)) VARIANT_BOOL Find::GetMatchControl ( );
__declspec(implementation_key(4318)) void Find::PutMatchControl ( VARIANT_BOOL prop );
__declspec(implementation_key(4319)) VARIANT_BOOL Find::GetMatchPhrase ( );
__declspec(implementation_key(4320)) void Find::PutMatchPhrase ( VARIANT_BOOL prop );
__declspec(implementation_key(4321)) VARIANT_BOOL Find::GetMatchPrefix ( );
__declspec(implementation_key(4322)) void Find::PutMatchPrefix ( VARIANT_BOOL prop );
__declspec(implementation_key(4323)) VARIANT_BOOL Find::GetMatchSuffix ( );
__declspec(implementation_key(4324)) void Find::PutMatchSuffix ( VARIANT_BOOL prop );
__declspec(implementation_key(4325)) VARIANT_BOOL Find::GetIgnoreSpace ( );
__declspec(implementation_key(4326)) void Find::PutIgnoreSpace ( VARIANT_BOOL prop );
__declspec(implementation_key(4327)) VARIANT_BOOL Find::GetIgnorePunct ( );
__declspec(implementation_key(4328)) void Find::PutIgnorePunct ( VARIANT_BOOL prop );
__declspec(implementation_key(4329)) VARIANT_BOOL Find::HitHighlight ( VARIANT * WORDFindText, VARIANT * HighlightColor, VARIANT * TextColor, VARIANT * MatchCase, VARIANT * MatchWholeWord, VARIANT * MatchPrefix, VARIANT * MatchSuffix, VARIANT * MatchPhrase, VARIANT * MatchWildcards, VARIANT * MatchSoundsLike, VARIANT * MatchAllWordForms, VARIANT * MatchByte, VARIANT * MatchFuzzy, VARIANT * MatchKashida, VARIANT * MatchDiacritics, VARIANT * MatchAlefHamza, VARIANT * MatchControl, VARIANT * IgnoreSpace, VARIANT * IgnorePunct, VARIANT * HanjaPhoneticHangul );
__declspec(implementation_key(4330)) VARIANT_BOOL Find::ClearHitHighlight ( );
__declspec(implementation_key(4331)) VARIANT_BOOL Find::Execute2007 ( VARIANT * WORDFindText, VARIANT * MatchCase, VARIANT * MatchWholeWord, VARIANT * MatchWildcards, VARIANT * MatchSoundsLike, VARIANT * MatchAllWordForms, VARIANT * Forward, VARIANT * Wrap, VARIANT * Format, VARIANT * ReplaceWith, VARIANT * Replace, VARIANT * MatchKashida, VARIANT * MatchDiacritics, VARIANT * MatchAlefHamza, VARIANT * MatchControl, VARIANT * MatchPrefix, VARIANT * MatchSuffix, VARIANT * MatchPhrase, VARIANT * IgnoreSpace, VARIANT * IgnorePunct );
__declspec(implementation_key(4332)) VARIANT_BOOL Find::GetHanjaPhoneticHangul ( );
__declspec(implementation_key(4333)) void Find::PutHanjaPhoneticHangul ( VARIANT_BOOL prop );
__declspec(implementation_key(4334)) _ApplicationPtr Frames::GetApplication ( );
__declspec(implementation_key(4335)) long Frames::GetCreator ( );
__declspec(implementation_key(4336)) IDispatchPtr Frames::GetParent ( );
__declspec(implementation_key(4337)) IUnknownPtr Frames::Get_NewEnum ( );
__declspec(implementation_key(4338)) long Frames::GetCount ( );
__declspec(implementation_key(4339)) FramePtr Frames::Item ( long Index );
__declspec(implementation_key(4340)) FramePtr Frames::Add ( struct Range * Range );
__declspec(implementation_key(4341)) HRESULT Frames::Delete ( );
__declspec(implementation_key(4342)) _ApplicationPtr FormField::GetApplication ( );
__declspec(implementation_key(4343)) long FormField::GetCreator ( );
__declspec(implementation_key(4344)) IDispatchPtr FormField::GetParent ( );
__declspec(implementation_key(4345)) enum WdFieldType FormField::GetType ( );
__declspec(implementation_key(4346)) _bstr_t FormField::GetName ( );
__declspec(implementation_key(4347)) void FormField::PutName ( _bstr_t prop );
__declspec(implementation_key(4348)) _bstr_t FormField::GetEntryMacro ( );
__declspec(implementation_key(4349)) void FormField::PutEntryMacro ( _bstr_t prop );
__declspec(implementation_key(4350)) _bstr_t FormField::GetExitMacro ( );
__declspec(implementation_key(4351)) void FormField::PutExitMacro ( _bstr_t prop );
__declspec(implementation_key(4352)) VARIANT_BOOL FormField::GetOwnHelp ( );
__declspec(implementation_key(4353)) void FormField::PutOwnHelp ( VARIANT_BOOL prop );
__declspec(implementation_key(4354)) VARIANT_BOOL FormField::GetOwnStatus ( );
__declspec(implementation_key(4355)) void FormField::PutOwnStatus ( VARIANT_BOOL prop );
__declspec(implementation_key(4356)) _bstr_t FormField::GetHelpText ( );
__declspec(implementation_key(4357)) void FormField::PutHelpText ( _bstr_t prop );
__declspec(implementation_key(4358)) _bstr_t FormField::GetStatusText ( );
__declspec(implementation_key(4359)) void FormField::PutStatusText ( _bstr_t prop );
__declspec(implementation_key(4360)) VARIANT_BOOL FormField::GetEnabled ( );
__declspec(implementation_key(4361)) void FormField::PutEnabled ( VARIANT_BOOL prop );
__declspec(implementation_key(4362)) _bstr_t FormField::GetResult ( );
__declspec(implementation_key(4363)) void FormField::PutResult ( _bstr_t prop );
__declspec(implementation_key(4364)) TextInputPtr FormField::GetTextInput ( );
__declspec(implementation_key(4365)) CheckBoxPtr FormField::GetCheckBox ( );
__declspec(implementation_key(4366)) DropDownPtr FormField::GetDropDown ( );
__declspec(implementation_key(4367)) FormFieldPtr FormField::GetNext ( );
__declspec(implementation_key(4368)) FormFieldPtr FormField::GetPrevious ( );
__declspec(implementation_key(4369)) VARIANT_BOOL FormField::GetCalculateOnExit ( );
__declspec(implementation_key(4370)) void FormField::PutCalculateOnExit ( VARIANT_BOOL prop );
__declspec(implementation_key(4371)) RangePtr FormField::GetRange ( );
__declspec(implementation_key(4372)) HRESULT FormField::Select ( );
__declspec(implementation_key(4373)) HRESULT FormField::Copy ( );
__declspec(implementation_key(4374)) HRESULT FormField::Cut ( );
__declspec(implementation_key(4375)) HRESULT FormField::Delete ( );
__declspec(implementation_key(4376)) _ApplicationPtr FormFields::GetApplication ( );
__declspec(implementation_key(4377)) long FormFields::GetCreator ( );
__declspec(implementation_key(4378)) IDispatchPtr FormFields::GetParent ( );
__declspec(implementation_key(4379)) long FormFields::GetCount ( );
__declspec(implementation_key(4380)) VARIANT_BOOL FormFields::GetShaded ( );
__declspec(implementation_key(4381)) void FormFields::PutShaded ( VARIANT_BOOL prop );
__declspec(implementation_key(4382)) IUnknownPtr FormFields::Get_NewEnum ( );
__declspec(implementation_key(4383)) FormFieldPtr FormFields::Item ( VARIANT * Index );
__declspec(implementation_key(4384)) FormFieldPtr FormFields::Add ( struct Range * Range, enum WdFieldType Type );
__declspec(implementation_key(4385)) _ApplicationPtr TableOfFigures::GetApplication ( );
__declspec(implementation_key(4386)) long TableOfFigures::GetCreator ( );
__declspec(implementation_key(4387)) IDispatchPtr TableOfFigures::GetParent ( );
__declspec(implementation_key(4388)) _bstr_t TableOfFigures::GetCaption ( );
__declspec(implementation_key(4389)) void TableOfFigures::PutCaption ( _bstr_t prop );
__declspec(implementation_key(4390)) VARIANT_BOOL TableOfFigures::GetIncludeLabel ( );
__declspec(implementation_key(4391)) void TableOfFigures::PutIncludeLabel ( VARIANT_BOOL prop );
__declspec(implementation_key(4392)) VARIANT_BOOL TableOfFigures::GetRightAlignPageNumbers ( );
__declspec(implementation_key(4393)) void TableOfFigures::PutRightAlignPageNumbers ( VARIANT_BOOL prop );
__declspec(implementation_key(4394)) VARIANT_BOOL TableOfFigures::GetUseHeadingStyles ( );
__declspec(implementation_key(4395)) void TableOfFigures::PutUseHeadingStyles ( VARIANT_BOOL prop );
__declspec(implementation_key(4396)) long TableOfFigures::GetLowerHeadingLevel ( );
__declspec(implementation_key(4397)) void TableOfFigures::PutLowerHeadingLevel ( long prop );
__declspec(implementation_key(4398)) long TableOfFigures::GetUpperHeadingLevel ( );
__declspec(implementation_key(4399)) void TableOfFigures::PutUpperHeadingLevel ( long prop );
__declspec(implementation_key(4400)) VARIANT_BOOL TableOfFigures::GetIncludePageNumbers ( );
__declspec(implementation_key(4401)) void TableOfFigures::PutIncludePageNumbers ( VARIANT_BOOL prop );
__declspec(implementation_key(4402)) RangePtr TableOfFigures::GetRange ( );
__declspec(implementation_key(4403)) VARIANT_BOOL TableOfFigures::GetUseFields ( );
__declspec(implementation_key(4404)) void TableOfFigures::PutUseFields ( VARIANT_BOOL prop );
__declspec(implementation_key(4405)) _bstr_t TableOfFigures::GetTableID ( );
__declspec(implementation_key(4406)) void TableOfFigures::PutTableID ( _bstr_t prop );
__declspec(implementation_key(4407)) HeadingStylesPtr TableOfFigures::GetHeadingStyles ( );
__declspec(implementation_key(4408)) enum WdTabLeader TableOfFigures::GetTabLeader ( );
__declspec(implementation_key(4409)) void TableOfFigures::PutTabLeader ( enum WdTabLeader prop );
__declspec(implementation_key(4410)) HRESULT TableOfFigures::Delete ( );
__declspec(implementation_key(4411)) HRESULT TableOfFigures::UpdatePageNumbers ( );
__declspec(implementation_key(4412)) HRESULT TableOfFigures::Update ( );
__declspec(implementation_key(4413)) VARIANT_BOOL TableOfFigures::GetUseHyperlinks ( );
__declspec(implementation_key(4414)) void TableOfFigures::PutUseHyperlinks ( VARIANT_BOOL prop );
__declspec(implementation_key(4415)) VARIANT_BOOL TableOfFigures::GetHidePageNumbersInWeb ( );
__declspec(implementation_key(4416)) void TableOfFigures::PutHidePageNumbersInWeb ( VARIANT_BOOL prop );
__declspec(implementation_key(4417)) _ApplicationPtr MailMergeField::GetApplication ( );
__declspec(implementation_key(4418)) long MailMergeField::GetCreator ( );
__declspec(implementation_key(4419)) IDispatchPtr MailMergeField::GetParent ( );
__declspec(implementation_key(4420)) enum WdFieldType MailMergeField::GetType ( );
__declspec(implementation_key(4421)) VARIANT_BOOL MailMergeField::GetLocked ( );
__declspec(implementation_key(4422)) void MailMergeField::PutLocked ( VARIANT_BOOL prop );
__declspec(implementation_key(4423)) RangePtr MailMergeField::GetCode ( );
__declspec(implementation_key(4424)) void MailMergeField::PutCode ( struct Range * prop );
__declspec(implementation_key(4425)) MailMergeFieldPtr MailMergeField::GetNext ( );
__declspec(implementation_key(4426)) MailMergeFieldPtr MailMergeField::GetPrevious ( );
__declspec(implementation_key(4427)) HRESULT MailMergeField::Select ( );
__declspec(implementation_key(4428)) HRESULT MailMergeField::Copy ( );
__declspec(implementation_key(4429)) HRESULT MailMergeField::Cut ( );
__declspec(implementation_key(4430)) HRESULT MailMergeField::Delete ( );
__declspec(implementation_key(4431)) _ApplicationPtr MailMergeFields::GetApplication ( );
__declspec(implementation_key(4432)) long MailMergeFields::GetCreator ( );
__declspec(implementation_key(4433)) IDispatchPtr MailMergeFields::GetParent ( );
__declspec(implementation_key(4434)) IUnknownPtr MailMergeFields::Get_NewEnum ( );
__declspec(implementation_key(4435)) long MailMergeFields::GetCount ( );
__declspec(implementation_key(4436)) MailMergeFieldPtr MailMergeFields::Item ( long Index );
__declspec(implementation_key(4437)) MailMergeFieldPtr MailMergeFields::Add ( struct Range * Range, _bstr_t Name );
__declspec(implementation_key(4438)) MailMergeFieldPtr MailMergeFields::AddAsk ( struct Range * Range, _bstr_t Name, VARIANT * Prompt, VARIANT * DefaultAskText, VARIANT * AskOnce );
__declspec(implementation_key(4439)) MailMergeFieldPtr MailMergeFields::AddFillIn ( struct Range * Range, VARIANT * Prompt, VARIANT * DefaultFillInText, VARIANT * AskOnce );
__declspec(implementation_key(4440)) MailMergeFieldPtr MailMergeFields::AddIf ( struct Range * Range, _bstr_t MergeField, enum WdMailMergeComparison Comparison, VARIANT * CompareTo, VARIANT * TrueAutoText, VARIANT * TrueText, VARIANT * FalseAutoText, VARIANT * FalseText );
__declspec(implementation_key(4441)) MailMergeFieldPtr MailMergeFields::AddMergeRec ( struct Range * Range );
__declspec(implementation_key(4442)) MailMergeFieldPtr MailMergeFields::AddMergeSeq ( struct Range * Range );
__declspec(implementation_key(4443)) MailMergeFieldPtr MailMergeFields::AddNext ( struct Range * Range );
__declspec(implementation_key(4444)) MailMergeFieldPtr MailMergeFields::AddNextIf ( struct Range * Range, _bstr_t MergeField, enum WdMailMergeComparison Comparison, VARIANT * CompareTo );
__declspec(implementation_key(4445)) MailMergeFieldPtr MailMergeFields::AddSet ( struct Range * Range, _bstr_t Name, VARIANT * ValueText, VARIANT * ValueAutoText );
__declspec(implementation_key(4446)) MailMergeFieldPtr MailMergeFields::AddSkipIf ( struct Range * Range, _bstr_t MergeField, enum WdMailMergeComparison Comparison, VARIANT * CompareTo );
__declspec(implementation_key(4447)) _ApplicationPtr MailMerge::GetApplication ( );
__declspec(implementation_key(4448)) long MailMerge::GetCreator ( );
__declspec(implementation_key(4449)) IDispatchPtr MailMerge::GetParent ( );
__declspec(implementation_key(4450)) enum WdMailMergeMainDocType MailMerge::GetMainDocumentType ( );
__declspec(implementation_key(4451)) void MailMerge::PutMainDocumentType ( enum WdMailMergeMainDocType prop );
__declspec(implementation_key(4452)) enum WdMailMergeState MailMerge::GetState ( );
__declspec(implementation_key(4453)) enum WdMailMergeDestination MailMerge::GetDestination ( );
__declspec(implementation_key(4454)) void MailMerge::PutDestination ( enum WdMailMergeDestination prop );
__declspec(implementation_key(4455)) MailMergeDataSourcePtr MailMerge::GetDataSource ( );
__declspec(implementation_key(4456)) MailMergeFieldsPtr MailMerge::GetFields ( );
__declspec(implementation_key(4457)) long MailMerge::GetViewMailMergeFieldCodes ( );
__declspec(implementation_key(4458)) void MailMerge::PutViewMailMergeFieldCodes ( long prop );
__declspec(implementation_key(4459)) VARIANT_BOOL MailMerge::GetSuppressBlankLines ( );
__declspec(implementation_key(4460)) void MailMerge::PutSuppressBlankLines ( VARIANT_BOOL prop );
__declspec(implementation_key(4461)) VARIANT_BOOL MailMerge::GetMailAsAttachment ( );
__declspec(implementation_key(4462)) void MailMerge::PutMailAsAttachment ( VARIANT_BOOL prop );
__declspec(implementation_key(4463)) _bstr_t MailMerge::GetMailAddressFieldName ( );
__declspec(implementation_key(4464)) void MailMerge::PutMailAddressFieldName ( _bstr_t prop );
__declspec(implementation_key(4465)) _bstr_t MailMerge::GetMailSubject ( );
__declspec(implementation_key(4466)) void MailMerge::PutMailSubject ( _bstr_t prop );
__declspec(implementation_key(4467)) HRESULT MailMerge::CreateDataSource ( VARIANT * Name, VARIANT * PasswordDocument, VARIANT * WritePasswordDocument, VARIANT * HeaderRecord, VARIANT * MSQuery, VARIANT * SQLStatement, VARIANT * SQLStatement1, VARIANT * Connection, VARIANT * LinkToSource );
__declspec(implementation_key(4468)) HRESULT MailMerge::CreateHeaderSource ( _bstr_t Name, VARIANT * PasswordDocument, VARIANT * WritePasswordDocument, VARIANT * HeaderRecord );
__declspec(implementation_key(4469)) HRESULT MailMerge::OpenDataSource2000 ( _bstr_t Name, VARIANT * Format, VARIANT * ConfirmConversions, VARIANT * ReadOnly, VARIANT * LinkToSource, VARIANT * AddToRecentFiles, VARIANT * PasswordDocument, VARIANT * PasswordTemplate, VARIANT * Revert, VARIANT * WritePasswordDocument, VARIANT * WritePasswordTemplate, VARIANT * Connection, VARIANT * SQLStatement, VARIANT * SQLStatement1 );
__declspec(implementation_key(4470)) HRESULT MailMerge::OpenHeaderSource2000 ( _bstr_t Name, VARIANT * Format, VARIANT * ConfirmConversions, VARIANT * ReadOnly, VARIANT * AddToRecentFiles, VARIANT * PasswordDocument, VARIANT * PasswordTemplate, VARIANT * Revert, VARIANT * WritePasswordDocument, VARIANT * WritePasswordTemplate );
__declspec(implementation_key(4471)) HRESULT MailMerge::Execute ( VARIANT * Pause );
__declspec(implementation_key(4472)) HRESULT MailMerge::Check ( );
__declspec(implementation_key(4473)) HRESULT MailMerge::EditDataSource ( );
__declspec(implementation_key(4474)) HRESULT MailMerge::EditHeaderSource ( );
__declspec(implementation_key(4475)) HRESULT MailMerge::EditMainDocument ( );
__declspec(implementation_key(4476)) HRESULT MailMerge::UseAddressBook ( _bstr_t Type );
__declspec(implementation_key(4477)) VARIANT_BOOL MailMerge::GetHighlightMergeFields ( );
__declspec(implementation_key(4478)) void MailMerge::PutHighlightMergeFields ( VARIANT_BOOL prop );
__declspec(implementation_key(4479)) enum WdMailMergeMailFormat MailMerge::GetMailFormat ( );
__declspec(implementation_key(4480)) void MailMerge::PutMailFormat ( enum WdMailMergeMailFormat prop );
__declspec(implementation_key(4481)) _bstr_t MailMerge::GetShowSendToCustom ( );
__declspec(implementation_key(4482)) void MailMerge::PutShowSendToCustom ( _bstr_t prop );
__declspec(implementation_key(4483)) long MailMerge::GetWizardState ( );
__declspec(implementation_key(4484)) void MailMerge::PutWizardState ( long prop );
__declspec(implementation_key(4485)) HRESULT MailMerge::OpenDataSource ( _bstr_t Name, VARIANT * Format, VARIANT * ConfirmConversions, VARIANT * ReadOnly, VARIANT * LinkToSource, VARIANT * AddToRecentFiles, VARIANT * PasswordDocument, VARIANT * PasswordTemplate, VARIANT * Revert, VARIANT * WritePasswordDocument, VARIANT * WritePasswordTemplate, VARIANT * Connection, VARIANT * SQLStatement, VARIANT * SQLStatement1, VARIANT * OpenExclusive, VARIANT * SubType );
__declspec(implementation_key(4486)) HRESULT MailMerge::OpenHeaderSource ( _bstr_t Name, VARIANT * Format, VARIANT * ConfirmConversions, VARIANT * ReadOnly, VARIANT * AddToRecentFiles, VARIANT * PasswordDocument, VARIANT * PasswordTemplate, VARIANT * Revert, VARIANT * WritePasswordDocument, VARIANT * WritePasswordTemplate, VARIANT * OpenExclusive );
__declspec(implementation_key(4487)) HRESULT MailMerge::ShowWizard ( VARIANT * InitialState, VARIANT * ShowDocumentStep, VARIANT * ShowTemplateStep, VARIANT * ShowDataStep, VARIANT * ShowWriteStep, VARIANT * ShowPreviewStep, VARIANT * ShowMergeStep );
__declspec(implementation_key(4488)) _ApplicationPtr TableOfContents::GetApplication ( );
__declspec(implementation_key(4489)) long TableOfContents::GetCreator ( );
__declspec(implementation_key(4490)) IDispatchPtr TableOfContents::GetParent ( );
__declspec(implementation_key(4491)) VARIANT_BOOL TableOfContents::GetUseHeadingStyles ( );
__declspec(implementation_key(4492)) void TableOfContents::PutUseHeadingStyles ( VARIANT_BOOL prop );
__declspec(implementation_key(4493)) VARIANT_BOOL TableOfContents::GetUseFields ( );
__declspec(implementation_key(4494)) void TableOfContents::PutUseFields ( VARIANT_BOOL prop );
__declspec(implementation_key(4495)) long TableOfContents::GetUpperHeadingLevel ( );
__declspec(implementation_key(4496)) void TableOfContents::PutUpperHeadingLevel ( long prop );
__declspec(implementation_key(4497)) long TableOfContents::GetLowerHeadingLevel ( );
__declspec(implementation_key(4498)) void TableOfContents::PutLowerHeadingLevel ( long prop );
__declspec(implementation_key(4499)) _bstr_t TableOfContents::GetTableID ( );
__declspec(implementation_key(4500)) void TableOfContents::PutTableID ( _bstr_t prop );
__declspec(implementation_key(4501)) HeadingStylesPtr TableOfContents::GetHeadingStyles ( );
__declspec(implementation_key(4502)) VARIANT_BOOL TableOfContents::GetRightAlignPageNumbers ( );
__declspec(implementation_key(4503)) void TableOfContents::PutRightAlignPageNumbers ( VARIANT_BOOL prop );
__declspec(implementation_key(4504)) VARIANT_BOOL TableOfContents::GetIncludePageNumbers ( );
__declspec(implementation_key(4505)) void TableOfContents::PutIncludePageNumbers ( VARIANT_BOOL prop );
__declspec(implementation_key(4506)) RangePtr TableOfContents::GetRange ( );
__declspec(implementation_key(4507)) enum WdTabLeader TableOfContents::GetTabLeader ( );
__declspec(implementation_key(4508)) void TableOfContents::PutTabLeader ( enum WdTabLeader prop );
__declspec(implementation_key(4509)) HRESULT TableOfContents::Delete ( );
__declspec(implementation_key(4510)) HRESULT TableOfContents::UpdatePageNumbers ( );
__declspec(implementation_key(4511)) HRESULT TableOfContents::Update ( );
__declspec(implementation_key(4512)) VARIANT_BOOL TableOfContents::GetUseHyperlinks ( );
__declspec(implementation_key(4513)) void TableOfContents::PutUseHyperlinks ( VARIANT_BOOL prop );
__declspec(implementation_key(4514)) VARIANT_BOOL TableOfContents::GetHidePageNumbersInWeb ( );
__declspec(implementation_key(4515)) void TableOfContents::PutHidePageNumbersInWeb ( VARIANT_BOOL prop );
__declspec(implementation_key(4516)) _ApplicationPtr TableOfAuthorities::GetApplication ( );
__declspec(implementation_key(4517)) long TableOfAuthorities::GetCreator ( );
__declspec(implementation_key(4518)) IDispatchPtr TableOfAuthorities::GetParent ( );
__declspec(implementation_key(4519)) VARIANT_BOOL TableOfAuthorities::GetPassim ( );
__declspec(implementation_key(4520)) void TableOfAuthorities::PutPassim ( VARIANT_BOOL prop );
__declspec(implementation_key(4521)) VARIANT_BOOL TableOfAuthorities::GetKeepEntryFormatting ( );
__declspec(implementation_key(4522)) void TableOfAuthorities::PutKeepEntryFormatting ( VARIANT_BOOL prop );
__declspec(implementation_key(4523)) long TableOfAuthorities::GetCategory ( );
__declspec(implementation_key(4524)) void TableOfAuthorities::PutCategory ( long prop );
__declspec(implementation_key(4525)) _bstr_t TableOfAuthorities::GetBookmark ( );
__declspec(implementation_key(4526)) void TableOfAuthorities::PutBookmark ( _bstr_t prop );
__declspec(implementation_key(4527)) _bstr_t TableOfAuthorities::GetSeparator ( );
__declspec(implementation_key(4528)) void TableOfAuthorities::PutSeparator ( _bstr_t prop );
__declspec(implementation_key(4529)) _bstr_t TableOfAuthorities::GetIncludeSequenceName ( );
__declspec(implementation_key(4530)) void TableOfAuthorities::PutIncludeSequenceName ( _bstr_t prop );
__declspec(implementation_key(4531)) _bstr_t TableOfAuthorities::GetEntrySeparator ( );
__declspec(implementation_key(4532)) void TableOfAuthorities::PutEntrySeparator ( _bstr_t prop );
__declspec(implementation_key(4533)) _bstr_t TableOfAuthorities::GetPageRangeSeparator ( );
__declspec(implementation_key(4534)) void TableOfAuthorities::PutPageRangeSeparator ( _bstr_t prop );
__declspec(implementation_key(4535)) VARIANT_BOOL TableOfAuthorities::GetIncludeCategoryHeader ( );
__declspec(implementation_key(4536)) void TableOfAuthorities::PutIncludeCategoryHeader ( VARIANT_BOOL prop );
__declspec(implementation_key(4537)) _bstr_t TableOfAuthorities::GetPageNumberSeparator ( );
__declspec(implementation_key(4538)) void TableOfAuthorities::PutPageNumberSeparator ( _bstr_t prop );
__declspec(implementation_key(4539)) RangePtr TableOfAuthorities::GetRange ( );
__declspec(implementation_key(4540)) enum WdTabLeader TableOfAuthorities::GetTabLeader ( );
__declspec(implementation_key(4541)) void TableOfAuthorities::PutTabLeader ( enum WdTabLeader prop );
__declspec(implementation_key(4542)) HRESULT TableOfAuthorities::Delete ( );
__declspec(implementation_key(4543)) HRESULT TableOfAuthorities::Update ( );
__declspec(implementation_key(4544)) _ApplicationPtr Index::GetApplication ( );
__declspec(implementation_key(4545)) long Index::GetCreator ( );
__declspec(implementation_key(4546)) IDispatchPtr Index::GetParent ( );
__declspec(implementation_key(4547)) enum WdHeadingSeparator Index::GetHeadingSeparator ( );
__declspec(implementation_key(4548)) void Index::PutHeadingSeparator ( enum WdHeadingSeparator prop );
__declspec(implementation_key(4549)) VARIANT_BOOL Index::GetRightAlignPageNumbers ( );
__declspec(implementation_key(4550)) void Index::PutRightAlignPageNumbers ( VARIANT_BOOL prop );
__declspec(implementation_key(4551)) enum WdIndexType Index::GetType ( );
__declspec(implementation_key(4552)) void Index::PutType ( enum WdIndexType prop );
__declspec(implementation_key(4553)) long Index::GetNumberOfColumns ( );
__declspec(implementation_key(4554)) void Index::PutNumberOfColumns ( long prop );
__declspec(implementation_key(4555)) RangePtr Index::GetRange ( );
__declspec(implementation_key(4556)) enum WdTabLeader Index::GetTabLeader ( );
__declspec(implementation_key(4557)) void Index::PutTabLeader ( enum WdTabLeader prop );
__declspec(implementation_key(4558)) VARIANT_BOOL Index::GetAccentedLetters ( );
__declspec(implementation_key(4559)) void Index::PutAccentedLetters ( VARIANT_BOOL prop );
__declspec(implementation_key(4560)) enum WdIndexSortBy Index::GetSortBy ( );
__declspec(implementation_key(4561)) void Index::PutSortBy ( enum WdIndexSortBy prop );
__declspec(implementation_key(4562)) enum WdIndexFilter Index::GetFilter ( );
__declspec(implementation_key(4563)) void Index::PutFilter ( enum WdIndexFilter prop );
__declspec(implementation_key(4564)) HRESULT Index::Delete ( );
__declspec(implementation_key(4565)) HRESULT Index::Update ( );
__declspec(implementation_key(4566)) enum WdLanguageID Index::GetIndexLanguage ( );
__declspec(implementation_key(4567)) void Index::PutIndexLanguage ( enum WdLanguageID prop );
__declspec(implementation_key(4568)) _ApplicationPtr Subdocument::GetApplication ( );
__declspec(implementation_key(4569)) long Subdocument::GetCreator ( );
__declspec(implementation_key(4570)) IDispatchPtr Subdocument::GetParent ( );
__declspec(implementation_key(4571)) VARIANT_BOOL Subdocument::GetLocked ( );
__declspec(implementation_key(4572)) void Subdocument::PutLocked ( VARIANT_BOOL prop );
__declspec(implementation_key(4573)) RangePtr Subdocument::GetRange ( );
__declspec(implementation_key(4574)) _bstr_t Subdocument::GetName ( );
__declspec(implementation_key(4575)) _bstr_t Subdocument::GetPath ( );
__declspec(implementation_key(4576)) VARIANT_BOOL Subdocument::GetHasFile ( );
__declspec(implementation_key(4577)) long Subdocument::GetLevel ( );
__declspec(implementation_key(4578)) HRESULT Subdocument::Delete ( );
__declspec(implementation_key(4579)) HRESULT Subdocument::Split ( struct Range * Range );
__declspec(implementation_key(4580)) _DocumentPtr Subdocument::Open ( );
__declspec(implementation_key(4581)) _ApplicationPtr Subdocuments::GetApplication ( );
__declspec(implementation_key(4582)) long Subdocuments::GetCreator ( );
__declspec(implementation_key(4583)) IDispatchPtr Subdocuments::GetParent ( );
__declspec(implementation_key(4584)) long Subdocuments::GetCount ( );
__declspec(implementation_key(4585)) IUnknownPtr Subdocuments::Get_NewEnum ( );
__declspec(implementation_key(4586)) VARIANT_BOOL Subdocuments::GetExpanded ( );
__declspec(implementation_key(4587)) void Subdocuments::PutExpanded ( VARIANT_BOOL prop );
__declspec(implementation_key(4588)) SubdocumentPtr Subdocuments::Item ( long Index );
__declspec(implementation_key(4589)) SubdocumentPtr Subdocuments::AddFromFile ( VARIANT * Name, VARIANT * ConfirmConversions, VARIANT * ReadOnly, VARIANT * PasswordDocument, VARIANT * PasswordTemplate, VARIANT * Revert, VARIANT * WritePasswordDocument, VARIANT * WritePasswordTemplate );
__declspec(implementation_key(4590)) SubdocumentPtr Subdocuments::AddFromRange ( struct Range * Range );
__declspec(implementation_key(4591)) HRESULT Subdocuments::Merge ( VARIANT * FirstSubdocument, VARIANT * LastSubdocument );
__declspec(implementation_key(4592)) HRESULT Subdocuments::Delete ( );
__declspec(implementation_key(4593)) HRESULT Subdocuments::Select ( );
__declspec(implementation_key(4594)) IUnknownPtr StoryRanges::Get_NewEnum ( );
__declspec(implementation_key(4595)) long StoryRanges::GetCount ( );
__declspec(implementation_key(4596)) _ApplicationPtr StoryRanges::GetApplication ( );
__declspec(implementation_key(4597)) long StoryRanges::GetCreator ( );
__declspec(implementation_key(4598)) IDispatchPtr StoryRanges::GetParent ( );
__declspec(implementation_key(4599)) RangePtr StoryRanges::Item ( enum WdStoryType Index );
__declspec(implementation_key(4600)) IUnknownPtr ListParagraphs::Get_NewEnum ( );
__declspec(implementation_key(4601)) long ListParagraphs::GetCount ( );
__declspec(implementation_key(4602)) _ApplicationPtr ListParagraphs::GetApplication ( );
__declspec(implementation_key(4603)) long ListParagraphs::GetCreator ( );
__declspec(implementation_key(4604)) IDispatchPtr ListParagraphs::GetParent ( );
__declspec(implementation_key(4605)) ParagraphPtr ListParagraphs::Item ( long Index );
__declspec(implementation_key(4606)) _ApplicationPtr ProofreadingErrors::GetApplication ( );
__declspec(implementation_key(4607)) long ProofreadingErrors::GetCreator ( );
__declspec(implementation_key(4608)) IDispatchPtr ProofreadingErrors::GetParent ( );
__declspec(implementation_key(4609)) IUnknownPtr ProofreadingErrors::Get_NewEnum ( );
__declspec(implementation_key(4610)) long ProofreadingErrors::GetCount ( );
__declspec(implementation_key(4611)) enum WdProofreadingErrorType ProofreadingErrors::GetType ( );
__declspec(implementation_key(4612)) RangePtr ProofreadingErrors::Item ( long Index );
__declspec(implementation_key(4613)) _ApplicationPtr EmailSignatureEntries::GetApplication ( );
__declspec(implementation_key(4614)) long EmailSignatureEntries::GetCreator ( );
__declspec(implementation_key(4615)) IDispatchPtr EmailSignatureEntries::GetParent ( );
__declspec(implementation_key(4616)) IUnknownPtr EmailSignatureEntries::Get_NewEnum ( );
__declspec(implementation_key(4617)) long EmailSignatureEntries::GetCount ( );
__declspec(implementation_key(4618)) EmailSignatureEntryPtr EmailSignatureEntries::Item ( VARIANT * Index );
__declspec(implementation_key(4619)) EmailSignatureEntryPtr EmailSignatureEntries::Add ( _bstr_t Name, struct Range * Range );
__declspec(implementation_key(4620)) _ApplicationPtr EmailSignature::GetApplication ( );
__declspec(implementation_key(4621)) long EmailSignature::GetCreator ( );
__declspec(implementation_key(4622)) IDispatchPtr EmailSignature::GetParent ( );
__declspec(implementation_key(4623)) _bstr_t EmailSignature::GetNewMessageSignature ( );
__declspec(implementation_key(4624)) void EmailSignature::PutNewMessageSignature ( _bstr_t prop );
__declspec(implementation_key(4625)) _bstr_t EmailSignature::GetReplyMessageSignature ( );
__declspec(implementation_key(4626)) void EmailSignature::PutReplyMessageSignature ( _bstr_t prop );
__declspec(implementation_key(4627)) EmailSignatureEntriesPtr EmailSignature::GetEmailSignatureEntries ( );
__declspec(implementation_key(4628)) _ApplicationPtr Break::GetApplication ( );
__declspec(implementation_key(4629)) long Break::GetCreator ( );
__declspec(implementation_key(4630)) IDispatchPtr Break::GetParent ( );
__declspec(implementation_key(4631)) RangePtr Break::GetRange ( );
__declspec(implementation_key(4632)) long Break::GetPageIndex ( );
__declspec(implementation_key(4633)) IUnknownPtr Breaks::Get_NewEnum ( );
__declspec(implementation_key(4634)) long Breaks::GetCount ( );
__declspec(implementation_key(4635)) _ApplicationPtr Breaks::GetApplication ( );
__declspec(implementation_key(4636)) long Breaks::GetCreator ( );
__declspec(implementation_key(4637)) IDispatchPtr Breaks::GetParent ( );
__declspec(implementation_key(4638)) BreakPtr Breaks::Item ( long Index );
__declspec(implementation_key(4639)) _bstr_t Editor::GetID ( );
__declspec(implementation_key(4640)) _bstr_t Editor::GetName ( );
__declspec(implementation_key(4641)) RangePtr Editor::GetRange ( );
__declspec(implementation_key(4642)) RangePtr Editor::GetNextRange ( );
__declspec(implementation_key(4643)) _ApplicationPtr Editor::GetApplication ( );
__declspec(implementation_key(4644)) long Editor::GetCreator ( );
__declspec(implementation_key(4645)) IDispatchPtr Editor::GetParent ( );
__declspec(implementation_key(4646)) HRESULT Editor::Delete ( );
__declspec(implementation_key(4647)) HRESULT Editor::DeleteAll ( );
__declspec(implementation_key(4648)) HRESULT Editor::SelectAll ( );
__declspec(implementation_key(4649)) _ApplicationPtr Editors::GetApplication ( );
__declspec(implementation_key(4650)) long Editors::GetCreator ( );
__declspec(implementation_key(4651)) IDispatchPtr Editors::GetParent ( );
__declspec(implementation_key(4652)) long Editors::GetCount ( );
__declspec(implementation_key(4653)) EditorPtr Editors::Item ( VARIANT * Index );
__declspec(implementation_key(4654)) EditorPtr Editors::Add ( VARIANT * EditorID );
__declspec(implementation_key(4655)) _ApplicationPtr OMathBreak::GetApplication ( );
__declspec(implementation_key(4656)) long OMathBreak::GetCreator ( );
__declspec(implementation_key(4657)) IDispatchPtr OMathBreak::GetParent ( );
__declspec(implementation_key(4658)) RangePtr OMathBreak::GetRange ( );
__declspec(implementation_key(4659)) long OMathBreak::GetAlignAt ( );
__declspec(implementation_key(4660)) void OMathBreak::PutAlignAt ( long prop );
__declspec(implementation_key(4661)) HRESULT OMathBreak::Delete ( );
__declspec(implementation_key(4662)) _ApplicationPtr OMathBreaks::GetApplication ( );
__declspec(implementation_key(4663)) long OMathBreaks::GetCreator ( );
__declspec(implementation_key(4664)) IDispatchPtr OMathBreaks::GetParent ( );
__declspec(implementation_key(4665)) long OMathBreaks::GetCount ( );
__declspec(implementation_key(4666)) OMathBreakPtr OMathBreaks::Item ( long Index );
__declspec(implementation_key(4667)) OMathBreakPtr OMathBreaks::Add ( struct Range * Range );
__declspec(implementation_key(4668)) long ListFormat::GetListLevelNumber ( );
__declspec(implementation_key(4669)) void ListFormat::PutListLevelNumber ( long prop );
__declspec(implementation_key(4670)) ListPtr ListFormat::GetList ( );
__declspec(implementation_key(4671)) ListTemplatePtr ListFormat::GetListTemplate ( );
__declspec(implementation_key(4672)) long ListFormat::GetListValue ( );
__declspec(implementation_key(4673)) VARIANT_BOOL ListFormat::GetSingleList ( );
__declspec(implementation_key(4674)) VARIANT_BOOL ListFormat::GetSingleListTemplate ( );
__declspec(implementation_key(4675)) enum WdListType ListFormat::GetListType ( );
__declspec(implementation_key(4676)) _bstr_t ListFormat::GetListString ( );
__declspec(implementation_key(4677)) _ApplicationPtr ListFormat::GetApplication ( );
__declspec(implementation_key(4678)) long ListFormat::GetCreator ( );
__declspec(implementation_key(4679)) IDispatchPtr ListFormat::GetParent ( );
__declspec(implementation_key(4680)) enum WdContinue ListFormat::CanContinuePreviousList ( struct ListTemplate * ListTemplate );
__declspec(implementation_key(4681)) HRESULT ListFormat::RemoveNumbers ( VARIANT * NumberType );
__declspec(implementation_key(4682)) HRESULT ListFormat::ConvertNumbersToText ( VARIANT * NumberType );
__declspec(implementation_key(4683)) long ListFormat::CountNumberedItems ( VARIANT * NumberType, VARIANT * Level );
__declspec(implementation_key(4684)) HRESULT ListFormat::ApplyBulletDefaultOld ( );
__declspec(implementation_key(4685)) HRESULT ListFormat::ApplyNumberDefaultOld ( );
__declspec(implementation_key(4686)) HRESULT ListFormat::ApplyOutlineNumberDefaultOld ( );
__declspec(implementation_key(4687)) HRESULT ListFormat::ApplyListTemplateOld ( struct ListTemplate * ListTemplate, VARIANT * ContinuePreviousList, VARIANT * ApplyTo );
__declspec(implementation_key(4688)) HRESULT ListFormat::ListOutdent ( );
__declspec(implementation_key(4689)) HRESULT ListFormat::ListIndent ( );
__declspec(implementation_key(4690)) HRESULT ListFormat::ApplyBulletDefault ( VARIANT * DefaultListBehavior );
__declspec(implementation_key(4691)) HRESULT ListFormat::ApplyNumberDefault ( VARIANT * DefaultListBehavior );
__declspec(implementation_key(4692)) HRESULT ListFormat::ApplyOutlineNumberDefault ( VARIANT * DefaultListBehavior );
__declspec(implementation_key(4693)) HRESULT ListFormat::ApplyListTemplate ( struct ListTemplate * ListTemplate, VARIANT * ContinuePreviousList, VARIANT * ApplyTo, VARIANT * DefaultListBehavior );
__declspec(implementation_key(4694)) InlineShapePtr ListFormat::GetListPictureBullet ( );
__declspec(implementation_key(4695)) HRESULT ListFormat::ApplyListTemplateWithLevel ( struct ListTemplate * ListTemplate, VARIANT * ContinuePreviousList, VARIANT * ApplyTo, VARIANT * DefaultListBehavior, VARIANT * ApplyLevel );
__declspec(implementation_key(4696)) IUnknownPtr Sections::Get_NewEnum ( );
__declspec(implementation_key(4697)) long Sections::GetCount ( );
__declspec(implementation_key(4698)) SectionPtr Sections::GetFirst ( );
__declspec(implementation_key(4699)) SectionPtr Sections::GetLast ( );
__declspec(implementation_key(4700)) _ApplicationPtr Sections::GetApplication ( );
__declspec(implementation_key(4701)) long Sections::GetCreator ( );
__declspec(implementation_key(4702)) IDispatchPtr Sections::GetParent ( );
__declspec(implementation_key(4703)) PageSetupPtr Sections::GetPageSetup ( );
__declspec(implementation_key(4704)) void Sections::PutPageSetup ( struct PageSetup * prop );
__declspec(implementation_key(4705)) SectionPtr Sections::Item ( long Index );
__declspec(implementation_key(4706)) SectionPtr Sections::Add ( VARIANT * Range, VARIANT * Start );
__declspec(implementation_key(4707)) RangePtr Section::GetRange ( );
__declspec(implementation_key(4708)) _ApplicationPtr Section::GetApplication ( );
__declspec(implementation_key(4709)) long Section::GetCreator ( );
__declspec(implementation_key(4710)) IDispatchPtr Section::GetParent ( );
__declspec(implementation_key(4711)) PageSetupPtr Section::GetPageSetup ( );
__declspec(implementation_key(4712)) void Section::PutPageSetup ( struct PageSetup * prop );
__declspec(implementation_key(4713)) HeadersFootersPtr Section::GetHeaders ( );
__declspec(implementation_key(4714)) HeadersFootersPtr Section::GetFooters ( );
__declspec(implementation_key(4715)) VARIANT_BOOL Section::GetProtectedForForms ( );
__declspec(implementation_key(4716)) void Section::PutProtectedForForms ( VARIANT_BOOL prop );
__declspec(implementation_key(4717)) long Section::GetIndex ( );
__declspec(implementation_key(4718)) BordersPtr Section::GetBorders ( );
__declspec(implementation_key(4719)) void Section::PutBorders ( struct Borders * prop );
__declspec(implementation_key(4720)) RangePtr Table::GetRange ( );
__declspec(implementation_key(4721)) _ApplicationPtr Table::GetApplication ( );
__declspec(implementation_key(4722)) long Table::GetCreator ( );
__declspec(implementation_key(4723)) IDispatchPtr Table::GetParent ( );
__declspec(implementation_key(4724)) ColumnsPtr Table::GetColumns ( );
__declspec(implementation_key(4725)) RowsPtr Table::GetRows ( );
__declspec(implementation_key(4726)) BordersPtr Table::GetBorders ( );
__declspec(implementation_key(4727)) void Table::PutBorders ( struct Borders * prop );
__declspec(implementation_key(4728)) ShadingPtr Table::GetShading ( );
__declspec(implementation_key(4729)) VARIANT_BOOL Table::GetUniform ( );
__declspec(implementation_key(4730)) long Table::GetAutoFormatType ( );
__declspec(implementation_key(4731)) HRESULT Table::Select ( );
__declspec(implementation_key(4732)) HRESULT Table::Delete ( );
__declspec(implementation_key(4733)) HRESULT Table::SortOld ( VARIANT * ExcludeHeader, VARIANT * FieldNumber, VARIANT * SortFieldType, VARIANT * SortOrder, VARIANT * FieldNumber2, VARIANT * SortFieldType2, VARIANT * SortOrder2, VARIANT * FieldNumber3, VARIANT * SortFieldType3, VARIANT * SortOrder3, VARIANT * CaseSensitive, VARIANT * LanguageID );
__declspec(implementation_key(4734)) HRESULT Table::SortAscending ( );
__declspec(implementation_key(4735)) HRESULT Table::SortDescending ( );
__declspec(implementation_key(4736)) HRESULT Table::AutoFormat ( VARIANT * Format, VARIANT * ApplyBorders, VARIANT * ApplyShading, VARIANT * ApplyFont, VARIANT * ApplyColor, VARIANT * ApplyHeadingRows, VARIANT * ApplyLastRow, VARIANT * ApplyFirstColumn, VARIANT * ApplyLastColumn, VARIANT * AutoFit );
__declspec(implementation_key(4737)) HRESULT Table::UpdateAutoFormat ( );
__declspec(implementation_key(4738)) RangePtr Table::ConvertToTextOld ( VARIANT * Separator );
__declspec(implementation_key(4739)) CellPtr Table::Cell ( long Row, long Column );
__declspec(implementation_key(4740)) TablePtr Table::Split ( VARIANT * BeforeRow );
__declspec(implementation_key(4741)) RangePtr Table::ConvertToText ( VARIANT * Separator, VARIANT * NestedTables );
__declspec(implementation_key(4742)) HRESULT Table::AutoFitBehavior ( enum WdAutoFitBehavior Behavior );
__declspec(implementation_key(4743)) HRESULT Table::Sort ( VARIANT * ExcludeHeader, VARIANT * FieldNumber, VARIANT * SortFieldType, VARIANT * SortOrder, VARIANT * FieldNumber2, VARIANT * SortFieldType2, VARIANT * SortOrder2, VARIANT * FieldNumber3, VARIANT * SortFieldType3, VARIANT * SortOrder3, VARIANT * CaseSensitive, VARIANT * BidiSort, VARIANT * IgnoreThe, VARIANT * IgnoreKashida, VARIANT * IgnoreDiacritics, VARIANT * IgnoreHe, VARIANT * LanguageID );
__declspec(implementation_key(4744)) TablesPtr Table::GetTables ( );
__declspec(implementation_key(4745)) long Table::GetNestingLevel ( );
__declspec(implementation_key(4746)) VARIANT_BOOL Table::GetAllowPageBreaks ( );
__declspec(implementation_key(4747)) void Table::PutAllowPageBreaks ( VARIANT_BOOL prop );
__declspec(implementation_key(4748)) VARIANT_BOOL Table::GetAllowAutoFit ( );
__declspec(implementation_key(4749)) void Table::PutAllowAutoFit ( VARIANT_BOOL prop );
__declspec(implementation_key(4750)) float Table::GetPreferredWidth ( );
__declspec(implementation_key(4751)) void Table::PutPreferredWidth ( float prop );
__declspec(implementation_key(4752)) enum WdPreferredWidthType Table::GetPreferredWidthType ( );
__declspec(implementation_key(4753)) void Table::PutPreferredWidthType ( enum WdPreferredWidthType prop );
__declspec(implementation_key(4754)) float Table::GetTopPadding ( );
__declspec(implementation_key(4755)) void Table::PutTopPadding ( float prop );
__declspec(implementation_key(4756)) float Table::GetBottomPadding ( );
__declspec(implementation_key(4757)) void Table::PutBottomPadding ( float prop );
__declspec(implementation_key(4758)) float Table::GetLeftPadding ( );
__declspec(implementation_key(4759)) void Table::PutLeftPadding ( float prop );
__declspec(implementation_key(4760)) float Table::GetRightPadding ( );
__declspec(implementation_key(4761)) void Table::PutRightPadding ( float prop );
__declspec(implementation_key(4762)) float Table::GetSpacing ( );
__declspec(implementation_key(4763)) void Table::PutSpacing ( float prop );
__declspec(implementation_key(4764)) enum WdTableDirection Table::GetTableDirection ( );
__declspec(implementation_key(4765)) void Table::PutTableDirection ( enum WdTableDirection prop );
__declspec(implementation_key(4766)) _bstr_t Table::GetID ( );
__declspec(implementation_key(4767)) void Table::PutID ( _bstr_t prop );
__declspec(implementation_key(4768)) _variant_t Table::GetStyle ( );
__declspec(implementation_key(4769)) void Table::PutStyle ( VARIANT * prop );
__declspec(implementation_key(4770)) VARIANT_BOOL Table::GetApplyStyleHeadingRows ( );
__declspec(implementation_key(4771)) void Table::PutApplyStyleHeadingRows ( VARIANT_BOOL prop );
__declspec(implementation_key(4772)) VARIANT_BOOL Table::GetApplyStyleLastRow ( );
__declspec(implementation_key(4773)) void Table::PutApplyStyleLastRow ( VARIANT_BOOL prop );
__declspec(implementation_key(4774)) VARIANT_BOOL Table::GetApplyStyleFirstColumn ( );
__declspec(implementation_key(4775)) void Table::PutApplyStyleFirstColumn ( VARIANT_BOOL prop );
__declspec(implementation_key(4776)) VARIANT_BOOL Table::GetApplyStyleLastColumn ( );
__declspec(implementation_key(4777)) void Table::PutApplyStyleLastColumn ( VARIANT_BOOL prop );
__declspec(implementation_key(4778)) VARIANT_BOOL Table::GetApplyStyleRowBands ( );
__declspec(implementation_key(4779)) void Table::PutApplyStyleRowBands ( VARIANT_BOOL prop );
__declspec(implementation_key(4780)) VARIANT_BOOL Table::GetApplyStyleColumnBands ( );
__declspec(implementation_key(4781)) void Table::PutApplyStyleColumnBands ( VARIANT_BOOL prop );
__declspec(implementation_key(4782)) HRESULT Table::ApplyStyleDirectFormatting ( _bstr_t StyleName );
__declspec(implementation_key(4783)) IUnknownPtr Tables::Get_NewEnum ( );
__declspec(implementation_key(4784)) long Tables::GetCount ( );
__declspec(implementation_key(4785)) _ApplicationPtr Tables::GetApplication ( );
__declspec(implementation_key(4786)) long Tables::GetCreator ( );
__declspec(implementation_key(4787)) IDispatchPtr Tables::GetParent ( );
__declspec(implementation_key(4788)) TablePtr Tables::Item ( long Index );
__declspec(implementation_key(4789)) TablePtr Tables::AddOld ( struct Range * Range, long NumRows, long NumColumns );
__declspec(implementation_key(4790)) TablePtr Tables::Add ( struct Range * Range, long NumRows, long NumColumns, VARIANT * DefaultTableBehavior, VARIANT * AutoFitBehavior );
__declspec(implementation_key(4791)) long Tables::GetNestingLevel ( );
__declspec(implementation_key(4792)) RangePtr Row::GetRange ( );
__declspec(implementation_key(4793)) _ApplicationPtr Row::GetApplication ( );
__declspec(implementation_key(4794)) long Row::GetCreator ( );
__declspec(implementation_key(4795)) IDispatchPtr Row::GetParent ( );
__declspec(implementation_key(4796)) long Row::GetAllowBreakAcrossPages ( );
__declspec(implementation_key(4797)) void Row::PutAllowBreakAcrossPages ( long prop );
__declspec(implementation_key(4798)) enum WdRowAlignment Row::GetAlignment ( );
__declspec(implementation_key(4799)) void Row::PutAlignment ( enum WdRowAlignment prop );
__declspec(implementation_key(4800)) long Row::GetHeadingFormat ( );
__declspec(implementation_key(4801)) void Row::PutHeadingFormat ( long prop );
__declspec(implementation_key(4802)) float Row::GetSpaceBetweenColumns ( );
__declspec(implementation_key(4803)) void Row::PutSpaceBetweenColumns ( float prop );
__declspec(implementation_key(4804)) float Row::GetHeight ( );
__declspec(implementation_key(4805)) void Row::PutHeight ( float prop );
__declspec(implementation_key(4806)) enum WdRowHeightRule Row::GetHeightRule ( );
__declspec(implementation_key(4807)) void Row::PutHeightRule ( enum WdRowHeightRule prop );
__declspec(implementation_key(4808)) float Row::GetLeftIndent ( );
__declspec(implementation_key(4809)) void Row::PutLeftIndent ( float prop );
__declspec(implementation_key(4810)) VARIANT_BOOL Row::GetIsLast ( );
__declspec(implementation_key(4811)) VARIANT_BOOL Row::GetIsFirst ( );
__declspec(implementation_key(4812)) long Row::GetIndex ( );
__declspec(implementation_key(4813)) CellsPtr Row::GetCells ( );
__declspec(implementation_key(4814)) BordersPtr Row::GetBorders ( );
__declspec(implementation_key(4815)) void Row::PutBorders ( struct Borders * prop );
__declspec(implementation_key(4816)) ShadingPtr Row::GetShading ( );
__declspec(implementation_key(4817)) RowPtr Row::GetNext ( );
__declspec(implementation_key(4818)) RowPtr Row::GetPrevious ( );
__declspec(implementation_key(4819)) HRESULT Row::Select ( );
__declspec(implementation_key(4820)) HRESULT Row::Delete ( );
__declspec(implementation_key(4821)) HRESULT Row::SetLeftIndent ( float LeftIndent, enum WdRulerStyle RulerStyle );
__declspec(implementation_key(4822)) HRESULT Row::SetHeight ( float RowHeight, enum WdRowHeightRule HeightRule );
__declspec(implementation_key(4823)) RangePtr Row::ConvertToTextOld ( VARIANT * Separator );
__declspec(implementation_key(4824)) RangePtr Row::ConvertToText ( VARIANT * Separator, VARIANT * NestedTables );
__declspec(implementation_key(4825)) long Row::GetNestingLevel ( );
__declspec(implementation_key(4826)) _bstr_t Row::GetID ( );
__declspec(implementation_key(4827)) void Row::PutID ( _bstr_t prop );
__declspec(implementation_key(4828)) IUnknownPtr Rows::Get_NewEnum ( );
__declspec(implementation_key(4829)) long Rows::GetCount ( );
__declspec(implementation_key(4830)) long Rows::GetAllowBreakAcrossPages ( );
__declspec(implementation_key(4831)) void Rows::PutAllowBreakAcrossPages ( long prop );
__declspec(implementation_key(4832)) enum WdRowAlignment Rows::GetAlignment ( );
__declspec(implementation_key(4833)) void Rows::PutAlignment ( enum WdRowAlignment prop );
__declspec(implementation_key(4834)) long Rows::GetHeadingFormat ( );
__declspec(implementation_key(4835)) void Rows::PutHeadingFormat ( long prop );
__declspec(implementation_key(4836)) float Rows::GetSpaceBetweenColumns ( );
__declspec(implementation_key(4837)) void Rows::PutSpaceBetweenColumns ( float prop );
__declspec(implementation_key(4838)) float Rows::GetHeight ( );
__declspec(implementation_key(4839)) void Rows::PutHeight ( float prop );
__declspec(implementation_key(4840)) enum WdRowHeightRule Rows::GetHeightRule ( );
__declspec(implementation_key(4841)) void Rows::PutHeightRule ( enum WdRowHeightRule prop );
__declspec(implementation_key(4842)) float Rows::GetLeftIndent ( );
__declspec(implementation_key(4843)) void Rows::PutLeftIndent ( float prop );
__declspec(implementation_key(4844)) RowPtr Rows::GetFirst ( );
__declspec(implementation_key(4845)) RowPtr Rows::GetLast ( );
__declspec(implementation_key(4846)) _ApplicationPtr Rows::GetApplication ( );
__declspec(implementation_key(4847)) long Rows::GetCreator ( );
__declspec(implementation_key(4848)) IDispatchPtr Rows::GetParent ( );
__declspec(implementation_key(4849)) BordersPtr Rows::GetBorders ( );
__declspec(implementation_key(4850)) void Rows::PutBorders ( struct Borders * prop );
__declspec(implementation_key(4851)) ShadingPtr Rows::GetShading ( );
__declspec(implementation_key(4852)) RowPtr Rows::Item ( long Index );
__declspec(implementation_key(4853)) RowPtr Rows::Add ( VARIANT * BeforeRow );
__declspec(implementation_key(4854)) HRESULT Rows::Select ( );
__declspec(implementation_key(4855)) HRESULT Rows::Delete ( );
__declspec(implementation_key(4856)) HRESULT Rows::SetLeftIndent ( float LeftIndent, enum WdRulerStyle RulerStyle );
__declspec(implementation_key(4857)) HRESULT Rows::SetHeight ( float RowHeight, enum WdRowHeightRule HeightRule );
__declspec(implementation_key(4858)) RangePtr Rows::ConvertToTextOld ( VARIANT * Separator );
__declspec(implementation_key(4859)) HRESULT Rows::DistributeHeight ( );
__declspec(implementation_key(4860)) RangePtr Rows::ConvertToText ( VARIANT * Separator, VARIANT * NestedTables );
__declspec(implementation_key(4861)) long Rows::GetWrapAroundText ( );
__declspec(implementation_key(4862)) void Rows::PutWrapAroundText ( long prop );
__declspec(implementation_key(4863)) float Rows::GetDistanceTop ( );
__declspec(implementation_key(4864)) void Rows::PutDistanceTop ( float prop );
__declspec(implementation_key(4865)) float Rows::GetDistanceBottom ( );
__declspec(implementation_key(4866)) void Rows::PutDistanceBottom ( float prop );
__declspec(implementation_key(4867)) float Rows::GetDistanceLeft ( );
__declspec(implementation_key(4868)) void Rows::PutDistanceLeft ( float prop );
__declspec(implementation_key(4869)) float Rows::GetDistanceRight ( );
__declspec(implementation_key(4870)) void Rows::PutDistanceRight ( float prop );
__declspec(implementation_key(4871)) float Rows::GetHorizontalPosition ( );
__declspec(implementation_key(4872)) void Rows::PutHorizontalPosition ( float prop );
__declspec(implementation_key(4873)) float Rows::GetVerticalPosition ( );
__declspec(implementation_key(4874)) void Rows::PutVerticalPosition ( float prop );
__declspec(implementation_key(4875)) enum WdRelativeHorizontalPosition Rows::GetRelativeHorizontalPosition ( );
__declspec(implementation_key(4876)) void Rows::PutRelativeHorizontalPosition ( enum WdRelativeHorizontalPosition prop );
__declspec(implementation_key(4877)) enum WdRelativeVerticalPosition Rows::GetRelativeVerticalPosition ( );
__declspec(implementation_key(4878)) void Rows::PutRelativeVerticalPosition ( enum WdRelativeVerticalPosition prop );
__declspec(implementation_key(4879)) long Rows::GetAllowOverlap ( );
__declspec(implementation_key(4880)) void Rows::PutAllowOverlap ( long prop );
__declspec(implementation_key(4881)) long Rows::GetNestingLevel ( );
__declspec(implementation_key(4882)) enum WdTableDirection Rows::GetTableDirection ( );
__declspec(implementation_key(4883)) void Rows::PutTableDirection ( enum WdTableDirection prop );
__declspec(implementation_key(4884)) _ApplicationPtr Column::GetApplication ( );
__declspec(implementation_key(4885)) long Column::GetCreator ( );
__declspec(implementation_key(4886)) IDispatchPtr Column::GetParent ( );
__declspec(implementation_key(4887)) float Column::GetWidth ( );
__declspec(implementation_key(4888)) void Column::PutWidth ( float prop );
__declspec(implementation_key(4889)) VARIANT_BOOL Column::GetIsFirst ( );
__declspec(implementation_key(4890)) VARIANT_BOOL Column::GetIsLast ( );
__declspec(implementation_key(4891)) long Column::GetIndex ( );
__declspec(implementation_key(4892)) CellsPtr Column::GetCells ( );
__declspec(implementation_key(4893)) BordersPtr Column::GetBorders ( );
__declspec(implementation_key(4894)) void Column::PutBorders ( struct Borders * prop );
__declspec(implementation_key(4895)) ShadingPtr Column::GetShading ( );
__declspec(implementation_key(4896)) ColumnPtr Column::GetNext ( );
__declspec(implementation_key(4897)) ColumnPtr Column::GetPrevious ( );
__declspec(implementation_key(4898)) HRESULT Column::Select ( );
__declspec(implementation_key(4899)) HRESULT Column::Delete ( );
__declspec(implementation_key(4900)) HRESULT Column::SetWidth ( float ColumnWidth, enum WdRulerStyle RulerStyle );
__declspec(implementation_key(4901)) HRESULT Column::AutoFit ( );
__declspec(implementation_key(4902)) HRESULT Column::SortOld ( VARIANT * ExcludeHeader, VARIANT * SortFieldType, VARIANT * SortOrder, VARIANT * CaseSensitive, VARIANT * LanguageID );
__declspec(implementation_key(4903)) HRESULT Column::Sort ( VARIANT * ExcludeHeader, VARIANT * SortFieldType, VARIANT * SortOrder, VARIANT * CaseSensitive, VARIANT * BidiSort, VARIANT * IgnoreThe, VARIANT * IgnoreKashida, VARIANT * IgnoreDiacritics, VARIANT * IgnoreHe, VARIANT * LanguageID );
__declspec(implementation_key(4904)) long Column::GetNestingLevel ( );
__declspec(implementation_key(4905)) float Column::GetPreferredWidth ( );
__declspec(implementation_key(4906)) void Column::PutPreferredWidth ( float prop );
__declspec(implementation_key(4907)) enum WdPreferredWidthType Column::GetPreferredWidthType ( );
__declspec(implementation_key(4908)) void Column::PutPreferredWidthType ( enum WdPreferredWidthType prop );
__declspec(implementation_key(4909)) RangePtr Cell::GetRange ( );
__declspec(implementation_key(4910)) _ApplicationPtr Cell::GetApplication ( );
__declspec(implementation_key(4911)) long Cell::GetCreator ( );
__declspec(implementation_key(4912)) IDispatchPtr Cell::GetParent ( );
__declspec(implementation_key(4913)) long Cell::GetRowIndex ( );
__declspec(implementation_key(4914)) long Cell::GetColumnIndex ( );
__declspec(implementation_key(4915)) float Cell::GetWidth ( );
__declspec(implementation_key(4916)) void Cell::PutWidth ( float prop );
__declspec(implementation_key(4917)) float Cell::GetHeight ( );
__declspec(implementation_key(4918)) void Cell::PutHeight ( float prop );
__declspec(implementation_key(4919)) enum WdRowHeightRule Cell::GetHeightRule ( );
__declspec(implementation_key(4920)) void Cell::PutHeightRule ( enum WdRowHeightRule prop );
__declspec(implementation_key(4921)) enum WdCellVerticalAlignment Cell::GetVerticalAlignment ( );
__declspec(implementation_key(4922)) void Cell::PutVerticalAlignment ( enum WdCellVerticalAlignment prop );
__declspec(implementation_key(4923)) ColumnPtr Cell::GetColumn ( );
__declspec(implementation_key(4924)) RowPtr Cell::GetRow ( );
__declspec(implementation_key(4925)) CellPtr Cell::GetNext ( );
__declspec(implementation_key(4926)) CellPtr Cell::GetPrevious ( );
__declspec(implementation_key(4927)) ShadingPtr Cell::GetShading ( );
__declspec(implementation_key(4928)) BordersPtr Cell::GetBorders ( );
__declspec(implementation_key(4929)) void Cell::PutBorders ( struct Borders * prop );
__declspec(implementation_key(4930)) HRESULT Cell::Select ( );
__declspec(implementation_key(4931)) HRESULT Cell::Delete ( VARIANT * ShiftCells );
__declspec(implementation_key(4932)) HRESULT Cell::Formula ( VARIANT * Formula, VARIANT * NumFormat );
__declspec(implementation_key(4933)) HRESULT Cell::SetWidth ( float ColumnWidth, enum WdRulerStyle RulerStyle );
__declspec(implementation_key(4934)) HRESULT Cell::SetHeight ( VARIANT * RowHeight, enum WdRowHeightRule HeightRule );
__declspec(implementation_key(4935)) HRESULT Cell::Merge ( struct Cell * MergeTo );
__declspec(implementation_key(4936)) HRESULT Cell::Split ( VARIANT * NumRows, VARIANT * NumColumns );
__declspec(implementation_key(4937)) HRESULT Cell::AutoSum ( );
__declspec(implementation_key(4938)) TablesPtr Cell::GetTables ( );
__declspec(implementation_key(4939)) long Cell::GetNestingLevel ( );
__declspec(implementation_key(4940)) VARIANT_BOOL Cell::GetWordWrap ( );
__declspec(implementation_key(4941)) void Cell::PutWordWrap ( VARIANT_BOOL prop );
__declspec(implementation_key(4942)) float Cell::GetPreferredWidth ( );
__declspec(implementation_key(4943)) void Cell::PutPreferredWidth ( float prop );
__declspec(implementation_key(4944)) VARIANT_BOOL Cell::GetFitText ( );
__declspec(implementation_key(4945)) void Cell::PutFitText ( VARIANT_BOOL prop );
__declspec(implementation_key(4946)) float Cell::GetTopPadding ( );
__declspec(implementation_key(4947)) void Cell::PutTopPadding ( float prop );
__declspec(implementation_key(4948)) float Cell::GetBottomPadding ( );
__declspec(implementation_key(4949)) void Cell::PutBottomPadding ( float prop );
__declspec(implementation_key(4950)) float Cell::GetLeftPadding ( );
__declspec(implementation_key(4951)) void Cell::PutLeftPadding ( float prop );
__declspec(implementation_key(4952)) float Cell::GetRightPadding ( );
__declspec(implementation_key(4953)) void Cell::PutRightPadding ( float prop );
__declspec(implementation_key(4954)) _bstr_t Cell::GetID ( );
__declspec(implementation_key(4955)) void Cell::PutID ( _bstr_t prop );
__declspec(implementation_key(4956)) enum WdPreferredWidthType Cell::GetPreferredWidthType ( );
__declspec(implementation_key(4957)) void Cell::PutPreferredWidthType ( enum WdPreferredWidthType prop );
__declspec(implementation_key(4958)) IUnknownPtr Columns::Get_NewEnum ( );
__declspec(implementation_key(4959)) long Columns::GetCount ( );
__declspec(implementation_key(4960)) _ApplicationPtr Columns::GetApplication ( );
__declspec(implementation_key(4961)) long Columns::GetCreator ( );
__declspec(implementation_key(4962)) IDispatchPtr Columns::GetParent ( );
__declspec(implementation_key(4963)) ColumnPtr Columns::GetFirst ( );
__declspec(implementation_key(4964)) ColumnPtr Columns::GetLast ( );
__declspec(implementation_key(4965)) float Columns::GetWidth ( );
__declspec(implementation_key(4966)) void Columns::PutWidth ( float prop );
__declspec(implementation_key(4967)) BordersPtr Columns::GetBorders ( );
__declspec(implementation_key(4968)) void Columns::PutBorders ( struct Borders * prop );
__declspec(implementation_key(4969)) ShadingPtr Columns::GetShading ( );
__declspec(implementation_key(4970)) ColumnPtr Columns::Item ( long Index );
__declspec(implementation_key(4971)) ColumnPtr Columns::Add ( VARIANT * BeforeColumn );
__declspec(implementation_key(4972)) HRESULT Columns::Select ( );
__declspec(implementation_key(4973)) HRESULT Columns::Delete ( );
__declspec(implementation_key(4974)) HRESULT Columns::SetWidth ( float ColumnWidth, enum WdRulerStyle RulerStyle );
__declspec(implementation_key(4975)) HRESULT Columns::AutoFit ( );
__declspec(implementation_key(4976)) HRESULT Columns::DistributeWidth ( );
__declspec(implementation_key(4977)) long Columns::GetNestingLevel ( );
__declspec(implementation_key(4978)) float Columns::GetPreferredWidth ( );
__declspec(implementation_key(4979)) void Columns::PutPreferredWidth ( float prop );
__declspec(implementation_key(4980)) enum WdPreferredWidthType Columns::GetPreferredWidthType ( );
__declspec(implementation_key(4981)) void Columns::PutPreferredWidthType ( enum WdPreferredWidthType prop );
__declspec(implementation_key(4982)) IUnknownPtr Cells::Get_NewEnum ( );
__declspec(implementation_key(4983)) long Cells::GetCount ( );
__declspec(implementation_key(4984)) _ApplicationPtr Cells::GetApplication ( );
__declspec(implementation_key(4985)) long Cells::GetCreator ( );
__declspec(implementation_key(4986)) IDispatchPtr Cells::GetParent ( );
__declspec(implementation_key(4987)) float Cells::GetWidth ( );
__declspec(implementation_key(4988)) void Cells::PutWidth ( float prop );
__declspec(implementation_key(4989)) float Cells::GetHeight ( );
__declspec(implementation_key(4990)) void Cells::PutHeight ( float prop );
__declspec(implementation_key(4991)) enum WdRowHeightRule Cells::GetHeightRule ( );
__declspec(implementation_key(4992)) void Cells::PutHeightRule ( enum WdRowHeightRule prop );
__declspec(implementation_key(4993)) enum WdCellVerticalAlignment Cells::GetVerticalAlignment ( );
__declspec(implementation_key(4994)) void Cells::PutVerticalAlignment ( enum WdCellVerticalAlignment prop );
__declspec(implementation_key(4995)) BordersPtr Cells::GetBorders ( );
__declspec(implementation_key(4996)) void Cells::PutBorders ( struct Borders * prop );
__declspec(implementation_key(4997)) ShadingPtr Cells::GetShading ( );
__declspec(implementation_key(4998)) CellPtr Cells::Item ( long Index );
__declspec(implementation_key(4999)) CellPtr Cells::Add ( VARIANT * BeforeCell );
__declspec(implementation_key(5000)) HRESULT Cells::Delete ( VARIANT * ShiftCells );
__declspec(implementation_key(5001)) HRESULT Cells::SetWidth ( float ColumnWidth, enum WdRulerStyle RulerStyle );
__declspec(implementation_key(5002)) HRESULT Cells::SetHeight ( VARIANT * RowHeight, enum WdRowHeightRule HeightRule );
__declspec(implementation_key(5003)) HRESULT Cells::Merge ( );
__declspec(implementation_key(5004)) HRESULT Cells::Split ( VARIANT * NumRows, VARIANT * NumColumns, VARIANT * MergeBeforeSplit );
__declspec(implementation_key(5005)) HRESULT Cells::DistributeHeight ( );
__declspec(implementation_key(5006)) HRESULT Cells::DistributeWidth ( );
__declspec(implementation_key(5007)) HRESULT Cells::AutoFit ( );
__declspec(implementation_key(5008)) long Cells::GetNestingLevel ( );
__declspec(implementation_key(5009)) float Cells::GetPreferredWidth ( );
__declspec(implementation_key(5010)) void Cells::PutPreferredWidth ( float prop );
__declspec(implementation_key(5011)) enum WdPreferredWidthType Cells::GetPreferredWidthType ( );
__declspec(implementation_key(5012)) void Cells::PutPreferredWidthType ( enum WdPreferredWidthType prop );
__declspec(implementation_key(5013)) _ApplicationPtr Fields::GetApplication ( );
__declspec(implementation_key(5014)) long Fields::GetCreator ( );
__declspec(implementation_key(5015)) IDispatchPtr Fields::GetParent ( );
__declspec(implementation_key(5016)) long Fields::GetCount ( );
__declspec(implementation_key(5017)) long Fields::GetLocked ( );
__declspec(implementation_key(5018)) void Fields::PutLocked ( long prop );
__declspec(implementation_key(5019)) IUnknownPtr Fields::Get_NewEnum ( );
__declspec(implementation_key(5020)) FieldPtr Fields::Item ( long Index );
__declspec(implementation_key(5021)) HRESULT Fields::ToggleShowCodes ( );
__declspec(implementation_key(5022)) long Fields::Update ( );
__declspec(implementation_key(5023)) HRESULT Fields::Unlink ( );
__declspec(implementation_key(5024)) HRESULT Fields::UpdateSource ( );
__declspec(implementation_key(5025)) FieldPtr Fields::Add ( struct Range * Range, VARIANT * Type, VARIANT * Text, VARIANT * PreserveFormatting );
__declspec(implementation_key(5026)) _ApplicationPtr Field::GetApplication ( );
__declspec(implementation_key(5027)) long Field::GetCreator ( );
__declspec(implementation_key(5028)) IDispatchPtr Field::GetParent ( );
__declspec(implementation_key(5029)) RangePtr Field::GetCode ( );
__declspec(implementation_key(5030)) void Field::PutCode ( struct Range * prop );
__declspec(implementation_key(5031)) enum WdFieldType Field::GetType ( );
__declspec(implementation_key(5032)) VARIANT_BOOL Field::GetLocked ( );
__declspec(implementation_key(5033)) void Field::PutLocked ( VARIANT_BOOL prop );
__declspec(implementation_key(5034)) enum WdFieldKind Field::GetKind ( );
__declspec(implementation_key(5035)) RangePtr Field::GetResult ( );
__declspec(implementation_key(5036)) void Field::PutResult ( struct Range * prop );
__declspec(implementation_key(5037)) _bstr_t Field::GetData ( );
__declspec(implementation_key(5038)) void Field::PutData ( _bstr_t prop );
__declspec(implementation_key(5039)) FieldPtr Field::GetNext ( );
__declspec(implementation_key(5040)) FieldPtr Field::GetPrevious ( );
__declspec(implementation_key(5041)) long Field::GetIndex ( );
__declspec(implementation_key(5042)) VARIANT_BOOL Field::GetShowCodes ( );
__declspec(implementation_key(5043)) void Field::PutShowCodes ( VARIANT_BOOL prop );
__declspec(implementation_key(5044)) LinkFormatPtr Field::GetLinkFormat ( );
__declspec(implementation_key(5045)) OLEFormatPtr Field::GetOLEFormat ( );
__declspec(implementation_key(5046)) InlineShapePtr Field::GetInlineShape ( );
__declspec(implementation_key(5047)) HRESULT Field::Select ( );
__declspec(implementation_key(5048)) VARIANT_BOOL Field::Update ( );
__declspec(implementation_key(5049)) HRESULT Field::Unlink ( );
__declspec(implementation_key(5050)) HRESULT Field::UpdateSource ( );
__declspec(implementation_key(5051)) HRESULT Field::DoClick ( );
__declspec(implementation_key(5052)) HRESULT Field::Copy ( );
__declspec(implementation_key(5053)) HRESULT Field::Cut ( );
__declspec(implementation_key(5054)) HRESULT Field::Delete ( );
__declspec(implementation_key(5055)) _ApplicationPtr TablesOfFigures::GetApplication ( );
__declspec(implementation_key(5056)) long TablesOfFigures::GetCreator ( );
__declspec(implementation_key(5057)) IDispatchPtr TablesOfFigures::GetParent ( );
__declspec(implementation_key(5058)) IUnknownPtr TablesOfFigures::Get_NewEnum ( );
__declspec(implementation_key(5059)) long TablesOfFigures::GetCount ( );
__declspec(implementation_key(5060)) enum WdTofFormat TablesOfFigures::GetFormat ( );
__declspec(implementation_key(5061)) void TablesOfFigures::PutFormat ( enum WdTofFormat prop );
__declspec(implementation_key(5062)) TableOfFiguresPtr TablesOfFigures::Item ( long Index );
__declspec(implementation_key(5063)) TableOfFiguresPtr TablesOfFigures::AddOld ( struct Range * Range, VARIANT * Caption, VARIANT * IncludeLabel, VARIANT * UseHeadingStyles, VARIANT * UpperHeadingLevel, VARIANT * LowerHeadingLevel, VARIANT * UseFields, VARIANT * TableID, VARIANT * RightAlignPageNumbers, VARIANT * IncludePageNumbers, VARIANT * AddedStyles );
__declspec(implementation_key(5064)) FieldPtr TablesOfFigures::MarkEntry ( struct Range * Range, VARIANT * Entry, VARIANT * EntryAutoText, VARIANT * TableID, VARIANT * Level );
__declspec(implementation_key(5065)) TableOfFiguresPtr TablesOfFigures::Add ( struct Range * Range, VARIANT * Caption, VARIANT * IncludeLabel, VARIANT * UseHeadingStyles, VARIANT * UpperHeadingLevel, VARIANT * LowerHeadingLevel, VARIANT * UseFields, VARIANT * TableID, VARIANT * RightAlignPageNumbers, VARIANT * IncludePageNumbers, VARIANT * AddedStyles, VARIANT * UseHyperlinks, VARIANT * HidePageNumbersInWeb );
__declspec(implementation_key(5066)) _ApplicationPtr TablesOfContents::GetApplication ( );
__declspec(implementation_key(5067)) long TablesOfContents::GetCreator ( );
__declspec(implementation_key(5068)) IDispatchPtr TablesOfContents::GetParent ( );
__declspec(implementation_key(5069)) IUnknownPtr TablesOfContents::Get_NewEnum ( );
__declspec(implementation_key(5070)) long TablesOfContents::GetCount ( );
__declspec(implementation_key(5071)) enum WdTocFormat TablesOfContents::GetFormat ( );
__declspec(implementation_key(5072)) void TablesOfContents::PutFormat ( enum WdTocFormat prop );
__declspec(implementation_key(5073)) TableOfContentsPtr TablesOfContents::Item ( long Index );
__declspec(implementation_key(5074)) TableOfContentsPtr TablesOfContents::AddOld ( struct Range * Range, VARIANT * UseHeadingStyles, VARIANT * UpperHeadingLevel, VARIANT * LowerHeadingLevel, VARIANT * UseFields, VARIANT * TableID, VARIANT * RightAlignPageNumbers, VARIANT * IncludePageNumbers, VARIANT * AddedStyles );
__declspec(implementation_key(5075)) FieldPtr TablesOfContents::MarkEntry ( struct Range * Range, VARIANT * Entry, VARIANT * EntryAutoText, VARIANT * TableID, VARIANT * Level );
__declspec(implementation_key(5076)) TableOfContentsPtr TablesOfContents::Add2000 ( struct Range * Range, VARIANT * UseHeadingStyles, VARIANT * UpperHeadingLevel, VARIANT * LowerHeadingLevel, VARIANT * UseFields, VARIANT * TableID, VARIANT * RightAlignPageNumbers, VARIANT * IncludePageNumbers, VARIANT * AddedStyles, VARIANT * UseHyperlinks, VARIANT * HidePageNumbersInWeb );
__declspec(implementation_key(5077)) TableOfContentsPtr TablesOfContents::Add ( struct Range * Range, VARIANT * UseHeadingStyles, VARIANT * UpperHeadingLevel, VARIANT * LowerHeadingLevel, VARIANT * UseFields, VARIANT * TableID, VARIANT * RightAlignPageNumbers, VARIANT * IncludePageNumbers, VARIANT * AddedStyles, VARIANT * UseHyperlinks, VARIANT * HidePageNumbersInWeb, VARIANT * UseOutlineLevels );
__declspec(implementation_key(5078)) _ApplicationPtr TablesOfAuthorities::GetApplication ( );
__declspec(implementation_key(5079)) long TablesOfAuthorities::GetCreator ( );
__declspec(implementation_key(5080)) IDispatchPtr TablesOfAuthorities::GetParent ( );
__declspec(implementation_key(5081)) IUnknownPtr TablesOfAuthorities::Get_NewEnum ( );
__declspec(implementation_key(5082)) long TablesOfAuthorities::GetCount ( );
__declspec(implementation_key(5083)) enum WdToaFormat TablesOfAuthorities::GetFormat ( );
__declspec(implementation_key(5084)) void TablesOfAuthorities::PutFormat ( enum WdToaFormat prop );
__declspec(implementation_key(5085)) TableOfAuthoritiesPtr TablesOfAuthorities::Item ( long Index );
__declspec(implementation_key(5086)) TableOfAuthoritiesPtr TablesOfAuthorities::Add ( struct Range * Range, VARIANT * Category, VARIANT * Bookmark, VARIANT * Passim, VARIANT * KeepEntryFormatting, VARIANT * Separator, VARIANT * IncludeSequenceName, VARIANT * EntrySeparator, VARIANT * PageRangeSeparator, VARIANT * IncludeCategoryHeader, VARIANT * PageNumberSeparator );
__declspec(implementation_key(5087)) HRESULT TablesOfAuthorities::NextCitation ( _bstr_t ShortCitation );
__declspec(implementation_key(5088)) FieldPtr TablesOfAuthorities::MarkCitation ( struct Range * Range, _bstr_t ShortCitation, VARIANT * LongCitation, VARIANT * LongCitationAutoText, VARIANT * Category );
__declspec(implementation_key(5089)) HRESULT TablesOfAuthorities::MarkAllCitations ( _bstr_t ShortCitation, VARIANT * LongCitation, VARIANT * LongCitationAutoText, VARIANT * Category );
__declspec(implementation_key(5090)) _ApplicationPtr Indexes::GetApplication ( );
__declspec(implementation_key(5091)) long Indexes::GetCreator ( );
__declspec(implementation_key(5092)) IDispatchPtr Indexes::GetParent ( );
__declspec(implementation_key(5093)) IUnknownPtr Indexes::Get_NewEnum ( );
__declspec(implementation_key(5094)) long Indexes::GetCount ( );
__declspec(implementation_key(5095)) enum WdIndexFormat Indexes::GetFormat ( );
__declspec(implementation_key(5096)) void Indexes::PutFormat ( enum WdIndexFormat prop );
__declspec(implementation_key(5097)) IndexPtr Indexes::Item ( long Index );
__declspec(implementation_key(5098)) IndexPtr Indexes::AddOld ( struct Range * Range, VARIANT * HeadingSeparator, VARIANT * RightAlignPageNumbers, VARIANT * Type, VARIANT * NumberOfColumns, VARIANT * AccentedLetters );
__declspec(implementation_key(5099)) FieldPtr Indexes::MarkEntry ( struct Range * Range, VARIANT * Entry, VARIANT * EntryAutoText, VARIANT * CrossReference, VARIANT * CrossReferenceAutoText, VARIANT * BookmarkName, VARIANT * Bold, VARIANT * Italic, VARIANT * Reading );
__declspec(implementation_key(5100)) HRESULT Indexes::MarkAllEntries ( struct Range * Range, VARIANT * Entry, VARIANT * EntryAutoText, VARIANT * CrossReference, VARIANT * CrossReferenceAutoText, VARIANT * BookmarkName, VARIANT * Bold, VARIANT * Italic );
__declspec(implementation_key(5101)) HRESULT Indexes::AutoMarkEntries ( _bstr_t ConcordanceFileName );
__declspec(implementation_key(5102)) IndexPtr Indexes::Add ( struct Range * Range, VARIANT * HeadingSeparator, VARIANT * RightAlignPageNumbers, VARIANT * Type, VARIANT * NumberOfColumns, VARIANT * AccentedLetters, VARIANT * SortBy, VARIANT * IndexLanguage );
__declspec(implementation_key(5103)) _ApplicationPtr Styles::GetApplication ( );
__declspec(implementation_key(5104)) long Styles::GetCreator ( );
__declspec(implementation_key(5105)) IDispatchPtr Styles::GetParent ( );
__declspec(implementation_key(5106)) IUnknownPtr Styles::Get_NewEnum ( );
__declspec(implementation_key(5107)) long Styles::GetCount ( );
__declspec(implementation_key(5108)) StylePtr Styles::Item ( VARIANT * Index );
__declspec(implementation_key(5109)) StylePtr Styles::Add ( _bstr_t Name, VARIANT * Type );
__declspec(implementation_key(5110)) _ApplicationPtr Style::GetApplication ( );
__declspec(implementation_key(5111)) long Style::GetCreator ( );
__declspec(implementation_key(5112)) IDispatchPtr Style::GetParent ( );
__declspec(implementation_key(5113)) _bstr_t Style::GetNameLocal ( );
__declspec(implementation_key(5114)) void Style::PutNameLocal ( _bstr_t prop );
__declspec(implementation_key(5115)) _variant_t Style::GetBaseStyle ( );
__declspec(implementation_key(5116)) void Style::PutBaseStyle ( VARIANT * prop );
__declspec(implementation_key(5117)) _bstr_t Style::GetDescription ( );
__declspec(implementation_key(5118)) enum WdStyleType Style::GetType ( );
__declspec(implementation_key(5119)) VARIANT_BOOL Style::GetBuiltIn ( );
__declspec(implementation_key(5120)) _variant_t Style::GetNextParagraphStyle ( );
__declspec(implementation_key(5121)) void Style::PutNextParagraphStyle ( VARIANT * prop );
__declspec(implementation_key(5122)) VARIANT_BOOL Style::GetInUse ( );
__declspec(implementation_key(5123)) ShadingPtr Style::GetShading ( );
__declspec(implementation_key(5124)) BordersPtr Style::GetBorders ( );
__declspec(implementation_key(5125)) void Style::PutBorders ( struct Borders * prop );
__declspec(implementation_key(5126)) _ParagraphFormatPtr Style::GetParagraphFormat ( );
__declspec(implementation_key(5127)) void Style::PutParagraphFormat ( struct _ParagraphFormat * prop );
__declspec(implementation_key(5128)) _FontPtr Style::GetFont ( );
__declspec(implementation_key(5129)) void Style::PutFont ( struct _Font * prop );
__declspec(implementation_key(5130)) FramePtr Style::GetFrame ( );
__declspec(implementation_key(5131)) enum WdLanguageID Style::GetLanguageID ( );
__declspec(implementation_key(5132)) void Style::PutLanguageID ( enum WdLanguageID prop );
__declspec(implementation_key(5133)) VARIANT_BOOL Style::GetAutomaticallyUpdate ( );
__declspec(implementation_key(5134)) void Style::PutAutomaticallyUpdate ( VARIANT_BOOL prop );
__declspec(implementation_key(5135)) ListTemplatePtr Style::GetListTemplate ( );
__declspec(implementation_key(5136)) long Style::GetListLevelNumber ( );
__declspec(implementation_key(5137)) enum WdLanguageID Style::GetLanguageIDFarEast ( );
__declspec(implementation_key(5138)) void Style::PutLanguageIDFarEast ( enum WdLanguageID prop );
__declspec(implementation_key(5139)) VARIANT_BOOL Style::GetHidden ( );
__declspec(implementation_key(5140)) void Style::PutHidden ( VARIANT_BOOL prop );
__declspec(implementation_key(5141)) HRESULT Style::Delete ( );
__declspec(implementation_key(5142)) HRESULT Style::LinkToListTemplate ( struct ListTemplate * ListTemplate, VARIANT * ListLevelNumber );
__declspec(implementation_key(5143)) long Style::GetNoProofing ( );
__declspec(implementation_key(5144)) void Style::PutNoProofing ( long prop );
__declspec(implementation_key(5145)) _variant_t Style::GetLinkStyle ( );
__declspec(implementation_key(5146)) void Style::PutLinkStyle ( VARIANT * prop );
__declspec(implementation_key(5147)) VARIANT_BOOL Style::GetVisibility ( );
__declspec(implementation_key(5148)) void Style::PutVisibility ( VARIANT_BOOL prop );
__declspec(implementation_key(5149)) VARIANT_BOOL Style::GetNoSpaceBetweenParagraphsOfSameStyle ( );
__declspec(implementation_key(5150)) void Style::PutNoSpaceBetweenParagraphsOfSameStyle ( VARIANT_BOOL prop );
__declspec(implementation_key(5151)) TableStylePtr Style::GetTable ( );
__declspec(implementation_key(5152)) VARIANT_BOOL Style::GetLocked ( );
__declspec(implementation_key(5153)) void Style::PutLocked ( VARIANT_BOOL prop );
__declspec(implementation_key(5154)) long Style::GetPriority ( );
__declspec(implementation_key(5155)) void Style::PutPriority ( long prop );
__declspec(implementation_key(5156)) VARIANT_BOOL Style::GetUnhideWhenUsed ( );
__declspec(implementation_key(5157)) void Style::PutUnhideWhenUsed ( VARIANT_BOOL prop );
__declspec(implementation_key(5158)) VARIANT_BOOL Style::GetQuickStyle ( );
__declspec(implementation_key(5159)) void Style::PutQuickStyle ( VARIANT_BOOL prop );
__declspec(implementation_key(5160)) VARIANT_BOOL Style::GetLinked ( );
__declspec(implementation_key(5161)) _ApplicationPtr Envelope::GetApplication ( );
__declspec(implementation_key(5162)) long Envelope::GetCreator ( );
__declspec(implementation_key(5163)) IDispatchPtr Envelope::GetParent ( );
__declspec(implementation_key(5164)) RangePtr Envelope::GetAddress ( );
__declspec(implementation_key(5165)) RangePtr Envelope::GetReturnAddress ( );
__declspec(implementation_key(5166)) VARIANT_BOOL Envelope::GetDefaultPrintBarCode ( );
__declspec(implementation_key(5167)) void Envelope::PutDefaultPrintBarCode ( VARIANT_BOOL prop );
__declspec(implementation_key(5168)) VARIANT_BOOL Envelope::GetDefaultPrintFIMA ( );
__declspec(implementation_key(5169)) void Envelope::PutDefaultPrintFIMA ( VARIANT_BOOL prop );
__declspec(implementation_key(5170)) float Envelope::GetDefaultHeight ( );
__declspec(implementation_key(5171)) void Envelope::PutDefaultHeight ( float prop );
__declspec(implementation_key(5172)) float Envelope::GetDefaultWidth ( );
__declspec(implementation_key(5173)) void Envelope::PutDefaultWidth ( float prop );
__declspec(implementation_key(5174)) _bstr_t Envelope::GetDefaultSize ( );
__declspec(implementation_key(5175)) void Envelope::PutDefaultSize ( _bstr_t prop );
__declspec(implementation_key(5176)) VARIANT_BOOL Envelope::GetDefaultOmitReturnAddress ( );
__declspec(implementation_key(5177)) void Envelope::PutDefaultOmitReturnAddress ( VARIANT_BOOL prop );
__declspec(implementation_key(5178)) enum WdPaperTray Envelope::GetFeedSource ( );
__declspec(implementation_key(5179)) void Envelope::PutFeedSource ( enum WdPaperTray prop );
__declspec(implementation_key(5180)) float Envelope::GetAddressFromLeft ( );
__declspec(implementation_key(5181)) void Envelope::PutAddressFromLeft ( float prop );
__declspec(implementation_key(5182)) float Envelope::GetAddressFromTop ( );
__declspec(implementation_key(5183)) void Envelope::PutAddressFromTop ( float prop );
__declspec(implementation_key(5184)) float Envelope::GetReturnAddressFromLeft ( );
__declspec(implementation_key(5185)) void Envelope::PutReturnAddressFromLeft ( float prop );
__declspec(implementation_key(5186)) float Envelope::GetReturnAddressFromTop ( );
__declspec(implementation_key(5187)) void Envelope::PutReturnAddressFromTop ( float prop );
__declspec(implementation_key(5188)) StylePtr Envelope::GetAddressStyle ( );
__declspec(implementation_key(5189)) StylePtr Envelope::GetReturnAddressStyle ( );
__declspec(implementation_key(5190)) enum WdEnvelopeOrientation Envelope::GetDefaultOrientation ( );
__declspec(implementation_key(5191)) void Envelope::PutDefaultOrientation ( enum WdEnvelopeOrientation prop );
__declspec(implementation_key(5192)) VARIANT_BOOL Envelope::GetDefaultFaceUp ( );
__declspec(implementation_key(5193)) void Envelope::PutDefaultFaceUp ( VARIANT_BOOL prop );
__declspec(implementation_key(5194)) HRESULT Envelope::Insert2000 ( VARIANT * ExtractAddress, VARIANT * Address, VARIANT * AutoText, VARIANT * OmitReturnAddress, VARIANT * ReturnAddress, VARIANT * ReturnAutoText, VARIANT * PrintBarCode, VARIANT * PrintFIMA, VARIANT * Size, VARIANT * Height, VARIANT * Width, VARIANT * FeedSource, VARIANT * AddressFromLeft, VARIANT * AddressFromTop, VARIANT * ReturnAddressFromLeft, VARIANT * ReturnAddressFromTop, VARIANT * DefaultFaceUp, VARIANT * DefaultOrientation );
__declspec(implementation_key(5195)) HRESULT Envelope::PrintOut2000 ( VARIANT * ExtractAddress, VARIANT * Address, VARIANT * AutoText, VARIANT * OmitReturnAddress, VARIANT * ReturnAddress, VARIANT * ReturnAutoText, VARIANT * PrintBarCode, VARIANT * PrintFIMA, VARIANT * Size, VARIANT * Height, VARIANT * Width, VARIANT * FeedSource, VARIANT * AddressFromLeft, VARIANT * AddressFromTop, VARIANT * ReturnAddressFromLeft, VARIANT * ReturnAddressFromTop, VARIANT * DefaultFaceUp, VARIANT * DefaultOrientation );
__declspec(implementation_key(5196)) HRESULT Envelope::UpdateDocument ( );
__declspec(implementation_key(5197)) HRESULT Envelope::Options ( );
__declspec(implementation_key(5198)) VARIANT_BOOL Envelope::GetVertical ( );
__declspec(implementation_key(5199)) void Envelope::PutVertical ( VARIANT_BOOL prop );
__declspec(implementation_key(5200)) float Envelope::GetRecipientNamefromLeft ( );
__declspec(implementation_key(5201)) void Envelope::PutRecipientNamefromLeft ( float prop );
__declspec(implementation_key(5202)) float Envelope::GetRecipientNamefromTop ( );
__declspec(implementation_key(5203)) void Envelope::PutRecipientNamefromTop ( float prop );
__declspec(implementation_key(5204)) float Envelope::GetRecipientPostalfromLeft ( );
__declspec(implementation_key(5205)) void Envelope::PutRecipientPostalfromLeft ( float prop );
__declspec(implementation_key(5206)) float Envelope::GetRecipientPostalfromTop ( );
__declspec(implementation_key(5207)) void Envelope::PutRecipientPostalfromTop ( float prop );
__declspec(implementation_key(5208)) float Envelope::GetSenderNamefromLeft ( );
__declspec(implementation_key(5209)) void Envelope::PutSenderNamefromLeft ( float prop );
__declspec(implementation_key(5210)) float Envelope::GetSenderNamefromTop ( );
__declspec(implementation_key(5211)) void Envelope::PutSenderNamefromTop ( float prop );
__declspec(implementation_key(5212)) float Envelope::GetSenderPostalfromLeft ( );
__declspec(implementation_key(5213)) void Envelope::PutSenderPostalfromLeft ( float prop );
__declspec(implementation_key(5214)) float Envelope::GetSenderPostalfromTop ( );
__declspec(implementation_key(5215)) void Envelope::PutSenderPostalfromTop ( float prop );
__declspec(implementation_key(5216)) HRESULT Envelope::Insert ( VARIANT * ExtractAddress, VARIANT * Address, VARIANT * AutoText, VARIANT * OmitReturnAddress, VARIANT * ReturnAddress, VARIANT * ReturnAutoText, VARIANT * PrintBarCode, VARIANT * PrintFIMA, VARIANT * Size, VARIANT * Height, VARIANT * Width, VARIANT * FeedSource, VARIANT * AddressFromLeft, VARIANT * AddressFromTop, VARIANT * ReturnAddressFromLeft, VARIANT * ReturnAddressFromTop, VARIANT * DefaultFaceUp, VARIANT * DefaultOrientation, VARIANT * PrintEPostage, VARIANT * Vertical, VARIANT * RecipientNamefromLeft, VARIANT * RecipientNamefromTop, VARIANT * RecipientPostalfromLeft, VARIANT * RecipientPostalfromTop, VARIANT * SenderNamefromLeft, VARIANT * SenderNamefromTop, VARIANT * SenderPostalfromLeft, VARIANT * SenderPostalfromTop );
__declspec(implementation_key(5217)) HRESULT Envelope::PrintOut ( VARIANT * ExtractAddress, VARIANT * Address, VARIANT * AutoText, VARIANT * OmitReturnAddress, VARIANT * ReturnAddress, VARIANT * ReturnAutoText, VARIANT * PrintBarCode, VARIANT * PrintFIMA, VARIANT * Size, VARIANT * Height, VARIANT * Width, VARIANT * FeedSource, VARIANT * AddressFromLeft, VARIANT * AddressFromTop, VARIANT * ReturnAddressFromLeft, VARIANT * ReturnAddressFromTop, VARIANT * DefaultFaceUp, VARIANT * DefaultOrientation, VARIANT * PrintEPostage, VARIANT * Vertical, VARIANT * RecipientNamefromLeft, VARIANT * RecipientNamefromTop, VARIANT * RecipientPostalfromLeft, VARIANT * RecipientPostalfromTop, VARIANT * SenderNamefromLeft, VARIANT * SenderNamefromTop, VARIANT * SenderPostalfromLeft, VARIANT * SenderPostalfromTop );
__declspec(implementation_key(5218)) _ApplicationPtr Revision::GetApplication ( );
__declspec(implementation_key(5219)) long Revision::GetCreator ( );
__declspec(implementation_key(5220)) IDispatchPtr Revision::GetParent ( );
__declspec(implementation_key(5221)) _bstr_t Revision::GetAuthor ( );
__declspec(implementation_key(5222)) DATE Revision::GetDate ( );
__declspec(implementation_key(5223)) RangePtr Revision::GetRange ( );
__declspec(implementation_key(5224)) enum WdRevisionType Revision::GetType ( );
__declspec(implementation_key(5225)) long Revision::GetIndex ( );
__declspec(implementation_key(5226)) HRESULT Revision::Accept ( );
__declspec(implementation_key(5227)) HRESULT Revision::Reject ( );
__declspec(implementation_key(5228)) StylePtr Revision::GetStyle ( );
__declspec(implementation_key(5229)) _bstr_t Revision::GetFormatDescription ( );
__declspec(implementation_key(5230)) RangePtr Revision::GetMovedRange ( );
__declspec(implementation_key(5231)) CellsPtr Revision::GetCells ( );
__declspec(implementation_key(5232)) _ApplicationPtr Revisions::GetApplication ( );
__declspec(implementation_key(5233)) long Revisions::GetCreator ( );
__declspec(implementation_key(5234)) IDispatchPtr Revisions::GetParent ( );
__declspec(implementation_key(5235)) IUnknownPtr Revisions::Get_NewEnum ( );
__declspec(implementation_key(5236)) long Revisions::GetCount ( );
__declspec(implementation_key(5237)) RevisionPtr Revisions::Item ( long Index );
__declspec(implementation_key(5238)) HRESULT Revisions::AcceptAll ( );
__declspec(implementation_key(5239)) HRESULT Revisions::RejectAll ( );
__declspec(implementation_key(5240)) _ApplicationPtr EmailAuthor::GetApplication ( );
__declspec(implementation_key(5241)) long EmailAuthor::GetCreator ( );
__declspec(implementation_key(5242)) IDispatchPtr EmailAuthor::GetParent ( );
__declspec(implementation_key(5243)) StylePtr EmailAuthor::GetStyle ( );
__declspec(implementation_key(5244)) _ApplicationPtr EmailOptions::GetApplication ( );
__declspec(implementation_key(5245)) long EmailOptions::GetCreator ( );
__declspec(implementation_key(5246)) IDispatchPtr EmailOptions::GetParent ( );
__declspec(implementation_key(5247)) VARIANT_BOOL EmailOptions::GetUseThemeStyle ( );
__declspec(implementation_key(5248)) void EmailOptions::PutUseThemeStyle ( VARIANT_BOOL prop );
__declspec(implementation_key(5249)) _bstr_t EmailOptions::GetMarkCommentsWith ( );
__declspec(implementation_key(5250)) void EmailOptions::PutMarkCommentsWith ( _bstr_t prop );
__declspec(implementation_key(5251)) VARIANT_BOOL EmailOptions::GetMarkComments ( );
__declspec(implementation_key(5252)) void EmailOptions::PutMarkComments ( VARIANT_BOOL prop );
__declspec(implementation_key(5253)) EmailSignaturePtr EmailOptions::GetEmailSignature ( );
__declspec(implementation_key(5254)) StylePtr EmailOptions::GetComposeStyle ( );
__declspec(implementation_key(5255)) StylePtr EmailOptions::GetReplyStyle ( );
__declspec(implementation_key(5256)) _bstr_t EmailOptions::GetThemeName ( );
__declspec(implementation_key(5257)) void EmailOptions::PutThemeName ( _bstr_t prop );
__declspec(implementation_key(5258)) VARIANT_BOOL EmailOptions::GetDummy1 ( );
__declspec(implementation_key(5259)) VARIANT_BOOL EmailOptions::GetDummy2 ( );
__declspec(implementation_key(5260)) HRESULT EmailOptions::Dummy3 ( );
__declspec(implementation_key(5261)) VARIANT_BOOL EmailOptions::GetNewColorOnReply ( );
__declspec(implementation_key(5262)) void EmailOptions::PutNewColorOnReply ( VARIANT_BOOL prop );
__declspec(implementation_key(5263)) StylePtr EmailOptions::GetPlainTextStyle ( );
__declspec(implementation_key(5264)) VARIANT_BOOL EmailOptions::GetUseThemeStyleOnReply ( );
__declspec(implementation_key(5265)) void EmailOptions::PutUseThemeStyleOnReply ( VARIANT_BOOL prop );
__declspec(implementation_key(5266)) VARIANT_BOOL EmailOptions::GetAutoFormatAsYouTypeApplyHeadings ( );
__declspec(implementation_key(5267)) void EmailOptions::PutAutoFormatAsYouTypeApplyHeadings ( VARIANT_BOOL prop );
__declspec(implementation_key(5268)) VARIANT_BOOL EmailOptions::GetAutoFormatAsYouTypeApplyBorders ( );
__declspec(implementation_key(5269)) void EmailOptions::PutAutoFormatAsYouTypeApplyBorders ( VARIANT_BOOL prop );
__declspec(implementation_key(5270)) VARIANT_BOOL EmailOptions::GetAutoFormatAsYouTypeApplyBulletedLists ( );
__declspec(implementation_key(5271)) void EmailOptions::PutAutoFormatAsYouTypeApplyBulletedLists ( VARIANT_BOOL prop );
__declspec(implementation_key(5272)) VARIANT_BOOL EmailOptions::GetAutoFormatAsYouTypeApplyNumberedLists ( );
__declspec(implementation_key(5273)) void EmailOptions::PutAutoFormatAsYouTypeApplyNumberedLists ( VARIANT_BOOL prop );
__declspec(implementation_key(5274)) VARIANT_BOOL EmailOptions::GetAutoFormatAsYouTypeReplaceQuotes ( );
__declspec(implementation_key(5275)) void EmailOptions::PutAutoFormatAsYouTypeReplaceQuotes ( VARIANT_BOOL prop );
__declspec(implementation_key(5276)) VARIANT_BOOL EmailOptions::GetAutoFormatAsYouTypeReplaceSymbols ( );
__declspec(implementation_key(5277)) void EmailOptions::PutAutoFormatAsYouTypeReplaceSymbols ( VARIANT_BOOL prop );
__declspec(implementation_key(5278)) VARIANT_BOOL EmailOptions::GetAutoFormatAsYouTypeReplaceOrdinals ( );
__declspec(implementation_key(5279)) void EmailOptions::PutAutoFormatAsYouTypeReplaceOrdinals ( VARIANT_BOOL prop );
__declspec(implementation_key(5280)) VARIANT_BOOL EmailOptions::GetAutoFormatAsYouTypeReplaceFractions ( );
__declspec(implementation_key(5281)) void EmailOptions::PutAutoFormatAsYouTypeReplaceFractions ( VARIANT_BOOL prop );
__declspec(implementation_key(5282)) VARIANT_BOOL EmailOptions::GetAutoFormatAsYouTypeReplacePlainTextEmphasis ( );
__declspec(implementation_key(5283)) void EmailOptions::PutAutoFormatAsYouTypeReplacePlainTextEmphasis ( VARIANT_BOOL prop );
__declspec(implementation_key(5284)) VARIANT_BOOL EmailOptions::GetAutoFormatAsYouTypeFormatListItemBeginning ( );
__declspec(implementation_key(5285)) void EmailOptions::PutAutoFormatAsYouTypeFormatListItemBeginning ( VARIANT_BOOL prop );
__declspec(implementation_key(5286)) VARIANT_BOOL EmailOptions::GetAutoFormatAsYouTypeDefineStyles ( );
__declspec(implementation_key(5287)) void EmailOptions::PutAutoFormatAsYouTypeDefineStyles ( VARIANT_BOOL prop );
__declspec(implementation_key(5288)) VARIANT_BOOL EmailOptions::GetAutoFormatAsYouTypeReplaceHyperlinks ( );
__declspec(implementation_key(5289)) void EmailOptions::PutAutoFormatAsYouTypeReplaceHyperlinks ( VARIANT_BOOL prop );
__declspec(implementation_key(5290)) VARIANT_BOOL EmailOptions::GetAutoFormatAsYouTypeApplyTables ( );
__declspec(implementation_key(5291)) void EmailOptions::PutAutoFormatAsYouTypeApplyTables ( VARIANT_BOOL prop );
__declspec(implementation_key(5292)) VARIANT_BOOL EmailOptions::GetAutoFormatAsYouTypeApplyFirstIndents ( );
__declspec(implementation_key(5293)) void EmailOptions::PutAutoFormatAsYouTypeApplyFirstIndents ( VARIANT_BOOL prop );
__declspec(implementation_key(5294)) VARIANT_BOOL EmailOptions::GetAutoFormatAsYouTypeApplyDates ( );
__declspec(implementation_key(5295)) void EmailOptions::PutAutoFormatAsYouTypeApplyDates ( VARIANT_BOOL prop );
__declspec(implementation_key(5296)) VARIANT_BOOL EmailOptions::GetAutoFormatAsYouTypeApplyClosings ( );
__declspec(implementation_key(5297)) void EmailOptions::PutAutoFormatAsYouTypeApplyClosings ( VARIANT_BOOL prop );
__declspec(implementation_key(5298)) VARIANT_BOOL EmailOptions::GetAutoFormatAsYouTypeMatchParentheses ( );
__declspec(implementation_key(5299)) void EmailOptions::PutAutoFormatAsYouTypeMatchParentheses ( VARIANT_BOOL prop );
__declspec(implementation_key(5300)) VARIANT_BOOL EmailOptions::GetAutoFormatAsYouTypeReplaceFarEastDashes ( );
__declspec(implementation_key(5301)) void EmailOptions::PutAutoFormatAsYouTypeReplaceFarEastDashes ( VARIANT_BOOL prop );
__declspec(implementation_key(5302)) VARIANT_BOOL EmailOptions::GetAutoFormatAsYouTypeDeleteAutoSpaces ( );
__declspec(implementation_key(5303)) void EmailOptions::PutAutoFormatAsYouTypeDeleteAutoSpaces ( VARIANT_BOOL prop );
__declspec(implementation_key(5304)) VARIANT_BOOL EmailOptions::GetAutoFormatAsYouTypeInsertClosings ( );
__declspec(implementation_key(5305)) void EmailOptions::PutAutoFormatAsYouTypeInsertClosings ( VARIANT_BOOL prop );
__declspec(implementation_key(5306)) VARIANT_BOOL EmailOptions::GetAutoFormatAsYouTypeAutoLetterWizard ( );
__declspec(implementation_key(5307)) void EmailOptions::PutAutoFormatAsYouTypeAutoLetterWizard ( VARIANT_BOOL prop );
__declspec(implementation_key(5308)) VARIANT_BOOL EmailOptions::GetAutoFormatAsYouTypeInsertOvers ( );
__declspec(implementation_key(5309)) void EmailOptions::PutAutoFormatAsYouTypeInsertOvers ( VARIANT_BOOL prop );
__declspec(implementation_key(5310)) VARIANT_BOOL EmailOptions::GetRelyOnCSS ( );
__declspec(implementation_key(5311)) void EmailOptions::PutRelyOnCSS ( VARIANT_BOOL prop );
__declspec(implementation_key(5312)) enum WdEmailHTMLFidelity EmailOptions::GetHTMLFidelity ( );
__declspec(implementation_key(5313)) void EmailOptions::PutHTMLFidelity ( enum WdEmailHTMLFidelity prop );
__declspec(implementation_key(5314)) VARIANT_BOOL EmailOptions::GetEmbedSmartTag ( );
__declspec(implementation_key(5315)) void EmailOptions::PutEmbedSmartTag ( VARIANT_BOOL prop );
__declspec(implementation_key(5316)) VARIANT_BOOL EmailOptions::GetTabIndentKey ( );
__declspec(implementation_key(5317)) void EmailOptions::PutTabIndentKey ( VARIANT_BOOL prop );
__declspec(implementation_key(5318)) _ApplicationPtr Email::GetApplication ( );
__declspec(implementation_key(5319)) long Email::GetCreator ( );
__declspec(implementation_key(5320)) IDispatchPtr Email::GetParent ( );
__declspec(implementation_key(5321)) EmailAuthorPtr Email::GetCurrentEmailAuthor ( );
__declspec(implementation_key(5322)) _bstr_t Selection::GetText ( );
__declspec(implementation_key(5323)) void Selection::PutText ( _bstr_t prop );
__declspec(implementation_key(5324)) RangePtr Selection::GetFormattedText ( );
__declspec(implementation_key(5325)) void Selection::PutFormattedText ( struct Range * prop );
__declspec(implementation_key(5326)) long Selection::GetStart ( );
__declspec(implementation_key(5327)) void Selection::PutStart ( long prop );
__declspec(implementation_key(5328)) long Selection::GetEnd ( );
__declspec(implementation_key(5329)) void Selection::PutEnd ( long prop );
__declspec(implementation_key(5330)) _FontPtr Selection::GetFont ( );
__declspec(implementation_key(5331)) void Selection::PutFont ( struct _Font * prop );
__declspec(implementation_key(5332)) enum WdSelectionType Selection::GetType ( );
__declspec(implementation_key(5333)) enum WdStoryType Selection::GetStoryType ( );
__declspec(implementation_key(5334)) _variant_t Selection::GetStyle ( );
__declspec(implementation_key(5335)) void Selection::PutStyle ( VARIANT * prop );
__declspec(implementation_key(5336)) TablesPtr Selection::GetTables ( );
__declspec(implementation_key(5337)) WordsPtr Selection::GetWords ( );
__declspec(implementation_key(5338)) SentencesPtr Selection::GetSentences ( );
__declspec(implementation_key(5339)) CharactersPtr Selection::GetCharacters ( );
__declspec(implementation_key(5340)) FootnotesPtr Selection::GetFootnotes ( );
__declspec(implementation_key(5341)) EndnotesPtr Selection::GetEndnotes ( );
__declspec(implementation_key(5342)) CommentsPtr Selection::GetComments ( );
__declspec(implementation_key(5343)) CellsPtr Selection::GetCells ( );
__declspec(implementation_key(5344)) SectionsPtr Selection::GetSections ( );
__declspec(implementation_key(5345)) ParagraphsPtr Selection::GetParagraphs ( );
__declspec(implementation_key(5346)) BordersPtr Selection::GetBorders ( );
__declspec(implementation_key(5347)) void Selection::PutBorders ( struct Borders * prop );
__declspec(implementation_key(5348)) ShadingPtr Selection::GetShading ( );
__declspec(implementation_key(5349)) FieldsPtr Selection::GetFields ( );
__declspec(implementation_key(5350)) FormFieldsPtr Selection::GetFormFields ( );
__declspec(implementation_key(5351)) FramesPtr Selection::GetFrames ( );
__declspec(implementation_key(5352)) _ParagraphFormatPtr Selection::GetParagraphFormat ( );
__declspec(implementation_key(5353)) void Selection::PutParagraphFormat ( struct _ParagraphFormat * prop );
__declspec(implementation_key(5354)) PageSetupPtr Selection::GetPageSetup ( );
__declspec(implementation_key(5355)) void Selection::PutPageSetup ( struct PageSetup * prop );
__declspec(implementation_key(5356)) BookmarksPtr Selection::GetBookmarks ( );
__declspec(implementation_key(5357)) long Selection::GetStoryLength ( );
__declspec(implementation_key(5358)) enum WdLanguageID Selection::GetLanguageID ( );
__declspec(implementation_key(5359)) void Selection::PutLanguageID ( enum WdLanguageID prop );
__declspec(implementation_key(5360)) enum WdLanguageID Selection::GetLanguageIDFarEast ( );
__declspec(implementation_key(5361)) void Selection::PutLanguageIDFarEast ( enum WdLanguageID prop );
__declspec(implementation_key(5362)) enum WdLanguageID Selection::GetLanguageIDOther ( );
__declspec(implementation_key(5363)) void Selection::PutLanguageIDOther ( enum WdLanguageID prop );
__declspec(implementation_key(5364)) HyperlinksPtr Selection::GetHyperlinks ( );
__declspec(implementation_key(5365)) ColumnsPtr Selection::GetColumns ( );
__declspec(implementation_key(5366)) RowsPtr Selection::GetRows ( );
__declspec(implementation_key(5367)) HeaderFooterPtr Selection::GetHeaderFooter ( );
__declspec(implementation_key(5368)) VARIANT_BOOL Selection::GetIsEndOfRowMark ( );
__declspec(implementation_key(5369)) long Selection::GetBookmarkID ( );
__declspec(implementation_key(5370)) long Selection::GetPreviousBookmarkID ( );
__declspec(implementation_key(5371)) FindPtr Selection::GetFind ( );
__declspec(implementation_key(5372)) RangePtr Selection::GetRange ( );
__declspec(implementation_key(5373)) _variant_t Selection::GetInformation ( enum WdInformation Type );
__declspec(implementation_key(5374)) enum WdSelectionFlags Selection::GetFlags ( );
__declspec(implementation_key(5375)) void Selection::PutFlags ( enum WdSelectionFlags prop );
__declspec(implementation_key(5376)) VARIANT_BOOL Selection::GetActive ( );
__declspec(implementation_key(5377)) VARIANT_BOOL Selection::GetStartIsActive ( );
__declspec(implementation_key(5378)) void Selection::PutStartIsActive ( VARIANT_BOOL prop );
__declspec(implementation_key(5379)) VARIANT_BOOL Selection::GetIPAtEndOfLine ( );
__declspec(implementation_key(5380)) VARIANT_BOOL Selection::GetExtendMode ( );
__declspec(implementation_key(5381)) void Selection::PutExtendMode ( VARIANT_BOOL prop );
__declspec(implementation_key(5382)) VARIANT_BOOL Selection::GetColumnSelectMode ( );
__declspec(implementation_key(5383)) void Selection::PutColumnSelectMode ( VARIANT_BOOL prop );
__declspec(implementation_key(5384)) enum WdTextOrientation Selection::GetOrientation ( );
__declspec(implementation_key(5385)) void Selection::PutOrientation ( enum WdTextOrientation prop );
__declspec(implementation_key(5386)) InlineShapesPtr Selection::GetInlineShapes ( );
__declspec(implementation_key(5387)) _ApplicationPtr Selection::GetApplication ( );
__declspec(implementation_key(5388)) long Selection::GetCreator ( );
__declspec(implementation_key(5389)) IDispatchPtr Selection::GetParent ( );
__declspec(implementation_key(5390)) _DocumentPtr Selection::GetDocument ( );
__declspec(implementation_key(5391)) ShapeRangePtr Selection::GetShapeRange ( );
__declspec(implementation_key(5392)) HRESULT Selection::Select ( );
__declspec(implementation_key(5393)) HRESULT Selection::SetRange ( long Start, long End );
__declspec(implementation_key(5394)) HRESULT Selection::Collapse ( VARIANT * Direction );
__declspec(implementation_key(5395)) HRESULT Selection::InsertBefore ( _bstr_t Text );
__declspec(implementation_key(5396)) HRESULT Selection::InsertAfter ( _bstr_t Text );
__declspec(implementation_key(5397)) RangePtr Selection::Next ( VARIANT * Unit, VARIANT * Count );
__declspec(implementation_key(5398)) RangePtr Selection::Previous ( VARIANT * Unit, VARIANT * Count );
__declspec(implementation_key(5399)) long Selection::StartOf ( VARIANT * Unit, VARIANT * Extend );
__declspec(implementation_key(5400)) long Selection::EndOf ( VARIANT * Unit, VARIANT * Extend );
__declspec(implementation_key(5401)) long Selection::Move ( VARIANT * Unit, VARIANT * Count );
__declspec(implementation_key(5402)) long Selection::MoveStart ( VARIANT * Unit, VARIANT * Count );
__declspec(implementation_key(5403)) long Selection::MoveEnd ( VARIANT * Unit, VARIANT * Count );
__declspec(implementation_key(5404)) long Selection::MoveWhile ( VARIANT * Cset, VARIANT * Count );
__declspec(implementation_key(5405)) long Selection::MoveStartWhile ( VARIANT * Cset, VARIANT * Count );
__declspec(implementation_key(5406)) long Selection::MoveEndWhile ( VARIANT * Cset, VARIANT * Count );
__declspec(implementation_key(5407)) long Selection::MoveUntil ( VARIANT * Cset, VARIANT * Count );
__declspec(implementation_key(5408)) long Selection::MoveStartUntil ( VARIANT * Cset, VARIANT * Count );
__declspec(implementation_key(5409)) long Selection::MoveEndUntil ( VARIANT * Cset, VARIANT * Count );
__declspec(implementation_key(5410)) HRESULT Selection::Cut ( );
__declspec(implementation_key(5411)) HRESULT Selection::Copy ( );
__declspec(implementation_key(5412)) HRESULT Selection::Paste ( );
__declspec(implementation_key(5413)) HRESULT Selection::InsertBreak ( VARIANT * Type );
__declspec(implementation_key(5414)) HRESULT Selection::InsertFile ( _bstr_t FileName, VARIANT * Range, VARIANT * ConfirmConversions, VARIANT * Link, VARIANT * Attachment );
__declspec(implementation_key(5415)) VARIANT_BOOL Selection::InStory ( struct Range * Range );
__declspec(implementation_key(5416)) VARIANT_BOOL Selection::InRange ( struct Range * Range );
__declspec(implementation_key(5417)) long Selection::Delete ( VARIANT * Unit, VARIANT * Count );
__declspec(implementation_key(5418)) long Selection::Expand ( VARIANT * Unit );
__declspec(implementation_key(5419)) HRESULT Selection::InsertParagraph ( );
__declspec(implementation_key(5420)) HRESULT Selection::InsertParagraphAfter ( );
__declspec(implementation_key(5421)) TablePtr Selection::ConvertToTableOld ( VARIANT * Separator, VARIANT * NumRows, VARIANT * NumColumns, VARIANT * InitialColumnWidth, VARIANT * Format, VARIANT * ApplyBorders, VARIANT * ApplyShading, VARIANT * ApplyFont, VARIANT * ApplyColor, VARIANT * ApplyHeadingRows, VARIANT * ApplyLastRow, VARIANT * ApplyFirstColumn, VARIANT * ApplyLastColumn, VARIANT * AutoFit );
__declspec(implementation_key(5422)) HRESULT Selection::InsertDateTimeOld ( VARIANT * DateTimeFormat, VARIANT * InsertAsField, VARIANT * InsertAsFullWidth );
__declspec(implementation_key(5423)) HRESULT Selection::InsertSymbol ( long CharacterNumber, VARIANT * Font, VARIANT * Unicode, VARIANT * Bias );
__declspec(implementation_key(5424)) HRESULT Selection::InsertCrossReference_2002 ( VARIANT * ReferenceType, enum WdReferenceKind ReferenceKind, VARIANT * ReferenceItem, VARIANT * InsertAsHyperlink, VARIANT * IncludePosition );
__declspec(implementation_key(5425)) HRESULT Selection::InsertCaptionXP ( VARIANT * Label, VARIANT * Title, VARIANT * TitleAutoText, VARIANT * Position );
__declspec(implementation_key(5426)) HRESULT Selection::CopyAsPicture ( );
__declspec(implementation_key(5427)) HRESULT Selection::SortOld ( VARIANT * ExcludeHeader, VARIANT * FieldNumber, VARIANT * SortFieldType, VARIANT * SortOrder, VARIANT * FieldNumber2, VARIANT * SortFieldType2, VARIANT * SortOrder2, VARIANT * FieldNumber3, VARIANT * SortFieldType3, VARIANT * SortOrder3, VARIANT * SortColumn, VARIANT * Separator, VARIANT * CaseSensitive, VARIANT * LanguageID );
__declspec(implementation_key(5428)) HRESULT Selection::SortAscending ( );
__declspec(implementation_key(5429)) HRESULT Selection::SortDescending ( );
__declspec(implementation_key(5430)) VARIANT_BOOL Selection::IsEqual ( struct Range * Range );
__declspec(implementation_key(5431)) float Selection::Calculate ( );
__declspec(implementation_key(5432)) RangePtr Selection::GoTo ( VARIANT * What, VARIANT * Which, VARIANT * Count, VARIANT * Name );
__declspec(implementation_key(5433)) RangePtr Selection::GoToNext ( enum WdGoToItem What );
__declspec(implementation_key(5434)) RangePtr Selection::GoToPrevious ( enum WdGoToItem What );
__declspec(implementation_key(5435)) HRESULT Selection::PasteSpecial ( VARIANT * IconIndex, VARIANT * Link, VARIANT * Placement, VARIANT * DisplayAsIcon, VARIANT * DataType, VARIANT * IconFileName, VARIANT * IconLabel );
__declspec(implementation_key(5436)) FieldPtr Selection::PreviousField ( );
__declspec(implementation_key(5437)) FieldPtr Selection::NextField ( );
__declspec(implementation_key(5438)) HRESULT Selection::InsertParagraphBefore ( );
__declspec(implementation_key(5439)) HRESULT Selection::InsertCells ( VARIANT * ShiftCells );
__declspec(implementation_key(5440)) HRESULT Selection::Extend ( VARIANT * Character );
__declspec(implementation_key(5441)) HRESULT Selection::Shrink ( );
__declspec(implementation_key(5442)) long Selection::MoveLeft ( VARIANT * Unit, VARIANT * Count, VARIANT * Extend );
__declspec(implementation_key(5443)) long Selection::MoveRight ( VARIANT * Unit, VARIANT * Count, VARIANT * Extend );
__declspec(implementation_key(5444)) long Selection::MoveUp ( VARIANT * Unit, VARIANT * Count, VARIANT * Extend );
__declspec(implementation_key(5445)) long Selection::MoveDown ( VARIANT * Unit, VARIANT * Count, VARIANT * Extend );
__declspec(implementation_key(5446)) long Selection::HomeKey ( VARIANT * Unit, VARIANT * Extend );
__declspec(implementation_key(5447)) long Selection::EndKey ( VARIANT * Unit, VARIANT * Extend );
__declspec(implementation_key(5448)) HRESULT Selection::EscapeKey ( );
__declspec(implementation_key(5449)) HRESULT Selection::TypeText ( _bstr_t Text );
__declspec(implementation_key(5450)) HRESULT Selection::CopyFormat ( );
__declspec(implementation_key(5451)) HRESULT Selection::PasteFormat ( );
__declspec(implementation_key(5452)) HRESULT Selection::TypeParagraph ( );
__declspec(implementation_key(5453)) HRESULT Selection::TypeBackspace ( );
__declspec(implementation_key(5454)) HRESULT Selection::NextSubdocument ( );
__declspec(implementation_key(5455)) HRESULT Selection::PreviousSubdocument ( );
__declspec(implementation_key(5456)) HRESULT Selection::SelectColumn ( );
__declspec(implementation_key(5457)) HRESULT Selection::SelectCurrentFont ( );
__declspec(implementation_key(5458)) HRESULT Selection::SelectCurrentAlignment ( );
__declspec(implementation_key(5459)) HRESULT Selection::SelectCurrentSpacing ( );
__declspec(implementation_key(5460)) HRESULT Selection::SelectCurrentIndent ( );
__declspec(implementation_key(5461)) HRESULT Selection::SelectCurrentTabs ( );
__declspec(implementation_key(5462)) HRESULT Selection::SelectCurrentColor ( );
__declspec(implementation_key(5463)) HRESULT Selection::CreateTextbox ( );
__declspec(implementation_key(5464)) HRESULT Selection::WholeStory ( );
__declspec(implementation_key(5465)) HRESULT Selection::SelectRow ( );
__declspec(implementation_key(5466)) HRESULT Selection::SplitTable ( );
__declspec(implementation_key(5467)) HRESULT Selection::InsertRows ( VARIANT * NumRows );
__declspec(implementation_key(5468)) HRESULT Selection::InsertColumns ( );
__declspec(implementation_key(5469)) HRESULT Selection::InsertFormula ( VARIANT * Formula, VARIANT * NumberFormat );
__declspec(implementation_key(5470)) RevisionPtr Selection::NextRevision ( VARIANT * Wrap );
__declspec(implementation_key(5471)) RevisionPtr Selection::PreviousRevision ( VARIANT * Wrap );
__declspec(implementation_key(5472)) HRESULT Selection::PasteAsNestedTable ( );
__declspec(implementation_key(5473)) AutoTextEntryPtr Selection::CreateAutoTextEntry ( _bstr_t Name, _bstr_t StyleName );
__declspec(implementation_key(5474)) HRESULT Selection::DetectLanguage ( );
__declspec(implementation_key(5475)) HRESULT Selection::SelectCell ( );
__declspec(implementation_key(5476)) HRESULT Selection::InsertRowsBelow ( VARIANT * NumRows );
__declspec(implementation_key(5477)) HRESULT Selection::InsertColumnsRight ( );
__declspec(implementation_key(5478)) HRESULT Selection::InsertRowsAbove ( VARIANT * NumRows );
__declspec(implementation_key(5479)) HRESULT Selection::RtlRun ( );
__declspec(implementation_key(5480)) HRESULT Selection::LtrRun ( );
__declspec(implementation_key(5481)) HRESULT Selection::BoldRun ( );
__declspec(implementation_key(5482)) HRESULT Selection::ItalicRun ( );
__declspec(implementation_key(5483)) HRESULT Selection::RtlPara ( );
__declspec(implementation_key(5484)) HRESULT Selection::LtrPara ( );
__declspec(implementation_key(5485)) HRESULT Selection::InsertDateTime ( VARIANT * DateTimeFormat, VARIANT * InsertAsField, VARIANT * InsertAsFullWidth, VARIANT * DateLanguage, VARIANT * CalendarType );
__declspec(implementation_key(5486)) HRESULT Selection::Sort2000 ( VARIANT * ExcludeHeader, VARIANT * FieldNumber, VARIANT * SortFieldType, VARIANT * SortOrder, VARIANT * FieldNumber2, VARIANT * SortFieldType2, VARIANT * SortOrder2, VARIANT * FieldNumber3, VARIANT * SortFieldType3, VARIANT * SortOrder3, VARIANT * SortColumn, VARIANT * Separator, VARIANT * CaseSensitive, VARIANT * BidiSort, VARIANT * IgnoreThe, VARIANT * IgnoreKashida, VARIANT * IgnoreDiacritics, VARIANT * IgnoreHe, VARIANT * LanguageID );
__declspec(implementation_key(5487)) TablePtr Selection::ConvertToTable ( VARIANT * Separator, VARIANT * NumRows, VARIANT * NumColumns, VARIANT * InitialColumnWidth, VARIANT * Format, VARIANT * ApplyBorders, VARIANT * ApplyShading, VARIANT * ApplyFont, VARIANT * ApplyColor, VARIANT * ApplyHeadingRows, VARIANT * ApplyLastRow, VARIANT * ApplyFirstColumn, VARIANT * ApplyLastColumn, VARIANT * AutoFit, VARIANT * AutoFitBehavior, VARIANT * DefaultTableBehavior );
__declspec(implementation_key(5488)) long Selection::GetNoProofing ( );
__declspec(implementation_key(5489)) void Selection::PutNoProofing ( long prop );
__declspec(implementation_key(5490)) TablesPtr Selection::GetTopLevelTables ( );
__declspec(implementation_key(5491)) VARIANT_BOOL Selection::GetLanguageDetected ( );
__declspec(implementation_key(5492)) void Selection::PutLanguageDetected ( VARIANT_BOOL prop );
__declspec(implementation_key(5493)) float Selection::GetFitTextWidth ( );
__declspec(implementation_key(5494)) void Selection::PutFitTextWidth ( float prop );
__declspec(implementation_key(5495)) HRESULT Selection::ClearFormatting ( );
__declspec(implementation_key(5496)) HRESULT Selection::PasteAppendTable ( );
__declspec(implementation_key(5497)) HTMLDivisionsPtr Selection::GetHTMLDivisions ( );
__declspec(implementation_key(5498)) SmartTagsPtr Selection::GetSmartTags ( );
__declspec(implementation_key(5499)) ShapeRangePtr Selection::GetChildShapeRange ( );
__declspec(implementation_key(5500)) VARIANT_BOOL Selection::GetHasChildShapeRange ( );
__declspec(implementation_key(5501)) FootnoteOptionsPtr Selection::GetFootnoteOptions ( );
__declspec(implementation_key(5502)) EndnoteOptionsPtr Selection::GetEndnoteOptions ( );
__declspec(implementation_key(5503)) HRESULT Selection::ToggleCharacterCode ( );
__declspec(implementation_key(5504)) HRESULT Selection::PasteAndFormat ( enum WdRecoveryType Type );
__declspec(implementation_key(5505)) HRESULT Selection::PasteExcelTable ( VARIANT_BOOL LinkedToExcel, VARIANT_BOOL WordFormatting, VARIANT_BOOL RTF );
__declspec(implementation_key(5506)) HRESULT Selection::ShrinkDiscontiguousSelection ( );
__declspec(implementation_key(5507)) HRESULT Selection::InsertStyleSeparator ( );
__declspec(implementation_key(5508)) HRESULT Selection::Sort ( VARIANT * ExcludeHeader, VARIANT * FieldNumber, VARIANT * SortFieldType, VARIANT * SortOrder, VARIANT * FieldNumber2, VARIANT * SortFieldType2, VARIANT * SortOrder2, VARIANT * FieldNumber3, VARIANT * SortFieldType3, VARIANT * SortOrder3, VARIANT * SortColumn, VARIANT * Separator, VARIANT * CaseSensitive, VARIANT * BidiSort, VARIANT * IgnoreThe, VARIANT * IgnoreKashida, VARIANT * IgnoreDiacritics, VARIANT * IgnoreHe, VARIANT * LanguageID, VARIANT * SubFieldNumber, VARIANT * SubFieldNumber2, VARIANT * SubFieldNumber3 );
__declspec(implementation_key(5509)) XMLNodesPtr Selection::GetXMLNodes ( );
__declspec(implementation_key(5510)) XMLNodePtr Selection::GetXMLParentNode ( );
__declspec(implementation_key(5511)) EditorsPtr Selection::GetEditors ( );
__declspec(implementation_key(5512)) _bstr_t Selection::GetXML ( VARIANT_BOOL DataOnly );
__declspec(implementation_key(5513)) _variant_t Selection::GetEnhMetaFileBits ( );
__declspec(implementation_key(5514)) RangePtr Selection::GoToEditableRange ( VARIANT * EditorID );
__declspec(implementation_key(5515)) HRESULT Selection::InsertXML ( _bstr_t XML, VARIANT * Transform );
__declspec(implementation_key(5516)) HRESULT Selection::InsertCaption ( VARIANT * Label, VARIANT * Title, VARIANT * TitleAutoText, VARIANT * Position, VARIANT * ExcludeLabel );
__declspec(implementation_key(5517)) HRESULT Selection::InsertCrossReference ( VARIANT * ReferenceType, enum WdReferenceKind ReferenceKind, VARIANT * ReferenceItem, VARIANT * InsertAsHyperlink, VARIANT * IncludePosition, VARIANT * SeparateNumbers, VARIANT * SeparatorString );
__declspec(implementation_key(5518)) OMathsPtr Selection::GetOMaths ( );
__declspec(implementation_key(5519)) _bstr_t Selection::GetWordOpenXML ( );
__declspec(implementation_key(5520)) HRESULT Selection::ClearParagraphStyle ( );
__declspec(implementation_key(5521)) HRESULT Selection::ClearCharacterAllFormatting ( );
__declspec(implementation_key(5522)) HRESULT Selection::ClearCharacterStyle ( );
__declspec(implementation_key(5523)) HRESULT Selection::ClearCharacterDirectFormatting ( );
__declspec(implementation_key(5524)) ContentControlsPtr Selection::GetContentControls ( );
__declspec(implementation_key(5525)) ContentControlPtr Selection::GetParentContentControl ( );
__declspec(implementation_key(5526)) HRESULT Selection::ExportAsFixedFormat ( _bstr_t OutputFileName, enum WdExportFormat ExportFormat, VARIANT_BOOL OpenAfterExport, enum WdExportOptimizeFor OptimizeFor, VARIANT_BOOL ExportCurrentPage, enum WdExportItem Item, VARIANT_BOOL IncludeDocProps, VARIANT_BOOL KeepIRM, enum WdExportCreateBookmarks CreateBookmarks, VARIANT_BOOL DocStructureTags, VARIANT_BOOL BitmapMissingFonts, VARIANT_BOOL UseISO19005_1, VARIANT * FixedFormatExtClassPtr );
__declspec(implementation_key(5527)) HRESULT Selection::ReadingModeGrowFont ( );
__declspec(implementation_key(5528)) HRESULT Selection::ReadingModeShrinkFont ( );
__declspec(implementation_key(5529)) HRESULT Selection::ClearParagraphAllFormatting ( );
__declspec(implementation_key(5530)) HRESULT Selection::ClearParagraphDirectFormatting ( );
__declspec(implementation_key(5531)) HRESULT Selection::InsertNewPage ( );
__declspec(implementation_key(5532)) HRESULT IApplicationEvents2::Startup ( );
__declspec(implementation_key(5533)) HRESULT IApplicationEvents2::Quit ( );
__declspec(implementation_key(5534)) HRESULT IApplicationEvents2::DocumentChange ( );
__declspec(implementation_key(5535)) HRESULT IApplicationEvents2::DocumentOpen ( struct _Document * Doc );
__declspec(implementation_key(5536)) HRESULT IApplicationEvents2::DocumentBeforeClose ( struct _Document * Doc, VARIANT_BOOL * Cancel );
__declspec(implementation_key(5537)) HRESULT IApplicationEvents2::DocumentBeforePrint ( struct _Document * Doc, VARIANT_BOOL * Cancel );
__declspec(implementation_key(5538)) HRESULT IApplicationEvents2::DocumentBeforeSave ( struct _Document * Doc, VARIANT_BOOL * SaveAsUI, VARIANT_BOOL * Cancel );
__declspec(implementation_key(5539)) HRESULT IApplicationEvents2::NewDocument ( struct _Document * Doc );
__declspec(implementation_key(5540)) HRESULT IApplicationEvents2::WindowActivate ( struct _Document * Doc, struct Window * Wn );
__declspec(implementation_key(5541)) HRESULT IApplicationEvents2::WindowDeactivate ( struct _Document * Doc, struct Window * Wn );
__declspec(implementation_key(5542)) HRESULT IApplicationEvents2::WindowSelectionChange ( struct Selection * Sel );
__declspec(implementation_key(5543)) HRESULT IApplicationEvents2::WindowBeforeRightClick ( struct Selection * Sel, VARIANT_BOOL * Cancel );
__declspec(implementation_key(5544)) HRESULT IApplicationEvents2::WindowBeforeDoubleClick ( struct Selection * Sel, VARIANT_BOOL * Cancel );
__declspec(implementation_key(5545)) HRESULT IApplicationEvents3::Startup ( );
__declspec(implementation_key(5546)) HRESULT IApplicationEvents3::Quit ( );
__declspec(implementation_key(5547)) HRESULT IApplicationEvents3::DocumentChange ( );
__declspec(implementation_key(5548)) HRESULT IApplicationEvents3::DocumentOpen ( struct _Document * Doc );
__declspec(implementation_key(5549)) HRESULT IApplicationEvents3::DocumentBeforeClose ( struct _Document * Doc, VARIANT_BOOL * Cancel );
__declspec(implementation_key(5550)) HRESULT IApplicationEvents3::DocumentBeforePrint ( struct _Document * Doc, VARIANT_BOOL * Cancel );
__declspec(implementation_key(5551)) HRESULT IApplicationEvents3::DocumentBeforeSave ( struct _Document * Doc, VARIANT_BOOL * SaveAsUI, VARIANT_BOOL * Cancel );
__declspec(implementation_key(5552)) HRESULT IApplicationEvents3::NewDocument ( struct _Document * Doc );
__declspec(implementation_key(5553)) HRESULT IApplicationEvents3::WindowActivate ( struct _Document * Doc, struct Window * Wn );
__declspec(implementation_key(5554)) HRESULT IApplicationEvents3::WindowDeactivate ( struct _Document * Doc, struct Window * Wn );
__declspec(implementation_key(5555)) HRESULT IApplicationEvents3::WindowSelectionChange ( struct Selection * Sel );
__declspec(implementation_key(5556)) HRESULT IApplicationEvents3::WindowBeforeRightClick ( struct Selection * Sel, VARIANT_BOOL * Cancel );
__declspec(implementation_key(5557)) HRESULT IApplicationEvents3::WindowBeforeDoubleClick ( struct Selection * Sel, VARIANT_BOOL * Cancel );
__declspec(implementation_key(5558)) HRESULT IApplicationEvents3::EPostagePropertyDialog ( struct _Document * Doc );
__declspec(implementation_key(5559)) HRESULT IApplicationEvents3::EPostageInsert ( struct _Document * Doc );
__declspec(implementation_key(5560)) HRESULT IApplicationEvents3::MailMergeAfterMerge ( struct _Document * Doc, struct _Document * DocResult );
__declspec(implementation_key(5561)) HRESULT IApplicationEvents3::MailMergeAfterRecordMerge ( struct _Document * Doc );
__declspec(implementation_key(5562)) HRESULT IApplicationEvents3::MailMergeBeforeMerge ( struct _Document * Doc, long StartRecord, long EndRecord, VARIANT_BOOL * Cancel );
__declspec(implementation_key(5563)) HRESULT IApplicationEvents3::MailMergeBeforeRecordMerge ( struct _Document * Doc, VARIANT_BOOL * Cancel );
__declspec(implementation_key(5564)) HRESULT IApplicationEvents3::MailMergeDataSourceLoad ( struct _Document * Doc );
__declspec(implementation_key(5565)) HRESULT IApplicationEvents3::MailMergeDataSourceValidate ( struct _Document * Doc, VARIANT_BOOL * Handled );
__declspec(implementation_key(5566)) HRESULT IApplicationEvents3::MailMergeWizardSendToCustom ( struct _Document * Doc );
__declspec(implementation_key(5567)) HRESULT IApplicationEvents3::MailMergeWizardStateChange ( struct _Document * Doc, int * FromState, int * ToState, VARIANT_BOOL * Handled );
__declspec(implementation_key(5568)) HRESULT IApplicationEvents3::WindowSize ( struct _Document * Doc, struct Window * Wn );
__declspec(implementation_key(5569)) _ApplicationPtr HeadersFooters::GetApplication ( );
__declspec(implementation_key(5570)) long HeadersFooters::GetCreator ( );
__declspec(implementation_key(5571)) IDispatchPtr HeadersFooters::GetParent ( );
__declspec(implementation_key(5572)) IUnknownPtr HeadersFooters::Get_NewEnum ( );
__declspec(implementation_key(5573)) long HeadersFooters::GetCount ( );
__declspec(implementation_key(5574)) HeaderFooterPtr HeadersFooters::Item ( enum WdHeaderFooterIndex Index );
__declspec(implementation_key(5575)) _ApplicationPtr HeaderFooter::GetApplication ( );
__declspec(implementation_key(5576)) long HeaderFooter::GetCreator ( );
__declspec(implementation_key(5577)) IDispatchPtr HeaderFooter::GetParent ( );
__declspec(implementation_key(5578)) RangePtr HeaderFooter::GetRange ( );
__declspec(implementation_key(5579)) enum WdHeaderFooterIndex HeaderFooter::GetIndex ( );
__declspec(implementation_key(5580)) VARIANT_BOOL HeaderFooter::GetIsHeader ( );
__declspec(implementation_key(5581)) VARIANT_BOOL HeaderFooter::GetExists ( );
__declspec(implementation_key(5582)) void HeaderFooter::PutExists ( VARIANT_BOOL prop );
__declspec(implementation_key(5583)) PageNumbersPtr HeaderFooter::GetPageNumbers ( );
__declspec(implementation_key(5584)) VARIANT_BOOL HeaderFooter::GetLinkToPrevious ( );
__declspec(implementation_key(5585)) void HeaderFooter::PutLinkToPrevious ( VARIANT_BOOL prop );
__declspec(implementation_key(5586)) ShapesPtr HeaderFooter::GetShapes ( );
__declspec(implementation_key(5587)) long ListLevel::GetIndex ( );
__declspec(implementation_key(5588)) _bstr_t ListLevel::GetNumberFormat ( );
__declspec(implementation_key(5589)) void ListLevel::PutNumberFormat ( _bstr_t prop );
__declspec(implementation_key(5590)) enum WdTrailingCharacter ListLevel::GetTrailingCharacter ( );
__declspec(implementation_key(5591)) void ListLevel::PutTrailingCharacter ( enum WdTrailingCharacter prop );
__declspec(implementation_key(5592)) enum WdListNumberStyle ListLevel::GetNumberStyle ( );
__declspec(implementation_key(5593)) void ListLevel::PutNumberStyle ( enum WdListNumberStyle prop );
__declspec(implementation_key(5594)) float ListLevel::GetNumberPosition ( );
__declspec(implementation_key(5595)) void ListLevel::PutNumberPosition ( float prop );
__declspec(implementation_key(5596)) enum WdListLevelAlignment ListLevel::GetAlignment ( );
__declspec(implementation_key(5597)) void ListLevel::PutAlignment ( enum WdListLevelAlignment prop );
__declspec(implementation_key(5598)) float ListLevel::GetTextPosition ( );
__declspec(implementation_key(5599)) void ListLevel::PutTextPosition ( float prop );
__declspec(implementation_key(5600)) float ListLevel::GetTabPosition ( );
__declspec(implementation_key(5601)) void ListLevel::PutTabPosition ( float prop );
__declspec(implementation_key(5602)) VARIANT_BOOL ListLevel::GetResetOnHigherOld ( );
__declspec(implementation_key(5603)) void ListLevel::PutResetOnHigherOld ( VARIANT_BOOL prop );
__declspec(implementation_key(5604)) long ListLevel::GetStartAt ( );
__declspec(implementation_key(5605)) void ListLevel::PutStartAt ( long prop );
__declspec(implementation_key(5606)) _bstr_t ListLevel::GetLinkedStyle ( );
__declspec(implementation_key(5607)) void ListLevel::PutLinkedStyle ( _bstr_t prop );
__declspec(implementation_key(5608)) _FontPtr ListLevel::GetFont ( );
__declspec(implementation_key(5609)) void ListLevel::PutFont ( struct _Font * prop );
__declspec(implementation_key(5610)) _ApplicationPtr ListLevel::GetApplication ( );
__declspec(implementation_key(5611)) long ListLevel::GetCreator ( );
__declspec(implementation_key(5612)) IDispatchPtr ListLevel::GetParent ( );
__declspec(implementation_key(5613)) long ListLevel::GetResetOnHigher ( );
__declspec(implementation_key(5614)) void ListLevel::PutResetOnHigher ( long prop );
__declspec(implementation_key(5615)) InlineShapePtr ListLevel::GetPictureBullet ( );
__declspec(implementation_key(5616)) InlineShapePtr ListLevel::ApplyPictureBullet ( _bstr_t FileName );
__declspec(implementation_key(5617)) IUnknownPtr ListLevels::Get_NewEnum ( );
__declspec(implementation_key(5618)) long ListLevels::GetCount ( );
__declspec(implementation_key(5619)) _ApplicationPtr ListLevels::GetApplication ( );
__declspec(implementation_key(5620)) long ListLevels::GetCreator ( );
__declspec(implementation_key(5621)) IDispatchPtr ListLevels::GetParent ( );
__declspec(implementation_key(5622)) ListLevelPtr ListLevels::Item ( long Index );
__declspec(implementation_key(5623)) _ApplicationPtr ListTemplate::GetApplication ( );
__declspec(implementation_key(5624)) long ListTemplate::GetCreator ( );
__declspec(implementation_key(5625)) IDispatchPtr ListTemplate::GetParent ( );
__declspec(implementation_key(5626)) VARIANT_BOOL ListTemplate::GetOutlineNumbered ( );
__declspec(implementation_key(5627)) void ListTemplate::PutOutlineNumbered ( VARIANT_BOOL prop );
__declspec(implementation_key(5628)) _bstr_t ListTemplate::GetName ( );
__declspec(implementation_key(5629)) void ListTemplate::PutName ( _bstr_t prop );
__declspec(implementation_key(5630)) ListLevelsPtr ListTemplate::GetListLevels ( );
__declspec(implementation_key(5631)) ListTemplatePtr ListTemplate::Convert ( VARIANT * Level );
__declspec(implementation_key(5632)) IUnknownPtr ListTemplates::Get_NewEnum ( );
__declspec(implementation_key(5633)) long ListTemplates::GetCount ( );
__declspec(implementation_key(5634)) _ApplicationPtr ListTemplates::GetApplication ( );
__declspec(implementation_key(5635)) long ListTemplates::GetCreator ( );
__declspec(implementation_key(5636)) IDispatchPtr ListTemplates::GetParent ( );
__declspec(implementation_key(5637)) ListTemplatePtr ListTemplates::Item ( VARIANT * Index );
__declspec(implementation_key(5638)) ListTemplatePtr ListTemplates::Add ( VARIANT * OutlineNumbered, VARIANT * Name );
__declspec(implementation_key(5639)) RangePtr List::GetRange ( );
__declspec(implementation_key(5640)) ListParagraphsPtr List::GetListParagraphs ( );
__declspec(implementation_key(5641)) VARIANT_BOOL List::GetSingleListTemplate ( );
__declspec(implementation_key(5642)) _ApplicationPtr List::GetApplication ( );
__declspec(implementation_key(5643)) long List::GetCreator ( );
__declspec(implementation_key(5644)) IDispatchPtr List::GetParent ( );
__declspec(implementation_key(5645)) HRESULT List::ConvertNumbersToText ( VARIANT * NumberType );
__declspec(implementation_key(5646)) HRESULT List::RemoveNumbers ( VARIANT * NumberType );
__declspec(implementation_key(5647)) long List::CountNumberedItems ( VARIANT * NumberType, VARIANT * Level );
__declspec(implementation_key(5648)) HRESULT List::ApplyListTemplateOld ( struct ListTemplate * ListTemplate, VARIANT * ContinuePreviousList );
__declspec(implementation_key(5649)) enum WdContinue List::CanContinuePreviousList ( struct ListTemplate * ListTemplate );
__declspec(implementation_key(5650)) HRESULT List::ApplyListTemplate ( struct ListTemplate * ListTemplate, VARIANT * ContinuePreviousList, VARIANT * DefaultListBehavior );
__declspec(implementation_key(5651)) _bstr_t List::GetStyleName ( );
__declspec(implementation_key(5652)) HRESULT List::ApplyListTemplateWithLevel ( struct ListTemplate * ListTemplate, VARIANT * ContinuePreviousList, VARIANT * DefaultListBehavior, VARIANT * ApplyLevel );
__declspec(implementation_key(5653)) IUnknownPtr Lists::Get_NewEnum ( );
__declspec(implementation_key(5654)) long Lists::GetCount ( );
__declspec(implementation_key(5655)) _ApplicationPtr Lists::GetApplication ( );
__declspec(implementation_key(5656)) long Lists::GetCreator ( );
__declspec(implementation_key(5657)) IDispatchPtr Lists::GetParent ( );
__declspec(implementation_key(5658)) ListPtr Lists::Item ( long Index );
__declspec(implementation_key(5659)) ListTemplatesPtr ListGallery::GetListTemplates ( );
__declspec(implementation_key(5660)) _ApplicationPtr ListGallery::GetApplication ( );
__declspec(implementation_key(5661)) long ListGallery::GetCreator ( );
__declspec(implementation_key(5662)) IDispatchPtr ListGallery::GetParent ( );
__declspec(implementation_key(5663)) VARIANT_BOOL ListGallery::GetModified ( long Index );
__declspec(implementation_key(5664)) HRESULT ListGallery::Reset ( long Index );
__declspec(implementation_key(5665)) IUnknownPtr ListGalleries::Get_NewEnum ( );
__declspec(implementation_key(5666)) long ListGalleries::GetCount ( );
__declspec(implementation_key(5667)) _ApplicationPtr ListGalleries::GetApplication ( );
__declspec(implementation_key(5668)) long ListGalleries::GetCreator ( );
__declspec(implementation_key(5669)) IDispatchPtr ListGalleries::GetParent ( );
__declspec(implementation_key(5670)) ListGalleryPtr ListGalleries::Item ( enum WdListGalleryType Index );
__declspec(implementation_key(5671)) _ApplicationPtr Hyperlinks::GetApplication ( );
__declspec(implementation_key(5672)) long Hyperlinks::GetCreator ( );
__declspec(implementation_key(5673)) IDispatchPtr Hyperlinks::GetParent ( );
__declspec(implementation_key(5674)) long Hyperlinks::GetCount ( );
__declspec(implementation_key(5675)) IUnknownPtr Hyperlinks::Get_NewEnum ( );
__declspec(implementation_key(5676)) HyperlinkPtr Hyperlinks::Item ( VARIANT * Index );
__declspec(implementation_key(5677)) HyperlinkPtr Hyperlinks::_Add ( IDispatch * Anchor, VARIANT * Address, VARIANT * SubAddress );
__declspec(implementation_key(5678)) HyperlinkPtr Hyperlinks::Add ( IDispatch * Anchor, VARIANT * Address, VARIANT * SubAddress, VARIANT * ScreenTip, VARIANT * TextToDisplay, VARIANT * Target );
__declspec(implementation_key(5679)) _ApplicationPtr Hyperlink::GetApplication ( );
__declspec(implementation_key(5680)) long Hyperlink::GetCreator ( );
__declspec(implementation_key(5681)) IDispatchPtr Hyperlink::GetParent ( );
__declspec(implementation_key(5682)) _bstr_t Hyperlink::GetName ( );
__declspec(implementation_key(5683)) _bstr_t Hyperlink::GetAddressOld ( );
__declspec(implementation_key(5684)) enum Office::MsoHyperlinkType Hyperlink::GetType ( );
__declspec(implementation_key(5685)) RangePtr Hyperlink::GetRange ( );
__declspec(implementation_key(5686)) ShapePtr Hyperlink::GetShape ( );
__declspec(implementation_key(5687)) _bstr_t Hyperlink::GetSubAddressOld ( );
__declspec(implementation_key(5688)) VARIANT_BOOL Hyperlink::GetExtraInfoRequired ( );
__declspec(implementation_key(5689)) HRESULT Hyperlink::Delete ( );
__declspec(implementation_key(5690)) HRESULT Hyperlink::Follow ( VARIANT * NewWindow, VARIANT * AddHistory, VARIANT * ExtraInfo, VARIANT * Method, VARIANT * HeaderInfo );
__declspec(implementation_key(5691)) HRESULT Hyperlink::AddToFavorites ( );
__declspec(implementation_key(5692)) HRESULT Hyperlink::CreateNewDocument ( _bstr_t FileName, VARIANT_BOOL EditNow, VARIANT_BOOL Overwrite );
__declspec(implementation_key(5693)) _bstr_t Hyperlink::GetAddress ( );
__declspec(implementation_key(5694)) void Hyperlink::PutAddress ( _bstr_t prop );
__declspec(implementation_key(5695)) _bstr_t Hyperlink::GetSubAddress ( );
__declspec(implementation_key(5696)) void Hyperlink::PutSubAddress ( _bstr_t prop );
__declspec(implementation_key(5697)) _bstr_t Hyperlink::GetEmailSubject ( );
__declspec(implementation_key(5698)) void Hyperlink::PutEmailSubject ( _bstr_t prop );
__declspec(implementation_key(5699)) _bstr_t Hyperlink::GetScreenTip ( );
__declspec(implementation_key(5700)) void Hyperlink::PutScreenTip ( _bstr_t prop );
__declspec(implementation_key(5701)) _bstr_t Hyperlink::GetTextToDisplay ( );
__declspec(implementation_key(5702)) void Hyperlink::PutTextToDisplay ( _bstr_t prop );
__declspec(implementation_key(5703)) _bstr_t Hyperlink::GetTarget ( );
__declspec(implementation_key(5704)) void Hyperlink::PutTarget ( _bstr_t prop );
__declspec(implementation_key(5705)) _ApplicationPtr Shapes::GetApplication ( );
__declspec(implementation_key(5706)) long Shapes::GetCreator ( );
__declspec(implementation_key(5707)) IDispatchPtr Shapes::GetParent ( );
__declspec(implementation_key(5708)) long Shapes::GetCount ( );
__declspec(implementation_key(5709)) IUnknownPtr Shapes::Get_NewEnum ( );
__declspec(implementation_key(5710)) ShapePtr Shapes::Item ( VARIANT * Index );
__declspec(implementation_key(5711)) ShapePtr Shapes::AddCallout ( enum Office::MsoCalloutType Type, float Left, float Top, float Width, float Height, VARIANT * Anchor );
__declspec(implementation_key(5712)) ShapePtr Shapes::AddConnector ( enum Office::MsoConnectorType Type, float BeginX, float BeginY, float EndX, float EndY );
__declspec(implementation_key(5713)) ShapePtr Shapes::AddCurve ( VARIANT * SafeArrayOfPoints, VARIANT * Anchor );
__declspec(implementation_key(5714)) ShapePtr Shapes::AddLabel ( enum Office::MsoTextOrientation Orientation, float Left, float Top, float Width, float Height, VARIANT * Anchor );
__declspec(implementation_key(5715)) ShapePtr Shapes::AddLine ( float BeginX, float BeginY, float EndX, float EndY, VARIANT * Anchor );
__declspec(implementation_key(5716)) ShapePtr Shapes::AddPicture ( _bstr_t FileName, VARIANT * LinkToFile, VARIANT * SaveWithDocument, VARIANT * Left, VARIANT * Top, VARIANT * Width, VARIANT * Height, VARIANT * Anchor );
__declspec(implementation_key(5717)) ShapePtr Shapes::AddPolyline ( VARIANT * SafeArrayOfPoints, VARIANT * Anchor );
__declspec(implementation_key(5718)) ShapePtr Shapes::AddShape ( long Type, float Left, float Top, float Width, float Height, VARIANT * Anchor );
__declspec(implementation_key(5719)) ShapePtr Shapes::AddTextEffect ( enum Office::MsoPresetTextEffect PresetTextEffect, _bstr_t Text, _bstr_t FontName, float FontSize, enum Office::MsoTriState FontBold, enum Office::MsoTriState FontItalic, float Left, float Top, VARIANT * Anchor );
__declspec(implementation_key(5720)) ShapePtr Shapes::AddTextbox ( enum Office::MsoTextOrientation Orientation, float Left, float Top, float Width, float Height, VARIANT * Anchor );
__declspec(implementation_key(5721)) FreeformBuilderPtr Shapes::BuildFreeform ( enum Office::MsoEditingType EditingType, float X1, float Y1 );
__declspec(implementation_key(5722)) ShapeRangePtr Shapes::Range ( VARIANT * Index );
__declspec(implementation_key(5723)) HRESULT Shapes::SelectAll ( );
__declspec(implementation_key(5724)) ShapePtr Shapes::AddOLEObject ( VARIANT * ClassType, VARIANT * FileName, VARIANT * LinkToFile, VARIANT * DisplayAsIcon, VARIANT * IconFileName, VARIANT * IconIndex, VARIANT * IconLabel, VARIANT * Left, VARIANT * Top, VARIANT * Width, VARIANT * Height, VARIANT * Anchor );
__declspec(implementation_key(5725)) ShapePtr Shapes::AddOLEControl ( VARIANT * ClassType, VARIANT * Left, VARIANT * Top, VARIANT * Width, VARIANT * Height, VARIANT * Anchor );
__declspec(implementation_key(5726)) ShapePtr Shapes::AddDiagram ( enum Office::MsoDiagramType Type, float Left, float Top, float Width, float Height, VARIANT * Anchor );
__declspec(implementation_key(5727)) ShapePtr Shapes::AddCanvas ( float Left, float Top, float Width, float Height, VARIANT * Anchor );
__declspec(implementation_key(5728)) ShapePtr Shapes::AddChart ( enum Office::XlChartType Type, VARIANT * Left, VARIANT * Top, VARIANT * Width, VARIANT * Height, VARIANT * Anchor );
__declspec(implementation_key(5729)) _ApplicationPtr ShapeRange::GetApplication ( );
__declspec(implementation_key(5730)) long ShapeRange::GetCreator ( );
__declspec(implementation_key(5731)) IDispatchPtr ShapeRange::GetParent ( );
__declspec(implementation_key(5732)) long ShapeRange::GetCount ( );
__declspec(implementation_key(5733)) IUnknownPtr ShapeRange::Get_NewEnum ( );
__declspec(implementation_key(5734)) AdjustmentsPtr ShapeRange::GetAdjustments ( );
__declspec(implementation_key(5735)) enum Office::MsoAutoShapeType ShapeRange::GetAutoShapeType ( );
__declspec(implementation_key(5736)) void ShapeRange::PutAutoShapeType ( enum Office::MsoAutoShapeType prop );
__declspec(implementation_key(5737)) CalloutFormatPtr ShapeRange::GetCallout ( );
__declspec(implementation_key(5738)) long ShapeRange::GetConnectionSiteCount ( );
__declspec(implementation_key(5739)) enum Office::MsoTriState ShapeRange::GetConnector ( );
__declspec(implementation_key(5740)) ConnectorFormatPtr ShapeRange::GetConnectorFormat ( );
__declspec(implementation_key(5741)) FillFormatPtr ShapeRange::GetFill ( );
__declspec(implementation_key(5742)) GroupShapesPtr ShapeRange::GetGroupItems ( );
__declspec(implementation_key(5743)) float ShapeRange::GetHeight ( );
__declspec(implementation_key(5744)) void ShapeRange::PutHeight ( float prop );
__declspec(implementation_key(5745)) enum Office::MsoTriState ShapeRange::GetHorizontalFlip ( );
__declspec(implementation_key(5746)) float ShapeRange::GetLeft ( );
__declspec(implementation_key(5747)) void ShapeRange::PutLeft ( float prop );
__declspec(implementation_key(5748)) LineFormatPtr ShapeRange::GetLine ( );
__declspec(implementation_key(5749)) enum Office::MsoTriState ShapeRange::GetLockAspectRatio ( );
__declspec(implementation_key(5750)) void ShapeRange::PutLockAspectRatio ( enum Office::MsoTriState prop );
__declspec(implementation_key(5751)) _bstr_t ShapeRange::GetName ( );
__declspec(implementation_key(5752)) void ShapeRange::PutName ( _bstr_t prop );
__declspec(implementation_key(5753)) ShapeNodesPtr ShapeRange::GetNodes ( );
__declspec(implementation_key(5754)) float ShapeRange::GetRotation ( );
__declspec(implementation_key(5755)) void ShapeRange::PutRotation ( float prop );
__declspec(implementation_key(5756)) PictureFormatPtr ShapeRange::GetPictureFormat ( );
__declspec(implementation_key(5757)) ShadowFormatPtr ShapeRange::GetShadow ( );
__declspec(implementation_key(5758)) TextEffectFormatPtr ShapeRange::GetTextEffect ( );
__declspec(implementation_key(5759)) TextFramePtr ShapeRange::GetTextFrame ( );
__declspec(implementation_key(5760)) ThreeDFormatPtr ShapeRange::GetThreeD ( );
__declspec(implementation_key(5761)) float ShapeRange::GetTop ( );
__declspec(implementation_key(5762)) void ShapeRange::PutTop ( float prop );
__declspec(implementation_key(5763)) enum Office::MsoShapeType ShapeRange::GetType ( );
__declspec(implementation_key(5764)) enum Office::MsoTriState ShapeRange::GetVerticalFlip ( );
__declspec(implementation_key(5765)) _variant_t ShapeRange::GetVertices ( );
__declspec(implementation_key(5766)) enum Office::MsoTriState ShapeRange::GetVisible ( );
__declspec(implementation_key(5767)) void ShapeRange::PutVisible ( enum Office::MsoTriState prop );
__declspec(implementation_key(5768)) float ShapeRange::GetWidth ( );
__declspec(implementation_key(5769)) void ShapeRange::PutWidth ( float prop );
__declspec(implementation_key(5770)) long ShapeRange::GetZOrderPosition ( );
__declspec(implementation_key(5771)) HyperlinkPtr ShapeRange::GetHyperlink ( );
__declspec(implementation_key(5772)) enum WdRelativeHorizontalPosition ShapeRange::GetRelativeHorizontalPosition ( );
__declspec(implementation_key(5773)) void ShapeRange::PutRelativeHorizontalPosition ( enum WdRelativeHorizontalPosition prop );
__declspec(implementation_key(5774)) enum WdRelativeVerticalPosition ShapeRange::GetRelativeVerticalPosition ( );
__declspec(implementation_key(5775)) void ShapeRange::PutRelativeVerticalPosition ( enum WdRelativeVerticalPosition prop );
__declspec(implementation_key(5776)) long ShapeRange::GetLockAnchor ( );
__declspec(implementation_key(5777)) void ShapeRange::PutLockAnchor ( long prop );
__declspec(implementation_key(5778)) WrapFormatPtr ShapeRange::GetWrapFormat ( );
__declspec(implementation_key(5779)) RangePtr ShapeRange::GetAnchor ( );
__declspec(implementation_key(5780)) ShapePtr ShapeRange::Item ( VARIANT * Index );
__declspec(implementation_key(5781)) HRESULT ShapeRange::Align ( enum Office::MsoAlignCmd Align, long RelativeTo );
__declspec(implementation_key(5782)) HRESULT ShapeRange::Apply ( );
__declspec(implementation_key(5783)) HRESULT ShapeRange::Delete ( );
__declspec(implementation_key(5784)) HRESULT ShapeRange::Distribute ( enum Office::MsoDistributeCmd Distribute, long RelativeTo );
__declspec(implementation_key(5785)) ShapeRangePtr ShapeRange::Duplicate ( );
__declspec(implementation_key(5786)) HRESULT ShapeRange::Flip ( enum Office::MsoFlipCmd FlipCmd );
__declspec(implementation_key(5787)) HRESULT ShapeRange::IncrementLeft ( float Increment );
__declspec(implementation_key(5788)) HRESULT ShapeRange::IncrementRotation ( float Increment );
__declspec(implementation_key(5789)) HRESULT ShapeRange::IncrementTop ( float Increment );
__declspec(implementation_key(5790)) ShapePtr ShapeRange::Group ( );
__declspec(implementation_key(5791)) HRESULT ShapeRange::PickUp ( );
__declspec(implementation_key(5792)) ShapePtr ShapeRange::Regroup ( );
__declspec(implementation_key(5793)) HRESULT ShapeRange::RerouteConnections ( );
__declspec(implementation_key(5794)) HRESULT ShapeRange::ScaleHeight ( float Factor, enum Office::MsoTriState RelativeToOriginalSize, enum Office::MsoScaleFrom Scale );
__declspec(implementation_key(5795)) HRESULT ShapeRange::ScaleWidth ( float Factor, enum Office::MsoTriState RelativeToOriginalSize, enum Office::MsoScaleFrom Scale );
__declspec(implementation_key(5796)) HRESULT ShapeRange::Select ( VARIANT * Replace );
__declspec(implementation_key(5797)) HRESULT ShapeRange::SetShapesDefaultProperties ( );
__declspec(implementation_key(5798)) ShapeRangePtr ShapeRange::Ungroup ( );
__declspec(implementation_key(5799)) HRESULT ShapeRange::ZOrder ( enum Office::MsoZOrderCmd ZOrderCmd );
__declspec(implementation_key(5800)) FramePtr ShapeRange::ConvertToFrame ( );
__declspec(implementation_key(5801)) InlineShapePtr ShapeRange::ConvertToInlineShape ( );
__declspec(implementation_key(5802)) HRESULT ShapeRange::Activate ( );
__declspec(implementation_key(5803)) _bstr_t ShapeRange::GetAlternativeText ( );
__declspec(implementation_key(5804)) void ShapeRange::PutAlternativeText ( _bstr_t prop );
__declspec(implementation_key(5805)) enum Office::MsoTriState ShapeRange::GetHasDiagram ( );
__declspec(implementation_key(5806)) Office::IMsoDiagramPtr ShapeRange::GetDiagram ( );
__declspec(implementation_key(5807)) enum Office::MsoTriState ShapeRange::GetHasDiagramNode ( );
__declspec(implementation_key(5808)) DiagramNodePtr ShapeRange::GetDiagramNode ( );
__declspec(implementation_key(5809)) enum Office::MsoTriState ShapeRange::GetChild ( );
__declspec(implementation_key(5810)) ShapePtr ShapeRange::GetParentGroup ( );
__declspec(implementation_key(5811)) CanvasShapesPtr ShapeRange::GetCanvasItems ( );
__declspec(implementation_key(5812)) long ShapeRange::GetID ( );
__declspec(implementation_key(5813)) HRESULT ShapeRange::CanvasCropLeft ( float Increment );
__declspec(implementation_key(5814)) HRESULT ShapeRange::CanvasCropTop ( float Increment );
__declspec(implementation_key(5815)) HRESULT ShapeRange::CanvasCropRight ( float Increment );
__declspec(implementation_key(5816)) HRESULT ShapeRange::CanvasCropBottom ( float Increment );
__declspec(implementation_key(5817)) void ShapeRange::PutRTF ( _bstr_t _arg1 );
__declspec(implementation_key(5818)) long ShapeRange::GetLayoutInCell ( );
__declspec(implementation_key(5819)) void ShapeRange::PutLayoutInCell ( long prop );
__declspec(implementation_key(5820)) float ShapeRange::GetLeftRelative ( );
__declspec(implementation_key(5821)) void ShapeRange::PutLeftRelative ( float prop );
__declspec(implementation_key(5822)) float ShapeRange::GetTopRelative ( );
__declspec(implementation_key(5823)) void ShapeRange::PutTopRelative ( float prop );
__declspec(implementation_key(5824)) float ShapeRange::GetWidthRelative ( );
__declspec(implementation_key(5825)) void ShapeRange::PutWidthRelative ( float prop );
__declspec(implementation_key(5826)) float ShapeRange::GetHeightRelative ( );
__declspec(implementation_key(5827)) void ShapeRange::PutHeightRelative ( float prop );
__declspec(implementation_key(5828)) enum WdRelativeHorizontalSize ShapeRange::GetRelativeHorizontalSize ( );
__declspec(implementation_key(5829)) void ShapeRange::PutRelativeHorizontalSize ( enum WdRelativeHorizontalSize prop );
__declspec(implementation_key(5830)) enum WdRelativeVerticalSize ShapeRange::GetRelativeVerticalSize ( );
__declspec(implementation_key(5831)) void ShapeRange::PutRelativeVerticalSize ( enum WdRelativeVerticalSize prop );
__declspec(implementation_key(5832)) SoftEdgeFormatPtr ShapeRange::GetSoftEdge ( );
__declspec(implementation_key(5833)) GlowFormatPtr ShapeRange::GetGlow ( );
__declspec(implementation_key(5834)) ReflectionFormatPtr ShapeRange::GetReflection ( );
__declspec(implementation_key(5835)) Office::TextFrame2Ptr ShapeRange::GetTextFrame2 ( );
__declspec(implementation_key(5836)) _ApplicationPtr GroupShapes::GetApplication ( );
__declspec(implementation_key(5837)) long GroupShapes::GetCreator ( );
__declspec(implementation_key(5838)) IDispatchPtr GroupShapes::GetParent ( );
__declspec(implementation_key(5839)) long GroupShapes::GetCount ( );
__declspec(implementation_key(5840)) IUnknownPtr GroupShapes::Get_NewEnum ( );
__declspec(implementation_key(5841)) ShapePtr GroupShapes::Item ( VARIANT * Index );
__declspec(implementation_key(5842)) ShapeRangePtr GroupShapes::Range ( VARIANT * Index );
__declspec(implementation_key(5843)) _ApplicationPtr Shape::GetApplication ( );
__declspec(implementation_key(5844)) long Shape::GetCreator ( );
__declspec(implementation_key(5845)) IDispatchPtr Shape::GetParent ( );
__declspec(implementation_key(5846)) AdjustmentsPtr Shape::GetAdjustments ( );
__declspec(implementation_key(5847)) enum Office::MsoAutoShapeType Shape::GetAutoShapeType ( );
__declspec(implementation_key(5848)) void Shape::PutAutoShapeType ( enum Office::MsoAutoShapeType prop );
__declspec(implementation_key(5849)) CalloutFormatPtr Shape::GetCallout ( );
__declspec(implementation_key(5850)) long Shape::GetConnectionSiteCount ( );
__declspec(implementation_key(5851)) enum Office::MsoTriState Shape::GetConnector ( );
__declspec(implementation_key(5852)) ConnectorFormatPtr Shape::GetConnectorFormat ( );
__declspec(implementation_key(5853)) FillFormatPtr Shape::GetFill ( );
__declspec(implementation_key(5854)) GroupShapesPtr Shape::GetGroupItems ( );
__declspec(implementation_key(5855)) float Shape::GetHeight ( );
__declspec(implementation_key(5856)) void Shape::PutHeight ( float prop );
__declspec(implementation_key(5857)) enum Office::MsoTriState Shape::GetHorizontalFlip ( );
__declspec(implementation_key(5858)) float Shape::GetLeft ( );
__declspec(implementation_key(5859)) void Shape::PutLeft ( float prop );
__declspec(implementation_key(5860)) LineFormatPtr Shape::GetLine ( );
__declspec(implementation_key(5861)) enum Office::MsoTriState Shape::GetLockAspectRatio ( );
__declspec(implementation_key(5862)) void Shape::PutLockAspectRatio ( enum Office::MsoTriState prop );
__declspec(implementation_key(5863)) _bstr_t Shape::GetName ( );
__declspec(implementation_key(5864)) void Shape::PutName ( _bstr_t prop );
__declspec(implementation_key(5865)) ShapeNodesPtr Shape::GetNodes ( );
__declspec(implementation_key(5866)) float Shape::GetRotation ( );
__declspec(implementation_key(5867)) void Shape::PutRotation ( float prop );
__declspec(implementation_key(5868)) PictureFormatPtr Shape::GetPictureFormat ( );
__declspec(implementation_key(5869)) ShadowFormatPtr Shape::GetShadow ( );
__declspec(implementation_key(5870)) TextEffectFormatPtr Shape::GetTextEffect ( );
__declspec(implementation_key(5871)) TextFramePtr Shape::GetTextFrame ( );
__declspec(implementation_key(5872)) ThreeDFormatPtr Shape::GetThreeD ( );
__declspec(implementation_key(5873)) float Shape::GetTop ( );
__declspec(implementation_key(5874)) void Shape::PutTop ( float prop );
__declspec(implementation_key(5875)) enum Office::MsoShapeType Shape::GetType ( );
__declspec(implementation_key(5876)) enum Office::MsoTriState Shape::GetVerticalFlip ( );
__declspec(implementation_key(5877)) _variant_t Shape::GetVertices ( );
__declspec(implementation_key(5878)) enum Office::MsoTriState Shape::GetVisible ( );
__declspec(implementation_key(5879)) void Shape::PutVisible ( enum Office::MsoTriState prop );
__declspec(implementation_key(5880)) float Shape::GetWidth ( );
__declspec(implementation_key(5881)) void Shape::PutWidth ( float prop );
__declspec(implementation_key(5882)) long Shape::GetZOrderPosition ( );
__declspec(implementation_key(5883)) HyperlinkPtr Shape::GetHyperlink ( );
__declspec(implementation_key(5884)) enum WdRelativeHorizontalPosition Shape::GetRelativeHorizontalPosition ( );
__declspec(implementation_key(5885)) void Shape::PutRelativeHorizontalPosition ( enum WdRelativeHorizontalPosition prop );
__declspec(implementation_key(5886)) enum WdRelativeVerticalPosition Shape::GetRelativeVerticalPosition ( );
__declspec(implementation_key(5887)) void Shape::PutRelativeVerticalPosition ( enum WdRelativeVerticalPosition prop );
__declspec(implementation_key(5888)) long Shape::GetLockAnchor ( );
__declspec(implementation_key(5889)) void Shape::PutLockAnchor ( long prop );
__declspec(implementation_key(5890)) WrapFormatPtr Shape::GetWrapFormat ( );
__declspec(implementation_key(5891)) OLEFormatPtr Shape::GetOLEFormat ( );
__declspec(implementation_key(5892)) RangePtr Shape::GetAnchor ( );
__declspec(implementation_key(5893)) LinkFormatPtr Shape::GetLinkFormat ( );
__declspec(implementation_key(5894)) HRESULT Shape::Apply ( );
__declspec(implementation_key(5895)) HRESULT Shape::Delete ( );
__declspec(implementation_key(5896)) ShapePtr Shape::Duplicate ( );
__declspec(implementation_key(5897)) HRESULT Shape::Flip ( enum Office::MsoFlipCmd FlipCmd );
__declspec(implementation_key(5898)) HRESULT Shape::IncrementLeft ( float Increment );
__declspec(implementation_key(5899)) HRESULT Shape::IncrementRotation ( float Increment );
__declspec(implementation_key(5900)) HRESULT Shape::IncrementTop ( float Increment );
__declspec(implementation_key(5901)) HRESULT Shape::PickUp ( );
__declspec(implementation_key(5902)) HRESULT Shape::RerouteConnections ( );
__declspec(implementation_key(5903)) HRESULT Shape::ScaleHeight ( float Factor, enum Office::MsoTriState RelativeToOriginalSize, enum Office::MsoScaleFrom Scale );
__declspec(implementation_key(5904)) HRESULT Shape::ScaleWidth ( float Factor, enum Office::MsoTriState RelativeToOriginalSize, enum Office::MsoScaleFrom Scale );
__declspec(implementation_key(5905)) HRESULT Shape::Select ( VARIANT * Replace );
__declspec(implementation_key(5906)) HRESULT Shape::SetShapesDefaultProperties ( );
__declspec(implementation_key(5907)) ShapeRangePtr Shape::Ungroup ( );
__declspec(implementation_key(5908)) HRESULT Shape::ZOrder ( enum Office::MsoZOrderCmd ZOrderCmd );
__declspec(implementation_key(5909)) InlineShapePtr Shape::ConvertToInlineShape ( );
__declspec(implementation_key(5910)) FramePtr Shape::ConvertToFrame ( );
__declspec(implementation_key(5911)) HRESULT Shape::Activate ( );
__declspec(implementation_key(5912)) _bstr_t Shape::GetAlternativeText ( );
__declspec(implementation_key(5913)) void Shape::PutAlternativeText ( _bstr_t prop );
__declspec(implementation_key(5914)) Office::ScriptPtr Shape::GetScript ( );
__declspec(implementation_key(5915)) enum Office::MsoTriState Shape::GetHasDiagram ( );
__declspec(implementation_key(5916)) Office::IMsoDiagramPtr Shape::GetDiagram ( );
__declspec(implementation_key(5917)) enum Office::MsoTriState Shape::GetHasDiagramNode ( );
__declspec(implementation_key(5918)) DiagramNodePtr Shape::GetDiagramNode ( );
__declspec(implementation_key(5919)) enum Office::MsoTriState Shape::GetChild ( );
__declspec(implementation_key(5920)) ShapePtr Shape::GetParentGroup ( );
__declspec(implementation_key(5921)) CanvasShapesPtr Shape::GetCanvasItems ( );
__declspec(implementation_key(5922)) long Shape::GetID ( );
__declspec(implementation_key(5923)) HRESULT Shape::CanvasCropLeft ( float Increment );
__declspec(implementation_key(5924)) HRESULT Shape::CanvasCropTop ( float Increment );
__declspec(implementation_key(5925)) HRESULT Shape::CanvasCropRight ( float Increment );
__declspec(implementation_key(5926)) HRESULT Shape::CanvasCropBottom ( float Increment );
__declspec(implementation_key(5927)) void Shape::PutRTF ( _bstr_t _arg1 );
__declspec(implementation_key(5928)) long Shape::GetLayoutInCell ( );
__declspec(implementation_key(5929)) void Shape::PutLayoutInCell ( long prop );
__declspec(implementation_key(5930)) enum Office::MsoTriState Shape::GetHasChart ( );
__declspec(implementation_key(5931)) VARIANT_BOOL Shape::GetDummy1 ( );
__declspec(implementation_key(5932)) float Shape::GetLeftRelative ( );
__declspec(implementation_key(5933)) void Shape::PutLeftRelative ( float prop );
__declspec(implementation_key(5934)) float Shape::GetTopRelative ( );
__declspec(implementation_key(5935)) void Shape::PutTopRelative ( float prop );
__declspec(implementation_key(5936)) float Shape::GetWidthRelative ( );
__declspec(implementation_key(5937)) void Shape::PutWidthRelative ( float prop );
__declspec(implementation_key(5938)) float Shape::GetHeightRelative ( );
__declspec(implementation_key(5939)) void Shape::PutHeightRelative ( float prop );
__declspec(implementation_key(5940)) enum WdRelativeHorizontalSize Shape::GetRelativeHorizontalSize ( );
__declspec(implementation_key(5941)) void Shape::PutRelativeHorizontalSize ( enum WdRelativeHorizontalSize prop );
__declspec(implementation_key(5942)) enum WdRelativeVerticalSize Shape::GetRelativeVerticalSize ( );
__declspec(implementation_key(5943)) void Shape::PutRelativeVerticalSize ( enum WdRelativeVerticalSize prop );
__declspec(implementation_key(5944)) SoftEdgeFormatPtr Shape::GetSoftEdge ( );
__declspec(implementation_key(5945)) GlowFormatPtr Shape::GetGlow ( );
__declspec(implementation_key(5946)) ReflectionFormatPtr Shape::GetReflection ( );
__declspec(implementation_key(5947)) Office::TextFrame2Ptr Shape::GetTextFrame2 ( );
__declspec(implementation_key(5948)) _ApplicationPtr TextFrame::GetApplication ( );
__declspec(implementation_key(5949)) long TextFrame::GetCreator ( );
__declspec(implementation_key(5950)) ShapePtr TextFrame::GetParent ( );
__declspec(implementation_key(5951)) float TextFrame::GetMarginBottom ( );
__declspec(implementation_key(5952)) void TextFrame::PutMarginBottom ( float prop );
__declspec(implementation_key(5953)) float TextFrame::GetMarginLeft ( );
__declspec(implementation_key(5954)) void TextFrame::PutMarginLeft ( float prop );
__declspec(implementation_key(5955)) float TextFrame::GetMarginRight ( );
__declspec(implementation_key(5956)) void TextFrame::PutMarginRight ( float prop );
__declspec(implementation_key(5957)) float TextFrame::GetMarginTop ( );
__declspec(implementation_key(5958)) void TextFrame::PutMarginTop ( float prop );
__declspec(implementation_key(5959)) enum Office::MsoTextOrientation TextFrame::GetOrientation ( );
__declspec(implementation_key(5960)) void TextFrame::PutOrientation ( enum Office::MsoTextOrientation prop );
__declspec(implementation_key(5961)) RangePtr TextFrame::GetTextRange ( );
__declspec(implementation_key(5962)) RangePtr TextFrame::GetContainingRange ( );
__declspec(implementation_key(5963)) TextFramePtr TextFrame::GetNext ( );
__declspec(implementation_key(5964)) void TextFrame::PutNext ( struct TextFrame * prop );
__declspec(implementation_key(5965)) TextFramePtr TextFrame::GetPrevious ( );
__declspec(implementation_key(5966)) void TextFrame::PutPrevious ( struct TextFrame * prop );
__declspec(implementation_key(5967)) VARIANT_BOOL TextFrame::GetOverflowing ( );
__declspec(implementation_key(5968)) long TextFrame::GetHasText ( );
__declspec(implementation_key(5969)) HRESULT TextFrame::BreakForwardLink ( );
__declspec(implementation_key(5970)) VARIANT_BOOL TextFrame::ValidLinkTarget ( struct TextFrame * TargetTextFrame );
__declspec(implementation_key(5971)) long TextFrame::GetAutoSize ( );
__declspec(implementation_key(5972)) void TextFrame::PutAutoSize ( long prop );
__declspec(implementation_key(5973)) long TextFrame::GetWordWrap ( );
__declspec(implementation_key(5974)) void TextFrame::PutWordWrap ( long prop );
__declspec(implementation_key(5975)) enum Office::MsoVerticalAnchor TextFrame::GetVerticalAnchor ( );
__declspec(implementation_key(5976)) void TextFrame::PutVerticalAnchor ( enum Office::MsoVerticalAnchor prop );
__declspec(implementation_key(5977)) _ApplicationPtr InlineShape::GetApplication ( );
__declspec(implementation_key(5978)) long InlineShape::GetCreator ( );
__declspec(implementation_key(5979)) IDispatchPtr InlineShape::GetParent ( );
__declspec(implementation_key(5980)) BordersPtr InlineShape::GetBorders ( );
__declspec(implementation_key(5981)) void InlineShape::PutBorders ( struct Borders * prop );
__declspec(implementation_key(5982)) RangePtr InlineShape::GetRange ( );
__declspec(implementation_key(5983)) LinkFormatPtr InlineShape::GetLinkFormat ( );
__declspec(implementation_key(5984)) FieldPtr InlineShape::GetField ( );
__declspec(implementation_key(5985)) OLEFormatPtr InlineShape::GetOLEFormat ( );
__declspec(implementation_key(5986)) enum WdInlineShapeType InlineShape::GetType ( );
__declspec(implementation_key(5987)) HyperlinkPtr InlineShape::GetHyperlink ( );
__declspec(implementation_key(5988)) float InlineShape::GetHeight ( );
__declspec(implementation_key(5989)) void InlineShape::PutHeight ( float prop );
__declspec(implementation_key(5990)) float InlineShape::GetWidth ( );
__declspec(implementation_key(5991)) void InlineShape::PutWidth ( float prop );
__declspec(implementation_key(5992)) float InlineShape::GetScaleHeight ( );
__declspec(implementation_key(5993)) void InlineShape::PutScaleHeight ( float prop );
__declspec(implementation_key(5994)) float InlineShape::GetScaleWidth ( );
__declspec(implementation_key(5995)) void InlineShape::PutScaleWidth ( float prop );
__declspec(implementation_key(5996)) enum Office::MsoTriState InlineShape::GetLockAspectRatio ( );
__declspec(implementation_key(5997)) void InlineShape::PutLockAspectRatio ( enum Office::MsoTriState prop );
__declspec(implementation_key(5998)) LineFormatPtr InlineShape::GetLine ( );
__declspec(implementation_key(5999)) FillFormatPtr InlineShape::GetFill ( );
__declspec(implementation_key(6000)) PictureFormatPtr InlineShape::GetPictureFormat ( );
__declspec(implementation_key(6001)) void InlineShape::PutPictureFormat ( struct PictureFormat * prop );
__declspec(implementation_key(6002)) HRESULT InlineShape::Activate ( );
__declspec(implementation_key(6003)) HRESULT InlineShape::Reset ( );
__declspec(implementation_key(6004)) HRESULT InlineShape::Delete ( );
__declspec(implementation_key(6005)) HRESULT InlineShape::Select ( );
__declspec(implementation_key(6006)) ShapePtr InlineShape::ConvertToShape ( );
__declspec(implementation_key(6007)) HorizontalLineFormatPtr InlineShape::GetHorizontalLineFormat ( );
__declspec(implementation_key(6008)) Office::ScriptPtr InlineShape::GetScript ( );
__declspec(implementation_key(6009)) long InlineShape::GetOWSAnchor ( );
__declspec(implementation_key(6010)) TextEffectFormatPtr InlineShape::GetTextEffect ( );
__declspec(implementation_key(6011)) void InlineShape::PutTextEffect ( struct TextEffectFormat * prop );
__declspec(implementation_key(6012)) _bstr_t InlineShape::GetAlternativeText ( );
__declspec(implementation_key(6013)) void InlineShape::PutAlternativeText ( _bstr_t prop );
__declspec(implementation_key(6014)) VARIANT_BOOL InlineShape::GetIsPictureBullet ( );
__declspec(implementation_key(6015)) GroupShapesPtr InlineShape::GetGroupItems ( );
__declspec(implementation_key(6016)) enum Office::MsoTriState InlineShape::GetHasChart ( );
__declspec(implementation_key(6017)) VARIANT_BOOL InlineShape::GetDummy1 ( );
__declspec(implementation_key(6018)) SoftEdgeFormatPtr InlineShape::GetSoftEdge ( );
__declspec(implementation_key(6019)) GlowFormatPtr InlineShape::GetGlow ( );
__declspec(implementation_key(6020)) ReflectionFormatPtr InlineShape::GetReflection ( );
__declspec(implementation_key(6021)) ShadowFormatPtr InlineShape::GetShadow ( );
__declspec(implementation_key(6022)) _ApplicationPtr InlineShapes::GetApplication ( );
__declspec(implementation_key(6023)) long InlineShapes::GetCreator ( );
__declspec(implementation_key(6024)) IDispatchPtr InlineShapes::GetParent ( );
__declspec(implementation_key(6025)) long InlineShapes::GetCount ( );
__declspec(implementation_key(6026)) IUnknownPtr InlineShapes::Get_NewEnum ( );
__declspec(implementation_key(6027)) InlineShapePtr InlineShapes::Item ( long Index );
__declspec(implementation_key(6028)) InlineShapePtr InlineShapes::AddPicture ( _bstr_t FileName, VARIANT * LinkToFile, VARIANT * SaveWithDocument, VARIANT * Range );
__declspec(implementation_key(6029)) InlineShapePtr InlineShapes::AddOLEObject ( VARIANT * ClassType, VARIANT * FileName, VARIANT * LinkToFile, VARIANT * DisplayAsIcon, VARIANT * IconFileName, VARIANT * IconIndex, VARIANT * IconLabel, VARIANT * Range );
__declspec(implementation_key(6030)) InlineShapePtr InlineShapes::AddOLEControl ( VARIANT * ClassType, VARIANT * Range );
__declspec(implementation_key(6031)) InlineShapePtr InlineShapes::New ( struct Range * Range );
__declspec(implementation_key(6032)) InlineShapePtr InlineShapes::AddHorizontalLine ( _bstr_t FileName, VARIANT * Range );
__declspec(implementation_key(6033)) InlineShapePtr InlineShapes::AddHorizontalLineStandard ( VARIANT * Range );
__declspec(implementation_key(6034)) InlineShapePtr InlineShapes::AddPictureBullet ( _bstr_t FileName, VARIANT * Range );
__declspec(implementation_key(6035)) InlineShapePtr InlineShapes::AddChart ( enum Office::XlChartType Type, VARIANT * Range );
__declspec(implementation_key(6036)) _ApplicationPtr ConnectorFormat::GetApplication ( );
__declspec(implementation_key(6037)) long ConnectorFormat::GetCreator ( );
__declspec(implementation_key(6038)) enum Office::MsoTriState ConnectorFormat::GetBeginConnected ( );
__declspec(implementation_key(6039)) ShapePtr ConnectorFormat::GetBeginConnectedShape ( );
__declspec(implementation_key(6040)) long ConnectorFormat::GetBeginConnectionSite ( );
__declspec(implementation_key(6041)) enum Office::MsoTriState ConnectorFormat::GetEndConnected ( );
__declspec(implementation_key(6042)) ShapePtr ConnectorFormat::GetEndConnectedShape ( );
__declspec(implementation_key(6043)) long ConnectorFormat::GetEndConnectionSite ( );
__declspec(implementation_key(6044)) IDispatchPtr ConnectorFormat::GetParent ( );
__declspec(implementation_key(6045)) enum Office::MsoConnectorType ConnectorFormat::GetType ( );
__declspec(implementation_key(6046)) void ConnectorFormat::PutType ( enum Office::MsoConnectorType prop );
__declspec(implementation_key(6047)) HRESULT ConnectorFormat::BeginConnect ( struct Shape * * ConnectedShape, long ConnectionSite );
__declspec(implementation_key(6048)) HRESULT ConnectorFormat::BeginDisconnect ( );
__declspec(implementation_key(6049)) HRESULT ConnectorFormat::EndConnect ( struct Shape * * ConnectedShape, long ConnectionSite );
__declspec(implementation_key(6050)) HRESULT ConnectorFormat::EndDisconnect ( );
__declspec(implementation_key(6051)) _ApplicationPtr FreeformBuilder::GetApplication ( );
__declspec(implementation_key(6052)) long FreeformBuilder::GetCreator ( );
__declspec(implementation_key(6053)) IDispatchPtr FreeformBuilder::GetParent ( );
__declspec(implementation_key(6054)) HRESULT FreeformBuilder::AddNodes ( enum Office::MsoSegmentType SegmentType, enum Office::MsoEditingType EditingType, float X1, float Y1, float X2, float Y2, float X3, float Y3 );
__declspec(implementation_key(6055)) ShapePtr FreeformBuilder::ConvertToShape ( VARIANT * Anchor );
__declspec(implementation_key(6056)) _ApplicationPtr CanvasShapes::GetApplication ( );
__declspec(implementation_key(6057)) long CanvasShapes::GetCreator ( );
__declspec(implementation_key(6058)) IDispatchPtr CanvasShapes::GetParent ( );
__declspec(implementation_key(6059)) long CanvasShapes::GetCount ( );
__declspec(implementation_key(6060)) IUnknownPtr CanvasShapes::Get_NewEnum ( );
__declspec(implementation_key(6061)) ShapePtr CanvasShapes::Item ( VARIANT * Index );
__declspec(implementation_key(6062)) ShapePtr CanvasShapes::AddCallout ( enum Office::MsoCalloutType Type, float Left, float Top, float Width, float Height );
__declspec(implementation_key(6063)) ShapePtr CanvasShapes::AddConnector ( enum Office::MsoConnectorType Type, float BeginX, float BeginY, float EndX, float EndY );
__declspec(implementation_key(6064)) ShapePtr CanvasShapes::AddCurve ( VARIANT * SafeArrayOfPoints );
__declspec(implementation_key(6065)) ShapePtr CanvasShapes::AddLabel ( enum Office::MsoTextOrientation Orientation, float Left, float Top, float Width, float Height );
__declspec(implementation_key(6066)) ShapePtr CanvasShapes::AddLine ( float BeginX, float BeginY, float EndX, float EndY );
__declspec(implementation_key(6067)) ShapePtr CanvasShapes::AddPicture ( _bstr_t FileName, VARIANT * LinkToFile, VARIANT * SaveWithDocument, VARIANT * Left, VARIANT * Top, VARIANT * Width, VARIANT * Height );
__declspec(implementation_key(6068)) ShapePtr CanvasShapes::AddPolyline ( VARIANT * SafeArrayOfPoints );
__declspec(implementation_key(6069)) ShapePtr CanvasShapes::AddShape ( long Type, float Left, float Top, float Width, float Height );
__declspec(implementation_key(6070)) ShapePtr CanvasShapes::AddTextEffect ( enum Office::MsoPresetTextEffect PresetTextEffect, _bstr_t Text, _bstr_t FontName, float FontSize, enum Office::MsoTriState FontBold, enum Office::MsoTriState FontItalic, float Left, float Top );
__declspec(implementation_key(6071)) ShapePtr CanvasShapes::AddTextbox ( enum Office::MsoTextOrientation Orientation, float Left, float Top, float Width, float Height );
__declspec(implementation_key(6072)) FreeformBuilderPtr CanvasShapes::BuildFreeform ( enum Office::MsoEditingType EditingType, float X1, float Y1 );
__declspec(implementation_key(6073)) ShapeRangePtr CanvasShapes::Range ( VARIANT * Index );
__declspec(implementation_key(6074)) HRESULT CanvasShapes::SelectAll ( );
__declspec(implementation_key(6075)) _ApplicationPtr HTMLDivision::GetApplication ( );
__declspec(implementation_key(6076)) long HTMLDivision::GetCreator ( );
__declspec(implementation_key(6077)) IDispatchPtr HTMLDivision::GetParent ( );
__declspec(implementation_key(6078)) RangePtr HTMLDivision::GetRange ( );
__declspec(implementation_key(6079)) BordersPtr HTMLDivision::GetBorders ( );
__declspec(implementation_key(6080)) float HTMLDivision::GetLeftIndent ( );
__declspec(implementation_key(6081)) void HTMLDivision::PutLeftIndent ( float prop );
__declspec(implementation_key(6082)) float HTMLDivision::GetRightIndent ( );
__declspec(implementation_key(6083)) void HTMLDivision::PutRightIndent ( float prop );
__declspec(implementation_key(6084)) float HTMLDivision::GetSpaceBefore ( );
__declspec(implementation_key(6085)) void HTMLDivision::PutSpaceBefore ( float prop );
__declspec(implementation_key(6086)) float HTMLDivision::GetSpaceAfter ( );
__declspec(implementation_key(6087)) void HTMLDivision::PutSpaceAfter ( float prop );
__declspec(implementation_key(6088)) HTMLDivisionsPtr HTMLDivision::GetHTMLDivisions ( );
__declspec(implementation_key(6089)) HTMLDivisionPtr HTMLDivision::HTMLDivisionParent ( VARIANT * LevelsUp );
__declspec(implementation_key(6090)) HRESULT HTMLDivision::Delete ( );
__declspec(implementation_key(6091)) _ApplicationPtr HTMLDivisions::GetApplication ( );
__declspec(implementation_key(6092)) long HTMLDivisions::GetCreator ( );
__declspec(implementation_key(6093)) IDispatchPtr HTMLDivisions::GetParent ( );
__declspec(implementation_key(6094)) IUnknownPtr HTMLDivisions::Get_NewEnum ( );
__declspec(implementation_key(6095)) long HTMLDivisions::GetCount ( );
__declspec(implementation_key(6096)) long HTMLDivisions::GetNestingLevel ( );
__declspec(implementation_key(6097)) HTMLDivisionPtr HTMLDivisions::Add ( VARIANT * Range );
__declspec(implementation_key(6098)) HTMLDivisionPtr HTMLDivisions::Item ( long Index );
__declspec(implementation_key(6099)) _ApplicationPtr DiagramNode::GetApplication ( );
__declspec(implementation_key(6100)) long DiagramNode::GetCreator ( );
__declspec(implementation_key(6101)) IDispatchPtr DiagramNode::GetParent ( );
__declspec(implementation_key(6102)) DiagramNodeChildrenPtr DiagramNode::GetChildren ( );
__declspec(implementation_key(6103)) ShapePtr DiagramNode::GetShape ( );
__declspec(implementation_key(6104)) DiagramNodePtr DiagramNode::GetRoot ( );
__declspec(implementation_key(6105)) DiagramPtr DiagramNode::GetDiagram ( );
__declspec(implementation_key(6106)) enum Office::MsoOrgChartLayoutType DiagramNode::GetLayout ( );
__declspec(implementation_key(6107)) void DiagramNode::PutLayout ( enum Office::MsoOrgChartLayoutType prop );
__declspec(implementation_key(6108)) ShapePtr DiagramNode::GetTextShape ( );
__declspec(implementation_key(6109)) DiagramNodePtr DiagramNode::AddNode ( enum Office::MsoRelativeNodePosition Pos, enum Office::MsoDiagramNodeType NodeType );
__declspec(implementation_key(6110)) HRESULT DiagramNode::Delete ( );
__declspec(implementation_key(6111)) HRESULT DiagramNode::MoveNode ( struct DiagramNode * * TargetNode, enum Office::MsoRelativeNodePosition Pos );
__declspec(implementation_key(6112)) HRESULT DiagramNode::ReplaceNode ( struct DiagramNode * * TargetNode );
__declspec(implementation_key(6113)) HRESULT DiagramNode::SwapNode ( struct DiagramNode * * TargetNode, enum Office::MsoRelativeNodePosition Pos );
__declspec(implementation_key(6114)) DiagramNodePtr DiagramNode::CloneNode ( VARIANT_BOOL copyChildren, struct DiagramNode * * TargetNode, enum Office::MsoRelativeNodePosition Pos );
__declspec(implementation_key(6115)) HRESULT DiagramNode::TransferChildren ( struct DiagramNode * * ReceivingNode );
__declspec(implementation_key(6116)) DiagramNodePtr DiagramNode::NextNode ( );
__declspec(implementation_key(6117)) DiagramNodePtr DiagramNode::PrevNode ( );
__declspec(implementation_key(6118)) _ApplicationPtr DiagramNodeChildren::GetApplication ( );
__declspec(implementation_key(6119)) long DiagramNodeChildren::GetCreator ( );
__declspec(implementation_key(6120)) IUnknownPtr DiagramNodeChildren::Get_NewEnum ( );
__declspec(implementation_key(6121)) IDispatchPtr DiagramNodeChildren::GetParent ( );
__declspec(implementation_key(6122)) long DiagramNodeChildren::GetCount ( );
__declspec(implementation_key(6123)) DiagramNodePtr DiagramNodeChildren::GetFirstChild ( );
__declspec(implementation_key(6124)) DiagramNodePtr DiagramNodeChildren::GetLastChild ( );
__declspec(implementation_key(6125)) DiagramNodePtr DiagramNodeChildren::Item ( VARIANT * Index );
__declspec(implementation_key(6126)) DiagramNodePtr DiagramNodeChildren::AddNode ( VARIANT * Index, enum Office::MsoDiagramNodeType NodeType );
__declspec(implementation_key(6127)) HRESULT DiagramNodeChildren::SelectAll ( );
__declspec(implementation_key(6128)) _ApplicationPtr DiagramNodes::GetApplication ( );
__declspec(implementation_key(6129)) long DiagramNodes::GetCreator ( );
__declspec(implementation_key(6130)) IUnknownPtr DiagramNodes::Get_NewEnum ( );
__declspec(implementation_key(6131)) IDispatchPtr DiagramNodes::GetParent ( );
__declspec(implementation_key(6132)) long DiagramNodes::GetCount ( );
__declspec(implementation_key(6133)) DiagramNodePtr DiagramNodes::Item ( VARIANT * Index );
__declspec(implementation_key(6134)) HRESULT DiagramNodes::SelectAll ( );
__declspec(implementation_key(6135)) _ApplicationPtr Diagram::GetApplication ( );
__declspec(implementation_key(6136)) long Diagram::GetCreator ( );
__declspec(implementation_key(6137)) IDispatchPtr Diagram::GetParent ( );
__declspec(implementation_key(6138)) DiagramNodesPtr Diagram::GetNodes ( );
__declspec(implementation_key(6139)) enum Office::MsoDiagramType Diagram::GetType ( );
__declspec(implementation_key(6140)) enum Office::MsoTriState Diagram::GetAutoLayout ( );
__declspec(implementation_key(6141)) void Diagram::PutAutoLayout ( enum Office::MsoTriState prop );
__declspec(implementation_key(6142)) enum Office::MsoTriState Diagram::GetReverse ( );
__declspec(implementation_key(6143)) void Diagram::PutReverse ( enum Office::MsoTriState prop );
__declspec(implementation_key(6144)) enum Office::MsoTriState Diagram::GetAutoFormat ( );
__declspec(implementation_key(6145)) void Diagram::PutAutoFormat ( enum Office::MsoTriState prop );
__declspec(implementation_key(6146)) HRESULT Diagram::Convert ( enum Office::MsoDiagramType Type );
__declspec(implementation_key(6147)) HRESULT Diagram::FitText ( );
__declspec(implementation_key(6148)) _bstr_t SmartTag::GetName ( );
__declspec(implementation_key(6149)) _bstr_t SmartTag::GetXML ( );
__declspec(implementation_key(6150)) RangePtr SmartTag::GetRange ( );
__declspec(implementation_key(6151)) _bstr_t SmartTag::GetDownloadURL ( );
__declspec(implementation_key(6152)) CustomPropertiesPtr SmartTag::GetProperties ( );
__declspec(implementation_key(6153)) _ApplicationPtr SmartTag::GetApplication ( );
__declspec(implementation_key(6154)) long SmartTag::GetCreator ( );
__declspec(implementation_key(6155)) IDispatchPtr SmartTag::GetParent ( );
__declspec(implementation_key(6156)) HRESULT SmartTag::Select ( );
__declspec(implementation_key(6157)) HRESULT SmartTag::Delete ( );
__declspec(implementation_key(6158)) SmartTagActionsPtr SmartTag::GetSmartTagActions ( );
__declspec(implementation_key(6159)) XMLNodePtr SmartTag::GetXMLNode ( );
__declspec(implementation_key(6160)) IUnknownPtr SmartTags::Get_NewEnum ( );
__declspec(implementation_key(6161)) long SmartTags::GetCount ( );
__declspec(implementation_key(6162)) _ApplicationPtr SmartTags::GetApplication ( );
__declspec(implementation_key(6163)) long SmartTags::GetCreator ( );
__declspec(implementation_key(6164)) IDispatchPtr SmartTags::GetParent ( );
__declspec(implementation_key(6165)) SmartTagPtr SmartTags::Item ( VARIANT * Index );
__declspec(implementation_key(6166)) SmartTagPtr SmartTags::Add ( _bstr_t Name, VARIANT * Range, VARIANT * Properties );
__declspec(implementation_key(6167)) SmartTagsPtr SmartTags::SmartTagsByType ( _bstr_t Name );
__declspec(implementation_key(6168)) _ApplicationPtr Line::GetApplication ( );
__declspec(implementation_key(6169)) long Line::GetCreator ( );
__declspec(implementation_key(6170)) IDispatchPtr Line::GetParent ( );
__declspec(implementation_key(6171)) enum WdLineType Line::GetLineType ( );
__declspec(implementation_key(6172)) long Line::GetLeft ( );
__declspec(implementation_key(6173)) long Line::GetTop ( );
__declspec(implementation_key(6174)) long Line::GetWidth ( );
__declspec(implementation_key(6175)) long Line::GetHeight ( );
__declspec(implementation_key(6176)) RangePtr Line::GetRange ( );
__declspec(implementation_key(6177)) RectanglesPtr Line::GetRectangles ( );
__declspec(implementation_key(6178)) IUnknownPtr Lines::Get_NewEnum ( );
__declspec(implementation_key(6179)) long Lines::GetCount ( );
__declspec(implementation_key(6180)) _ApplicationPtr Lines::GetApplication ( );
__declspec(implementation_key(6181)) long Lines::GetCreator ( );
__declspec(implementation_key(6182)) IDispatchPtr Lines::GetParent ( );
__declspec(implementation_key(6183)) LinePtr Lines::Item ( long Index );
__declspec(implementation_key(6184)) _ApplicationPtr Rectangle::GetApplication ( );
__declspec(implementation_key(6185)) long Rectangle::GetCreator ( );
__declspec(implementation_key(6186)) IDispatchPtr Rectangle::GetParent ( );
__declspec(implementation_key(6187)) enum WdRectangleType Rectangle::GetRectangleType ( );
__declspec(implementation_key(6188)) long Rectangle::GetLeft ( );
__declspec(implementation_key(6189)) long Rectangle::GetTop ( );
__declspec(implementation_key(6190)) long Rectangle::GetWidth ( );
__declspec(implementation_key(6191)) long Rectangle::GetHeight ( );
__declspec(implementation_key(6192)) RangePtr Rectangle::GetRange ( );
__declspec(implementation_key(6193)) LinesPtr Rectangle::GetLines ( );
__declspec(implementation_key(6194)) IUnknownPtr Rectangles::Get_NewEnum ( );
__declspec(implementation_key(6195)) long Rectangles::GetCount ( );
__declspec(implementation_key(6196)) _ApplicationPtr Rectangles::GetApplication ( );
__declspec(implementation_key(6197)) long Rectangles::GetCreator ( );
__declspec(implementation_key(6198)) IDispatchPtr Rectangles::GetParent ( );
__declspec(implementation_key(6199)) RectanglePtr Rectangles::Item ( long Index );
__declspec(implementation_key(6200)) _ApplicationPtr Page::GetApplication ( );
__declspec(implementation_key(6201)) long Page::GetCreator ( );
__declspec(implementation_key(6202)) IDispatchPtr Page::GetParent ( );
__declspec(implementation_key(6203)) long Page::GetLeft ( );
__declspec(implementation_key(6204)) long Page::GetTop ( );
__declspec(implementation_key(6205)) long Page::GetWidth ( );
__declspec(implementation_key(6206)) long Page::GetHeight ( );
__declspec(implementation_key(6207)) RectanglesPtr Page::GetRectangles ( );
__declspec(implementation_key(6208)) BreaksPtr Page::GetBreaks ( );
__declspec(implementation_key(6209)) _variant_t Page::GetEnhMetaFileBits ( );
__declspec(implementation_key(6210)) IUnknownPtr Pages::Get_NewEnum ( );
__declspec(implementation_key(6211)) long Pages::GetCount ( );
__declspec(implementation_key(6212)) _ApplicationPtr Pages::GetApplication ( );
__declspec(implementation_key(6213)) long Pages::GetCreator ( );
__declspec(implementation_key(6214)) IDispatchPtr Pages::GetParent ( );
__declspec(implementation_key(6215)) PagePtr Pages::Item ( long Index );
__declspec(implementation_key(6216)) _bstr_t XMLNode::GetBaseName ( );
__declspec(implementation_key(6217)) _ApplicationPtr XMLNode::GetApplication ( );
__declspec(implementation_key(6218)) long XMLNode::GetCreator ( );
__declspec(implementation_key(6219)) IDispatchPtr XMLNode::GetParent ( );
__declspec(implementation_key(6220)) RangePtr XMLNode::GetRange ( );
__declspec(implementation_key(6221)) _bstr_t XMLNode::GetText ( );
__declspec(implementation_key(6222)) void XMLNode::PutText ( _bstr_t prop );
__declspec(implementation_key(6223)) _bstr_t XMLNode::GetNamespaceURI ( );
__declspec(implementation_key(6224)) _bstr_t XMLNode::GetXML ( VARIANT_BOOL DataOnly );
__declspec(implementation_key(6225)) XMLNodePtr XMLNode::GetNextSibling ( );
__declspec(implementation_key(6226)) XMLNodePtr XMLNode::GetPreviousSibling ( );
__declspec(implementation_key(6227)) XMLNodePtr XMLNode::GetParentNode ( );
__declspec(implementation_key(6228)) XMLNodePtr XMLNode::GetFirstChild ( );
__declspec(implementation_key(6229)) XMLNodePtr XMLNode::GetLastChild ( );
__declspec(implementation_key(6230)) _DocumentPtr XMLNode::GetOwnerDocument ( );
__declspec(implementation_key(6231)) enum WdXMLNodeType XMLNode::GetNodeType ( );
__declspec(implementation_key(6232)) XMLNodesPtr XMLNode::GetChildNodes ( );
__declspec(implementation_key(6233)) XMLNodesPtr XMLNode::GetAttributes ( );
__declspec(implementation_key(6234)) _bstr_t XMLNode::GetNodeValue ( );
__declspec(implementation_key(6235)) void XMLNode::PutNodeValue ( _bstr_t prop );
__declspec(implementation_key(6236)) VARIANT_BOOL XMLNode::GetHasChildNodes ( );
__declspec(implementation_key(6237)) XMLNodePtr XMLNode::SelectSingleNode ( _bstr_t XPath, _bstr_t PrefixMapping, VARIANT_BOOL FastSearchSkippingTextNodes );
__declspec(implementation_key(6238)) XMLNodesPtr XMLNode::SelectNodes ( _bstr_t XPath, _bstr_t PrefixMapping, VARIANT_BOOL FastSearchSkippingTextNodes );
__declspec(implementation_key(6239)) XMLChildNodeSuggestionsPtr XMLNode::GetChildNodeSuggestions ( );
__declspec(implementation_key(6240)) enum WdXMLNodeLevel XMLNode::GetLevel ( );
__declspec(implementation_key(6241)) enum WdXMLValidationStatus XMLNode::GetValidationStatus ( );
__declspec(implementation_key(6242)) SmartTagPtr XMLNode::GetSmartTag ( );
__declspec(implementation_key(6243)) _bstr_t XMLNode::GetValidationErrorText ( VARIANT_BOOL Advanced );
__declspec(implementation_key(6244)) _bstr_t XMLNode::GetPlaceholderText ( );
__declspec(implementation_key(6245)) void XMLNode::PutPlaceholderText ( _bstr_t prop );
__declspec(implementation_key(6246)) HRESULT XMLNode::Delete ( );
__declspec(implementation_key(6247)) HRESULT XMLNode::Copy ( );
__declspec(implementation_key(6248)) HRESULT XMLNode::RemoveChild ( struct XMLNode * ChildElement );
__declspec(implementation_key(6249)) HRESULT XMLNode::Cut ( );
__declspec(implementation_key(6250)) HRESULT XMLNode::Validate ( );
__declspec(implementation_key(6251)) HRESULT XMLNode::SetValidationError ( enum WdXMLValidationStatus Status, VARIANT * ErrorText, VARIANT_BOOL ClearedAutomatically );
__declspec(implementation_key(6252)) _bstr_t XMLNode::GetWordOpenXML ( );
__declspec(implementation_key(6253)) IUnknownPtr XMLNodes::Get_NewEnum ( );
__declspec(implementation_key(6254)) long XMLNodes::GetCount ( );
__declspec(implementation_key(6255)) _ApplicationPtr XMLNodes::GetApplication ( );
__declspec(implementation_key(6256)) long XMLNodes::GetCreator ( );
__declspec(implementation_key(6257)) IDispatchPtr XMLNodes::GetParent ( );
__declspec(implementation_key(6258)) XMLNodePtr XMLNodes::Item ( long Index );
__declspec(implementation_key(6259)) XMLNodePtr XMLNodes::Add ( _bstr_t Name, _bstr_t Namespace, VARIANT * Range );
__declspec(implementation_key(6260)) _ApplicationPtr XMLChildNodeSuggestion::GetApplication ( );
__declspec(implementation_key(6261)) long XMLChildNodeSuggestion::GetCreator ( );
__declspec(implementation_key(6262)) IDispatchPtr XMLChildNodeSuggestion::GetParent ( );
__declspec(implementation_key(6263)) _bstr_t XMLChildNodeSuggestion::GetBaseName ( );
__declspec(implementation_key(6264)) _bstr_t XMLChildNodeSuggestion::GetNamespaceURI ( );
__declspec(implementation_key(6265)) XMLSchemaReferencePtr XMLChildNodeSuggestion::GetXMLSchemaReference ( );
__declspec(implementation_key(6266)) XMLNodePtr XMLChildNodeSuggestion::Insert ( VARIANT * Range );
__declspec(implementation_key(6267)) IUnknownPtr XMLChildNodeSuggestions::Get_NewEnum ( );
__declspec(implementation_key(6268)) long XMLChildNodeSuggestions::GetCount ( );
__declspec(implementation_key(6269)) _ApplicationPtr XMLChildNodeSuggestions::GetApplication ( );
__declspec(implementation_key(6270)) long XMLChildNodeSuggestions::GetCreator ( );
__declspec(implementation_key(6271)) IDispatchPtr XMLChildNodeSuggestions::GetParent ( );
__declspec(implementation_key(6272)) XMLChildNodeSuggestionPtr XMLChildNodeSuggestions::Item ( VARIANT * Index );
__declspec(implementation_key(6273)) HRESULT IApplicationEvents4::Startup ( );
__declspec(implementation_key(6274)) HRESULT IApplicationEvents4::Quit ( );
__declspec(implementation_key(6275)) HRESULT IApplicationEvents4::DocumentChange ( );
__declspec(implementation_key(6276)) HRESULT IApplicationEvents4::DocumentOpen ( struct _Document * Doc );
__declspec(implementation_key(6277)) HRESULT IApplicationEvents4::DocumentBeforeClose ( struct _Document * Doc, VARIANT_BOOL * Cancel );
__declspec(implementation_key(6278)) HRESULT IApplicationEvents4::DocumentBeforePrint ( struct _Document * Doc, VARIANT_BOOL * Cancel );
__declspec(implementation_key(6279)) HRESULT IApplicationEvents4::DocumentBeforeSave ( struct _Document * Doc, VARIANT_BOOL * SaveAsUI, VARIANT_BOOL * Cancel );
__declspec(implementation_key(6280)) HRESULT IApplicationEvents4::NewDocument ( struct _Document * Doc );
__declspec(implementation_key(6281)) HRESULT IApplicationEvents4::WindowActivate ( struct _Document * Doc, struct Window * Wn );
__declspec(implementation_key(6282)) HRESULT IApplicationEvents4::WindowDeactivate ( struct _Document * Doc, struct Window * Wn );
__declspec(implementation_key(6283)) HRESULT IApplicationEvents4::WindowSelectionChange ( struct Selection * Sel );
__declspec(implementation_key(6284)) HRESULT IApplicationEvents4::WindowBeforeRightClick ( struct Selection * Sel, VARIANT_BOOL * Cancel );
__declspec(implementation_key(6285)) HRESULT IApplicationEvents4::WindowBeforeDoubleClick ( struct Selection * Sel, VARIANT_BOOL * Cancel );
__declspec(implementation_key(6286)) HRESULT IApplicationEvents4::EPostagePropertyDialog ( struct _Document * Doc );
__declspec(implementation_key(6287)) HRESULT IApplicationEvents4::EPostageInsert ( struct _Document * Doc );
__declspec(implementation_key(6288)) HRESULT IApplicationEvents4::MailMergeAfterMerge ( struct _Document * Doc, struct _Document * DocResult );
__declspec(implementation_key(6289)) HRESULT IApplicationEvents4::MailMergeAfterRecordMerge ( struct _Document * Doc );
__declspec(implementation_key(6290)) HRESULT IApplicationEvents4::MailMergeBeforeMerge ( struct _Document * Doc, long StartRecord, long EndRecord, VARIANT_BOOL * Cancel );
__declspec(implementation_key(6291)) HRESULT IApplicationEvents4::MailMergeBeforeRecordMerge ( struct _Document * Doc, VARIANT_BOOL * Cancel );
__declspec(implementation_key(6292)) HRESULT IApplicationEvents4::MailMergeDataSourceLoad ( struct _Document * Doc );
__declspec(implementation_key(6293)) HRESULT IApplicationEvents4::MailMergeDataSourceValidate ( struct _Document * Doc, VARIANT_BOOL * Handled );
__declspec(implementation_key(6294)) HRESULT IApplicationEvents4::MailMergeWizardSendToCustom ( struct _Document * Doc );
__declspec(implementation_key(6295)) HRESULT IApplicationEvents4::MailMergeWizardStateChange ( struct _Document * Doc, int * FromState, int * ToState, VARIANT_BOOL * Handled );
__declspec(implementation_key(6296)) HRESULT IApplicationEvents4::WindowSize ( struct _Document * Doc, struct Window * Wn );
__declspec(implementation_key(6297)) HRESULT IApplicationEvents4::XMLSelectionChange ( struct Selection * Sel, struct XMLNode * OldXMLNode, struct XMLNode * NewXMLNode, long * Reason );
__declspec(implementation_key(6298)) HRESULT IApplicationEvents4::XMLValidationError ( struct XMLNode * XMLNode );
__declspec(implementation_key(6299)) HRESULT IApplicationEvents4::DocumentSync ( struct _Document * Doc, enum Office::MsoSyncEventType SyncEventType );
__declspec(implementation_key(6300)) HRESULT IApplicationEvents4::EPostageInsertEx ( struct _Document * Doc, int cpDeliveryAddrStart, int cpDeliveryAddrEnd, int cpReturnAddrStart, int cpReturnAddrEnd, int xaWidth, int yaHeight, _bstr_t bstrPrinterName, _bstr_t bstrPaperFeed, VARIANT_BOOL fPrint, VARIANT_BOOL * fCancel );
__declspec(implementation_key(6301)) HRESULT IApplicationEvents4::MailMergeDataSourceValidate2 ( struct _Document * Doc, VARIANT_BOOL * Handled );
__declspec(implementation_key(6302)) IUnknownPtr OMaths::Get_NewEnum ( );
__declspec(implementation_key(6303)) _ApplicationPtr OMaths::GetApplication ( );
__declspec(implementation_key(6304)) long OMaths::GetCreator ( );
__declspec(implementation_key(6305)) IDispatchPtr OMaths::GetParent ( );
__declspec(implementation_key(6306)) long OMaths::GetCount ( );
__declspec(implementation_key(6307)) OMathPtr OMaths::Item ( long Index );
__declspec(implementation_key(6308)) HRESULT OMaths::Linearize ( );
__declspec(implementation_key(6309)) HRESULT OMaths::BuildUp ( );
__declspec(implementation_key(6310)) RangePtr OMaths::Add ( struct Range * Range );
__declspec(implementation_key(6311)) _ApplicationPtr OMath::GetApplication ( );
__declspec(implementation_key(6312)) long OMath::GetCreator ( );
__declspec(implementation_key(6313)) IDispatchPtr OMath::GetParent ( );
__declspec(implementation_key(6314)) RangePtr OMath::GetRange ( );
__declspec(implementation_key(6315)) OMathFunctionsPtr OMath::GetFunctions ( );
__declspec(implementation_key(6316)) enum WdOMathType OMath::GetType ( );
__declspec(implementation_key(6317)) void OMath::PutType ( enum WdOMathType prop );
__declspec(implementation_key(6318)) OMathPtr OMath::GetParentOMath ( );
__declspec(implementation_key(6319)) OMathFunctionPtr OMath::GetParentFunction ( );
__declspec(implementation_key(6320)) OMathMatRowPtr OMath::GetParentRow ( );
__declspec(implementation_key(6321)) OMathMatColPtr OMath::GetParentCol ( );
__declspec(implementation_key(6322)) OMathPtr OMath::GetParentArg ( );
__declspec(implementation_key(6323)) long OMath::GetArgIndex ( );
__declspec(implementation_key(6324)) long OMath::GetNestingLevel ( );
__declspec(implementation_key(6325)) long OMath::GetArgSize ( );
__declspec(implementation_key(6326)) void OMath::PutArgSize ( long prop );
__declspec(implementation_key(6327)) OMathBreaksPtr OMath::GetBreaks ( );
__declspec(implementation_key(6328)) enum WdOMathJc OMath::GetJustification ( );
__declspec(implementation_key(6329)) void OMath::PutJustification ( enum WdOMathJc prop );
__declspec(implementation_key(6330)) long OMath::GetAlignPoint ( );
__declspec(implementation_key(6331)) void OMath::PutAlignPoint ( long prop );
__declspec(implementation_key(6332)) HRESULT OMath::Linearize ( );
__declspec(implementation_key(6333)) HRESULT OMath::BuildUp ( );
__declspec(implementation_key(6334)) HRESULT OMath::Remove ( );
__declspec(implementation_key(6335)) HRESULT OMath::ConvertToMathText ( );
__declspec(implementation_key(6336)) HRESULT OMath::ConvertToNormalText ( );
__declspec(implementation_key(6337)) HRESULT OMath::ConvertToLiteralText ( );
__declspec(implementation_key(6338)) _ApplicationPtr OMathArgs::GetApplication ( );
__declspec(implementation_key(6339)) long OMathArgs::GetCreator ( );
__declspec(implementation_key(6340)) IDispatchPtr OMathArgs::GetParent ( );
__declspec(implementation_key(6341)) long OMathArgs::GetCount ( );
__declspec(implementation_key(6342)) OMathPtr OMathArgs::Item ( long Index );
__declspec(implementation_key(6343)) OMathPtr OMathArgs::Add ( VARIANT * BeforeArg );
__declspec(implementation_key(6344)) _ApplicationPtr OMathAcc::GetApplication ( );
__declspec(implementation_key(6345)) long OMathAcc::GetCreator ( );
__declspec(implementation_key(6346)) IDispatchPtr OMathAcc::GetParent ( );
__declspec(implementation_key(6347)) OMathPtr OMathAcc::GetE ( );
__declspec(implementation_key(6348)) short OMathAcc::GetChar ( );
__declspec(implementation_key(6349)) void OMathAcc::PutChar ( short prop );
__declspec(implementation_key(6350)) _ApplicationPtr OMathBar::GetApplication ( );
__declspec(implementation_key(6351)) long OMathBar::GetCreator ( );
__declspec(implementation_key(6352)) IDispatchPtr OMathBar::GetParent ( );
__declspec(implementation_key(6353)) OMathPtr OMathBar::GetE ( );
__declspec(implementation_key(6354)) VARIANT_BOOL OMathBar::GetBarTop ( );
__declspec(implementation_key(6355)) void OMathBar::PutBarTop ( VARIANT_BOOL prop );
__declspec(implementation_key(6356)) _ApplicationPtr OMathBox::GetApplication ( );
__declspec(implementation_key(6357)) long OMathBox::GetCreator ( );
__declspec(implementation_key(6358)) IDispatchPtr OMathBox::GetParent ( );
__declspec(implementation_key(6359)) OMathPtr OMathBox::GetE ( );
__declspec(implementation_key(6360)) VARIANT_BOOL OMathBox::GetOpEmu ( );
__declspec(implementation_key(6361)) void OMathBox::PutOpEmu ( VARIANT_BOOL prop );
__declspec(implementation_key(6362)) VARIANT_BOOL OMathBox::GetNoBreak ( );
__declspec(implementation_key(6363)) void OMathBox::PutNoBreak ( VARIANT_BOOL prop );
__declspec(implementation_key(6364)) VARIANT_BOOL OMathBox::GetDiff ( );
__declspec(implementation_key(6365)) void OMathBox::PutDiff ( VARIANT_BOOL prop );
__declspec(implementation_key(6366)) _ApplicationPtr OMathBorderBox::GetApplication ( );
__declspec(implementation_key(6367)) long OMathBorderBox::GetCreator ( );
__declspec(implementation_key(6368)) IDispatchPtr OMathBorderBox::GetParent ( );
__declspec(implementation_key(6369)) OMathPtr OMathBorderBox::GetE ( );
__declspec(implementation_key(6370)) VARIANT_BOOL OMathBorderBox::GetHideTop ( );
__declspec(implementation_key(6371)) void OMathBorderBox::PutHideTop ( VARIANT_BOOL prop );
__declspec(implementation_key(6372)) VARIANT_BOOL OMathBorderBox::GetHideBot ( );
__declspec(implementation_key(6373)) void OMathBorderBox::PutHideBot ( VARIANT_BOOL prop );
__declspec(implementation_key(6374)) VARIANT_BOOL OMathBorderBox::GetHideLeft ( );
__declspec(implementation_key(6375)) void OMathBorderBox::PutHideLeft ( VARIANT_BOOL prop );
__declspec(implementation_key(6376)) VARIANT_BOOL OMathBorderBox::GetHideRight ( );
__declspec(implementation_key(6377)) void OMathBorderBox::PutHideRight ( VARIANT_BOOL prop );
__declspec(implementation_key(6378)) VARIANT_BOOL OMathBorderBox::GetStrikeH ( );
__declspec(implementation_key(6379)) void OMathBorderBox::PutStrikeH ( VARIANT_BOOL prop );
__declspec(implementation_key(6380)) VARIANT_BOOL OMathBorderBox::GetStrikeV ( );
__declspec(implementation_key(6381)) void OMathBorderBox::PutStrikeV ( VARIANT_BOOL prop );
__declspec(implementation_key(6382)) VARIANT_BOOL OMathBorderBox::GetStrikeBLTR ( );
__declspec(implementation_key(6383)) void OMathBorderBox::PutStrikeBLTR ( VARIANT_BOOL prop );
__declspec(implementation_key(6384)) VARIANT_BOOL OMathBorderBox::GetStrikeTLBR ( );
__declspec(implementation_key(6385)) void OMathBorderBox::PutStrikeTLBR ( VARIANT_BOOL prop );
__declspec(implementation_key(6386)) _ApplicationPtr OMathDelim::GetApplication ( );
__declspec(implementation_key(6387)) long OMathDelim::GetCreator ( );
__declspec(implementation_key(6388)) IDispatchPtr OMathDelim::GetParent ( );
__declspec(implementation_key(6389)) OMathArgsPtr OMathDelim::GetE ( );
__declspec(implementation_key(6390)) short OMathDelim::GetBegChar ( );
__declspec(implementation_key(6391)) void OMathDelim::PutBegChar ( short prop );
__declspec(implementation_key(6392)) short OMathDelim::GetSepChar ( );
__declspec(implementation_key(6393)) void OMathDelim::PutSepChar ( short prop );
__declspec(implementation_key(6394)) short OMathDelim::GetEndChar ( );
__declspec(implementation_key(6395)) void OMathDelim::PutEndChar ( short prop );
__declspec(implementation_key(6396)) VARIANT_BOOL OMathDelim::GetGrow ( );
__declspec(implementation_key(6397)) void OMathDelim::PutGrow ( VARIANT_BOOL prop );
__declspec(implementation_key(6398)) enum WdOMathShapeType OMathDelim::GetShape ( );
__declspec(implementation_key(6399)) void OMathDelim::PutShape ( enum WdOMathShapeType prop );
__declspec(implementation_key(6400)) VARIANT_BOOL OMathDelim::GetNoLeftChar ( );
__declspec(implementation_key(6401)) void OMathDelim::PutNoLeftChar ( VARIANT_BOOL prop );
__declspec(implementation_key(6402)) VARIANT_BOOL OMathDelim::GetNoRightChar ( );
__declspec(implementation_key(6403)) void OMathDelim::PutNoRightChar ( VARIANT_BOOL prop );
__declspec(implementation_key(6404)) _ApplicationPtr OMathEqArray::GetApplication ( );
__declspec(implementation_key(6405)) long OMathEqArray::GetCreator ( );
__declspec(implementation_key(6406)) IDispatchPtr OMathEqArray::GetParent ( );
__declspec(implementation_key(6407)) OMathArgsPtr OMathEqArray::GetE ( );
__declspec(implementation_key(6408)) VARIANT_BOOL OMathEqArray::GetMaxDist ( );
__declspec(implementation_key(6409)) void OMathEqArray::PutMaxDist ( VARIANT_BOOL prop );
__declspec(implementation_key(6410)) VARIANT_BOOL OMathEqArray::GetObjDist ( );
__declspec(implementation_key(6411)) void OMathEqArray::PutObjDist ( VARIANT_BOOL prop );
__declspec(implementation_key(6412)) enum WdOMathVertAlignType OMathEqArray::GetAlign ( );
__declspec(implementation_key(6413)) void OMathEqArray::PutAlign ( enum WdOMathVertAlignType prop );
__declspec(implementation_key(6414)) enum WdOMathSpacingRule OMathEqArray::GetRowSpacingRule ( );
__declspec(implementation_key(6415)) void OMathEqArray::PutRowSpacingRule ( enum WdOMathSpacingRule prop );
__declspec(implementation_key(6416)) long OMathEqArray::GetRowSpacing ( );
__declspec(implementation_key(6417)) void OMathEqArray::PutRowSpacing ( long prop );
__declspec(implementation_key(6418)) _ApplicationPtr OMathFrac::GetApplication ( );
__declspec(implementation_key(6419)) long OMathFrac::GetCreator ( );
__declspec(implementation_key(6420)) IDispatchPtr OMathFrac::GetParent ( );
__declspec(implementation_key(6421)) OMathPtr OMathFrac::GetNum ( );
__declspec(implementation_key(6422)) OMathPtr OMathFrac::GetDen ( );
__declspec(implementation_key(6423)) enum WdOMathFracType OMathFrac::GetType ( );
__declspec(implementation_key(6424)) void OMathFrac::PutType ( enum WdOMathFracType prop );
__declspec(implementation_key(6425)) _ApplicationPtr OMathFunc::GetApplication ( );
__declspec(implementation_key(6426)) long OMathFunc::GetCreator ( );
__declspec(implementation_key(6427)) IDispatchPtr OMathFunc::GetParent ( );
__declspec(implementation_key(6428)) OMathPtr OMathFunc::GetFName ( );
__declspec(implementation_key(6429)) OMathPtr OMathFunc::GetE ( );
__declspec(implementation_key(6430)) _ApplicationPtr OMathGroupChar::GetApplication ( );
__declspec(implementation_key(6431)) long OMathGroupChar::GetCreator ( );
__declspec(implementation_key(6432)) IDispatchPtr OMathGroupChar::GetParent ( );
__declspec(implementation_key(6433)) OMathPtr OMathGroupChar::GetE ( );
__declspec(implementation_key(6434)) short OMathGroupChar::GetChar ( );
__declspec(implementation_key(6435)) void OMathGroupChar::PutChar ( short prop );
__declspec(implementation_key(6436)) VARIANT_BOOL OMathGroupChar::GetCharTop ( );
__declspec(implementation_key(6437)) void OMathGroupChar::PutCharTop ( VARIANT_BOOL prop );
__declspec(implementation_key(6438)) VARIANT_BOOL OMathGroupChar::GetAlignTop ( );
__declspec(implementation_key(6439)) void OMathGroupChar::PutAlignTop ( VARIANT_BOOL prop );
__declspec(implementation_key(6440)) _ApplicationPtr OMathMatRow::GetApplication ( );
__declspec(implementation_key(6441)) long OMathMatRow::GetCreator ( );
__declspec(implementation_key(6442)) IDispatchPtr OMathMatRow::GetParent ( );
__declspec(implementation_key(6443)) OMathArgsPtr OMathMatRow::GetArgs ( );
__declspec(implementation_key(6444)) long OMathMatRow::GetRowIndex ( );
__declspec(implementation_key(6445)) HRESULT OMathMatRow::Delete ( );
__declspec(implementation_key(6446)) IUnknownPtr OMathMatRows::Get_NewEnum ( );
__declspec(implementation_key(6447)) _ApplicationPtr OMathMatRows::GetApplication ( );
__declspec(implementation_key(6448)) long OMathMatRows::GetCreator ( );
__declspec(implementation_key(6449)) IDispatchPtr OMathMatRows::GetParent ( );
__declspec(implementation_key(6450)) long OMathMatRows::GetCount ( );
__declspec(implementation_key(6451)) OMathMatRowPtr OMathMatRows::Item ( long Index );
__declspec(implementation_key(6452)) OMathMatRowPtr OMathMatRows::Add ( VARIANT * BeforeRow );
__declspec(implementation_key(6453)) _ApplicationPtr OMathMatCol::GetApplication ( );
__declspec(implementation_key(6454)) long OMathMatCol::GetCreator ( );
__declspec(implementation_key(6455)) IDispatchPtr OMathMatCol::GetParent ( );
__declspec(implementation_key(6456)) OMathArgsPtr OMathMatCol::GetArgs ( );
__declspec(implementation_key(6457)) long OMathMatCol::GetColIndex ( );
__declspec(implementation_key(6458)) enum WdOMathHorizAlignType OMathMatCol::GetAlign ( );
__declspec(implementation_key(6459)) void OMathMatCol::PutAlign ( enum WdOMathHorizAlignType prop );
__declspec(implementation_key(6460)) HRESULT OMathMatCol::Delete ( );
__declspec(implementation_key(6461)) IUnknownPtr OMathMatCols::Get_NewEnum ( );
__declspec(implementation_key(6462)) _ApplicationPtr OMathMatCols::GetApplication ( );
__declspec(implementation_key(6463)) long OMathMatCols::GetCreator ( );
__declspec(implementation_key(6464)) IDispatchPtr OMathMatCols::GetParent ( );
__declspec(implementation_key(6465)) long OMathMatCols::GetCount ( );
__declspec(implementation_key(6466)) OMathMatColPtr OMathMatCols::Item ( long Index );
__declspec(implementation_key(6467)) OMathMatColPtr OMathMatCols::Add ( VARIANT * BeforeCol );
__declspec(implementation_key(6468)) _ApplicationPtr OMathMat::GetApplication ( );
__declspec(implementation_key(6469)) long OMathMat::GetCreator ( );
__declspec(implementation_key(6470)) IDispatchPtr OMathMat::GetParent ( );
__declspec(implementation_key(6471)) OMathMatRowsPtr OMathMat::GetRows ( );
__declspec(implementation_key(6472)) OMathMatColsPtr OMathMat::GetCols ( );
__declspec(implementation_key(6473)) OMathPtr OMathMat::GetCell ( long Row, long Col );
__declspec(implementation_key(6474)) enum WdOMathVertAlignType OMathMat::GetAlign ( );
__declspec(implementation_key(6475)) void OMathMat::PutAlign ( enum WdOMathVertAlignType prop );
__declspec(implementation_key(6476)) VARIANT_BOOL OMathMat::GetPlcHoldHidden ( );
__declspec(implementation_key(6477)) void OMathMat::PutPlcHoldHidden ( VARIANT_BOOL prop );
__declspec(implementation_key(6478)) enum WdOMathSpacingRule OMathMat::GetRowSpacingRule ( );
__declspec(implementation_key(6479)) void OMathMat::PutRowSpacingRule ( enum WdOMathSpacingRule prop );
__declspec(implementation_key(6480)) long OMathMat::GetRowSpacing ( );
__declspec(implementation_key(6481)) void OMathMat::PutRowSpacing ( long prop );
__declspec(implementation_key(6482)) long OMathMat::GetColSpacing ( );
__declspec(implementation_key(6483)) void OMathMat::PutColSpacing ( long prop );
__declspec(implementation_key(6484)) enum WdOMathSpacingRule OMathMat::GetColGapRule ( );
__declspec(implementation_key(6485)) void OMathMat::PutColGapRule ( enum WdOMathSpacingRule prop );
__declspec(implementation_key(6486)) long OMathMat::GetColGap ( );
__declspec(implementation_key(6487)) void OMathMat::PutColGap ( long prop );
__declspec(implementation_key(6488)) _ApplicationPtr OMathNary::GetApplication ( );
__declspec(implementation_key(6489)) long OMathNary::GetCreator ( );
__declspec(implementation_key(6490)) IDispatchPtr OMathNary::GetParent ( );
__declspec(implementation_key(6491)) OMathPtr OMathNary::GetSub ( );
__declspec(implementation_key(6492)) OMathPtr OMathNary::GetSup ( );
__declspec(implementation_key(6493)) OMathPtr OMathNary::GetE ( );
__declspec(implementation_key(6494)) short OMathNary::GetChar ( );
__declspec(implementation_key(6495)) void OMathNary::PutChar ( short prop );
__declspec(implementation_key(6496)) VARIANT_BOOL OMathNary::GetGrow ( );
__declspec(implementation_key(6497)) void OMathNary::PutGrow ( VARIANT_BOOL prop );
__declspec(implementation_key(6498)) VARIANT_BOOL OMathNary::GetSubSupLim ( );
__declspec(implementation_key(6499)) void OMathNary::PutSubSupLim ( VARIANT_BOOL prop );
__declspec(implementation_key(6500)) VARIANT_BOOL OMathNary::GetHideSub ( );
__declspec(implementation_key(6501)) void OMathNary::PutHideSub ( VARIANT_BOOL prop );
__declspec(implementation_key(6502)) VARIANT_BOOL OMathNary::GetHideSup ( );
__declspec(implementation_key(6503)) void OMathNary::PutHideSup ( VARIANT_BOOL prop );
__declspec(implementation_key(6504)) _ApplicationPtr OMathPhantom::GetApplication ( );
__declspec(implementation_key(6505)) long OMathPhantom::GetCreator ( );
__declspec(implementation_key(6506)) IDispatchPtr OMathPhantom::GetParent ( );
__declspec(implementation_key(6507)) OMathPtr OMathPhantom::GetE ( );
__declspec(implementation_key(6508)) VARIANT_BOOL OMathPhantom::GetShow ( );
__declspec(implementation_key(6509)) void OMathPhantom::PutShow ( VARIANT_BOOL prop );
__declspec(implementation_key(6510)) VARIANT_BOOL OMathPhantom::GetZeroWid ( );
__declspec(implementation_key(6511)) void OMathPhantom::PutZeroWid ( VARIANT_BOOL prop );
__declspec(implementation_key(6512)) VARIANT_BOOL OMathPhantom::GetZeroAsc ( );
__declspec(implementation_key(6513)) void OMathPhantom::PutZeroAsc ( VARIANT_BOOL prop );
__declspec(implementation_key(6514)) VARIANT_BOOL OMathPhantom::GetZeroDesc ( );
__declspec(implementation_key(6515)) void OMathPhantom::PutZeroDesc ( VARIANT_BOOL prop );
__declspec(implementation_key(6516)) VARIANT_BOOL OMathPhantom::GetTransp ( );
__declspec(implementation_key(6517)) void OMathPhantom::PutTransp ( VARIANT_BOOL prop );
__declspec(implementation_key(6518)) VARIANT_BOOL OMathPhantom::GetSmash ( );
__declspec(implementation_key(6519)) void OMathPhantom::PutSmash ( VARIANT_BOOL prop );
__declspec(implementation_key(6520)) _ApplicationPtr OMathRad::GetApplication ( );
__declspec(implementation_key(6521)) long OMathRad::GetCreator ( );
__declspec(implementation_key(6522)) IDispatchPtr OMathRad::GetParent ( );
__declspec(implementation_key(6523)) OMathPtr OMathRad::GetDeg ( );
__declspec(implementation_key(6524)) OMathPtr OMathRad::GetE ( );
__declspec(implementation_key(6525)) VARIANT_BOOL OMathRad::GetHideDeg ( );
__declspec(implementation_key(6526)) void OMathRad::PutHideDeg ( VARIANT_BOOL prop );
__declspec(implementation_key(6527)) _ApplicationPtr OMathScrSub::GetApplication ( );
__declspec(implementation_key(6528)) long OMathScrSub::GetCreator ( );
__declspec(implementation_key(6529)) IDispatchPtr OMathScrSub::GetParent ( );
__declspec(implementation_key(6530)) OMathPtr OMathScrSub::GetE ( );
__declspec(implementation_key(6531)) OMathPtr OMathScrSub::GetSub ( );
__declspec(implementation_key(6532)) _ApplicationPtr OMathScrSup::GetApplication ( );
__declspec(implementation_key(6533)) long OMathScrSup::GetCreator ( );
__declspec(implementation_key(6534)) IDispatchPtr OMathScrSup::GetParent ( );
__declspec(implementation_key(6535)) OMathPtr OMathScrSup::GetE ( );
__declspec(implementation_key(6536)) OMathPtr OMathScrSup::GetSup ( );
__declspec(implementation_key(6537)) IUnknownPtr OMathFunctions::Get_NewEnum ( );
__declspec(implementation_key(6538)) _ApplicationPtr OMathFunctions::GetApplication ( );
__declspec(implementation_key(6539)) long OMathFunctions::GetCreator ( );
__declspec(implementation_key(6540)) IDispatchPtr OMathFunctions::GetParent ( );
__declspec(implementation_key(6541)) long OMathFunctions::GetCount ( );
__declspec(implementation_key(6542)) OMathFunctionPtr OMathFunctions::Item ( long Index );
__declspec(implementation_key(6543)) OMathFunctionPtr OMathFunctions::Add ( struct Range * Range, enum WdOMathFunctionType Type, VARIANT * NumArgs, VARIANT * NumCols );
__declspec(implementation_key(6544)) enum WdOMathFunctionType OMathFunction::GetType ( );
__declspec(implementation_key(6545)) _ApplicationPtr OMathFunction::GetApplication ( );
__declspec(implementation_key(6546)) long OMathFunction::GetCreator ( );
__declspec(implementation_key(6547)) IDispatchPtr OMathFunction::GetParent ( );
__declspec(implementation_key(6548)) RangePtr OMathFunction::GetRange ( );
__declspec(implementation_key(6549)) OMathArgsPtr OMathFunction::GetArgs ( );
__declspec(implementation_key(6550)) OMathAccPtr OMathFunction::GetAcc ( );
__declspec(implementation_key(6551)) OMathBarPtr OMathFunction::GetBar ( );
__declspec(implementation_key(6552)) OMathBoxPtr OMathFunction::GetBox ( );
__declspec(implementation_key(6553)) OMathBorderBoxPtr OMathFunction::GetBorderBox ( );
__declspec(implementation_key(6554)) OMathDelimPtr OMathFunction::GetDelim ( );
__declspec(implementation_key(6555)) OMathEqArrayPtr OMathFunction::GetEqArray ( );
__declspec(implementation_key(6556)) OMathFracPtr OMathFunction::GetFrac ( );
__declspec(implementation_key(6557)) OMathFuncPtr OMathFunction::GetFunc ( );
__declspec(implementation_key(6558)) OMathGroupCharPtr OMathFunction::GetGroupChar ( );
__declspec(implementation_key(6559)) OMathLimLowPtr OMathFunction::GetLimLow ( );
__declspec(implementation_key(6560)) OMathLimUppPtr OMathFunction::GetLimUpp ( );
__declspec(implementation_key(6561)) OMathMatPtr OMathFunction::GetMat ( );
__declspec(implementation_key(6562)) OMathNaryPtr OMathFunction::GetNary ( );
__declspec(implementation_key(6563)) OMathPhantomPtr OMathFunction::GetPhantom ( );
__declspec(implementation_key(6564)) OMathScrPrePtr OMathFunction::GetScrPre ( );
__declspec(implementation_key(6565)) OMathRadPtr OMathFunction::GetRad ( );
__declspec(implementation_key(6566)) OMathScrSubPtr OMathFunction::GetScrSub ( );
__declspec(implementation_key(6567)) OMathScrSubSupPtr OMathFunction::GetScrSubSup ( );
__declspec(implementation_key(6568)) OMathScrSupPtr OMathFunction::GetScrSup ( );
__declspec(implementation_key(6569)) OMathPtr OMathFunction::GetOMath ( );
__declspec(implementation_key(6570)) OMathFunctionPtr OMathFunction::Remove ( );
__declspec(implementation_key(6571)) _ApplicationPtr OMathLimLow::GetApplication ( );
__declspec(implementation_key(6572)) long OMathLimLow::GetCreator ( );
__declspec(implementation_key(6573)) IDispatchPtr OMathLimLow::GetParent ( );
__declspec(implementation_key(6574)) OMathPtr OMathLimLow::GetE ( );
__declspec(implementation_key(6575)) OMathPtr OMathLimLow::GetLim ( );
__declspec(implementation_key(6576)) OMathFunctionPtr OMathLimLow::ToLimUpp ( );
__declspec(implementation_key(6577)) _ApplicationPtr OMathLimUpp::GetApplication ( );
__declspec(implementation_key(6578)) long OMathLimUpp::GetCreator ( );
__declspec(implementation_key(6579)) IDispatchPtr OMathLimUpp::GetParent ( );
__declspec(implementation_key(6580)) OMathPtr OMathLimUpp::GetE ( );
__declspec(implementation_key(6581)) OMathPtr OMathLimUpp::GetLim ( );
__declspec(implementation_key(6582)) OMathFunctionPtr OMathLimUpp::ToLimLow ( );
__declspec(implementation_key(6583)) _ApplicationPtr OMathScrPre::GetApplication ( );
__declspec(implementation_key(6584)) long OMathScrPre::GetCreator ( );
__declspec(implementation_key(6585)) IDispatchPtr OMathScrPre::GetParent ( );
__declspec(implementation_key(6586)) OMathPtr OMathScrPre::GetSub ( );
__declspec(implementation_key(6587)) OMathPtr OMathScrPre::GetSup ( );
__declspec(implementation_key(6588)) OMathPtr OMathScrPre::GetE ( );
__declspec(implementation_key(6589)) OMathFunctionPtr OMathScrPre::ToScrSubSup ( );
__declspec(implementation_key(6590)) _ApplicationPtr OMathScrSubSup::GetApplication ( );
__declspec(implementation_key(6591)) long OMathScrSubSup::GetCreator ( );
__declspec(implementation_key(6592)) IDispatchPtr OMathScrSubSup::GetParent ( );
__declspec(implementation_key(6593)) OMathPtr OMathScrSubSup::GetE ( );
__declspec(implementation_key(6594)) OMathPtr OMathScrSubSup::GetSub ( );
__declspec(implementation_key(6595)) OMathPtr OMathScrSubSup::GetSup ( );
__declspec(implementation_key(6596)) VARIANT_BOOL OMathScrSubSup::GetAlignScripts ( );
__declspec(implementation_key(6597)) void OMathScrSubSup::PutAlignScripts ( VARIANT_BOOL prop );
__declspec(implementation_key(6598)) OMathFunctionPtr OMathScrSubSup::RemoveSub ( );
__declspec(implementation_key(6599)) OMathFunctionPtr OMathScrSubSup::RemoveSup ( );
__declspec(implementation_key(6600)) OMathFunctionPtr OMathScrSubSup::ToScrPre ( );
__declspec(implementation_key(6601)) IUnknownPtr ContentControls::Get_NewEnum ( );
__declspec(implementation_key(6602)) _ApplicationPtr ContentControls::GetApplication ( );
__declspec(implementation_key(6603)) long ContentControls::GetCreator ( );
__declspec(implementation_key(6604)) IDispatchPtr ContentControls::GetParent ( );
__declspec(implementation_key(6605)) long ContentControls::GetCount ( );
__declspec(implementation_key(6606)) ContentControlPtr ContentControls::Item ( VARIANT * Index );
__declspec(implementation_key(6607)) ContentControlPtr ContentControls::Add ( enum WdContentControlType Type, VARIANT * Range );
__declspec(implementation_key(6608)) _ApplicationPtr ContentControl::GetApplication ( );
__declspec(implementation_key(6609)) long ContentControl::GetCreator ( );
__declspec(implementation_key(6610)) IDispatchPtr ContentControl::GetParent ( );
__declspec(implementation_key(6611)) RangePtr ContentControl::GetRange ( );
__declspec(implementation_key(6612)) VARIANT_BOOL ContentControl::GetLockContentControl ( );
__declspec(implementation_key(6613)) void ContentControl::PutLockContentControl ( VARIANT_BOOL prop );
__declspec(implementation_key(6614)) VARIANT_BOOL ContentControl::GetLockContents ( );
__declspec(implementation_key(6615)) void ContentControl::PutLockContents ( VARIANT_BOOL prop );
__declspec(implementation_key(6616)) XMLMappingPtr ContentControl::GetXMLMapping ( );
__declspec(implementation_key(6617)) enum WdContentControlType ContentControl::GetType ( );
__declspec(implementation_key(6618)) void ContentControl::PutType ( enum WdContentControlType prop );
__declspec(implementation_key(6619)) HRESULT ContentControl::Copy ( );
__declspec(implementation_key(6620)) HRESULT ContentControl::Cut ( );
__declspec(implementation_key(6621)) HRESULT ContentControl::Delete ( VARIANT_BOOL DeleteContents );
__declspec(implementation_key(6622)) ContentControlListEntriesPtr ContentControl::GetDropdownListEntries ( );
__declspec(implementation_key(6623)) BuildingBlockPtr ContentControl::GetPlaceholderText ( );
__declspec(implementation_key(6624)) HRESULT ContentControl::SetPlaceholderText ( struct BuildingBlock * BuildingBlock, struct Range * Range, _bstr_t Text );
__declspec(implementation_key(6625)) _bstr_t ContentControl::GetTitle ( );
__declspec(implementation_key(6626)) void ContentControl::PutTitle ( _bstr_t prop );
__declspec(implementation_key(6627)) _bstr_t ContentControl::GetDateDisplayFormat ( );
__declspec(implementation_key(6628)) void ContentControl::PutDateDisplayFormat ( _bstr_t prop );
__declspec(implementation_key(6629)) VARIANT_BOOL ContentControl::GetMultiLine ( );
__declspec(implementation_key(6630)) void ContentControl::PutMultiLine ( VARIANT_BOOL prop );
__declspec(implementation_key(6631)) ContentControlPtr ContentControl::GetParentContentControl ( );
__declspec(implementation_key(6632)) VARIANT_BOOL ContentControl::GetTemporary ( );
__declspec(implementation_key(6633)) void ContentControl::PutTemporary ( VARIANT_BOOL prop );
__declspec(implementation_key(6634)) _bstr_t ContentControl::GetID ( );
__declspec(implementation_key(6635)) VARIANT_BOOL ContentControl::GetShowingPlaceholderText ( );
__declspec(implementation_key(6636)) enum WdContentControlDateStorageFormat ContentControl::GetDateStorageFormat ( );
__declspec(implementation_key(6637)) void ContentControl::PutDateStorageFormat ( enum WdContentControlDateStorageFormat prop );
__declspec(implementation_key(6638)) enum WdBuildingBlockTypes ContentControl::GetBuildingBlockType ( );
__declspec(implementation_key(6639)) void ContentControl::PutBuildingBlockType ( enum WdBuildingBlockTypes prop );
__declspec(implementation_key(6640)) _bstr_t ContentControl::GetBuildingBlockCategory ( );
__declspec(implementation_key(6641)) void ContentControl::PutBuildingBlockCategory ( _bstr_t prop );
__declspec(implementation_key(6642)) enum WdLanguageID ContentControl::GetDateDisplayLocale ( );
__declspec(implementation_key(6643)) void ContentControl::PutDateDisplayLocale ( enum WdLanguageID prop );
__declspec(implementation_key(6644)) HRESULT ContentControl::Ungroup ( );
__declspec(implementation_key(6645)) _variant_t ContentControl::GetDefaultTextStyle ( );
__declspec(implementation_key(6646)) void ContentControl::PutDefaultTextStyle ( VARIANT * prop );
__declspec(implementation_key(6647)) enum WdCalendarType ContentControl::GetDateCalendarType ( );
__declspec(implementation_key(6648)) void ContentControl::PutDateCalendarType ( enum WdCalendarType prop );
__declspec(implementation_key(6649)) _bstr_t ContentControl::GetTag ( );
__declspec(implementation_key(6650)) void ContentControl::PutTag ( _bstr_t prop );
__declspec(implementation_key(6651)) _ApplicationPtr BuildingBlockTypes::GetApplication ( );
__declspec(implementation_key(6652)) long BuildingBlockTypes::GetCreator ( );
__declspec(implementation_key(6653)) IDispatchPtr BuildingBlockTypes::GetParent ( );
__declspec(implementation_key(6654)) long BuildingBlockTypes::GetCount ( );
__declspec(implementation_key(6655)) BuildingBlockTypePtr BuildingBlockTypes::Item ( enum WdBuildingBlockTypes Index );
__declspec(implementation_key(6656)) _ApplicationPtr BuildingBlockType::GetApplication ( );
__declspec(implementation_key(6657)) long BuildingBlockType::GetCreator ( );
__declspec(implementation_key(6658)) IDispatchPtr BuildingBlockType::GetParent ( );
__declspec(implementation_key(6659)) long BuildingBlockType::GetIndex ( );
__declspec(implementation_key(6660)) _bstr_t BuildingBlockType::GetName ( );
__declspec(implementation_key(6661)) CategoriesPtr BuildingBlockType::GetCategories ( );
__declspec(implementation_key(6662)) _ApplicationPtr Categories::GetApplication ( );
__declspec(implementation_key(6663)) long Categories::GetCreator ( );
__declspec(implementation_key(6664)) IDispatchPtr Categories::GetParent ( );
__declspec(implementation_key(6665)) long Categories::GetCount ( );
__declspec(implementation_key(6666)) CategoryPtr Categories::Item ( VARIANT * Index );
__declspec(implementation_key(6667)) _ApplicationPtr Category::GetApplication ( );
__declspec(implementation_key(6668)) long Category::GetCreator ( );
__declspec(implementation_key(6669)) IDispatchPtr Category::GetParent ( );
__declspec(implementation_key(6670)) long Category::GetIndex ( );
__declspec(implementation_key(6671)) _bstr_t Category::GetName ( );
__declspec(implementation_key(6672)) BuildingBlocksPtr Category::GetBuildingBlocks ( );
__declspec(implementation_key(6673)) BuildingBlockTypePtr Category::GetType ( );
__declspec(implementation_key(6674)) _ApplicationPtr BuildingBlock::GetApplication ( );
__declspec(implementation_key(6675)) long BuildingBlock::GetCreator ( );
__declspec(implementation_key(6676)) IDispatchPtr BuildingBlock::GetParent ( );
__declspec(implementation_key(6677)) long BuildingBlock::GetIndex ( );
__declspec(implementation_key(6678)) _bstr_t BuildingBlock::GetName ( );
__declspec(implementation_key(6679)) void BuildingBlock::PutName ( _bstr_t prop );
__declspec(implementation_key(6680)) BuildingBlockTypePtr BuildingBlock::GetType ( );
__declspec(implementation_key(6681)) _bstr_t BuildingBlock::GetDescription ( );
__declspec(implementation_key(6682)) void BuildingBlock::PutDescription ( _bstr_t prop );
__declspec(implementation_key(6683)) _bstr_t BuildingBlock::GetID ( );
__declspec(implementation_key(6684)) CategoryPtr BuildingBlock::GetCategory ( );
__declspec(implementation_key(6685)) _bstr_t BuildingBlock::GetValue ( );
__declspec(implementation_key(6686)) void BuildingBlock::PutValue ( _bstr_t prop );
__declspec(implementation_key(6687)) long BuildingBlock::GetInsertOptions ( );
__declspec(implementation_key(6688)) void BuildingBlock::PutInsertOptions ( long prop );
__declspec(implementation_key(6689)) HRESULT BuildingBlock::Delete ( );
__declspec(implementation_key(6690)) RangePtr BuildingBlock::Insert ( struct Range * Where, VARIANT * RichText );
__declspec(implementation_key(6691)) _ApplicationPtr BuildingBlocks::GetApplication ( );
__declspec(implementation_key(6692)) long BuildingBlocks::GetCreator ( );
__declspec(implementation_key(6693)) IDispatchPtr BuildingBlocks::GetParent ( );
__declspec(implementation_key(6694)) long BuildingBlocks::GetCount ( );
__declspec(implementation_key(6695)) BuildingBlockPtr BuildingBlocks::Item ( VARIANT * Index );
__declspec(implementation_key(6696)) BuildingBlockPtr BuildingBlocks::Add ( _bstr_t Name, struct Range * Range, VARIANT * Description, enum WdDocPartInsertOptions InsertOptions );
__declspec(implementation_key(6697)) _ApplicationPtr BuildingBlockEntries::GetApplication ( );
__declspec(implementation_key(6698)) long BuildingBlockEntries::GetCreator ( );
__declspec(implementation_key(6699)) IDispatchPtr BuildingBlockEntries::GetParent ( );
__declspec(implementation_key(6700)) long BuildingBlockEntries::GetCount ( );
__declspec(implementation_key(6701)) BuildingBlockPtr BuildingBlockEntries::Item ( VARIANT * Index );
__declspec(implementation_key(6702)) BuildingBlockPtr BuildingBlockEntries::Add ( _bstr_t Name, enum WdBuildingBlockTypes Type, _bstr_t Category, struct Range * Range, VARIANT * Description, enum WdDocPartInsertOptions InsertOptions );
#pragma stop_map_region

} // namespace MSWord

#pragma pack(pop)
