warning: LF will be replaced by CRLF in vessel_viewer/viewerwidget.h.
The file will have its original line endings in your working directory
[1mdiff --git a/vessel_viewer/viewerwidget.h b/vessel_viewer/viewerwidget.h[m
[1mindex 7254138..a2a2baf 100644[m
[1m--- a/vessel_viewer/viewerwidget.h[m
[1m+++ b/vessel_viewer/viewerwidget.h[m
[36m@@ -3,6 +3,7 @@[m
 [m
 #include <QWidget>[m
 #include <QThread>[m
[32m+[m[32m#include <QTimer>[m
 #include <osgViewer/Viewer>[m
 [m
 class RenderThread : public QThread[m
[36m@@ -30,6 +31,8 @@[m [mprotected:[m
 };[m
 [m
 [m
[32m+[m
[32m+[m
 class ViewerWidget : public QWidget[m
 {[m
     Q_OBJECT[m
[36m@@ -38,9 +41,59 @@[m [mpublic:[m
 	void closeLocalEvent(QCloseEvent *event);[m
 protected:[m
     virtual void closeEvent(QCloseEvent *event);[m
[32m+[m[32m//	virtual void paintEvent(QPaintEvent* event);[m
 protected:[m
[31m-    osgViewer::Viewer m_viewer;[m
[32m+[m
[32m+[m	[32mclass CLocalView:public osgViewer::Viewer[m
[32m+[m	[32m{[m
[32m+[m	[32mpublic:[m
[32m+[m		[32mCLocalView() {}[m
[32m+[m		[32mvirtual ~CLocalView() {}[m
[32m+[m
[32m+[m		[32mvirtual void setUpThreading()[m[41m [m
[32m+[m		[32m{[m
[32m+[m			[32m//Contexts contexts;[m
[32m+[m			[32m//getContexts(contexts);[m
[32m+[m
[32m+[m			[32m//if (_threadingModel == SingleThreaded)[m
[32m+[m			[32m//{[m
[32m+[m			[32m//	if (_threadsRunning) stopThreading();[m
[32m+[m			[32m//	else[m
[32m+[m			[32m//	{[m
[32m+[m			[32m//		// we'll set processor affinity here to help single threaded apps[m
[32m+[m			[32m//		// with multiple processor cores, and using the database pager.[m
[32m+[m			[32m//		int numProcessors = OpenThreads::GetNumberOfProcessors();[m
[32m+[m			[32m//		bool affinity = numProcessors>1;[m
[32m+[m			[32m//		if (affinity)[m
[32m+[m			[32m//		{[m
[32m+[m			[32m//			OpenThreads::SetProcessorAffinityOfCurrentThread(0);[m
[32m+[m
[32m+[m			[32m//			Scenes scenes;[m
[32m+[m			[32m//			getScenes(scenes);[m
[32m+[m
[32m+[m			[32m//			for (Scenes::iterator scitr = scenes.begin();[m
[32m+[m			[32m//				scitr != scenes.end();[m
[32m+[m			[32m//				++scitr)[m
[32m+[m			[32m//			{[m
[32m+[m			[32m//				if ((*scitr)->getSceneData())[m
[32m+[m			[32m//				{[m
[32m+[m			[32m//					// update the scene graph so that it has enough GL object buffer memory for the graphics contexts that will be using it.[m
[32m+[m			[32m//					(*scitr)->getSceneData()->resizeGLObjectBuffers(osg::DisplaySettings::instance()->getMaxNumberOfGraphicsContexts());[m
[32m+[m			[32m//				}[m
[32m+[m			[32m//			}[m
[32m+[m			[32m//		}[m
[32m+[m			[32m//	}[m
[32m+[m			[32m//}[m
[32m+[m			[32m//else[m
[32m+[m			[32m//{[m
[32m+[m			[32m//	if (!_threadsRunning) startThreading();[m
[32m+[m			[32m//}[m
[32m+[m		[32m}[m
[32m+[m	[32m};[m
[32m+[m
[32m+[m[32m    CLocalView m_viewer;[m
     RenderThread  m_thread;[m
[32m+[m	[32mQTimer m_timer;[m[41m [m
 [m
 public:[m
 	static QWidget* getOsgWiget();[m
